[
  {
    "label": "nghttp2_session",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "nghttp2_session"
  },
  {
    "label": "nghttp2_session",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "nghttp2_session"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "is"
  },
  {
    "label": "fields",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "fields"
  },
  {
    "label": "nghttp2_rcbuf",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "nghttp2_rcbuf"
  },
  {
    "label": "nghttp2_rcbuf",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "nghttp2_rcbuf"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "is"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "is"
  },
  {
    "label": "defines",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "defines"
  },
  {
    "label": "represents",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "represents"
  },
  {
    "label": "nghttp2_session_callbacks",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "nghttp2_session_callbacks"
  },
  {
    "label": "nghttp2_session_callbacks",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "nghttp2_session_callbacks"
  },
  {
    "label": "nghttp2_option",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "nghttp2_option"
  },
  {
    "label": "nghttp2_option",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "nghttp2_option"
  },
  {
    "label": "with",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "with"
  },
  {
    "label": "nghttp2_hd_deflater",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "nghttp2_hd_deflater"
  },
  {
    "label": "nghttp2_hd_deflater",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "nghttp2_hd_deflater"
  },
  {
    "label": "nghttp2_hd_inflater",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "nghttp2_hd_inflater"
  },
  {
    "label": "nghttp2_hd_inflater",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "nghttp2_hd_inflater"
  },
  {
    "label": "nghttp2_stream",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "nghttp2_stream"
  },
  {
    "label": "nghttp2_stream",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "nghttp2_stream"
  },
  {
    "label": "nghttp2_rcbuf_incref()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "nghttp2_rcbuf_incref(nghttp2_rcbuf *rcbuf)"
  },
  {
    "label": "nghttp2_rcbuf_decref()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "nghttp2_rcbuf_decref(nghttp2_rcbuf *rcbuf)"
  },
  {
    "label": "nghttp2_rcbuf_get_buf()",
    "kind": "Method",
    "detail": "Function (nghttp2_vec)",
    "insertText": "nghttp2_rcbuf_get_buf(nghttp2_rcbuf *rcbuf)"
  },
  {
    "label": "nghttp2_rcbuf_is_static()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "nghttp2_rcbuf_is_static(const nghttp2_rcbuf *rcbuf)"
  },
  {
    "label": "nghttp2_session_callbacks_new()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "nghttp2_session_callbacks_new(nghttp2_session_callbacks **callbacks_ptr)"
  },
  {
    "label": "nghttp2_session_callbacks_del()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "nghttp2_session_callbacks_del(nghttp2_session_callbacks *callbacks)"
  },
  {
    "label": "nghttp2_session_callbacks_set_send_callback()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "nghttp2_session_callbacks_set_send_callback(\n    nghttp2_session_callbacks *cbs, nghttp2_send_callback send_callback)"
  },
  {
    "label": "nghttp2_session_callbacks_set_recv_callback()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "nghttp2_session_callbacks_set_recv_callback(\n    nghttp2_session_callbacks *cbs, nghttp2_recv_callback recv_callback)"
  },
  {
    "label": "nghttp2_session_callbacks_set_on_frame_recv_callback()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "nghttp2_session_callbacks_set_on_frame_recv_callback(\n    nghttp2_session_callbacks *cbs,\n    nghttp2_on_frame_recv_callback on_frame_recv_callback)"
  },
  {
    "label": "nghttp2_session_callbacks_set_on_invalid_frame_recv_callback()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "nghttp2_session_callbacks_set_on_invalid_frame_recv_callback(\n    nghttp2_session_callbacks *cbs,\n    nghttp2_on_invalid_frame_recv_callback on_invalid_frame_recv_callback)"
  },
  {
    "label": "nghttp2_session_callbacks_set_on_data_chunk_recv_callback()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "nghttp2_session_callbacks_set_on_data_chunk_recv_callback(\n    nghttp2_session_callbacks *cbs,\n    nghttp2_on_data_chunk_recv_callback on_data_chunk_recv_callback)"
  },
  {
    "label": "nghttp2_session_callbacks_set_before_frame_send_callback()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "nghttp2_session_callbacks_set_before_frame_send_callback(\n    nghttp2_session_callbacks *cbs,\n    nghttp2_before_frame_send_callback before_frame_send_callback)"
  },
  {
    "label": "nghttp2_session_callbacks_set_on_frame_send_callback()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "nghttp2_session_callbacks_set_on_frame_send_callback(\n    nghttp2_session_callbacks *cbs,\n    nghttp2_on_frame_send_callback on_frame_send_callback)"
  },
  {
    "label": "nghttp2_session_callbacks_set_on_frame_not_send_callback()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "nghttp2_session_callbacks_set_on_frame_not_send_callback(\n    nghttp2_session_callbacks *cbs,\n    nghttp2_on_frame_not_send_callback on_frame_not_send_callback)"
  },
  {
    "label": "nghttp2_session_callbacks_set_on_stream_close_callback()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "nghttp2_session_callbacks_set_on_stream_close_callback(\n    nghttp2_session_callbacks *cbs,\n    nghttp2_on_stream_close_callback on_stream_close_callback)"
  },
  {
    "label": "nghttp2_session_callbacks_set_on_begin_headers_callback()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "nghttp2_session_callbacks_set_on_begin_headers_callback(\n    nghttp2_session_callbacks *cbs,\n    nghttp2_on_begin_headers_callback on_begin_headers_callback)"
  },
  {
    "label": "nghttp2_session_callbacks_set_on_header_callback()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "nghttp2_session_callbacks_set_on_header_callback(\n    nghttp2_session_callbacks *cbs,\n    nghttp2_on_header_callback on_header_callback)"
  },
  {
    "label": "nghttp2_session_callbacks_set_on_header_callback2()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "nghttp2_session_callbacks_set_on_header_callback2(\n    nghttp2_session_callbacks *cbs,\n    nghttp2_on_header_callback2 on_header_callback2)"
  },
  {
    "label": "nghttp2_session_callbacks_set_on_invalid_header_callback()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "nghttp2_session_callbacks_set_on_invalid_header_callback(\n    nghttp2_session_callbacks *cbs,\n    nghttp2_on_invalid_header_callback on_invalid_header_callback)"
  },
  {
    "label": "nghttp2_session_callbacks_set_on_invalid_header_callback2()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "nghttp2_session_callbacks_set_on_invalid_header_callback2(\n    nghttp2_session_callbacks *cbs,\n    nghttp2_on_invalid_header_callback2 on_invalid_header_callback2)"
  },
  {
    "label": "nghttp2_session_callbacks_set_select_padding_callback()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "nghttp2_session_callbacks_set_select_padding_callback(\n    nghttp2_session_callbacks *cbs,\n    nghttp2_select_padding_callback select_padding_callback)"
  },
  {
    "label": "nghttp2_session_callbacks_set_data_source_read_length_callback()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "nghttp2_session_callbacks_set_data_source_read_length_callback(\n    nghttp2_session_callbacks *cbs,\n    nghttp2_data_source_read_length_callback data_source_read_length_callback)"
  },
  {
    "label": "nghttp2_session_callbacks_set_on_begin_frame_callback()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "nghttp2_session_callbacks_set_on_begin_frame_callback(\n    nghttp2_session_callbacks *cbs,\n    nghttp2_on_begin_frame_callback on_begin_frame_callback)"
  },
  {
    "label": "nghttp2_session_callbacks_set_send_data_callback()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "nghttp2_session_callbacks_set_send_data_callback(\n    nghttp2_session_callbacks *cbs,\n    nghttp2_send_data_callback send_data_callback)"
  },
  {
    "label": "nghttp2_session_callbacks_set_pack_extension_callback()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "nghttp2_session_callbacks_set_pack_extension_callback(\n    nghttp2_session_callbacks *cbs,\n    nghttp2_pack_extension_callback pack_extension_callback)"
  },
  {
    "label": "nghttp2_session_callbacks_set_unpack_extension_callback()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "nghttp2_session_callbacks_set_unpack_extension_callback(\n    nghttp2_session_callbacks *cbs,\n    nghttp2_unpack_extension_callback unpack_extension_callback)"
  },
  {
    "label": "nghttp2_session_callbacks_set_on_extension_chunk_recv_callback()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "nghttp2_session_callbacks_set_on_extension_chunk_recv_callback(\n    nghttp2_session_callbacks *cbs,\n    nghttp2_on_extension_chunk_recv_callback on_extension_chunk_recv_callback)"
  },
  {
    "label": "nghttp2_session_callbacks_set_error_callback()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "nghttp2_session_callbacks_set_error_callback(\n    nghttp2_session_callbacks *cbs, nghttp2_error_callback error_callback)"
  },
  {
    "label": "nghttp2_session_callbacks_set_error_callback2()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "nghttp2_session_callbacks_set_error_callback2(\n    nghttp2_session_callbacks *cbs, nghttp2_error_callback2 error_callback2)"
  },
  {
    "label": "my_malloc()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "my_malloc(size)"
  },
  {
    "label": "my_calloc()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "my_calloc(nmemb, size)"
  },
  {
    "label": "my_realloc()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "my_realloc(ptr, size)"
  },
  {
    "label": "nghttp2_option_new()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "nghttp2_option_new(nghttp2_option **option_ptr)"
  },
  {
    "label": "nghttp2_option_del()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "nghttp2_option_del(nghttp2_option *option)"
  },
  {
    "label": "nghttp2_option_set_no_auto_window_update()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "nghttp2_option_set_no_auto_window_update(nghttp2_option *option, int val)"
  },
  {
    "label": "nghttp2_option_set_peer_max_concurrent_streams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "nghttp2_option_set_peer_max_concurrent_streams(nghttp2_option *option,\n                                               uint32_t val)"
  },
  {
    "label": "nghttp2_option_set_no_recv_client_magic()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "nghttp2_option_set_no_recv_client_magic(nghttp2_option *option, int val)"
  },
  {
    "label": "nghttp2_option_set_no_http_messaging()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "nghttp2_option_set_no_http_messaging(nghttp2_option *option,\n                                                         int val)"
  },
  {
    "label": "nghttp2_option_set_max_reserved_remote_streams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "nghttp2_option_set_max_reserved_remote_streams(nghttp2_option *option,\n                                               uint32_t val)"
  },
  {
    "label": "nghttp2_option_set_user_recv_extension_type()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "nghttp2_option_set_user_recv_extension_type(nghttp2_option *option,\n                                            uint8_t type)"
  },
  {
    "label": "nghttp2_option_set_builtin_recv_extension_type()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "nghttp2_option_set_builtin_recv_extension_type(nghttp2_option *option,\n                                               uint8_t type)"
  },
  {
    "label": "nghttp2_option_set_no_auto_ping_ack()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "nghttp2_option_set_no_auto_ping_ack(nghttp2_option *option,\n                                                        int val)"
  },
  {
    "label": "nghttp2_option_set_max_send_header_block_length()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "nghttp2_option_set_max_send_header_block_length(nghttp2_option *option,\n                                                size_t val)"
  },
  {
    "label": "nghttp2_option_set_max_deflate_dynamic_table_size()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "nghttp2_option_set_max_deflate_dynamic_table_size(nghttp2_option *option,\n                                                  size_t val)"
  },
  {
    "label": "nghttp2_option_set_no_closed_streams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "nghttp2_option_set_no_closed_streams(nghttp2_option *option,\n                                                         int val)"
  },
  {
    "label": "nghttp2_option_set_max_outbound_ack()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "nghttp2_option_set_max_outbound_ack(nghttp2_option *option,\n                                                        size_t val)"
  },
  {
    "label": "nghttp2_option_set_max_settings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "nghttp2_option_set_max_settings(nghttp2_option *option,\n                                                    size_t val)"
  },
  {
    "label": "nghttp2_session_client_new()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "nghttp2_session_client_new(nghttp2_session **session_ptr,\n                           const nghttp2_session_callbacks *callbacks,\n                           void *user_data)"
  },
  {
    "label": "nghttp2_session_server_new()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "nghttp2_session_server_new(nghttp2_session **session_ptr,\n                           const nghttp2_session_callbacks *callbacks,\n                           void *user_data)"
  },
  {
    "label": "nghttp2_session_client_new2()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "nghttp2_session_client_new2(nghttp2_session **session_ptr,\n                            const nghttp2_session_callbacks *callbacks,\n                            void *user_data, const nghttp2_option *option)"
  },
  {
    "label": "nghttp2_session_server_new2()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "nghttp2_session_server_new2(nghttp2_session **session_ptr,\n                            const nghttp2_session_callbacks *callbacks,\n                            void *user_data, const nghttp2_option *option)"
  },
  {
    "label": "nghttp2_session_client_new3()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "nghttp2_session_client_new3(\n    nghttp2_session **session_ptr, const nghttp2_session_callbacks *callbacks,\n    void *user_data, const nghttp2_option *option, nghttp2_mem *mem)"
  },
  {
    "label": "nghttp2_session_server_new3()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "nghttp2_session_server_new3(\n    nghttp2_session **session_ptr, const nghttp2_session_callbacks *callbacks,\n    void *user_data, const nghttp2_option *option, nghttp2_mem *mem)"
  },
  {
    "label": "nghttp2_session_del()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "nghttp2_session_del(nghttp2_session *session)"
  },
  {
    "label": "nghttp2_session_send()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "nghttp2_session_send(nghttp2_session *session)"
  },
  {
    "label": "nghttp2_session_mem_send()",
    "kind": "Method",
    "detail": "Function (ssize_t)",
    "insertText": "nghttp2_session_mem_send(nghttp2_session *session,\n                                                const uint8_t **data_ptr)"
  },
  {
    "label": "nghttp2_session_recv()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "nghttp2_session_recv(nghttp2_session *session)"
  },
  {
    "label": "nghttp2_session_mem_recv()",
    "kind": "Method",
    "detail": "Function (ssize_t)",
    "insertText": "nghttp2_session_mem_recv(nghttp2_session *session,\n                                                const uint8_t *in,\n                                                size_t inlen)"
  },
  {
    "label": "nghttp2_session_resume_data()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "nghttp2_session_resume_data(nghttp2_session *session,\n                                               int32_t stream_id)"
  },
  {
    "label": "nghttp2_session_want_read()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "nghttp2_session_want_read(nghttp2_session *session)"
  },
  {
    "label": "nghttp2_session_want_write()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "nghttp2_session_want_write(nghttp2_session *session)"
  },
  {
    "label": "nghttp2_session_set_stream_user_data()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "nghttp2_session_set_stream_user_data(nghttp2_session *session,\n                                     int32_t stream_id, void *stream_user_data)"
  },
  {
    "label": "nghttp2_session_set_user_data()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "nghttp2_session_set_user_data(nghttp2_session *session,\n                                                  void *user_data)"
  },
  {
    "label": "nghttp2_session_get_outbound_queue_size()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "nghttp2_session_get_outbound_queue_size(nghttp2_session *session)"
  },
  {
    "label": "nghttp2_session_get_stream_effective_recv_data_length()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "nghttp2_session_get_stream_effective_recv_data_length(\n    nghttp2_session *session, int32_t stream_id)"
  },
  {
    "label": "nghttp2_session_get_stream_effective_local_window_size()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "nghttp2_session_get_stream_effective_local_window_size(\n    nghttp2_session *session, int32_t stream_id)"
  },
  {
    "label": "nghttp2_session_get_stream_local_window_size()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "nghttp2_session_get_stream_local_window_size(\n    nghttp2_session *session, int32_t stream_id)"
  },
  {
    "label": "nghttp2_session_get_effective_recv_data_length()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "nghttp2_session_get_effective_recv_data_length(nghttp2_session *session)"
  },
  {
    "label": "nghttp2_session_get_effective_local_window_size()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "nghttp2_session_get_effective_local_window_size(nghttp2_session *session)"
  },
  {
    "label": "nghttp2_session_get_local_window_size()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "nghttp2_session_get_local_window_size(nghttp2_session *session)"
  },
  {
    "label": "nghttp2_session_get_stream_remote_window_size()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "nghttp2_session_get_stream_remote_window_size(\n    nghttp2_session *session, int32_t stream_id)"
  },
  {
    "label": "nghttp2_session_get_remote_window_size()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "nghttp2_session_get_remote_window_size(nghttp2_session *session)"
  },
  {
    "label": "nghttp2_session_get_stream_local_close()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "nghttp2_session_get_stream_local_close(nghttp2_session *session,\n                                       int32_t stream_id)"
  },
  {
    "label": "nghttp2_session_get_stream_remote_close()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "nghttp2_session_get_stream_remote_close(nghttp2_session *session,\n                                        int32_t stream_id)"
  },
  {
    "label": "nghttp2_session_get_hd_inflate_dynamic_table_size()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "nghttp2_session_get_hd_inflate_dynamic_table_size(nghttp2_session *session)"
  },
  {
    "label": "nghttp2_session_get_hd_deflate_dynamic_table_size()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "nghttp2_session_get_hd_deflate_dynamic_table_size(nghttp2_session *session)"
  },
  {
    "label": "nghttp2_session_terminate_session()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "nghttp2_session_terminate_session(nghttp2_session *session,\n                                                     uint32_t error_code)"
  },
  {
    "label": "nghttp2_session_terminate_session2()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "nghttp2_session_terminate_session2(nghttp2_session *session,\n                                                      int32_t last_stream_id,\n                                                      uint32_t error_code)"
  },
  {
    "label": "nghttp2_submit_shutdown_notice()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "nghttp2_submit_shutdown_notice(nghttp2_session *session)"
  },
  {
    "label": "nghttp2_session_get_remote_settings()",
    "kind": "Method",
    "detail": "Function (uint32_t)",
    "insertText": "nghttp2_session_get_remote_settings(\n    nghttp2_session *session, nghttp2_settings_id id)"
  },
  {
    "label": "nghttp2_session_get_local_settings()",
    "kind": "Method",
    "detail": "Function (uint32_t)",
    "insertText": "nghttp2_session_get_local_settings(\n    nghttp2_session *session, nghttp2_settings_id id)"
  },
  {
    "label": "nghttp2_session_set_next_stream_id()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "nghttp2_session_set_next_stream_id(nghttp2_session *session,\n                                                      int32_t next_stream_id)"
  },
  {
    "label": "nghttp2_session_get_next_stream_id()",
    "kind": "Method",
    "detail": "Function (uint32_t)",
    "insertText": "nghttp2_session_get_next_stream_id(nghttp2_session *session)"
  },
  {
    "label": "nghttp2_session_consume()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "nghttp2_session_consume(nghttp2_session *session,\n                                           int32_t stream_id, size_t size)"
  },
  {
    "label": "nghttp2_session_consume_connection()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "nghttp2_session_consume_connection(nghttp2_session *session,\n                                                      size_t size)"
  },
  {
    "label": "nghttp2_session_consume_stream()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "nghttp2_session_consume_stream(nghttp2_session *session,\n                                                  int32_t stream_id,\n                                                  size_t size)"
  },
  {
    "label": "nghttp2_session_change_stream_priority()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "nghttp2_session_change_stream_priority(nghttp2_session *session,\n                                       int32_t stream_id,\n                                       const nghttp2_priority_spec *pri_spec)"
  },
  {
    "label": "nghttp2_session_create_idle_stream()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "nghttp2_session_create_idle_stream(nghttp2_session *session, int32_t stream_id,\n                                   const nghttp2_priority_spec *pri_spec)"
  },
  {
    "label": "nghttp2_session_upgrade()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "nghttp2_session_upgrade(nghttp2_session *session,\n                                           const uint8_t *settings_payload,\n                                           size_t settings_payloadlen,\n                                           void *stream_user_data)"
  },
  {
    "label": "nghttp2_session_upgrade2()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "nghttp2_session_upgrade2(nghttp2_session *session,\n                                            const uint8_t *settings_payload,\n                                            size_t settings_payloadlen,\n                                            int head_request,\n                                            void *stream_user_data)"
  },
  {
    "label": "nghttp2_pack_settings_payload()",
    "kind": "Method",
    "detail": "Function (ssize_t)",
    "insertText": "nghttp2_pack_settings_payload(\n    uint8_t *buf, size_t buflen, const nghttp2_settings_entry *iv, size_t niv)"
  },
  {
    "label": "nghttp2_priority_spec_init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "nghttp2_priority_spec_init(nghttp2_priority_spec *pri_spec,\n                                               int32_t stream_id,\n                                               int32_t weight, int exclusive)"
  },
  {
    "label": "nghttp2_priority_spec_default_init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "nghttp2_priority_spec_default_init(nghttp2_priority_spec *pri_spec)"
  },
  {
    "label": "nghttp2_priority_spec_check_default()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "nghttp2_priority_spec_check_default(const nghttp2_priority_spec *pri_spec)"
  },
  {
    "label": "nghttp2_submit_request()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "nghttp2_submit_request(\n    nghttp2_session *session, const nghttp2_priority_spec *pri_spec,\n    const nghttp2_nv *nva, size_t nvlen, const nghttp2_data_provider *data_prd,\n    void *stream_user_data)"
  },
  {
    "label": "nghttp2_submit_response()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "nghttp2_submit_response(nghttp2_session *session, int32_t stream_id,\n                        const nghttp2_nv *nva, size_t nvlen,\n                        const nghttp2_data_provider *data_prd)"
  },
  {
    "label": "nghttp2_submit_trailer()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "nghttp2_submit_trailer(nghttp2_session *session,\n                                          int32_t stream_id,\n                                          const nghttp2_nv *nva, size_t nvlen)"
  },
  {
    "label": "nghttp2_submit_headers()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "nghttp2_submit_headers(\n    nghttp2_session *session, uint8_t flags, int32_t stream_id,\n    const nghttp2_priority_spec *pri_spec, const nghttp2_nv *nva, size_t nvlen,\n    void *stream_user_data)"
  },
  {
    "label": "nghttp2_submit_data()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "nghttp2_submit_data(nghttp2_session *session, uint8_t flags,\n                                       int32_t stream_id,\n                                       const nghttp2_data_provider *data_prd)"
  },
  {
    "label": "nghttp2_submit_priority()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "nghttp2_submit_priority(nghttp2_session *session, uint8_t flags,\n                        int32_t stream_id,\n                        const nghttp2_priority_spec *pri_spec)"
  },
  {
    "label": "nghttp2_submit_rst_stream()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "nghttp2_submit_rst_stream(nghttp2_session *session,\n                                             uint8_t flags, int32_t stream_id,\n                                             uint32_t error_code)"
  },
  {
    "label": "nghttp2_submit_settings()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "nghttp2_submit_settings(nghttp2_session *session,\n                                           uint8_t flags,\n                                           const nghttp2_settings_entry *iv,\n                                           size_t niv)"
  },
  {
    "label": "nghttp2_submit_push_promise()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "nghttp2_submit_push_promise(\n    nghttp2_session *session, uint8_t flags, int32_t stream_id,\n    const nghttp2_nv *nva, size_t nvlen, void *promised_stream_user_data)"
  },
  {
    "label": "nghttp2_submit_ping()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "nghttp2_submit_ping(nghttp2_session *session, uint8_t flags,\n                                       const uint8_t *opaque_data)"
  },
  {
    "label": "nghttp2_submit_goaway()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "nghttp2_submit_goaway(nghttp2_session *session,\n                                         uint8_t flags, int32_t last_stream_id,\n                                         uint32_t error_code,\n                                         const uint8_t *opaque_data,\n                                         size_t opaque_data_len)"
  },
  {
    "label": "nghttp2_session_get_last_proc_stream_id()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "nghttp2_session_get_last_proc_stream_id(nghttp2_session *session)"
  },
  {
    "label": "nghttp2_session_check_request_allowed()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "nghttp2_session_check_request_allowed(nghttp2_session *session)"
  },
  {
    "label": "nghttp2_session_check_server_session()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "nghttp2_session_check_server_session(nghttp2_session *session)"
  },
  {
    "label": "nghttp2_submit_window_update()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "nghttp2_submit_window_update(nghttp2_session *session,\n                                                uint8_t flags,\n                                                int32_t stream_id,\n                                                int32_t window_size_increment)"
  },
  {
    "label": "nghttp2_session_set_local_window_size()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "nghttp2_session_set_local_window_size(nghttp2_session *session, uint8_t flags,\n                                      int32_t stream_id, int32_t window_size)"
  },
  {
    "label": "nghttp2_submit_extension()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "nghttp2_submit_extension(nghttp2_session *session,\n                                            uint8_t type, uint8_t flags,\n                                            int32_t stream_id, void *payload)"
  },
  {
    "label": "nghttp2_submit_altsvc()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "nghttp2_submit_altsvc(nghttp2_session *session,\n                                         uint8_t flags, int32_t stream_id,\n                                         const uint8_t *origin,\n                                         size_t origin_len,\n                                         const uint8_t *field_value,\n                                         size_t field_value_len)"
  },
  {
    "label": "nghttp2_submit_origin()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "nghttp2_submit_origin(nghttp2_session *session,\n                                         uint8_t flags,\n                                         const nghttp2_origin_entry *ov,\n                                         size_t nov)"
  },
  {
    "label": "nghttp2_nv_compare_name()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "nghttp2_nv_compare_name(const nghttp2_nv *lhs,\n                                           const nghttp2_nv *rhs)"
  },
  {
    "label": "nghttp2_select_next_protocol()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "nghttp2_select_next_protocol(unsigned char **out,\n                                                unsigned char *outlen,\n                                                const unsigned char *in,\n                                                unsigned int inlen)"
  },
  {
    "label": "nghttp2_is_fatal()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "nghttp2_is_fatal(int lib_error_code)"
  },
  {
    "label": "nghttp2_check_header_name()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "nghttp2_check_header_name(const uint8_t *name, size_t len)"
  },
  {
    "label": "nghttp2_check_header_value()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "nghttp2_check_header_value(const uint8_t *value, size_t len)"
  },
  {
    "label": "nghttp2_check_method()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "nghttp2_check_method(const uint8_t *value, size_t len)"
  },
  {
    "label": "nghttp2_check_path()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "nghttp2_check_path(const uint8_t *value, size_t len)"
  },
  {
    "label": "nghttp2_check_authority()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "nghttp2_check_authority(const uint8_t *value, size_t len)"
  },
  {
    "label": "nghttp2_hd_deflate_new()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "nghttp2_hd_deflate_new(nghttp2_hd_deflater **deflater_ptr,\n                       size_t max_deflate_dynamic_table_size)"
  },
  {
    "label": "nghttp2_hd_deflate_new2()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "nghttp2_hd_deflate_new2(nghttp2_hd_deflater **deflater_ptr,\n                        size_t max_deflate_dynamic_table_size,\n                        nghttp2_mem *mem)"
  },
  {
    "label": "nghttp2_hd_deflate_del()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "nghttp2_hd_deflate_del(nghttp2_hd_deflater *deflater)"
  },
  {
    "label": "nghttp2_hd_deflate_change_table_size()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "nghttp2_hd_deflate_change_table_size(nghttp2_hd_deflater *deflater,\n                                     size_t settings_max_dynamic_table_size)"
  },
  {
    "label": "nghttp2_hd_deflate_hd()",
    "kind": "Method",
    "detail": "Function (ssize_t)",
    "insertText": "nghttp2_hd_deflate_hd(nghttp2_hd_deflater *deflater,\n                                             uint8_t *buf, size_t buflen,\n                                             const nghttp2_nv *nva,\n                                             size_t nvlen)"
  },
  {
    "label": "nghttp2_hd_deflate_hd_vec()",
    "kind": "Method",
    "detail": "Function (ssize_t)",
    "insertText": "nghttp2_hd_deflate_hd_vec(nghttp2_hd_deflater *deflater,\n                                                 const nghttp2_vec *vec,\n                                                 size_t veclen,\n                                                 const nghttp2_nv *nva,\n                                                 size_t nvlen)"
  },
  {
    "label": "nghttp2_hd_deflate_bound()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "nghttp2_hd_deflate_bound(nghttp2_hd_deflater *deflater,\n                                               const nghttp2_nv *nva,\n                                               size_t nvlen)"
  },
  {
    "label": "nghttp2_hd_deflate_get_num_table_entries()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "nghttp2_hd_deflate_get_num_table_entries(nghttp2_hd_deflater *deflater)"
  },
  {
    "label": "nghttp2_hd_deflate_get_dynamic_table_size()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "nghttp2_hd_deflate_get_dynamic_table_size(nghttp2_hd_deflater *deflater)"
  },
  {
    "label": "nghttp2_hd_deflate_get_max_dynamic_table_size()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "nghttp2_hd_deflate_get_max_dynamic_table_size(nghttp2_hd_deflater *deflater)"
  },
  {
    "label": "nghttp2_hd_inflate_new()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "nghttp2_hd_inflate_new(nghttp2_hd_inflater **inflater_ptr)"
  },
  {
    "label": "nghttp2_hd_inflate_new2()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "nghttp2_hd_inflate_new2(nghttp2_hd_inflater **inflater_ptr,\n                                           nghttp2_mem *mem)"
  },
  {
    "label": "nghttp2_hd_inflate_del()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "nghttp2_hd_inflate_del(nghttp2_hd_inflater *inflater)"
  },
  {
    "label": "nghttp2_hd_inflate_change_table_size()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "nghttp2_hd_inflate_change_table_size(nghttp2_hd_inflater *inflater,\n                                     size_t settings_max_dynamic_table_size)"
  },
  {
    "label": "nghttp2_hd_inflate_hd()",
    "kind": "Method",
    "detail": "Function (ssize_t)",
    "insertText": "nghttp2_hd_inflate_hd(nghttp2_hd_inflater *inflater,\n                                             nghttp2_nv *nv_out,\n                                             int *inflate_flags, uint8_t *in,\n                                             size_t inlen, int in_final)"
  },
  {
    "label": "nghttp2_hd_inflate_hd2()",
    "kind": "Method",
    "detail": "Function (ssize_t)",
    "insertText": "nghttp2_hd_inflate_hd2(nghttp2_hd_inflater *inflater,\n                                              nghttp2_nv *nv_out,\n                                              int *inflate_flags,\n                                              const uint8_t *in, size_t inlen,\n                                              int in_final)"
  },
  {
    "label": "nghttp2_hd_inflate_end_headers()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "nghttp2_hd_inflate_end_headers(nghttp2_hd_inflater *inflater)"
  },
  {
    "label": "nghttp2_hd_inflate_get_num_table_entries()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "nghttp2_hd_inflate_get_num_table_entries(nghttp2_hd_inflater *inflater)"
  },
  {
    "label": "nghttp2_hd_inflate_get_dynamic_table_size()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "nghttp2_hd_inflate_get_dynamic_table_size(nghttp2_hd_inflater *inflater)"
  },
  {
    "label": "nghttp2_hd_inflate_get_max_dynamic_table_size()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "nghttp2_hd_inflate_get_max_dynamic_table_size(nghttp2_hd_inflater *inflater)"
  },
  {
    "label": "nghttp2_stream_get_state()",
    "kind": "Method",
    "detail": "Function (nghttp2_stream_proto_state)",
    "insertText": "nghttp2_stream_get_state(nghttp2_stream *stream)"
  },
  {
    "label": "nghttp2_stream_get_stream_id()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "nghttp2_stream_get_stream_id(nghttp2_stream *stream)"
  },
  {
    "label": "nghttp2_stream_get_weight()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "nghttp2_stream_get_weight(nghttp2_stream *stream)"
  },
  {
    "label": "nghttp2_stream_get_sum_dependency_weight()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "nghttp2_stream_get_sum_dependency_weight(nghttp2_stream *stream)"
  },
  {
    "label": "nghttp2_set_debug_vprintf_callback()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "nghttp2_set_debug_vprintf_callback(\n    nghttp2_debug_vprintf_callback debug_vprintf_callback)"
  }
]