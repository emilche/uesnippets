[
  {
    "label": "Rrtr",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Rrtr"
  },
  {
    "label": "kLength()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_RTP_RTCP_SOURCE_RTCP_PACKET_RRTR_H_ # define MODULES_RTP_RTCP_SOURCE_RTCP_PACKET_RRTR_H_ # include<stddef . h> # include<stdint . h> # include \" system_wrappers / include / ntp_time . h \" namespace webrtc { namespace rtcp { class Rrtr { public : const uint8_t kBlockType = 4 ; const uint16_t kBlockLength = 2 ; const size_t)",
    "insertText": "kLength(kBlockLength + 1)"
  },
  {
    "label": "Rrtr()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Rrtr()"
  },
  {
    "label": "Rrtr()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "Rrtr(const Rrtr&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} Rrtr&)",
    "insertText": "operator(const Rrtr&)"
  },
  {
    "label": "Parse()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Parse(const uint8_t* buffer)"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Create(uint8_t* buffer)"
  },
  {
    "label": "SetNtp()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetNtp(NtpTime ntp)"
  },
  {
    "label": "ntp()",
    "kind": "Method",
    "detail": "Function (ntp_ = ntp ; } NtpTime)",
    "insertText": "ntp()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "operator(const Rrtr& rrtr1, const Rrtr& rrtr2)"
  }
]