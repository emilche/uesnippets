[
  {
    "label": "AudioBuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AudioBuffer"
  },
  {
    "label": "EchoControl",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "EchoControl"
  },
  {
    "label": "Metrics",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Metrics"
  },
  {
    "label": "EchoControlFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "EchoControlFactory"
  },
  {
    "label": "AnalyzeRender()",
    "kind": "Method",
    "detail": "Function (# ifndef API_AUDIO_ECHO_CONTROL_H_ # define API_AUDIO_ECHO_CONTROL_H_ # include<memory> # include \" rtc_base / checks . h \" namespace webrtc { class AudioBuffer ; class EchoControl { public : void)",
    "insertText": "AnalyzeRender(AudioBuffer* render)"
  },
  {
    "label": "AnalyzeCapture()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AnalyzeCapture(AudioBuffer* capture)"
  },
  {
    "label": "ProcessCapture()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessCapture(AudioBuffer* capture, bool level_change)"
  },
  {
    "label": "ProcessCapture()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessCapture(AudioBuffer* capture, AudioBuffer* linear_output, bool level_change)"
  },
  {
    "label": "GetMetrics()",
    "kind": "Method",
    "detail": "Function (struct Metrics { double echo_return_loss ; double echo_return_loss_enhancement ; int delay_ms ; } ; Metrics)",
    "insertText": "GetMetrics()"
  },
  {
    "label": "SetAudioBufferDelay()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAudioBufferDelay(int delay_ms)"
  },
  {
    "label": "SetCaptureOutputUsage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCaptureOutputUsage(bool capture_output_used)"
  },
  {
    "label": "ActiveProcessing()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "ActiveProcessing()"
  },
  {
    "label": "EchoControl()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "EchoControl()"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (} } ; class EchoControlFactory { public : std::unique_ptr<EchoControl>)",
    "insertText": "Create(int sample_rate_hz, int num_render_channels, int num_capture_channels)"
  },
  {
    "label": "EchoControlFactory()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "EchoControlFactory()"
  }
]