[
  {
    "label": "TInternalNetSerializerBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TInternalNetSerializerBuilder"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTraits"
  },
  {
    "label": "FSignatureCheck",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSignatureCheck"
  },
  {
    "label": "FTypeCheck",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTypeCheck"
  },
  {
    "label": "ETraits",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ETraits"
  },
  {
    "label": "GetTraits()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Iris / Serialization / NetSerializer . h \" namespace UE::Net::Private { template<NetSerializerImpl> class TInternalNetSerializerBuilder final { private : enum class ETrueType : unsigned { Value = 1 } ; enum class EFalseType : unsigned { Value = 0 } ; struct FTraits { } ; template<U,U> struct FSignatureCheck ; template<> struct FTypeCheck ; enum ETraits : unsigned { } ; public : ENetSerializerTraits)",
    "insertText": "GetTraits()"
  }
]