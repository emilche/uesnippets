[
  {
    "label": "FSocket",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSocket"
  },
  {
    "label": "FCookOnTheFlyServerTCP",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCookOnTheFlyServerTCP"
  },
  {
    "label": "FCookOnTheFlyClientConnectionTCP",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCookOnTheFlyClientConnectionTCP"
  },
  {
    "label": "FCookOnTheFlyServerTCP()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" HAL / ThreadSafeCounter . h \" # include \" HAL / Runnable . h \" # include \" CookOnTheFlyNetServerBase . h \" class FSocket ; class FCookOnTheFlyServerTCP : public FRunnable,public FCookOnTheFlyNetworkServerBase { public :)",
    "insertText": "FCookOnTheFlyServerTCP(int32 InPort, const TArray<ITargetPlatform*>& InTargetPlatforms)"
  },
  {
    "label": "FCookOnTheFlyServerTCP()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FCookOnTheFlyServerTCP()"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (public : bool)",
    "insertText": "Init()"
  },
  {
    "label": "Stop()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Stop()"
  },
  {
    "label": "Set()",
    "kind": "Method",
    "detail": "Function (StopRequested .)",
    "insertText": "Set(true)"
  },
  {
    "label": "Exit()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Exit()"
  },
  {
    "label": "IsReadyToAcceptConnections()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsReadyToAcceptConnections(void)"
  },
  {
    "label": "GetAddressList()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetAddressList(TArray<TSharedPtr<FInternetAddr>>& OutAddresses)"
  },
  {
    "label": "GetSupportedProtocol()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetSupportedProtocol()"
  },
  {
    "label": "NumConnections()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "NumConnections()"
  },
  {
    "label": "Start()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Start()"
  }
]