[
  {
    "label": "FConfigCacheIni",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FConfigCacheIni"
  },
  {
    "label": "FConfigFile",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FConfigFile"
  },
  {
    "label": "FOutputDevice",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FOutputDevice"
  },
  {
    "label": "IConsoleVariable",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IConsoleVariable"
  },
  {
    "label": "FColor",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FColor"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "entry",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "entry"
  },
  {
    "label": "FConfigContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FConfigContext"
  },
  {
    "label": "FConfigValue",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FConfigValue"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FConfigCacheIni",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FConfigCacheIni"
  },
  {
    "label": "FConfigFile",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FConfigFile"
  },
  {
    "label": "FConfigBranch",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FConfigBranch"
  },
  {
    "label": "FDetailedConfigMemUsage",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDetailedConfigMemUsage"
  },
  {
    "label": "FConfigSection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FConfigSection"
  },
  {
    "label": "FConfigCommandlineOverride",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FConfigCommandlineOverride"
  },
  {
    "label": "FConfigModificationTracker",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FConfigModificationTracker"
  },
  {
    "label": "FCVarTracker",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCVarTracker"
  },
  {
    "label": "FConfigCommandStreamSection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FConfigCommandStreamSection"
  },
  {
    "label": "FConfigCommandStream",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FConfigCommandStream"
  },
  {
    "label": "names",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "names"
  },
  {
    "label": "FConfigBranch",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FConfigBranch"
  },
  {
    "label": "FConfigFile",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FConfigFile"
  },
  {
    "label": "FConfigBranch",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FConfigBranch"
  },
  {
    "label": "FConfigBranch",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FConfigBranch"
  },
  {
    "label": "names",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "names"
  },
  {
    "label": "FConfigCacheIni",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FConfigCacheIni"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FConfigBranch",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FConfigBranch"
  },
  {
    "label": "FConfigCacheIni",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FConfigCacheIni"
  },
  {
    "label": "FConfigCacheIni",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FConfigCacheIni"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "FKnownConfigFiles",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FKnownConfigFiles"
  },
  {
    "label": "FPluginInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPluginInfo"
  },
  {
    "label": "DECLARE_LOG_CATEGORY_EXTERN()",
    "kind": "Method",
    "detail": "Function (CORE_API)",
    "insertText": "DECLARE_LOG_CATEGORY_EXTERN(LogConfig, Log, All)"
  },
  {
    "label": "ExpandValue()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ExpandValue(const FString& InCollapsedValue, FString& OutExpandedValue)"
  },
  {
    "label": "ExpandValue()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "ExpandValue(const FString& InCollapsedValue)"
  },
  {
    "label": "CollapseValue()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CollapseValue(const FString& InExpandedValue, FString& OutCollapsedValue)"
  },
  {
    "label": "CollapseValue()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "CollapseValue(const FString& InExpandedValue)"
  },
  {
    "label": "ExpandValueInternal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExpandValueInternal()"
  },
  {
    "label": "HasQuotes()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasQuotes( const FString& Test )"
  },
  {
    "label": "HandleAddCommand()",
    "kind": "Method",
    "detail": "Function (CORE_API)",
    "insertText": "HandleAddCommand(FName ValueName, FString&& Value, bool bAppendValueIfNotArrayOfStructsKeyUsed)"
  },
  {
    "label": "HandleArrayOfKeyedStructsCommand()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HandleArrayOfKeyedStructsCommand(FName Key, FString&& Value)"
  },
  {
    "label": "It()",
    "kind": "Method",
    "detail": "Function (ElementSetType::TConstKeyIterator)",
    "insertText": "It(Pairs, Key)"
  },
  {
    "label": "AreSectionsEqualForWriting()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AreSectionsEqualForWriting(const FConfigSection& A, const FConfigSection& B)"
  },
  {
    "label": "ProcessCommand()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessCommand(SectionType* Section, FStringView SectionName, FConfigValue::EValueType Command, FName Key, FString&& Value)"
  },
  {
    "label": "FillFileFromDisk()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "FillFileFromDisk(const FString& Filename, bool bHandleSymbolCommands)"
  },
  {
    "label": "Shrink()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Shrink()"
  },
  {
    "label": "FConfigFile()",
    "kind": "Method",
    "detail": "Function (CORE_API)",
    "insertText": "FConfigFile()"
  },
  {
    "label": "FConfigFile()",
    "kind": "Method",
    "detail": "Function (CORE_API)",
    "insertText": "FConfigFile(const FConfigFile& Other)"
  },
  {
    "label": "FConfigFile()",
    "kind": "Method",
    "detail": "Function (CORE_API)",
    "insertText": "FConfigFile(FConfigFile&& Other)"
  },
  {
    "label": "ScopeLock()",
    "kind": "Method",
    "detail": "Function (FTransactionallySafeReadScopeLock)",
    "insertText": "ScopeLock(ConfigFileMapLock)"
  },
  {
    "label": "ScopeLock()",
    "kind": "Method",
    "detail": "Function (FTransactionallySafeReadScopeLock)",
    "insertText": "ScopeLock(ConfigFileMapLock)"
  },
  {
    "label": "ScopeLock()",
    "kind": "Method",
    "detail": "Function (FTransactionallySafeReadScopeLock)",
    "insertText": "ScopeLock(ConfigFileMapLock)"
  },
  {
    "label": "ScopeLock()",
    "kind": "Method",
    "detail": "Function (FTransactionallySafeReadScopeLock)",
    "insertText": "ScopeLock(ConfigFileMapLock)"
  },
  {
    "label": "ScopeLock()",
    "kind": "Method",
    "detail": "Function (FTransactionallySafeReadScopeLock)",
    "insertText": "ScopeLock(ConfigFileMapLock)"
  },
  {
    "label": "ScopeLock()",
    "kind": "Method",
    "detail": "Function (FTransactionallySafeWriteScopeLock)",
    "insertText": "ScopeLock(ConfigFileMapLock)"
  },
  {
    "label": "ScopeLock()",
    "kind": "Method",
    "detail": "Function (FTransactionallySafeReadScopeLock)",
    "insertText": "ScopeLock(ConfigFileMapLock)"
  },
  {
    "label": "ScopeLock()",
    "kind": "Method",
    "detail": "Function (FTransactionallySafeReadScopeLock)",
    "insertText": "ScopeLock(ConfigFileMapLock)"
  },
  {
    "label": "ScopeLock()",
    "kind": "Method",
    "detail": "Function (FTransactionallySafeReadScopeLock)",
    "insertText": "ScopeLock(ConfigFileMapLock)"
  },
  {
    "label": "ScopeLock()",
    "kind": "Method",
    "detail": "Function (FTransactionallySafeWriteScopeLock)",
    "insertText": "ScopeLock(ConfigFileMapLock)"
  },
  {
    "label": "ScopeLock()",
    "kind": "Method",
    "detail": "Function (FTransactionallySafeWriteScopeLock)",
    "insertText": "ScopeLock(ConfigFileMapLock)"
  },
  {
    "label": "ScopeLock()",
    "kind": "Method",
    "detail": "Function (FTransactionallySafeWriteScopeLock)",
    "insertText": "ScopeLock(ConfigFileMapLock)"
  },
  {
    "label": "ScopeLock()",
    "kind": "Method",
    "detail": "Function (FTransactionallySafeWriteScopeLock)",
    "insertText": "ScopeLock(ConfigFileMapLock)"
  },
  {
    "label": "ScopeLock()",
    "kind": "Method",
    "detail": "Function (FTransactionallySafeWriteScopeLock)",
    "insertText": "ScopeLock(ConfigFileMapLock)"
  },
  {
    "label": "ScopeLock()",
    "kind": "Method",
    "detail": "Function (FTransactionallySafeWriteScopeLock)",
    "insertText": "ScopeLock(ConfigFileMapLock)"
  },
  {
    "label": "ScopeLock()",
    "kind": "Method",
    "detail": "Function (FTransactionallySafeWriteScopeLock)",
    "insertText": "ScopeLock(ConfigFileMapLock)"
  },
  {
    "label": "ScopeLock()",
    "kind": "Method",
    "detail": "Function (FTransactionallySafeWriteScopeLock)",
    "insertText": "ScopeLock(ConfigFileMapLock)"
  },
  {
    "label": "ScopeLock()",
    "kind": "Method",
    "detail": "Function (FTransactionallySafeReadScopeLock)",
    "insertText": "ScopeLock(ConfigFileMapLock)"
  },
  {
    "label": "ScopeLock()",
    "kind": "Method",
    "detail": "Function (FTransactionallySafeReadScopeLock)",
    "insertText": "ScopeLock(ConfigFileMapLock)"
  },
  {
    "label": "ScopeLock()",
    "kind": "Method",
    "detail": "Function (FTransactionallySafeReadScopeLock)",
    "insertText": "ScopeLock(ConfigFileMapLock)"
  },
  {
    "label": "ScopeLock()",
    "kind": "Method",
    "detail": "Function (FTransactionallySafeReadScopeLock)",
    "insertText": "ScopeLock(ConfigFileMapLock)"
  },
  {
    "label": "Combine()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Combine( const FString& Filename)"
  },
  {
    "label": "CombineFromBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CombineFromBuffer(const FString& Buffer, const FString& FileHint)"
  },
  {
    "label": "Read()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Read( const FString& Filename )"
  },
  {
    "label": "ApplyFile()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ApplyFile(const FConfigCommandStream* File)"
  },
  {
    "label": "WriteTempFileThenMove()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "WriteTempFileThenMove()"
  },
  {
    "label": "WriteInternal()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "WriteInternal(const FString& Filename, bool bDoRemoteWrite, TMap<FString, FString>& InOutSectionTexts, const TArray<FString>& InSectionOrder)"
  },
  {
    "label": "WriteToStringInternal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WriteToStringInternal(FString& InOutText, bool bIsADefaultIniWrite, int32 IniCombineThreshold, TMap<FString, FString>& InOutSectionTexts, const TArray<FString>& InSectionOrder)"
  },
  {
    "label": "Cleanup()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Cleanup()"
  },
  {
    "label": "Shrink()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Shrink()"
  },
  {
    "label": "FillFileFromBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FillFileFromBuffer(FStringView Buffer, bool bHandleSymbolCommands, const FString& FileHint)"
  },
  {
    "label": "FillFileFromDisk()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "FillFileFromDisk(const FString& Filename, bool bHandleSymbolCommands)"
  },
  {
    "label": "ProcessCommand()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessCommand(FConfigSection* Section, FStringView SectionName, FConfigValue::EValueType Command, FName Key, FString&& Value)"
  },
  {
    "label": "ScopeLock()",
    "kind": "Method",
    "detail": "Function (FTransactionallySafeReadScopeLock)",
    "insertText": "ScopeLock(ConfigFileMapLock)"
  },
  {
    "label": "FillFileFromBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FillFileFromBuffer(FileType* File, FStringView Buffer, bool bHandleSymbolCommands, const FString& FileHint)"
  },
  {
    "label": "Dump()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Dump(FOutputDevice& Ar)"
  },
  {
    "label": "GetString()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetString(Section, Key, Value)"
  },
  {
    "label": "GetText()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetText(Section, Key, Value)"
  },
  {
    "label": "GetInt()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetInt(Section, Key, Value)"
  },
  {
    "label": "GetFloat()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetFloat(Section, Key, Value)"
  },
  {
    "label": "GetDouble()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetDouble(Section, Key, Value)"
  },
  {
    "label": "GetInt64()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetInt64(Section, Key, Value)"
  },
  {
    "label": "GetBool()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetBool(Section, Key, Value)"
  },
  {
    "label": "GetArray()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetArray(Section, Key, Value)"
  },
  {
    "label": "SetString()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetString(const TCHAR* Section, const TCHAR* Key, const TCHAR* Value)"
  },
  {
    "label": "SetText()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetText(const TCHAR* Section, const TCHAR* Key, const FText& Value)"
  },
  {
    "label": "SetFloat()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFloat(const TCHAR* Section, const TCHAR* Key, float Value)"
  },
  {
    "label": "SetDouble()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDouble(const TCHAR* Section, const TCHAR* Key, double Value)"
  },
  {
    "label": "SetBool()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetBool(const TCHAR* Section, const TCHAR* Key, bool Value)"
  },
  {
    "label": "SetInt64()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetInt64(const TCHAR* Section, const TCHAR* Key, const int64 Value)"
  },
  {
    "label": "SetArray()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetArray(const TCHAR* Section, const TCHAR* Key, const TArray<FString>& Value)"
  },
  {
    "label": "AddToSection()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AddToSection(const TCHAR* Section, FName Key, const FString& Value)"
  },
  {
    "label": "AddUniqueToSection()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AddUniqueToSection(const TCHAR* Section, FName Key, const FString& Value)"
  },
  {
    "label": "RemoveKeyFromSection()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RemoveKeyFromSection(const TCHAR* Section, FName Key)"
  },
  {
    "label": "RemoveFromSection()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RemoveFromSection(const TCHAR* Section, FName Key, const FString& Value)"
  },
  {
    "label": "ResetKeyInSection()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ResetKeyInSection(const TCHAR* Section, FName Key)"
  },
  {
    "label": "ProcessInputFileContents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessInputFileContents(FStringView Contents, const FString& FileHint)"
  },
  {
    "label": "AddMissingProperties()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddMissingProperties(const FConfigFile& InSourceFile)"
  },
  {
    "label": "UpdateSections()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateSections(const TCHAR* DiskFilename, const TCHAR* IniRootName=nullptr, const TCHAR* OverridePlatform=nullptr)"
  },
  {
    "label": "UpdateSinglePropertyInSection()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UpdateSinglePropertyInSection(const TCHAR* DiskFilename, const TCHAR* PropertyName, const TCHAR* SectionName)"
  },
  {
    "label": "ProcessSourceAndCheckAgainstBackup()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessSourceAndCheckAgainstBackup()"
  },
  {
    "label": "ShouldExportQuotedString()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldExportQuotedString(const FString& PropertyValue)"
  },
  {
    "label": "GenerateExportedPropertyLine()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GenerateExportedPropertyLine(const FString& PropertyName, const FString& PropertyValue)"
  },
  {
    "label": "AppendExportedPropertyLine()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AppendExportedPropertyLine(FString& Out, const FString& PropertyName, const FString& PropertyValue)"
  },
  {
    "label": "OverrideFromCommandline()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OverrideFromCommandline(FConfigFile* File, const FString& Filename)"
  },
  {
    "label": "OverrideFromCommandline()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OverrideFromCommandline(FConfigCommandStream* File, const FString& Filename)"
  },
  {
    "label": "OverrideFileFromCommandline()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "OverrideFileFromCommandline(FString& Filename)"
  },
  {
    "label": "AddDynamicLayerToHierarchy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddDynamicLayerToHierarchy(const FString& Filename)"
  },
  {
    "label": "SuppressReporting()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SuppressReporting()"
  },
  {
    "label": "SaveSourceToBackupFile()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SaveSourceToBackupFile()"
  },
  {
    "label": "ProcessPropertyAndWriteForDefaults()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessPropertyAndWriteForDefaults(int32 IniCombineThreshold, const TArray<const FConfigValue*>& InCompletePropertyToProcess, FString& OutText, const FString& SectionName, const FString& PropertyName)"
  },
  {
    "label": "AddStaticLayersToHierarchy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddStaticLayersToHierarchy(const TCHAR* InBaseIniName, const TCHAR* InPlatformName, const TCHAR* EngineConfigDir, const TCHAR* SourceConfigDir)"
  },
  {
    "label": "AddStaticLayersToHierarchy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddStaticLayersToHierarchy(FConfigContext& Context)"
  },
  {
    "label": "FConfigBranch()",
    "kind": "Method",
    "detail": "Function (etc)",
    "insertText": "FConfigBranch()"
  },
  {
    "label": "FConfigBranch()",
    "kind": "Method",
    "detail": "Function (FConfigFile)",
    "insertText": "FConfigBranch(const FConfigFile& ExistingFile)"
  },
  {
    "label": "AddDynamicLayerToHierarchy()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AddDynamicLayerToHierarchy(const FString& Filename, FConfigModificationTracker* ModificationTracker =nullptr)"
  },
  {
    "label": "AddDynamicLayersToHierarchy()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AddDynamicLayersToHierarchy(const TArray<FString>& Filenames, FName Tag=NAME_None, DynamicLayerPriority Priority=DynamicLayerPriority::Unknown, FConfigModificationTracker* ModificationTracker =nullptr)"
  },
  {
    "label": "AddDynamicLayerStringToHierarchy()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AddDynamicLayerStringToHierarchy(const FString& Filename, const FString& Contents, FName Tag=NAME_None, DynamicLayerPriority Priority=DynamicLayerPriority::Unknown, FConfigModificationTracker* ModificationTracker =nullptr)"
  },
  {
    "label": "RemoveDynamicLayerFromHierarchy()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RemoveDynamicLayerFromHierarchy(const FString& Filename, FConfigModificationTracker* ModificationTracker =nullptr)"
  },
  {
    "label": "RemoveDynamicLayersFromHierarchy()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RemoveDynamicLayersFromHierarchy(const TArray<FString>& Filenames, FConfigModificationTracker* ModificationTracker =nullptr)"
  },
  {
    "label": "SafeUnload()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SafeUnload()"
  },
  {
    "label": "SafeReload()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SafeReload()"
  },
  {
    "label": "RemoveSection()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RemoveSection(const TCHAR* Section)"
  },
  {
    "label": "Flush()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Flush()"
  },
  {
    "label": "Shrink()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Shrink()"
  },
  {
    "label": "Dump()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Dump(FOutputDevice& Ar)"
  },
  {
    "label": "InitFiles()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitFiles()"
  },
  {
    "label": "RemoveTagFromHierarchy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveTagFromHierarchy(FName Tag, FConfigModificationTracker* ModificationTracker)"
  },
  {
    "label": "FConfigCacheIni()",
    "kind": "Method",
    "detail": "Function (CORE_API)",
    "insertText": "FConfigCacheIni(EConfigCacheType Type, FName PlatformName = NAME_None, bool bInGloballyRegistered = false)"
  },
  {
    "label": "FConfigCacheIni()",
    "kind": "Method",
    "detail": "Function (CORE_API)",
    "insertText": "FConfigCacheIni()"
  },
  {
    "label": "DisableFileOperations()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DisableFileOperations()"
  },
  {
    "label": "EnableFileOperations()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnableFileOperations()"
  },
  {
    "label": "AreFileOperationsDisabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AreFileOperationsDisabled()"
  },
  {
    "label": "Tick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Tick(float DeltaSeconds)"
  },
  {
    "label": "Parse1ToNSectionOfStrings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Parse1ToNSectionOfStrings(const TCHAR* Section, const TCHAR* KeyOne, const TCHAR* KeyN, TMap<FString, TArray<FString> >& OutMap, const FString& Filename)"
  },
  {
    "label": "Parse1ToNSectionOfNames()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Parse1ToNSectionOfNames(const TCHAR* Section, const TCHAR* KeyOne, const TCHAR* KeyN, TMap<FName, TArray<FName> >& OutMap, const FString& Filename)"
  },
  {
    "label": "Remove()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "Remove(const FString& Filename)"
  },
  {
    "label": "GetFilenames()",
    "kind": "Method",
    "detail": "Function (TArray<FString>)",
    "insertText": "GetFilenames()"
  },
  {
    "label": "LoadFile()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LoadFile( const FString& InFilename, const FConfigFile* Fallback = NULL, const TCHAR* PlatformString = NULL )"
  },
  {
    "label": "SetFile()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFile( const FString& InFilename, const FConfigFile* NewConfigFile )"
  },
  {
    "label": "UnloadFile()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnloadFile( const FString& Filename )"
  },
  {
    "label": "Detach()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Detach( const FString& Filename )"
  },
  {
    "label": "GetString()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetString( const TCHAR* Section, const TCHAR* Key, FString& Value, const FString& Filename )"
  },
  {
    "label": "GetText()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetText( const TCHAR* Section, const TCHAR* Key, FText& Value, const FString& Filename )"
  },
  {
    "label": "GetSection()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetSection( const TCHAR* Section, TArray<FString>& Result, const FString& Filename )"
  },
  {
    "label": "DoesSectionExist()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DoesSectionExist(const TCHAR* Section, const FString& Filename)"
  },
  {
    "label": "SetString()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetString( const TCHAR* Section, const TCHAR* Key, const TCHAR* Value, const FString& Filename )"
  },
  {
    "label": "SetText()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetText( const TCHAR* Section, const TCHAR* Key, const FText& Value, const FString& Filename )"
  },
  {
    "label": "RemoveKey()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RemoveKey( const TCHAR* Section, const TCHAR* Key, const FString& Filename )"
  },
  {
    "label": "EmptySection()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "EmptySection( const TCHAR* Section, const FString& Filename )"
  },
  {
    "label": "EmptySectionsMatchingString()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "EmptySectionsMatchingString( const TCHAR* SectionString, const FString& Filename )"
  },
  {
    "label": "GetConfigFilename()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetConfigFilename(const TCHAR* BaseIniName)"
  },
  {
    "label": "GetConfigFilenames()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetConfigFilenames(TArray<FString>& ConfigFilenames)"
  },
  {
    "label": "GetSectionNames()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetSectionNames( const FString& Filename, TArray<FString>& out_SectionNames )"
  },
  {
    "label": "GetPerObjectConfigSections()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetPerObjectConfigSections( const FString& Filename, const FString& SearchClass, TArray<FString>& out_SectionNames, int32 MaxResults=1024 )"
  },
  {
    "label": "Exit()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Exit()"
  },
  {
    "label": "Dump()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Dump(FOutputDevice& Ar, const TCHAR* IniName=NULL)"
  },
  {
    "label": "ShowMemoryUsage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ShowMemoryUsage( FOutputDevice& Ar )"
  },
  {
    "label": "GetMaxMemoryUsage()",
    "kind": "Method",
    "detail": "Function (SIZE_T)",
    "insertText": "GetMaxMemoryUsage()"
  },
  {
    "label": "ForEachEntry()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ForEachEntry(const FKeyValueSink& Visitor, const TCHAR* Section, const FString& Filename)"
  },
  {
    "label": "GetStr()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetStr(\n\t\tconst TCHAR*\t\tSection,\n\t\tconst TCHAR*\t\tKey,\n\t\tconst FString&\tFilename\n\t)"
  },
  {
    "label": "GetInt()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetInt(\n\t\tconst TCHAR*\t\tSection,\n\t\tconst TCHAR*\t\tKey,\n\t\tint32&\t\t\t\tValue,\n\t\tconst FString&\tFilename\n\t)"
  },
  {
    "label": "GetInt64()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetInt64(\n\t\tconst TCHAR* Section,\n\t\tconst TCHAR* Key,\n\t\tint64& Value,\n\t\tconst FString& Filename\n\t)"
  },
  {
    "label": "GetFloat()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetFloat(\n\t\tconst TCHAR*\t\tSection,\n\t\tconst TCHAR*\t\tKey,\n\t\tfloat&\t\t\t\tValue,\n\t\tconst FString&\tFilename\n\t)"
  },
  {
    "label": "GetDouble()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetDouble(\n\t\tconst TCHAR*\t\tSection,\n\t\tconst TCHAR*\t\tKey,\n\t\tdouble&\t\t\t\tValue,\n\t\tconst FString&\tFilename\n\t)"
  },
  {
    "label": "GetBool()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetBool(\n\t\tconst TCHAR*\t\tSection,\n\t\tconst TCHAR*\t\tKey,\n\t\tbool&\t\t\t\tValue,\n\t\tconst FString&\tFilename\n\t)"
  },
  {
    "label": "GetArray()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetArray(\n\t\tconst TCHAR*\t\tSection,\n\t\tconst TCHAR*\t\tKey,\n\t\tTArray<FString>&\tout_Arr,\n\t\tconst FString&\tFilename\n\t)"
  },
  {
    "label": "GetSingleLineArray()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetSingleLineArray(\n\t\tconst TCHAR*\t\tSection,\n\t\tconst TCHAR*\t\tKey,\n\t\tTArray<FString>&\tout_Arr,\n\t\tconst FString&\tFilename\n\t)"
  },
  {
    "label": "GetColor()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetColor(\n\t\tconst TCHAR*\t\tSection,\n\t\tconst TCHAR*\t\tKey,\n\t\tFColor&\t\t\t\tValue,\n\t\tconst FString&\tFilename\n\t)"
  },
  {
    "label": "GetVector2D()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetVector2D(\n\t\tconst TCHAR*   Section,\n\t\tconst TCHAR*   Key,\n\t\tFVector2D&     Value,\n\t\tconst FString& Filename)"
  },
  {
    "label": "GetVector()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetVector(\n\t\tconst TCHAR*\t\tSection,\n\t\tconst TCHAR*\t\tKey,\n\t\tFVector&\t\t\tValue,\n\t\tconst FString&\tFilename\n\t)"
  },
  {
    "label": "GetVector4()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetVector4(\n\t\tconst TCHAR*\t\tSection,\n\t\tconst TCHAR*\t\tKey,\n\t\tFVector4&\t\t\tValue,\n\t\tconst FString&\tFilename\n\t)"
  },
  {
    "label": "GetRotator()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetRotator(\n\t\tconst TCHAR*\t\tSection,\n\t\tconst TCHAR*\t\tKey,\n\t\tFRotator&\t\t\tValue,\n\t\tconst FString&\tFilename\n\t)"
  },
  {
    "label": "GetString()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetString(Section, Key, Value, Filename)"
  },
  {
    "label": "GetText()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetText(Section, Key, Value, Filename)"
  },
  {
    "label": "GetInt()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetInt(Section, Key, Value, Filename)"
  },
  {
    "label": "GetFloat()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetFloat(Section, Key, Value, Filename)"
  },
  {
    "label": "GetBool()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetBool(Section, Key, Value, Filename)"
  },
  {
    "label": "GetArray()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetArray(Section, Key, Value, Filename)"
  },
  {
    "label": "SetInt()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetInt(\n\t\tconst TCHAR*\t\tSection,\n\t\tconst TCHAR*\t\tKey,\n\t\tint32\t\t\t\t\tValue,\n\t\tconst FString&\tFilename\n\t)"
  },
  {
    "label": "SetFloat()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFloat(\n\t\tconst TCHAR*\t\tSection,\n\t\tconst TCHAR*\t\tKey,\n\t\tfloat\t\t\t\tValue,\n\t\tconst FString&\tFilename\n\t)"
  },
  {
    "label": "SetDouble()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDouble(\n\t\tconst TCHAR*\t\tSection,\n\t\tconst TCHAR*\t\tKey,\n\t\tdouble\t\t\t\tValue,\n\t\tconst FString&\tFilename\n\t)"
  },
  {
    "label": "SetBool()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetBool(\n\t\tconst TCHAR*\t\tSection,\n\t\tconst TCHAR*\t\tKey,\n\t\tbool\t\t\t\tValue,\n\t\tconst FString&\tFilename\n\t)"
  },
  {
    "label": "SetArray()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetArray(\n\t\tconst TCHAR*\t\t\tSection,\n\t\tconst TCHAR*\t\t\tKey,\n\t\tconst TArray<FString>&\tValue,\n\t\tconst FString&\t\tFilename\n\t)"
  },
  {
    "label": "SetSingleLineArray()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSingleLineArray(\n\t\tconst TCHAR*\t\t\tSection,\n\t\tconst TCHAR*\t\t\tKey,\n\t\tconst TArray<FString>&\tIn_Arr,\n\t\tconst FString&\t\tFilename\n\t)"
  },
  {
    "label": "SetColor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetColor(\n\t\tconst TCHAR*\t\tSection,\n\t\tconst TCHAR*\t\tKey,\n\t\tFColor\t\t\t\tValue,\n\t\tconst FString&\tFilename\n\t)"
  },
  {
    "label": "SetVector2D()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetVector2D(\n\t\tconst TCHAR*   Section,\n\t\tconst TCHAR*   Key,\n\t\tFVector2D      Value,\n\t\tconst FString& Filename)"
  },
  {
    "label": "SetVector()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetVector(\n\t\tconst TCHAR*\t\tSection,\n\t\tconst TCHAR*\t\tKey,\n\t\tFVector\t\t\t\tValue,\n\t\tconst FString&\tFilename\n\t)"
  },
  {
    "label": "SetVector4()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetVector4(\n\t\tconst TCHAR*\t\tSection,\n\t\tconst TCHAR*\t\tKey,\n\t\tconst FVector4&\t\tValue,\n\t\tconst FString&\tFilename\n\t)"
  },
  {
    "label": "SetRotator()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRotator(\n\t\tconst TCHAR*\t\tSection,\n\t\tconst TCHAR*\t\tKey,\n\t\tFRotator\t\t\tValue,\n\t\tconst FString&\tFilename\n\t)"
  },
  {
    "label": "AddToSection()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AddToSection(const TCHAR* Section, FName Key, const FString& Value, const FString& Filename)"
  },
  {
    "label": "AddUniqueToSection()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AddUniqueToSection(const TCHAR* Section, FName Key, const FString& Value, const FString& Filename)"
  },
  {
    "label": "RemoveKeyFromSection()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RemoveKeyFromSection(const TCHAR* Section, FName Key, const FString& Filename)"
  },
  {
    "label": "RemoveFromSection()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RemoveFromSection(const TCHAR* Section, FName Key, const FString& Value, const FString& Filename)"
  },
  {
    "label": "ResetKeyInSection()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ResetKeyInSection(const TCHAR* Section, FName Key, const FString& Filename)"
  },
  {
    "label": "SafeUnloadBranch()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SafeUnloadBranch(const TCHAR* Filename)"
  },
  {
    "label": "RemoveSectionFromBranch()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RemoveSectionFromBranch(const TCHAR* Section, const TCHAR* Filename)"
  },
  {
    "label": "InitializeConfigSystem()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeConfigSystem()"
  },
  {
    "label": "GetDestIniFilename()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetDestIniFilename(const TCHAR* BaseIniName, const TCHAR* PlatformName, const TCHAR* GeneratedConfigDir)"
  },
  {
    "label": "LoadLocalIniFile()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "LoadLocalIniFile(FConfigFile& ConfigFile, const TCHAR* IniName, bool bIsBaseIniName, const TCHAR* Platform=NULL, bool bForceReload=false)"
  },
  {
    "label": "LoadConsoleVariablesFromINI()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LoadConsoleVariablesFromINI()"
  },
  {
    "label": "NormalizeConfigIniPath()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "NormalizeConfigIniPath(const FString& NonNormalizedPath)"
  },
  {
    "label": "SaveCurrentStateForBootstrap()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SaveCurrentStateForBootstrap(const TCHAR* Filename)"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Serialize(FArchive& Ar)"
  },
  {
    "label": "SetGlobalIniStringsFromMembers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetGlobalIniStringsFromMembers()"
  },
  {
    "label": "InitializeKnownConfigFiles()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "InitializeKnownConfigFiles(FConfigContext& Context)"
  },
  {
    "label": "IsKnownConfigName()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsKnownConfigName(FName ConfigName)"
  },
  {
    "label": "CreateGConfigFromSaved()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CreateGConfigFromSaved(const TCHAR* Filename)"
  },
  {
    "label": "ClearOtherPlatformConfigs()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearOtherPlatformConfigs()"
  },
  {
    "label": "RegisterPlugin()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterPlugin(FName PluginName, const FString& PluginDir, const TArray<FString>& ChildPluginDirs, DynamicLayerPriority Priority, bool bIncludePluginNameInBranchName)"
  },
  {
    "label": "AddPluginToAllBranches()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddPluginToAllBranches(FName PluginName, FConfigModificationTracker* ModificationTracker=nullptr)"
  },
  {
    "label": "RemoveTagFromAllBranches()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveTagFromAllBranches(FName Tag, FConfigModificationTracker* ModificationTracker=nullptr)"
  },
  {
    "label": "AsyncInitializeConfigForPlatforms()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AsyncInitializeConfigForPlatforms()"
  },
  {
    "label": "SerializeStateForBootstrap_Impl()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SerializeStateForBootstrap_Impl(FArchive& Ar)"
  },
  {
    "label": "DumpFile()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DumpFile(FOutputDevice& Ar, const FString& Filename, const FConfigFile& File)"
  },
  {
    "label": "AddPluginToBranches()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddPluginToBranches(FName PluginName, FConfigModificationTracker* ModificationTracker)"
  },
  {
    "label": "RemoveTagFromBranches()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveTagFromBranches(FName Tag, FConfigModificationTracker* ModificationTracker)"
  }
]