[
  {
    "label": "UCollationElements",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "UCollationElements"
  },
  {
    "label": "UHashtable",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "UHashtable"
  },
  {
    "label": "CollationData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "CollationData"
  },
  {
    "label": "CharacterIterator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CharacterIterator"
  },
  {
    "label": "CollationIterator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CollationIterator"
  },
  {
    "label": "RuleBasedCollator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RuleBasedCollator"
  },
  {
    "label": "UCollationPCE",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UCollationPCE"
  },
  {
    "label": "UVector32",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UVector32"
  },
  {
    "label": "U_I18N_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "U_I18N_API"
  },
  {
    "label": "NULLORDER()",
    "kind": "Method",
    "detail": "Function (# ifndef COLEITR_H # define COLEITR_H # include \" unicode / utypes . h \" # if ! UCONFIG_NO_COLLATION # include \" unicode / unistr . h \" # include \" unicode / uobject . h \" struct UCollationElements ; struct UHashtable ; U_NAMESPACE_BEGIN struct CollationData ; class CharacterIterator ; class CollationIterator ; class RuleBasedCollator ; class UCollationPCE ; class UVector32 ; class U_I18N_API CollationElementIterator U_FINAL : public UObject { public : enum {)",
    "insertText": "NULLORDER(int32_t)"
  },
  {
    "label": "CollationElementIterator()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CollationElementIterator(const CollationElementIterator& other)"
  },
  {
    "label": "CollationElementIterator()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "CollationElementIterator()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (UBool)",
    "insertText": "operator(const CollationElementIterator& other)"
  },
  {
    "label": "reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "reset(void)"
  },
  {
    "label": "next()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "next(UErrorCode& status)"
  },
  {
    "label": "previous()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "previous(UErrorCode& status)"
  },
  {
    "label": "primaryOrder()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "primaryOrder(int32_t order)"
  },
  {
    "label": "secondaryOrder()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "secondaryOrder(int32_t order)"
  },
  {
    "label": "tertiaryOrder()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "tertiaryOrder(int32_t order)"
  },
  {
    "label": "getMaxExpansion()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "getMaxExpansion(int32_t order)"
  },
  {
    "label": "strengthOrder()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "strengthOrder(int32_t order)"
  },
  {
    "label": "setText()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setText(const UnicodeString& str, UErrorCode& status)"
  },
  {
    "label": "setText()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setText(CharacterIterator& str, UErrorCode& status)"
  },
  {
    "label": "isIgnorable()",
    "kind": "Method",
    "detail": "Function (UBool)",
    "insertText": "isIgnorable(int32_t order)"
  },
  {
    "label": "getOffset()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "getOffset(void)"
  },
  {
    "label": "setOffset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setOffset(int32_t newOffset, UErrorCode& status)"
  },
  {
    "label": "getDynamicClassID()",
    "kind": "Method",
    "detail": "Function (UClassID)",
    "insertText": "getDynamicClassID()"
  },
  {
    "label": "getStaticClassID()",
    "kind": "Method",
    "detail": "Function (UClassID U_EXPORT2)",
    "insertText": "getStaticClassID()"
  },
  {
    "label": "fromUCollationElements()",
    "kind": "Method",
    "detail": "Function (# ifndef CollationElementIterator*)",
    "insertText": "fromUCollationElements(UCollationElements *uc)"
  },
  {
    "label": "fromUCollationElements()",
    "kind": "Method",
    "detail": "Function (} const CollationElementIterator*)",
    "insertText": "fromUCollationElements(const UCollationElements *uc)"
  },
  {
    "label": "toUCollationElements()",
    "kind": "Method",
    "detail": "Function (} UCollationElements*)",
    "insertText": "toUCollationElements()"
  },
  {
    "label": "CollationElementIterator()",
    "kind": "Method",
    "detail": "Function (} # endif private : class RuleBasedCollator ; class UCollationPCE ;)",
    "insertText": "CollationElementIterator(const UnicodeString& sourceText, const RuleBasedCollator* order, UErrorCode& status)"
  },
  {
    "label": "CollationElementIterator()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CollationElementIterator(const CharacterIterator& sourceText, const RuleBasedCollator* order, UErrorCode& status)"
  },
  {
    "label": "normalizeDir()",
    "kind": "Method",
    "detail": "Function (int8_t)",
    "insertText": "normalizeDir()"
  },
  {
    "label": "getMaxExpansion()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "getMaxExpansion(const UHashtable *maxExpansions, int32_t order)"
  }
]