[
  {
    "label": "PKCS12_MAC_DATA_st",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "PKCS12_MAC_DATA_st"
  },
  {
    "label": "PKCS12_st",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "PKCS12_st"
  },
  {
    "label": "PKCS12_SAFEBAG_st",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "PKCS12_SAFEBAG_st"
  },
  {
    "label": "pkcs12_bag_st",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "pkcs12_bag_st"
  },
  {
    "label": "PKCS12_mac_present()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "PKCS12_mac_present(const PKCS12 *p12)"
  },
  {
    "label": "PKCS12_get0_mac()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PKCS12_get0_mac(const ASN1_OCTET_STRING **pmac,\n                     const X509_ALGOR **pmacalg,\n                     const ASN1_OCTET_STRING **psalt,\n                     const ASN1_INTEGER **piter,\n                     const PKCS12 *p12)"
  },
  {
    "label": "PKCS12_SAFEBAG_get_nid()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "PKCS12_SAFEBAG_get_nid(const PKCS12_SAFEBAG *bag)"
  },
  {
    "label": "PKCS12_SAFEBAG_get_bag_nid()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "PKCS12_SAFEBAG_get_bag_nid(const PKCS12_SAFEBAG *bag)"
  },
  {
    "label": "PKCS12_add_localkeyid()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "PKCS12_add_localkeyid(PKCS12_SAFEBAG *bag, unsigned char *name,\n                          int namelen)"
  },
  {
    "label": "PKCS12_add_friendlyname_asc()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "PKCS12_add_friendlyname_asc(PKCS12_SAFEBAG *bag, const char *name,\n                                int namelen)"
  },
  {
    "label": "PKCS12_add_friendlyname_utf8()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "PKCS12_add_friendlyname_utf8(PKCS12_SAFEBAG *bag, const char *name,\n                                 int namelen)"
  },
  {
    "label": "PKCS12_add_CSPName_asc()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "PKCS12_add_CSPName_asc(PKCS12_SAFEBAG *bag, const char *name,\n                           int namelen)"
  },
  {
    "label": "PKCS12_add_friendlyname_uni()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "PKCS12_add_friendlyname_uni(PKCS12_SAFEBAG *bag,\n                                const unsigned char *name, int namelen)"
  },
  {
    "label": "PKCS8_add_keyusage()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "PKCS8_add_keyusage(PKCS8_PRIV_KEY_INFO *p8, int usage)"
  },
  {
    "label": "PKCS12_key_gen_asc()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "PKCS12_key_gen_asc(const char *pass, int passlen, unsigned char *salt,\n                       int saltlen, int id, int iter, int n,\n                       unsigned char *out, const EVP_MD *md_type)"
  },
  {
    "label": "PKCS12_key_gen_uni()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "PKCS12_key_gen_uni(unsigned char *pass, int passlen, unsigned char *salt,\n                       int saltlen, int id, int iter, int n,\n                       unsigned char *out, const EVP_MD *md_type)"
  },
  {
    "label": "PKCS12_key_gen_utf8()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "PKCS12_key_gen_utf8(const char *pass, int passlen, unsigned char *salt,\n                        int saltlen, int id, int iter, int n,\n                        unsigned char *out, const EVP_MD *md_type)"
  },
  {
    "label": "PKCS12_PBE_keyivgen()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "PKCS12_PBE_keyivgen(EVP_CIPHER_CTX *ctx, const char *pass, int passlen,\n                        ASN1_TYPE *param, const EVP_CIPHER *cipher,\n                        const EVP_MD *md_type, int en_de)"
  },
  {
    "label": "PKCS12_gen_mac()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "PKCS12_gen_mac(PKCS12 *p12, const char *pass, int passlen,\n                   unsigned char *mac, unsigned int *maclen)"
  },
  {
    "label": "PKCS12_verify_mac()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "PKCS12_verify_mac(PKCS12 *p12, const char *pass, int passlen)"
  },
  {
    "label": "PKCS12_set_mac()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "PKCS12_set_mac(PKCS12 *p12, const char *pass, int passlen,\n                   unsigned char *salt, int saltlen, int iter,\n                   const EVP_MD *md_type)"
  },
  {
    "label": "PKCS12_setup_mac()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "PKCS12_setup_mac(PKCS12 *p12, int iter, unsigned char *salt,\n                     int saltlen, const EVP_MD *md_type)"
  },
  {
    "label": "PKCS12_PBE_add()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PKCS12_PBE_add(void)"
  },
  {
    "label": "i2d_PKCS12_bio()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "i2d_PKCS12_bio(BIO *bp, PKCS12 *p12)"
  },
  {
    "label": "i2d_PKCS12_fp()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "i2d_PKCS12_fp(FILE *fp, PKCS12 *p12)"
  },
  {
    "label": "PKCS12_newpass()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "PKCS12_newpass(PKCS12 *p12, const char *oldpass, const char *newpass)"
  }
]