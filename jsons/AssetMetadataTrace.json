[
  {
    "label": "FChannel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FChannel"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (\ufeff # pragma once # include \" MetadataTrace . h \" # include \" ProfilingDebugging / StringsTrace . h \" # include \" Trace / Detail / EventNode . h \" # include \" Trace / Trace . h \" namespace UE { namespace Trace { class FChannel ; } } # if !)",
    "insertText": "defined(UE_TRACE_ASSET_METADATA_ENABLED) #define UE_TRACE_ASSET_METADATA_ENABLED UE_TRACE_METADATA_ENABLED #endif #if UE_TRACE_ASSET_METADATA_ENABLED CORE_API UE_TRACE_CHANNEL_EXTERN(AssetMetadataChannel)"
  },
  {
    "label": "UE_TRACE_METADATA_EVENT_BEGIN_EXTERN()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UE_TRACE_METADATA_EVENT_BEGIN_EXTERN(Asset) UE_TRACE_METADATA_EVENT_REFERENCE_FIELD(Strings, FName, Name) UE_TRACE_METADATA_EVENT_REFERENCE_FIELD(Strings, FName, Class) UE_TRACE_METADATA_EVENT_REFERENCE_FIELD(Strings, FName, Package) UE_TRACE_METADATA_EVENT_END() #define UE_TRACE_METADATA_SCOPE_ASSET(Object, ObjClass) \\ UE_TRACE_METADATA_SCOPE_ASSET_FNAME(Object->GetFName(), ObjClass->GetFName(), Object->GetPackage()->GetFName()) #define UE_TRACE_METADATA_SCOPE_ASSET_FNAME(ObjectName, ObjClassName, PackageName) \\ auto MetaNameRef = UE_TRACE_CHANNELEXPR_IS_ENABLED(MetadataChannel) ? FStringTrace::GetNameRef(ObjectName) : UE::Trace::FEventRef32(0,0)"
  },
  {
    "label": "UE_TRACE_CHANNELEXPR_IS_ENABLED()",
    "kind": "Method",
    "detail": "Function (\\ auto ClassNameRef =)",
    "insertText": "UE_TRACE_CHANNELEXPR_IS_ENABLED(MetadataChannel) ? FStringTrace::GetNameRef(ObjClassName) : UE::Trace::FEventRef32(0,0)"
  },
  {
    "label": "UE_TRACE_CHANNELEXPR_IS_ENABLED()",
    "kind": "Method",
    "detail": "Function (\\ auto PackageNameRef =)",
    "insertText": "UE_TRACE_CHANNELEXPR_IS_ENABLED(MetadataChannel) ? FStringTrace::GetNameRef(PackageName) : UE::Trace::FEventRef32(0,0)"
  },
  {
    "label": "UE_TRACE_METADATA_SCOPE()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "UE_TRACE_METADATA_SCOPE(Asset, AssetMetadataChannel)\\ << Asset.Name(MetaNameRef)\\ << Asset.Class(ClassNameRef)\\ << Asset.Package(PackageNameRef)"
  }
]