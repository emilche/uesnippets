[
  {
    "label": "FModifierKeysState",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FModifierKeysState"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FSlateModifierKeysState",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSlateModifierKeysState"
  },
  {
    "label": "UKismetInputLibrary",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UKismetInputLibrary"
  },
  {
    "label": "CalibrateTilt()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CalibrateTilt()"
  },
  {
    "label": "EqualEqual_KeyKey()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "EqualEqual_KeyKey(FKey A, FKey B)"
  },
  {
    "label": "EqualEqual_InputChordInputChord()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "EqualEqual_InputChordInputChord( FInputChord A, FInputChord B )"
  },
  {
    "label": "Key_IsModifierKey()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Key_IsModifierKey(const FKey& Key)"
  },
  {
    "label": "Key_IsGamepadKey()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Key_IsGamepadKey(const FKey& Key)"
  },
  {
    "label": "Key_IsMouseButton()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Key_IsMouseButton(const FKey& Key)"
  },
  {
    "label": "Key_IsKeyboardKey()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Key_IsKeyboardKey(const FKey& Key)"
  },
  {
    "label": "Key_IsVectorAxis()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Key_IsVectorAxis(const FKey& Key)"
  },
  {
    "label": "Key_IsAxis1D()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Key_IsAxis1D(const FKey& Key)"
  },
  {
    "label": "Key_IsAxis2D()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Key_IsAxis2D(const FKey& Key)"
  },
  {
    "label": "Key_IsAxis3D()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Key_IsAxis3D(const FKey& Key)"
  },
  {
    "label": "Key_IsButtonAxis()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Key_IsButtonAxis(const FKey& Key)"
  },
  {
    "label": "Key_IsAnalog()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Key_IsAnalog(const FKey& Key)"
  },
  {
    "label": "Key_IsDigital()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Key_IsDigital(const FKey& Key)"
  },
  {
    "label": "Key_IsValid()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Key_IsValid(const FKey& Key)"
  },
  {
    "label": "Key_GetNavigationAction()",
    "kind": "Method",
    "detail": "Function (EUINavigationAction)",
    "insertText": "Key_GetNavigationAction(const FKey& InKey)"
  },
  {
    "label": "Key_GetNavigationActionFromKey()",
    "kind": "Method",
    "detail": "Function (EUINavigationAction)",
    "insertText": "Key_GetNavigationActionFromKey(const FKeyEvent& InKeyEvent)"
  },
  {
    "label": "Key_GetNavigationDirectionFromKey()",
    "kind": "Method",
    "detail": "Function (EUINavigation)",
    "insertText": "Key_GetNavigationDirectionFromKey(const FKeyEvent& InKeyEvent)"
  },
  {
    "label": "Key_GetNavigationDirectionFromAnalog()",
    "kind": "Method",
    "detail": "Function (EUINavigation)",
    "insertText": "Key_GetNavigationDirectionFromAnalog(const FAnalogInputEvent& InAnalogEvent)"
  },
  {
    "label": "Key_GetDisplayName()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "Key_GetDisplayName(const FKey& Key, bool bLongDisplayName = true)"
  },
  {
    "label": "InputEvent_IsRepeat()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "InputEvent_IsRepeat(const FInputEvent& Input)"
  },
  {
    "label": "InputEvent_IsShiftDown()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "InputEvent_IsShiftDown(const FInputEvent& Input)"
  },
  {
    "label": "InputEvent_IsLeftShiftDown()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "InputEvent_IsLeftShiftDown(const FInputEvent& Input)"
  },
  {
    "label": "InputEvent_IsRightShiftDown()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "InputEvent_IsRightShiftDown(const FInputEvent& Input)"
  },
  {
    "label": "InputEvent_IsControlDown()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "InputEvent_IsControlDown(const FInputEvent& Input)"
  },
  {
    "label": "InputEvent_IsLeftControlDown()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "InputEvent_IsLeftControlDown(const FInputEvent& Input)"
  },
  {
    "label": "InputEvent_IsRightControlDown()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "InputEvent_IsRightControlDown(const FInputEvent& Input)"
  },
  {
    "label": "InputEvent_IsAltDown()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "InputEvent_IsAltDown(const FInputEvent& Input)"
  },
  {
    "label": "InputEvent_IsLeftAltDown()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "InputEvent_IsLeftAltDown(const FInputEvent& Input)"
  },
  {
    "label": "InputEvent_IsRightAltDown()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "InputEvent_IsRightAltDown(const FInputEvent& Input)"
  },
  {
    "label": "InputEvent_IsCommandDown()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "InputEvent_IsCommandDown(const FInputEvent& Input)"
  },
  {
    "label": "InputEvent_IsLeftCommandDown()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "InputEvent_IsLeftCommandDown(const FInputEvent& Input)"
  },
  {
    "label": "InputEvent_IsRightCommandDown()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "InputEvent_IsRightCommandDown(const FInputEvent& Input)"
  },
  {
    "label": "ModifierKeysState_IsShiftDown()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ModifierKeysState_IsShiftDown(const FSlateModifierKeysState& KeysState)"
  },
  {
    "label": "ModifierKeysState_IsControlDown()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ModifierKeysState_IsControlDown(const FSlateModifierKeysState& KeysState)"
  },
  {
    "label": "ModifierKeysState_IsAltDown()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ModifierKeysState_IsAltDown(const FSlateModifierKeysState& KeysState)"
  },
  {
    "label": "ModifierKeysState_IsCommandDown()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ModifierKeysState_IsCommandDown(const FSlateModifierKeysState& KeysState)"
  },
  {
    "label": "GetModifierKeysState()",
    "kind": "Method",
    "detail": "Function (FSlateModifierKeysState)",
    "insertText": "GetModifierKeysState()"
  },
  {
    "label": "InputChord_GetDisplayName()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "InputChord_GetDisplayName(const FInputChord& Key)"
  },
  {
    "label": "GetKey()",
    "kind": "Method",
    "detail": "Function (FKey)",
    "insertText": "GetKey(const FKeyEvent& Input)"
  },
  {
    "label": "GetUserIndex()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetUserIndex(const FKeyEvent& Input)"
  },
  {
    "label": "GetAnalogValue()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetAnalogValue(const FAnalogInputEvent& Input)"
  },
  {
    "label": "PointerEvent_GetScreenSpacePosition()",
    "kind": "Method",
    "detail": "Function (FVector2D)",
    "insertText": "PointerEvent_GetScreenSpacePosition(const FPointerEvent& Input)"
  },
  {
    "label": "PointerEvent_GetLastScreenSpacePosition()",
    "kind": "Method",
    "detail": "Function (FVector2D)",
    "insertText": "PointerEvent_GetLastScreenSpacePosition(const FPointerEvent& Input)"
  },
  {
    "label": "PointerEvent_GetCursorDelta()",
    "kind": "Method",
    "detail": "Function (FVector2D)",
    "insertText": "PointerEvent_GetCursorDelta(const FPointerEvent& Input)"
  },
  {
    "label": "PointerEvent_IsMouseButtonDown()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PointerEvent_IsMouseButtonDown(const FPointerEvent& Input, FKey MouseButton)"
  },
  {
    "label": "PointerEvent_GetEffectingButton()",
    "kind": "Method",
    "detail": "Function (FKey)",
    "insertText": "PointerEvent_GetEffectingButton(const FPointerEvent& Input)"
  },
  {
    "label": "PointerEvent_GetWheelDelta()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "PointerEvent_GetWheelDelta(const FPointerEvent& Input)"
  },
  {
    "label": "PointerEvent_GetUserIndex()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "PointerEvent_GetUserIndex(const FPointerEvent& Input)"
  },
  {
    "label": "PointerEvent_GetPointerIndex()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "PointerEvent_GetPointerIndex(const FPointerEvent& Input)"
  },
  {
    "label": "PointerEvent_GetTouchpadIndex()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "PointerEvent_GetTouchpadIndex(const FPointerEvent& Input)"
  },
  {
    "label": "PointerEvent_IsTouchEvent()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PointerEvent_IsTouchEvent(const FPointerEvent& Input)"
  },
  {
    "label": "PointerEvent_GetGestureType()",
    "kind": "Method",
    "detail": "Function (ESlateGesture)",
    "insertText": "PointerEvent_GetGestureType(const FPointerEvent& Input)"
  },
  {
    "label": "PointerEvent_GetGestureDelta()",
    "kind": "Method",
    "detail": "Function (FVector2D)",
    "insertText": "PointerEvent_GetGestureDelta(const FPointerEvent& Input)"
  }
]