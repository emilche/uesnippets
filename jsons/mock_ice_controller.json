[
  {
    "label": "MockIceController",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MockIceController"
  },
  {
    "label": "MockIceControllerFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MockIceControllerFactory"
  },
  {
    "label": "MockIceController()",
    "kind": "Method",
    "detail": "Function (# ifndef P2P_BASE_MOCK_ICE_CONTROLLER_H_ # define P2P_BASE_MOCK_ICE_CONTROLLER_H_ # include<memory> # include<vector> # include \" p2p / base / ice_controller_factory_interface . h \" # include \" p2p / base / ice_controller_interface . h \" # include \" test / gmock . h \" namespace cricket { class MockIceController : public cricket::IceControllerInterface { public :)",
    "insertText": "MockIceController(const cricket::IceControllerFactoryArgs& args)"
  },
  {
    "label": "MockIceController()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "MockIceController()"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(void, SetIceConfig, (const cricket::IceConfig&), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(void, SetSelectedConnection, (const cricket::Connection*), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(void, AddConnection, (const cricket::Connection*), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(void, OnConnectionDestroyed, (const cricket::Connection*), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(rtc::ArrayView<const cricket::Connection*>, connections, (), (const, override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(bool, HasPingableConnection, (), (const, override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(cricket::IceControllerInterface::PingResult, SelectConnectionToPing, (int64_t), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(bool, GetUseCandidateAttr, (const cricket::Connection*, cricket::NominationMode, cricket::IceMode), (const, override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(const cricket::Connection*, FindNextPingableConnection, (), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(void, MarkConnectionPinged, (const cricket::Connection*), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(cricket::IceControllerInterface::SwitchResult, ShouldSwitchConnection, (cricket::IceSwitchReason, const cricket::Connection*), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(cricket::IceControllerInterface::SwitchResult, SortAndSwitchConnection, (cricket::IceSwitchReason), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(std::vector<const cricket::Connection*>, PruneConnections, (), (override))"
  },
  {
    "label": "MockIceControllerFactory()",
    "kind": "Method",
    "detail": "Function (} ; class MockIceControllerFactory : public cricket::IceControllerFactoryInterface { public : ~)",
    "insertText": "MockIceControllerFactory()"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<cricket::IceControllerInterface>)",
    "insertText": "Create(const cricket::IceControllerFactoryArgs& args)"
  },
  {
    "label": "RecordIceControllerCreated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RecordIceControllerCreated()"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "MOCK_METHOD(void, RecordIceControllerCreated, ())"
  }
]