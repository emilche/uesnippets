[
  {
    "label": "FSlateBrush",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSlateBrush"
  },
  {
    "label": "FBaseTreeNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBaseTreeNode"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "TRACEINSIGHTSCORE_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TRACEINSIGHTSCORE_API"
  },
  {
    "label": "bool()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" InsightsCore / Common / AsyncOperationProgress . h \" # include \" InsightsCore / Table / ViewModels / TableCellValue . h \" # include \" InsightsCore / Table / ViewModels / TableColumn . h \" struct FSlateBrush ; namespace UE::Insights { class FBaseTreeNode ; typedef TSharedPtr<class FBaseTreeNode> FBaseTreeNodePtr ; enum class ESortMode { Ascending,Descending } ; typedef TFunction<)",
    "insertText": "bool(const FBaseTreeNodePtr& A, const FBaseTreeNodePtr& B)"
  },
  {
    "label": "GetName()",
    "kind": "Method",
    "detail": "Function (class ITableCellValueSorter { public : FName)",
    "insertText": "GetName()"
  },
  {
    "label": "GetShortName()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetShortName()"
  },
  {
    "label": "GetTitleName()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetTitleName()"
  },
  {
    "label": "GetDescription()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetDescription()"
  },
  {
    "label": "GetColumnId()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetColumnId()"
  },
  {
    "label": "GetIcon()",
    "kind": "Method",
    "detail": "Function (FSlateBrush*)",
    "insertText": "GetIcon(ESortMode SortMode)"
  },
  {
    "label": "GetTreeNodeCompareDelegate()",
    "kind": "Method",
    "detail": "Function (FTreeNodeCompareFunc)",
    "insertText": "GetTreeNodeCompareDelegate(ESortMode SortMode)"
  },
  {
    "label": "Sort()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Sort(TArray<FBaseTreeNodePtr>& NodesToSort, ESortMode SortMode)"
  },
  {
    "label": "SetAsyncOperationProgress()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAsyncOperationProgress(IAsyncOperationProgress* AsyncOperationProgress)"
  },
  {
    "label": "FTableCellValueSorter()",
    "kind": "Method",
    "detail": "Function (} ; class FTableCellValueSorter : public ITableCellValueSorter { public :)",
    "insertText": "FTableCellValueSorter(const FName InName, const FText& InShortName, const FText& InTitleName, const FText& InDescription, TSharedRef<FTableColumn> InColumnRef)"
  },
  {
    "label": "FTableCellValueSorter()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FTableCellValueSorter()"
  },
  {
    "label": "SetAsyncOperationProgress()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAsyncOperationProgress(IAsyncOperationProgress* InAsyncOperationProgress)"
  },
  {
    "label": "CancelSort()",
    "kind": "Method",
    "detail": "Function (AsyncOperationProgress = InAsyncOperationProgress ; } protected : bool)",
    "insertText": "CancelSort()"
  },
  {
    "label": "ShouldCancelSort()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldCancelSort()"
  },
  {
    "label": "FBaseTableColumnSorter()",
    "kind": "Method",
    "detail": "Function (protected : FName Name ; FText ShortName ; FText TitleName ; FText Description ; TSharedRef<FTableColumn> ColumnRef ; FSlateBrush* AscendingIcon ; FSlateBrush* DescendingIcon ; FTreeNodeCompareFunc AscendingCompareDelegate ; FTreeNodeCompareFunc DescendingCompareDelegate ; IAsyncOperationProgress* AsyncOperationProgress = nullptr ; } ; class FBaseTableColumnSorter : public FTableCellValueSorter { public :)",
    "insertText": "FBaseTableColumnSorter(TSharedRef<FTableColumn> InColumnRef)"
  },
  {
    "label": "FSorterByName()",
    "kind": "Method",
    "detail": "Function (} ; class FSorterByName : public FTableCellValueSorter { public :)",
    "insertText": "FSorterByName(TSharedRef<FTableColumn> InColumnRef)"
  },
  {
    "label": "FSorterByTypeName()",
    "kind": "Method",
    "detail": "Function (} ; class FSorterByTypeName : public FTableCellValueSorter { public :)",
    "insertText": "FSorterByTypeName(TSharedRef<FTableColumn> InColumnRef)"
  },
  {
    "label": "FSorterByBoolValue()",
    "kind": "Method",
    "detail": "Function (} ; class FSorterByBoolValue : public FBaseTableColumnSorter { public :)",
    "insertText": "FSorterByBoolValue(TSharedRef<FTableColumn> InColumnRef)"
  },
  {
    "label": "FSorterByInt64Value()",
    "kind": "Method",
    "detail": "Function (} ; class FSorterByInt64Value : public FBaseTableColumnSorter { public :)",
    "insertText": "FSorterByInt64Value(TSharedRef<FTableColumn> InColumnRef)"
  },
  {
    "label": "FSorterByFloatValue()",
    "kind": "Method",
    "detail": "Function (} ; class FSorterByFloatValue : public FBaseTableColumnSorter { public :)",
    "insertText": "FSorterByFloatValue(TSharedRef<FTableColumn> InColumnRef)"
  },
  {
    "label": "FSorterByDoubleValue()",
    "kind": "Method",
    "detail": "Function (} ; class FSorterByDoubleValue : public FBaseTableColumnSorter { public :)",
    "insertText": "FSorterByDoubleValue(TSharedRef<FTableColumn> InColumnRef)"
  },
  {
    "label": "FSorterByCStringValue()",
    "kind": "Method",
    "detail": "Function (} ; class FSorterByCStringValue : public FBaseTableColumnSorter { public :)",
    "insertText": "FSorterByCStringValue(TSharedRef<FTableColumn> InColumnRef)"
  },
  {
    "label": "FSorterByTextValue()",
    "kind": "Method",
    "detail": "Function (} ; class FSorterByTextValue : public FBaseTableColumnSorter { public :)",
    "insertText": "FSorterByTextValue(TSharedRef<FTableColumn> InColumnRef)"
  },
  {
    "label": "FSorterByTextValueWithId()",
    "kind": "Method",
    "detail": "Function (} ; class FSorterByTextValueWithId : public FBaseTableColumnSorter { public :)",
    "insertText": "FSorterByTextValueWithId(TSharedRef<FTableColumn> InColumnRef)"
  }
]