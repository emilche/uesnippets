[
  {
    "label": "FSceneTextureParameters",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSceneTextureParameters"
  },
  {
    "label": "FVisualizeSubsurfaceInputs",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FVisualizeSubsurfaceInputs"
  },
  {
    "label": "IsSubsurfaceEnabled()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" ScreenPass . h \" # include \" OverridePassSequence . h \" bool)",
    "insertText": "IsSubsurfaceEnabled()"
  },
  {
    "label": "IsSubsurfaceRequiredForView()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsSubsurfaceRequiredForView(const FViewInfo& View)"
  },
  {
    "label": "IsSubsurfaceCheckerboardFormat()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsSubsurfaceCheckerboardFormat(EPixelFormat SceneColorFormat)"
  },
  {
    "label": "AddVisualizeSubsurfacePass()",
    "kind": "Method",
    "detail": "Function (class FSceneTextureParameters ; struct FVisualizeSubsurfaceInputs { FScreenPassRenderTarget OverrideOutput ; FScreenPassTexture SceneColor ; TRDGUniformBufferRef<FSceneTextureUniformParameters> SceneTextures = nullptr ; } ; FScreenPassTexture)",
    "insertText": "AddVisualizeSubsurfacePass(FRDGBuilder& GraphBuilder, const FViewInfo& View, const FVisualizeSubsurfaceInputs& Inputs)"
  },
  {
    "label": "AddSubsurfacePass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddSubsurfacePass(FRDGBuilder& GraphBuilder, FSceneTextures& SceneTextures, TArrayView<const FViewInfo> Views)"
  }
]