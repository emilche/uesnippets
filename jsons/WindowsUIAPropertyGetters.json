[
  {
    "label": "FVariant",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVariant"
  },
  {
    "label": "IAccessibleWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IAccessibleWidget"
  },
  {
    "label": "GetPropertyValueWindows()",
    "kind": "Method",
    "detail": "Function (# pragma once # if WITH_ACCESSIBILITY&& UE_WINDOWS_USING_UIA # include \" Windows / AllowWindowsPlatformTypes . h \" # include<Ole2 . h> # include \" Windows / HideWindowsPlatformTypes . h \" # include<UIAutomation . h> # include \" Templates / SharedPointer . h \" class FVariant ; class IAccessibleWidget ; namespace WindowsUIAPropertyGetters { VARIANT)",
    "insertText": "GetPropertyValueWindows(TSharedRef<IAccessibleWidget> AccessibleWidget, PROPERTYID WindowsPropertyId)"
  },
  {
    "label": "GetPropertyValue()",
    "kind": "Method",
    "detail": "Function (FVariant)",
    "insertText": "GetPropertyValue(TSharedRef<IAccessibleWidget> AccessibleWidget, PROPERTYID WindowsPropertyId)"
  },
  {
    "label": "FVariantToWindowsVariant()",
    "kind": "Method",
    "detail": "Function (VARIANT)",
    "insertText": "FVariantToWindowsVariant(const FVariant& Value)"
  }
]