[
  {
    "label": "_Tp",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_Tp"
  },
  {
    "label": "__libcpp_is_integral",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "__libcpp_is_integral"
  },
  {
    "label": "_LIBCPP_TEMPLATE_VIS",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_LIBCPP_TEMPLATE_VIS"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# ifndef _LIBCPP___TYPE_TRAITS_IS_INTEGRAL_H # define _LIBCPP___TYPE_TRAITS_IS_INTEGRAL_H # include<__config> # include<__type_traits / integral_constant . h> # include<__type_traits / remove_cv . h> # if !)",
    "insertText": "defined(_LIBCPP_HAS_NO_PRAGMA_SYSTEM_HEADER)"
  },
  {
    "label": "__has_builtin()",
    "kind": "Method",
    "detail": "Function (enum { value = 0 } ; } ; template<> struct __libcpp_is_integral<bool> { enum { value = 1 } ; } ; template<> struct __libcpp_is_integral<char> { enum { value = 1 } ; } ; template<> struct __libcpp_is_integral<signed char> { enum { value = 1 } ; } ; template<> struct __libcpp_is_integral<unsigned char> { enum { value = 1 } ; } ; # ifndef _LIBCPP_HAS_NO_WIDE_CHARACTERS template<> struct __libcpp_is_integral<wchar_t> { enum { value = 1 } ; } ; # endif # ifndef _LIBCPP_HAS_NO_CHAR8_T template<> struct __libcpp_is_integral<char8_t> { enum { value = 1 } ; } ; # endif template<> struct __libcpp_is_integral<char16_t> { enum { value = 1 } ; } ; template<> struct __libcpp_is_integral<char32_t> { enum { value = 1 } ; } ; template<> struct __libcpp_is_integral<short> { enum { value = 1 } ; } ; template<> struct __libcpp_is_integral<unsigned short> { enum { value = 1 } ; } ; template<> struct __libcpp_is_integral<int> { enum { value = 1 } ; } ; template<> struct __libcpp_is_integral<unsigned int> { enum { value = 1 } ; } ; template<> struct __libcpp_is_integral<long> { enum { value = 1 } ; } ; template<> struct __libcpp_is_integral<unsigned long> { enum { value = 1 } ; } ; template<> struct __libcpp_is_integral<long long> { enum { value = 1 } ; } ; template<> struct __libcpp_is_integral<unsigned long long> { enum { value = 1 } ; } ; # ifndef _LIBCPP_HAS_NO_INT128 template<> struct __libcpp_is_integral<__int128_t> { enum { value = 1 } ; } ; template<> struct __libcpp_is_integral<__uint128_t> { enum { value = 1 } ; } ; # endif # if)",
    "insertText": "__has_builtin(__is_integral) template <class _Tp> struct _LIBCPP_TEMPLATE_VIS is_integral : _BoolConstant<__is_integral(_Tp)"
  },
  {
    "label": "__is_integral()",
    "kind": "Method",
    "detail": "Function (} ; # if _LIBCPP_STD_VER> 1 4 template<class _Tp> bool is_integral_v =)",
    "insertText": "__is_integral(_Tp)"
  }
]