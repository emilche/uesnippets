[
  {
    "label": "FBXSDK_DLL",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBXSDK_DLL"
  },
  {
    "label": "EType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EType"
  },
  {
    "label": "ERotationType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ERotationType"
  },
  {
    "label": "ERotationClampType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ERotationClampType"
  },
  {
    "label": "FbxLimitsUtilities()",
    "kind": "Method",
    "detail": "Function (# ifndef _FBXSDK_SCENE_GEOMETRY_LIMIT_UTILS_H_ # define _FBXSDK_SCENE_GEOMETRY_LIMIT_UTILS_H_ # include<fbxsdk / fbxsdk_def . h> # include<fbxsdk / core / math / fbxvector4 . h> # include<fbxsdk / core / math / fbxtransforms . h> # include<fbxsdk / scene / geometry / fbxnode . h> # include<fbxsdk / fbxsdk_nsbegin . h> class FBXSDK_DLL FbxLimitsUtilities { public : enum EType { eTranslation,eRotation,eScaling } ; enum ERotationType { eQuaternion,eEuler } ; enum ERotationClampType { eRectangular,eEllipsoid } ;)",
    "insertText": "FbxLimitsUtilities(FbxNode* pNode)"
  },
  {
    "label": "SetAuto()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAuto(EType pType, bool pAuto)"
  },
  {
    "label": "GetAuto()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetAuto(EType pType)"
  },
  {
    "label": "SetEnable()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetEnable(EType pType, bool pEnable)"
  },
  {
    "label": "GetEnable()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetEnable(EType pType)"
  },
  {
    "label": "SetDefault()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDefault(EType pType, FbxVector4 pDefault)"
  },
  {
    "label": "GetDefault()",
    "kind": "Method",
    "detail": "Function (FbxVector4)",
    "insertText": "GetDefault(EType pType)"
  },
  {
    "label": "SetMin()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetMin(EType pType, FbxVector4 pMin)"
  },
  {
    "label": "GetMin()",
    "kind": "Method",
    "detail": "Function (FbxVector4)",
    "insertText": "GetMin(EType pType)"
  },
  {
    "label": "SetMax()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetMax(EType pType, FbxVector4 pMax)"
  },
  {
    "label": "GetMax()",
    "kind": "Method",
    "detail": "Function (FbxVector4)",
    "insertText": "GetMax(EType pType)"
  },
  {
    "label": "SetRotationType()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRotationType(ERotationType pType)"
  },
  {
    "label": "GetRotationType()",
    "kind": "Method",
    "detail": "Function (ERotationType)",
    "insertText": "GetRotationType()"
  },
  {
    "label": "GetRotationClampType()",
    "kind": "Method",
    "detail": "Function (ERotationClampType)",
    "insertText": "GetRotationClampType()"
  },
  {
    "label": "SetRotationAxis()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRotationAxis(FbxVector4 pRotationAxis)"
  },
  {
    "label": "GetRotationAxis()",
    "kind": "Method",
    "detail": "Function (FbxVector4)",
    "insertText": "GetRotationAxis()"
  },
  {
    "label": "SetAxisLength()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAxisLength(double pLength)"
  },
  {
    "label": "UpdateAutomatic()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateAutomatic(FbxNode* pNode)"
  },
  {
    "label": "GetEndPointTranslation()",
    "kind": "Method",
    "detail": "Function (FbxVector4)",
    "insertText": "GetEndPointTranslation(FbxNode* pNode)"
  },
  {
    "label": "GetEndSite()",
    "kind": "Method",
    "detail": "Function (FbxVector4)",
    "insertText": "GetEndSite(FbxNode* pNode)"
  }
]