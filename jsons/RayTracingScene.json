[
  {
    "label": "FGPUScene",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGPUScene"
  },
  {
    "label": "FRHIRayTracingScene",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRHIRayTracingScene"
  },
  {
    "label": "FRHIShaderResourceView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRHIShaderResourceView"
  },
  {
    "label": "FRayTracingGeometry",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRayTracingGeometry"
  },
  {
    "label": "FRDGBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRDGBuilder"
  },
  {
    "label": "FPrimitiveSceneProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPrimitiveSceneProxy"
  },
  {
    "label": "FRayTracingScene",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRayTracingScene"
  },
  {
    "label": "FInstanceHandle",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInstanceHandle"
  },
  {
    "label": "FInstanceRange",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInstanceRange"
  },
  {
    "label": "FLayer",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLayer"
  },
  {
    "label": "FInstanceHandle()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" RHIDefinitions . h \" # if RHI_RAYTRACING # include \" Async / TaskGraphInterfaces . h \" # include \" Math / DoubleFloat . h \" # include \" RHI . h \" # include \" RHIUtilities . h \" # include \" RHIGPUReadback . h \" # include \" RenderGraphResources . h \" # include \" Misc / MemStack . h \" # include \" Containers / ArrayView . h \" # include \" MeshPassProcessor . h \" # include \" RayTracingShaderBindingTable . h \" # include \" RayTracingInstanceBufferUtil . h \" # include \" RayTracingDebugTypes . h \" class FGPUScene ; class FRHIRayTracingScene ; class FRHIShaderResourceView ; class FRayTracingGeometry ; class FRDGBuilder ; class FPrimitiveSceneProxy ; namespace Nanite { using CoarseMeshStreamingHandle = int16 ; } class FRayTracingScene { public : struct FInstanceHandle {)",
    "insertText": "FInstanceHandle() : Layer(ERayTracingSceneLayer::NUM) , Index(UINT32_MAX)"
  },
  {
    "label": "IsValid()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsValid()"
  },
  {
    "label": "FInstanceRange()",
    "kind": "Method",
    "detail": "Function (} ERayTracingSceneLayer Layer ; uint32 Index ; class FRayTracingScene ; } ; const FInstanceHandle INVALID_INSTANCE_HANDLE ; struct FInstanceRange { private :)",
    "insertText": "FInstanceRange(ERayTracingSceneLayer InLayer, uint32 InStartIndex, uint32 InNum) : Layer(InLayer) , StartIndex(InStartIndex) , Num(InNum)"
  },
  {
    "label": "FRayTracingScene()",
    "kind": "Method",
    "detail": "Function (} ERayTracingSceneLayer Layer ; uint32 StartIndex ; uint32 Num ; class FRayTracingScene ; } ;)",
    "insertText": "FRayTracingScene()"
  },
  {
    "label": "AddInstance()",
    "kind": "Method",
    "detail": "Function (FInstanceHandle)",
    "insertText": "AddInstance(FRayTracingGeometryInstance Instance, ERayTracingSceneLayer Layer, const FPrimitiveSceneProxy* Proxy = nullptr, bool bDynamic = false)"
  },
  {
    "label": "AllocateInstanceRangeUninitialized()",
    "kind": "Method",
    "detail": "Function (FInstanceRange)",
    "insertText": "AllocateInstanceRangeUninitialized(uint32 NumInstances, ERayTracingSceneLayer Layer)"
  },
  {
    "label": "SetInstance()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetInstance(FInstanceRange InstanceRange, uint32 InstanceIndexInRange, FRayTracingGeometryInstance Instance, const FPrimitiveSceneProxy* Proxy = nullptr, bool bDynamic = false)"
  },
  {
    "label": "BuildInitializationData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildInitializationData()"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Create(FRDGBuilder& GraphBuilder, const FViewInfo& View, const FGPUScene* GPUScene, ERDGPassFlags ComputePassFlags)"
  },
  {
    "label": "Build()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Build(FRDGBuilder& GraphBuilder, ERDGPassFlags ComputePassFlags, FRDGBufferRef DynamicGeometryScratchBuffer)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset(bool bInstanceDebugDataEnabled)"
  },
  {
    "label": "EndFrame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EndFrame()"
  },
  {
    "label": "Allocate()",
    "kind": "Method",
    "detail": "Function (template<T> TArrayView<T>)",
    "insertText": "Allocate(int32 Count)"
  },
  {
    "label": "IsCreated()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsCreated()"
  },
  {
    "label": "GetRHIRayTracingScene()",
    "kind": "Method",
    "detail": "Function (FRHIRayTracingScene*)",
    "insertText": "GetRHIRayTracingScene(ERayTracingSceneLayer Layer)"
  },
  {
    "label": "GetRHIRayTracingSceneChecked()",
    "kind": "Method",
    "detail": "Function (FRHIRayTracingScene*)",
    "insertText": "GetRHIRayTracingSceneChecked(ERayTracingSceneLayer Layer)"
  },
  {
    "label": "CreateLayerViewRHI()",
    "kind": "Method",
    "detail": "Function (FShaderResourceViewRHIRef)",
    "insertText": "CreateLayerViewRHI(FRHICommandListBase& RHICmdList, ERayTracingSceneLayer Layer)"
  },
  {
    "label": "GetLayerView()",
    "kind": "Method",
    "detail": "Function (FRDGBufferSRVRef)",
    "insertText": "GetLayerView(ERayTracingSceneLayer Layer)"
  },
  {
    "label": "GetInstanceBuffer()",
    "kind": "Method",
    "detail": "Function (FRDGBufferRef)",
    "insertText": "GetInstanceBuffer(ERayTracingSceneLayer Layer)"
  },
  {
    "label": "GetInstances()",
    "kind": "Method",
    "detail": "Function (} TConstArrayView<FRayTracingGeometryInstance>)",
    "insertText": "GetInstances(ERayTracingSceneLayer Layer)"
  },
  {
    "label": "GetInstance()",
    "kind": "Method",
    "detail": "Function (} FRayTracingGeometryInstance&)",
    "insertText": "GetInstance(FInstanceHandle Handle)"
  },
  {
    "label": "GetTotalNumSegments()",
    "kind": "Method",
    "detail": "Function (} uint32)",
    "insertText": "GetTotalNumSegments()"
  },
  {
    "label": "GetInstanceDebugBuffer()",
    "kind": "Method",
    "detail": "Function (FRDGBufferRef)",
    "insertText": "GetInstanceDebugBuffer(ERayTracingSceneLayer Layer)"
  },
  {
    "label": "GetDebugInstanceGPUSceneIndexBuffer()",
    "kind": "Method",
    "detail": "Function (} FRDGBufferRef)",
    "insertText": "GetDebugInstanceGPUSceneIndexBuffer(ERayTracingSceneLayer Layer)"
  },
  {
    "label": "InitPreViewTranslation()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "InitPreViewTranslation(const FViewMatrices& ViewMatrices)"
  },
  {
    "label": "ReleaseReadbackBuffers()",
    "kind": "Method",
    "detail": "Function (public : uint32 NumSegments = 0 ; uint32 NumMissShaderSlots = 1 ; uint32 NumCallableShaderSlots = 0 ; TArray<FRayTracingShaderCommand> CallableCommands ; TArray<FUniformBufferRHIRef> UniformBuffers ; TArray<const FRayTracingGeometry*> GeometriesToBuild ; TArray<Nanite::CoarseMeshStreamingHandle> UsedCoarseMeshStreamingHandles ; bool bNeedsDebugInstanceGPUSceneIndexBuffer = false ; FVector PreViewTranslation { } ; private : void)",
    "insertText": "ReleaseReadbackBuffers()"
  }
]