[
  {
    "label": "FVulkanDevice",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanDevice"
  },
  {
    "label": "FVulkanCommandBufferPool",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanCommandBufferPool"
  },
  {
    "label": "FVulkanCommandBufferManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanCommandBufferManager"
  },
  {
    "label": "FVulkanRenderTargetLayout",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanRenderTargetLayout"
  },
  {
    "label": "FVulkanQueue",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanQueue"
  },
  {
    "label": "FVulkanDescriptorPoolSetContainer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanDescriptorPoolSetContainer"
  },
  {
    "label": "FVulkanGPUTiming",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanGPUTiming"
  },
  {
    "label": "FFence",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFence"
  },
  {
    "label": "FSemaphore",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSemaphore"
  },
  {
    "label": "FVulkanCmdBuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanCmdBuffer"
  },
  {
    "label": "FVulkanCommandBufferManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanCommandBufferManager"
  },
  {
    "label": "FVulkanCommandBufferPool",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanCommandBufferPool"
  },
  {
    "label": "FVulkanQueue",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanQueue"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FVulkanRenderPass",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanRenderPass"
  },
  {
    "label": "FVulkanFramebuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanFramebuffer"
  },
  {
    "label": "FVulkanDescriptorSetsLayout",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanDescriptorSetsLayout"
  },
  {
    "label": "PendingQuery",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "PendingQuery"
  },
  {
    "label": "FVulkanTypedDescriptorPoolSet",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanTypedDescriptorPoolSet"
  },
  {
    "label": "FVulkanDynamicRHI",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanDynamicRHI"
  },
  {
    "label": "FVulkanLayoutManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanLayoutManager"
  },
  {
    "label": "FVulkanCommandBufferPool",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanCommandBufferPool"
  },
  {
    "label": "FVulkanCommandBufferManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanCommandBufferManager"
  },
  {
    "label": "FVulkanCommandBufferManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanCommandBufferManager"
  },
  {
    "label": "FQueryPoolReset",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FQueryPoolReset"
  },
  {
    "label": "AddWaitSemaphore()",
    "kind": "Method",
    "detail": "Function (VULKANRHI_API)",
    "insertText": "AddWaitSemaphore(VkPipelineStageFlags InWaitFlags, TArrayView<VulkanRHI::FSemaphore*> InWaitSemaphores)"
  },
  {
    "label": "Begin()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Begin()"
  },
  {
    "label": "End()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "End()"
  },
  {
    "label": "BeginRenderPass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginRenderPass(const FVulkanRenderTargetLayout& Layout, class FVulkanRenderPass* RenderPass, class FVulkanFramebuffer* Framebuffer, const VkClearValue* AttachmentClearValues)"
  },
  {
    "label": "EndRenderPass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EndRenderPass()"
  },
  {
    "label": "BeginUniformUpdateBarrier()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginUniformUpdateBarrier()"
  },
  {
    "label": "EndUniformUpdateBarrier()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EndUniformUpdateBarrier()"
  },
  {
    "label": "AcquirePoolSetAndDescriptorsIfNeeded()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AcquirePoolSetAndDescriptorsIfNeeded(const class FVulkanDescriptorSetsLayout& Layout, bool bNeedDescriptors, VkDescriptorSet* OutDescriptors)"
  },
  {
    "label": "AddPendingTimestampQuery()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddPendingTimestampQuery(uint64 Index, uint64 Count, VkQueryPool PoolHandle, VkBuffer BufferHandle, bool bBlocking)"
  },
  {
    "label": "RefreshFenceStatus()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RefreshFenceStatus()"
  },
  {
    "label": "InitializeTimings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeTimings(FVulkanCommandListContext* InContext)"
  },
  {
    "label": "AcquirePoolSetContainer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AcquirePoolSetContainer()"
  },
  {
    "label": "AllocMemory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AllocMemory()"
  },
  {
    "label": "FreeMemory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FreeMemory()"
  },
  {
    "label": "FVulkanCommandBufferPool()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FVulkanCommandBufferPool(FVulkanDevice* InDevice, FVulkanCommandBufferManager& InMgr)"
  },
  {
    "label": "RefreshFenceStatus()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RefreshFenceStatus(FVulkanCmdBuffer* SkipCmdBuffer = nullptr)"
  },
  {
    "label": "FreeUnusedCmdBuffers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FreeUnusedCmdBuffers(FVulkanQueue* Queue, bool bTrimMemory)"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Create(uint32 QueueFamilyIndex)"
  },
  {
    "label": "FVulkanCommandBufferManager()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FVulkanCommandBufferManager(FVulkanDevice* InDevice, FVulkanCommandListContext* InContext)"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Init(FVulkanCommandListContext* InContext)"
  },
  {
    "label": "SubmitUploadCmdBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SubmitUploadCmdBuffer(uint32 NumSignalSemaphores = 0, VkSemaphore* SignalSemaphores = nullptr)"
  },
  {
    "label": "SubmitActiveCmdBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SubmitActiveCmdBuffer(TArrayView<VulkanRHI::FSemaphore*> SignalSemaphores)"
  },
  {
    "label": "SubmitActiveCmdBufferFromPresent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SubmitActiveCmdBufferFromPresent(VulkanRHI::FSemaphore* SignalSemaphore = nullptr)"
  },
  {
    "label": "WaitForCmdBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WaitForCmdBuffer(FVulkanCmdBuffer* CmdBuffer, float TimeInSecondsToWait = 10.0f)"
  },
  {
    "label": "AddQueryPoolForReset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddQueryPoolForReset(VkQueryPool Pool, uint32 Size)"
  },
  {
    "label": "FlushResetQueryPools()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FlushResetQueryPools()"
  },
  {
    "label": "PrepareForNewActiveCommandBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PrepareForNewActiveCommandBuffer()"
  },
  {
    "label": "CalculateGPUTime()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "CalculateGPUTime()"
  },
  {
    "label": "FreeUnusedCmdBuffers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FreeUnusedCmdBuffers(bool bTrimMemory)"
  }
]