[
  {
    "label": "VideoFrameBufferPool",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "VideoFrameBufferPool"
  },
  {
    "label": "VideoFrameBufferPool()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "VideoFrameBufferPool()"
  },
  {
    "label": "VideoFrameBufferPool()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "VideoFrameBufferPool(bool zero_initialize)"
  },
  {
    "label": "CreateI420Buffer()",
    "kind": "Method",
    "detail": "Function (rtc::scoped_refptr<I420Buffer>)",
    "insertText": "CreateI420Buffer(int width, int height)"
  },
  {
    "label": "CreateI422Buffer()",
    "kind": "Method",
    "detail": "Function (rtc::scoped_refptr<I422Buffer>)",
    "insertText": "CreateI422Buffer(int width, int height)"
  },
  {
    "label": "CreateI444Buffer()",
    "kind": "Method",
    "detail": "Function (rtc::scoped_refptr<I444Buffer>)",
    "insertText": "CreateI444Buffer(int width, int height)"
  },
  {
    "label": "CreateI010Buffer()",
    "kind": "Method",
    "detail": "Function (rtc::scoped_refptr<I010Buffer>)",
    "insertText": "CreateI010Buffer(int width, int height)"
  },
  {
    "label": "CreateI210Buffer()",
    "kind": "Method",
    "detail": "Function (rtc::scoped_refptr<I210Buffer>)",
    "insertText": "CreateI210Buffer(int width, int height)"
  },
  {
    "label": "CreateNV12Buffer()",
    "kind": "Method",
    "detail": "Function (rtc::scoped_refptr<NV12Buffer>)",
    "insertText": "CreateNV12Buffer(int width, int height)"
  },
  {
    "label": "Resize()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Resize(size_t max_number_of_buffers)"
  },
  {
    "label": "Release()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Release()"
  },
  {
    "label": "GetExistingBuffer()",
    "kind": "Method",
    "detail": "Function (rtc::scoped_refptr<VideoFrameBuffer>)",
    "insertText": "GetExistingBuffer(int width, int height, VideoFrameBuffer::Type type)"
  }
]