[
  {
    "label": "RtcEventLogSource",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RtcEventLogSource"
  },
  {
    "label": "NetEqEventLogInput",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "NetEqEventLogInput"
  },
  {
    "label": "CreateFromFile()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_AUDIO_CODING_NETEQ_TOOLS_NETEQ_EVENT_LOG_INPUT_H_ # define MODULES_AUDIO_CODING_NETEQ_TOOLS_NETEQ_EVENT_LOG_INPUT_H_ # include<map> # include<memory> # include<string> # include \" absl / strings / string_view . h \" # include \" modules / audio_coding / neteq / tools / neteq_packet_source_input . h \" # include \" modules / rtp_rtcp / include / rtp_rtcp_defines . h \" namespace webrtc { namespace test { class RtcEventLogSource ; class NetEqEventLogInput final : public NetEqPacketSourceInput { public : NetEqEventLogInput*)",
    "insertText": "CreateFromFile(absl::string_view file_name, absl::optional<uint32_t> ssrc_filter)"
  },
  {
    "label": "CreateFromString()",
    "kind": "Method",
    "detail": "Function (NetEqEventLogInput*)",
    "insertText": "CreateFromString(absl::string_view file_contents, absl::optional<uint32_t> ssrc_filter)"
  },
  {
    "label": "NextOutputEventTime()",
    "kind": "Method",
    "detail": "Function (absl::optional<int64_t>)",
    "insertText": "NextOutputEventTime()"
  },
  {
    "label": "AdvanceOutputEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AdvanceOutputEvent()"
  },
  {
    "label": "source()",
    "kind": "Method",
    "detail": "Function (protected : PacketSource*)",
    "insertText": "source()"
  },
  {
    "label": "NetEqEventLogInput()",
    "kind": "Method",
    "detail": "Function (private :)",
    "insertText": "NetEqEventLogInput(std::unique_ptr<RtcEventLogSource> source)"
  }
]