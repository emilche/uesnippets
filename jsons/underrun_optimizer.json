[
  {
    "label": "UnderrunOptimizer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UnderrunOptimizer"
  },
  {
    "label": "UnderrunOptimizer()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_AUDIO_CODING_NETEQ_UNDERRUN_OPTIMIZER_H_ # define MODULES_AUDIO_CODING_NETEQ_UNDERRUN_OPTIMIZER_H_ # include<memory> # include \" absl / types / optional . h \" # include \" api / neteq / tick_timer . h \" # include \" modules / audio_coding / neteq / histogram . h \" namespace webrtc { class UnderrunOptimizer { public :)",
    "insertText": "UnderrunOptimizer(const TickTimer* tick_timer, int histogram_quantile, int forget_factor, absl::optional<int> start_forget_weight, absl::optional<int> resample_interval_ms)"
  },
  {
    "label": "Update()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Update(int relative_delay_ms)"
  },
  {
    "label": "GetOptimalDelayMs()",
    "kind": "Method",
    "detail": "Function (absl::optional<int>)",
    "insertText": "GetOptimalDelayMs()"
  }
]