[
  {
    "label": "FBlueprintEditor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBlueprintEditor"
  },
  {
    "label": "FMenuBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMenuBuilder"
  },
  {
    "label": "FUICommandList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FUICommandList"
  },
  {
    "label": "FGraphActionListBuilderBase",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGraphActionListBuilderBase"
  },
  {
    "label": "SBlueprintFavoritesPalette",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SBlueprintFavoritesPalette"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" SBlueprintSubPalette . h \" # include \" Templates / SharedPointer . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" class FBlueprintEditor ; class FMenuBuilder ; class FUICommandList ; struct FGraphActionListBuilderBase ; class SBlueprintFavoritesPalette : public SBlueprintSubPalette { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SBlueprintFavoritesPalette)"
  },
  {
    "label": "SLATE_END_ARGS()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_END_ARGS() virtual ~SBlueprintFavoritesPalette()"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct(const FArguments& InArgs, TWeakPtr<FBlueprintEditor> InBlueprintEditor)"
  },
  {
    "label": "CollectAllActions()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "CollectAllActions(FGraphActionListBuilderBase& OutAllActions)"
  },
  {
    "label": "BindCommands()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BindCommands(TSharedPtr<FUICommandList> CommandListIn)"
  },
  {
    "label": "GenerateContextMenuEntries()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GenerateContextMenuEntries(FMenuBuilder& MenuBuilder)"
  }
]