[
  {
    "label": "FAnimNode_RotationOffsetBlendSpace",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimNode_RotationOffsetBlendSpace"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" Animation / AnimNodeBase . h \" # include \" AnimNodes / AnimNode_BlendSpacePlayer . h \" # include \" Animation / InputScaleBias . h \" # include \" AnimNode_RotationOffsetBlendSpace . generated . h \")",
    "insertText": "USTRUCT(BlueprintInternalUseOnly)"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() UPROPERTY(EditAnywhere, BlueprintReadWrite, Category=Links)"
  },
  {
    "label": "FAnimNode_RotationOffsetBlendSpace()",
    "kind": "Method",
    "detail": "Function (bool bIsLODEnabled ; public :)",
    "insertText": "FAnimNode_RotationOffsetBlendSpace()"
  },
  {
    "label": "Initialize_AnyThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Initialize_AnyThread(const FAnimationInitializeContext& Context)"
  },
  {
    "label": "CacheBones_AnyThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CacheBones_AnyThread(const FAnimationCacheBonesContext& Context)"
  },
  {
    "label": "UpdateAssetPlayer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateAssetPlayer(const FAnimationUpdateContext& Context)"
  },
  {
    "label": "Evaluate_AnyThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Evaluate_AnyThread(FPoseContext& Output)"
  },
  {
    "label": "GatherDebugData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GatherDebugData(FNodeDebugData& DebugData)"
  },
  {
    "label": "GetLODThreshold()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetLODThreshold()"
  }
]