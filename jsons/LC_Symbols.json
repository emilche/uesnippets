[
  {
    "label": "CoffCache",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CoffCache"
  },
  {
    "label": "CoffDB",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "CoffDB"
  },
  {
    "label": "Symbol",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Symbol"
  },
  {
    "label": "SymbolDB",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SymbolDB"
  },
  {
    "label": "Contribution",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Contribution"
  },
  {
    "label": "ContributionDB",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ContributionDB"
  },
  {
    "label": "CompilandSourceFiles",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "CompilandSourceFiles"
  },
  {
    "label": "Compiland",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Compiland"
  },
  {
    "label": "Type",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Type"
  },
  {
    "label": "Enum",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Enum"
  },
  {
    "label": "AmalgamatedCompiland",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "AmalgamatedCompiland"
  },
  {
    "label": "ModifiedObjFile",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ModifiedObjFile"
  },
  {
    "label": "Dependency",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Dependency"
  },
  {
    "label": "CompilandDB",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "CompilandDB"
  },
  {
    "label": "DiaCompilandDB",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DiaCompilandDB"
  },
  {
    "label": "ModuleDB",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ModuleDB"
  },
  {
    "label": "LibraryDB",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "LibraryDB"
  },
  {
    "label": "LinkerDB",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "LinkerDB"
  },
  {
    "label": "ThunkDB",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ThunkDB"
  },
  {
    "label": "ImageSection",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ImageSection"
  },
  {
    "label": "ImageSectionDB",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ImageSectionDB"
  },
  {
    "label": "Provider",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Provider"
  },
  {
    "label": "DynamicInitializerDB",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DynamicInitializerDB"
  },
  {
    "label": "UserDefinedTypesDB",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "UserDefinedTypesDB"
  },
  {
    "label": "OpenOptions",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "OpenOptions"
  },
  {
    "label": "Enum",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Enum"
  },
  {
    "label": "CompilandOptions",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "CompilandOptions"
  },
  {
    "label": "Enum",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Enum"
  },
  {
    "label": "LC_DISABLE_ASSIGNMENT()",
    "kind": "Method",
    "detail": "Function (directory)",
    "insertText": "LC_DISABLE_ASSIGNMENT(LinkerDB)"
  },
  {
    "label": "Close()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Close(Provider* provider)"
  },
  {
    "label": "ResetCachedUnityManifests()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetCachedUnityManifests()"
  },
  {
    "label": "TryGetCompilandIdFromUnityManifest()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TryGetCompilandIdFromUnityManifest(const std::wstring& objPath, uint32_t& compilandId)"
  },
  {
    "label": "GetCompilandIdFromPath()",
    "kind": "Method",
    "detail": "Function (uint32_t)",
    "insertText": "GetCompilandIdFromPath(const std::wstring& objPath)"
  },
  {
    "label": "FinalizeContributions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FinalizeContributions(const CompilandDB* compilandDb, ContributionDB* db)"
  },
  {
    "label": "GatherDynamicInitializers()",
    "kind": "Method",
    "detail": "Function (DynamicInitializerDB)",
    "insertText": "GatherDynamicInitializers(const Provider* provider, const executable::Image* image, const executable::ImageSectionDB* imageSections, const ImageSectionDB* imageSectionDb, const ContributionDB* contributionDb, const CompilandDB* compilandDb, const CoffCache<coff::CoffDB>* coffCache, SymbolDB* symbolDb)"
  },
  {
    "label": "DestroyLinkerSymbol()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyLinkerSymbol(IDiaSymbol* symbol)"
  },
  {
    "label": "DestroyDiaCompilandDB()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyDiaCompilandDB(DiaCompilandDB* db)"
  },
  {
    "label": "DestroyModuleDB()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyModuleDB(ModuleDB* db)"
  },
  {
    "label": "DestroyCompilandDB()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyCompilandDB(CompilandDB* db)"
  },
  {
    "label": "MergeCompilandsAndDependencies()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MergeCompilandsAndDependencies(CompilandDB* existingDb, CompilandDB* mergedDb)"
  },
  {
    "label": "MarkCompilandAsRecompiled()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MarkCompilandAsRecompiled(Compiland* compiland)"
  },
  {
    "label": "ClearCompilandAsRecompiled()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearCompilandAsRecompiled(Compiland* compiland)"
  },
  {
    "label": "IsCompilandRecompiled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsCompilandRecompiled(const Compiland* compiland)"
  },
  {
    "label": "IsAmalgamation()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsAmalgamation(const Compiland* compiland)"
  },
  {
    "label": "IsPartOfAmalgamation()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsPartOfAmalgamation(const Compiland* compiland)"
  },
  {
    "label": "FindThunkTargetByRVA()",
    "kind": "Method",
    "detail": "Function (uint32_t)",
    "insertText": "FindThunkTargetByRVA(const ThunkDB* db, uint32_t tableEntryRva)"
  },
  {
    "label": "FindThunkTableEntriesByRVA()",
    "kind": "Method",
    "detail": "Function (types::vector<uint32_t>)",
    "insertText": "FindThunkTableEntriesByRVA(const ThunkDB* db, uint32_t targetRva)"
  },
  {
    "label": "UndecorateSymbolName()",
    "kind": "Method",
    "detail": "Function (std::string)",
    "insertText": "UndecorateSymbolName(const ImmutableString& symbolName)"
  },
  {
    "label": "GetContributionCompilandName()",
    "kind": "Method",
    "detail": "Function (ImmutableString)",
    "insertText": "GetContributionCompilandName(const ContributionDB* db, const Contribution* contribution)"
  },
  {
    "label": "GetCompilandId()",
    "kind": "Method",
    "detail": "Function (uint32_t)",
    "insertText": "GetCompilandId(const Compiland* compiland, const wchar_t* const objPath, const types::vector<ModifiedObjFile>& modifiedObjFiles)"
  },
  {
    "label": "TransformAnonymousNamespacePattern()",
    "kind": "Method",
    "detail": "Function (ImmutableString)",
    "insertText": "TransformAnonymousNamespacePattern(const ImmutableString& immutableString, uint32_t uniqueId)"
  },
  {
    "label": "TransformAnonymousNamespaceSymbols()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TransformAnonymousNamespaceSymbols(SymbolDB* symbolDb, ContributionDB* contributionDb, CompilandDB* compilandDb, const types::vector<ModifiedObjFile>& modifiedObjFiles)"
  },
  {
    "label": "IsPchSymbol()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsPchSymbol(const ImmutableString& symbolName)"
  },
  {
    "label": "IsVTable()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsVTable(const ImmutableString& symbolName)"
  },
  {
    "label": "IsRttiObjectLocator()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsRttiObjectLocator(const ImmutableString& symbolName)"
  },
  {
    "label": "IsDynamicInitializer()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsDynamicInitializer(const ImmutableString& functionSymbolName)"
  },
  {
    "label": "IsDynamicAtexitDestructor()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsDynamicAtexitDestructor(const ImmutableString& functionSymbolName)"
  },
  {
    "label": "IsPointerToDynamicInitializer()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsPointerToDynamicInitializer(const ImmutableString& symbolName)"
  },
  {
    "label": "IsStringLiteral()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsStringLiteral(const ImmutableString& symbolName)"
  },
  {
    "label": "IsLineNumber()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsLineNumber(const ImmutableString& symbolName)"
  },
  {
    "label": "IsFloatingPointSseAvxConstant()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsFloatingPointSseAvxConstant(const ImmutableString& symbolName)"
  },
  {
    "label": "IsExceptionRelatedSymbol()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsExceptionRelatedSymbol(const ImmutableString& symbolName)"
  },
  {
    "label": "IsExceptionClauseSymbol()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsExceptionClauseSymbol(const ImmutableString& symbolName)"
  },
  {
    "label": "IsExceptionUnwindSymbolForDynamicInitializer()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsExceptionUnwindSymbolForDynamicInitializer(const ImmutableString& symbolName)"
  },
  {
    "label": "IsRuntimeCheckRelatedSymbol()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsRuntimeCheckRelatedSymbol(const ImmutableString& symbolName)"
  },
  {
    "label": "IsSdlCheckRelatedSymbol()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsSdlCheckRelatedSymbol(const ImmutableString& symbolName)"
  },
  {
    "label": "IsControlFlowGuardRelatedSymbol()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsControlFlowGuardRelatedSymbol(const ImmutableString& symbolName)"
  },
  {
    "label": "IsImageBaseRelatedSymbol()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsImageBaseRelatedSymbol(const ImmutableString& symbolName)"
  },
  {
    "label": "IsTlsArrayRelatedSymbol()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsTlsArrayRelatedSymbol(const ImmutableString& symbolName)"
  },
  {
    "label": "IsTlsIndexRelatedSymbol()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsTlsIndexRelatedSymbol(const ImmutableString& symbolName)"
  },
  {
    "label": "IsTlsInitRelatedSymbol()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsTlsInitRelatedSymbol(const ImmutableString& symbolName)"
  },
  {
    "label": "IsTlsStaticsRelatedSymbol()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsTlsStaticsRelatedSymbol(const ImmutableString& symbolName)"
  },
  {
    "label": "IsSectionSymbol()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsSectionSymbol(const ImmutableString& symbolName)"
  },
  {
    "label": "IsUERegisterSymbol()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsUERegisterSymbol(const ImmutableString& symbolName, const char*& name, size_t& nameLength)"
  },
  {
    "label": "IsUERegisterSymbol()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsUERegisterSymbol(const ImmutableString& symbolName)"
  },
  {
    "label": "IsUENoStripSymbol()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsUENoStripSymbol(const ImmutableString& symbolName)"
  },
  {
    "label": "IsUEInitializerSymbol()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsUEInitializerSymbol(const ImmutableString& symbolName)"
  },
  {
    "label": "IsUEReversePatchSymbol()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsUEReversePatchSymbol(const ImmutableString& symbolName)"
  },
  {
    "label": "IsUEStaticsSymbol()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsUEStaticsSymbol(const ImmutableString& symbolName)"
  }
]