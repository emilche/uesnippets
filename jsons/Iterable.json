[
  {
    "label": "CIterable",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "CIterable"
  },
  {
    "label": "Begin()",
    "kind": "Method",
    "detail": "Function (# pragma once # include<iterator> namespace UE::Core::Iterable::Private { using std::begin ; using std::end ; template<T> auto)",
    "insertText": "Begin(T&& Range) -> decltype(begin((T&&)Range))"
  },
  {
    "label": "End()",
    "kind": "Method",
    "detail": "Function (template<T> auto)",
    "insertText": "End(T&& Range) -> decltype(end((T&&)Range))"
  },
  {
    "label": "Requires()",
    "kind": "Method",
    "detail": "Function (} struct CIterable { template<T> auto)",
    "insertText": "Requires(T&& Val) -> decltype( UE::Core::Iterable::Private::Begin((T&&)Val), UE::Core::Iterable::Private::End((T&&)Val))"
  }
]