[
  {
    "label": "IDownloadServiceStat",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDownloadServiceStat"
  },
  {
    "label": "IInstallerAnalytics",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IInstallerAnalytics"
  },
  {
    "label": "IHttpManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IHttpManager"
  },
  {
    "label": "IFileSystem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IFileSystem"
  },
  {
    "label": "IDownload",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDownload"
  },
  {
    "label": "IDownloadService",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDownloadService"
  },
  {
    "label": "FDownloadServiceFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDownloadServiceFactory"
  },
  {
    "label": "FDownloadRecord",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDownloadRecord"
  },
  {
    "label": "IDownload()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Containers / Ticker . h \" # include \" Common / SpeedRecorder . h \" namespace BuildPatchServices { class IDownloadServiceStat ; class IInstallerAnalytics ; class IHttpManager ; class IFileSystem ; class IDownload { public : ~)",
    "insertText": "IDownload()"
  },
  {
    "label": "RequestSuccessful()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "RequestSuccessful()"
  },
  {
    "label": "ResponseSuccessful()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ResponseSuccessful()"
  },
  {
    "label": "GetResponseCode()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetResponseCode()"
  },
  {
    "label": "GetData()",
    "kind": "Method",
    "detail": "Function (const TArray<uint8>&)",
    "insertText": "GetData()"
  },
  {
    "label": "DECLARE_DELEGATE_TwoParams()",
    "kind": "Method",
    "detail": "Function (} ; typedef TSharedRef<IDownload,ESPMode::ThreadSafe> FDownloadRef ;)",
    "insertText": "DECLARE_DELEGATE_TwoParams(FDownloadProgressDelegate, int32 , uint64)"
  },
  {
    "label": "DECLARE_DELEGATE_TwoParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DELEGATE_TwoParams(FDownloadCompleteDelegate, int32 , const FDownloadRef&)"
  },
  {
    "label": "IDownloadService()",
    "kind": "Method",
    "detail": "Function (class IDownloadService { public : ~)",
    "insertText": "IDownloadService()"
  },
  {
    "label": "RequestFile()",
    "kind": "Method",
    "detail": "Function (} int32)",
    "insertText": "RequestFile(const FString& FileUri, const FDownloadCompleteDelegate& OnCompleteDelegate, const FDownloadProgressDelegate& OnProgressDelegate)"
  },
  {
    "label": "RequestCancel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RequestCancel(int32 RequestId)"
  },
  {
    "label": "RequestAbandon()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RequestAbandon(int32 RequestId)"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (} ; class FDownloadServiceFactory { public : IDownloadService*)",
    "insertText": "Create(IHttpManager* HttpManager, IFileSystem* FileSystem, IDownloadServiceStat* DownloadServiceStat, IInstallerAnalytics* InstallerAnalytics)"
  },
  {
    "label": "IDownloadServiceStat()",
    "kind": "Method",
    "detail": "Function (} ; class IDownloadServiceStat { public : ~)",
    "insertText": "IDownloadServiceStat()"
  },
  {
    "label": "OnDownloadStarted()",
    "kind": "Method",
    "detail": "Function (} struct FDownloadRecord { int32 RequestId ; FString Uri ; bool bSuccess ; int32 ResponseCode ; ISpeedRecorder::FRecord SpeedRecord ; } ; void)",
    "insertText": "OnDownloadStarted(int32 RequestId, const FString& Uri)"
  },
  {
    "label": "OnDownloadProgress()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDownloadProgress(int32 RequestId, uint64 BytesReceived)"
  },
  {
    "label": "OnDownloadComplete()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDownloadComplete(const FDownloadRecord& DownloadRecord)"
  }
]