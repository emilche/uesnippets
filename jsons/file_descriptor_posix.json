[
  {
    "label": "File",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "File"
  },
  {
    "label": "BASE_EXPORT",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "BASE_EXPORT"
  },
  {
    "label": "FileDescriptor()",
    "kind": "Method",
    "detail": "Function (# ifndef BASE_FILE_DESCRIPTOR_POSIX_H_ # define BASE_FILE_DESCRIPTOR_POSIX_H_ # include \" base / base_export . h \" # include \" base / files / scoped_file . h \" namespace base { class File ; int kInvalidFd = - 1 ; struct BASE_EXPORT FileDescriptor {)",
    "insertText": "FileDescriptor()"
  },
  {
    "label": "FileDescriptor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FileDescriptor(int ifd, bool iauto_close)"
  },
  {
    "label": "FileDescriptor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FileDescriptor(File file)"
  },
  {
    "label": "FileDescriptor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FileDescriptor(ScopedFD fd)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "operator(const FileDescriptor& other)"
  }
]