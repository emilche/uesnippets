[
  {
    "label": "FRHIR10G10B10A2",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRHIR10G10B10A2"
  },
  {
    "label": "FRHIRGBA16",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRHIRGBA16"
  },
  {
    "label": "FRHIRG16",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRHIRG16"
  },
  {
    "label": "MinValue()",
    "kind": "Method",
    "detail": "Function (FPlane)",
    "insertText": "MinValue(0.0f, 0.0f, 0.0f, 0.0f)"
  },
  {
    "label": "MaxValue()",
    "kind": "Method",
    "detail": "Function (FPlane)",
    "insertText": "MaxValue(1.0f, 1.0f, 1.0f, 1.0f)"
  },
  {
    "label": "MinValue()",
    "kind": "Method",
    "detail": "Function (FPlane)",
    "insertText": "MinValue(0.0f, 0.0f, 0.0f, 0.0f)"
  },
  {
    "label": "MaxValue()",
    "kind": "Method",
    "detail": "Function (FPlane)",
    "insertText": "MaxValue(1.0f, 1.0f, 1.0f, 1.0f)"
  },
  {
    "label": "MinValue()",
    "kind": "Method",
    "detail": "Function (FPlane)",
    "insertText": "MinValue(0.0f, 0.0f, 0.0f, 0.0f)"
  },
  {
    "label": "MaxValue()",
    "kind": "Method",
    "detail": "Function (FPlane)",
    "insertText": "MaxValue(1.0f, 1.0f, 1.0f, 1.0f)"
  },
  {
    "label": "check()",
    "kind": "Method",
    "detail": "Function (here)",
    "insertText": "check( GPixelFormats[Format].BlockBytes == 4 )"
  },
  {
    "label": "ConvertRawR24G8DataToFLinearColor()",
    "kind": "Method",
    "detail": "Function (CVarD3D12UseD24)",
    "insertText": "ConvertRawR24G8DataToFLinearColor(Width, Height, In, SrcPitch, Out, InFlags)"
  },
  {
    "label": "check()",
    "kind": "Method",
    "detail": "Function (yet)",
    "insertText": "check(0)"
  },
  {
    "label": "ConvertRawR16DataToFColor()",
    "kind": "Method",
    "detail": "Function (DXGI_FORMAT_R16_UNORM:)",
    "insertText": "ConvertRawR16DataToFColor(Width, Height, In, SrcPitch, Out)"
  },
  {
    "label": "ConvertRawR8G8B8A8DataToFColor()",
    "kind": "Method",
    "detail": "Function (DXGI_FORMAT_R8G8B8A8_UNORM_SRGB:)",
    "insertText": "ConvertRawR8G8B8A8DataToFColor(Width, Height, In, SrcPitch, Out)"
  },
  {
    "label": "ConvertRawB8G8R8A8DataToFColor()",
    "kind": "Method",
    "detail": "Function (DXGI_FORMAT_B8G8R8A8_UNORM_SRGB:)",
    "insertText": "ConvertRawB8G8R8A8DataToFColor(Width, Height, In, SrcPitch, Out)"
  },
  {
    "label": "ConvertRawR10G10B10A2DataToFColor()",
    "kind": "Method",
    "detail": "Function (DXGI_FORMAT_R10G10B10A2_UNORM:)",
    "insertText": "ConvertRawR10G10B10A2DataToFColor(Width, Height, In, SrcPitch, Out)"
  },
  {
    "label": "ConvertRawR16G16B16A16FDataToFColor()",
    "kind": "Method",
    "detail": "Function (DXGI_FORMAT_R16G16B16A16_FLOAT:)",
    "insertText": "ConvertRawR16G16B16A16FDataToFColor(Width, Height, In, SrcPitch, Out, bLinearToGamma)"
  },
  {
    "label": "ConvertRawR11G11B10DataToFColor()",
    "kind": "Method",
    "detail": "Function (DXGI_FORMAT_R11G11B10_FLOAT:)",
    "insertText": "ConvertRawR11G11B10DataToFColor(Width, Height, In, SrcPitch, Out, bLinearToGamma)"
  },
  {
    "label": "ConvertRawR9G9B9E5DataToFColor()",
    "kind": "Method",
    "detail": "Function (DXGI_FORMAT_R9G9B9E5_SHAREDEXP:)",
    "insertText": "ConvertRawR9G9B9E5DataToFColor(Width, Height, In, SrcPitch, Out, bLinearToGamma)"
  },
  {
    "label": "ConvertRawR32G32B32A32DataToFColor()",
    "kind": "Method",
    "detail": "Function (DXGI_FORMAT_R32G32B32A32_FLOAT:)",
    "insertText": "ConvertRawR32G32B32A32DataToFColor(Width, Height, In, SrcPitch, Out, bLinearToGamma)"
  },
  {
    "label": "ConvertRawR24G8DataToFColor()",
    "kind": "Method",
    "detail": "Function (DXGI_FORMAT_R24G8_TYPELESS:)",
    "insertText": "ConvertRawR24G8DataToFColor(Width, Height, In, SrcPitch, Out, InFlags)"
  },
  {
    "label": "ConvertRawDepthStencil64DataToFColor()",
    "kind": "Method",
    "detail": "Function (DXGI_FORMAT_R32G8X24_TYPELESS:)",
    "insertText": "ConvertRawDepthStencil64DataToFColor(Width, Height, In, SrcPitch, Out, InFlags)"
  },
  {
    "label": "ConvertRawR16G16B16A16DataToFColor()",
    "kind": "Method",
    "detail": "Function (DXGI_FORMAT_R16G16B16A16_UNORM:)",
    "insertText": "ConvertRawR16G16B16A16DataToFColor(Width, Height, In, SrcPitch, Out, bLinearToGamma)"
  },
  {
    "label": "ConvertRawR16G16DataToFColor()",
    "kind": "Method",
    "detail": "Function (DXGI_FORMAT_R16G16_UNORM:)",
    "insertText": "ConvertRawR16G16DataToFColor(Width, Height, In, SrcPitch, Out)"
  },
  {
    "label": "ConvertRawR8DataToFColor()",
    "kind": "Method",
    "detail": "Function (DXGI_FORMAT_R8_UNORM:)",
    "insertText": "ConvertRawR8DataToFColor(Width, Height, In, SrcPitch, Out)"
  },
  {
    "label": "ConvertRawR8G8DataToFColor()",
    "kind": "Method",
    "detail": "Function (DXGI_FORMAT_R8G8_UNORM:)",
    "insertText": "ConvertRawR8G8DataToFColor(Width, Height, In, SrcPitch, Out)"
  }
]