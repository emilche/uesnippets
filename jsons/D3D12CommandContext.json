[
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FD3D12DescriptorHeap",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FD3D12DescriptorHeap"
  },
  {
    "label": "FRayTracingShaderBindings",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRayTracingShaderBindings"
  },
  {
    "label": "FD3D12ViewSubset",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FD3D12ViewSubset"
  },
  {
    "label": "FD3D12Device",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FD3D12Device"
  },
  {
    "label": "FD3D12Resource",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FD3D12Resource"
  },
  {
    "label": "FD3D12Heap",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FD3D12Heap"
  },
  {
    "label": "FD3D12DescriptorHeap",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FD3D12DescriptorHeap"
  },
  {
    "label": "FD3D12ResourceLocation",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FD3D12ResourceLocation"
  },
  {
    "label": "FD3D12RootSignature",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FD3D12RootSignature"
  },
  {
    "label": "FD3D12ExplicitDescriptorCache",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FD3D12ExplicitDescriptorCache"
  },
  {
    "label": "FD3D12DeferredDeleteObject",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FD3D12DeferredDeleteObject"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "that",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "that"
  },
  {
    "label": "FD3D12ContextCommon",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FD3D12ContextCommon"
  },
  {
    "label": "FScopedResourceBarrier",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FScopedResourceBarrier"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FD3D12DepthStencilView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FD3D12DepthStencilView"
  },
  {
    "label": "FD3D12DepthStencilView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FD3D12DepthStencilView"
  },
  {
    "label": "FD3D12RenderTargetView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FD3D12RenderTargetView"
  },
  {
    "label": "FD3D12ShaderResourceView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FD3D12ShaderResourceView"
  },
  {
    "label": "FD3D12UnorderedAccessView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FD3D12UnorderedAccessView"
  },
  {
    "label": "FD3D12ContextCopy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FD3D12ContextCopy"
  },
  {
    "label": "FD3D12CopyScope",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FD3D12CopyScope"
  },
  {
    "label": "used",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "used"
  },
  {
    "label": "class",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "class"
  },
  {
    "label": "FD3D12CommandContextRedirector",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FD3D12CommandContextRedirector"
  },
  {
    "label": "FD3D12CommandContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FD3D12CommandContext"
  },
  {
    "label": "FD3D12CommandContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FD3D12CommandContext"
  },
  {
    "label": "FD3D12Device",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FD3D12Device"
  },
  {
    "label": "ShaderType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ShaderType"
  },
  {
    "label": "FD3D12TransitionData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FD3D12TransitionData"
  },
  {
    "label": "FD3D12TransitionData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FD3D12TransitionData"
  },
  {
    "label": "FD3D12TransitionData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FD3D12TransitionData"
  },
  {
    "label": "FD3D12DiscardResource",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FD3D12DiscardResource"
  },
  {
    "label": "FD3D12TransitionData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FD3D12TransitionData"
  },
  {
    "label": "FD3D12CommandContextRedirector",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FD3D12CommandContextRedirector"
  },
  {
    "label": "FD3D12Adapter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FD3D12Adapter"
  },
  {
    "label": "FD3D12TransitionData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FD3D12TransitionData"
  },
  {
    "label": "FD3D12ContextArray",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FD3D12ContextArray"
  },
  {
    "label": "check()",
    "kind": "Method",
    "detail": "Function (PLATFORM_SUPPORTS_BINDLESS_RENDERING)",
    "insertText": "check(Type == EType::BindlessDescriptorHeap || Type == EType::DescriptorHeap)"
  },
  {
    "label": "check()",
    "kind": "Method",
    "detail": "Function (else)",
    "insertText": "check(Type == EType::DescriptorHeap)"
  },
  {
    "label": "FD3D12ContextCommon()",
    "kind": "Method",
    "detail": "Function (protected:)",
    "insertText": "FD3D12ContextCommon(FD3D12Device* Device, ED3D12QueueType QueueType, bool bIsDefaultContext)"
  },
  {
    "label": "OpenCommandList()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OpenCommandList()"
  },
  {
    "label": "CloseCommandList()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CloseCommandList()"
  },
  {
    "label": "SignalSyncPoint()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SignalSyncPoint(FD3D12SyncPoint* SyncPoint)"
  },
  {
    "label": "WaitSyncPoint()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WaitSyncPoint(FD3D12SyncPoint* SyncPoint)"
  },
  {
    "label": "SignalManualFence()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SignalManualFence(ID3D12Fence* Fence, uint64 Value)"
  },
  {
    "label": "WaitManualFence()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WaitManualFence(ID3D12Fence* Fence, uint64 Value)"
  },
  {
    "label": "InsertTimestamp()",
    "kind": "Method",
    "detail": "Function (FD3D12QueryLocation)",
    "insertText": "InsertTimestamp(ED3D12Units Units, uint64* Target)"
  },
  {
    "label": "AllocateQuery()",
    "kind": "Method",
    "detail": "Function (FD3D12QueryLocation)",
    "insertText": "AllocateQuery(ED3D12QueryType Type, void* Target)"
  },
  {
    "label": "SetReservedBufferCommitSize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetReservedBufferCommitSize(FD3D12Buffer* Buffer, uint64 CommitSizeInBytes)"
  },
  {
    "label": "Finalize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Finalize(TArray<FD3D12Payload*>& OutPayloads)"
  },
  {
    "label": "BindDiagnosticBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BindDiagnosticBuffer(FD3D12RootSignature const* RootSignature, ED3D12PipelineType PipelineType)"
  },
  {
    "label": "WriteMarker()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WriteMarker(D3D12_GPU_VIRTUAL_ADDRESS Address, uint32 Value, EMarkerType Type)"
  },
  {
    "label": "NewPayload()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NewPayload()"
  },
  {
    "label": "FlushCommands()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FlushCommands(ED3D12FlushFlags FlushFlags = ED3D12FlushFlags::None)"
  },
  {
    "label": "ConditionalSplitCommandList()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConditionalSplitCommandList()"
  },
  {
    "label": "AddPendingResourceBarrier()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddPendingResourceBarrier(FD3D12Resource* Resource, D3D12_RESOURCE_STATES After, uint32 SubResource, CResourceState& ResourceState_OnCommandList)"
  },
  {
    "label": "AddTransitionBarrier()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddTransitionBarrier(FD3D12Resource* pResource, D3D12_RESOURCE_STATES Before, D3D12_RESOURCE_STATES After, uint32 Subresource, CResourceState* ResourceState_OnCommandList = nullptr)"
  },
  {
    "label": "AddAliasingBarrier()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddAliasingBarrier(ID3D12Resource* InResourceBefore, ID3D12Resource* InResourceAfter)"
  },
  {
    "label": "AddUAVBarrier()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddUAVBarrier()"
  },
  {
    "label": "FlushResourceBarriers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FlushResourceBarriers()"
  },
  {
    "label": "TransitionResource()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TransitionResource(class FD3D12DepthStencilView*    View)"
  },
  {
    "label": "TransitionResource()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TransitionResource(class FD3D12DepthStencilView*    View, D3D12_RESOURCE_STATES After)"
  },
  {
    "label": "TransitionResource()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TransitionResource(class FD3D12RenderTargetView*    View, D3D12_RESOURCE_STATES After)"
  },
  {
    "label": "TransitionResource()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TransitionResource(class FD3D12ShaderResourceView*  View, D3D12_RESOURCE_STATES After)"
  },
  {
    "label": "TransitionResource()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TransitionResource(class FD3D12UnorderedAccessView* View, D3D12_RESOURCE_STATES After)"
  },
  {
    "label": "TransitionResource()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TransitionResource(FD3D12Resource* Resource, D3D12_RESOURCE_STATES Before, D3D12_RESOURCE_STATES After, uint32 Subresource)"
  },
  {
    "label": "TransitionResource()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TransitionResource(FD3D12Resource* Resource, D3D12_RESOURCE_STATES Before, D3D12_RESOURCE_STATES After, FD3D12ViewSubset const& ViewSubset)"
  },
  {
    "label": "TransitionResource()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TransitionResource(FD3D12Resource* InResource, CResourceState& ResourceState_OnCommandList, uint32 InSubresourceIndex, D3D12_RESOURCE_STATES InBeforeState, D3D12_RESOURCE_STATES InAfterState, bool bInForceAfterState)"
  },
  {
    "label": "FD3D12CommandContextBase()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FD3D12CommandContextBase(FD3D12Adapter* InParent, FRHIGPUMask InGPUMask)"
  },
  {
    "label": "FD3D12CommandContext()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FD3D12CommandContext(class FD3D12Device* InParent, ED3D12QueueType QueueType, bool InIsDefaultContext)"
  },
  {
    "label": "ClearShaderResources()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearShaderResources(FD3D12UnorderedAccessView* UAV, EShaderParameterTypeMask ShaderParameterTypeMask)"
  },
  {
    "label": "ClearShaderResources()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearShaderResources(FD3D12BaseShaderResource* Resource, EShaderParameterTypeMask ShaderParameterTypeMask)"
  },
  {
    "label": "ClearAllShaderResources()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearAllShaderResources()"
  },
  {
    "label": "static_assert()",
    "kind": "Method",
    "detail": "Function (PLATFORM_SUPPORTS_VARIABLE_RATE_SHADING)",
    "insertText": "static_assert(D3D12_RS_SET_SHADING_RATE_COMBINER_COUNT == ED3D12VRSCombinerStages::Num)"
  },
  {
    "label": "CommitNonComputeShaderConstants()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CommitNonComputeShaderConstants()"
  },
  {
    "label": "CommitComputeShaderConstants()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CommitComputeShaderConstants()"
  },
  {
    "label": "SetResourcesFromTables()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetResourcesFromTables(const ShaderType* RESTRICT)"
  },
  {
    "label": "SetSRVParameter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSRVParameter(EShaderFrequency Frequency, uint32 SRVIndex, FD3D12ShaderResourceView* SRV)"
  },
  {
    "label": "SetUAVParameter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetUAVParameter(EShaderFrequency Frequency, uint32 UAVIndex, FD3D12UnorderedAccessView* UAV)"
  },
  {
    "label": "SetUAVParameter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetUAVParameter(EShaderFrequency Frequency, uint32 UAVIndex, FD3D12UnorderedAccessView* UAV, uint32 InitialCount)"
  },
  {
    "label": "CommitGraphicsResourceTables()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CommitGraphicsResourceTables()"
  },
  {
    "label": "CommitComputeResourceTables()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CommitComputeResourceTables()"
  },
  {
    "label": "ResolveTextureUsingShader()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResolveTextureUsingShader(\n\t\tFD3D12Texture* SourceTexture,\n\t\tFD3D12Texture* DestTexture,\n\t\tFD3D12RenderTargetView* DestSurfaceRTV,\n\t\tFD3D12DepthStencilView* DestSurfaceDSV,\n\t\tconst D3D12_RESOURCE_DESC& ResolveTargetDesc,\n\t\tconst FResolveRect& SourceRect,\n\t\tconst FResolveRect& DestRect,\n\t\ttypename TPixelShader::FParameter PixelShaderParameter\n\t\t)"
  },
  {
    "label": "SetDepthBounds()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDepthBounds(float MinDepth, float MaxDepth)"
  },
  {
    "label": "SetShadingRate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetShadingRate(EVRSShadingRate ShadingRate, FD3D12Resource* ShadingRateImage, const TStaticArray<EVRSRateCombiner, ED3D12VRSCombinerStages::Num>& Combiners)"
  },
  {
    "label": "SetRenderTargets()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRenderTargets(uint32 NumSimultaneousRenderTargets, const FRHIRenderTargetView* NewRenderTargets, const FRHIDepthRenderTargetView* NewDepthStencilTarget)"
  },
  {
    "label": "SetRenderTargetsAndClear()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRenderTargetsAndClear(const FRHISetRenderTargetsInfo& RenderTargetsInfo)"
  },
  {
    "label": "RHIClearMRTImpl()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RHIClearMRTImpl(bool* bClearColorArray, int32 NumClearColors, const FLinearColor* ColorArray, bool bClearDepth, float Depth, bool bClearStencil, uint32 Stencil)"
  },
  {
    "label": "ResolveTexture()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResolveTexture(UE::RHICore::FResolveTextureInfo Info)"
  },
  {
    "label": "BuildAccelerationStructuresInternal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildAccelerationStructuresInternal(const TArrayView<D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_DESC> BuildDesc)"
  },
  {
    "label": "UnregisterAccelerationStructuresInternalMGPU()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterAccelerationStructuresInternalMGPU(const TArrayView<const FRayTracingGeometryBuildParams> Params, FRHIGPUMask GPUMask)"
  },
  {
    "label": "FlushPendingDescriptorUpdates()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "FlushPendingDescriptorUpdates()"
  },
  {
    "label": "SetExplicitDescriptorCache()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetExplicitDescriptorCache(FD3D12ExplicitDescriptorCache& ExplicitDescriptorCache)"
  },
  {
    "label": "UnsetExplicitDescriptorCache()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnsetExplicitDescriptorCache()"
  },
  {
    "label": "SetupDispatch()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetupDispatch(uint32 ThreadGroupCountX, uint32 ThreadGroupCountY, uint32 ThreadGroupCountZ)"
  },
  {
    "label": "SetupDraw()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetupDraw(FRHIBuffer* IndexBufferRHI, uint32 NumPrimitives = 0, uint32 NumVertices = 0)"
  },
  {
    "label": "SetupDispatchDraw()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetupDispatchDraw(uint32 ThreadGroupCountX, uint32 ThreadGroupCountY, uint32 ThreadGroupCountZ)"
  },
  {
    "label": "PostGpuEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostGpuEvent()"
  },
  {
    "label": "ClearUAV()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearUAV(TRHICommandList_RecursiveHazardous<FD3D12CommandContext>& RHICmdList, FD3D12UnorderedAccessView_RHI* UAV, const void* ClearValues, bool bFloat)"
  },
  {
    "label": "DispatchWorkGraphShaderBundle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DispatchWorkGraphShaderBundle(FRHIShaderBundle* ShaderBundle, FRHIBuffer* RecordArgBuffer, TConstArrayView<FRHIShaderParameterResource> SharedBindlessParameters, TConstArrayView<FRHIShaderBundleComputeDispatch> Dispatches)"
  },
  {
    "label": "HandleDiscardResources()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleDiscardResources(TArrayView<const FRHITransition*> Transitions, bool bIsBeginTransition)"
  },
  {
    "label": "HandleResourceTransitions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleResourceTransitions(const struct FD3D12TransitionData* TransitionData, bool& bUAVBarrier)"
  },
  {
    "label": "HandleTransientAliasing()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleTransientAliasing(const struct FD3D12TransitionData* TransitionData)"
  },
  {
    "label": "HandleResourceDiscardTransitions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleResourceDiscardTransitions(const struct FD3D12TransitionData* TransitionData, TArray<struct FD3D12DiscardResource>& ResourcesToDiscard)"
  },
  {
    "label": "HandleReservedResourceCommits()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleReservedResourceCommits(const struct FD3D12TransitionData* TransitionData)"
  }
]