[
  {
    "label": "UGizmoElementBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UGizmoElementBase"
  },
  {
    "label": "UGizmoElementHitTarget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UGizmoElementHitTarget"
  },
  {
    "label": "UGizmoElementHitMultiTarget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UGizmoElementHitMultiTarget"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" BaseGizmos / GizmoInterfaces . h \" # include \" BaseGizmos / GizmoViewContext . h \" # include \" BaseGizmos / HitTargets . h \" # include \" BaseGizmos / TransformProxy . h \" # include \" GizmoElementHitTargets . generated . h \" class UGizmoElementBase ;)",
    "insertText": "UCLASS(MinimalAPI)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: UPROPERTY()"
  },
  {
    "label": "bool()",
    "kind": "Method",
    "detail": "Function (TFunction<)",
    "insertText": "bool(const FInputDeviceRay&)"
  },
  {
    "label": "IsHit()",
    "kind": "Method",
    "detail": "Function (public : FInputRayHit)",
    "insertText": "IsHit(const FInputDeviceRay& ClickPos)"
  },
  {
    "label": "UpdateHoverState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateHoverState(bool bHovering)"
  },
  {
    "label": "UpdateInteractingState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateInteractingState(bool bInteracting)"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (public : UGizmoElementHitTarget*)",
    "insertText": "Construct(UGizmoElementBase* InGizmoElement, UGizmoViewContext* InGizmoViewContext, UObject* Outer = (UObject*)GetTransientPackage())"
  },
  {
    "label": "UpdateHoverState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateHoverState(bool bHovering, uint32 PartIdentifier)"
  },
  {
    "label": "UpdateInteractingState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateInteractingState(bool bInteracting, uint32 PartIdentifier)"
  },
  {
    "label": "UpdateHittableState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateHittableState(bool bHittable, uint32 PartIdentifier)"
  }
]