[
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FilterPreprocessorError()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" ShaderCore . h \" # include \" ShaderCompilerCore . h \" # include \" ShaderPreprocessTypes . h \" enum class EMessageType { Error = 0,Warn = 1,ShaderMetaData = 2,} ; EMessageType)",
    "insertText": "FilterPreprocessorError(const FString& ErrorMsg)"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (const TCHAR* SubstringsToFilter [ ] = {)",
    "insertText": "TEXT(\"Unknown encoding:\"), TEXT(\"with no newline, supplemented newline\"), TEXT(\"Converted [CR+LF] to [LF]\")"
  },
  {
    "label": "UE_ARRAY_COUNT()",
    "kind": "Method",
    "detail": "Function (const int32 FilteredSubstringCount =)",
    "insertText": "UE_ARRAY_COUNT(SubstringsToFilter)"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (const FString PrefixString =)",
    "insertText": "TEXT(\"UESHADERMETADATA_\")"
  },
  {
    "label": "Find()",
    "kind": "Method",
    "detail": "Function (uint32 DirectiveStartPosition = WarningString .)",
    "insertText": "Find(PrefixString) + PrefixString.Len()"
  },
  {
    "label": "Find()",
    "kind": "Method",
    "detail": "Function (uint32 DirectiveEndPosition = WarningString .)",
    "insertText": "Find(TEXT(\"\\n\"))"
  },
  {
    "label": "Len()",
    "kind": "Method",
    "detail": "Function (DirectiveEndPosition = WarningString .)",
    "insertText": "Len()"
  },
  {
    "label": "Mid()",
    "kind": "Method",
    "detail": "Function (} OutString = WarningString .)",
    "insertText": "Mid(DirectiveStartPosition, (DirectiveEndPosition - DirectiveStartPosition))"
  }
]