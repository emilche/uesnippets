[
  {
    "label": "FUICommandList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FUICommandList"
  },
  {
    "label": "IEditableSkeleton",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IEditableSkeleton"
  },
  {
    "label": "SAnimCurveMetadataEditor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SAnimCurveMetadataEditor"
  },
  {
    "label": "SAnimCurveMetadataEditorTypeList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SAnimCurveMetadataEditorTypeList"
  },
  {
    "label": "UEditorAnimCurveBoneLinks",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEditorAnimCurveBoneLinks"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FAnimCurveMetadataEditorClipboardEntry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimCurveMetadataEditorClipboardEntry"
  },
  {
    "label": "FAnimCurveMetadataEditorClipboard",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimCurveMetadataEditorClipboard"
  },
  {
    "label": "FAnimCurveMetadataEditorItem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAnimCurveMetadataEditorItem"
  },
  {
    "label": "SAnimCurveMetadataEditorRow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SAnimCurveMetadataEditorRow"
  },
  {
    "label": "TWeakPtr",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TWeakPtr"
  },
  {
    "label": "IPersonaPreviewScene",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPersonaPreviewScene"
  },
  {
    "label": "USkeletalMesh",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USkeletalMesh"
  },
  {
    "label": "UAnimationAsset",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimationAsset"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" SlateFwd . h \" # include \" Styling / SlateColor . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Input / Reply . h \" # include \" Widgets / SWidget . h \" # include \" Widgets / SCompoundWidget . h \" # include \" Widgets / SBoxPanel . h \" # include \" Animation / SmartName . h \" # include \" IPersonaPreviewScene . h \" # include \" Widgets / Views / STableViewBase . h \" # include \" Widgets / Views / STableRow . h \" # include \" Widgets / Views / SListView . h \" # include \" Animation / AnimInstance . h \" # include \" EditorObjectsTracker . h \" # include \" PersonaDelegates . h \" # include \" EditorUndoClient . h \" # include \" Filters / FilterBase . h \" # include \" UObject / WeakInterfacePtr . h \" # include \" SAnimCurveMetadataEditor . generated . h \" class FUICommandList ; class IEditableSkeleton ; class SAnimCurveMetadataEditor ; class SAnimCurveMetadataEditorTypeList ; class UEditorAnimCurveBoneLinks ; enum class EAnimCurveMetadataEditorFilterFlags : uint8 ;)",
    "insertText": "USTRUCT()"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() UPROPERTY()"
  },
  {
    "label": "Make()",
    "kind": "Method",
    "detail": "Function (} ; class FAnimCurveMetadataEditorItem { public : FName CurveName ; TWeakObjectPtr<UAnimCurveMetaData> AnimCurveMetaData ; TSharedPtr<SInlineEditableTextBlock> EditableText ; UEditorAnimCurveBoneLinks* EditorMirrorObject ; EAnimCurveMetadataEditorFilterFlags Flags ; bool bShown ; TSharedRef<FAnimCurveMetadataEditorItem>)",
    "insertText": "Make(UAnimCurveMetaData* InAnimCurveMetaData, const FName& InCurveName, EAnimCurveMetadataEditorFilterFlags InFlags, UEditorAnimCurveBoneLinks* InEditorMirrorObject)"
  },
  {
    "label": "FAnimCurveMetadataEditorItem()",
    "kind": "Method",
    "detail": "Function (} protected :)",
    "insertText": "FAnimCurveMetadataEditorItem(UAnimCurveMetaData* InAnimCurveMetaData, const FName& InCurveName, EAnimCurveMetadataEditorFilterFlags InFlags, UEditorAnimCurveBoneLinks* InEditorMirrorObject) : CurveName(InCurveName) , AnimCurveMetaData(InAnimCurveMetaData) , EditorMirrorObject(InEditorMirrorObject) , Flags(InFlags) , bShown(false)"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (} } ; class SAnimCurveMetadataEditorRow : public SMultiColumnTableRow<TSharedPtr<FAnimCurveMetadataEditorItem>> { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SAnimCurveMetadataEditorRow)"
  },
  {
    "label": "SLATE_ARGUMENT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_ARGUMENT(TSharedPtr<FAnimCurveMetadataEditorItem>, Item) SLATE_ARGUMENT(class TWeakPtr<SAnimCurveMetadataEditor>, AnimCurveViewerPtr) SLATE_END_ARGS() void Construct(const FArguments& InArgs, const TSharedRef<STableViewBase>& OwnerTableView, const TSharedRef<class IPersonaPreviewScene>& InPreviewScene)"
  },
  {
    "label": "GenerateWidgetForColumn()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "GenerateWidgetForColumn(const FName& ColumnName)"
  },
  {
    "label": "OnAnimCurveTypeBoxChecked()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "OnAnimCurveTypeBoxChecked(ECheckBoxState InState, bool bMorphTarget)"
  },
  {
    "label": "IsAnimCurveTypeBoxChangedChecked()",
    "kind": "Method",
    "detail": "Function (ECheckBoxState)",
    "insertText": "IsAnimCurveTypeBoxChangedChecked(bool bMorphTarget)"
  },
  {
    "label": "GetItemName()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetItemName()"
  },
  {
    "label": "GetFilterText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetFilterText()"
  },
  {
    "label": "GetCurveTypeWidget()",
    "kind": "Method",
    "detail": "Function (TWeakPtr<SAnimCurveMetadataEditor> AnimCurveViewerPtr ; TSharedPtr<FAnimCurveMetadataEditorItem> Item ; TWeakPtr<class IPersonaPreviewScene> PreviewScenePtr ; TSharedRef<SWidget>)",
    "insertText": "GetCurveTypeWidget()"
  },
  {
    "label": "GetNumConnectedBones()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetNumConnectedBones()"
  },
  {
    "label": "GetMaxLOD()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetMaxLOD()"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (} ; class SAnimCurveMetadataEditor : public SCompoundWidget,public FSelfRegisteringEditorUndoClient { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SAnimCurveMetadataEditor)"
  },
  {
    "label": "SLATE_END_ARGS()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_END_ARGS() void Construct( const FArguments& InArgs, UObject* InAnimCurveMetaDataHost, const TSharedRef<class IPersonaPreviewScene>& InPreviewScene, FOnObjectsSelected InOnObjectsSelected)"
  },
  {
    "label": "SAnimCurveMetadataEditor()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "SAnimCurveMetadataEditor()"
  },
  {
    "label": "OnKeyDown()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnKeyDown(const FGeometry& MyGeometry, const FKeyEvent& InKeyEvent)"
  },
  {
    "label": "OnPreviewMeshChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPreviewMeshChanged(class USkeletalMesh* OldPreviewMesh, class USkeletalMesh* NewPreviewMesh)"
  },
  {
    "label": "OnPreviewAssetChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPreviewAssetChanged(class UAnimationAsset* NewPreviewAsset)"
  },
  {
    "label": "OnCurvesChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnCurvesChanged()"
  },
  {
    "label": "OnFilterTextChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnFilterTextChanged(const FText& SearchText)"
  },
  {
    "label": "OnFilterTextCommitted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnFilterTextCommitted(const FText& SearchText, ETextCommit::Type CommitInfo)"
  },
  {
    "label": "GenerateAnimCurveRow()",
    "kind": "Method",
    "detail": "Function (TSharedRef<ITableRow>)",
    "insertText": "GenerateAnimCurveRow(TSharedPtr<FAnimCurveMetadataEditorItem> InInfo, const TSharedRef<STableViewBase>& OwnerTable)"
  },
  {
    "label": "PostUndoRedo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostUndoRedo()"
  },
  {
    "label": "PostRedo()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "PostRedo(bool bSuccess)"
  },
  {
    "label": "RefreshCurveList()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RefreshCurveList(bool bInFullRefresh)"
  },
  {
    "label": "OnNameCommitted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnNameCommitted(const FText& NewName, ETextCommit::Type CommitType, TSharedPtr<FAnimCurveMetadataEditorItem> Item)"
  },
  {
    "label": "BindCommands()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "BindCommands()"
  },
  {
    "label": "OnGetContextMenuContent()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<SWidget>)",
    "insertText": "OnGetContextMenuContent()"
  },
  {
    "label": "OnSelectionChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSelectionChanged(TSharedPtr<FAnimCurveMetadataEditorItem> InItem, ESelectInfo::Type SelectInfo)"
  },
  {
    "label": "CreateAnimCurveList()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateAnimCurveList(const FString& SearchText = FString(), bool bInFullRefresh = false)"
  },
  {
    "label": "OnDeleteNameClicked()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDeleteNameClicked()"
  },
  {
    "label": "CanDelete()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanDelete()"
  },
  {
    "label": "OnRenameClicked()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnRenameClicked()"
  },
  {
    "label": "CanRename()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanRename()"
  },
  {
    "label": "OnCopyClicked()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnCopyClicked()"
  },
  {
    "label": "CanCopy()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanCopy()"
  },
  {
    "label": "OnPasteClicked()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPasteClicked()"
  },
  {
    "label": "CanPaste()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanPaste()"
  },
  {
    "label": "OnAddClicked()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAddClicked()"
  },
  {
    "label": "OnFindCurveUsesClicked()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnFindCurveUsesClicked()"
  },
  {
    "label": "CanFindCurveUses()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanFindCurveUses()"
  },
  {
    "label": "CreateNewNameEntry()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateNewNameEntry(const FText& CommittedText, ETextCommit::Type CommitType)"
  },
  {
    "label": "HandleCurveMetaDataChange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleCurveMetaDataChange()"
  },
  {
    "label": "GetAnimCurveMetaData()",
    "kind": "Method",
    "detail": "Function (UAnimCurveMetaData*)",
    "insertText": "GetAnimCurveMetaData()"
  },
  {
    "label": "GetSkeleton()",
    "kind": "Method",
    "detail": "Function (USkeleton*)",
    "insertText": "GetSkeleton()"
  },
  {
    "label": "GetAnimInstance()",
    "kind": "Method",
    "detail": "Function (UAnimInstance*)",
    "insertText": "GetAnimInstance()"
  },
  {
    "label": "FindReplaceCurves()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FindReplaceCurves()"
  },
  {
    "label": "ApplyCurveBoneLinks()",
    "kind": "Method",
    "detail": "Function (TWeakPtr<class IPersonaPreviewScene> PreviewScenePtr ; TWeakInterfacePtr<IInterface_AssetUserData> AnimCurveMetaDataHost ; TSharedPtr<SSearchBox> NameFilterBox ; TArray<TSharedPtr<FAnimCurveMetadataEditorItem>> AnimCurveList ; TMap<FName,TSharedPtr<FAnimCurveMetadataEditorItem>> AllSeenAnimCurvesMap ; UAnimInstance* CachedPreviewInstance ; TSharedPtr<SListView<TSharedPtr<FAnimCurveMetadataEditorItem>>> AnimCurveListView ; FText FilterText ; EAnimCurveMetadataEditorFilterFlags CurrentCurveFlag ; TMap<FName,float> OverrideCurves ; TSharedPtr<FUICommandList> UICommandList ; SAnimCurveMetadataEditorRow ; SAnimCurveMetadataEditorTypeList ; FEditorObjectTracker EditorObjectTracker ; FOnObjectsSelected OnObjectsSelected ; void)",
    "insertText": "ApplyCurveBoneLinks(class UEditorAnimCurveBoneLinks* EditorObj)"
  }
]