[
  {
    "label": "ITextInputMethodContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITextInputMethodContext"
  },
  {
    "label": "FTextStoreACP",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTextStoreACP"
  },
  {
    "label": "FSupportedAttribute",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSupportedAttribute"
  },
  {
    "label": "FLockManager",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLockManager"
  },
  {
    "label": "FAdviseSinkObject",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAdviseSinkObject"
  },
  {
    "label": "FComposition",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FComposition"
  },
  {
    "label": "FTextStoreACP()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" Templates / MemoryOps . h \" # include \" Containers / Array . h \" # include \" Templates / SharedPointer . h \" # include \" Windows / AllowWindowsPlatformTypes . h \" # include<TextStor . h> # include<msctf . h> # include \" Microsoft / COMPointer . h \" class ITextInputMethodContext ; class FTextStoreACP : public ITextStoreACP,public ITfContextOwnerCompositionSink { public :)",
    "insertText": "FTextStoreACP(const TSharedRef<ITextInputMethodContext>& Context)"
  },
  {
    "label": "FTextStoreACP()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FTextStoreACP()"
  },
  {
    "label": "QueryInterface()",
    "kind": "Method",
    "detail": "Function (} STDMETHODIMP)",
    "insertText": "QueryInterface(REFIID riid, void **ppvObj)"
  },
  {
    "label": "STDMETHODIMP_()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHODIMP_(ULONG) AddRef(void)"
  },
  {
    "label": "STDMETHODIMP_()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STDMETHODIMP_(ULONG) Release(void)"
  },
  {
    "label": "AdviseSink()",
    "kind": "Method",
    "detail": "Function (STDMETHODIMP)",
    "insertText": "AdviseSink(__RPC__in REFIID riid, __RPC__in_opt IUnknown *punk, DWORD dwMask)"
  },
  {
    "label": "UnadviseSink()",
    "kind": "Method",
    "detail": "Function (STDMETHODIMP)",
    "insertText": "UnadviseSink(__RPC__in_opt IUnknown *punk)"
  },
  {
    "label": "RequestLock()",
    "kind": "Method",
    "detail": "Function (STDMETHODIMP)",
    "insertText": "RequestLock(DWORD dwLockFlags, HRESULT *phrSession)"
  },
  {
    "label": "GetStatus()",
    "kind": "Method",
    "detail": "Function (STDMETHODIMP)",
    "insertText": "GetStatus(__RPC__out TS_STATUS *pdcs)"
  },
  {
    "label": "GetEndACP()",
    "kind": "Method",
    "detail": "Function (STDMETHODIMP)",
    "insertText": "GetEndACP(__RPC__out LONG *pacp)"
  },
  {
    "label": "GetSelection()",
    "kind": "Method",
    "detail": "Function (STDMETHODIMP)",
    "insertText": "GetSelection(ULONG ulIndex, ULONG ulCount, __RPC__out_ecount_part(ulCount, *pcFetched) TS_SELECTION_ACP *pSelection, __RPC__out ULONG *pcFetched)"
  },
  {
    "label": "SetSelection()",
    "kind": "Method",
    "detail": "Function (STDMETHODIMP)",
    "insertText": "SetSelection(ULONG ulCount, __RPC__in_ecount_full(ulCount) const TS_SELECTION_ACP *pSelection)"
  },
  {
    "label": "RequestSupportedAttrs()",
    "kind": "Method",
    "detail": "Function (STDMETHODIMP)",
    "insertText": "RequestSupportedAttrs(DWORD dwFlags, ULONG cFilterAttrs, __RPC__in_ecount_full_opt(cFilterAttrs) const TS_ATTRID *paFilterAttrs)"
  },
  {
    "label": "RequestAttrsAtPosition()",
    "kind": "Method",
    "detail": "Function (STDMETHODIMP)",
    "insertText": "RequestAttrsAtPosition(LONG acpPos, ULONG cFilterAttrs, __RPC__in_ecount_full_opt(cFilterAttrs) const TS_ATTRID *paFilterAttrs, DWORD dwFlags)"
  },
  {
    "label": "RequestAttrsTransitioningAtPosition()",
    "kind": "Method",
    "detail": "Function (STDMETHODIMP)",
    "insertText": "RequestAttrsTransitioningAtPosition(LONG acpPos, ULONG cFilterAttrs, __RPC__in_ecount_full_opt(cFilterAttrs) const TS_ATTRID *paFilterAttrs, DWORD dwFlags)"
  },
  {
    "label": "FindNextAttrTransition()",
    "kind": "Method",
    "detail": "Function (STDMETHODIMP)",
    "insertText": "FindNextAttrTransition(LONG acpStart, LONG acpHalt, ULONG cFilterAttrs, __RPC__in_ecount_full_opt(cFilterAttrs) const TS_ATTRID *paFilterAttrs, DWORD dwFlags, __RPC__out LONG *pacpNext, __RPC__out BOOL *pfFound, __RPC__out LONG *plFoundOffset)"
  },
  {
    "label": "RetrieveRequestedAttrs()",
    "kind": "Method",
    "detail": "Function (STDMETHODIMP)",
    "insertText": "RetrieveRequestedAttrs(ULONG ulCount, __RPC__out_ecount_part(ulCount, *pcFetched) TS_ATTRVAL *paAttrVals, __RPC__out ULONG *pcFetched)"
  },
  {
    "label": "GetActiveView()",
    "kind": "Method",
    "detail": "Function (STDMETHODIMP)",
    "insertText": "GetActiveView(__RPC__out TsViewCookie *pvcView)"
  },
  {
    "label": "GetACPFromPoint()",
    "kind": "Method",
    "detail": "Function (STDMETHODIMP)",
    "insertText": "GetACPFromPoint(TsViewCookie vcView, __RPC__in const POINT *pt, DWORD dwFlags, __RPC__out LONG *pacp)"
  },
  {
    "label": "GetTextExt()",
    "kind": "Method",
    "detail": "Function (STDMETHODIMP)",
    "insertText": "GetTextExt(TsViewCookie vcView, LONG acpStart, LONG acpEnd, __RPC__out RECT *prc, __RPC__out BOOL *pfClipped)"
  },
  {
    "label": "GetScreenExt()",
    "kind": "Method",
    "detail": "Function (STDMETHODIMP)",
    "insertText": "GetScreenExt(TsViewCookie vcView, __RPC__out RECT *prc)"
  },
  {
    "label": "GetWnd()",
    "kind": "Method",
    "detail": "Function (STDMETHODIMP)",
    "insertText": "GetWnd(TsViewCookie vcView, __RPC__deref_out_opt HWND *phwnd)"
  },
  {
    "label": "GetText()",
    "kind": "Method",
    "detail": "Function (STDMETHODIMP)",
    "insertText": "GetText(LONG acpStart, LONG acpEnd, __RPC__out_ecount_part(cchPlainReq, *pcchPlainOut) WCHAR *pchPlain, ULONG cchPlainReq, __RPC__out ULONG *pcchPlainOut, __RPC__out_ecount_part(ulRunInfoReq, *pulRunInfoOut) TS_RUNINFO *prgRunInfo, ULONG ulRunInfoReq, __RPC__out ULONG *pulRunInfoOut, __RPC__out LONG *pacpNext)"
  },
  {
    "label": "QueryInsert()",
    "kind": "Method",
    "detail": "Function (STDMETHODIMP)",
    "insertText": "QueryInsert(LONG acpInsertStart, LONG acpInsertEnd, ULONG cch, __RPC__out LONG *pacpResultStart, __RPC__out LONG *pacpResultEnd)"
  },
  {
    "label": "InsertTextAtSelection()",
    "kind": "Method",
    "detail": "Function (STDMETHODIMP)",
    "insertText": "InsertTextAtSelection(DWORD dwFlags, __RPC__in_ecount_full(cch) const WCHAR *pchText, ULONG cch, __RPC__out LONG *pacpStart, __RPC__out LONG *pacpEnd, __RPC__out TS_TEXTCHANGE *pChange)"
  },
  {
    "label": "SetText()",
    "kind": "Method",
    "detail": "Function (STDMETHODIMP)",
    "insertText": "SetText(DWORD dwFlags, LONG acpStart, LONG acpEnd, __RPC__in_ecount_full(cch) const WCHAR *pchText, ULONG cch, __RPC__out TS_TEXTCHANGE *pChange)"
  },
  {
    "label": "GetEmbedded()",
    "kind": "Method",
    "detail": "Function (STDMETHODIMP)",
    "insertText": "GetEmbedded(LONG acpPos, __RPC__in REFGUID rguidService, __RPC__in REFIID riid, __RPC__deref_out_opt IUnknown **ppunk)"
  },
  {
    "label": "GetFormattedText()",
    "kind": "Method",
    "detail": "Function (STDMETHODIMP)",
    "insertText": "GetFormattedText(LONG acpStart, LONG acpEnd, __RPC__deref_out_opt IDataObject **ppDataObject)"
  },
  {
    "label": "QueryInsertEmbedded()",
    "kind": "Method",
    "detail": "Function (STDMETHODIMP)",
    "insertText": "QueryInsertEmbedded(__RPC__in const GUID *pguidService, __RPC__in const FORMATETC *pFormatEtc, __RPC__out BOOL *pfInsertable)"
  },
  {
    "label": "InsertEmbedded()",
    "kind": "Method",
    "detail": "Function (STDMETHODIMP)",
    "insertText": "InsertEmbedded(DWORD dwFlags, LONG acpStart, LONG acpEnd, __RPC__in_opt IDataObject *pDataObject, __RPC__out TS_TEXTCHANGE *pChange)"
  },
  {
    "label": "InsertEmbeddedAtSelection()",
    "kind": "Method",
    "detail": "Function (STDMETHODIMP)",
    "insertText": "InsertEmbeddedAtSelection(DWORD dwFlags, __RPC__in_opt IDataObject *pDataObject, __RPC__out LONG *pacpStart, __RPC__out LONG *pacpEnd, __RPC__out TS_TEXTCHANGE *pChange)"
  },
  {
    "label": "OnStartComposition()",
    "kind": "Method",
    "detail": "Function (STDMETHODIMP)",
    "insertText": "OnStartComposition(__RPC__in_opt ITfCompositionView *pComposition, __RPC__out BOOL *pfOk)"
  },
  {
    "label": "OnUpdateComposition()",
    "kind": "Method",
    "detail": "Function (STDMETHODIMP)",
    "insertText": "OnUpdateComposition(__RPC__in_opt ITfCompositionView *pComposition, __RPC__in_opt ITfRange *pRangeNew)"
  },
  {
    "label": "OnEndComposition()",
    "kind": "Method",
    "detail": "Function (STDMETHODIMP)",
    "insertText": "OnEndComposition(__RPC__in_opt ITfCompositionView *pComposition)"
  },
  {
    "label": "FSupportedAttribute()",
    "kind": "Method",
    "detail": "Function (private : ULONG ReferenceCount ; const TSharedRef<ITextInputMethodContext> TextContext ; struct FSupportedAttribute {)",
    "insertText": "FSupportedAttribute(const TS_ATTRID* const InId) : WantsDefault(false), Id(InId)"
  },
  {
    "label": "VariantInit()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "VariantInit(&(DefaultValue))"
  },
  {
    "label": "FLockManager()",
    "kind": "Method",
    "detail": "Function (} bool WantsDefault ; const TS_ATTRID* const Id ; VARIANT DefaultValue ; } ; TArray<FSupportedAttribute> SupportedAttributes ; struct FLockManager {)",
    "insertText": "FLockManager() : LockType(0), IsPendingLockUpgrade(false)"
  },
  {
    "label": "FAdviseSinkObject()",
    "kind": "Method",
    "detail": "Function (} DWORD LockType ; bool IsPendingLockUpgrade ; } LockManager ; public : struct FAdviseSinkObject {)",
    "insertText": "FAdviseSinkObject() : TextStoreACPSink(nullptr), SinkFlags(0)"
  },
  {
    "label": "FComposition()",
    "kind": "Method",
    "detail": "Function (} TComPtr<ITextStoreACPSink> TextStoreACPSink ; TComPtr<ITextStoreACPServices> TextStoreACPServices ; DWORD SinkFlags ; } AdviseSinkObject ; struct FComposition {)",
    "insertText": "FComposition() : TSFCompositionView(nullptr)"
  }
]