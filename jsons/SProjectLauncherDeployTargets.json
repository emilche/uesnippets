[
  {
    "label": "ITargetDeviceProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITargetDeviceProxy"
  },
  {
    "label": "SProjectLauncherDeployTargets",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SProjectLauncherDeployTargets"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Layout / Visibility . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Widgets / SWidget . h \" # include \" Widgets / SCompoundWidget . h \" # include \" Models / ProjectLauncherModel . h \" # include \" Widgets / Views / STableViewBase . h \" # include \" Widgets / Views / STableRow . h \" # include \" Widgets / Input / SComboBox . h \" class ITargetDeviceProxy ; class SProjectLauncherDeployTargets : public SCompoundWidget { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SProjectLauncherDeployTargets)"
  },
  {
    "label": "SLATE_END_ARGS()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_END_ARGS() public: ~SProjectLauncherDeployTargets()"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (public : void)",
    "insertText": "Construct(const FArguments& InArgs, const TSharedRef<FProjectLauncherModel>& InModel)"
  },
  {
    "label": "RefreshDeviceProxyList()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "RefreshDeviceProxyList()"
  },
  {
    "label": "HandleDeviceGroupSelectorGroupSelected()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "HandleDeviceGroupSelectorGroupSelected(const ILauncherDeviceGroupPtr& SelectedGroup)"
  },
  {
    "label": "HandleDeviceListRowDeviceGroup()",
    "kind": "Method",
    "detail": "Function (ILauncherDeviceGroupPtr)",
    "insertText": "HandleDeviceListRowDeviceGroup()"
  },
  {
    "label": "HandleDeviceListRowIsEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HandleDeviceListRowIsEnabled(TSharedPtr<ITargetDeviceProxy> DeviceProxy)"
  },
  {
    "label": "HandleDeviceListRowToolTipText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "HandleDeviceListRowToolTipText(TSharedPtr<ITargetDeviceProxy> DeviceProxy)"
  },
  {
    "label": "HandleDeviceProxyListViewGenerateRow()",
    "kind": "Method",
    "detail": "Function (TSharedRef<ITableRow>)",
    "insertText": "HandleDeviceProxyListViewGenerateRow(TSharedPtr<ITargetDeviceProxy> InItem, const TSharedRef<STableViewBase>& OwnerTable)"
  },
  {
    "label": "HandleDeviceProxyListViewVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "HandleDeviceProxyListViewVisibility()"
  },
  {
    "label": "HandleDeviceSelectorVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "HandleDeviceSelectorVisibility()"
  },
  {
    "label": "HandleNoDevicesBoxVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "HandleNoDevicesBoxVisibility()"
  },
  {
    "label": "HandleNoDevicesTextBlockText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "HandleNoDevicesTextBlockText()"
  },
  {
    "label": "HandleSelectDeviceGroupWarningVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "HandleSelectDeviceGroupWarningVisibility()"
  },
  {
    "label": "HandleDeviceProxyManagerProxyAdded()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleDeviceProxyManagerProxyAdded(const TSharedRef<ITargetDeviceProxy>& AddedProxy)"
  },
  {
    "label": "HandleDeviceProxyManagerProxyRemoved()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleDeviceProxyManagerProxyRemoved(const TSharedRef<ITargetDeviceProxy>& RemovedProxy)"
  },
  {
    "label": "HandlePlatformComboBoxContentText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "HandlePlatformComboBoxContentText()"
  },
  {
    "label": "HandlePlatformComboBoxGenerateWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "HandlePlatformComboBoxGenerateWidget(TSharedPtr<FName> StringItem)"
  },
  {
    "label": "HandlePlatformComboBoxSelectionChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandlePlatformComboBoxSelectionChanged(TSharedPtr<FName> StringItem, ESelectInfo::Type SelectInfo)"
  }
]