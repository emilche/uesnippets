[
  {
    "label": "SLogView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SLogView"
  },
  {
    "label": "SFrameTrack",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SFrameTrack"
  },
  {
    "label": "SStatsView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SStatsView"
  },
  {
    "label": "STimersView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "STimersView"
  },
  {
    "label": "STimerTreeView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "STimerTreeView"
  },
  {
    "label": "STimingView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "STimingView"
  },
  {
    "label": "STimingProfilerWindow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "STimingProfilerWindow"
  },
  {
    "label": "STimingProfilerWindow()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" Insights / ITimingViewSession . h \" # include \" Insights / Widgets / SMajorTabWindow . h \" namespace UE::Insights { class SLogView ; } namespace UE::Insights::TimingProfiler { class SFrameTrack ; class SStatsView ; class STimersView ; class STimerTreeView ; class STimingView ; class STimingProfilerWindow : public::Insights::SMajorTabWindow { public :)",
    "insertText": "STimingProfilerWindow()"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SLATE_BEGIN_ARGS(STimingProfilerWindow)"
  },
  {
    "label": "SLATE_END_ARGS()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_END_ARGS() virtual void Reset()"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct(const FArguments& InArgs, const TSharedRef<SDockTab>& ConstructUnderMajorTab, const TSharedPtr<SWindow>& ConstructUnderWindow)"
  },
  {
    "label": "GetTimingView()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<STimingView>)",
    "insertText": "GetTimingView()"
  },
  {
    "label": "CreateWorkspaceMenuGroup()",
    "kind": "Method",
    "detail": "Function (TSharedRef<FWorkspaceItem>)",
    "insertText": "CreateWorkspaceMenuGroup()"
  },
  {
    "label": "RegisterTabSpawners()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterTabSpawners()"
  },
  {
    "label": "CreateDefaultTabLayout()",
    "kind": "Method",
    "detail": "Function (TSharedRef<FTabManager::FLayout>)",
    "insertText": "CreateDefaultTabLayout()"
  },
  {
    "label": "CreateToolbar()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "CreateToolbar(TSharedPtr<FExtender> Extender)"
  },
  {
    "label": "SpawnTab_FramesTrack()",
    "kind": "Method",
    "detail": "Function (private : TSharedRef<SDockTab>)",
    "insertText": "SpawnTab_FramesTrack(const FSpawnTabArgs& Args)"
  },
  {
    "label": "OnFramesTrackTabClosed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnFramesTrackTabClosed(TSharedRef<SDockTab> TabBeingClosed)"
  },
  {
    "label": "SpawnTab_TimingView()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SDockTab>)",
    "insertText": "SpawnTab_TimingView(const FSpawnTabArgs& Args)"
  },
  {
    "label": "OnTimingViewTabClosed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnTimingViewTabClosed(TSharedRef<SDockTab> TabBeingClosed)"
  },
  {
    "label": "SpawnTab_Timers()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SDockTab>)",
    "insertText": "SpawnTab_Timers(const FSpawnTabArgs& Args)"
  },
  {
    "label": "OnTimersTabClosed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnTimersTabClosed(TSharedRef<SDockTab> TabBeingClosed)"
  },
  {
    "label": "SpawnTab_Callers()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SDockTab>)",
    "insertText": "SpawnTab_Callers(const FSpawnTabArgs& Args)"
  },
  {
    "label": "OnCallersTabClosed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnCallersTabClosed(TSharedRef<SDockTab> TabBeingClosed)"
  },
  {
    "label": "SpawnTab_Callees()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SDockTab>)",
    "insertText": "SpawnTab_Callees(const FSpawnTabArgs& Args)"
  },
  {
    "label": "OnCalleesTabClosed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnCalleesTabClosed(TSharedRef<SDockTab> TabBeingClosed)"
  },
  {
    "label": "SpawnTab_StatsCounters()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SDockTab>)",
    "insertText": "SpawnTab_StatsCounters(const FSpawnTabArgs& Args)"
  },
  {
    "label": "OnStatsCountersTabClosed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnStatsCountersTabClosed(TSharedRef<SDockTab> TabBeingClosed)"
  },
  {
    "label": "SpawnTab_LogView()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SDockTab>)",
    "insertText": "SpawnTab_LogView(const FSpawnTabArgs& Args)"
  },
  {
    "label": "OnLogViewTabClosed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnLogViewTabClosed(TSharedRef<SDockTab> TabBeingClosed)"
  },
  {
    "label": "OnTimeSelectionChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnTimeSelectionChanged(Timing::ETimeChangedFlags InFlags, double InStartTime, double InEndTime)"
  }
]