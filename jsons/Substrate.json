[
  {
    "label": "FScene",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FScene"
  },
  {
    "label": "FSceneRenderer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSceneRenderer"
  },
  {
    "label": "FRDGBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRDGBuilder"
  },
  {
    "label": "FDBufferTextures",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDBufferTextures"
  },
  {
    "label": "FMinimalSceneTextures",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMinimalSceneTextures"
  },
  {
    "label": "FScreenPassTexture",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FScreenPassTexture"
  },
  {
    "label": "FTextureRenderTargetBinding",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTextureRenderTargetBinding"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "is"
  },
  {
    "label": "ESubstrateTileType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ESubstrateTileType"
  },
  {
    "label": "FSubstrateSceneData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSubstrateSceneData"
  },
  {
    "label": "FSubstrateViewData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSubstrateViewData"
  },
  {
    "label": "FSubstrateTilePassVS",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSubstrateTilePassVS"
  },
  {
    "label": "FEnableDebug",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEnableDebug"
  },
  {
    "label": "FEnableTexCoordScreenVector",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEnableTexCoordScreenVector"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "GetSubstrateTextureResolution()",
    "kind": "Method",
    "detail": "Function (FIntPoint)",
    "insertText": "GetSubstrateTextureResolution(const FViewInfo& View, const FIntPoint& InResolution)"
  },
  {
    "label": "GetSubstrateMaxClosureCount()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetSubstrateMaxClosureCount(const FViewInfo& View)"
  },
  {
    "label": "GetSubstrateUsesComplexSpecialPath()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetSubstrateUsesComplexSpecialPath(const FViewInfo& View)"
  },
  {
    "label": "UsesSubstrateMaterialBuffer()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UsesSubstrateMaterialBuffer(EShaderPlatform In)"
  },
  {
    "label": "InitialiseSubstrateFrameSceneData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitialiseSubstrateFrameSceneData(FRDGBuilder& GraphBuilder, FSceneRenderer& SceneRenderer)"
  },
  {
    "label": "BindSubstrateBasePassUniformParameters()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BindSubstrateBasePassUniformParameters(FRDGBuilder& GraphBuilder, const FViewInfo& View, FSubstrateBasePassUniformParameters& OutSubstrateUniformParameters)"
  },
  {
    "label": "BindSubstrateForwardPasslUniformParameters()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BindSubstrateForwardPasslUniformParameters(FRDGBuilder& GraphBuilder, const FViewInfo& View, FSubstrateForwardPassUniformParameters& OutSubstrateUniformParameters)"
  },
  {
    "label": "BindSubstrateMobileForwardPasslUniformParameters()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BindSubstrateMobileForwardPasslUniformParameters(FRDGBuilder& GraphBuilder, const FViewInfo& View, FSubstrateMobileForwardPassUniformParameters& OutSubstrateUniformParameters)"
  },
  {
    "label": "BindSubstrateGlobalUniformParameters()",
    "kind": "Method",
    "detail": "Function (TRDGUniformBufferRef<FSubstrateGlobalUniformParameters>)",
    "insertText": "BindSubstrateGlobalUniformParameters(const FViewInfo& View)"
  },
  {
    "label": "AppendSubstrateMRTs()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AppendSubstrateMRTs(const FSceneRenderer& SceneRenderer, uint32& BasePassTextureCount, TArrayView<FTextureRenderTargetBinding> BasePassTextures)"
  },
  {
    "label": "SetBasePassRenderTargetOutputFormat()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetBasePassRenderTargetOutputFormat(const EShaderPlatform Platform, const FMaterialShaderParameters& MaterialParameters, FShaderCompilerEnvironment& OutEnvironment, EGBufferLayout GBufferLayout)"
  },
  {
    "label": "BindSubstratePublicGlobalUniformParameters()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BindSubstratePublicGlobalUniformParameters(FRDGBuilder& GraphBuilder, const FSubstrateSceneData* SubstrateSceneData, FSubstratePublicParameters& OutSubstrateUniformParameters)"
  },
  {
    "label": "CreatePublicGlobalUniformBuffer()",
    "kind": "Method",
    "detail": "Function (TRDGUniformBufferRef<FSubstratePublicGlobalUniformParameters>)",
    "insertText": "CreatePublicGlobalUniformBuffer(FRDGBuilder& GraphBuilder, FSubstrateSceneData* SubstrateScene)"
  },
  {
    "label": "AddSubstrateMaterialClassificationPass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddSubstrateMaterialClassificationPass(FRDGBuilder& GraphBuilder, const FMinimalSceneTextures& SceneTextures, const FDBufferTextures& DBufferTextures, const TArray<FViewInfo>& Views)"
  },
  {
    "label": "AddSubstrateDBufferPass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddSubstrateDBufferPass(FRDGBuilder& GraphBuilder, const FMinimalSceneTextures& SceneTextures, const FDBufferTextures& DBufferTextures, const TArray<FViewInfo>& Views)"
  },
  {
    "label": "AddSubstrateStencilPass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddSubstrateStencilPass(FRDGBuilder& GraphBuilder, const TArray<FViewInfo>& Views, const FMinimalSceneTextures& SceneTextures)"
  },
  {
    "label": "AddSubstrateOpaqueRoughRefractionPasses()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddSubstrateOpaqueRoughRefractionPasses(\n\tFRDGBuilder& GraphBuilder,\n\tFSceneTextures& SceneTextures,\n\tTArrayView<const FViewInfo> Views)"
  },
  {
    "label": "ShouldRenderSubstrateDebugPasses()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldRenderSubstrateDebugPasses(const FViewInfo& View)"
  },
  {
    "label": "AddSubstrateDebugPasses()",
    "kind": "Method",
    "detail": "Function (FScreenPassTexture)",
    "insertText": "AddSubstrateDebugPasses(FRDGBuilder& GraphBuilder, const FViewInfo& View, FScreenPassTexture& ScreenPassSceneColor)"
  },
  {
    "label": "ShouldCompilePermutation()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldCompilePermutation(const FGlobalShaderPermutationParameters& Parameters)"
  },
  {
    "label": "ModifyCompilationEnvironment()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ModifyCompilationEnvironment(const FGlobalShaderPermutationParameters& Parameters, FShaderCompilerEnvironment& OutEnvironment)"
  },
  {
    "label": "SetTileParameters()",
    "kind": "Method",
    "detail": "Function (FSubstrateTileParameter)",
    "insertText": "SetTileParameters(FRDGBuilder& GraphBuilder, const FViewInfo& View, const ESubstrateTileType Type)"
  },
  {
    "label": "SetTileParameters()",
    "kind": "Method",
    "detail": "Function (FSubstrateTilePassVS::FParameters)",
    "insertText": "SetTileParameters(FRDGBuilder& GraphBuilder, const FViewInfo& View, const ESubstrateTileType Type, EPrimitiveType& PrimitiveType)"
  },
  {
    "label": "SetTileParameters()",
    "kind": "Method",
    "detail": "Function (FSubstrateTilePassVS::FParameters)",
    "insertText": "SetTileParameters(const FViewInfo& View, const ESubstrateTileType Type, EPrimitiveType& PrimitiveType)"
  },
  {
    "label": "TileTypeDrawIndirectArgOffset()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "TileTypeDrawIndirectArgOffset(const ESubstrateTileType Type)"
  },
  {
    "label": "TileTypeDispatchIndirectArgOffset()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "TileTypeDispatchIndirectArgOffset(const ESubstrateTileType Type)"
  }
]