[
  {
    "label": "IContentSource",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IContentSource"
  },
  {
    "label": "FFeaturePackContentSourceProvider",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFeaturePackContentSourceProvider"
  },
  {
    "label": "FFeaturePackContentSourceProvider()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" Containers / UnrealString . h \" # include \" Delegates / IDelegateInstance . h \" # include \" IContentSourceProvider . h \" # include \" IDirectoryWatcher . h \" # include \" Templates / SharedPointer . h \" class IContentSource ; class FFeaturePackContentSourceProvider : public IContentSourceProvider { public :)",
    "insertText": "FFeaturePackContentSourceProvider()"
  },
  {
    "label": "GetContentSources()",
    "kind": "Method",
    "detail": "Function (const TArray<TSharedRef<IContentSource>>&)",
    "insertText": "GetContentSources()"
  },
  {
    "label": "SetContentSourcesChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetContentSourcesChanged(FOnContentSourcesChanged OnContentSourcesChangedIn)"
  },
  {
    "label": "StartUpDirectoryWatcher()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "StartUpDirectoryWatcher()"
  },
  {
    "label": "ShutDownDirectoryWatcher()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ShutDownDirectoryWatcher()"
  },
  {
    "label": "OnFeaturePackDirectoryChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnFeaturePackDirectoryChanged(const TArray<FFileChangeData>& FileChanges)"
  },
  {
    "label": "RefreshFeaturePacks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RefreshFeaturePacks()"
  }
]