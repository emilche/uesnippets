[
  {
    "label": "NSThread()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" NSString* UnrealNilEventMode ; NSString* UnrealShowEventMode ; NSString* UnrealResizeEventMode ; NSString* UnrealFullscreenEventMode ; NSString* UnrealCloseEventMode ; NSString* UnrealIMEEventMode ; @ interface)",
    "insertText": "NSThread(FCocoaThread) + (NSThread*)"
  },
  {
    "label": "NSThread()",
    "kind": "Method",
    "detail": "Function (@ end @ interface FCocoaGameThread :)",
    "insertText": "NSThread(id)"
  },
  {
    "label": "MainThreadCall()",
    "kind": "Method",
    "detail": "Function (@ end void)",
    "insertText": "MainThreadCall(dispatch_block_t Block, NSString* WaitMode = NSDefaultRunLoopMode, bool const bWait = true)"
  },
  {
    "label": "MainThreadReturn()",
    "kind": "Method",
    "detail": "Function (template<ReturnType> ReturnType)",
    "insertText": "MainThreadReturn(ReturnType (^Block)(void), NSString* WaitMode = NSDefaultRunLoopMode)"
  },
  {
    "label": "MainThreadCall()",
    "kind": "Method",
    "detail": "Function (__block ReturnType ReturnValue ;)",
    "insertText": "MainThreadCall(^{ ReturnValue = Block(); }, WaitMode, true)"
  },
  {
    "label": "GameThreadReturn()",
    "kind": "Method",
    "detail": "Function (template<ReturnType> ReturnType)",
    "insertText": "GameThreadReturn(ReturnType (^Block)(void), NSArray* SendModes = @[ NSDefaultRunLoopMode ])"
  },
  {
    "label": "GameThreadCall()",
    "kind": "Method",
    "detail": "Function (__block ReturnType ReturnValue ;)",
    "insertText": "GameThreadCall(^{ ReturnValue = Block(); }, SendModes, true)"
  },
  {
    "label": "ProcessGameThreadEvents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessGameThreadEvents(void)"
  }
]