[
  {
    "label": "Refinement",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Refinement"
  },
  {
    "label": "TriRefinement",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TriRefinement"
  },
  {
    "label": "QuadRefinement",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "QuadRefinement"
  },
  {
    "label": "FVarRefinement",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVarRefinement"
  },
  {
    "label": "FVarLevel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVarLevel"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "Level",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Level"
  },
  {
    "label": "VTag",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VTag"
  },
  {
    "label": "requires",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "requires"
  },
  {
    "label": "ETag",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ETag"
  },
  {
    "label": "FTag",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTag"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "to"
  },
  {
    "label": "VSpan",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VSpan"
  },
  {
    "label": "TopologyError",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "TopologyError"
  },
  {
    "label": "and",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "and"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "construct",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "construct"
  },
  {
    "label": "Refinement",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Refinement"
  },
  {
    "label": "TriRefinement",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TriRefinement"
  },
  {
    "label": "QuadRefinement",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "QuadRefinement"
  },
  {
    "label": "BitwiseOr()",
    "kind": "Method",
    "detail": "Function (VTag)",
    "insertText": "BitwiseOr(VTag const vTags[], int size = 4)"
  },
  {
    "label": "BitwiseOr()",
    "kind": "Method",
    "detail": "Function (ETag)",
    "insertText": "BitwiseOr(ETag const eTags[], int size = 4)"
  },
  {
    "label": "Level()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "Level()"
  },
  {
    "label": "setFaceHole()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setFaceHole(Index faceIndex, bool b)"
  },
  {
    "label": "setEdgeNonManifold()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setEdgeNonManifold(Index edgeIndex, bool b)"
  },
  {
    "label": "setVertexNonManifold()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setVertexNonManifold(Index vertIndex, bool b)"
  },
  {
    "label": "resizeFaces()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "resizeFaces(       int numFaces)"
  },
  {
    "label": "resizeFaceVertices()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "resizeFaceVertices(int numFaceVertsTotal)"
  },
  {
    "label": "resizeFaceEdges()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "resizeFaceEdges(   int numFaceEdgesTotal)"
  },
  {
    "label": "resizeEdges()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "resizeEdges(    int numEdges)"
  },
  {
    "label": "resizeEdgeVertices()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "resizeEdgeVertices()"
  },
  {
    "label": "resizeEdgeFaces()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "resizeEdgeFaces(int numEdgeFacesTotal)"
  },
  {
    "label": "resizeVertices()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "resizeVertices(   int numVertices)"
  },
  {
    "label": "resizeVertexFaces()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "resizeVertexFaces(int numVertexFacesTotal)"
  },
  {
    "label": "resizeVertexEdges()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "resizeVertexEdges(int numVertexEdgesTotal)"
  },
  {
    "label": "setMaxValence()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setMaxValence(int maxValence)"
  },
  {
    "label": "getFaceVertices()",
    "kind": "Method",
    "detail": "Function (IndexArray)",
    "insertText": "getFaceVertices(Index faceIndex)"
  },
  {
    "label": "getFaceEdges()",
    "kind": "Method",
    "detail": "Function (IndexArray)",
    "insertText": "getFaceEdges(Index faceIndex)"
  },
  {
    "label": "getEdgeVertices()",
    "kind": "Method",
    "detail": "Function (IndexArray)",
    "insertText": "getEdgeVertices(Index edgeIndex)"
  },
  {
    "label": "getEdgeFaces()",
    "kind": "Method",
    "detail": "Function (IndexArray)",
    "insertText": "getEdgeFaces(Index edgeIndex)"
  },
  {
    "label": "getVertexFaces()",
    "kind": "Method",
    "detail": "Function (IndexArray)",
    "insertText": "getVertexFaces(Index vertIndex)"
  },
  {
    "label": "getVertexEdges()",
    "kind": "Method",
    "detail": "Function (IndexArray)",
    "insertText": "getVertexEdges(Index vertIndex)"
  },
  {
    "label": "getEdgeFaceLocalIndices()",
    "kind": "Method",
    "detail": "Function (LocalIndexArray)",
    "insertText": "getEdgeFaceLocalIndices(Index edgeIndex)"
  },
  {
    "label": "getVertexFaceLocalIndices()",
    "kind": "Method",
    "detail": "Function (LocalIndexArray)",
    "insertText": "getVertexFaceLocalIndices(Index vertIndex)"
  },
  {
    "label": "getVertexEdgeLocalIndices()",
    "kind": "Method",
    "detail": "Function (LocalIndexArray)",
    "insertText": "getVertexEdgeLocalIndices(Index vertIndex)"
  },
  {
    "label": "createFVarChannel()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "createFVarChannel(int fvarValueCount, Sdc::Options const& options)"
  },
  {
    "label": "destroyFVarChannel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "destroyFVarChannel(int channel)"
  },
  {
    "label": "getFaceFVarValues()",
    "kind": "Method",
    "detail": "Function (IndexArray)",
    "insertText": "getFaceFVarValues(Index faceIndex, int channel)"
  },
  {
    "label": "completeFVarChannelTopology()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "completeFVarChannelTopology(int channel, int regBoundaryValence)"
  },
  {
    "label": "getNumFaceVertices()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "getNumFaceVertices(faceIndex)"
  },
  {
    "label": "getOffsetOfFaceVertices()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "getOffsetOfFaceVertices(faceIndex)"
  },
  {
    "label": "resizeFaceVertices()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "resizeFaceVertices(Index FaceIndex, int count)"
  },
  {
    "label": "resizeEdgeFaces()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "resizeEdgeFaces(Index edgeIndex, int count)"
  },
  {
    "label": "trimEdgeFaces()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "trimEdgeFaces(  Index edgeIndex, int count)"
  },
  {
    "label": "resizeVertexFaces()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "resizeVertexFaces(Index vertIndex, int count)"
  },
  {
    "label": "trimVertexFaces()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "trimVertexFaces(  Index vertIndex, int count)"
  },
  {
    "label": "resizeVertexEdges()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "resizeVertexEdges(Index vertIndex, int count)"
  },
  {
    "label": "trimVertexEdges()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "trimVertexEdges(  Index vertIndex, int count)"
  },
  {
    "label": "completeTopologyFromFaceVertices()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "completeTopologyFromFaceVertices()"
  },
  {
    "label": "orientIncidentComponents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "orientIncidentComponents()"
  },
  {
    "label": "orderVertexFacesAndEdges()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "orderVertexFacesAndEdges(Index vIndex)"
  },
  {
    "label": "populateLocalIndices()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "populateLocalIndices()"
  },
  {
    "label": "ConstIndexArray()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "ConstIndexArray(&_faceVertIndices[_faceVertCountsAndOffsets[faceIndex*2+1]],\n                          _faceVertCountsAndOffsets[faceIndex*2])"
  },
  {
    "label": "IndexArray()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "IndexArray(&_faceVertIndices[_faceVertCountsAndOffsets[faceIndex*2+1]],\n                          _faceVertCountsAndOffsets[faceIndex*2])"
  },
  {
    "label": "ConstIndexArray()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "ConstIndexArray(&_faceEdgeIndices[_faceVertCountsAndOffsets[faceIndex*2+1]],\n                          _faceVertCountsAndOffsets[faceIndex*2])"
  },
  {
    "label": "IndexArray()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "IndexArray(&_faceEdgeIndices[_faceVertCountsAndOffsets[faceIndex*2+1]],\n                          _faceVertCountsAndOffsets[faceIndex*2])"
  },
  {
    "label": "ConstIndexArray()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "ConstIndexArray(&_edgeVertIndices[edgeIndex*2], 2)"
  },
  {
    "label": "IndexArray()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "IndexArray(&_edgeVertIndices[edgeIndex*2], 2)"
  },
  {
    "label": "ConstIndexArray()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "ConstIndexArray(&_edgeFaceIndices[0] + \n                           _edgeFaceCountsAndOffsets[edgeIndex*2+1],\n                           _edgeFaceCountsAndOffsets[edgeIndex*2])"
  },
  {
    "label": "IndexArray()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "IndexArray(&_edgeFaceIndices[0] +\n                      _edgeFaceCountsAndOffsets[edgeIndex*2+1],\n                      _edgeFaceCountsAndOffsets[edgeIndex*2])"
  },
  {
    "label": "ConstLocalIndexArray()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "ConstLocalIndexArray(&_edgeFaceLocalIndices[0] +\n                                _edgeFaceCountsAndOffsets[edgeIndex*2+1],\n                                _edgeFaceCountsAndOffsets[edgeIndex*2])"
  },
  {
    "label": "LocalIndexArray()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "LocalIndexArray(&_edgeFaceLocalIndices[0] +\n                           _edgeFaceCountsAndOffsets[edgeIndex*2+1],\n                           _edgeFaceCountsAndOffsets[edgeIndex*2])"
  }
]