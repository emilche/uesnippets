[
  {
    "label": "FBoundsFacade",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBoundsFacade"
  },
  {
    "label": "FBoundsFacade()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / UnrealString . h \" # include \" Containers / Array . h \" # include \" Math / MathFwd . h \" # include \" GeometryCollection / ManagedArrayAccessor . h \" # include \" GeometryCollection / ManagedArrayCollection . h \" # include \" GeometryCollection / Facades / CollectionSelectionFacade . h \" # include \" Chaos / Triangle . h \" namespace GeometryCollection::Facades { class FBoundsFacade { public :)",
    "insertText": "FBoundsFacade(FManagedArrayCollection& InSelf)"
  },
  {
    "label": "FBoundsFacade()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FBoundsFacade(const FManagedArrayCollection& InSelf)"
  },
  {
    "label": "DefineSchema()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DefineSchema()"
  },
  {
    "label": "IsConst()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsConst()"
  },
  {
    "label": "IsValid()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsValid()"
  },
  {
    "label": "UpdateBoundingBox()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateBoundingBox()"
  },
  {
    "label": "GetBoundingBoxes()",
    "kind": "Method",
    "detail": "Function (const TManagedArray<FBox>&)",
    "insertText": "GetBoundingBoxes()"
  },
  {
    "label": "GetCentroids()",
    "kind": "Method",
    "detail": "Function (} TArray<FVector>)",
    "insertText": "GetCentroids()"
  },
  {
    "label": "GetBoundingBoxInCollectionSpace()",
    "kind": "Method",
    "detail": "Function (FBox)",
    "insertText": "GetBoundingBoxInCollectionSpace()"
  },
  {
    "label": "GetBoundingBoxVertexPositions()",
    "kind": "Method",
    "detail": "Function (TArray<FVector>)",
    "insertText": "GetBoundingBoxVertexPositions(const FBox& InBox)"
  },
  {
    "label": "GetTransformToGeometryIndex()",
    "kind": "Method",
    "detail": "Function (const TManagedArray<int32>&)",
    "insertText": "GetTransformToGeometryIndex()"
  },
  {
    "label": "UpdateTransformBasedBoundingBox()",
    "kind": "Method",
    "detail": "Function (} protected : void)",
    "insertText": "UpdateTransformBasedBoundingBox()"
  },
  {
    "label": "UpdateVertexBasedBoundingBox()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateVertexBasedBoundingBox()"
  }
]