[
  {
    "label": "CDefinition",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CDefinition"
  },
  {
    "label": "CSemanticProgram",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CSemanticProgram"
  },
  {
    "label": "GetAvailableAttributeVersion()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" uLang / Common / Common . h \" # include \" uLang / Common / Misc / MathUtils . h \" # include \" uLang / Common / Misc / Optional . h \" # include \" uLang / SourceProject / UploadedAtFNVersion . h \" # include<cstdint> namespace uLang { class CDefinition ; class CSemanticProgram ; TOptional<uint64_t>)",
    "insertText": "GetAvailableAttributeVersion(const CDefinition& Definition, CSemanticProgram& SemanticProgram)"
  },
  {
    "label": "CalculateCombinedAvailableAttributeVersion()",
    "kind": "Method",
    "detail": "Function (TOptional<uint64_t>)",
    "insertText": "CalculateCombinedAvailableAttributeVersion(const CDefinition& Definition, CSemanticProgram& SemanticProgram)"
  },
  {
    "label": "IsDefinitionAvailableAtVersion()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsDefinitionAvailableAtVersion(const CDefinition& Definition, uint64_t Version, CSemanticProgram& SemanticProgram)"
  }
]