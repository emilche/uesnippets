[
  {
    "label": "ResampleInputAudioFile",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ResampleInputAudioFile"
  },
  {
    "label": "ResampleInputAudioFile()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_AUDIO_CODING_NETEQ_TOOLS_RESAMPLE_INPUT_AUDIO_FILE_H_ # define MODULES_AUDIO_CODING_NETEQ_TOOLS_RESAMPLE_INPUT_AUDIO_FILE_H_ # include<string> # include \" absl / strings / string_view . h \" # include \" common_audio / resampler / include / resampler . h \" # include \" modules / audio_coding / neteq / tools / input_audio_file . h \" namespace webrtc { namespace test { class ResampleInputAudioFile : public InputAudioFile { public :)",
    "insertText": "ResampleInputAudioFile(absl::string_view file_name, int file_rate_hz, bool loop_at_end = true) : InputAudioFile(file_name, loop_at_end), file_rate_hz_(file_rate_hz), output_rate_hz_(-1)"
  },
  {
    "label": "ResampleInputAudioFile()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "ResampleInputAudioFile(absl::string_view file_name, int file_rate_hz, int output_rate_hz, bool loop_at_end = true) : InputAudioFile(file_name, loop_at_end), file_rate_hz_(file_rate_hz), output_rate_hz_(output_rate_hz)"
  },
  {
    "label": "ResampleInputAudioFile()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "ResampleInputAudioFile(const ResampleInputAudioFile&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (ResampleInputAudioFile&)",
    "insertText": "operator(const ResampleInputAudioFile&)"
  },
  {
    "label": "Read()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Read(size_t samples, int output_rate_hz, int16_t* destination)"
  },
  {
    "label": "Read()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Read(size_t samples, int16_t* destination)"
  },
  {
    "label": "set_output_rate_hz()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "set_output_rate_hz(int rate_hz)"
  }
]