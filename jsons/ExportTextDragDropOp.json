[
  {
    "label": "FExportTextDragDropOp",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FExportTextDragDropOp"
  },
  {
    "label": "DRAG_DROP_OPERATOR_TYPE()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / Object . h \" # include \" GameFramework / Actor . h \" # include \" Input / DragAndDrop . h \" # include \" Editor . h \" # include \" UObject / UObjectIterator . h \" # include \" UObject / PropertyPortFlags . h \" # include \" Exporters / Exporter . h \" # include \" UnrealExporter . h \" class FExportTextDragDropOp : public FDragDropOperation { public :)",
    "insertText": "DRAG_DROP_OPERATOR_TYPE(FExportTextDragDropOp, FDragDropOperation)"
  },
  {
    "label": "New()",
    "kind": "Method",
    "detail": "Function (int32 NumActors ; TSharedRef<FExportTextDragDropOp>)",
    "insertText": "New(const TArray<AActor*>& InActors)"
  },
  {
    "label": "MakeShareable()",
    "kind": "Method",
    "detail": "Function (TSharedRef<FExportTextDragDropOp> Operation =)",
    "insertText": "MakeShareable(new FExportTextDragDropOp)"
  },
  {
    "label": "Context()",
    "kind": "Method",
    "detail": "Function (FStringOutputDevice Ar ; const FSelectedActorExportObjectInnerContext)",
    "insertText": "Context(InActors)"
  },
  {
    "label": "ExportToOutputDevice()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExportToOutputDevice(&Context, GWorld, NULL, Ar, TEXT(\"copy\"), 0, PPF_DeepCompareInstances | PPF_ExportsNotFullyQualified)"
  },
  {
    "label": "Num()",
    "kind": "Method",
    "detail": "Function (Operation -> ActorExportText = Ar ; Operation -> NumActors = InActors .)",
    "insertText": "Num()"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (Operation ->)",
    "insertText": "Construct()"
  }
]