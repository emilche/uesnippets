[
  {
    "label": "Parameterization",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Parameterization"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "Parameterization()",
    "kind": "Method",
    "detail": "Function (# ifndef OPENSUBDIV3_BFR_PARAMETERIZATION_H # define OPENSUBDIV3_BFR_PARAMETERIZATION_H # include \" . . / version . h \" # include \" . . / sdc / types . h \" namespace OpenSubdiv { namespace OPENSUBDIV_VERSION { namespace Bfr { class Parameterization { public : enum Type { QUAD,TRI,QUAD_SUBFACES } ; public :)",
    "insertText": "Parameterization(Sdc::SchemeType scheme, int faceSize)"
  },
  {
    "label": "IsValid()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsValid()"
  },
  {
    "label": "Parameterization()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "Parameterization() : _type(0), _uDim(0), _faceSize(0)"
  },
  {
    "label": "Parameterization()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "Parameterization(Parameterization const &)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (Parameterization&)",
    "insertText": "operator(Parameterization const &)"
  },
  {
    "label": "Parameterization()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "Parameterization()"
  },
  {
    "label": "GetType()",
    "kind": "Method",
    "detail": "Function (Type)",
    "insertText": "GetType()"
  },
  {
    "label": "GetFaceSize()",
    "kind": "Method",
    "detail": "Function (} int)",
    "insertText": "GetFaceSize()"
  },
  {
    "label": "GetEdgeCoord()",
    "kind": "Method",
    "detail": "Function (template<REAL> void)",
    "insertText": "GetEdgeCoord(int edgeIndex, REAL t, REAL uvCoord[2])"
  },
  {
    "label": "GetCenterCoord()",
    "kind": "Method",
    "detail": "Function (template<REAL> void)",
    "insertText": "GetCenterCoord(REAL uvCoord[2])"
  },
  {
    "label": "HasSubFaces()",
    "kind": "Method",
    "detail": "Function (public : bool)",
    "insertText": "HasSubFaces()"
  },
  {
    "label": "GetSubFace()",
    "kind": "Method",
    "detail": "Function (template<REAL> int)",
    "insertText": "GetSubFace(REAL const uvCoord[2])"
  },
  {
    "label": "ConvertCoordToSubFace()",
    "kind": "Method",
    "detail": "Function (template<REAL> int)",
    "insertText": "ConvertCoordToSubFace(REAL const uvCoord[2], REAL subFaceCoord[2])"
  },
  {
    "label": "ConvertSubFaceToCoord()",
    "kind": "Method",
    "detail": "Function (template<REAL> void)",
    "insertText": "ConvertSubFaceToCoord(int subFace, REAL const subFaceCoord[2], REAL uvCoord[2])"
  },
  {
    "label": "ConvertCoordToNormalizedSubFace()",
    "kind": "Method",
    "detail": "Function (template<REAL> int)",
    "insertText": "ConvertCoordToNormalizedSubFace(REAL const uvCoord[2], REAL subFaceCoord[2])"
  },
  {
    "label": "ConvertNormalizedSubFaceToCoord()",
    "kind": "Method",
    "detail": "Function (template<REAL> void)",
    "insertText": "ConvertNormalizedSubFaceToCoord(int subFace, REAL const subFaceCoord[2], REAL uvCoord[2])"
  },
  {
    "label": "convertCoordToSubFace()",
    "kind": "Method",
    "detail": "Function (private : template<REAL> int)",
    "insertText": "convertCoordToSubFace(bool normalized, REAL const uvCoord[2], REAL subFaceCoord[2])"
  },
  {
    "label": "convertSubFaceToCoord()",
    "kind": "Method",
    "detail": "Function (template<REAL> void)",
    "insertText": "convertSubFaceToCoord(bool normalized, int subFace, REAL const subFaceCoord[2], REAL uvCoord[2])"
  },
  {
    "label": "uTile()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "uTile(int)"
  },
  {
    "label": "vTile()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "vTile(int)"
  },
  {
    "label": "ConvertCoordToSubFace()",
    "kind": "Method",
    "detail": "Function (} template<REAL> int)",
    "insertText": "ConvertCoordToSubFace(REAL const uvCoord[2], REAL subCoord[2])"
  },
  {
    "label": "ConvertSubFaceToCoord()",
    "kind": "Method",
    "detail": "Function (} template<REAL> void)",
    "insertText": "ConvertSubFaceToCoord(int subFace, REAL const subCoord[2], REAL uvCoord[2])"
  },
  {
    "label": "REAL()",
    "kind": "Method",
    "detail": "Function (convertSubFaceToCoord<)",
    "insertText": "REAL(false, subFace, subCoord, uvCoord)"
  },
  {
    "label": "ConvertCoordToNormalizedSubFace()",
    "kind": "Method",
    "detail": "Function (} template<REAL> int)",
    "insertText": "ConvertCoordToNormalizedSubFace(REAL const uvCoord[2], REAL subCoord[2])"
  },
  {
    "label": "ConvertNormalizedSubFaceToCoord()",
    "kind": "Method",
    "detail": "Function (} template<REAL> void)",
    "insertText": "ConvertNormalizedSubFaceToCoord(int subFace, REAL const subCoord[2], REAL uvCoord[2])"
  },
  {
    "label": "REAL()",
    "kind": "Method",
    "detail": "Function (convertSubFaceToCoord<)",
    "insertText": "REAL(true, subFace, subCoord, uvCoord)"
  }
]