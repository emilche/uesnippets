[
  {
    "label": "AActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AActor"
  },
  {
    "label": "FTypedElementHandle",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTypedElementHandle"
  },
  {
    "label": "FActorElementData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FActorElementData"
  },
  {
    "label": "UE_DECLARE_TYPED_ELEMENT_DATA_RTTI()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Elements / Framework / TypedElementData . h \" # include \" UObject / Object . h \" class AActor ; struct FTypedElementHandle ; struct FActorElementData {)",
    "insertText": "UE_DECLARE_TYPED_ELEMENT_DATA_RTTI(FActorElementData)"
  },
  {
    "label": "FActorElementData()",
    "kind": "Method",
    "detail": "Function (AActor* Actor = nullptr ; } ; template<> FString GetTypedElementDebugId<)",
    "insertText": "FActorElementData(const FActorElementData& InElementData)"
  },
  {
    "label": "Object()",
    "kind": "Method",
    "detail": "Function (UObject*)",
    "insertText": "Object(UObject*)"
  },
  {
    "label": "GetActorFromHandle()",
    "kind": "Method",
    "detail": "Function (} namespace ActorElementDataUtil { AActor*)",
    "insertText": "GetActorFromHandle(const FTypedElementHandle& InHandle, const bool bSilent = false)"
  },
  {
    "label": "GetActorFromHandleChecked()",
    "kind": "Method",
    "detail": "Function (AActor*)",
    "insertText": "GetActorFromHandleChecked(const FTypedElementHandle& InHandle)"
  },
  {
    "label": "GetActorsFromHandles()",
    "kind": "Method",
    "detail": "Function (template<ElementHandleType> TArray<AActor*>)",
    "insertText": "GetActorsFromHandles(TArrayView<const ElementHandleType> InHandles, const bool bSilent = false)"
  },
  {
    "label": "Reserve()",
    "kind": "Method",
    "detail": "Function (TArray<AActor*> Actors ; Actors .)",
    "insertText": "Reserve(InHandles.Num())"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (Actors .)",
    "insertText": "Add(Actor)"
  },
  {
    "label": "GetActorsFromHandlesChecked()",
    "kind": "Method",
    "detail": "Function (} } return Actors ; } template<ElementHandleType> TArray<AActor*>)",
    "insertText": "GetActorsFromHandlesChecked(TArrayView<const ElementHandleType> InHandles)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (Actors .)",
    "insertText": "Add(GetActorFromHandleChecked(Handle))"
  }
]