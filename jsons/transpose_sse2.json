[
  {
    "label": "transpose_8bit_4x4()",
    "kind": "Method",
    "detail": "Function (# ifndef VPX_VPX_DSP_X86_TRANSPOSE_SSE2_H_ # define VPX_VPX_DSP_X86_TRANSPOSE_SSE2_H_ # include<emmintrin . h> # include \" . / vpx_config . h \" __m128i)",
    "insertText": "transpose_8bit_4x4(const __m128i *const in)"
  },
  {
    "label": "_mm_unpacklo_epi8()",
    "kind": "Method",
    "detail": "Function (const __m128i a0 =)",
    "insertText": "_mm_unpacklo_epi8(in[0], in[1])"
  },
  {
    "label": "_mm_unpacklo_epi8()",
    "kind": "Method",
    "detail": "Function (const __m128i a1 =)",
    "insertText": "_mm_unpacklo_epi8(in[2], in[3])"
  },
  {
    "label": "transpose_8bit_8x8()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "transpose_8bit_8x8(const __m128i *const in, __m128i *const out)"
  },
  {
    "label": "_mm_unpacklo_epi8()",
    "kind": "Method",
    "detail": "Function (const __m128i a2 =)",
    "insertText": "_mm_unpacklo_epi8(in[4], in[5])"
  },
  {
    "label": "_mm_unpacklo_epi8()",
    "kind": "Method",
    "detail": "Function (const __m128i a3 =)",
    "insertText": "_mm_unpacklo_epi8(in[6], in[7])"
  },
  {
    "label": "_mm_unpacklo_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i b0 =)",
    "insertText": "_mm_unpacklo_epi16(a0, a1)"
  },
  {
    "label": "_mm_unpackhi_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i b1 =)",
    "insertText": "_mm_unpackhi_epi16(a0, a1)"
  },
  {
    "label": "_mm_unpacklo_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i b2 =)",
    "insertText": "_mm_unpacklo_epi16(a2, a3)"
  },
  {
    "label": "_mm_unpackhi_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i b3 =)",
    "insertText": "_mm_unpackhi_epi16(a2, a3)"
  },
  {
    "label": "_mm_unpacklo_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i c0 =)",
    "insertText": "_mm_unpacklo_epi32(b0, b2)"
  },
  {
    "label": "_mm_unpackhi_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i c1 =)",
    "insertText": "_mm_unpackhi_epi32(b0, b2)"
  },
  {
    "label": "_mm_unpacklo_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i c2 =)",
    "insertText": "_mm_unpacklo_epi32(b1, b3)"
  },
  {
    "label": "_mm_unpackhi_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i c3 =)",
    "insertText": "_mm_unpackhi_epi32(b1, b3)"
  },
  {
    "label": "_mm_unpacklo_epi64()",
    "kind": "Method",
    "detail": "Function (out [ 0 ] =)",
    "insertText": "_mm_unpacklo_epi64(c0, c0)"
  },
  {
    "label": "_mm_unpackhi_epi64()",
    "kind": "Method",
    "detail": "Function (out [ 1 ] =)",
    "insertText": "_mm_unpackhi_epi64(c0, c0)"
  },
  {
    "label": "_mm_unpacklo_epi64()",
    "kind": "Method",
    "detail": "Function (out [ 2 ] =)",
    "insertText": "_mm_unpacklo_epi64(c1, c1)"
  },
  {
    "label": "_mm_unpackhi_epi64()",
    "kind": "Method",
    "detail": "Function (out [ 3 ] =)",
    "insertText": "_mm_unpackhi_epi64(c1, c1)"
  },
  {
    "label": "_mm_unpacklo_epi64()",
    "kind": "Method",
    "detail": "Function (out [ 4 ] =)",
    "insertText": "_mm_unpacklo_epi64(c2, c2)"
  },
  {
    "label": "_mm_unpackhi_epi64()",
    "kind": "Method",
    "detail": "Function (out [ 5 ] =)",
    "insertText": "_mm_unpackhi_epi64(c2, c2)"
  },
  {
    "label": "_mm_unpacklo_epi64()",
    "kind": "Method",
    "detail": "Function (out [ 6 ] =)",
    "insertText": "_mm_unpacklo_epi64(c3, c3)"
  },
  {
    "label": "_mm_unpackhi_epi64()",
    "kind": "Method",
    "detail": "Function (out [ 7 ] =)",
    "insertText": "_mm_unpackhi_epi64(c3, c3)"
  },
  {
    "label": "transpose_16bit_4x4()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "transpose_16bit_4x4(const __m128i *const in, __m128i *const out)"
  },
  {
    "label": "_mm_unpacklo_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i a0 =)",
    "insertText": "_mm_unpacklo_epi16(in[0], in[1])"
  },
  {
    "label": "_mm_unpacklo_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i a1 =)",
    "insertText": "_mm_unpacklo_epi16(in[2], in[3])"
  },
  {
    "label": "_mm_unpacklo_epi32()",
    "kind": "Method",
    "detail": "Function (out [ 0 ] =)",
    "insertText": "_mm_unpacklo_epi32(a0, a1)"
  },
  {
    "label": "_mm_unpackhi_epi32()",
    "kind": "Method",
    "detail": "Function (out [ 1 ] =)",
    "insertText": "_mm_unpackhi_epi32(a0, a1)"
  },
  {
    "label": "transpose_16bit_4x8()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "transpose_16bit_4x8(const __m128i *const in, __m128i *const out)"
  },
  {
    "label": "_mm_unpacklo_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i a2 =)",
    "insertText": "_mm_unpacklo_epi16(in[4], in[5])"
  },
  {
    "label": "_mm_unpacklo_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i a3 =)",
    "insertText": "_mm_unpacklo_epi16(in[6], in[7])"
  },
  {
    "label": "_mm_unpacklo_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i b1 =)",
    "insertText": "_mm_unpacklo_epi32(a2, a3)"
  },
  {
    "label": "_mm_unpackhi_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i b3 =)",
    "insertText": "_mm_unpackhi_epi32(a2, a3)"
  },
  {
    "label": "_mm_unpacklo_epi64()",
    "kind": "Method",
    "detail": "Function (out [ 0 ] =)",
    "insertText": "_mm_unpacklo_epi64(b0, b1)"
  },
  {
    "label": "_mm_unpackhi_epi64()",
    "kind": "Method",
    "detail": "Function (out [ 1 ] =)",
    "insertText": "_mm_unpackhi_epi64(b0, b1)"
  },
  {
    "label": "_mm_unpacklo_epi64()",
    "kind": "Method",
    "detail": "Function (out [ 2 ] =)",
    "insertText": "_mm_unpacklo_epi64(b2, b3)"
  },
  {
    "label": "_mm_unpackhi_epi64()",
    "kind": "Method",
    "detail": "Function (out [ 3 ] =)",
    "insertText": "_mm_unpackhi_epi64(b2, b3)"
  },
  {
    "label": "transpose_16bit_8x8()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "transpose_16bit_8x8(const __m128i *const in, __m128i *const out)"
  },
  {
    "label": "_mm_unpackhi_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i a4 =)",
    "insertText": "_mm_unpackhi_epi16(in[0], in[1])"
  },
  {
    "label": "_mm_unpackhi_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i a5 =)",
    "insertText": "_mm_unpackhi_epi16(in[2], in[3])"
  },
  {
    "label": "_mm_unpackhi_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i a6 =)",
    "insertText": "_mm_unpackhi_epi16(in[4], in[5])"
  },
  {
    "label": "_mm_unpackhi_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i a7 =)",
    "insertText": "_mm_unpackhi_epi16(in[6], in[7])"
  },
  {
    "label": "_mm_unpacklo_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i b2 =)",
    "insertText": "_mm_unpacklo_epi32(a4, a5)"
  },
  {
    "label": "_mm_unpacklo_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i b3 =)",
    "insertText": "_mm_unpacklo_epi32(a6, a7)"
  },
  {
    "label": "_mm_unpackhi_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i b6 =)",
    "insertText": "_mm_unpackhi_epi32(a4, a5)"
  },
  {
    "label": "_mm_unpackhi_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i b7 =)",
    "insertText": "_mm_unpackhi_epi32(a6, a7)"
  },
  {
    "label": "_mm_unpacklo_epi64()",
    "kind": "Method",
    "detail": "Function (out [ 2 ] =)",
    "insertText": "_mm_unpacklo_epi64(b4, b5)"
  },
  {
    "label": "_mm_unpackhi_epi64()",
    "kind": "Method",
    "detail": "Function (out [ 3 ] =)",
    "insertText": "_mm_unpackhi_epi64(b4, b5)"
  },
  {
    "label": "_mm_unpacklo_epi64()",
    "kind": "Method",
    "detail": "Function (out [ 6 ] =)",
    "insertText": "_mm_unpacklo_epi64(b6, b7)"
  },
  {
    "label": "_mm_unpackhi_epi64()",
    "kind": "Method",
    "detail": "Function (out [ 7 ] =)",
    "insertText": "_mm_unpackhi_epi64(b6, b7)"
  },
  {
    "label": "transpose_16bit_16x16()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "transpose_16bit_16x16(__m128i *const left, __m128i *const right)"
  },
  {
    "label": "transpose_16bit_8x8()",
    "kind": "Method",
    "detail": "Function (__m128i tbuf [ 8 ] ;)",
    "insertText": "transpose_16bit_8x8(left, left)"
  },
  {
    "label": "transpose_16bit_8x8()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "transpose_16bit_8x8(right, tbuf)"
  },
  {
    "label": "transpose_16bit_8x8()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "transpose_16bit_8x8(left + 8, right)"
  },
  {
    "label": "transpose_16bit_8x8()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "transpose_16bit_8x8(right + 8, right + 8)"
  },
  {
    "label": "transpose_32bit_4x4()",
    "kind": "Method",
    "detail": "Function (left [ 8 ] = tbuf [ 0 ] ; left [ 9 ] = tbuf [ 1 ] ; left [ 1 0 ] = tbuf [ 2 ] ; left [ 1 1 ] = tbuf [ 3 ] ; left [ 1 2 ] = tbuf [ 4 ] ; left [ 1 3 ] = tbuf [ 5 ] ; left [ 1 4 ] = tbuf [ 6 ] ; left [ 1 5 ] = tbuf [ 7 ] ; } void)",
    "insertText": "transpose_32bit_4x4(const __m128i *const in, __m128i *const out)"
  },
  {
    "label": "_mm_unpacklo_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i a0 =)",
    "insertText": "_mm_unpacklo_epi32(in[0], in[1])"
  },
  {
    "label": "_mm_unpacklo_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i a1 =)",
    "insertText": "_mm_unpacklo_epi32(in[2], in[3])"
  },
  {
    "label": "_mm_unpackhi_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i a2 =)",
    "insertText": "_mm_unpackhi_epi32(in[0], in[1])"
  },
  {
    "label": "_mm_unpackhi_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i a3 =)",
    "insertText": "_mm_unpackhi_epi32(in[2], in[3])"
  },
  {
    "label": "_mm_unpacklo_epi64()",
    "kind": "Method",
    "detail": "Function (out [ 0 ] =)",
    "insertText": "_mm_unpacklo_epi64(a0, a1)"
  },
  {
    "label": "_mm_unpackhi_epi64()",
    "kind": "Method",
    "detail": "Function (out [ 1 ] =)",
    "insertText": "_mm_unpackhi_epi64(a0, a1)"
  },
  {
    "label": "_mm_unpacklo_epi64()",
    "kind": "Method",
    "detail": "Function (out [ 2 ] =)",
    "insertText": "_mm_unpacklo_epi64(a2, a3)"
  },
  {
    "label": "_mm_unpackhi_epi64()",
    "kind": "Method",
    "detail": "Function (out [ 3 ] =)",
    "insertText": "_mm_unpackhi_epi64(a2, a3)"
  },
  {
    "label": "transpose_32bit_4x4x2()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "transpose_32bit_4x4x2(const __m128i *const in, __m128i *const out)"
  },
  {
    "label": "_mm_unpacklo_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i a4 =)",
    "insertText": "_mm_unpacklo_epi32(in[4], in[5])"
  },
  {
    "label": "_mm_unpacklo_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i a5 =)",
    "insertText": "_mm_unpacklo_epi32(in[6], in[7])"
  },
  {
    "label": "_mm_unpackhi_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i a6 =)",
    "insertText": "_mm_unpackhi_epi32(in[4], in[5])"
  },
  {
    "label": "_mm_unpackhi_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i a7 =)",
    "insertText": "_mm_unpackhi_epi32(in[6], in[7])"
  },
  {
    "label": "_mm_unpacklo_epi64()",
    "kind": "Method",
    "detail": "Function (out [ 4 ] =)",
    "insertText": "_mm_unpacklo_epi64(a4, a5)"
  },
  {
    "label": "_mm_unpackhi_epi64()",
    "kind": "Method",
    "detail": "Function (out [ 5 ] =)",
    "insertText": "_mm_unpackhi_epi64(a4, a5)"
  },
  {
    "label": "_mm_unpacklo_epi64()",
    "kind": "Method",
    "detail": "Function (out [ 6 ] =)",
    "insertText": "_mm_unpacklo_epi64(a6, a7)"
  },
  {
    "label": "_mm_unpackhi_epi64()",
    "kind": "Method",
    "detail": "Function (out [ 7 ] =)",
    "insertText": "_mm_unpackhi_epi64(a6, a7)"
  },
  {
    "label": "transpose_32bit_8x4()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "transpose_32bit_8x4(const __m128i *const in, __m128i *const out)"
  },
  {
    "label": "_mm_unpacklo_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i a0 =)",
    "insertText": "_mm_unpacklo_epi32(in[0], in[2])"
  },
  {
    "label": "_mm_unpacklo_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i a1 =)",
    "insertText": "_mm_unpacklo_epi32(in[4], in[6])"
  },
  {
    "label": "_mm_unpackhi_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i a2 =)",
    "insertText": "_mm_unpackhi_epi32(in[0], in[2])"
  },
  {
    "label": "_mm_unpackhi_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i a3 =)",
    "insertText": "_mm_unpackhi_epi32(in[4], in[6])"
  },
  {
    "label": "_mm_unpacklo_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i a4 =)",
    "insertText": "_mm_unpacklo_epi32(in[1], in[3])"
  },
  {
    "label": "_mm_unpacklo_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i a5 =)",
    "insertText": "_mm_unpacklo_epi32(in[5], in[7])"
  },
  {
    "label": "_mm_unpackhi_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i a6 =)",
    "insertText": "_mm_unpackhi_epi32(in[1], in[3])"
  },
  {
    "label": "_mm_unpackhi_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i a7 =)",
    "insertText": "_mm_unpackhi_epi32(in[5], in[7])"
  }
]