[
  {
    "label": "StorageBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "StorageBase"
  },
  {
    "label": "NoAlias",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "NoAlias"
  },
  {
    "label": "NoAlias()",
    "kind": "Method",
    "detail": "Function (# ifndef EIGEN_NOALIAS_H # define EIGEN_NOALIAS_H namespace Eigen { template<ExpressionType,template<> class StorageBase> class NoAlias { public : typedef ExpressionType::Scalar Scalar ; EIGEN_DEVICE_FUNC)",
    "insertText": "NoAlias(ExpressionType& expression) : m_expression(expression)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} template<OtherDerived> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE ExpressionType&)",
    "insertText": "operator(const StorageBase<OtherDerived>& other)"
  },
  {
    "label": "call_assignment_no_alias()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "call_assignment_no_alias(m_expression, other.derived(), internal::assign_op<Scalar,typename OtherDerived::Scalar>())"
  },
  {
    "label": "call_assignment_no_alias()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "call_assignment_no_alias(m_expression, other.derived(), internal::add_assign_op<Scalar,typename OtherDerived::Scalar>())"
  },
  {
    "label": "call_assignment_no_alias()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "call_assignment_no_alias(m_expression, other.derived(), internal::sub_assign_op<Scalar,typename OtherDerived::Scalar>())"
  }
]