[
  {
    "label": "MachineInstr",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MachineInstr"
  },
  {
    "label": "LivePhysRegs",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "LivePhysRegs"
  },
  {
    "label": "LivePhysRegs()",
    "kind": "Method",
    "detail": "Function (# ifndef LLVM_CODEGEN_LIVEPHYSREGS_H # define LLVM_CODEGEN_LIVEPHYSREGS_H # include \" llvm / ADT / SparseSet . h \" # include \" llvm / CodeGen / MachineBasicBlock . h \" # include \" llvm / Target / TargetRegisterInfo . h \" # include<cassert> namespace llvm { class MachineInstr ; class LivePhysRegs { const TargetRegisterInfo* TRI ; SparseSet<unsigned> LiveRegs ;)",
    "insertText": "LivePhysRegs(const LivePhysRegs&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (LivePhysRegs&)",
    "insertText": "operator(const LivePhysRegs&)"
  },
  {
    "label": "LivePhysRegs()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "LivePhysRegs() : TRI(nullptr), LiveRegs()"
  },
  {
    "label": "LivePhysRegs()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "LivePhysRegs(const TargetRegisterInfo *TRI) : TRI(TRI)"
  },
  {
    "label": "assert()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "assert(TRI && \"Invalid TargetRegisterInfo pointer.\")"
  },
  {
    "label": "setUniverse()",
    "kind": "Method",
    "detail": "Function (LiveRegs .)",
    "insertText": "setUniverse(TRI->getNumRegs())"
  },
  {
    "label": "init()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "init(const TargetRegisterInfo *TRI)"
  },
  {
    "label": "clear()",
    "kind": "Method",
    "detail": "Function (this -> TRI = TRI ; LiveRegs .)",
    "insertText": "clear()"
  },
  {
    "label": "empty()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "empty()"
  },
  {
    "label": "addReg()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "addReg(unsigned Reg)"
  },
  {
    "label": "assert()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "assert(TRI && \"LivePhysRegs is not initialized.\")"
  },
  {
    "label": "assert()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "assert(Reg <= TRI->getNumRegs() && \"Expected a physical register.\")"
  },
  {
    "label": "removeReg()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "removeReg(unsigned Reg)"
  },
  {
    "label": "removeRegsInMask()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "removeRegsInMask(const MachineOperand &MO, SmallVectorImpl<std::pair<unsigned, const MachineOperand*>> *Clobbers)"
  },
  {
    "label": "contains()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "contains(unsigned Reg)"
  },
  {
    "label": "stepBackward()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "stepBackward(const MachineInstr &MI)"
  },
  {
    "label": "stepForward()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "stepForward(const MachineInstr &MI, SmallVectorImpl<std::pair<unsigned, const MachineOperand*>> &Clobbers)"
  },
  {
    "label": "addLiveIns()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "addLiveIns(const MachineBasicBlock *MBB, bool AddPristines = false)"
  },
  {
    "label": "addLiveOuts()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "addLiveOuts(const MachineBasicBlock *MBB, bool AddPristines = false)"
  },
  {
    "label": "begin()",
    "kind": "Method",
    "detail": "Function (typedef SparseSet<unsigned>::const_iterator const_iterator ; const_iterator)",
    "insertText": "begin()"
  },
  {
    "label": "end()",
    "kind": "Method",
    "detail": "Function (} const_iterator)",
    "insertText": "end()"
  },
  {
    "label": "print()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "print(raw_ostream &OS)"
  },
  {
    "label": "dump()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "dump()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} ; raw_ostream&)",
    "insertText": "operator(raw_ostream &OS, const LivePhysRegs& LR)"
  },
  {
    "label": "print()",
    "kind": "Method",
    "detail": "Function (LR .)",
    "insertText": "print(OS)"
  }
]