[
  {
    "label": "AudioSource",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AudioSource"
  },
  {
    "label": "Sink",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Sink"
  },
  {
    "label": "OnData()",
    "kind": "Method",
    "detail": "Function (# ifndef MEDIA_BASE_AUDIO_SOURCE_H_ # define MEDIA_BASE_AUDIO_SOURCE_H_ # include<cstddef> # include \" absl / types / optional . h \" namespace cricket { class AudioSource { public : class Sink { public : void)",
    "insertText": "OnData(const void* audio_data, int bits_per_sample, int sample_rate, size_t number_of_channels, size_t number_of_frames, absl::optional<int64_t> absolute_capture_timestamp_ms)"
  },
  {
    "label": "OnClose()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnClose()"
  },
  {
    "label": "NumPreferredChannels()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "NumPreferredChannels()"
  },
  {
    "label": "Sink()",
    "kind": "Method",
    "detail": "Function (protected : ~)",
    "insertText": "Sink()"
  },
  {
    "label": "SetSink()",
    "kind": "Method",
    "detail": "Function (} } ; void)",
    "insertText": "SetSink(Sink* sink)"
  },
  {
    "label": "AudioSource()",
    "kind": "Method",
    "detail": "Function (protected : ~)",
    "insertText": "AudioSource()"
  }
]