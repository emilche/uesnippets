[
  {
    "label": "IAnalyticsProvider",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IAnalyticsProvider"
  },
  {
    "label": "FBuildPatchServicesModule",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBuildPatchServicesModule"
  },
  {
    "label": "StartupModule()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Misc / Guid . h \" # include \" Installer / BuildInstallStreamer . h \" # include \" Interfaces / IBuildPatchServicesModule . h \" # include \" BuildPatchInstaller . h \" # include \" Containers / Ticker . h \" class IAnalyticsProvider ; enum { FileBufferSize = 1 0 2 4* 1 0 2 4* 4,StreamBufferSize = FileBufferSize* 4,} ; PRAGMA_DISABLE_DEPRECATION_WARNINGS class FBuildPatchServicesModule : public IBuildPatchServicesModule { public : void)",
    "insertText": "StartupModule()"
  },
  {
    "label": "ShutdownModule()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ShutdownModule()"
  },
  {
    "label": "CreateBuildInstallStreamer()",
    "kind": "Method",
    "detail": "Function (IBuildInstallStreamerRef)",
    "insertText": "CreateBuildInstallStreamer(BuildPatchServices::FBuildInstallStreamerConfiguration Configuration)"
  },
  {
    "label": "CreateBuildInstaller()",
    "kind": "Method",
    "detail": "Function (IBuildInstallerRef)",
    "insertText": "CreateBuildInstaller(BuildPatchServices::FBuildInstallerConfiguration Configuration, FBuildPatchInstallerDelegate OnComplete)"
  },
  {
    "label": "CreateBuildInstallerSharedContext()",
    "kind": "Method",
    "detail": "Function (IBuildInstallerSharedContextRef)",
    "insertText": "CreateBuildInstallerSharedContext(const TCHAR* DebugName)"
  },
  {
    "label": "CreateBuildStatistics()",
    "kind": "Method",
    "detail": "Function (BuildPatchServices::IBuildStatisticsRef)",
    "insertText": "CreateBuildStatistics(const IBuildInstallerRef& Installer)"
  },
  {
    "label": "CreatePatchDataEnumeration()",
    "kind": "Method",
    "detail": "Function (BuildPatchServices::IPatchDataEnumerationRef)",
    "insertText": "CreatePatchDataEnumeration(BuildPatchServices::FPatchDataEnumerationConfiguration Configuration)"
  },
  {
    "label": "LoadManifestFromFile()",
    "kind": "Method",
    "detail": "Function (IBuildManifestPtr)",
    "insertText": "LoadManifestFromFile(const FString& Filename)"
  },
  {
    "label": "MakeManifestFromData()",
    "kind": "Method",
    "detail": "Function (IBuildManifestPtr)",
    "insertText": "MakeManifestFromData(const TArray<uint8>& ManifestData)"
  },
  {
    "label": "SaveManifestToFile()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SaveManifestToFile(const FString& Filename, IBuildManifestRef Manifest)"
  },
  {
    "label": "GetInstalledPrereqIds()",
    "kind": "Method",
    "detail": "Function (TSet<FString>)",
    "insertText": "GetInstalledPrereqIds()"
  },
  {
    "label": "GetInstallers()",
    "kind": "Method",
    "detail": "Function (const TArray<IBuildInstallerRef>&)",
    "insertText": "GetInstallers()"
  },
  {
    "label": "SetStagingDirectory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetStagingDirectory(const FString& StagingDir)"
  },
  {
    "label": "SetCloudDirectory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCloudDirectory(FString CloudDir)"
  },
  {
    "label": "SetCloudDirectories()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCloudDirectories(TArray<FString> CloudDirs)"
  },
  {
    "label": "SetBackupDirectory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetBackupDirectory(const FString& BackupDir)"
  },
  {
    "label": "SetAnalyticsProvider()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAnalyticsProvider(TSharedPtr< IAnalyticsProvider > AnalyticsProvider)"
  },
  {
    "label": "RegisterAppInstallation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterAppInstallation(IBuildManifestRef AppManifest, const FString AppInstallDirectory)"
  },
  {
    "label": "UnregisterAppInstallation()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UnregisterAppInstallation(const FString AppInstallDirectory)"
  },
  {
    "label": "CancelAllInstallers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CancelAllInstallers(bool WaitForThreads)"
  },
  {
    "label": "ChunkBuildDirectory()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ChunkBuildDirectory(const BuildPatchServices::FChunkBuildConfiguration& Configuration)"
  },
  {
    "label": "OptimiseChunkDelta()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "OptimiseChunkDelta(const BuildPatchServices::FChunkDeltaOptimiserConfiguration& Configuration)"
  },
  {
    "label": "CompactifyCloudDirectory()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CompactifyCloudDirectory(const BuildPatchServices::FCompactifyConfiguration& Configuration)"
  },
  {
    "label": "EnumeratePatchData()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "EnumeratePatchData(const BuildPatchServices::FPatchDataEnumerationConfiguration& Configuration)"
  },
  {
    "label": "VerifyChunkData()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "VerifyChunkData(const FString& SearchPath, const FString& OutputFile)"
  },
  {
    "label": "PackageChunkData()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PackageChunkData(const BuildPatchServices::FPackageChunksConfiguration& Configuration)"
  },
  {
    "label": "MergeManifests()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "MergeManifests(const FString& ManifestFilePathA, const FString& ManifestFilePathB, const FString& ManifestFilePathC, const FString& NewVersionString, const FString& SelectionDetailFilePath)"
  },
  {
    "label": "DiffManifests()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DiffManifests(const BuildPatchServices::FDiffManifestsConfiguration& Configuration)"
  },
  {
    "label": "OnStartBuildInstall()",
    "kind": "Method",
    "detail": "Function (FSimpleEvent&)",
    "insertText": "OnStartBuildInstall()"
  },
  {
    "label": "MakeManifestFromJSON()",
    "kind": "Method",
    "detail": "Function (IBuildManifestPtr)",
    "insertText": "MakeManifestFromJSON(const FString& ManifestJSON)"
  },
  {
    "label": "GetStagingDirectory()",
    "kind": "Method",
    "detail": "Function (const FString&)",
    "insertText": "GetStagingDirectory()"
  },
  {
    "label": "GetCloudDirectory()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetCloudDirectory(int32 CloudIdx = 0)"
  },
  {
    "label": "GetCloudDirectories()",
    "kind": "Method",
    "detail": "Function (TArray<FString>)",
    "insertText": "GetCloudDirectories()"
  },
  {
    "label": "GetBackupDirectory()",
    "kind": "Method",
    "detail": "Function (const FString&)",
    "insertText": "GetBackupDirectory()"
  },
  {
    "label": "Tick()",
    "kind": "Method",
    "detail": "Function (private : bool)",
    "insertText": "Tick(float Delta)"
  },
  {
    "label": "PreExit()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PreExit()"
  },
  {
    "label": "FixupLegacyConfig()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FixupLegacyConfig()"
  },
  {
    "label": "NormalizeCloudPaths()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NormalizeCloudPaths(TArray<FString>& InOutCloudPaths)"
  }
]