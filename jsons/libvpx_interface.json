[
  {
    "label": "LibvpxInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "LibvpxInterface"
  },
  {
    "label": "LibvpxInterface()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_VIDEO_CODING_CODECS_INTERFACE_LIBVPX_INTERFACE_H_ # define MODULES_VIDEO_CODING_CODECS_INTERFACE_LIBVPX_INTERFACE_H_ # include<stdint . h> # include<memory> # include \" vpx / vp8cx . h \" # include \" vpx / vpx_codec . h \" # include \" vpx / vpx_encoder . h \" # include \" vpx / vpx_image . h \" namespace webrtc { class LibvpxInterface { public :)",
    "insertText": "LibvpxInterface()"
  },
  {
    "label": "img_alloc()",
    "kind": "Method",
    "detail": "Function (vpx_image_t*)",
    "insertText": "img_alloc(vpx_image_t* img, vpx_img_fmt_t fmt, unsigned int d_w, unsigned int d_h, unsigned int align)"
  },
  {
    "label": "img_wrap()",
    "kind": "Method",
    "detail": "Function (vpx_image_t*)",
    "insertText": "img_wrap(vpx_image_t* img, vpx_img_fmt_t fmt, unsigned int d_w, unsigned int d_h, unsigned int stride_align, unsigned char* img_data)"
  },
  {
    "label": "img_free()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "img_free(vpx_image_t* img)"
  },
  {
    "label": "codec_enc_config_set()",
    "kind": "Method",
    "detail": "Function (vpx_codec_err_t)",
    "insertText": "codec_enc_config_set(vpx_codec_ctx_t* ctx, const vpx_codec_enc_cfg_t* cfg)"
  },
  {
    "label": "codec_enc_config_default()",
    "kind": "Method",
    "detail": "Function (vpx_codec_err_t)",
    "insertText": "codec_enc_config_default(vpx_codec_iface_t* iface, vpx_codec_enc_cfg_t* cfg, unsigned int usage)"
  },
  {
    "label": "codec_enc_init()",
    "kind": "Method",
    "detail": "Function (vpx_codec_err_t)",
    "insertText": "codec_enc_init(vpx_codec_ctx_t* ctx, vpx_codec_iface_t* iface, const vpx_codec_enc_cfg_t* cfg, vpx_codec_flags_t flags)"
  },
  {
    "label": "codec_enc_init_multi()",
    "kind": "Method",
    "detail": "Function (vpx_codec_err_t)",
    "insertText": "codec_enc_init_multi(vpx_codec_ctx_t* ctx, vpx_codec_iface_t* iface, vpx_codec_enc_cfg_t* cfg, int num_enc, vpx_codec_flags_t flags, vpx_rational_t* dsf)"
  },
  {
    "label": "codec_destroy()",
    "kind": "Method",
    "detail": "Function (vpx_codec_err_t)",
    "insertText": "codec_destroy(vpx_codec_ctx_t* ctx)"
  },
  {
    "label": "codec_control()",
    "kind": "Method",
    "detail": "Function (vpx_codec_err_t)",
    "insertText": "codec_control(vpx_codec_ctx_t* ctx, vp8e_enc_control_id ctrl_id, uint32_t param)"
  },
  {
    "label": "codec_control()",
    "kind": "Method",
    "detail": "Function (vpx_codec_err_t)",
    "insertText": "codec_control(vpx_codec_ctx_t* ctx, vp8e_enc_control_id ctrl_id, int param)"
  },
  {
    "label": "codec_control()",
    "kind": "Method",
    "detail": "Function (vpx_codec_err_t)",
    "insertText": "codec_control(vpx_codec_ctx_t* ctx, vp8e_enc_control_id ctrl_id, int* param)"
  },
  {
    "label": "codec_control()",
    "kind": "Method",
    "detail": "Function (vpx_codec_err_t)",
    "insertText": "codec_control(vpx_codec_ctx_t* ctx, vp8e_enc_control_id ctrl_id, vpx_roi_map* param)"
  },
  {
    "label": "codec_control()",
    "kind": "Method",
    "detail": "Function (vpx_codec_err_t)",
    "insertText": "codec_control(vpx_codec_ctx_t* ctx, vp8e_enc_control_id ctrl_id, vpx_active_map* param)"
  },
  {
    "label": "codec_control()",
    "kind": "Method",
    "detail": "Function (vpx_codec_err_t)",
    "insertText": "codec_control(vpx_codec_ctx_t* ctx, vp8e_enc_control_id ctrl_id, vpx_scaling_mode* param)"
  },
  {
    "label": "codec_control()",
    "kind": "Method",
    "detail": "Function (vpx_codec_err_t)",
    "insertText": "codec_control(vpx_codec_ctx_t* ctx, vp8e_enc_control_id ctrl_id, vpx_svc_extra_cfg_t* param)"
  },
  {
    "label": "codec_control()",
    "kind": "Method",
    "detail": "Function (vpx_codec_err_t)",
    "insertText": "codec_control(vpx_codec_ctx_t* ctx, vp8e_enc_control_id ctrl_id, vpx_svc_frame_drop_t* param)"
  },
  {
    "label": "codec_control()",
    "kind": "Method",
    "detail": "Function (vpx_codec_err_t)",
    "insertText": "codec_control(vpx_codec_ctx_t* ctx, vp8e_enc_control_id ctrl_id, void* param)"
  },
  {
    "label": "codec_control()",
    "kind": "Method",
    "detail": "Function (vpx_codec_err_t)",
    "insertText": "codec_control(vpx_codec_ctx_t* ctx, vp8e_enc_control_id ctrl_id, vpx_svc_layer_id_t* param)"
  },
  {
    "label": "codec_control()",
    "kind": "Method",
    "detail": "Function (vpx_codec_err_t)",
    "insertText": "codec_control(vpx_codec_ctx_t* ctx, vp8e_enc_control_id ctrl_id, vpx_svc_ref_frame_config_t* param)"
  },
  {
    "label": "codec_control()",
    "kind": "Method",
    "detail": "Function (vpx_codec_err_t)",
    "insertText": "codec_control(vpx_codec_ctx_t* ctx, vp8e_enc_control_id ctrl_id, vpx_svc_spatial_layer_sync_t* param)"
  },
  {
    "label": "codec_control()",
    "kind": "Method",
    "detail": "Function (vpx_codec_err_t)",
    "insertText": "codec_control(vpx_codec_ctx_t* ctx, vp8e_enc_control_id ctrl_id, vpx_rc_funcs_t* param)"
  },
  {
    "label": "codec_encode()",
    "kind": "Method",
    "detail": "Function (vpx_codec_err_t)",
    "insertText": "codec_encode(vpx_codec_ctx_t* ctx, const vpx_image_t* img, vpx_codec_pts_t pts, uint64_t duration, vpx_enc_frame_flags_t flags, uint64_t deadline)"
  },
  {
    "label": "codec_get_cx_data()",
    "kind": "Method",
    "detail": "Function (const vpx_codec_cx_pkt_t*)",
    "insertText": "codec_get_cx_data(vpx_codec_ctx_t* ctx, vpx_codec_iter_t* iter)"
  },
  {
    "label": "codec_error_detail()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "codec_error_detail(vpx_codec_ctx_t* ctx)"
  },
  {
    "label": "codec_error()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "codec_error(vpx_codec_ctx_t* ctx)"
  },
  {
    "label": "codec_err_to_string()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "codec_err_to_string(vpx_codec_err_t err)"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<LibvpxInterface>)",
    "insertText": "Create()"
  }
]