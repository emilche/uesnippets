[
  {
    "label": "FDebugDisplayInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDebugDisplayInfo"
  },
  {
    "label": "UInputComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UInputComponent"
  },
  {
    "label": "ULocalPlayer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULocalPlayer"
  },
  {
    "label": "FDelegateDispatchDetails",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDelegateDispatchDetails"
  },
  {
    "label": "FInputActionBinding",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInputActionBinding"
  },
  {
    "label": "FInputAxisBinding",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInputAxisBinding"
  },
  {
    "label": "FInputKeyBinding",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInputKeyBinding"
  },
  {
    "label": "FKeyBind",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FKeyBind"
  },
  {
    "label": "FInputAxisProperties",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInputAxisProperties"
  },
  {
    "label": "FInputAxisConfigEntry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInputAxisConfigEntry"
  },
  {
    "label": "FInputAxisProperties",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInputAxisProperties"
  },
  {
    "label": "FInputActionKeyMapping",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInputActionKeyMapping"
  },
  {
    "label": "FInputAxisKeyMapping",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInputAxisKeyMapping"
  },
  {
    "label": "FInputActionSpeechMapping",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInputActionSpeechMapping"
  },
  {
    "label": "FInputKeyParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInputKeyParams"
  },
  {
    "label": "EInputEvent",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EInputEvent"
  },
  {
    "label": "EInputEvent",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EInputEvent"
  },
  {
    "label": "EInputEvent",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EInputEvent"
  },
  {
    "label": "UPlayerInput",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPlayerInput"
  },
  {
    "label": "or",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "or"
  },
  {
    "label": "FKeyBind",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FKeyBind"
  },
  {
    "label": "FInputAxisConfigEntry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInputAxisConfigEntry"
  },
  {
    "label": "FInputActionKeyMapping",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInputActionKeyMapping"
  },
  {
    "label": "FInputAxisKeyMapping",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInputAxisKeyMapping"
  },
  {
    "label": "that",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "that"
  },
  {
    "label": "FActionKeyDetails",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FActionKeyDetails"
  },
  {
    "label": "that",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "that"
  },
  {
    "label": "FAxisKeyDetails",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAxisKeyDetails"
  },
  {
    "label": "UCanvas",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UCanvas"
  },
  {
    "label": "FOutputDevice",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FOutputDevice"
  },
  {
    "label": "FDelegateDispatchDetails",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDelegateDispatchDetails"
  },
  {
    "label": "FDelegateDispatchDetails",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDelegateDispatchDetails"
  },
  {
    "label": "UEnhancedPlayerInput",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEnhancedPlayerInput"
  },
  {
    "label": "DECLARE_LOG_CATEGORY_EXTERN()",
    "kind": "Method",
    "detail": "Function (ENGINE_API)",
    "insertText": "DECLARE_LOG_CATEGORY_EXTERN(LogPlayerInput, Log, All)"
  },
  {
    "label": "UPlayerInput()",
    "kind": "Method",
    "detail": "Function (ENGINE_API)",
    "insertText": "UPlayerInput()"
  },
  {
    "label": "GetAxisProperties()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetAxisProperties(const FKey AxisKey, FInputAxisProperties& AxisProperties)"
  },
  {
    "label": "SetAxisProperties()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAxisProperties(const FKey AxisKey, const FInputAxisProperties& AxisProperties)"
  },
  {
    "label": "SetMouseSensitivity()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetMouseSensitivity(const float SensitivityX, const float SensitivityY)"
  },
  {
    "label": "SetBind()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetBind(FName BindName, const FString& Command)"
  },
  {
    "label": "GetMouseSensitivityX()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetMouseSensitivityX()"
  },
  {
    "label": "GetMouseSensitivityY()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetMouseSensitivityY()"
  },
  {
    "label": "GetInvertAxisKey()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetInvertAxisKey(const FKey AxisKey)"
  },
  {
    "label": "GetInvertAxis()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetInvertAxis(const FName AxisName)"
  },
  {
    "label": "InvertAxisKey()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InvertAxisKey(const FKey AxisKey)"
  },
  {
    "label": "InvertAxis()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InvertAxis(const FName AxisName)"
  },
  {
    "label": "ClearSmoothing()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearSmoothing()"
  },
  {
    "label": "AddActionMapping()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddActionMapping(const FInputActionKeyMapping& KeyMapping)"
  },
  {
    "label": "RemoveActionMapping()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveActionMapping(const FInputActionKeyMapping& KeyMapping)"
  },
  {
    "label": "AddAxisMapping()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddAxisMapping(const FInputAxisKeyMapping& KeyMapping)"
  },
  {
    "label": "RemoveAxisMapping()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveAxisMapping(const FInputAxisKeyMapping& KeyMapping)"
  },
  {
    "label": "AddEngineDefinedActionMapping()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddEngineDefinedActionMapping(const FInputActionKeyMapping& ActionMapping)"
  },
  {
    "label": "AddEngineDefinedAxisMapping()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddEngineDefinedAxisMapping(const FInputAxisKeyMapping& AxisMapping)"
  },
  {
    "label": "ForceRebuildingKeyMaps()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ForceRebuildingKeyMaps(const bool bRestoreDefaults = false)"
  },
  {
    "label": "FlushPressedKeys()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FlushPressedKeys()"
  },
  {
    "label": "FlushPressedActionBindingKeys()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FlushPressedActionBindingKeys(FName ActionName)"
  },
  {
    "label": "InputKey()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "InputKey(const FInputKeyParams& Params)"
  },
  {
    "label": "InputTouch()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "InputTouch(uint32 Handle, ETouchType::Type Type, const FVector2D& TouchLocation, float Force, FDateTime DeviceTimestamp, uint32 TouchpadIndex)"
  },
  {
    "label": "InputMotion()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "InputMotion(const FVector& Tilt, const FVector& RotationRate, const FVector& Gravity, const FVector& Acceleration)"
  },
  {
    "label": "InputGesture()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "InputGesture(const FKey Gesture, const EInputEvent Event, const float Value)"
  },
  {
    "label": "UpdatePinchStartDistance()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdatePinchStartDistance()"
  },
  {
    "label": "Tick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Tick(float DeltaTime)"
  },
  {
    "label": "ProcessInputStack()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessInputStack(const TArray<UInputComponent*>& InputComponentStack, const float DeltaTime, const bool bGamePaused)"
  },
  {
    "label": "EvaluateKeyMapState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EvaluateKeyMapState(const float DeltaTime, const bool bGamePaused, OUT TArray<TPair<FKey, FKeyState*>>& KeysWithEvents)"
  },
  {
    "label": "EvaluateInputDelegates()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EvaluateInputDelegates(const TArray<UInputComponent*>& InputComponentStack, const float DeltaTime, const bool bGamePaused, const TArray<TPair<FKey, FKeyState*>>& KeysWithEvents)"
  },
  {
    "label": "DiscardPlayerInput()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DiscardPlayerInput()"
  },
  {
    "label": "SmoothMouse()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "SmoothMouse(float aMouse, uint8& SampleCount, int32 Index)"
  },
  {
    "label": "DisplayDebug()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DisplayDebug(class UCanvas* Canvas, const FDebugDisplayInfo& DebugDisplay, float& YL, float& YPos)"
  },
  {
    "label": "Exec()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Exec(UWorld* UInWorld, const TCHAR* Cmd,FOutputDevice& Ar)"
  },
  {
    "label": "GetBind()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetBind(FKey Key)"
  },
  {
    "label": "GetExecBind()",
    "kind": "Method",
    "detail": "Function (FKeyBind)",
    "insertText": "GetExecBind(FString const& ExecCommand)"
  },
  {
    "label": "ExecInputCommands()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ExecInputCommands( UWorld* InWorld, const TCHAR* Cmd, class FOutputDevice& Ar)"
  },
  {
    "label": "MassageVectorAxisInput()",
    "kind": "Method",
    "detail": "Function (FVector)",
    "insertText": "MassageVectorAxisInput(FKey Key, FVector RawValue)"
  },
  {
    "label": "MassageAxisInput()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "MassageAxisInput(FKey Key, float RawValue)"
  },
  {
    "label": "ProcessNonAxesKeys()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessNonAxesKeys(FKey Inkey, FKeyState* KeyState)"
  },
  {
    "label": "FinishProcessingPlayerInput()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FinishProcessingPlayerInput()"
  },
  {
    "label": "GetChordsForAction()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetChordsForAction(const FInputActionBinding& ActionBinding, const bool bGamePaused, TArray<struct FDelegateDispatchDetails>& FoundChords, TArray<FKey>& KeysToConsume)"
  },
  {
    "label": "GetChordsForKeyMapping()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetChordsForKeyMapping(const FInputActionKeyMapping& KeyMapping, const FInputActionBinding& ActionBinding, const bool bGamePaused, TArray<FDelegateDispatchDetails>& FoundChords, TArray<FKey>& KeysToConsume, const FKeyState* KeyState = nullptr)"
  },
  {
    "label": "GetChordForKey()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetChordForKey(const FInputKeyBinding& KeyBinding, const bool bGamePaused, TArray<struct FDelegateDispatchDetails>& FoundChords, TArray<FKey>& KeysToConsume, const FKeyState* KeyState = nullptr)"
  },
  {
    "label": "ConsumeKey()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConsumeKey(FKey Key)"
  },
  {
    "label": "ConditionalInitAxisProperties()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConditionalInitAxisProperties()"
  }
]