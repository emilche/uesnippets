[
  {
    "label": "Default",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Default"
  },
  {
    "label": "AttributeTypeConversion",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "AttributeTypeConversion"
  },
  {
    "label": "AttributeTypeConversion",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "AttributeTypeConversion"
  },
  {
    "label": "MetadataStorage",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "MetadataStorage"
  },
  {
    "label": "MetadataStorage",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "MetadataStorage"
  },
  {
    "label": "appendAttribute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "appendAttribute(PointDataTreeT& tree,\n                            const Name& name,\n                            const NamePair& type,\n                            const Index strideOrTotalSize = 1,\n                            const bool constantStride = true,\n                            const Metadata* defaultValue = nullptr,\n                            const bool hidden = false,\n                            const bool transient = false)"
  },
  {
    "label": "dropAttributes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "dropAttributes( PointDataTreeT& tree,\n                            const std::vector<size_t>& indices)"
  },
  {
    "label": "dropAttributes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "dropAttributes( PointDataTreeT& tree,\n                            const std::vector<Name>& names)"
  },
  {
    "label": "dropAttribute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "dropAttribute(  PointDataTreeT& tree,\n                            const size_t& index)"
  },
  {
    "label": "dropAttribute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "dropAttribute(  PointDataTreeT& tree,\n                            const Name& name)"
  },
  {
    "label": "renameAttributes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "renameAttributes(PointDataTreeT& tree,\n                            const std::vector<Name>& oldNames,\n                            const std::vector<Name>& newNames)"
  },
  {
    "label": "renameAttribute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "renameAttribute(PointDataTreeT& tree,\n                            const Name& oldName,\n                            const Name& newName)"
  },
  {
    "label": "compactAttributes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "compactAttributes(PointDataTreeT& tree)"
  },
  {
    "label": "handle()",
    "kind": "Method",
    "detail": "Function (AttributeWriteHandle<ValueType>)",
    "insertText": "handle(array)"
  },
  {
    "label": "inserter()",
    "kind": "Method",
    "detail": "Function (StringMetaInserter)",
    "insertText": "inserter(metadata)"
  },
  {
    "label": "inserter()",
    "kind": "Method",
    "detail": "Function (StringMetaInserter)",
    "insertText": "inserter(metadata)"
  },
  {
    "label": "leafManager()",
    "kind": "Method",
    "detail": "Function (tree::LeafManager<PointDataTreeT>)",
    "insertText": "leafManager(tree)"
  },
  {
    "label": "leafManager()",
    "kind": "Method",
    "detail": "Function (tree::LeafManager<PointDataTreeT>)",
    "insertText": "leafManager(tree)"
  },
  {
    "label": "leafManager()",
    "kind": "Method",
    "detail": "Function (tree::LeafManager<PointDataTreeT>)",
    "insertText": "leafManager(tree)"
  },
  {
    "label": "leafManager()",
    "kind": "Method",
    "detail": "Function (tree::LeafManager<PointDataTreeT>)",
    "insertText": "leafManager(tree)"
  }
]