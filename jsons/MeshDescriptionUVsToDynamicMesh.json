[
  {
    "label": "FMeshDescription",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMeshDescription"
  },
  {
    "label": "FDynamicMesh3",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDynamicMesh3"
  },
  {
    "label": "FMeshDescriptionUVsToDynamicMesh",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMeshDescriptionUVsToDynamicMesh"
  },
  {
    "label": "GetNumUVLayers()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" GeometryBase . h \" # include \" HAL / Platform . h \" # include \" Templates / SharedPointer . h \" struct FMeshDescription ; namespace UE { namespace Geometry { class FDynamicMesh3 ; class FMeshDescriptionUVsToDynamicMesh { public : int32 UVLayerIndex = 0 ; double ScaleFactor = 1 0 0 0 ; int32)",
    "insertText": "GetNumUVLayers(const FMeshDescription* InputMeshDescription)"
  },
  {
    "label": "GetUVMesh()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FDynamicMesh3>)",
    "insertText": "GetUVMesh(const FMeshDescription* InputMeshDescription)"
  },
  {
    "label": "BakeBackUVsFromUVMesh()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BakeBackUVsFromUVMesh(const FDynamicMesh3* DynamicUVMesh, FMeshDescription* OutputMeshDescription)"
  }
]