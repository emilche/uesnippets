[
  {
    "label": "timespec",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "timespec"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# ifndef TIME_FN_H_MODULE_287987 # define TIME_FN_H_MODULE_287987 # if)",
    "insertText": "defined(__cplusplus)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# endif # include<sys / types . h> # if)",
    "insertText": "defined(_MSC_VER) # include <sys/utime.h> #else # include <utime.h> #endif #include <time.h> #if !defined (__VMS) && (defined (__cplusplus) || (defined (__STDC_VERSION__) && (__STDC_VERSION__ >= 199901L) ))"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# else typedef unsigned long long PTime ; # endif # if)",
    "insertText": "defined(_WIN32)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# define UTIL_TIME_INITIALIZER { { 0,0 } } # elif)",
    "insertText": "defined(__APPLE__) && defined(__MACH__)"
  },
  {
    "label": "elif()",
    "kind": "Method",
    "detail": "Function (# define UTIL_TIME_INITIALIZER 0 #)",
    "insertText": "elif(defined (__STDC_VERSION__) && (__STDC_VERSION__ >= 201112L) ) \\ && defined(TIME_UTC)"
  },
  {
    "label": "UTIL_getTime()",
    "kind": "Method",
    "detail": "Function (# define UTIL_TIME_INITIALIZER { 0,0 } # else typedef clock_t UTIL_time_t ; # define UTIL_TIME_INITIALIZER 0 # endif UTIL_time_t)",
    "insertText": "UTIL_getTime(void)"
  },
  {
    "label": "UTIL_getSpanTimeMicro()",
    "kind": "Method",
    "detail": "Function (PTime)",
    "insertText": "UTIL_getSpanTimeMicro(UTIL_time_t clockStart, UTIL_time_t clockEnd)"
  },
  {
    "label": "UTIL_getSpanTimeNano()",
    "kind": "Method",
    "detail": "Function (PTime)",
    "insertText": "UTIL_getSpanTimeNano(UTIL_time_t clockStart, UTIL_time_t clockEnd)"
  },
  {
    "label": "SEC_TO_MICRO()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "SEC_TO_MICRO((PTime)1000000) PTime UTIL_clockSpanMicro(UTIL_time_t clockStart)"
  },
  {
    "label": "UTIL_clockSpanNano()",
    "kind": "Method",
    "detail": "Function (PTime)",
    "insertText": "UTIL_clockSpanNano(UTIL_time_t clockStart)"
  },
  {
    "label": "UTIL_waitForNextTick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UTIL_waitForNextTick(void)"
  }
]