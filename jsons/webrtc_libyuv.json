[
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "RTC_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RTC_EXPORT"
  },
  {
    "label": "CalcBufferSize()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "CalcBufferSize(VideoType type, int width, int height)"
  },
  {
    "label": "ExtractBuffer()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ExtractBuffer(const rtc::scoped_refptr<I420BufferInterface>& input_frame,\n                  size_t size,\n                  uint8_t* buffer)"
  },
  {
    "label": "ExtractBuffer()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ExtractBuffer(const VideoFrame& input_frame, size_t size, uint8_t* buffer)"
  },
  {
    "label": "ConvertFromI420()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ConvertFromI420(const VideoFrame& src_frame,\n                    VideoType dst_video_type,\n                    int dst_sample_size,\n                    uint8_t* dst_frame)"
  },
  {
    "label": "ScaleVideoFrameBuffer()",
    "kind": "Method",
    "detail": "Function (rtc::scoped_refptr<I420BufferInterface>)",
    "insertText": "ScaleVideoFrameBuffer(\n    const I420BufferInterface& source,\n    int dst_width,\n    int dst_height)"
  },
  {
    "label": "I420SSE()",
    "kind": "Method",
    "detail": "Function (double)",
    "insertText": "I420SSE(const I420BufferInterface& ref_buffer,\n               const I420BufferInterface& test_buffer)"
  },
  {
    "label": "I420PSNR()",
    "kind": "Method",
    "detail": "Function (double)",
    "insertText": "I420PSNR(const VideoFrame* ref_frame, const VideoFrame* test_frame)"
  },
  {
    "label": "I420PSNR()",
    "kind": "Method",
    "detail": "Function (double)",
    "insertText": "I420PSNR(const I420BufferInterface& ref_buffer,\n                const I420BufferInterface& test_buffer)"
  },
  {
    "label": "I420WeightedPSNR()",
    "kind": "Method",
    "detail": "Function (double)",
    "insertText": "I420WeightedPSNR(const I420BufferInterface& ref_buffer,\n                        const I420BufferInterface& test_buffer)"
  },
  {
    "label": "I420SSIM()",
    "kind": "Method",
    "detail": "Function (double)",
    "insertText": "I420SSIM(const VideoFrame* ref_frame, const VideoFrame* test_frame)"
  },
  {
    "label": "I420SSIM()",
    "kind": "Method",
    "detail": "Function (double)",
    "insertText": "I420SSIM(const I420BufferInterface& ref_buffer,\n                const I420BufferInterface& test_buffer)"
  },
  {
    "label": "NV12Scale()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NV12Scale(uint8_t* tmp_buffer,\n               const uint8_t* src_y,\n               int src_stride_y,\n               const uint8_t* src_uv,\n               int src_stride_uv,\n               int src_width,\n               int src_height,\n               uint8_t* dst_y,\n               int dst_stride_y,\n               uint8_t* dst_uv,\n               int dst_stride_uv,\n               int dst_width,\n               int dst_height)"
  },
  {
    "label": "NV12ToI420Scaler()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "NV12ToI420Scaler()"
  },
  {
    "label": "NV12ToI420Scale()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NV12ToI420Scale(const uint8_t* src_y,\n                       int src_stride_y,\n                       const uint8_t* src_uv,\n                       int src_stride_uv,\n                       int src_width,\n                       int src_height,\n                       uint8_t* dst_y,\n                       int dst_stride_y,\n                       uint8_t* dst_u,\n                       int dst_stride_u,\n                       uint8_t* dst_v,\n                       int dst_stride_v,\n                       int dst_width,\n                       int dst_height)"
  },
  {
    "label": "ConvertVideoType()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ConvertVideoType(VideoType video_type)"
  }
]