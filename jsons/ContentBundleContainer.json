[
  {
    "label": "FContentBundleBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FContentBundleBase"
  },
  {
    "label": "FContentBundle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FContentBundle"
  },
  {
    "label": "FContentBundleEditor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FContentBundleEditor"
  },
  {
    "label": "FContentBundleClient",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FContentBundleClient"
  },
  {
    "label": "IWorldPartitionCookPackageContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IWorldPartitionCookPackageContext"
  },
  {
    "label": "UContentBundleDescriptor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UContentBundleDescriptor"
  },
  {
    "label": "FReferenceCollector",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FReferenceCollector"
  },
  {
    "label": "FContentBundleContainer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FContentBundleContainer"
  },
  {
    "label": "FContentBundleContainer()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / WeakObjectPtr . h \" # if WITH_EDITOR # include \" Misc / TVariant . h \" # endif class FContentBundleBase ; class FContentBundle ; class FContentBundleEditor ; class FContentBundleClient ; class IWorldPartitionCookPackageContext ; class UContentBundleDescriptor ; class FReferenceCollector ; class FContentBundleContainer { public :)",
    "insertText": "FContentBundleContainer(UWorld* WorldToInjectIn)"
  },
  {
    "label": "FContentBundleContainer()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FContentBundleContainer()"
  },
  {
    "label": "GetInjectedWorld()",
    "kind": "Method",
    "detail": "Function (UWorld*)",
    "insertText": "GetInjectedWorld()"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Initialize()"
  },
  {
    "label": "Deinitialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Deinitialize()"
  },
  {
    "label": "AddReferencedObjects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddReferencedObjects(FReferenceCollector& Collector)"
  },
  {
    "label": "GetNumContentBundles()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetNumContentBundles()"
  },
  {
    "label": "GetGameContentBundles()",
    "kind": "Method",
    "detail": "Function (const TArray<TUniquePtr<FContentBundle>>&)",
    "insertText": "GetGameContentBundles()"
  },
  {
    "label": "InjectContentBundle()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "InjectContentBundle(FContentBundleClient& ContentBundleClient)"
  },
  {
    "label": "RemoveContentBundle()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RemoveContentBundle(FContentBundleClient& ContentBundleClient)"
  },
  {
    "label": "GetEditorContentBundle()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR TSharedPtr<FContentBundleEditor>)",
    "insertText": "GetEditorContentBundle(const UContentBundleDescriptor* Descriptor)"
  },
  {
    "label": "GetEditorContentBundle()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FContentBundleEditor>)",
    "insertText": "GetEditorContentBundle(const FGuid& ContentBundleGuid)"
  },
  {
    "label": "GetEditorContentBundles()",
    "kind": "Method",
    "detail": "Function (const TArray<TSharedPtr<FContentBundleEditor>>&)",
    "insertText": "GetEditorContentBundles()"
  },
  {
    "label": "UseEditorContentBundle()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UseEditorContentBundle()"
  },
  {
    "label": "ForEachContentBundle()",
    "kind": "Method",
    "detail": "Function (# endif void)",
    "insertText": "ForEachContentBundle(TFunctionRef<void(FContentBundleBase*)> Func)"
  },
  {
    "label": "ForEachContentBundleBreakable()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ForEachContentBundleBreakable(TFunctionRef<bool(FContentBundleBase*)> Func)"
  },
  {
    "label": "GetContentBundle()",
    "kind": "Method",
    "detail": "Function (private : FContentBundleBase*)",
    "insertText": "GetContentBundle(const FContentBundleClient& ContentBundleClient)"
  },
  {
    "label": "RegisterContentBundleClientEvents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterContentBundleClientEvents()"
  },
  {
    "label": "UnregisterContentBundleClientEvents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterContentBundleClientEvents()"
  },
  {
    "label": "OnContentBundleClientRegistered()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnContentBundleClientRegistered(TSharedPtr<FContentBundleClient>& ContentBundleClient)"
  },
  {
    "label": "OnContentBundleClientUnregistered()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnContentBundleClientUnregistered(FContentBundleClient& ContentBundleClient)"
  },
  {
    "label": "OnContentBundleClientContentInjectionRequested()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnContentBundleClientContentInjectionRequested(FContentBundleClient& ContentBundleClient)"
  },
  {
    "label": "OnContentBundleClientContentRemovalRequested()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnContentBundleClientContentRemovalRequested(FContentBundleClient& ContentBundleClient)"
  },
  {
    "label": "InitializeContentBundle()",
    "kind": "Method",
    "detail": "Function (FContentBundleBase&)",
    "insertText": "InitializeContentBundle(TSharedPtr<FContentBundleClient>& ContentBundleClient)"
  },
  {
    "label": "DeinitializeContentBundle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeinitializeContentBundle(FContentBundleBase& ContentBundle)"
  },
  {
    "label": "InitializeContentBundlesForegisteredClients()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeContentBundlesForegisteredClients()"
  },
  {
    "label": "DeinitializeContentBundles()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeinitializeContentBundles()"
  },
  {
    "label": "InjectContentBundle()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "InjectContentBundle(FContentBundleBase& ContentBundle)"
  },
  {
    "label": "RemoveContentBundle()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RemoveContentBundle(FContentBundleBase& ContentBundle)"
  },
  {
    "label": "OnPreGenerateStreaming()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR void)",
    "insertText": "OnPreGenerateStreaming(TArray<FString>* OutPackageToGenerate)"
  },
  {
    "label": "OnBeginCook()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnBeginCook(IWorldPartitionCookPackageContext& CookContext)"
  },
  {
    "label": "OnEndCook()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnEndCook(IWorldPartitionCookPackageContext& CookContext)"
  }
]