[
  {
    "label": "MemoryAllocatorDump",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MemoryAllocatorDump"
  },
  {
    "label": "ProcessMemoryDump",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ProcessMemoryDump"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "BASE_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BASE_EXPORT"
  },
  {
    "label": "LockResult",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "LockResult"
  },
  {
    "label": "DiscardableSharedMemory()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "DiscardableSharedMemory(UnsafeSharedMemoryRegion region)"
  },
  {
    "label": "CreateAndMap()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CreateAndMap(size_t size)"
  },
  {
    "label": "Map()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Map(size_t size)"
  },
  {
    "label": "Unmap()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Unmap()"
  },
  {
    "label": "Lock()",
    "kind": "Method",
    "detail": "Function (LockResult)",
    "insertText": "Lock(size_t offset, size_t length)"
  },
  {
    "label": "Unlock()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Unlock(size_t offset, size_t length)"
  },
  {
    "label": "ReleaseMemoryIfPossible()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseMemoryIfPossible(size_t offset, size_t length)"
  },
  {
    "label": "Purge()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Purge(Time current_time)"
  },
  {
    "label": "Close()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Close()"
  },
  {
    "label": "IsAshmemDeviceSupportedForTesting()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsAshmemDeviceSupportedForTesting()"
  },
  {
    "label": "LockPages()",
    "kind": "Method",
    "detail": "Function (LockResult)",
    "insertText": "LockPages(const UnsafeSharedMemoryRegion& region,\n                              size_t offset,\n                              size_t length)"
  },
  {
    "label": "UnlockPages()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnlockPages(const UnsafeSharedMemoryRegion& region,\n                          size_t offset,\n                          size_t length)"
  }
]