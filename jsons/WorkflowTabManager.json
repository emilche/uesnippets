[
  {
    "label": "SMenuAnchor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SMenuAnchor"
  },
  {
    "label": "FGenericTabHistory",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGenericTabHistory"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "FWorkflowAllowedTabSet",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWorkflowAllowedTabSet"
  },
  {
    "label": "FWorkflowTabFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWorkflowTabFactory"
  },
  {
    "label": "FWorkflowTabFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWorkflowTabFactory"
  },
  {
    "label": "FWorkflowTabFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWorkflowTabFactory"
  },
  {
    "label": "FWorkflowTabFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWorkflowTabFactory"
  },
  {
    "label": "FDocumentTracker",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDocumentTracker"
  },
  {
    "label": "FTabInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTabInfo"
  },
  {
    "label": "FDocumentTracker",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDocumentTracker"
  },
  {
    "label": "FGenericTabHistory",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGenericTabHistory"
  },
  {
    "label": "FGenericTabHistory",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGenericTabHistory"
  },
  {
    "label": "FGenericTabHistory",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGenericTabHistory"
  },
  {
    "label": "SDockTab",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SDockTab"
  },
  {
    "label": "SDockTab",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SDockTab"
  },
  {
    "label": "FGenericTabHistory",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGenericTabHistory"
  },
  {
    "label": "FDocumentTracker",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDocumentTracker"
  },
  {
    "label": "FGenericTabHistory",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGenericTabHistory"
  },
  {
    "label": "FDocumentTabFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDocumentTabFactory"
  },
  {
    "label": "represents",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "represents"
  },
  {
    "label": "FDocumentTabFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDocumentTabFactory"
  },
  {
    "label": "FDocumentTracker",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDocumentTracker"
  },
  {
    "label": "FDocumentTabFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDocumentTabFactory"
  },
  {
    "label": "EOpenDocumentCause",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EOpenDocumentCause"
  },
  {
    "label": "FDocumentTabFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDocumentTabFactory"
  },
  {
    "label": "FTabInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTabInfo"
  },
  {
    "label": "RegisterFactory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterFactory(TSharedPtr<class FWorkflowTabFactory> Factory)"
  },
  {
    "label": "UnregisterFactory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterFactory(FName FactoryID)"
  },
  {
    "label": "MergeInSet()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MergeInSet(const FWorkflowAllowedTabSet& OtherSet)"
  },
  {
    "label": "Clear()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Clear()"
  },
  {
    "label": "CreateIterator()",
    "kind": "Method",
    "detail": "Function (TIterator)",
    "insertText": "CreateIterator()"
  },
  {
    "label": "FTabInfo()",
    "kind": "Method",
    "detail": "Function (UNREALED_API)",
    "insertText": "FTabInfo(const TSharedRef<SDockTab>& InTab, const TSharedPtr<FDocumentTabFactory>& InSpawner, const TSharedPtr<class FDocumentTracker>& InTracker)"
  },
  {
    "label": "PayloadMatches()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PayloadMatches(TSharedPtr<FTabPayload> A, TSharedPtr<FTabPayload> B)"
  },
  {
    "label": "AddTabHistory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddTabHistory(TSharedPtr< struct FGenericTabHistory > InHistoryNode, bool bInSaveHistory = true)"
  },
  {
    "label": "SetCurrentHistory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCurrentHistory(TSharedPtr<struct FGenericTabHistory> NewHistory, bool bInSaveHistory = true, bool bShouldRestore = true)"
  },
  {
    "label": "OnGoForwardInHistory()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnGoForwardInHistory()"
  },
  {
    "label": "OnGoBackInHistory()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnGoBackInHistory()"
  },
  {
    "label": "JumpToNearestValidHistoryData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "JumpToNearestValidHistoryData()"
  },
  {
    "label": "GoToHistoryIndex()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GoToHistoryIndex(int32 InHistoryIdx)"
  },
  {
    "label": "OnMouseDownHistory()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnMouseDownHistory( const FGeometry& MyGeometry, const FPointerEvent& MouseEvent, TWeakPtr< SMenuAnchor > InMenuAnchor )"
  },
  {
    "label": "DECLARE_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (FDocumentTracker)",
    "insertText": "DECLARE_DELEGATE_OneParam(FOnTabActivated, TSharedPtr<SDockTab>)"
  },
  {
    "label": "FDocumentTracker()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "FDocumentTracker(FName InDefaultDocumentId = \"Document\")"
  },
  {
    "label": "ClearDocumentFactories()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearDocumentFactories()"
  },
  {
    "label": "RegisterDocumentFactory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterDocumentFactory(TSharedPtr<class FDocumentTabFactory> Factory)"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Initialize(TSharedPtr<FAssetEditorToolkit> InHostingApp)"
  },
  {
    "label": "SetTabManager()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTabManager(const TSharedRef<FTabManager>& InTabManager)"
  },
  {
    "label": "OpenDocument()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<SDockTab>)",
    "insertText": "OpenDocument(TSharedPtr<FTabPayload> InPayload, EOpenDocumentCause InOpenCause)"
  },
  {
    "label": "CloseTab()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CloseTab(TSharedPtr<FTabPayload> Payload)"
  },
  {
    "label": "CleanInvalidTabs()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CleanInvalidTabs()"
  },
  {
    "label": "FindMatchingTabs()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FindMatchingTabs(TSharedPtr<FTabPayload> Payload, /*inout*/ TArray< TSharedPtr<SDockTab> >& Results)"
  },
  {
    "label": "FindAllTabsForFactory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FindAllTabsForFactory(const TWeakPtr<FDocumentTabFactory>& Factory, /*inout*/ TArray< TSharedPtr<SDockTab> >& Results)"
  },
  {
    "label": "SaveAllState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SaveAllState()"
  },
  {
    "label": "ReplacePayloadInTab()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReplacePayloadInTab(TSharedPtr<SDockTab> TargetTab, TSharedPtr<FTabPayload> NewPayload)"
  },
  {
    "label": "GetLastEditedTabInfo()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FTabInfo>)",
    "insertText": "GetLastEditedTabInfo()"
  },
  {
    "label": "OnActiveTabChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnActiveTabChanged(TSharedPtr<SDockTab> PreviouslyActive, TSharedPtr<SDockTab> NewlyActivated)"
  },
  {
    "label": "OnTabForegrounded()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnTabForegrounded(TSharedPtr<SDockTab> PreviouslyActive, TSharedPtr<SDockTab> NewlyActivated)"
  },
  {
    "label": "OnNavigateTab()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnNavigateTab(FDocumentTracker::EOpenDocumentCause InCause)"
  },
  {
    "label": "NavigateToTabHistory()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "NavigateToTabHistory(int32 InHistoryIdx)"
  },
  {
    "label": "GetCurrentTabHistory()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FGenericTabHistory>)",
    "insertText": "GetCurrentTabHistory()"
  },
  {
    "label": "NavigateCurrentTab()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<SDockTab>)",
    "insertText": "NavigateCurrentTab(TSharedPtr<FTabPayload> InPayload, EOpenDocumentCause InNavigateCause)"
  },
  {
    "label": "OpenNewTab()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<SDockTab>)",
    "insertText": "OpenNewTab(TSharedPtr<FGenericTabHistory> InTabHistory, EOpenDocumentCause InOpenCause)"
  }
]