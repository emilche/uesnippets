[
  {
    "label": "FGeometry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGeometry"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FOverscroll",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FOverscroll"
  },
  {
    "label": "FOverscroll()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" HAL / Platform . h \" # include \" Layout / Geometry . h \" struct FGeometry ; enum class EAllowOverscroll : uint8 { Yes,No } ; struct FOverscroll { public : float Looseness ; float OvershootLooseMax ; float OvershootBounceRate ;)",
    "insertText": "FOverscroll()"
  },
  {
    "label": "ScrollBy()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "ScrollBy(const FGeometry& AllottedGeometry, float LocalDeltaScroll)"
  },
  {
    "label": "GetOverscroll()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetOverscroll(const FGeometry& AllottedGeometry)"
  },
  {
    "label": "UpdateOverscroll()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateOverscroll(float InDeltaTime)"
  },
  {
    "label": "ShouldApplyOverscroll()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldApplyOverscroll(const bool bIsAtStartOfList, const bool bIsAtEndOfList, const float ScrollDelta)"
  },
  {
    "label": "ResetOverscroll()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetOverscroll()"
  }
]