[
  {
    "label": "ALEMBIC_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ALEMBIC_EXPORT"
  },
  {
    "label": "Sample",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Sample"
  },
  {
    "label": "set()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "set( const Sample &iSamp )"
  },
  {
    "label": "setFromPrevious()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setFromPrevious()"
  },
  {
    "label": "setTimeSampling()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setTimeSampling( uint32_t iIndex )"
  },
  {
    "label": "setTimeSampling()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setTimeSampling( AbcA::TimeSamplingPtr iTime )"
  },
  {
    "label": "getFaceSetNames()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "getFaceSetNames(std::vector <std::string> & oFaceSetNames)"
  },
  {
    "label": "getFaceSet()",
    "kind": "Method",
    "detail": "Function (OFaceSet)",
    "insertText": "getFaceSet( const std::string &iFaceSetName )"
  },
  {
    "label": "hasFaceSet()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "hasFaceSet( const std::string &iFaceSetName )"
  },
  {
    "label": "setUVSourceName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setUVSourceName(const std::string & iName)"
  },
  {
    "label": "init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "init( uint32_t iTsIdx, bool isSparse )"
  },
  {
    "label": "selectiveSet()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "selectiveSet( const Sample &iSamp )"
  },
  {
    "label": "createPositionsProperty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "createPositionsProperty()"
  },
  {
    "label": "createVelocitiesProperty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "createVelocitiesProperty()"
  },
  {
    "label": "createUVsProperty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "createUVsProperty( const Sample &iSamp )"
  },
  {
    "label": "createNormalsProperty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "createNormalsProperty( const Sample &iSamp )"
  }
]