[
  {
    "label": "FDragDropEvent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDragDropEvent"
  },
  {
    "label": "FFoliagePaletteItemModel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFoliagePaletteItemModel"
  },
  {
    "label": "FMenuBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMenuBuilder"
  },
  {
    "label": "FString",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FString"
  },
  {
    "label": "FUICommandList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FUICommandList"
  },
  {
    "label": "ITableRow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITableRow"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "UFoliageType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UFoliageType"
  },
  {
    "label": "FAssetData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAssetData"
  },
  {
    "label": "FGeometry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGeometry"
  },
  {
    "label": "FKeyEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FKeyEvent"
  },
  {
    "label": "FSlateBrush",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSlateBrush"
  },
  {
    "label": "TFunctionRef",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TFunctionRef"
  },
  {
    "label": "SListView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SListView"
  },
  {
    "label": "SFoliagePalette",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SFoliagePalette"
  },
  {
    "label": "SWidgetSwitcher",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidgetSwitcher"
  },
  {
    "label": "SPositiveActionButton",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SPositiveActionButton"
  },
  {
    "label": "SHeaderRow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SHeaderRow"
  },
  {
    "label": "IDetailsView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDetailsView"
  },
  {
    "label": "SSearchBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SSearchBox"
  },
  {
    "label": "FAssetThumbnailPool",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAssetThumbnailPool"
  },
  {
    "label": "ThumbnailSizeRange()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" Containers / BitArray . h \" # include \" Containers / Set . h \" # include \" Containers / SparseArray . h \" # include \" Delegates / Delegate . h \" # include \" FoliageEdMode . h \" # include \" Framework / Text / SlateHyperlinkRun . h \" # include \" HAL / Platform . h \" # include \" HAL / PlatformCrt . h \" # include \" Input / Reply . h \" # include \" Internationalization / Text . h \" # include \" Layout / Visibility . h \" # include \" Math / Interval . h \" # include \" Misc / Optional . h \" # include \" Misc / TextFilter . h \" # include \" Styling / SlateTypes . h \" # include \" Templates / SharedPointer . h \" # include \" Templates / TypeHash . h \" # include \" Templates / UnrealTemplate . h \" # include \" Types / SlateEnums . h \" # include \" UObject / NameTypes . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Widgets / SCompoundWidget . h \" # include \" Widgets / Views / SHeaderRow . h \" # include \" Widgets / Views / STableViewBase . h \" # include \" Widgets / Views / STileView . h \" # include \" Widgets / Views / STreeView . h \" class FDragDropEvent ; class FFoliagePaletteItemModel ; class FMenuBuilder ; class FString ; class FUICommandList ; class ITableRow ; class SWidget ; class UFoliageType ; struct FAssetData ; struct FGeometry ; struct FKeyEvent ; struct FSlateBrush ; template<FuncType> class TFunctionRef ; template<ItemType> class SListView ; typedef TSharedPtr<FFoliagePaletteItemModel> FFoliagePaletteItemModelPtr ; typedef STreeView<FFoliagePaletteItemModelPtr> SFoliageTypeTreeView ; typedef STileView<FFoliagePaletteItemModelPtr> SFoliageTypeTileView ; namespace FoliagePaletteConstants { const FInt32Interval)",
    "insertText": "ThumbnailSizeRange(32, 128)"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (} class SFoliagePalette : public SCompoundWidget { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SFoliagePalette)"
  },
  {
    "label": "SLATE_ARGUMENT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_ARGUMENT(FEdModeFoliage*, FoliageEdMode) SLATE_END_ARGS() void Construct(const FArguments& InArgs)"
  },
  {
    "label": "SFoliagePalette()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "SFoliagePalette()"
  },
  {
    "label": "OnKeyDown()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnKeyDown(const FGeometry& MyGeometry, const FKeyEvent& InKeyEvent)"
  },
  {
    "label": "UpdatePalette()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdatePalette(bool bRebuildItems = false)"
  },
  {
    "label": "RefreshPalette()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RefreshPalette()"
  },
  {
    "label": "UpdateThumbnailForType()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateThumbnailForType(UFoliageType* FoliageType)"
  },
  {
    "label": "AnySelectedTileHovered()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AnySelectedTileHovered()"
  },
  {
    "label": "ActivateAllSelectedTypes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ActivateAllSelectedTypes(bool bActivate)"
  },
  {
    "label": "IsActiveViewMode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsActiveViewMode(EFoliagePaletteViewMode::Type ViewMode)"
  },
  {
    "label": "ShouldShowTooltips()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldShowTooltips()"
  },
  {
    "label": "GetSearchText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetSearchText()"
  },
  {
    "label": "AddFoliageType()",
    "kind": "Method",
    "detail": "Function (UFoliageType*)",
    "insertText": "AddFoliageType(const FAssetData& AssetData, bool bPlaceholderAsset = false)"
  },
  {
    "label": "ReflectSelectionInPalette()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReflectSelectionInPalette()"
  },
  {
    "label": "AddFoliageTypePicker()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "AddFoliageTypePicker(const FAssetData& AssetData)"
  },
  {
    "label": "BindCommands()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BindCommands()"
  },
  {
    "label": "RefreshActivePaletteViewWidget()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RefreshActivePaletteViewWidget()"
  },
  {
    "label": "CreatePaletteViews()",
    "kind": "Method",
    "detail": "Function (TSharedRef<class SWidgetSwitcher>)",
    "insertText": "CreatePaletteViews()"
  },
  {
    "label": "GetPaletteItemFilterString()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetPaletteItemFilterString(FFoliagePaletteItemModelPtr PaletteItemModel, TArray<FString>& OutArray)"
  },
  {
    "label": "OnSearchTextChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSearchTextChanged(const FText& InFilterText)"
  },
  {
    "label": "GetAddFoliageTypePicker()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "GetAddFoliageTypePicker()"
  },
  {
    "label": "GetAddFoliageTypeButtonTextVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "GetAddFoliageTypeButtonTextVisibility()"
  },
  {
    "label": "GetState_AllMeshes()",
    "kind": "Method",
    "detail": "Function (ECheckBoxState)",
    "insertText": "GetState_AllMeshes()"
  },
  {
    "label": "OnCheckStateChanged_AllMeshes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnCheckStateChanged_AllMeshes(ECheckBoxState InState)"
  },
  {
    "label": "HandleOnToolChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleOnToolChanged()"
  },
  {
    "label": "OnExternalContentResolved()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnExternalContentResolved(const FGuid& Identifier, const FAssetData& PlaceholderAsset, const FAssetData& ResolvedAsset)"
  },
  {
    "label": "SetViewMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetViewMode(EFoliagePaletteViewMode::Type NewViewMode)"
  },
  {
    "label": "ToggleShowTooltips()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ToggleShowTooltips()"
  },
  {
    "label": "OnToggleViewModeClicked()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnToggleViewModeClicked()"
  },
  {
    "label": "GetActiveViewIndex()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetActiveViewIndex()"
  },
  {
    "label": "OnSelectionChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSelectionChanged(FFoliagePaletteItemModelPtr Item, ESelectInfo::Type SelectInfo)"
  },
  {
    "label": "OnItemDoubleClicked()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnItemDoubleClicked(FFoliagePaletteItemModelPtr Item)"
  },
  {
    "label": "GetViewOptionsMenuContent()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "GetViewOptionsMenuContent()"
  },
  {
    "label": "GetActiveViewWidget()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<SListView<FFoliagePaletteItemModelPtr>>)",
    "insertText": "GetActiveViewWidget()"
  },
  {
    "label": "GetDropFoliageHintVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "GetDropFoliageHintVisibility()"
  },
  {
    "label": "GetFoliageDropTargetVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "GetFoliageDropTargetVisibility()"
  },
  {
    "label": "HandleFoliageDropped()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "HandleFoliageDropped(const FGeometry& DropZoneGeometry, const FDragDropEvent& DragDropEvent)"
  },
  {
    "label": "OnIncludeNonFoliageActors()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "OnIncludeNonFoliageActors(bool bOnlyCurrentLevel)"
  },
  {
    "label": "OnExcludeFoliageActors()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnExcludeFoliageActors(bool bOnlyCurrentLevel)"
  },
  {
    "label": "ConstructFoliageTypeContextMenu()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<SWidget>)",
    "insertText": "ConstructFoliageTypeContextMenu()"
  },
  {
    "label": "OnSaveSelected()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSaveSelected()"
  },
  {
    "label": "OnCanSaveAnySelectedAssets()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "OnCanSaveAnySelectedAssets()"
  },
  {
    "label": "AreAnyNonAssetTypesSelected()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AreAnyNonAssetTypesSelected()"
  },
  {
    "label": "OnActivateFoliageTypes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnActivateFoliageTypes()"
  },
  {
    "label": "OnCanActivateFoliageTypes()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "OnCanActivateFoliageTypes()"
  },
  {
    "label": "OnDeactivateFoliageTypes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDeactivateFoliageTypes()"
  },
  {
    "label": "OnCanDeactivateFoliageTypes()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "OnCanDeactivateFoliageTypes()"
  },
  {
    "label": "FillReplaceFoliageTypeSubmenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FillReplaceFoliageTypeSubmenu(FMenuBuilder& MenuBuilder)"
  },
  {
    "label": "OnReplaceFoliageTypeSelected()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnReplaceFoliageTypeSelected(const struct FAssetData& AssetData)"
  },
  {
    "label": "OnRemoveFoliageType()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnRemoveFoliageType()"
  },
  {
    "label": "OnShowFoliageTypeInCB()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnShowFoliageTypeInCB()"
  },
  {
    "label": "OnSelectAllInstances()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSelectAllInstances()"
  },
  {
    "label": "OnDeselectAllInstances()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDeselectAllInstances()"
  },
  {
    "label": "OnSelectInvalidInstances()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSelectInvalidInstances()"
  },
  {
    "label": "ExecuteOnSelectedItemFoliageTypes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExecuteOnSelectedItemFoliageTypes(TFunctionRef<void(const TArray<const UFoliageType*>&)> ExecuteFunc)"
  },
  {
    "label": "CanSelectInstances()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanSelectInstances()"
  },
  {
    "label": "SelectFoliageTypesInPalette()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SelectFoliageTypesInPalette(const TArray<const UFoliageType*>& FoliageTypes)"
  },
  {
    "label": "GenerateTile()",
    "kind": "Method",
    "detail": "Function (private : TSharedRef<ITableRow>)",
    "insertText": "GenerateTile(FFoliagePaletteItemModelPtr Item, const TSharedRef<STableViewBase>& OwnerTable)"
  },
  {
    "label": "GetScaledThumbnailSize()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetScaledThumbnailSize()"
  },
  {
    "label": "GetThumbnailScale()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetThumbnailScale()"
  },
  {
    "label": "SetThumbnailScale()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetThumbnailScale(float InScale)"
  },
  {
    "label": "GetThumbnailScaleSliderEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetThumbnailScaleSliderEnabled()"
  },
  {
    "label": "TreeViewGenerateRow()",
    "kind": "Method",
    "detail": "Function (private : TSharedRef<ITableRow>)",
    "insertText": "TreeViewGenerateRow(FFoliagePaletteItemModelPtr Item, const TSharedRef<STableViewBase>& OwnerTable)"
  },
  {
    "label": "TreeViewGetChildren()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TreeViewGetChildren(FFoliagePaletteItemModelPtr Item, TArray<FFoliagePaletteItemModelPtr>& OutChildren)"
  },
  {
    "label": "GetMeshesHeaderText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetMeshesHeaderText()"
  },
  {
    "label": "GetMeshColumnSortMode()",
    "kind": "Method",
    "detail": "Function (EColumnSortMode::Type)",
    "insertText": "GetMeshColumnSortMode()"
  },
  {
    "label": "OnMeshesColumnSortModeChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnMeshesColumnSortModeChanged(EColumnSortPriority::Type InPriority, const FName& InColumnName, EColumnSortMode::Type InSortMode)"
  },
  {
    "label": "GetTotalInstanceCountTooltipText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetTotalInstanceCountTooltipText()"
  },
  {
    "label": "RefreshDetailsWidget()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "RefreshDetailsWidget()"
  },
  {
    "label": "GetIsPropertyEditingEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetIsPropertyEditingEnabled()"
  },
  {
    "label": "GetDetailsNameAreaText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetDetailsNameAreaText()"
  },
  {
    "label": "GetShowHideDetailsTooltipText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetShowHideDetailsTooltipText()"
  },
  {
    "label": "GetShowHideDetailsImage()",
    "kind": "Method",
    "detail": "Function (const FSlateBrush*)",
    "insertText": "GetShowHideDetailsImage()"
  },
  {
    "label": "OnShowHideDetailsClicked()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnShowHideDetailsClicked(const ECheckBoxState)"
  },
  {
    "label": "GetUneditableFoliageTypeWarningVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "GetUneditableFoliageTypeWarningVisibility()"
  },
  {
    "label": "OnEditFoliageTypeBlueprintHyperlinkClicked()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnEditFoliageTypeBlueprintHyperlinkClicked(const FSlateHyperlinkRun::FMetadata& Metadata)"
  },
  {
    "label": "UpdatePaletteItems()",
    "kind": "Method",
    "detail": "Function (private : EActiveTimerReturnType)",
    "insertText": "UpdatePaletteItems(double InCurrentTime, float InDeltaTime)"
  },
  {
    "label": "RefreshPaletteItems()",
    "kind": "Method",
    "detail": "Function (EActiveTimerReturnType)",
    "insertText": "RefreshPaletteItems(double InCurrentTime, float InDeltaTime)"
  }
]