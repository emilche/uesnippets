[
  {
    "label": "FText",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FText"
  },
  {
    "label": "UBlueprint",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBlueprint"
  },
  {
    "label": "UEdGraph",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEdGraph"
  },
  {
    "label": "FEdGraphSchemaAction",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FEdGraphSchemaAction"
  },
  {
    "label": "KISMET_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "KISMET_API"
  },
  {
    "label": "DRAG_DROP_OPERATOR_TYPE()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" BlueprintEditor . h \" # include \" Containers / UnrealString . h \" # include \" CoreMinimal . h \" # include \" Engine / Blueprint . h \" # include \" GraphEditorDragDropAction . h \" # include \" Input / DragAndDrop . h \" # include \" Input / Reply . h \" # include \" Templates / SharedPointer . h \" # include \" UObject / Class . h \" # include \" UObject / UnrealType . h \" class FText ; class UBlueprint ; class UEdGraph ; struct FEdGraphSchemaAction ; class FMyBlueprintItemDragDropAction : public FGraphSchemaActionDragDropAction { public :)",
    "insertText": "DRAG_DROP_OPERATOR_TYPE(FMyBlueprintItemDragDropAction, FGraphSchemaActionDragDropAction) virtual FReply DroppedOnAction(TSharedRef<FEdGraphSchemaAction> Action)"
  },
  {
    "label": "DroppedOnCategory()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "DroppedOnCategory(FText Category)"
  },
  {
    "label": "HoverTargetChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HoverTargetChanged()"
  },
  {
    "label": "SetAltDrag()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAltDrag(bool InIsAltDrag)"
  },
  {
    "label": "SetCtrlDrag()",
    "kind": "Method",
    "detail": "Function (bAltDrag = InIsAltDrag ; } void)",
    "insertText": "SetCtrlDrag(bool InIsCtrlDrag)"
  },
  {
    "label": "FMyBlueprintItemDragDropAction()",
    "kind": "Method",
    "detail": "Function (bControlDrag = InIsCtrlDrag ; } protected :)",
    "insertText": "FMyBlueprintItemDragDropAction()"
  },
  {
    "label": "GetSourceBlueprint()",
    "kind": "Method",
    "detail": "Function (UBlueprint*)",
    "insertText": "GetSourceBlueprint()"
  },
  {
    "label": "SetFeedbackMessageError()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetFeedbackMessageError(const FText& Message)"
  },
  {
    "label": "SetFeedbackMessageOK()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFeedbackMessageOK(const FText& Message)"
  }
]