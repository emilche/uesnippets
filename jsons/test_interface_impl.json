[
  {
    "label": "TestInterfaceImpl",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TestInterfaceImpl"
  },
  {
    "label": "TestInterfaceImpl()",
    "kind": "Method",
    "detail": "Function (# ifndef BASE_FUCHSIA_TEST_INTERFACE_IMPL_H_ # define BASE_FUCHSIA_TEST_INTERFACE_IMPL_H_ # include<lib / fidl / cpp / binding_set . h> # include<lib / zx / channel . h> # include \" base / testfidl / cpp / fidl . h \" namespace base { class TestInterfaceImpl : public testfidl::TestInterface { public :)",
    "insertText": "TestInterfaceImpl()"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Add(int32_t a, int32_t b, AddCallback callback)"
  },
  {
    "label": "bindings()",
    "kind": "Method",
    "detail": "Function (fidl::BindingSet<testfidl::TestInterface>*)",
    "insertText": "bindings()"
  }
]