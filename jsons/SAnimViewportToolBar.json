[
  {
    "label": "FMenuBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMenuBuilder"
  },
  {
    "label": "SComboButton",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SComboButton"
  },
  {
    "label": "IPreviewProfileController",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPreviewProfileController"
  },
  {
    "label": "SAnimViewportToolBar",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SAnimViewportToolBar"
  },
  {
    "label": "SAnimationEditorViewportTabBody",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SAnimationEditorViewportTabBody"
  },
  {
    "label": "SEditorViewport",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SEditorViewport"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" SViewportToolBar . h \" # include \" Layout / Visibility . h \" # include \" SAnimationEditorViewport . h \" # include \" SEditorViewport . h \" # include \" ScopedTransaction . h \" # include \" Styling / SlateColor . h \" # include \" Types / SlateEnums . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Widgets / SWidget . h \" class FMenuBuilder ; class SComboButton ; class IPreviewProfileController ; class SAnimViewportToolBar : public SViewportToolBar { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SAnimViewportToolBar ) : _PreviewProfileController(nullptr) , _ShowShowMenu(true) , _ShowCharacterMenu(true) , _ShowLODMenu(true) , _ShowPlaySpeedMenu(true) , _ShowPhysicsMenu(false)"
  },
  {
    "label": "SLATE_ARGUMENT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_ARGUMENT(TArray<TSharedPtr<FExtender>>, Extenders) SLATE_ARGUMENT(FName, ContextName) SLATE_ARGUMENT(TSharedPtr<IPreviewProfileController>, PreviewProfileController) SLATE_ARGUMENT(bool, ShowShowMenu) SLATE_ARGUMENT(bool, ShowCharacterMenu) SLATE_ARGUMENT(bool, ShowLODMenu) SLATE_ARGUMENT(bool, ShowPlaySpeedMenu) SLATE_ARGUMENT(bool, ShowFloorOptions) SLATE_ARGUMENT(bool, ShowTurnTable) SLATE_ARGUMENT(bool, ShowPhysicsMenu) SLATE_END_ARGS() void Construct(const FArguments& InArgs, TSharedPtr<class SAnimationEditorViewportTabBody> InViewport, TSharedPtr<class SEditorViewport> InRealViewport)"
  },
  {
    "label": "GetPinnedCommandList()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<IPinnedCommandList>)",
    "insertText": "GetPinnedCommandList()"
  },
  {
    "label": "GeneratePhysicsMenu()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "GeneratePhysicsMenu()"
  },
  {
    "label": "GenerateCharacterMenu()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "GenerateCharacterMenu()"
  },
  {
    "label": "GenerateShowMenu()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "GenerateShowMenu()"
  },
  {
    "label": "FillCharacterSceneMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FillCharacterSceneMenu(FMenuBuilder& MenuBuilder)"
  },
  {
    "label": "FillCharacterAdvancedMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FillCharacterAdvancedMenu(FMenuBuilder& MenuBuilder)"
  },
  {
    "label": "FillCharacterMirrorMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FillCharacterMirrorMenu(FMenuBuilder& MenuBuilder)"
  },
  {
    "label": "FillCharacterClothingMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FillCharacterClothingMenu(FMenuBuilder& MenuBuilder)"
  },
  {
    "label": "FillCharacterTimecodeMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FillCharacterTimecodeMenu(FMenuBuilder& MenuBuilder)"
  },
  {
    "label": "GenerateLODMenu()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "GenerateLODMenu()"
  },
  {
    "label": "GetLODMenuLabel()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetLODMenuLabel()"
  },
  {
    "label": "GenerateViewportTypeMenu()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "GenerateViewportTypeMenu()"
  },
  {
    "label": "GeneratePlaybackMenu()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "GeneratePlaybackMenu()"
  },
  {
    "label": "GenerateTurnTableMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GenerateTurnTableMenu(FMenuBuilder& MenuBuilder)"
  },
  {
    "label": "GetFontColor()",
    "kind": "Method",
    "detail": "Function (FSlateColor)",
    "insertText": "GetFontColor()"
  },
  {
    "label": "GetPlaybackMenuLabel()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetPlaybackMenuLabel()"
  },
  {
    "label": "GetCameraMenuLabel()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetCameraMenuLabel()"
  },
  {
    "label": "GetCameraMenuLabelIcon()",
    "kind": "Method",
    "detail": "Function (const FSlateBrush*)",
    "insertText": "GetCameraMenuLabelIcon()"
  },
  {
    "label": "OnGetFOVValue()",
    "kind": "Method",
    "detail": "Function (TOptional<float>)",
    "insertText": "OnGetFOVValue()"
  },
  {
    "label": "OnFOVValueChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnFOVValueChanged(float NewValue)"
  },
  {
    "label": "OnFOVValueCommitted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnFOVValueCommitted(float NewValue, ETextCommit::Type CommitInfo)"
  },
  {
    "label": "OnCamSpeedChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnCamSpeedChanged(int32 NewValue)"
  },
  {
    "label": "OnCamSpeedScalarChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnCamSpeedScalarChanged(float NewValue)"
  },
  {
    "label": "OnGetFloorOffset()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "OnGetFloorOffset()"
  },
  {
    "label": "OnBeginSliderMovementFloorOffset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnBeginSliderMovementFloorOffset()"
  },
  {
    "label": "OnFloorOffsetChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnFloorOffsetChanged(float NewValue)"
  },
  {
    "label": "OnFloorOffsetCommitted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnFloorOffsetCommitted(float NewValue, ETextCommit::Type CommitType)"
  },
  {
    "label": "OnMirrorDataTableSelected()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnMirrorDataTableSelected(const FAssetData& SelectedMirrorTableData)"
  },
  {
    "label": "GetTransformToolbarVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "GetTransformToolbarVisibility()"
  },
  {
    "label": "MakeFloorOffsetWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "MakeFloorOffsetWidget()"
  },
  {
    "label": "MakeFOVWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "MakeFOVWidget()"
  },
  {
    "label": "MakeFollowBoneWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "MakeFollowBoneWidget()"
  },
  {
    "label": "MakeFollowBoneWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "MakeFollowBoneWidget(TWeakPtr<SComboButton> InWeakComboButton)"
  },
  {
    "label": "MakeFollowBoneComboWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "MakeFollowBoneComboWidget()"
  },
  {
    "label": "AddMenuExtender()",
    "kind": "Method",
    "detail": "Function (public : void)",
    "insertText": "AddMenuExtender(FName MenuToExtend, FMenuExtensionDelegate MenuBuilderDelegate)"
  },
  {
    "label": "MakeViewportToolbar()",
    "kind": "Method",
    "detail": "Function (private : TSharedRef<SWidget>)",
    "insertText": "MakeViewportToolbar(TSharedPtr<class SEditorViewport> InRealViewport)"
  },
  {
    "label": "GetViewMenuExtender()",
    "kind": "Method",
    "detail": "Function (TSharedRef<FExtender>)",
    "insertText": "GetViewMenuExtender(TSharedPtr<class SEditorViewport> InRealViewport)"
  }
]