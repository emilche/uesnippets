[
  {
    "label": "ANIMATIONDATACONTROLLER_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ANIMATIONDATACONTROLLER_API"
  },
  {
    "label": "FAnimDataControllerTestBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAnimDataControllerTestBase"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" UObject / ObjectMacros . h \" # include \" Animation / AnimData / AnimDataModel . h \" # include \" Animation / AnimCurveTypes . h \" # include \" Algo / Transform . h \" # include \" Animation / AnimData / IAnimationDataController . h \" # if WITH_EDITOR # include \" ChangeTransactor . h \" # endif # include \" AnimDataController . generated . h \")",
    "insertText": "UCLASS(BlueprintType)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: UAnimDataController() #if WITH_EDITOR : BracketDepth(0)"
  },
  {
    "label": "SetModel()",
    "kind": "Method",
    "detail": "Function (} # if WITH_EDITOR void)",
    "insertText": "SetModel(TScriptInterface<IAnimationDataModel> InModel)"
  },
  {
    "label": "GetModelInterface()",
    "kind": "Method",
    "detail": "Function (TScriptInterface<IAnimationDataModel>)",
    "insertText": "GetModelInterface()"
  },
  {
    "label": "OpenBracket()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "OpenBracket(const FText& InTitle, bool bShouldTransact = true)"
  },
  {
    "label": "CloseBracket()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CloseBracket(bool bShouldTransact = true)"
  },
  {
    "label": "SetNumberOfFrames()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetNumberOfFrames(FFrameNumber Length, bool bShouldTransact = true)"
  },
  {
    "label": "ResizeNumberOfFrames()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResizeNumberOfFrames(FFrameNumber NewLength, FFrameNumber T0, FFrameNumber T1, bool bShouldTransact = true)"
  },
  {
    "label": "ResizeInFrames()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResizeInFrames(FFrameNumber Length, FFrameNumber T0, FFrameNumber T1, bool bShouldTransact = true)"
  },
  {
    "label": "SetFrameRate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFrameRate(FFrameRate FrameRate, bool bShouldTransact = true)"
  },
  {
    "label": "SetPlayLength()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPlayLength(float Length, bool bShouldTransact = true)"
  },
  {
    "label": "ResizePlayLength()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResizePlayLength(float NewLength, float T0, float T1, bool bShouldTransact = true)"
  },
  {
    "label": "Resize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Resize(float Length, float T0, float T1, bool bShouldTransact = true)"
  },
  {
    "label": "AddBoneCurve()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AddBoneCurve(FName BoneName, bool bShouldTransact = true)"
  },
  {
    "label": "InsertBoneTrack()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "InsertBoneTrack(FName BoneName, int32 DesiredIndex, bool bShouldTransact = true)"
  },
  {
    "label": "RemoveBoneTrack()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RemoveBoneTrack(FName BoneName, bool bShouldTransact = true)"
  },
  {
    "label": "RemoveAllBoneTracks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveAllBoneTracks(bool bShouldTransact = true)"
  },
  {
    "label": "SetBoneTrackKeys()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetBoneTrackKeys(FName BoneName, const TArray<FVector3f>& PositionalKeys, const TArray<FQuat4f>& RotationalKeys, const TArray<FVector3f>& ScalingKeys, bool bShouldTransact = true)"
  },
  {
    "label": "SetBoneTrackKeys()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetBoneTrackKeys(FName BoneName, const TArray<FVector>& PositionalKeys, const TArray<FQuat>& RotationalKeys, const TArray<FVector>& ScalingKeys, bool bShouldTransact = true)"
  },
  {
    "label": "UpdateBoneTrackKeys()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UpdateBoneTrackKeys(FName BoneName, const FInt32Range& KeyRangeToSet, const TArray<FVector3f>& PositionalKeys, const TArray<FQuat4f>& RotationalKeys, const TArray<FVector3f>& ScalingKeys, bool bShouldTransact = true)"
  },
  {
    "label": "UpdateBoneTrackKeys()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UpdateBoneTrackKeys(FName BoneName, const FInt32Range& KeyRangeToSet, const TArray<FVector>& PositionalKeys, const TArray<FQuat>& RotationalKeys, const TArray<FVector>& ScalingKeys, bool bShouldTransact = true)"
  },
  {
    "label": "AddCurve()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AddCurve(const FAnimationCurveIdentifier& CurveId, int32 CurveFlags = 0x00000004, bool bShouldTransact = true)"
  },
  {
    "label": "DuplicateCurve()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DuplicateCurve(const FAnimationCurveIdentifier& CopyCurveId, const FAnimationCurveIdentifier& NewCurveId, bool bShouldTransact = true)"
  },
  {
    "label": "RemoveCurve()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RemoveCurve(const FAnimationCurveIdentifier& CurveId, bool bShouldTransact = true)"
  },
  {
    "label": "RemoveAllCurvesOfType()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveAllCurvesOfType(ERawCurveTrackTypes SupportedCurveType, bool bShouldTransact = true)"
  },
  {
    "label": "SetCurveFlag()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetCurveFlag(const FAnimationCurveIdentifier& CurveId, EAnimAssetCurveFlags Flag, bool bState = true, bool bShouldTransact = true)"
  },
  {
    "label": "SetCurveFlags()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetCurveFlags(const FAnimationCurveIdentifier& CurveId, int32 Flags, bool bShouldTransact = true)"
  },
  {
    "label": "SetTransformCurveKeys()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetTransformCurveKeys(const FAnimationCurveIdentifier& CurveId, const TArray<FTransform>& TransformValues, const TArray<float>& TimeKeys, bool bShouldTransact = true)"
  },
  {
    "label": "SetTransformCurveKey()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetTransformCurveKey(const FAnimationCurveIdentifier& CurveId, float Time, const FTransform& Value, bool bShouldTransact = true)"
  },
  {
    "label": "RemoveTransformCurveKey()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RemoveTransformCurveKey(const FAnimationCurveIdentifier& CurveId, float Time, bool bShouldTransact = true)"
  },
  {
    "label": "RenameCurve()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RenameCurve(const FAnimationCurveIdentifier& CurveToRenameId, const FAnimationCurveIdentifier& NewCurveId, bool bShouldTransact = true)"
  },
  {
    "label": "SetCurveColor()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetCurveColor(const FAnimationCurveIdentifier& CurveId, FLinearColor Color, bool bShouldTransact = true)"
  },
  {
    "label": "SetCurveComment()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetCurveComment(const FAnimationCurveIdentifier& CurveId, const FString& Comment, bool bShouldTransact = true)"
  },
  {
    "label": "ScaleCurve()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ScaleCurve(const FAnimationCurveIdentifier& CurveId, float Origin, float Factor, bool bShouldTransact = true)"
  },
  {
    "label": "SetCurveKey()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetCurveKey(const FAnimationCurveIdentifier& CurveId, const FRichCurveKey& Key, bool bShouldTransact = true)"
  },
  {
    "label": "RemoveCurveKey()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RemoveCurveKey(const FAnimationCurveIdentifier& CurveId, float Time, bool bShouldTransact = true)"
  },
  {
    "label": "SetCurveKeys()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetCurveKeys(const FAnimationCurveIdentifier& CurveId, const TArray<FRichCurveKey>& CurveKeys, bool bShouldTransact = true)"
  },
  {
    "label": "SetCurveAttributes()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetCurveAttributes(const FAnimationCurveIdentifier& CurveId, const FCurveAttributes& Attributes, bool bShouldTransact = true)"
  },
  {
    "label": "RemoveBoneTracksMissingFromSkeleton()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RemoveBoneTracksMissingFromSkeleton(const USkeleton* Skeleton, bool bShouldTransact = true)"
  },
  {
    "label": "UpdateAttributesFromSkeleton()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateAttributesFromSkeleton(const USkeleton* Skeleton, bool bShouldTransact = true)"
  },
  {
    "label": "NotifyPopulated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyPopulated()"
  },
  {
    "label": "ResetModel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetModel(bool bShouldTransact = true)"
  },
  {
    "label": "AddAttribute()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AddAttribute(const FAnimationAttributeIdentifier& AttributeIdentifier, bool bShouldTransact = true)"
  },
  {
    "label": "RemoveAttribute()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RemoveAttribute(const FAnimationAttributeIdentifier& AttributeIdentifier, bool bShouldTransact = true)"
  },
  {
    "label": "RemoveAllAttributesForBone()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "RemoveAllAttributesForBone(const FName& BoneName, bool bShouldTransact = true)"
  },
  {
    "label": "RemoveAllAttributes()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "RemoveAllAttributes(bool bShouldTransact = true)"
  },
  {
    "label": "SetAttributeKey()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetAttributeKey(const FAnimationAttributeIdentifier& AttributeIdentifier, float Time, const void* KeyValue, const UScriptStruct* TypeStruct, bool bShouldTransact = true)"
  },
  {
    "label": "SetAttributeKeys()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "SetAttributeKeys(const FAnimationAttributeIdentifier& AttributeIdentifier, TArrayView<const float> Times, TArrayView<const void*> KeyValues, const UScriptStruct* TypeStruct, bool bShouldTransact = true)"
  },
  {
    "label": "RemoveAttributeKey()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "RemoveAttributeKey(const FAnimationAttributeIdentifier& AttributeIdentifier, float Time, bool bShouldTransact = true)"
  },
  {
    "label": "DuplicateAttribute()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DuplicateAttribute(const FAnimationAttributeIdentifier& AttributeIdentifier, const FAnimationAttributeIdentifier& NewAttributeIdentifier, bool bShouldTransact = true)"
  },
  {
    "label": "UpdateWithSkeleton()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateWithSkeleton(USkeleton* TargetSkeleton, bool bShouldTransact = true)"
  },
  {
    "label": "PopulateWithExistingModel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PopulateWithExistingModel(TScriptInterface<IAnimationDataModel> InModel)"
  },
  {
    "label": "InitializeModel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeModel()"
  },
  {
    "label": "NotifyBracketOpen()",
    "kind": "Method",
    "detail": "Function (} protected : void)",
    "insertText": "NotifyBracketOpen()"
  },
  {
    "label": "NotifyBracketClosed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyBracketClosed()"
  },
  {
    "label": "SetAttributeKey_Internal()",
    "kind": "Method",
    "detail": "Function (private : bool)",
    "insertText": "SetAttributeKey_Internal(const FAnimationAttributeIdentifier& AttributeIdentifier, float Time, const void* KeyValue, const UScriptStruct* TypeStruct, bool bShouldTransact = true)"
  },
  {
    "label": "SetAttributeKeys_Internal()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetAttributeKeys_Internal(const FAnimationAttributeIdentifier& AttributeIdentifier, TArrayView<const float> Times, TArrayView<const void*> KeyValues, const UScriptStruct* TypeStruct, bool bShouldTransact = true)"
  },
  {
    "label": "ResizeCurves()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResizeCurves(float NewLength, bool bInserted, float T0, float T1, bool bShouldTransact = true)"
  },
  {
    "label": "ResizeAttributes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResizeAttributes(float NewLength, bool bInserted, float T0, float T1, bool bShouldTransact = true)"
  }
]