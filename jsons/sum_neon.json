[
  {
    "label": "horizontal_add_int16x8()",
    "kind": "Method",
    "detail": "Function (# ifndef VPX_VPX_DSP_ARM_SUM_NEON_H_ # define VPX_VPX_DSP_ARM_SUM_NEON_H_ # include<arm_neon . h> # include \" . / vpx_config . h \" # include \" vpx / vpx_integer . h \" int32_t)",
    "insertText": "horizontal_add_int16x8(const int16x8_t a)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# if)",
    "insertText": "defined(__aarch64__) return vaddlvq_s16(a)"
  },
  {
    "label": "vpaddlq_s16()",
    "kind": "Method",
    "detail": "Function (# else const int32x4_t b =)",
    "insertText": "vpaddlq_s16(a)"
  },
  {
    "label": "vpaddlq_s32()",
    "kind": "Method",
    "detail": "Function (const int64x2_t c =)",
    "insertText": "vpaddlq_s32(b)"
  },
  {
    "label": "vadd_s32()",
    "kind": "Method",
    "detail": "Function (const int32x2_t d =)",
    "insertText": "vadd_s32(vreinterpret_s32_s64(vget_low_s64(c)), vreinterpret_s32_s64(vget_high_s64(c)))"
  },
  {
    "label": "horizontal_add_uint16x8()",
    "kind": "Method",
    "detail": "Function (# endif } uint32_t)",
    "insertText": "horizontal_add_uint16x8(const uint16x8_t a)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# if)",
    "insertText": "defined(__aarch64__) return vaddlvq_u16(a)"
  },
  {
    "label": "vpaddlq_u16()",
    "kind": "Method",
    "detail": "Function (# else const uint32x4_t b =)",
    "insertText": "vpaddlq_u16(a)"
  },
  {
    "label": "vpaddlq_u32()",
    "kind": "Method",
    "detail": "Function (const uint64x2_t c =)",
    "insertText": "vpaddlq_u32(b)"
  },
  {
    "label": "vadd_u32()",
    "kind": "Method",
    "detail": "Function (const uint32x2_t d =)",
    "insertText": "vadd_u32(vreinterpret_u32_u64(vget_low_u64(c)), vreinterpret_u32_u64(vget_high_u64(c)))"
  },
  {
    "label": "horizontal_add_int32x2()",
    "kind": "Method",
    "detail": "Function (# endif } int32_t)",
    "insertText": "horizontal_add_int32x2(const int32x2_t a)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# if)",
    "insertText": "defined(__aarch64__) return vaddv_s32(a)"
  },
  {
    "label": "vget_lane_s32()",
    "kind": "Method",
    "detail": "Function (# else return)",
    "insertText": "vget_lane_s32(a, 0) + vget_lane_s32(a, 1)"
  },
  {
    "label": "horizontal_add_uint32x2()",
    "kind": "Method",
    "detail": "Function (# endif } uint32_t)",
    "insertText": "horizontal_add_uint32x2(const uint32x2_t a)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# if)",
    "insertText": "defined(__aarch64__) return vaddv_u32(a)"
  },
  {
    "label": "vget_lane_u32()",
    "kind": "Method",
    "detail": "Function (# else return)",
    "insertText": "vget_lane_u32(a, 0) + vget_lane_u32(a, 1)"
  },
  {
    "label": "horizontal_add_int32x4()",
    "kind": "Method",
    "detail": "Function (# endif } int32_t)",
    "insertText": "horizontal_add_int32x4(const int32x4_t a)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# if)",
    "insertText": "defined(__aarch64__) return vaddvq_s32(a)"
  },
  {
    "label": "vpaddlq_s32()",
    "kind": "Method",
    "detail": "Function (# else const int64x2_t b =)",
    "insertText": "vpaddlq_s32(a)"
  },
  {
    "label": "vadd_s32()",
    "kind": "Method",
    "detail": "Function (const int32x2_t c =)",
    "insertText": "vadd_s32(vreinterpret_s32_s64(vget_low_s64(b)), vreinterpret_s32_s64(vget_high_s64(b)))"
  },
  {
    "label": "horizontal_add_uint32x4()",
    "kind": "Method",
    "detail": "Function (# endif } uint32_t)",
    "insertText": "horizontal_add_uint32x4(const uint32x4_t a)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# if)",
    "insertText": "defined(__aarch64__) return vaddvq_u32(a)"
  },
  {
    "label": "vpaddlq_u32()",
    "kind": "Method",
    "detail": "Function (# else const uint64x2_t b =)",
    "insertText": "vpaddlq_u32(a)"
  },
  {
    "label": "vadd_u32()",
    "kind": "Method",
    "detail": "Function (const uint32x2_t c =)",
    "insertText": "vadd_u32(vreinterpret_u32_u64(vget_low_u64(b)), vreinterpret_u32_u64(vget_high_u64(b)))"
  }
]