[
  {
    "label": "IDxcVersionInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IDxcVersionInfo"
  },
  {
    "label": "IStream",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IStream"
  },
  {
    "label": "DxilPipelineStateValidation",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DxilPipelineStateValidation"
  },
  {
    "label": "Module",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Module"
  },
  {
    "label": "AbstractMemoryStream",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AbstractMemoryStream"
  },
  {
    "label": "DxilModule",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DxilModule"
  },
  {
    "label": "RootSignatureHandle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RootSignatureHandle"
  },
  {
    "label": "ShaderModel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ShaderModel"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "DxilPartWriter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DxilPartWriter"
  },
  {
    "label": "DxilContainerWriter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DxilContainerWriter"
  },
  {
    "label": "DxilPartWriter()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" dxc / DxilContainer / DxilContainer . h \" # include \" llvm / ADT / StringRef . h \" # include<functional> struct IDxcVersionInfo ; struct IStream ; class DxilPipelineStateValidation ; namespace llvm { class Module ; } namespace hlsl { class AbstractMemoryStream ; class DxilModule ; class RootSignatureHandle ; class ShaderModel ; namespace DXIL { enum class SignatureKind ; } class DxilPartWriter { public : ~)",
    "insertText": "DxilPartWriter()"
  },
  {
    "label": "size()",
    "kind": "Method",
    "detail": "Function (} uint32_t)",
    "insertText": "size()"
  },
  {
    "label": "write()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "write(AbstractMemoryStream *pStream)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (} ; class DxilContainerWriter : public DxilPartWriter { public : typedef std::function<)",
    "insertText": "void(AbstractMemoryStream *)"
  },
  {
    "label": "DxilContainerWriter()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "DxilContainerWriter()"
  },
  {
    "label": "AddPart()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "AddPart(uint32_t FourCC, uint32_t Size, WriteFn Write)"
  },
  {
    "label": "NewProgramSignatureWriter()",
    "kind": "Method",
    "detail": "Function (} ; DxilPartWriter*)",
    "insertText": "NewProgramSignatureWriter(const DxilModule &M, DXIL::SignatureKind Kind)"
  },
  {
    "label": "NewRootSignatureWriter()",
    "kind": "Method",
    "detail": "Function (DxilPartWriter*)",
    "insertText": "NewRootSignatureWriter(const RootSignatureHandle &S)"
  },
  {
    "label": "NewFeatureInfoWriter()",
    "kind": "Method",
    "detail": "Function (DxilPartWriter*)",
    "insertText": "NewFeatureInfoWriter(const DxilModule &M)"
  },
  {
    "label": "NewPSVWriter()",
    "kind": "Method",
    "detail": "Function (DxilPartWriter*)",
    "insertText": "NewPSVWriter(const DxilModule &M, uint32_t PSVVersion = UINT_MAX)"
  },
  {
    "label": "NewRDATWriter()",
    "kind": "Method",
    "detail": "Function (DxilPartWriter*)",
    "insertText": "NewRDATWriter(DxilModule &M)"
  },
  {
    "label": "NewVersionWriter()",
    "kind": "Method",
    "detail": "Function (DxilPartWriter*)",
    "insertText": "NewVersionWriter(IDxcVersionInfo *pVersionInfo)"
  },
  {
    "label": "StoreViewIDStateToPSV()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StoreViewIDStateToPSV(const uint32_t *pInputData, unsigned InputSizeInUInts, DxilPipelineStateValidation &PSV)"
  },
  {
    "label": "LoadViewIDStateFromPSV()",
    "kind": "Method",
    "detail": "Function (unsigned)",
    "insertText": "LoadViewIDStateFromPSV(unsigned *pOutputData, unsigned OutputSizeInUInts, const DxilPipelineStateValidation &PSV)"
  },
  {
    "label": "NewDxilContainerWriter()",
    "kind": "Method",
    "detail": "Function (DxilContainerWriter*)",
    "insertText": "NewDxilContainerWriter(bool bUnaligned = false)"
  },
  {
    "label": "ReEmitLatestReflectionData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReEmitLatestReflectionData(llvm::Module *pReflectionM)"
  },
  {
    "label": "StripAndCreateReflectionStream()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StripAndCreateReflectionStream(llvm::Module *pReflectionM, uint32_t *pReflectionPartSizeInBytes, AbstractMemoryStream **ppReflectionStreamOut)"
  },
  {
    "label": "WriteProgramPart()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WriteProgramPart(const hlsl::ShaderModel *pModel, AbstractMemoryStream *pModuleBitcode, IStream *pStream)"
  },
  {
    "label": "SerializeDxilContainerForModule()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SerializeDxilContainerForModule(hlsl::DxilModule *pModule, AbstractMemoryStream *pModuleBitcode, IDxcVersionInfo *DXCVersionInfo, AbstractMemoryStream *pStream, llvm::StringRef DebugName, SerializeDxilFlags Flags, DxilShaderHash *pShaderHashOut = nullptr, AbstractMemoryStream *pReflectionStreamOut = nullptr, AbstractMemoryStream *pRootSigStreamOut = nullptr, void *pPrivateData = nullptr, size_t PrivateDataSize = 0)"
  },
  {
    "label": "SerializeDxilContainerForRootSignature()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SerializeDxilContainerForRootSignature(hlsl::RootSignatureHandle *pRootSigHandle, AbstractMemoryStream *pStream)"
  }
]