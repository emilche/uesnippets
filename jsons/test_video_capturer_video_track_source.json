[
  {
    "label": "TestVideoCapturerVideoTrackSource",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TestVideoCapturerVideoTrackSource"
  },
  {
    "label": "TestVideoCapturerVideoTrackSource()",
    "kind": "Method",
    "detail": "Function (# ifndef TEST_PC_E2E_MEDIA_TEST_VIDEO_CAPTURER_VIDEO_TRACK_SOURCE_H_ # define TEST_PC_E2E_MEDIA_TEST_VIDEO_CAPTURER_VIDEO_TRACK_SOURCE_H_ # include<memory> # include<utility> # include \" api / video / video_frame . h \" # include \" api / video / video_source_interface . h \" # include \" pc / video_track_source . h \" # include \" test / test_video_capturer . h \" namespace webrtc { namespace webrtc_pc_e2e { class TestVideoCapturerVideoTrackSource : public VideoTrackSource { public :)",
    "insertText": "TestVideoCapturerVideoTrackSource(std::unique_ptr<test::TestVideoCapturer> video_capturer, bool is_screencast) : VideoTrackSource( false), video_capturer_(std::move(video_capturer)), is_screencast_(is_screencast)"
  },
  {
    "label": "TestVideoCapturerVideoTrackSource()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "TestVideoCapturerVideoTrackSource()"
  },
  {
    "label": "Start()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Start()"
  },
  {
    "label": "SetState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetState(kLive)"
  },
  {
    "label": "Stop()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Stop()"
  },
  {
    "label": "SetState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetState(kMuted)"
  },
  {
    "label": "is_screencast()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "is_screencast()"
  }
]