[
  {
    "label": "UWorld",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UWorld"
  },
  {
    "label": "CreatePersistentSimulationSettings()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Engine / NetDriver . h \" class UWorld ; # if DO_ENABLE_NET_TEST namespace UE::Net::Private::NetEmulationHelper { void)",
    "insertText": "CreatePersistentSimulationSettings()"
  },
  {
    "label": "ApplySimulationSettingsOnNetDrivers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplySimulationSettingsOnNetDrivers(UWorld* World, const FPacketSimulationSettings& Settings)"
  },
  {
    "label": "HasPersistentPacketEmulationSettings()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasPersistentPacketEmulationSettings()"
  },
  {
    "label": "ApplyPersistentPacketEmulationSettings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyPersistentPacketEmulationSettings(UNetDriver* NetDriver)"
  }
]