[
  {
    "label": "FTCPTransport",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTCPTransport"
  },
  {
    "label": "FSocket",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSocket"
  },
  {
    "label": "FMultichannelTcpSocket",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMultichannelTcpSocket"
  },
  {
    "label": "FTCPTransport()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CookOnTheFlyServerConnection . h \" class FTCPTransport : public ICookOnTheFlyServerTransport { public :)",
    "insertText": "FTCPTransport()"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Initialize(const TCHAR* HostIp)"
  },
  {
    "label": "SendPayload()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SendPayload(const TArray<uint8>& Payload)"
  },
  {
    "label": "ReceivePayload()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ReceivePayload(FArrayReader& Payload)"
  },
  {
    "label": "HasPendingPayload()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasPendingPayload()"
  },
  {
    "label": "Disconnect()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Disconnect()"
  }
]