[
  {
    "label": "isTiled()",
    "kind": "Method",
    "detail": "Function (# ifndef INCLUDED_IMF_VERSION_H # define INCLUDED_IMF_VERSION_H # include \" ImfExport . h \" # include \" ImfNamespace . h \" OPENEXR_IMF_INTERNAL_NAMESPACE_HEADER_ENTER const int MAGIC = 2 0 0 0 0 6 3 0 ; const int VERSION_NUMBER_FIELD = 0 x000000ff ; const int VERSION_FLAGS_FIELD = 0 xffffff00 ; const int EXR_VERSION = 2 ; const int TILED_FLAG = 0 x00000200 ; const int LONG_NAMES_FLAG = 0 x00000400 ; const int NON_IMAGE_FLAG = 0 x00000800 ; const int MULTI_PART_FILE_FLAG = 0 x00001000 ; const int ALL_FLAGS = TILED_FLAG | LONG_NAMES_FLAG | NON_IMAGE_FLAG | MULTI_PART_FILE_FLAG ; bool)",
    "insertText": "isTiled(int version)"
  },
  {
    "label": "isMultiPart()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "isMultiPart(int version)"
  },
  {
    "label": "isNonImage()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "isNonImage(int version)"
  },
  {
    "label": "makeTiled()",
    "kind": "Method",
    "detail": "Function (} int)",
    "insertText": "makeTiled(int version)"
  },
  {
    "label": "isImfMagic()",
    "kind": "Method",
    "detail": "Function (} IMF_EXPORT bool)",
    "insertText": "isImfMagic(const char bytes[4])"
  }
]