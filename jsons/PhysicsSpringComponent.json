[
  {
    "label": "UPrimitiveComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPrimitiveComponent"
  },
  {
    "label": "UPhysicsSpringComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPhysicsSpringComponent"
  },
  {
    "label": "ECollisionChannel",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ECollisionChannel"
  },
  {
    "label": "ELevelTick",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ELevelTick"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" Components / SceneComponent . h \" # include \" PhysicsSpringComponent . generated . h \" class UPrimitiveComponent ;)",
    "insertText": "UCLASS(hidecategories=(Object, Mobility, LOD), ClassGroup=Physics, showcategories=Trigger, MinimalAPI)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() UPROPERTY(BlueprintReadWrite, EditAnywhere, Category = Physics)"
  },
  {
    "label": "TickComponent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TickComponent(float DeltaTime, enum ELevelTick TickType, FActorComponentTickFunction *ThisTickFunction)"
  },
  {
    "label": "GetSpringCollision()",
    "kind": "Method",
    "detail": "Function (private : UPrimitiveComponent*)",
    "insertText": "GetSpringCollision(const FVector& Start, const FVector& End, float& CollisionTime)"
  },
  {
    "label": "ComputeNewSpringCompressionAndForce()",
    "kind": "Method",
    "detail": "Function (FVector)",
    "insertText": "ComputeNewSpringCompressionAndForce(const FVector& End, const float DeltaTime, float& NewSpringCompression)"
  },
  {
    "label": "UpdateAttachedPosition()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateAttachedPosition()"
  },
  {
    "label": "SpringPositionFromLength()",
    "kind": "Method",
    "detail": "Function (FVector)",
    "insertText": "SpringPositionFromLength(float Length)"
  }
]