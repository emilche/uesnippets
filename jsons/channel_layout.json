[
  {
    "label": "ChannelLayout",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ChannelLayout"
  },
  {
    "label": "Channels",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Channels"
  },
  {
    "label": "ChannelOrder()",
    "kind": "Method",
    "detail": "Function (# ifndef API_AUDIO_CHANNEL_LAYOUT_H_ # define API_AUDIO_CHANNEL_LAYOUT_H_ namespace webrtc { enum ChannelLayout { CHANNEL_LAYOUT_NONE = 0,CHANNEL_LAYOUT_UNSUPPORTED = 1,CHANNEL_LAYOUT_MONO = 2,CHANNEL_LAYOUT_STEREO = 3,CHANNEL_LAYOUT_2_1 = 4,CHANNEL_LAYOUT_SURROUND = 5,CHANNEL_LAYOUT_4_0 = 6,CHANNEL_LAYOUT_2_2 = 7,CHANNEL_LAYOUT_QUAD = 8,CHANNEL_LAYOUT_5_0 = 9,CHANNEL_LAYOUT_5_1 = 1 0,CHANNEL_LAYOUT_5_0_BACK = 1 1,CHANNEL_LAYOUT_5_1_BACK = 1 2,CHANNEL_LAYOUT_7_0 = 1 3,CHANNEL_LAYOUT_7_1 = 1 4,CHANNEL_LAYOUT_7_1_WIDE = 1 5,CHANNEL_LAYOUT_STEREO_DOWNMIX = 1 6,CHANNEL_LAYOUT_2POINT1 = 1 7,CHANNEL_LAYOUT_3_1 = 1 8,CHANNEL_LAYOUT_4_1 = 1 9,CHANNEL_LAYOUT_6_0 = 2 0,CHANNEL_LAYOUT_6_0_FRONT = 2 1,CHANNEL_LAYOUT_HEXAGONAL = 2 2,CHANNEL_LAYOUT_6_1 = 2 3,CHANNEL_LAYOUT_6_1_BACK = 2 4,CHANNEL_LAYOUT_6_1_FRONT = 2 5,CHANNEL_LAYOUT_7_0_FRONT = 2 6,CHANNEL_LAYOUT_7_1_WIDE_BACK = 2 7,CHANNEL_LAYOUT_OCTAGONAL = 2 8,CHANNEL_LAYOUT_DISCRETE = 2 9,CHANNEL_LAYOUT_STEREO_AND_KEYBOARD_MIC = 3 0,CHANNEL_LAYOUT_4_1_QUAD_SIDE = 3 1,CHANNEL_LAYOUT_BITSTREAM = 3 2,CHANNEL_LAYOUT_MAX = CHANNEL_LAYOUT_BITSTREAM } ; enum Channels { LEFT = 0,RIGHT,CENTER,LFE,BACK_LEFT,BACK_RIGHT,LEFT_OF_CENTER,RIGHT_OF_CENTER,BACK_CENTER,SIDE_LEFT,SIDE_RIGHT,CHANNELS_MAX = SIDE_RIGHT,} ; int kMaxConcurrentChannels = 8 ; int)",
    "insertText": "ChannelOrder(ChannelLayout layout, Channels channel)"
  },
  {
    "label": "ChannelLayoutToChannelCount()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ChannelLayoutToChannelCount(ChannelLayout layout)"
  },
  {
    "label": "GuessChannelLayout()",
    "kind": "Method",
    "detail": "Function (ChannelLayout)",
    "insertText": "GuessChannelLayout(int channels)"
  },
  {
    "label": "ChannelLayoutToString()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "ChannelLayoutToString(ChannelLayout layout)"
  }
]