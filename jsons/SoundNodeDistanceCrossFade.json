[
  {
    "label": "FAudioDevice",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAudioDevice"
  },
  {
    "label": "FActiveSound",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FActiveSound"
  },
  {
    "label": "FSoundParseParameters",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSoundParseParameters"
  },
  {
    "label": "FWaveInstance",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FWaveInstance"
  },
  {
    "label": "FDistanceDatum",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDistanceDatum"
  },
  {
    "label": "USoundNodeDistanceCrossFade",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USoundNodeDistanceCrossFade"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" Sound / SoundNode . h \" # include \" SoundNodeDistanceCrossFade . generated . h \" class FAudioDevice ; struct FActiveSound ; struct FSoundParseParameters ; struct FWaveInstance ;)",
    "insertText": "USTRUCT()"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() UPROPERTY(EditAnywhere, Category=DistanceDatum)"
  },
  {
    "label": "FDistanceDatum()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FDistanceDatum() : FadeInDistanceStart(0) , FadeInDistanceEnd(0) , FadeOutDistanceStart(0) , FadeOutDistanceEnd(0) , Volume(1.0f)"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (} } ;)",
    "insertText": "UCLASS(hidecategories=Object, editinlinenew, MinimalAPI, meta=( DisplayName=\"Crossfade by Distance\" ))"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() UPROPERTY(EditAnywhere, export, editfixedsize, Category=CrossFade)"
  },
  {
    "label": "ParseNodes()",
    "kind": "Method",
    "detail": "Function (public : void)",
    "insertText": "ParseNodes(FAudioDevice* AudioDevice, const UPTRINT NodeWaveInstanceHash, FActiveSound& ActiveSound, const FSoundParseParameters& ParseParams, TArray<FWaveInstance*>& WaveInstances)"
  },
  {
    "label": "GetMaxChildNodes()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetMaxChildNodes()"
  },
  {
    "label": "InsertChildNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InsertChildNode(int32 Index)"
  },
  {
    "label": "RemoveChildNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveChildNode(int32 Index)"
  },
  {
    "label": "SetChildNodes()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR void)",
    "insertText": "SetChildNodes(TArray<USoundNode*>& InChildNodes)"
  },
  {
    "label": "GetMaxDistance()",
    "kind": "Method",
    "detail": "Function (# endif float)",
    "insertText": "GetMaxDistance()"
  },
  {
    "label": "GetNumSounds()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetNumSounds(const UPTRINT NodeWaveInstanceHash, FActiveSound& ActiveSound)"
  },
  {
    "label": "GetCurrentDistance()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetCurrentDistance(FAudioDevice* AudioDevice, FActiveSound& ActiveSound, const FSoundParseParameters& ParseParams)"
  },
  {
    "label": "AllowCrossfading()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AllowCrossfading(FActiveSound& ActiveSound)"
  }
]