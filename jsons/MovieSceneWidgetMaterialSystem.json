[
  {
    "label": "UWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UWidget"
  },
  {
    "label": "UMovieScenePiecewiseDoubleBlenderSystem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieScenePiecewiseDoubleBlenderSystem"
  },
  {
    "label": "FWidgetMaterialKey",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FWidgetMaterialKey"
  },
  {
    "label": "FWidgetMaterialAccessor",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FWidgetMaterialAccessor"
  },
  {
    "label": "FPreAnimatedWidgetMaterialSwitcherStorage",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPreAnimatedWidgetMaterialSwitcherStorage"
  },
  {
    "label": "FPreAnimatedWidgetMaterialParameterStorage",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPreAnimatedWidgetMaterialParameterStorage"
  },
  {
    "label": "UMovieSceneWidgetMaterialSystem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieSceneWidgetMaterialSystem"
  },
  {
    "label": "GetTypeHash()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" EntitySystem / MovieSceneEntitySystem . h \" # include \" Evaluation / PreAnimatedState / MovieScenePreAnimatedStateStorage . h \" # include \" Systems / MovieSceneMaterialSystem . h \" # include \" Animation / MovieSceneUMGComponentTypes . h \" # include \" MovieSceneWidgetMaterialSystem . generated . h \" class UWidget ; class UMovieScenePiecewiseDoubleBlenderSystem ; namespace UE::MovieScene { struct FWidgetMaterialKey { FObjectKey Object ; FWidgetMaterialHandle WidgetMaterialHandle ; uint32)",
    "insertText": "GetTypeHash(const FWidgetMaterialKey& In)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "operator(const FWidgetMaterialKey& A, const FWidgetMaterialKey& B)"
  },
  {
    "label": "FWidgetMaterialAccessor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FWidgetMaterialAccessor(UObject* InObject, FWidgetMaterialHandle InWidgetMaterialHandle)"
  },
  {
    "label": "bool()",
    "kind": "Method",
    "detail": "Function (operator)",
    "insertText": "bool()"
  },
  {
    "label": "GetMaterial()",
    "kind": "Method",
    "detail": "Function (UMaterialInterface*)",
    "insertText": "GetMaterial()"
  },
  {
    "label": "SetMaterial()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetMaterial(UMaterialInterface* InMaterial)"
  },
  {
    "label": "CreateDynamicMaterial()",
    "kind": "Method",
    "detail": "Function (UMaterialInstanceDynamic*)",
    "insertText": "CreateDynamicMaterial(UMaterialInterface* InMaterial)"
  },
  {
    "label": "ToString()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "ToString()"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (} ; using FPreAnimatedWidgetMaterialTraits = TPreAnimatedMaterialTraits<FWidgetMaterialAccessor,UObject*,FWidgetMaterialHandle> ; using FPreAnimatedWidgetMaterialParameterTraits = TPreAnimatedMaterialParameterTraits<FWidgetMaterialAccessor,UObject*,FWidgetMaterialHandle> ; struct FPreAnimatedWidgetMaterialSwitcherStorage : public TPreAnimatedStateStorage<TPreAnimatedMaterialTraits<FWidgetMaterialAccessor,UObject*,FWidgetMaterialHandle>> { TAutoRegisterPreAnimatedStorageID<FPreAnimatedWidgetMaterialSwitcherStorage> StorageID ; } ; struct FPreAnimatedWidgetMaterialParameterStorage : public TPreAnimatedStateStorage<TPreAnimatedMaterialParameterTraits<FWidgetMaterialAccessor,UObject*,FWidgetMaterialHandle>> { TAutoRegisterPreAnimatedStorageID<FPreAnimatedWidgetMaterialParameterStorage> StorageID ; } ; })",
    "insertText": "UCLASS(MinimalAPI)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "GENERATED_BODY() UMovieSceneWidgetMaterialSystem(const FObjectInitializer& ObjInit)"
  },
  {
    "label": "OnLink()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "OnLink()"
  },
  {
    "label": "OnUnlink()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnUnlink()"
  },
  {
    "label": "OnRun()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnRun(FSystemTaskPrerequisites& InPrerequisites, FSystemSubsequentTasks& Subsequents)"
  },
  {
    "label": "SavePreAnimatedState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SavePreAnimatedState(const FPreAnimationParameters& InParameters)"
  }
]