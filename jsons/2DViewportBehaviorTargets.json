[
  {
    "label": "FEditorViewportClient",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEditorViewportClient"
  },
  {
    "label": "EDITORINTERACTIVETOOLSFRAMEWORK_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "EDITORINTERACTIVETOOLSFRAMEWORK_API"
  },
  {
    "label": "FEditor2DScrollBehaviorTarget()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" BaseBehaviors / BehaviorTargetInterfaces . h \" # include \" VectorTypes . h \" class FEditorViewportClient ; class FEditor2DScrollBehaviorTarget : public IClickDragBehaviorTarget { public :)",
    "insertText": "FEditor2DScrollBehaviorTarget(FEditorViewportClient* ViewportClientIn)"
  },
  {
    "label": "CanBeginClickDragSequence()",
    "kind": "Method",
    "detail": "Function (FInputRayHit)",
    "insertText": "CanBeginClickDragSequence(const FInputDeviceRay& PressPos)"
  },
  {
    "label": "OnClickPress()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnClickPress(const FInputDeviceRay& PressPos)"
  },
  {
    "label": "OnClickDrag()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnClickDrag(const FInputDeviceRay& DragPos)"
  },
  {
    "label": "OnClickRelease()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnClickRelease(const FInputDeviceRay& ReleasePos)"
  },
  {
    "label": "OnTerminateDragSequence()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnTerminateDragSequence()"
  },
  {
    "label": "FEditor2DMouseWheelZoomBehaviorTarget()",
    "kind": "Method",
    "detail": "Function (protected : FEditorViewportClient* ViewportClient = nullptr ; FVector3d OriginalCameraLocation ; FVector3d DragStart ; } ; class FEditor2DMouseWheelZoomBehaviorTarget : public IMouseWheelBehaviorTarget { public :)",
    "insertText": "FEditor2DMouseWheelZoomBehaviorTarget(FEditorViewportClient* ViewportClientIn)"
  },
  {
    "label": "ShouldRespondToMouseWheel()",
    "kind": "Method",
    "detail": "Function (FInputRayHit)",
    "insertText": "ShouldRespondToMouseWheel(const FInputDeviceRay& CurrentPos)"
  },
  {
    "label": "OnMouseWheelScrollUp()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnMouseWheelScrollUp(const FInputDeviceRay& CurrentPos)"
  },
  {
    "label": "OnMouseWheelScrollDown()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnMouseWheelScrollDown(const FInputDeviceRay& CurrentPos)"
  },
  {
    "label": "SetZoomAmount()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetZoomAmount(double PercentZoomIn)"
  },
  {
    "label": "SetZoomLimits()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetZoomLimits(double ZoomInLimitIn, double ZoomOutLimitIn)"
  },
  {
    "label": "SetCameraFarPlaneWorldZ()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCameraFarPlaneWorldZ(double CameraFarPlaneWorldZIn)"
  },
  {
    "label": "SetCameraNearPlaneProportionZ()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCameraNearPlaneProportionZ(double CameraFarPlaneProportionZIn)"
  }
]