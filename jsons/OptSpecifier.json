[
  {
    "label": "Option",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Option"
  },
  {
    "label": "OptSpecifier",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "OptSpecifier"
  },
  {
    "label": "OptSpecifier()",
    "kind": "Method",
    "detail": "Function (# ifndef LLVM_OPTION_OPTSPECIFIER_H # define LLVM_OPTION_OPTSPECIFIER_H # include \" llvm / Support / Compiler . h \" namespace llvm { namespace opt { class Option ; class OptSpecifier { unsigned ID ; private :)",
    "insertText": "OptSpecifier(bool)"
  },
  {
    "label": "OptSpecifier()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "OptSpecifier() : ID(0)"
  },
  {
    "label": "OptSpecifier()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "OptSpecifier(unsigned ID) : ID(ID)"
  },
  {
    "label": "OptSpecifier()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "OptSpecifier(const Option *Opt)"
  },
  {
    "label": "isValid()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "isValid()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "operator(OptSpecifier Opt)"
  }
]