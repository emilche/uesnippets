[
  {
    "label": "_CharT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_CharT"
  },
  {
    "label": "_LIBCPP_TEMPLATE_VIS",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_LIBCPP_TEMPLATE_VIS"
  },
  {
    "label": "_Indexing",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "_Indexing"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# ifndef _LIBCPP___FORMAT_FORMAT_PARSE_CONTEXT_H # define _LIBCPP___FORMAT_FORMAT_PARSE_CONTEXT_H # include<__config> # include<__format / format_error . h> # include<string_view> # if !)",
    "insertText": "defined(_LIBCPP_HAS_NO_PRAGMA_SYSTEM_HEADER)"
  },
  {
    "label": "basic_format_parse_context()",
    "kind": "Method",
    "detail": "Function (public : using char_type = _CharT ; using const_iterator = basic_string_view<_CharT>::const_iterator ; using iterator = const_iterator ; _LIBCPP_HIDE_FROM_ABI)",
    "insertText": "basic_format_parse_context(basic_string_view<_CharT> __fmt, size_t __num_args = 0) noexcept : __begin_(__fmt.begin()), __end_(__fmt.end()), __indexing_(__unknown), __next_arg_id_(0), __num_args_(__num_args)"
  },
  {
    "label": "basic_format_parse_context()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "basic_format_parse_context(const basic_format_parse_context&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (basic_format_parse_context&)",
    "insertText": "operator(const basic_format_parse_context&)"
  },
  {
    "label": "begin()",
    "kind": "Method",
    "detail": "Function (_LIBCPP_HIDE_FROM_ABI const_iterator)",
    "insertText": "begin()"
  },
  {
    "label": "next_arg_id()",
    "kind": "Method",
    "detail": "Function (__begin_ = __it ; } _LIBCPP_HIDE_FROM_ABI size_t)",
    "insertText": "next_arg_id()"
  }
]