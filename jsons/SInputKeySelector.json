[
  {
    "label": "SButton",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SButton"
  },
  {
    "label": "STextBlock",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "STextBlock"
  },
  {
    "label": "SInputKeySelector",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SInputKeySelector"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct( const FArguments& InArgs )"
  },
  {
    "label": "SetSelectedKey()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSelectedKey( TAttribute<FInputChord> InSelectedKey )"
  },
  {
    "label": "SetMargin()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetMargin( TAttribute<FMargin> InMargin )"
  },
  {
    "label": "SetButtonStyle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetButtonStyle( const FButtonStyle* ButtonStyle )"
  },
  {
    "label": "SetTextStyle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTextStyle(const FTextBlockStyle* InTextStyle)"
  },
  {
    "label": "SetTextBlockVisibility()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTextBlockVisibility(EVisibility InVisibility)"
  },
  {
    "label": "OnClicked()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnClicked()"
  },
  {
    "label": "SelectKey()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SelectKey( FKey Key, bool bShiftDown, bool bControllDown, bool bAltDown, bool bCommandDown )"
  },
  {
    "label": "SetIsSelectingKey()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetIsSelectingKey(bool bInIsSelectingKey)"
  }
]