[
  {
    "label": "ISACBand",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ISACBand"
  },
  {
    "label": "ISACBandwidth",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ISACBandwidth"
  },
  {
    "label": "WebRtcIsac_DecodeSpec()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_AUDIO_CODING_CODECS_ISAC_MAIN_SOURCE_ENTROPY_CODING_H_ # define MODULES_AUDIO_CODING_CODECS_ISAC_MAIN_SOURCE_ENTROPY_CODING_H_ # include \" modules / audio_coding / codecs / isac / main / source / settings . h \" # include \" modules / audio_coding / codecs / isac / main / source / structs . h \" int)",
    "insertText": "WebRtcIsac_DecodeSpec(Bitstr* streamdata, int16_t AvgPitchGain_Q12, enum ISACBand band, double* fr, double* fi)"
  },
  {
    "label": "WebRtcIsac_EncodeSpec()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "WebRtcIsac_EncodeSpec(const int16_t* fr, const int16_t* fi, int16_t AvgPitchGain_Q12, enum ISACBand band, Bitstr* streamdata)"
  },
  {
    "label": "WebRtcIsac_DecodeLpcCoef()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "WebRtcIsac_DecodeLpcCoef(Bitstr* streamdata, double* LPCCoef)"
  },
  {
    "label": "WebRtcIsac_DecodeLpcCoefUB()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "WebRtcIsac_DecodeLpcCoefUB(Bitstr* streamdata, double* lpcVecs, double* percepFilterGains, int16_t bandwidth)"
  },
  {
    "label": "WebRtcIsac_DecodeLpc()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "WebRtcIsac_DecodeLpc(Bitstr* streamdata, double* LPCCoef_lo, double* LPCCoef_hi)"
  },
  {
    "label": "WebRtcIsac_EncodeLpcLb()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WebRtcIsac_EncodeLpcLb(double* LPCCoef_lo, double* LPCCoef_hi, Bitstr* streamdata, IsacSaveEncoderData* encData)"
  },
  {
    "label": "WebRtcIsac_EncodeLpcGainLb()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WebRtcIsac_EncodeLpcGainLb(double* LPCCoef_lo, double* LPCCoef_hi, Bitstr* streamdata, IsacSaveEncoderData* encData)"
  },
  {
    "label": "WebRtcIsac_EncodeLpcUB()",
    "kind": "Method",
    "detail": "Function (int16_t)",
    "insertText": "WebRtcIsac_EncodeLpcUB(double* lpcCoeff, Bitstr* streamdata, double* interpolLPCCoeff, int16_t bandwidth, ISACUBSaveEncDataStruct* encData)"
  },
  {
    "label": "WebRtcIsac_DecodeInterpolLpcUb()",
    "kind": "Method",
    "detail": "Function (int16_t)",
    "insertText": "WebRtcIsac_DecodeInterpolLpcUb(Bitstr* streamdata, double* percepFilterParam, int16_t bandwidth)"
  },
  {
    "label": "WebRtcIsac_DecodeRc()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "WebRtcIsac_DecodeRc(Bitstr* streamdata, int16_t* RCQ15)"
  },
  {
    "label": "WebRtcIsac_EncodeRc()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WebRtcIsac_EncodeRc(int16_t* RCQ15, Bitstr* streamdata)"
  },
  {
    "label": "WebRtcIsac_DecodeGain2()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "WebRtcIsac_DecodeGain2(Bitstr* streamdata, int32_t* Gain2)"
  },
  {
    "label": "WebRtcIsac_EncodeGain2()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "WebRtcIsac_EncodeGain2(int32_t* gain2, Bitstr* streamdata)"
  },
  {
    "label": "WebRtcIsac_EncodePitchGain()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WebRtcIsac_EncodePitchGain(int16_t* PitchGains_Q12, Bitstr* streamdata, IsacSaveEncoderData* encData)"
  },
  {
    "label": "WebRtcIsac_EncodePitchLag()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WebRtcIsac_EncodePitchLag(double* PitchLags, int16_t* PitchGain_Q12, Bitstr* streamdata, IsacSaveEncoderData* encData)"
  },
  {
    "label": "WebRtcIsac_DecodePitchGain()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "WebRtcIsac_DecodePitchGain(Bitstr* streamdata, int16_t* PitchGain_Q12)"
  },
  {
    "label": "WebRtcIsac_DecodePitchLag()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "WebRtcIsac_DecodePitchLag(Bitstr* streamdata, int16_t* PitchGain_Q12, double* PitchLag)"
  },
  {
    "label": "WebRtcIsac_DecodeFrameLen()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "WebRtcIsac_DecodeFrameLen(Bitstr* streamdata, int16_t* framelength)"
  },
  {
    "label": "WebRtcIsac_EncodeFrameLen()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "WebRtcIsac_EncodeFrameLen(int16_t framelength, Bitstr* streamdata)"
  },
  {
    "label": "WebRtcIsac_DecodeSendBW()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "WebRtcIsac_DecodeSendBW(Bitstr* streamdata, int16_t* BWno)"
  },
  {
    "label": "WebRtcIsac_EncodeReceiveBw()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WebRtcIsac_EncodeReceiveBw(int* BWno, Bitstr* streamdata)"
  },
  {
    "label": "WebRtcIsac_Poly2Rc()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WebRtcIsac_Poly2Rc(double* a, int N, double* RC)"
  },
  {
    "label": "WebRtcIsac_Rc2Poly()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WebRtcIsac_Rc2Poly(double* RC, int N, double* a)"
  },
  {
    "label": "WebRtcIsac_TranscodeLPCCoef()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WebRtcIsac_TranscodeLPCCoef(double* LPCCoef_lo, double* LPCCoef_hi, int* index_g)"
  },
  {
    "label": "WebRtcIsac_EncodeLpcGainUb()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WebRtcIsac_EncodeLpcGainUb(double* lpGains, Bitstr* streamdata, int* lpcGainIndex)"
  },
  {
    "label": "WebRtcIsac_StoreLpcGainUb()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WebRtcIsac_StoreLpcGainUb(double* lpGains, Bitstr* streamdata)"
  },
  {
    "label": "WebRtcIsac_DecodeLpcGainUb()",
    "kind": "Method",
    "detail": "Function (int16_t)",
    "insertText": "WebRtcIsac_DecodeLpcGainUb(double* lpGains, Bitstr* streamdata)"
  },
  {
    "label": "WebRtcIsac_EncodeBandwidth()",
    "kind": "Method",
    "detail": "Function (int16_t)",
    "insertText": "WebRtcIsac_EncodeBandwidth(enum ISACBandwidth bandwidth, Bitstr* streamData)"
  },
  {
    "label": "WebRtcIsac_DecodeBandwidth()",
    "kind": "Method",
    "detail": "Function (int16_t)",
    "insertText": "WebRtcIsac_DecodeBandwidth(Bitstr* streamData, enum ISACBandwidth* bandwidth)"
  },
  {
    "label": "WebRtcIsac_EncodeJitterInfo()",
    "kind": "Method",
    "detail": "Function (int16_t)",
    "insertText": "WebRtcIsac_EncodeJitterInfo(int32_t jitterIndex, Bitstr* streamData)"
  },
  {
    "label": "WebRtcIsac_DecodeJitterInfo()",
    "kind": "Method",
    "detail": "Function (int16_t)",
    "insertText": "WebRtcIsac_DecodeJitterInfo(Bitstr* streamData, int32_t* jitterInfo)"
  }
]