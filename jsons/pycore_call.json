[
  {
    "label": "PyAPI_FUNC()",
    "kind": "Method",
    "detail": "Function (# ifndef Py_INTERNAL_CALL_H # define Py_INTERNAL_CALL_H # ifdef __cplusplus \" C \" { # endif # ifndef Py_BUILD_CORE # error \" this header requires Py_BUILD_CORE define \" # endif # include \" pycore_pystate . h \")",
    "insertText": "PyAPI_FUNC(PyObject *) _PyObject_Call_Prepend( PyThreadState *tstate, PyObject *callable, PyObject *obj, PyObject *args, PyObject *kwargs)"
  },
  {
    "label": "PyAPI_FUNC()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PyAPI_FUNC(PyObject *) _PyObject_FastCallDictTstate( PyThreadState *tstate, PyObject *callable, PyObject *const *args, size_t nargsf, PyObject *kwargs)"
  },
  {
    "label": "PyAPI_FUNC()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PyAPI_FUNC(PyObject *) _PyObject_Call( PyThreadState *tstate, PyObject *callable, PyObject *args, PyObject *kwargs)"
  },
  {
    "label": "_PyObject_CallMethodFormat()",
    "kind": "Method",
    "detail": "Function (PyObject*)",
    "insertText": "_PyObject_CallMethodFormat(PyThreadState *tstate, PyObject *callable, const char *format, ...)"
  },
  {
    "label": "_PyVectorcall_FunctionInline()",
    "kind": "Method",
    "detail": "Function (vectorcallfunc)",
    "insertText": "_PyVectorcall_FunctionInline(PyObject *callable)"
  },
  {
    "label": "assert()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "assert(callable != NULL)"
  },
  {
    "label": "Py_TYPE()",
    "kind": "Method",
    "detail": "Function (PyTypeObject* tp =)",
    "insertText": "Py_TYPE(callable)"
  },
  {
    "label": "assert()",
    "kind": "Method",
    "detail": "Function (Py_ssize_t offset = tp -> tp_vectorcall_offset ;)",
    "insertText": "assert(offset > 0)"
  },
  {
    "label": "memcpy()",
    "kind": "Method",
    "detail": "Function (vectorcallfunc ptr ;)",
    "insertText": "memcpy(&ptr, (char *) callable + offset, sizeof(ptr))"
  },
  {
    "label": "assert()",
    "kind": "Method",
    "detail": "Function (vectorcallfunc func ; PyObject* res ;)",
    "insertText": "assert(kwnames == NULL || PyTuple_Check(kwnames))"
  },
  {
    "label": "assert()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "assert(args != NULL || PyVectorcall_NARGS(nargsf) == 0)"
  },
  {
    "label": "_PyVectorcall_FunctionInline()",
    "kind": "Method",
    "detail": "Function (func =)",
    "insertText": "_PyVectorcall_FunctionInline(callable)"
  },
  {
    "label": "PyVectorcall_NARGS()",
    "kind": "Method",
    "detail": "Function (Py_ssize_t nargs =)",
    "insertText": "PyVectorcall_NARGS(nargsf)"
  },
  {
    "label": "func()",
    "kind": "Method",
    "detail": "Function (} res =)",
    "insertText": "func(callable, args, nargsf, kwnames)"
  },
  {
    "label": "_PyObject_CallNoArgsTstate()",
    "kind": "Method",
    "detail": "Function (} PyObject*)",
    "insertText": "_PyObject_CallNoArgsTstate(PyThreadState *tstate, PyObject *func)"
  },
  {
    "label": "_PyObject_CallNoArgs()",
    "kind": "Method",
    "detail": "Function (} PyObject*)",
    "insertText": "_PyObject_CallNoArgs(PyObject *func)"
  },
  {
    "label": "_PyThreadState_GET()",
    "kind": "Method",
    "detail": "Function (PyThreadState* tstate =)",
    "insertText": "_PyThreadState_GET()"
  },
  {
    "label": "_PyObject_FastCallTstate()",
    "kind": "Method",
    "detail": "Function (} PyObject*)",
    "insertText": "_PyObject_FastCallTstate(PyThreadState *tstate, PyObject *func, PyObject *const *args, Py_ssize_t nargs)"
  }
]