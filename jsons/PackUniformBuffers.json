[
  {
    "label": "SUniformVarEntry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SUniformVarEntry"
  },
  {
    "label": "anon_struct_0000",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "anon_struct_0000"
  },
  {
    "label": "FixRedundantCasts()",
    "kind": "Method",
    "detail": "Function (# ifndef PACKUNIFORMBUFFERS_H # define PACKUNIFORMBUFFERS_H # ifdef __UNREAL__ THIRD_PARTY_INCLUDES_START # endif # include<map> # include<string> # include<set> # ifdef __UNREAL__ THIRD_PARTY_INCLUDES_END # endif typedef std::map<std::string,ir_variable*> TStringIRVarMap ; typedef std::map<std::string,TStringIRVarMap> TStringStringIRVarMap ; typedef std::list<ir_variable*> TIRVarList ; struct SUniformVarEntry { ir_variable* UniformArrayVar ; int Vec4Start ; int Components ; int NumRows ; } ; typedef std::map<ir_variable*,SUniformVarEntry,ir_variable_compare> TVarVarMap ; void)",
    "insertText": "FixRedundantCasts(exec_list* IR)"
  },
  {
    "label": "RemovePackedUniformBufferReferences()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemovePackedUniformBufferReferences(exec_list* Instructions, _mesa_glsl_parse_state* ParseState, TVarVarMap& UniformMap)"
  },
  {
    "label": "FlattenUniformBufferStructures()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FlattenUniformBufferStructures(exec_list* Instructions, _mesa_glsl_parse_state* ParseState)"
  },
  {
    "label": "ExpandUniformBufferArrays()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExpandUniformBufferArrays(exec_list* Instructions, _mesa_glsl_parse_state* ParseState)"
  },
  {
    "label": "PackUniforms()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PackUniforms(uint32 HLSLCCFlags, exec_list* Instructions, _mesa_glsl_parse_state* ParseState, TVarVarMap& OutUniformMap)"
  },
  {
    "label": "ExpandArrayAssignments()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ExpandArrayAssignments(exec_list* ir, _mesa_glsl_parse_state* State)"
  },
  {
    "label": "ExtractSamplerStatesNameInformation()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ExtractSamplerStatesNameInformation(exec_list* Instructions, _mesa_glsl_parse_state* ParseState)"
  },
  {
    "label": "ExpandMatricesIntoArrays()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ExpandMatricesIntoArrays(exec_list* Instructions, _mesa_glsl_parse_state* ParseState)"
  },
  {
    "label": "FindAtomicVariables()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FindAtomicVariables(exec_list* ir, TIRVarSet& OutAtomicVariables)"
  },
  {
    "label": "FixAtomicReferences()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FixAtomicReferences(exec_list* ir, _mesa_glsl_parse_state* State, TIRVarSet& AtomicVariables)"
  },
  {
    "label": "Main()",
    "kind": "Method",
    "detail": "Function (# endif # if 0 float Global0 ; float Global1 ; float Global2 ; cbuffer CBuffer { float CBMember0 ; float CBMember1 ; } cbuffer CBufferStruct { struct { float SMember0 ; } S ; } float4)",
    "insertText": "Main()"
  },
  {
    "label": "layout()",
    "kind": "Method",
    "detail": "Function (float CBMember0 ; float CBMember1 ; } ;)",
    "insertText": "layout(std140)"
  },
  {
    "label": "main()",
    "kind": "Method",
    "detail": "Function (anon_struct_0000 S ; } ; uniform float Global2 ; uniform float Global1 ; uniform float Global0 ; out vec4 out_Target0 ; void)",
    "insertText": "main()"
  },
  {
    "label": "vec4()",
    "kind": "Method",
    "detail": "Function (out_Target0 . xyzw =)",
    "insertText": "vec4((((Global0*Global1)+(Global2*CBMember0))+(CBMember1/S.SMember0)))"
  },
  {
    "label": "vec4()",
    "kind": "Method",
    "detail": "Function (out_Target0 . xyzw =)",
    "insertText": "vec4((((pu_h[0].x*pu_h[1].x)+(pu_h[2].x*CBMember0))+(CBMember1/S.SMember0)))"
  },
  {
    "label": "vec4()",
    "kind": "Method",
    "detail": "Function (out_Target0 . xyzw =)",
    "insertText": "vec4((((pu_h[0].x*pu_h[1].x) + (pu_h[2].x*CBMember0)) + (CBMember1 / pu_h[3].x)))"
  },
  {
    "label": "vec4()",
    "kind": "Method",
    "detail": "Function (out_Target0 . xyzw =)",
    "insertText": "vec4((((pu_h[0].x*pu_h[1].x) + (pu_h[2].x*pu_h[3].x)) + (pu_h[4].x / pu_h[5].x)))"
  },
  {
    "label": "vec4()",
    "kind": "Method",
    "detail": "Function (out_Target0 . xyzw =)",
    "insertText": "vec4((((pu_h[0].x*pu_h[1].x) + (pu_h[2].x*pc0_h[0].x)) + (pc0_h[1].x / pc1_h[0].x)))"
  }
]