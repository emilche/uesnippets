[
  {
    "label": "FMeshDescription",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMeshDescription"
  },
  {
    "label": "FDynamicMeshSceneProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDynamicMeshSceneProxy"
  },
  {
    "label": "FBaseDynamicMeshSceneProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBaseDynamicMeshSceneProxy"
  },
  {
    "label": "IRenderMeshPostProcessor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IRenderMeshPostProcessor"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "TAsyncComponentDataComputeQueue",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TAsyncComponentDataComputeQueue"
  },
  {
    "label": "FComputeJob",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FComputeJob"
  },
  {
    "label": "UDynamicMeshComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UDynamicMeshComponent"
  },
  {
    "label": "FTriMeshCollisionData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTriMeshCollisionData"
  },
  {
    "label": "FTriMeshCollisionDataEstimates",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTriMeshCollisionDataEstimates"
  },
  {
    "label": "ECollisionTraceFlag",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ECollisionTraceFlag"
  },
  {
    "label": "FKAggregateGeom",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FKAggregateGeom"
  },
  {
    "label": "FKAggregateGeom",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FKAggregateGeom"
  },
  {
    "label": "check()",
    "kind": "Method",
    "detail": "Function (something)",
    "insertText": "check(OnComputeCompleted)"
  },
  {
    "label": "RemovePending()",
    "kind": "Method",
    "detail": "Function (FScopeLock)",
    "insertText": "RemovePending(&PendingJobsLock)"
  },
  {
    "label": "AddJob()",
    "kind": "Method",
    "detail": "Function (FScopeLock)",
    "insertText": "AddJob(&PendingJobsLock)"
  },
  {
    "label": "PendingLock()",
    "kind": "Method",
    "detail": "Function (FScopeLock)",
    "insertText": "PendingLock(&PendingJobsLock)"
  },
  {
    "label": "SetDynamicMesh()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDynamicMesh(UDynamicMesh* NewMesh)"
  },
  {
    "label": "FastNotifyColorsUpdated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FastNotifyColorsUpdated()"
  },
  {
    "label": "FastNotifyPositionsUpdated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FastNotifyPositionsUpdated(bool bNormals = false, bool bColors = false, bool bUVs = false)"
  },
  {
    "label": "FastNotifyVertexAttributesUpdated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FastNotifyVertexAttributesUpdated(bool bNormals, bool bColors, bool bUVs)"
  },
  {
    "label": "FastNotifyVertexAttributesUpdated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FastNotifyVertexAttributesUpdated(EMeshRenderAttributeFlags UpdatedAttributes)"
  },
  {
    "label": "FastNotifyUVsUpdated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FastNotifyUVsUpdated()"
  },
  {
    "label": "FastNotifySecondaryTrianglesChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FastNotifySecondaryTrianglesChanged()"
  },
  {
    "label": "FastNotifyTriangleVerticesUpdated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FastNotifyTriangleVerticesUpdated(const TArray<int32>& Triangles, EMeshRenderAttributeFlags UpdatedAttributes)"
  },
  {
    "label": "FastNotifyTriangleVerticesUpdated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FastNotifyTriangleVerticesUpdated(const TSet<int32>& Triangles, EMeshRenderAttributeFlags UpdatedAttributes)"
  },
  {
    "label": "FastNotifyTriangleVerticesUpdated_TryPrecompute()",
    "kind": "Method",
    "detail": "Function (TFuture<bool>)",
    "insertText": "FastNotifyTriangleVerticesUpdated_TryPrecompute(const TArray<int32>& Triangles, TArray<int32>& UpdateSetsOut, UE::Geometry::FAxisAlignedBox3d& BoundsOut)"
  },
  {
    "label": "FastNotifyTriangleVerticesUpdated_ApplyPrecompute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FastNotifyTriangleVerticesUpdated_ApplyPrecompute(const TArray<int32>& Triangles, EMeshRenderAttributeFlags UpdatedAttributes,\n\t\tTFuture<bool>& Precompute, const TArray<int32>& UpdateSets, const UE::Geometry::FAxisAlignedBox3d& UpdateSetBounds)"
  },
  {
    "label": "NotifyMeshModified()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyMeshModified()"
  },
  {
    "label": "NotifyMeshVertexAttributesModified()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyMeshVertexAttributesModified(\n\t\tbool bPositions = true, \n\t\tbool bNormals = true,\n\t\tbool bUVs = true,\n\t\tbool bColors = true)"
  },
  {
    "label": "SetInvalidateProxyOnChangeEnabled()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetInvalidateProxyOnChangeEnabled(bool bEnabled)"
  },
  {
    "label": "OnMeshObjectChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnMeshObjectChanged(UDynamicMesh* ChangedMeshObject, FDynamicMeshChangeInfo ChangeInfo)"
  },
  {
    "label": "ClearTriangleColorFunction()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearTriangleColorFunction(EDynamicMeshComponentRenderUpdateMode UpdateMode = EDynamicMeshComponentRenderUpdateMode::FastUpdate)"
  },
  {
    "label": "HasTriangleColorFunction()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasTriangleColorFunction()"
  },
  {
    "label": "GetTriangleColor()",
    "kind": "Method",
    "detail": "Function (FColor)",
    "insertText": "GetTriangleColor(const FDynamicMesh3* Mesh, int TriangleID)"
  },
  {
    "label": "ClearVertexColorRemappingFunction()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearVertexColorRemappingFunction(EDynamicMeshComponentRenderUpdateMode UpdateMode = EDynamicMeshComponentRenderUpdateMode::FastUpdate)"
  },
  {
    "label": "HasVertexColorRemappingFunction()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasVertexColorRemappingFunction()"
  },
  {
    "label": "RemapVertexColor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemapVertexColor(FVector4f& VertexColorInOut)"
  },
  {
    "label": "DisableSecondaryTriangleBuffers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DisableSecondaryTriangleBuffers()"
  },
  {
    "label": "SetExternalDecomposition()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetExternalDecomposition(TUniquePtr<FMeshRenderDecomposition> Decomposition)"
  },
  {
    "label": "SetRenderMeshPostProcessor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRenderMeshPostProcessor(TUniquePtr<IRenderMeshPostProcessor> Processor)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_TwoParams()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_TwoParams(FComponentChildrenChangedDelegate, USceneComponent*, bool)"
  },
  {
    "label": "ConfigureMaterialSet()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConfigureMaterialSet(const TArray<UMaterialInterface*>& NewMaterialSet, bool bDeleteExtraSlots = true)"
  },
  {
    "label": "ValidateMaterialSlots()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ValidateMaterialSlots(bool bCreateIfMissing = true, bool bDeleteExtraSlots = true)"
  },
  {
    "label": "SetTangentsType()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTangentsType(EDynamicMeshComponentTangentsMode NewTangentsType)"
  },
  {
    "label": "GetTangentsType()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetTangentsType()"
  },
  {
    "label": "InvalidateAutoCalculatedTangents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InvalidateAutoCalculatedTangents()"
  },
  {
    "label": "UpdateAutoCalculatedTangents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateAutoCalculatedTangents()"
  },
  {
    "label": "UpdateDistanceField()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateDistanceField()"
  },
  {
    "label": "OnNewDistanceFieldData_Async()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnNewDistanceFieldData_Async(TUniquePtr<FDistanceFieldVolumeData> NewData)"
  },
  {
    "label": "ComputeNewDistanceField_TaskFunction()",
    "kind": "Method",
    "detail": "Function (TUniquePtr<FDistanceFieldVolumeData>)",
    "insertText": "ComputeNewDistanceField_TaskFunction(FProgressCancel& Progress, const FDynamicMesh3& Mesh, bool bMostlyTwoSided)"
  },
  {
    "label": "EnableComplexAsSimpleCollision()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnableComplexAsSimpleCollision()"
  },
  {
    "label": "SetComplexAsSimpleCollisionEnabled()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetComplexAsSimpleCollisionEnabled(bool bEnabled, bool bImmediateUpdate = true)"
  },
  {
    "label": "SetDeferredCollisionUpdatesEnabled()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDeferredCollisionUpdatesEnabled(bool bEnabled, bool bImmediateUpdate = true)"
  },
  {
    "label": "UpdateCollision()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateCollision(bool bOnlyIfPending = true)"
  },
  {
    "label": "SetSimpleCollisionShapes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSimpleCollisionShapes(const struct FKAggregateGeom& AggGeom, bool bUpdateCollision)"
  },
  {
    "label": "ClearSimpleCollisionShapes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearSimpleCollisionShapes(bool bUpdateCollision)"
  },
  {
    "label": "SetTransientDeferCollisionUpdates()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTransientDeferCollisionUpdates(bool bEnabled)"
  },
  {
    "label": "InvalidatePhysicsData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InvalidatePhysicsData()"
  },
  {
    "label": "RebuildPhysicsData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RebuildPhysicsData()"
  },
  {
    "label": "UpdateLocalBounds()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateLocalBounds()"
  },
  {
    "label": "FinishPhysicsAsyncCook()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FinishPhysicsAsyncCook(bool bSuccess, UBodySetup* FinishedBodySetup)"
  },
  {
    "label": "SetBodySetup()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetBodySetup(UBodySetup* NewSetup)"
  },
  {
    "label": "NotifyMaterialSetUpdated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyMaterialSetUpdated()"
  },
  {
    "label": "ResetProxy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetProxy()"
  },
  {
    "label": "SetSceneProxyVerifyUsedMaterials()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSceneProxyVerifyUsedMaterials(bool bState)"
  },
  {
    "label": "InternalOnMeshUpdated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InternalOnMeshUpdated()"
  }
]