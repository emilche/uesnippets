[
  {
    "label": "FAudioEffectParameters",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAudioEffectParameters"
  },
  {
    "label": "FSubmixEffectReverbSettings",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSubmixEffectReverbSettings"
  },
  {
    "label": "FSubmixEffectReverb",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSubmixEffectReverb"
  },
  {
    "label": "USubmixEffectReverbPreset",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USubmixEffectReverbPreset"
  },
  {
    "label": "DECLARE_CYCLE_STAT_EXTERN()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" AudioEffect . h \" # include \" Curves / RichCurve . h \" # include \" AudioEffect . h \" # include \" Curves / RichCurve . h \" # include \" DSP / Amp . h \" # include \" DSP / ReverbFast . h \" # include \" DSP / BufferVectorOperations . h \" # include \" Sound / SoundEffectSubmix . h \" # include \" Stats / Stats . h \" # include \" AudioMixerSubmixEffectReverb . generated . h \" struct FAudioEffectParameters ;)",
    "insertText": "DECLARE_CYCLE_STAT_EXTERN(TEXT(\"Submix Reverb\"), STAT_AudioMixerSubmixReverb, STATGROUP_AudioMixer, AUDIOMIXER_API)"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "USTRUCT(BlueprintType)"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() UPROPERTY(EditAnywhere, BlueprintReadWrite, Category = EarlyReflections)"
  },
  {
    "label": "FSubmixEffectReverbSettings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FSubmixEffectReverbSettings() : bBypassEarlyReflections(false) , ReflectionsDelay(0.007f) , GainHF(0.89f) , ReflectionsGain(0.05f) , bBypassLateReflections(false) , LateDelay(0.1f) , DecayTime(1.49f) , Density(0.85f) , Diffusion(0.85f) , AirAbsorptionGainHF(0.994f) , DecayHFRatio(0.83f) , LateGain(1.26f) , Gain(0.0f) , WetLevel(0.3f) , DryLevel(0.0f) , bBypass(false)"
  },
  {
    "label": "FSubmixEffectReverb()",
    "kind": "Method",
    "detail": "Function (} } ; class FSubmixEffectReverb : public FSoundEffectSubmix { public :)",
    "insertText": "FSubmixEffectReverb()"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Init(const FSoundEffectSubmixInitData& InSampleRate)"
  },
  {
    "label": "OnPresetChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPresetChanged()"
  },
  {
    "label": "GetDesiredInputChannelCountOverride()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetDesiredInputChannelCountOverride()"
  },
  {
    "label": "SetParameters()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetParameters(const FAudioEffectParameters& InParameters)"
  },
  {
    "label": "SupportsDefaultReverb()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SupportsDefaultReverb()"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (TUniquePtr<Audio::FPlateReverbFast> PlateReverb ; Audio::TParams<Audio::FPlateReverbFastSettings> ReverbParams ; Audio::TParams<Audio::FWetDry> WetDryParams ; Audio::FWetDry CurrentWetDry ; Audio::FAlignedFloatBuffer WetInputBuffer ; FRichCurve DecayCurve ; float SampleRate = 1 . f ; } ;)",
    "insertText": "UCLASS(MinimalAPI)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: EFFECT_PRESET_METHODS(SubmixEffectReverb) UFUNCTION(BlueprintCallable, Category = \"Audio|Effects\") AUDIOMIXER_API void SetSettings(const FSubmixEffectReverbSettings& InSettings)"
  }
]