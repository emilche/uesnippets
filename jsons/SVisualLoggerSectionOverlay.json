[
  {
    "label": "FPaintArgs",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPaintArgs"
  },
  {
    "label": "FSlateWindowElementList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateWindowElementList"
  },
  {
    "label": "FVisualLoggerTimeSliderController",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVisualLoggerTimeSliderController"
  },
  {
    "label": "SVisualLoggerSectionOverlay",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SVisualLoggerSectionOverlay"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Misc / Attribute . h \" # include \" Input / Reply . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Widgets / SCompoundWidget . h \" class FPaintArgs ; class FSlateWindowElementList ; class FVisualLoggerTimeSliderController ; class SVisualLoggerSectionOverlay : public SCompoundWidget { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SVisualLoggerSectionOverlay ) : _DisplayTickLines( true ) , _DisplayScrubPosition( false)"
  },
  {
    "label": "SLATE_ATTRIBUTE()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_ATTRIBUTE(bool, DisplayTickLines ) SLATE_ATTRIBUTE( bool, DisplayScrubPosition ) SLATE_END_ARGS() void Construct(const FArguments& InArgs, TSharedRef<class FVisualLoggerTimeSliderController> InTimeSliderController)"
  },
  {
    "label": "OnPaint()",
    "kind": "Method",
    "detail": "Function (bDisplayScrubPosition = InArgs . _DisplayScrubPosition ; bDisplayTickLines = InArgs . _DisplayTickLines ; TimeSliderController = InTimeSliderController ; } private : int32)",
    "insertText": "OnPaint(const FPaintArgs& Args, const FGeometry& AllottedGeometry, const FSlateRect& MyCullingRect, FSlateWindowElementList& OutDrawElements, int32 LayerId, const FWidgetStyle& InWidgetStyle, bool bParentEnabled)"
  },
  {
    "label": "OnMouseButtonDown()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnMouseButtonDown(const FGeometry& MyGeometry, const FPointerEvent& MouseEvent)"
  },
  {
    "label": "OnMouseButtonUp()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnMouseButtonUp(const FGeometry& MyGeometry, const FPointerEvent& MouseEvent)"
  },
  {
    "label": "OnMouseMove()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnMouseMove(const FGeometry& MyGeometry, const FPointerEvent& MouseEvent)"
  },
  {
    "label": "OnMouseWheel()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnMouseWheel(const FGeometry& MyGeometry, const FPointerEvent& MouseEvent)"
  }
]