[
  {
    "label": "LLVMContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "LLVMContext"
  },
  {
    "label": "Type",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Type"
  },
  {
    "label": "EVT",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "EVT"
  },
  {
    "label": "compareRawBits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "compareRawBits"
  },
  {
    "label": "EVT()",
    "kind": "Method",
    "detail": "Function (# ifndef LLVM_CODEGEN_VALUETYPES_H # define LLVM_CODEGEN_VALUETYPES_H # include \" llvm / CodeGen / MachineValueType . h \" # include<cassert> # include<string> namespace llvm { class LLVMContext ; class Type ; struct EVT { private : MVT V ; Type* LLVMTy ; public : LLVM_CONSTEXPR)",
    "insertText": "EVT() : V(MVT::INVALID_SIMPLE_VALUE_TYPE), LLVMTy(nullptr)"
  },
  {
    "label": "EVT()",
    "kind": "Method",
    "detail": "Function (} LLVM_CONSTEXPR)",
    "insertText": "EVT(MVT::SimpleValueType SVT) : V(SVT), LLVMTy(nullptr)"
  },
  {
    "label": "EVT()",
    "kind": "Method",
    "detail": "Function (} LLVM_CONSTEXPR)",
    "insertText": "EVT(MVT S) : V(S), LLVMTy(nullptr)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "operator(EVT VT)"
  },
  {
    "label": "getIntegerVT()",
    "kind": "Method",
    "detail": "Function (} EVT)",
    "insertText": "getIntegerVT(LLVMContext &Context, unsigned BitWidth)"
  },
  {
    "label": "getIntegerVT()",
    "kind": "Method",
    "detail": "Function (MVT M =)",
    "insertText": "getIntegerVT(BitWidth)"
  },
  {
    "label": "getVectorVT()",
    "kind": "Method",
    "detail": "Function (} EVT)",
    "insertText": "getVectorVT(LLVMContext &Context, EVT VT, unsigned NumElements)"
  },
  {
    "label": "getVectorVT()",
    "kind": "Method",
    "detail": "Function (MVT M =)",
    "insertText": "getVectorVT(VT.V, NumElements)"
  },
  {
    "label": "changeVectorElementTypeToInteger()",
    "kind": "Method",
    "detail": "Function (} EVT)",
    "insertText": "changeVectorElementTypeToInteger()"
  },
  {
    "label": "getSimpleVT()",
    "kind": "Method",
    "detail": "Function (MVT EltTy =)",
    "insertText": "getSimpleVT().getVectorElementType()"
  },
  {
    "label": "getSizeInBits()",
    "kind": "Method",
    "detail": "Function (unsigned BitWidth = EltTy .)",
    "insertText": "getSizeInBits()"
  },
  {
    "label": "getVectorVT()",
    "kind": "Method",
    "detail": "Function (MVT VecTy =)",
    "insertText": "getVectorVT(IntTy, getVectorNumElements())"
  },
  {
    "label": "assert()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "assert(VecTy.SimpleTy >= 0 && \"Simple vector VT not representable by simple integer vector VT!\")"
  },
  {
    "label": "isFloatingPoint()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "isFloatingPoint()"
  },
  {
    "label": "isInteger()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "isInteger()"
  },
  {
    "label": "isVector()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "isVector()"
  },
  {
    "label": "is16BitVector()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "is16BitVector()"
  },
  {
    "label": "is32BitVector()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "is32BitVector()"
  },
  {
    "label": "is64BitVector()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "is64BitVector()"
  },
  {
    "label": "is128BitVector()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "is128BitVector()"
  },
  {
    "label": "is256BitVector()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "is256BitVector()"
  },
  {
    "label": "is512BitVector()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "is512BitVector()"
  },
  {
    "label": "is1024BitVector()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "is1024BitVector()"
  },
  {
    "label": "isOverloaded()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "isOverloaded()"
  },
  {
    "label": "isByteSized()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "isByteSized()"
  },
  {
    "label": "isRound()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "isRound()"
  },
  {
    "label": "bitsEq()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "bitsEq(EVT VT)"
  },
  {
    "label": "bitsGT()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "bitsGT(EVT VT)"
  },
  {
    "label": "bitsGE()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "bitsGE(EVT VT)"
  },
  {
    "label": "bitsLT()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "bitsLT(EVT VT)"
  },
  {
    "label": "bitsLE()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "bitsLE(EVT VT)"
  },
  {
    "label": "getSimpleVT()",
    "kind": "Method",
    "detail": "Function (} MVT)",
    "insertText": "getSimpleVT()"
  },
  {
    "label": "assert()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "assert(isSimple() && \"Expected a SimpleValueType!\")"
  },
  {
    "label": "getVectorElementType()",
    "kind": "Method",
    "detail": "Function (} EVT)",
    "insertText": "getVectorElementType()"
  },
  {
    "label": "assert()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "assert(isVector() && \"Invalid vector type!\")"
  },
  {
    "label": "getVectorNumElements()",
    "kind": "Method",
    "detail": "Function (} unsigned)",
    "insertText": "getVectorNumElements()"
  },
  {
    "label": "getScalarSizeInBits()",
    "kind": "Method",
    "detail": "Function (} unsigned)",
    "insertText": "getScalarSizeInBits()"
  },
  {
    "label": "getStoreSize()",
    "kind": "Method",
    "detail": "Function (} unsigned)",
    "insertText": "getStoreSize()"
  },
  {
    "label": "getStoreSizeInBits()",
    "kind": "Method",
    "detail": "Function (} unsigned)",
    "insertText": "getStoreSizeInBits()"
  },
  {
    "label": "getRoundIntegerType()",
    "kind": "Method",
    "detail": "Function (} EVT)",
    "insertText": "getRoundIntegerType(LLVMContext &Context)"
  },
  {
    "label": "assert()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "assert(isInteger() && !isVector() && \"Invalid integer type!\")"
  },
  {
    "label": "getHalfSizedIntegerVT()",
    "kind": "Method",
    "detail": "Function (} EVT)",
    "insertText": "getHalfSizedIntegerVT(LLVMContext &Context)"
  },
  {
    "label": "EVT()",
    "kind": "Method",
    "detail": "Function (EVT HalfVT =)",
    "insertText": "EVT((MVT::SimpleValueType)IntVT)"
  },
  {
    "label": "getIntegerVT()",
    "kind": "Method",
    "detail": "Function (} return)",
    "insertText": "getIntegerVT(Context, (EVTSize + 1) / 2)"
  },
  {
    "label": "widenIntegerVectorElementType()",
    "kind": "Method",
    "detail": "Function (} EVT)",
    "insertText": "widenIntegerVectorElementType(LLVMContext &Context)"
  },
  {
    "label": "getIntegerVT()",
    "kind": "Method",
    "detail": "Function (EltVT =)",
    "insertText": "getIntegerVT(Context, 2 * EltVT.getSizeInBits())"
  },
  {
    "label": "isPow2VectorType()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "isPow2VectorType()"
  },
  {
    "label": "getPow2VectorType()",
    "kind": "Method",
    "detail": "Function (} EVT)",
    "insertText": "getPow2VectorType(LLVMContext &Context)"
  },
  {
    "label": "Log2_32_Ceil()",
    "kind": "Method",
    "detail": "Function (unsigned Pow2NElts = 1<<)",
    "insertText": "Log2_32_Ceil(NElts)"
  },
  {
    "label": "getEVTString()",
    "kind": "Method",
    "detail": "Function (} else { return* this ; } } std::string)",
    "insertText": "getEVTString()"
  },
  {
    "label": "getTypeForEVT()",
    "kind": "Method",
    "detail": "Function (Type*)",
    "insertText": "getTypeForEVT(LLVMContext &Context)"
  },
  {
    "label": "getEVT()",
    "kind": "Method",
    "detail": "Function (EVT)",
    "insertText": "getEVT(Type *Ty, bool HandleUnknown = false)"
  },
  {
    "label": "getRawBits()",
    "kind": "Method",
    "detail": "Function (intptr_t)",
    "insertText": "getRawBits()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} struct compareRawBits { bool)",
    "insertText": "operator()(EVT L, EVT R)"
  },
  {
    "label": "getExtendedIntegerVT()",
    "kind": "Method",
    "detail": "Function (EVT)",
    "insertText": "getExtendedIntegerVT(LLVMContext &C, unsigned BitWidth)"
  },
  {
    "label": "getExtendedVectorVT()",
    "kind": "Method",
    "detail": "Function (EVT)",
    "insertText": "getExtendedVectorVT(LLVMContext &C, EVT VT, unsigned NumElements)"
  },
  {
    "label": "isExtendedFloatingPoint()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "isExtendedFloatingPoint()"
  },
  {
    "label": "isExtendedInteger()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "isExtendedInteger()"
  },
  {
    "label": "isExtendedVector()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "isExtendedVector()"
  },
  {
    "label": "isExtended16BitVector()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "isExtended16BitVector()"
  },
  {
    "label": "isExtended32BitVector()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "isExtended32BitVector()"
  },
  {
    "label": "isExtended64BitVector()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "isExtended64BitVector()"
  },
  {
    "label": "isExtended128BitVector()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "isExtended128BitVector()"
  },
  {
    "label": "isExtended256BitVector()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "isExtended256BitVector()"
  },
  {
    "label": "isExtended512BitVector()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "isExtended512BitVector()"
  },
  {
    "label": "isExtended1024BitVector()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "isExtended1024BitVector()"
  },
  {
    "label": "getExtendedVectorElementType()",
    "kind": "Method",
    "detail": "Function (EVT)",
    "insertText": "getExtendedVectorElementType()"
  },
  {
    "label": "getExtendedVectorNumElements()",
    "kind": "Method",
    "detail": "Function (unsigned)",
    "insertText": "getExtendedVectorNumElements()"
  },
  {
    "label": "getExtendedSizeInBits()",
    "kind": "Method",
    "detail": "Function (unsigned)",
    "insertText": "getExtendedSizeInBits()"
  }
]