[
  {
    "label": "FbxCameraManipulationState",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FbxCameraManipulationState"
  },
  {
    "label": "FBXSDK_DLL",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBXSDK_DLL"
  },
  {
    "label": "EAction",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EAction"
  },
  {
    "label": "FBXSDK_OBJECT_DECLARE()",
    "kind": "Method",
    "detail": "Function (# ifndef _FBXSDK_UTILS_MANIPULATORS_H_ # define _FBXSDK_UTILS_MANIPULATORS_H_ # include<fbxsdk / fbxsdk_def . h> # include<fbxsdk / core / fbxobject . h> # include<fbxsdk / core / math / fbxvector2 . h> # include<fbxsdk / core / math / fbxvector4 . h> # include<fbxsdk / scene / geometry / fbxcamera . h> # include<fbxsdk / fbxsdk_nsbegin . h> class FbxCameraManipulationState ; class FBXSDK_DLL FbxCameraManipulator : public FbxObject {)",
    "insertText": "FBXSDK_OBJECT_DECLARE(FbxCameraManipulator, FbxObject)"
  },
  {
    "label": "Begin()",
    "kind": "Method",
    "detail": "Function (public : enum EAction { eNone,eOrbit,eDolly,ePan,eFreePan } ; void)",
    "insertText": "Begin(EAction pAction, float pX, float pY)"
  },
  {
    "label": "Notify()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Notify(float pX, float pY, float pScale=0)"
  },
  {
    "label": "End()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "End()"
  },
  {
    "label": "Update()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Update(const FbxTime& pTimeDelta=FBXSDK_TIME_ZERO)"
  },
  {
    "label": "Action()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Action(EAction pAction, float pX, float pY, float pScale=0)"
  },
  {
    "label": "GetCurrentAction()",
    "kind": "Method",
    "detail": "Function (EAction)",
    "insertText": "GetCurrentAction()"
  },
  {
    "label": "FrameAll()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FrameAll(const FbxTime& pTime=FBXSDK_TIME_INFINITE)"
  },
  {
    "label": "FrameSelected()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FrameSelected(const FbxTime& pTime=FBXSDK_TIME_INFINITE)"
  },
  {
    "label": "FrameScreenPosition()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FrameScreenPosition(float pX, float pY, bool pCulling=false, const FbxTime& pTime=FBXSDK_TIME_INFINITE)"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (FbxPropertyT<FbxReference> Camera ; FbxPropertyT<FbxFloat> ViewportWidth ; FbxPropertyT<FbxFloat> ViewportHeight ; FbxPropertyT<FbxBool> Smooth ; FbxPropertyT<FbxDouble> SmoothSpeed ; FbxPropertyT<FbxBool> InvertX ; FbxPropertyT<FbxBool> InvertY ; FbxPropertyT<FbxBool> Restore ; # ifndef DOXYGEN_SHOULD_SKIP_THIS protected : void)",
    "insertText": "Construct(const FbxObject* pFrom)"
  },
  {
    "label": "Destruct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Destruct(bool pRecursive)"
  },
  {
    "label": "ConstructProperties()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConstructProperties(bool pForceSet)"
  },
  {
    "label": "ConnectNotify()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ConnectNotify(const FbxConnectEvent& pEvent)"
  },
  {
    "label": "PropertyNotify()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PropertyNotify(EPropertyNotifyType pType, FbxProperty& pProperty)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "Reset()"
  },
  {
    "label": "GetCamera()",
    "kind": "Method",
    "detail": "Function (FbxCamera*)",
    "insertText": "GetCamera()"
  },
  {
    "label": "GetCameraNode()",
    "kind": "Method",
    "detail": "Function (FbxNode*)",
    "insertText": "GetCameraNode()"
  },
  {
    "label": "GetCameraLookAtNode()",
    "kind": "Method",
    "detail": "Function (FbxNode*)",
    "insertText": "GetCameraLookAtNode()"
  },
  {
    "label": "GetCameraTargetUpNode()",
    "kind": "Method",
    "detail": "Function (FbxNode*)",
    "insertText": "GetCameraTargetUpNode()"
  },
  {
    "label": "GetCameraPosition()",
    "kind": "Method",
    "detail": "Function (FbxVector4)",
    "insertText": "GetCameraPosition()"
  },
  {
    "label": "SetCameraPosition()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCameraPosition(const FbxVector4& pPosition)"
  },
  {
    "label": "GetCameraRotation()",
    "kind": "Method",
    "detail": "Function (FbxVector4)",
    "insertText": "GetCameraRotation()"
  },
  {
    "label": "SetCameraRotation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCameraRotation(const FbxVector4& pRotation)"
  },
  {
    "label": "GetCameraLookAtPosition()",
    "kind": "Method",
    "detail": "Function (FbxVector4)",
    "insertText": "GetCameraLookAtPosition()"
  },
  {
    "label": "SetCameraLookAtPosition()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCameraLookAtPosition(const FbxVector4& pPosition)"
  },
  {
    "label": "GetCameraTargetUpPosition()",
    "kind": "Method",
    "detail": "Function (FbxVector4)",
    "insertText": "GetCameraTargetUpPosition()"
  },
  {
    "label": "SetCameraTargetUpPosition()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCameraTargetUpPosition(const FbxVector4& pPosition)"
  },
  {
    "label": "GetCameraRotationMatrix()",
    "kind": "Method",
    "detail": "Function (FbxAMatrix)",
    "insertText": "GetCameraRotationMatrix()"
  },
  {
    "label": "SetCameraRotationMatrix()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCameraRotationMatrix(const FbxAMatrix& pRM)"
  },
  {
    "label": "ComputeRotationMatrix()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ComputeRotationMatrix(FbxAMatrix& pRM, const FbxVector4& pEye, const FbxVector4& pLookAt, const FbxVector4& pUpVector)"
  },
  {
    "label": "UpdateCameraRotation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateCameraRotation()"
  },
  {
    "label": "FrameObjects()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "FrameObjects(bool pSelected, const FbxTime& pTime)"
  },
  {
    "label": "ComputePositionToFitBBoxInFrustum()",
    "kind": "Method",
    "detail": "Function (FbxVector4)",
    "insertText": "ComputePositionToFitBBoxInFrustum(const FbxVector4& pBBoxMin, const FbxVector4& pBBoxMax, const FbxVector4& pBBoxCenter, const FbxVector4& pCameraPosition, const FbxAMatrix& pCameraRM, const FbxTime& pTime)"
  }
]