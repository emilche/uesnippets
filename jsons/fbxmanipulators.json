[
  {
    "label": "FbxCameraManipulationState",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FbxCameraManipulationState"
  },
  {
    "label": "can",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "can"
  },
  {
    "label": "FBXSDK_DLL",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBXSDK_DLL"
  },
  {
    "label": "EAction",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EAction"
  },
  {
    "label": "Begin()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Begin(EAction pAction, float pX, float pY)"
  },
  {
    "label": "Notify()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Notify(float pX, float pY, float pScale=0)"
  },
  {
    "label": "End()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "End()"
  },
  {
    "label": "Update()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Update(const FbxTime& pTimeDelta=FBXSDK_TIME_ZERO)"
  },
  {
    "label": "Action()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Action(EAction pAction, float pX, float pY, float pScale=0)"
  },
  {
    "label": "FrameAll()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FrameAll(const FbxTime& pTime=FBXSDK_TIME_INFINITE)"
  },
  {
    "label": "FrameSelected()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FrameSelected(const FbxTime& pTime=FBXSDK_TIME_INFINITE)"
  },
  {
    "label": "FrameScreenPosition()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FrameScreenPosition(float pX, float pY, bool pCulling=false, const FbxTime& pTime=FBXSDK_TIME_INFINITE)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "SetCameraPosition()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCameraPosition(const FbxVector4& pPosition)"
  },
  {
    "label": "SetCameraRotation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCameraRotation(const FbxVector4& pRotation)"
  },
  {
    "label": "SetCameraLookAtPosition()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCameraLookAtPosition(const FbxVector4& pPosition)"
  },
  {
    "label": "SetCameraTargetUpPosition()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCameraTargetUpPosition(const FbxVector4& pPosition)"
  },
  {
    "label": "SetCameraRotationMatrix()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCameraRotationMatrix(const FbxAMatrix& pRM)"
  },
  {
    "label": "ComputeRotationMatrix()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ComputeRotationMatrix(FbxAMatrix& pRM, const FbxVector4& pEye, const FbxVector4& pLookAt, const FbxVector4& pUpVector)"
  },
  {
    "label": "UpdateCameraRotation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateCameraRotation()"
  },
  {
    "label": "FrameObjects()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "FrameObjects(bool pSelected, const FbxTime& pTime)"
  },
  {
    "label": "ComputePositionToFitBBoxInFrustum()",
    "kind": "Method",
    "detail": "Function (FbxVector4)",
    "insertText": "ComputePositionToFitBBoxInFrustum(const FbxVector4& pBBoxMin, const FbxVector4& pBBoxMax, const FbxVector4& pBBoxCenter, const FbxVector4& pCameraPosition, const FbxAMatrix& pCameraRM, const FbxTime& pTime)"
  }
]