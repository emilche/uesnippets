[
  {
    "label": "SPackageTableTreeView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SPackageTableTreeView"
  },
  {
    "label": "FCookProfilerTabs",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCookProfilerTabs"
  },
  {
    "label": "FCookProfilerManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCookProfilerManager"
  },
  {
    "label": "FCookProfilerManager()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" Containers / Ticker . h \" # include \" Framework / Commands / UICommandList . h \" # include \" Templates / SharedPointer . h \" # include \" Insights / InsightsManager . h \" # include \" Insights / IUnrealInsightsModule . h \" namespace UE::Insights::CookProfiler { class SPackageTableTreeView ; struct FCookProfilerTabs { const FName PackageTableTreeViewTabID ; } ; class FCookProfilerManager : public TSharedFromThis<FCookProfilerManager>,public IInsightsComponent { public :)",
    "insertText": "FCookProfilerManager(TSharedRef<FUICommandList> InCommandList)"
  },
  {
    "label": "FCookProfilerManager()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FCookProfilerManager()"
  },
  {
    "label": "CreateInstance()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FCookProfilerManager>)",
    "insertText": "CreateInstance()"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FCookProfilerManager>)",
    "insertText": "Get()"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Initialize(IUnrealInsightsModule& InsightsModule)"
  },
  {
    "label": "Shutdown()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Shutdown()"
  },
  {
    "label": "RegisterMajorTabs()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterMajorTabs(IUnrealInsightsModule& InsightsModule)"
  },
  {
    "label": "UnregisterMajorTabs()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterMajorTabs()"
  },
  {
    "label": "OnWindowClosedEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnWindowClosedEvent()"
  },
  {
    "label": "SpawnTab_PackageTableTreeView()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SDockTab>)",
    "insertText": "SpawnTab_PackageTableTreeView(const FSpawnTabArgs& Args)"
  },
  {
    "label": "CanSpawnTab_PackageTableTreeView()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanSpawnTab_PackageTableTreeView(const FSpawnTabArgs& Args)"
  },
  {
    "label": "OnPackageTableTreeViewTabClosed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPackageTableTreeViewTabClosed(TSharedRef<SDockTab> TabBeingClosed)"
  },
  {
    "label": "IsAvailable()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsAvailable()"
  },
  {
    "label": "Tick()",
    "kind": "Method",
    "detail": "Function (private : bool)",
    "insertText": "Tick(float DeltaTime)"
  },
  {
    "label": "RegisterTimingProfilerLayoutExtensions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterTimingProfilerLayoutExtensions(FInsightsMajorTabExtender& InOutExtender)"
  }
]