[
  {
    "label": "IMovieScenePlayer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IMovieScenePlayer"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "FFrame",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFrame"
  },
  {
    "label": "FMovieSceneSequenceHierarchy",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneSequenceHierarchy"
  },
  {
    "label": "FMovieSceneSequenceID",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneSequenceID"
  },
  {
    "label": "UMovieScene3DConstraintSection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieScene3DConstraintSection"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" Containers / Map . h \" # include \" CoreMinimal . h \" # include \" Curves / KeyHandle . h \" # include \" Misc / Guid . h \" # include \" MovieSceneObjectBindingID . h \" # include \" MovieSceneSection . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / UObjectGlobals . h \" # include \" MovieScene3DConstraintSection . generated . h \" class IMovieScenePlayer ; class UObject ; struct FFrame ; struct FMovieSceneSequenceHierarchy ; struct FMovieSceneSequenceID ;)",
    "insertText": "UCLASS(MinimalAPI)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() public: UFUNCTION(BlueprintPure, Category = \"Sequencer|Section\") const FMovieSceneObjectBindingID& GetConstraintBindingID()"
  },
  {
    "label": "OnBindingIDsUpdated()",
    "kind": "Method",
    "detail": "Function (ConstraintBindingID = InConstraintBindingID ; } public : void)",
    "insertText": "OnBindingIDsUpdated(const TMap<UE::MovieScene::FFixedObjectBindingID, UE::MovieScene::FFixedObjectBindingID>& OldFixedToNewFixedMap, FMovieSceneSequenceID LocalSequenceID, TSharedRef<UE::MovieScene::FSharedPlaybackState> SharedPlaybackState)"
  },
  {
    "label": "GetReferencedBindings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetReferencedBindings(TArray<FGuid>& OutBindings)"
  },
  {
    "label": "PostLoad()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostLoad()"
  }
]