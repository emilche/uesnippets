[
  {
    "label": "FilePath",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FilePath"
  },
  {
    "label": "ScopedPathOverride",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ScopedPathOverride"
  },
  {
    "label": "ScopedPathOverride()",
    "kind": "Method",
    "detail": "Function (# ifndef BASE_TEST_SCOPED_PATH_OVERRIDE_H_ # define BASE_TEST_SCOPED_PATH_OVERRIDE_H_ # include \" base / files / scoped_temp_dir . h \" # include \" third_party / abseil - cpp / absl / types / optional . h \" namespace base { class FilePath ; class ScopedPathOverride { public :)",
    "insertText": "ScopedPathOverride(int key)"
  },
  {
    "label": "ScopedPathOverride()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ScopedPathOverride(int key, const FilePath& dir)"
  },
  {
    "label": "ScopedPathOverride()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ScopedPathOverride(int key, const FilePath& path, bool is_absolute, bool create)"
  },
  {
    "label": "ScopedPathOverride()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ScopedPathOverride(const ScopedPathOverride&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (ScopedPathOverride&)",
    "insertText": "operator(const ScopedPathOverride&)"
  },
  {
    "label": "ScopedPathOverride()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "ScopedPathOverride()"
  },
  {
    "label": "SaveOriginal()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "SaveOriginal()"
  }
]