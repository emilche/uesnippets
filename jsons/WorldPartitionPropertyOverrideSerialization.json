[
  {
    "label": "UWorldPartitionPropertyOverridePolicy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UWorldPartitionPropertyOverridePolicy"
  },
  {
    "label": "FWorldPartitionPropertyOverrideArchive",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWorldPartitionPropertyOverrideArchive"
  },
  {
    "label": "FWorldPartitionPropertyOverrideWriter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWorldPartitionPropertyOverrideWriter"
  },
  {
    "label": "FWorldPartitionPropertyOverrideReader",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWorldPartitionPropertyOverrideReader"
  },
  {
    "label": "FWorldPartitionPropertyOverrideArchive()",
    "kind": "Method",
    "detail": "Function (# pragma once # if WITH_EDITOR # include \" CoreFwd . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / UObjectGlobals . h \" # include \" UObject / Object . h \" # include \" Serialization / NameAsStringProxyArchive . h \" # include \" Serialization / MemoryReader . h \" # include \" Serialization / MemoryWriter . h \" # include \" WorldPartition / WorldPartitionPropertyOverride . h \" class UWorldPartitionPropertyOverridePolicy ; class FWorldPartitionPropertyOverrideArchive : public FNameAsStringProxyArchive { public :)",
    "insertText": "FWorldPartitionPropertyOverrideArchive(FArchive& InArchive, FPropertyOverrideReferenceTable& InReferenceTable)"
  },
  {
    "label": "ShouldSkipProperty()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldSkipProperty(const FProperty* InProperty)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FArchive&)",
    "insertText": "operator(FLazyObjectPtr& Value)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FArchive&)",
    "insertText": "operator(UObject*& Obj)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FArchive&)",
    "insertText": "operator(FWeakObjectPtr& Obj)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FArchive&)",
    "insertText": "operator(FSoftObjectPtr& Value)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FArchive&)",
    "insertText": "operator(FSoftObjectPath& Value)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FArchive&)",
    "insertText": "operator(FObjectPtr& Obj)"
  },
  {
    "label": "ReadSoftObjectPath()",
    "kind": "Method",
    "detail": "Function (private : UWorldPartitionPropertyOverridePolicy* PropertyOverridePolicy = nullptr ; FPropertyOverrideReferenceTable& ReferenceTable ; FSoftObjectPath)",
    "insertText": "ReadSoftObjectPath()"
  },
  {
    "label": "WriteSoftObjectPath()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WriteSoftObjectPath(FSoftObjectPath SoftObjectPath)"
  },
  {
    "label": "FWorldPartitionPropertyOverrideWriter()",
    "kind": "Method",
    "detail": "Function (} ; class FWorldPartitionPropertyOverrideWriter : public FMemoryWriter { public :)",
    "insertText": "FWorldPartitionPropertyOverrideWriter(TArray<uint8, TSizedDefaultAllocator<32>>& InBytes)"
  },
  {
    "label": "FWorldPartitionPropertyOverrideReader()",
    "kind": "Method",
    "detail": "Function (} ; class FWorldPartitionPropertyOverrideReader : public FMemoryReader { public :)",
    "insertText": "FWorldPartitionPropertyOverrideReader(const TArray<uint8>& InBytes)"
  }
]