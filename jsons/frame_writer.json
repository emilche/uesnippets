[
  {
    "label": "FrameWriter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FrameWriter"
  },
  {
    "label": "YuvFrameWriterImpl",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "YuvFrameWriterImpl"
  },
  {
    "label": "Y4mFrameWriterImpl",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Y4mFrameWriterImpl"
  },
  {
    "label": "JpegFrameWriter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "JpegFrameWriter"
  },
  {
    "label": "FrameWriter()",
    "kind": "Method",
    "detail": "Function (# ifndef TEST_TESTSUPPORT_FRAME_WRITER_H_ # define TEST_TESTSUPPORT_FRAME_WRITER_H_ # include<stdio . h> # include<string> # include \" api / video / video_frame . h \" namespace webrtc { namespace test { class FrameWriter { public : ~)",
    "insertText": "FrameWriter()"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "Init()"
  },
  {
    "label": "WriteFrame()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "WriteFrame(const uint8_t* frame_buffer)"
  },
  {
    "label": "Close()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Close()"
  },
  {
    "label": "FrameLength()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "FrameLength()"
  },
  {
    "label": "YuvFrameWriterImpl()",
    "kind": "Method",
    "detail": "Function (} ; class YuvFrameWriterImpl : public FrameWriter { public :)",
    "insertText": "YuvFrameWriterImpl(std::string output_filename, int width, int height)"
  },
  {
    "label": "YuvFrameWriterImpl()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "YuvFrameWriterImpl()"
  },
  {
    "label": "Y4mFrameWriterImpl()",
    "kind": "Method",
    "detail": "Function (protected : const std::string output_filename_ ; size_t frame_length_in_bytes_ ; const int width_ ; const int height_ ; FILE* output_file_ ; } ; class Y4mFrameWriterImpl : public YuvFrameWriterImpl { public :)",
    "insertText": "Y4mFrameWriterImpl(std::string output_filename, int width, int height, int frame_rate)"
  },
  {
    "label": "Y4mFrameWriterImpl()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "Y4mFrameWriterImpl()"
  },
  {
    "label": "JpegFrameWriter()",
    "kind": "Method",
    "detail": "Function (private : const int frame_rate_ ; } ; class JpegFrameWriter { public :)",
    "insertText": "JpegFrameWriter(const std::string& output_filename)"
  },
  {
    "label": "WriteFrame()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "WriteFrame(const VideoFrame& input_frame, int quality)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# if !)",
    "insertText": "defined(WEBRTC_IOS)"
  }
]