[
  {
    "label": "FAnimGraphNodeDetails",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAnimGraphNodeDetails"
  },
  {
    "label": "FBlueprintActionDatabaseRegistrar",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBlueprintActionDatabaseRegistrar"
  },
  {
    "label": "FCanvas",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCanvas"
  },
  {
    "label": "FCompilerResultsLog",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCompilerResultsLog"
  },
  {
    "label": "FPrimitiveDrawInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPrimitiveDrawInterface"
  },
  {
    "label": "IDetailLayoutBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDetailLayoutBuilder"
  },
  {
    "label": "UAnimGraphNode_Base",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimGraphNode_Base"
  },
  {
    "label": "UEdGraphSchema",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEdGraphSchema"
  },
  {
    "label": "USkeletalMeshComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USkeletalMeshComponent"
  },
  {
    "label": "IAnimBlueprintGeneratedClassCompiledData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IAnimBlueprintGeneratedClassCompiledData"
  },
  {
    "label": "IAnimBlueprintCompilationContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IAnimBlueprintCompilationContext"
  },
  {
    "label": "IAnimBlueprintCopyTermDefaultsContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IAnimBlueprintCopyTermDefaultsContext"
  },
  {
    "label": "IAnimBlueprintNodeCopyTermDefaultsContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IAnimBlueprintNodeCopyTermDefaultsContext"
  },
  {
    "label": "IAnimBlueprintNodeOverrideAssetsContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IAnimBlueprintNodeOverrideAssetsContext"
  },
  {
    "label": "UAnimBlueprintExtension",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimBlueprintExtension"
  },
  {
    "label": "UAnimGraphNodeBinding",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimGraphNodeBinding"
  },
  {
    "label": "FPoseLinkMappingRecord",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPoseLinkMappingRecord"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FAnimGraphNodePropertyBinding",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimGraphNodePropertyBinding"
  },
  {
    "label": "ANIMGRAPH_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ANIMGRAPH_API"
  },
  {
    "label": "FSearchTagDataPair",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSearchTagDataPair"
  },
  {
    "label": "FKismetCompilerContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FKismetCompilerContext"
  },
  {
    "label": "AssetType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AssetType"
  },
  {
    "label": "FEditorModeTools",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEditorModeTools"
  },
  {
    "label": "FAnimNode_Base",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimNode_Base"
  },
  {
    "label": "UPoseWatch",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPoseWatch"
  },
  {
    "label": "FAnimPropertyBindingWidgetArgs",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimPropertyBindingWidgetArgs"
  },
  {
    "label": "FAnimBlueprintCompilerContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAnimBlueprintCompilerContext"
  },
  {
    "label": "UAnimBlueprintExtension_Base",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimBlueprintExtension_Base"
  },
  {
    "label": "SAnimationGraphNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SAnimationGraphNode"
  },
  {
    "label": "UAnimationGraphSchema",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimationGraphSchema"
  },
  {
    "label": "TNodeType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TNodeType"
  },
  {
    "label": "MakeFromArrayEntry()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / UnrealType . h \" # include \" Animation / AnimationAsset . h \" # include \" Animation / AnimBlueprint . h \" # include \" Animation / AnimBlueprintGeneratedClass . h \" # include \" Animation / AnimNodeBase . h \" # include \" Editor . h \" # include \" IPropertyAccessEditor . h \" # include \" K2Node . h \" # include \" Engine / MemberReference . h \" # include \" AnimGraphNode_Base . generated . h \" class FAnimGraphNodeDetails ; class FBlueprintActionDatabaseRegistrar ; class FCanvas ; class FCompilerResultsLog ; class FPrimitiveDrawInterface ; class IDetailLayoutBuilder ; class UAnimGraphNode_Base ; class UEdGraphSchema ; class USkeletalMeshComponent ; class IAnimBlueprintGeneratedClassCompiledData ; class IAnimBlueprintCompilationContext ; class IAnimBlueprintCopyTermDefaultsContext ; class IAnimBlueprintNodeCopyTermDefaultsContext ; class IAnimBlueprintNodeOverrideAssetsContext ; class UAnimBlueprintExtension ; class UAnimGraphNodeBinding ; struct FPoseLinkMappingRecord { public : FPoseLinkMappingRecord)",
    "insertText": "MakeFromArrayEntry(UAnimGraphNode_Base* LinkingNode, UAnimGraphNode_Base* LinkedNode, FArrayProperty* ArrayProperty, int32 ArrayIndex)"
  },
  {
    "label": "MakeFromMember()",
    "kind": "Method",
    "detail": "Function (FPoseLinkMappingRecord Result ; Result . LinkingNode = LinkingNode ; Result . LinkedNode = LinkedNode ; Result . ChildProperty = ArrayProperty ; Result . ChildPropertyIndex = ArrayIndex ; return Result ; } FPoseLinkMappingRecord)",
    "insertText": "MakeFromMember(UAnimGraphNode_Base* LinkingNode, UAnimGraphNode_Base* LinkedNode, FStructProperty* MemberProperty)"
  },
  {
    "label": "MakeInvalid()",
    "kind": "Method",
    "detail": "Function (FPoseLinkMappingRecord Result ; Result . LinkingNode = LinkingNode ; Result . LinkedNode = LinkedNode ; Result . ChildProperty = MemberProperty ; Result . ChildPropertyIndex = INDEX_NONE ; return Result ; } FPoseLinkMappingRecord)",
    "insertText": "MakeInvalid()"
  },
  {
    "label": "IsValid()",
    "kind": "Method",
    "detail": "Function (FPoseLinkMappingRecord Result ; return Result ; } bool)",
    "insertText": "IsValid()"
  },
  {
    "label": "FPoseLinkMappingRecord()",
    "kind": "Method",
    "detail": "Function (protected :)",
    "insertText": "FPoseLinkMappingRecord() : LinkedNode(nullptr) , LinkingNode(nullptr) , ChildProperty(nullptr) , ChildPropertyIndex(INDEX_NONE)"
  },
  {
    "label": "UENUM()",
    "kind": "Method",
    "detail": "Function (} protected : UAnimGraphNode_Base* LinkedNode ; UAnimGraphNode_Base* LinkingNode ; FProperty* ChildProperty ; int32 ChildPropertyIndex ; } ;)",
    "insertText": "UENUM()"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (None,Property,Function,} ;)",
    "insertText": "USTRUCT()"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() FAnimGraphNodePropertyBinding()"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "UCLASS(Abstract, BlueprintType)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() UPROPERTY(EditAnywhere, Category=PinOptions, EditFixedSize)"
  },
  {
    "label": "PostEditChangeProperty()",
    "kind": "Method",
    "detail": "Function (public : void)",
    "insertText": "PostEditChangeProperty(FPropertyChangedEvent& PropertyChangedEvent)"
  },
  {
    "label": "PreEditChange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PreEditChange(FProperty* PropertyAboutToChange)"
  },
  {
    "label": "PostEditUndo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostEditUndo()"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Serialize(FArchive& Ar)"
  },
  {
    "label": "AllocateDefaultPins()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AllocateDefaultPins()"
  },
  {
    "label": "GetNodeTitleColor()",
    "kind": "Method",
    "detail": "Function (FLinearColor)",
    "insertText": "GetNodeTitleColor()"
  },
  {
    "label": "GetDocumentationLink()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetDocumentationLink()"
  },
  {
    "label": "GetPinHoverText()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetPinHoverText(const UEdGraphPin& Pin, FString& HoverTextOut)"
  },
  {
    "label": "ShowPaletteIconOnNode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShowPaletteIconOnNode()"
  },
  {
    "label": "GetPinMetaData()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetPinMetaData(FName InPinName, FName InKey)"
  },
  {
    "label": "AddSearchMetaDataInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddSearchMetaDataInfo(TArray<struct FSearchTagDataPair>& OutTaggedMetaData)"
  },
  {
    "label": "AddPinSearchMetaDataInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddPinSearchMetaDataInfo(const UEdGraphPin* Pin, TArray<struct FSearchTagDataPair>& OutTaggedMetaData)"
  },
  {
    "label": "PinConnectionListChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PinConnectionListChanged(UEdGraphPin* Pin)"
  },
  {
    "label": "AutowireNewNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AutowireNewNode(UEdGraphPin* FromPin)"
  },
  {
    "label": "PostPlacedNewNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostPlacedNewNode()"
  },
  {
    "label": "PostPasteNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostPasteNode()"
  },
  {
    "label": "DestroyNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyNode()"
  },
  {
    "label": "ReconstructNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReconstructNode()"
  },
  {
    "label": "NodeCausesStructuralBlueprintChange()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "NodeCausesStructuralBlueprintChange()"
  },
  {
    "label": "CanCreateUnderSpecifiedSchema()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanCreateUnderSpecifiedSchema(const UEdGraphSchema* DesiredSchema)"
  },
  {
    "label": "GetNodeAttributes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetNodeAttributes(TArray<TKeyValuePair<FString, FString>>& OutNodeAttributes)"
  },
  {
    "label": "GetMenuActions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetMenuActions(FBlueprintActionDatabaseRegistrar& ActionRegistrar)"
  },
  {
    "label": "GetMenuCategory()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetMenuCategory()"
  },
  {
    "label": "ExpandNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExpandNode(class FKismetCompilerContext& CompilerContext, UEdGraph* SourceGraph)"
  },
  {
    "label": "GetJumpTargetForDoubleClick()",
    "kind": "Method",
    "detail": "Function (UObject*)",
    "insertText": "GetJumpTargetForDoubleClick()"
  },
  {
    "label": "CanJumpToDefinition()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "CanJumpToDefinition()"
  },
  {
    "label": "JumpToDefinition()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "JumpToDefinition()"
  },
  {
    "label": "HandleVariableRenamed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleVariableRenamed(UBlueprint* InBlueprint, UClass* InVariableClass, UEdGraph* InGraph, const FName& InOldVarName, const FName& InNewVarName)"
  },
  {
    "label": "HandleFunctionRenamed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleFunctionRenamed(UBlueprint* InBlueprint, UClass* InFunctionClass, UEdGraph* InGraph, const FName& InOldFuncName, const FName& InNewFuncName)"
  },
  {
    "label": "ReplaceReferences()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReplaceReferences(UBlueprint* InBlueprint, UBlueprint* InReplacementBlueprint, const FMemberReference& InSource, const FMemberReference& InReplacement)"
  },
  {
    "label": "ReferencesVariable()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ReferencesVariable(const FName& InVarName, const UStruct* InScope)"
  },
  {
    "label": "ReferencesFunction()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ReferencesFunction(const FName& InFunctionName, const UStruct* InScope)"
  },
  {
    "label": "IsPoseWatchable()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsPoseWatchable()"
  },
  {
    "label": "IsSinkNode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsSinkNode()"
  },
  {
    "label": "CustomizePinData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CustomizePinData(UEdGraphPin* Pin, FName SourcePropertyName, int32 ArrayIndex)"
  },
  {
    "label": "ValidateAnimNodeDuringCompilation()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "ValidateAnimNodeDuringCompilation(USkeleton* ForSkeleton, FCompilerResultsLog& MessageLog)"
  },
  {
    "label": "ValidateAnimNodePostCompile()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ValidateAnimNodePostCompile(FCompilerResultsLog& MessageLog, UAnimBlueprintGeneratedClass* CompiledClass, int32 CompiledNodeIndex)"
  },
  {
    "label": "UsingCopyPoseFromMesh()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "UsingCopyPoseFromMesh()"
  },
  {
    "label": "PostProcessPinName()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "PostProcessPinName(const UEdGraphPin* Pin, FString& DisplayName)"
  },
  {
    "label": "GetAnimBlueprint()",
    "kind": "Method",
    "detail": "Function (UAnimBlueprint*)",
    "insertText": "GetAnimBlueprint()"
  },
  {
    "label": "GetAllAnimationSequencesReferred()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "GetAllAnimationSequencesReferred(TArray<UAnimationAsset*>& AnimAssets)"
  },
  {
    "label": "ReplaceReferredAnimations()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "ReplaceReferredAnimations(const TMap<UAnimationAsset*, UAnimationAsset*>& AnimAssetReplacementMap)"
  },
  {
    "label": "HandleAnimReferenceCollection()",
    "kind": "Method",
    "detail": "Function (} ; void)",
    "insertText": "HandleAnimReferenceCollection(UAnimationAsset* AnimAsset, TArray<UAnimationAsset*>& AnimationAssets)"
  },
  {
    "label": "HandleAnimReferenceReplacement()",
    "kind": "Method",
    "detail": "Function (template<class AssetType> void)",
    "insertText": "HandleAnimReferenceReplacement(AssetType*& OriginalAsset, const TMap<UAnimationAsset*, UAnimationAsset*>& AnimAssetReplacementMap)"
  },
  {
    "label": "HandleAnimReferenceReplacement()",
    "kind": "Method",
    "detail": "Function (template<class AssetType> void)",
    "insertText": "HandleAnimReferenceReplacement(TObjectPtr<AssetType>& OriginalAsset, const TMap<UAnimationAsset*, UAnimationAsset*>& AnimAssetReplacementMap)"
  },
  {
    "label": "OnNodeSelected()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnNodeSelected(bool bInIsSelected, class FEditorModeTools& InModeTools, struct FAnimNode_Base* InRuntimeNode)"
  },
  {
    "label": "OnPoseWatchChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPoseWatchChanged(const bool IsPoseWatchEnabled, TObjectPtr<class UPoseWatch> InPoseWatch, FEditorModeTools& InModeTools, FAnimNode_Base* InRuntimeNode)"
  },
  {
    "label": "GetEditorMode()",
    "kind": "Method",
    "detail": "Function (FEditorModeID)",
    "insertText": "GetEditorMode()"
  },
  {
    "label": "Draw()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Draw(FPrimitiveDrawInterface* PDI, USkeletalMeshComponent * PreviewSkelMeshComp)"
  },
  {
    "label": "Draw()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Draw(FPrimitiveDrawInterface* PDI, USkeletalMeshComponent* PreviewSkelMeshComp, const bool bIsSelected, const bool bIsPoseWatchEnabled)"
  },
  {
    "label": "DrawCanvas()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DrawCanvas(FViewport& InViewport, FSceneView& View, FCanvas& Canvas, USkeletalMeshComponent * PreviewSkelMeshComp)"
  },
  {
    "label": "GetOnScreenDebugInfo()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "GetOnScreenDebugInfo(TArray<FText>& DebugInfo, FAnimNode_Base* RuntimeAnimNode, USkeletalMeshComponent* PreviewSkelMeshComp)"
  },
  {
    "label": "CopyPinDefaultsToNodeData()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "CopyPinDefaultsToNodeData(UEdGraphPin* InPin)"
  },
  {
    "label": "CopyNodeDataToPreviewNode()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "CopyNodeDataToPreviewNode(FAnimNode_Base* InPreviewNode)"
  },
  {
    "label": "DoesSupportTimeForTransitionGetter()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "DoesSupportTimeForTransitionGetter()"
  },
  {
    "label": "FindDebugAnimNode()",
    "kind": "Method",
    "detail": "Function (} FAnimNode_Base*)",
    "insertText": "FindDebugAnimNode(USkeletalMeshComponent * PreviewSkelMeshComp)"
  },
  {
    "label": "GetActiveInstanceNode()",
    "kind": "Method",
    "detail": "Function (template<NodeType> NodeType*)",
    "insertText": "GetActiveInstanceNode(UObject* AnimInstanceObject)"
  },
  {
    "label": "SupportsAssetClass()",
    "kind": "Method",
    "detail": "Function (} return nullptr ; } EAnimAssetHandlerType)",
    "insertText": "SupportsAssetClass(const UClass* AssetClass)"
  },
  {
    "label": "DECLARE_EVENT_OneParam()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_EVENT_OneParam(UAnimGraphNode_Base, FOnNodePropertyChangedEvent, FPropertyChangedEvent&)"
  },
  {
    "label": "OnNodePropertyChanged()",
    "kind": "Method",
    "detail": "Function (FOnNodePropertyChangedEvent&)",
    "insertText": "OnNodePropertyChanged()"
  },
  {
    "label": "OnPinVisibilityChanged()",
    "kind": "Method",
    "detail": "Function (FPinVisibilityChangedEvent&)",
    "insertText": "OnPinVisibilityChanged()"
  },
  {
    "label": "IsPinExposedAndBound()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsPinExposedAndBound(const FString& InPinName, const EEdGraphPinDirection InDirection = EGPD_MAX)"
  },
  {
    "label": "IsPinUnlinkedUnboundAndUnset()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsPinUnlinkedUnboundAndUnset(const FString& InPinName, const EEdGraphPinDirection InDirection)"
  },
  {
    "label": "DECLARE_EVENT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_EVENT(UAnimGraphNode_Base, FOnNodeTitleChangedEvent)"
  },
  {
    "label": "OnNodeTitleChangedEvent()",
    "kind": "Method",
    "detail": "Function (FOnNodeTitleChangedEvent&)",
    "insertText": "OnNodeTitleChangedEvent()"
  },
  {
    "label": "GetOutputLinkAttributes()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "GetOutputLinkAttributes(FNodeAttributeArray& OutAttributes)"
  },
  {
    "label": "ShouldShowAttributesOnPins()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "ShouldShowAttributesOnPins()"
  },
  {
    "label": "FAnimPropertyBindingWidgetArgs()",
    "kind": "Method",
    "detail": "Function (struct FAnimPropertyBindingWidgetArgs {)",
    "insertText": "FAnimPropertyBindingWidgetArgs(const TArray<UAnimGraphNode_Base*>& InNodes, FProperty* InPinProperty, FName InPinName, FName InBindingName, int32 InOptionalPinIndex) : Nodes(InNodes) , PinProperty(InPinProperty) , PinName(InPinName) , BindingName(InBindingName) , OptionalPinIndex(InOptionalPinIndex) , bOnGraphNode(true) , bPropertyIsOnFNode(true)"
  },
  {
    "label": "DECLARE_DELEGATE_TwoParams()",
    "kind": "Method",
    "detail": "Function (} TArray<UAnimGraphNode_Base*> Nodes ; FProperty* PinProperty = nullptr ; FName PinName = NAME_None ; FName BindingName = NAME_None ; int32 OptionalPinIndex = INDEX_NONE ; bool bOnGraphNode = true ; bool bPropertyIsOnFNode = true ;)",
    "insertText": "DECLARE_DELEGATE_TwoParams(FOnGetOptionalPins, UAnimGraphNode_Base* , TArrayView<FOptionalPinFromProperty>&)"
  },
  {
    "label": "DECLARE_DELEGATE_ThreeParams()",
    "kind": "Method",
    "detail": "Function (FOnGetOptionalPins OnGetOptionalPins ;)",
    "insertText": "DECLARE_DELEGATE_ThreeParams(FOnSetPinVisibility, UAnimGraphNode_Base* , bool , int32)"
  },
  {
    "label": "MakePropertyBindingWidget()",
    "kind": "Method",
    "detail": "Function (FOnSetPinVisibility OnSetPinVisibility ; TSharedPtr<FExtender> MenuExtender ; } ; TSharedRef<SWidget>)",
    "insertText": "MakePropertyBindingWidget(const FAnimPropertyBindingWidgetArgs& InArgs)"
  },
  {
    "label": "GetPinProperty()",
    "kind": "Method",
    "detail": "Function (FProperty*)",
    "insertText": "GetPinProperty(const UEdGraphPin* InPin)"
  },
  {
    "label": "GetPinProperty()",
    "kind": "Method",
    "detail": "Function (FProperty*)",
    "insertText": "GetPinProperty(FName InPinName)"
  },
  {
    "label": "IsPinBindable()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsPinBindable(const UEdGraphPin* InPin)"
  },
  {
    "label": "GetTag()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetTag()"
  },
  {
    "label": "GetDebuggedAnimNode()",
    "kind": "Method",
    "detail": "Function (FAnimNode_Base*)",
    "insertText": "GetDebuggedAnimNode()"
  },
  {
    "label": "PostEditRefreshDebuggedComponent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostEditRefreshDebuggedComponent()"
  },
  {
    "label": "GetBoundFunctionsInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetBoundFunctionsInfo(TArray<TPair<FName, FName>> & InOutBindingsInfo)"
  },
  {
    "label": "IsPotentiallyBoundFunction()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsPotentiallyBoundFunction(const FMemberReference& FunctionReference)"
  },
  {
    "label": "HasBinding()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasBinding(FName InPropertyName)"
  },
  {
    "label": "GetBinding()",
    "kind": "Method",
    "detail": "Function (const UAnimGraphNodeBinding*)",
    "insertText": "GetBinding()"
  },
  {
    "label": "GetFNodeType()",
    "kind": "Method",
    "detail": "Function (UScriptStruct*)",
    "insertText": "GetFNodeType()"
  },
  {
    "label": "GetFNodeProperty()",
    "kind": "Method",
    "detail": "Function (FStructProperty*)",
    "insertText": "GetFNodeProperty()"
  },
  {
    "label": "GetFNode()",
    "kind": "Method",
    "detail": "Function (FAnimNode_Base*)",
    "insertText": "GetFNode()"
  },
  {
    "label": "SetTagInternal()",
    "kind": "Method",
    "detail": "Function (protected : class FAnimBlueprintCompilerContext ; class FAnimGraphNodeDetails ; class UAnimBlueprintExtension ; class UAnimBlueprintExtension_Base ; class SAnimationGraphNode ; class UAnimationGraphSchema ; void)",
    "insertText": "SetTagInternal(FName InTag)"
  },
  {
    "label": "GetRequiredExtensions()",
    "kind": "Method",
    "detail": "Function (Tag = InTag ; } void)",
    "insertText": "GetRequiredExtensions(TArray<TSubclassOf<UAnimBlueprintExtension>>& OutExtensions)"
  },
  {
    "label": "CreatePinsForPoseLink()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "CreatePinsForPoseLink(FProperty* PoseProperty, int32 ArrayIndex)"
  },
  {
    "label": "GetLinkIDLocation()",
    "kind": "Method",
    "detail": "Function (FPoseLinkMappingRecord)",
    "insertText": "GetLinkIDLocation(const UScriptStruct* NodeType, UEdGraphPin* InputLinkPin)"
  },
  {
    "label": "GetPinAssociatedProperty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetPinAssociatedProperty(const UScriptStruct* NodeType, const UEdGraphPin* InputPin, FProperty*& OutProperty, int32& OutIndex)"
  },
  {
    "label": "ProcessDuringCompilation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessDuringCompilation(IAnimBlueprintCompilationContext& InCompilationContext, IAnimBlueprintGeneratedClassCompiledData& OutCompiledData)"
  },
  {
    "label": "OnProcessDuringCompilation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnProcessDuringCompilation(IAnimBlueprintCompilationContext& InCompilationContext, IAnimBlueprintGeneratedClassCompiledData& OutCompiledData)"
  },
  {
    "label": "CopyTermDefaultsToDefaultObject()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "CopyTermDefaultsToDefaultObject(IAnimBlueprintCopyTermDefaultsContext& InCompilationContext, IAnimBlueprintNodeCopyTermDefaultsContext& InPerNodeContext, IAnimBlueprintGeneratedClassCompiledData& OutCompiledData)"
  },
  {
    "label": "OnCopyTermDefaultsToDefaultObject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnCopyTermDefaultsToDefaultObject(IAnimBlueprintCopyTermDefaultsContext& InCompilationContext, IAnimBlueprintNodeCopyTermDefaultsContext& InPerNodeContext, IAnimBlueprintGeneratedClassCompiledData& OutCompiledData)"
  },
  {
    "label": "OverrideAssets()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "OverrideAssets(IAnimBlueprintNodeOverrideAssetsContext& InContext)"
  },
  {
    "label": "OnOverrideAssets()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnOverrideAssets(IAnimBlueprintNodeOverrideAssetsContext& InContext)"
  },
  {
    "label": "ShouldCreateStructEvalHandlers()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "ShouldCreateStructEvalHandlers()"
  },
  {
    "label": "CreateCustomPins()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateCustomPins(TArray<UEdGraphPin*>* OldPins)"
  },
  {
    "label": "GetPinBindingInfo()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "GetPinBindingInfo(FName InPinName, FName& OutBindingName, FProperty*& OutPinProperty, int32& OutOptionalPinIndex)"
  },
  {
    "label": "RecalculateBindingType()",
    "kind": "Method",
    "detail": "Function (FOnNodePropertyChangedEvent PropertyChangeEvent ; FOnNodeTitleChangedEvent NodeTitleChangedEvent ; FPinVisibilityChangedEvent PinVisibilityChangedEvent ; void)",
    "insertText": "RecalculateBindingType(FAnimGraphNodePropertyBinding& InBinding)"
  },
  {
    "label": "GetObjectBeingDebugged()",
    "kind": "Method",
    "detail": "Function (UObject*)",
    "insertText": "GetObjectBeingDebugged()"
  },
  {
    "label": "ValidateFunctionRef()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ValidateFunctionRef(FName InPropertyName, const FMemberReference& InRef, const FText& InFunctionName, FCompilerResultsLog& MessageLog)"
  },
  {
    "label": "EnsureBindingsArePresent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnsureBindingsArePresent()"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (AssetType* CacheOriginalAsset = OriginalAsset ; OriginalAsset = nullptr ;)",
    "insertText": "if(UAnimationAsset* const* ReplacementAsset = AnimAssetReplacementMap.Find(CacheOriginalAsset))"
  },
  {
    "label": "AssetType()",
    "kind": "Method",
    "detail": "Function (OriginalAsset = Cast<)",
    "insertText": "AssetType(*ReplacementAsset)"
  },
  {
    "label": "HandleAnimReferenceReplacement()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleAnimReferenceReplacement(static_cast<AssetType*&>(OriginalAsset), AnimAssetReplacementMap)"
  }
]