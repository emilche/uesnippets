[
  {
    "label": "AGameStateBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AGameStateBase"
  },
  {
    "label": "UWorld",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UWorld"
  },
  {
    "label": "ULevel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULevel"
  },
  {
    "label": "ULevelStreaming",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULevelStreaming"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "ULevelStreamingProfilingSubsystem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULevelStreamingProfilingSubsystem"
  },
  {
    "label": "FLevelStats",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLevelStats"
  },
  {
    "label": "FActiveLevel",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FActiveLevel"
  },
  {
    "label": "CSV_DECLARE_CATEGORY_MODULE_EXTERN()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" Containers / ArrayView . h \" # include \" Containers / Map . h \" # include \" ProfilingDebugging / CsvProfiler . h \" # include \" Subsystems / WorldSubsystem . h \" # include \" Tasks / Task . h \" # include \" UObject / ObjectKey . h \" # include \" LevelStreamingProfilingSubsystem . generated . h \" class AGameStateBase ; class UWorld ; class ULevel ; class ULevelStreaming ; enum class ELevelStreamingState : uint8 ; enum class ELevelStreamingTargetState : uint8 ;)",
    "insertText": "CSV_DECLARE_CATEGORY_MODULE_EXTERN(ENGINE_API, LevelStreaming)"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UCLASS(MinimalAPI)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: ENGINE_API virtual bool ShouldCreateSubsystem(UObject* Outer)"
  },
  {
    "label": "PostInitialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostInitialize()"
  },
  {
    "label": "Deinitialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Deinitialize()"
  },
  {
    "label": "ULevelStreamingProfilingSubsystem()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ULevelStreamingProfilingSubsystem(const FObjectInitializer&)"
  },
  {
    "label": "ULevelStreamingProfilingSubsystem()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "ULevelStreamingProfilingSubsystem()"
  },
  {
    "label": "StartTracking()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StartTracking()"
  },
  {
    "label": "StopTrackingAndReport()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StopTrackingAndReport()"
  },
  {
    "label": "IsTracking()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsTracking()"
  },
  {
    "label": "GetLateStreamingDistanceSquared()",
    "kind": "Method",
    "detail": "Function (} double)",
    "insertText": "GetLateStreamingDistanceSquared()"
  },
  {
    "label": "DoesSupportWorldType()",
    "kind": "Method",
    "detail": "Function (protected : bool)",
    "insertText": "DoesSupportWorldType(const EWorldType::Type WorldType)"
  },
  {
    "label": "UpdateTrackingData()",
    "kind": "Method",
    "detail": "Function (enum class ELevelState ; struct FLevelStats ; void)",
    "insertText": "UpdateTrackingData(int32 TrackingIndex, FLevelStats& BaseStats, const ULevelStreaming* StreamingLevel, ELevelState PreviousState, ELevelState NewState)"
  },
  {
    "label": "AugmentReportHeader()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "AugmentReportHeader(FUtf8StringBuilderBase& Builder)"
  },
  {
    "label": "AugmentReportRow()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "AugmentReportRow(FUtf8StringBuilderBase& Builder, int32 TrackingIndex)"
  },
  {
    "label": "EnumToString()",
    "kind": "Method",
    "detail": "Function (} const TCHAR*)",
    "insertText": "EnumToString(ULevelStreamingProfilingSubsystem::ELevelState State)"
  },
  {
    "label": "GetLevelStats()",
    "kind": "Method",
    "detail": "Function (TConstArrayView<FLevelStats>)",
    "insertText": "GetLevelStats()"
  },
  {
    "label": "FActiveLevel()",
    "kind": "Method",
    "detail": "Function (enum class ELevelState { None,QueuedForLoading,Loading,Loaded,QueuedForAddToWorld,AddingToWorld,AddedToWorld,QueuedForRemoveFromWorld,RemovingFromWorld,RemovedFromWorld,} ; struct FActiveLevel {)",
    "insertText": "FActiveLevel(int32 InStatsIndex) : StatsIndex(InStatsIndex)"
  },
  {
    "label": "FActiveLevel()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "FActiveLevel()"
  },
  {
    "label": "FLevelStats()",
    "kind": "Method",
    "detail": "Function (ELevelState State = ELevelState::QueuedForLoading ; double StateStartTime = 0 . 0 ; TOptional<double> TimeAddedToWorld ; int32 StatsIndex = INDEX_NONE ; } ; struct FLevelStats {)",
    "insertText": "FLevelStats()"
  },
  {
    "label": "FBox()",
    "kind": "Method",
    "detail": "Function (FName PackageNameOnDisk = { } ; FName PackageNameInMemory = { } ; FBox CellBounds =)",
    "insertText": "FBox(ForceInit), ContentBounds = FBox(ForceInit)"
  },
  {
    "label": "OnLevelStreamingTargetStateChanged()",
    "kind": "Method",
    "detail": "Function (TOptional<double> TimeQueuedForLoading ; TOptional<double> TimeLoading ; TOptional<double> TimeQueueudForAddToWorld ; TOptional<double> TimeAddingToWorld ; TOptional<double> TimeInWorld ; TOptional<double> TimeQueuedForRemoveFromWorld ; TOptional<double> TimeRemovingFromWorld ; TOptional<double> FinalStreamInDistance_Cell ; TOptional<double> FinalStreamInDistance_Content ; TOptional<FVector> FinalStreamInLocation ; bool bIsHLOD = false ; bool bValid = false ; } ; private : void)",
    "insertText": "OnLevelStreamingTargetStateChanged(UWorld* World, const ULevelStreaming* StreamingLevel, ULevel* LevelIfLoaded, ELevelStreamingState CurrentState, ELevelStreamingTargetState PrevTarget, ELevelStreamingTargetState NewTarget)"
  },
  {
    "label": "OnLevelStreamingStateChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnLevelStreamingStateChanged(UWorld* World, const ULevelStreaming* StreamingLevel, ULevel* LevelIfLoaded, ELevelStreamingState PrevState, ELevelStreamingState NewState)"
  },
  {
    "label": "OnLevelQueuedForLoading()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnLevelQueuedForLoading(UWorld* World, const ULevelStreaming* StreamingLevel)"
  },
  {
    "label": "OnLevelUnqueuedForLoading()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnLevelUnqueuedForLoading(UWorld* World, const ULevelStreaming* StreamingLevel)"
  },
  {
    "label": "OnLevelStartedAsyncLoading()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnLevelStartedAsyncLoading(UWorld* World, const ULevelStreaming* StreamingLevel)"
  },
  {
    "label": "OnLevelFinishedAsyncLoading()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnLevelFinishedAsyncLoading(UWorld* World, const ULevelStreaming* StreamingLevel, ULevel* LoadedLevel)"
  },
  {
    "label": "OnLevelQueuedForAddToWorld()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnLevelQueuedForAddToWorld(UWorld* World, const ULevelStreaming* StreamingLevel, ULevel* LoadedLevel)"
  },
  {
    "label": "OnLevelUnqueuedForAddToWorld()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnLevelUnqueuedForAddToWorld(UWorld* World, const ULevelStreaming* StreamingLevel, ULevel* LoadedLevel)"
  },
  {
    "label": "OnLevelStartedAddToWorld()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnLevelStartedAddToWorld(UWorld* World, const ULevelStreaming* StreamingLevel, ULevel* LoadedLevel)"
  },
  {
    "label": "OnLevelFinishedAddToWorld()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnLevelFinishedAddToWorld(UWorld* World, const ULevelStreaming* StreamingLevel, ULevel* LoadedLevel)"
  },
  {
    "label": "OnLevelQueuedForRemoveFromWorld()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnLevelQueuedForRemoveFromWorld(UWorld* World, const ULevelStreaming* StreamingLevel, ULevel* LoadedLevel)"
  },
  {
    "label": "OnLevelUnqueuedForRemoveFromWorld()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnLevelUnqueuedForRemoveFromWorld(UWorld* World, const ULevelStreaming* StreamingLevel, ULevel* LoadedLevel)"
  },
  {
    "label": "OnLevelStartedRemoveFromWorld()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnLevelStartedRemoveFromWorld(UWorld* World, const ULevelStreaming* StreamingLevel, ULevel* LoadedLevel)"
  },
  {
    "label": "OnLevelFinishedRemoveFromWorld()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnLevelFinishedRemoveFromWorld(UWorld* World, const ULevelStreaming* StreamingLevel, ULevel* LoadedLevel)"
  },
  {
    "label": "OnStreamingLevelRemoved()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnStreamingLevelRemoved(UWorld* World, const ULevelStreaming* StreamingLevel)"
  },
  {
    "label": "MakeActiveLevel()",
    "kind": "Method",
    "detail": "Function (TUniquePtr<FActiveLevel>)",
    "insertText": "MakeActiveLevel(const ULevelStreaming* StreamingLevel, ELevelState InitialState, ULevel* LoadedLevel=nullptr)"
  },
  {
    "label": "UpdateLevelState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateLevelState(FActiveLevel& Level, const ULevelStreaming* StreamingLevel, ELevelState NewState, double Time)"
  }
]