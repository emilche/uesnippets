[
  {
    "label": "FUICommandInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FUICommandInfo"
  },
  {
    "label": "FUICommandList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FUICommandList"
  },
  {
    "label": "FUICommandList_Pinnable",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FUICommandList_Pinnable"
  },
  {
    "label": "ISlateStyle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISlateStyle"
  },
  {
    "label": "SCommand",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SCommand"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "SWrapBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWrapBox"
  },
  {
    "label": "FGeometry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGeometry"
  },
  {
    "label": "FPointerEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPointerEvent"
  },
  {
    "label": "FRegisteredCustomWidget",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRegisteredCustomWidget"
  },
  {
    "label": "SPinnedCommandList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SPinnedCommandList"
  },
  {
    "label": "DECLARE_DELEGATE()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" Delegates / Delegate . h \" # include \" IPinnedCommandList . h \" # include \" Input / Reply . h \" # include \" Internationalization / Text . h \" # include \" Layout / Margin . h \" # include \" Misc / Attribute . h \" # include \" Templates / SharedPointer . h \" # include \" UObject / NameTypes . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" class FUICommandInfo ; class FUICommandList ; class FUICommandList_Pinnable ; class ISlateStyle ; class SCommand ; class SWidget ; class SWrapBox ; struct FGeometry ; struct FPointerEvent ; struct FRegisteredCustomWidget { FName CustomWidgetIdentifier ; IPinnedCommandList::FOnGenerateCustomWidget OnGenerateCustomWidget ; TAttribute<FText> CustomWidgetDisplayName ; FMargin CustomWidgetPadding ; bool bShowLabel ; } ; class SPinnedCommandList : public IPinnedCommandList { public :)",
    "insertText": "DECLARE_DELEGATE(FOnCommandsChanged)"
  },
  {
    "label": "DECLARE_DELEGATE_RetVal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DELEGATE_RetVal(TSharedPtr<SWidget>, FOnGetContextMenu)"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SLATE_BEGIN_ARGS(SPinnedCommandList)"
  },
  {
    "label": "SLATE_EVENT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_EVENT(FOnGetContextMenu, OnGetContextMenu ) SLATE_EVENT( FOnCommandsChanged, OnCommandsChanged ) SLATE_END_ARGS() SPinnedCommandList()"
  },
  {
    "label": "SPinnedCommandList()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "SPinnedCommandList()"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct(const FArguments& InArgs, const FName& InContextName)"
  },
  {
    "label": "BindCommandList()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BindCommandList(const TSharedRef<const FUICommandList>& InUICommandList)"
  },
  {
    "label": "BindCommandList()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BindCommandList(const TSharedRef<FUICommandList_Pinnable>& InUICommandList_Pinnable)"
  },
  {
    "label": "RegisterCustomWidget()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterCustomWidget(IPinnedCommandList::FOnGenerateCustomWidget InOnGenerateCustomWidget, FName InCustomWidgetIdentifier, TAttribute<FText> InCustomWidgetDisplayName, FMargin InCustomWidgetPadding = FMargin(2.0f, 1.0f), bool bShowLabel = true)"
  },
  {
    "label": "AddCommand()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddCommand(const TSharedRef<const FUICommandInfo>& InCommandInfo, const TSharedRef<const FUICommandList>& InUICommandList)"
  },
  {
    "label": "AddCustomWidget()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddCustomWidget(FName InCustomWidgetIdentifier)"
  },
  {
    "label": "RemoveCommand()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveCommand(const TSharedRef<const FUICommandInfo>& InCommandInfo)"
  },
  {
    "label": "RemoveCustomWidget()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveCustomWidget(FName InCustomWidgetIdentifier)"
  },
  {
    "label": "HasAnyCommands()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasAnyCommands()"
  },
  {
    "label": "RemoveAllCommands()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveAllCommands()"
  },
  {
    "label": "SetStyle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetStyle(const ISlateStyle* InStyleSet, const FName& InStyleName)"
  },
  {
    "label": "SaveSettings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SaveSettings()"
  },
  {
    "label": "LoadSettings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LoadSettings()"
  },
  {
    "label": "OnMouseButtonUp()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnMouseButtonUp(const FGeometry& MyGeometry, const FPointerEvent& MouseEvent)"
  },
  {
    "label": "AddCommand_Internal()",
    "kind": "Method",
    "detail": "Function (private : TSharedRef<SCommand>)",
    "insertText": "AddCommand_Internal(const TSharedRef<const FUICommandInfo>& InCommandInfo, const TSharedRef<const FUICommandList>& InUICommandList, const TSharedPtr<const FUICommandList_Pinnable>& InUICommandListPinnable = nullptr)"
  },
  {
    "label": "AddCustomWidget_Internal()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<SCommand>)",
    "insertText": "AddCustomWidget_Internal(FName InCustomWidgetIdentifier, const TSharedPtr<const FUICommandList_Pinnable>& InUICommandListPinnable = nullptr)"
  },
  {
    "label": "AddCommandWidget()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddCommandWidget(const TSharedRef<SCommand>& CommandToAdd)"
  },
  {
    "label": "RemoveCommandWidget()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveCommandWidget(const TSharedRef<SCommand>& CommandToRemove)"
  },
  {
    "label": "OnResetCommands()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnResetCommands()"
  },
  {
    "label": "RemoveAllCommandsButThis()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveAllCommandsButThis(const TSharedRef<SCommand>& CommandToRemove)"
  },
  {
    "label": "HandleExecuteAction()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleExecuteAction(const TSharedRef<const FUICommandInfo>& InCommandInfo, const TSharedRef<const FUICommandList_Pinnable>& InUICommandList)"
  },
  {
    "label": "HandleCustomWidgetInteraction()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleCustomWidgetInteraction(FName InCustomWidgetIdentifier, const TSharedRef<const FUICommandList_Pinnable>& InUICommandList)"
  },
  {
    "label": "SortCommands()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SortCommands()"
  },
  {
    "label": "RefreshCommandWidgets()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RefreshCommandWidgets()"
  }
]