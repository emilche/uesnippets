[
  {
    "label": "FPrimitiveSceneProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPrimitiveSceneProxy"
  },
  {
    "label": "FMeshPassProcessorRenderState",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMeshPassProcessorRenderState"
  },
  {
    "label": "FDistortionPrimSet",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDistortionPrimSet"
  },
  {
    "label": "FViewInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FViewInfo"
  },
  {
    "label": "FDistortionMeshProcessor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDistortionMeshProcessor"
  },
  {
    "label": "DrawAccumulatedOffsets()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" RendererInterface . h \" # include \" MeshPassProcessor . h \" class FPrimitiveSceneProxy ; struct FMeshPassProcessorRenderState ; class FDistortionPrimSet { public : bool)",
    "insertText": "DrawAccumulatedOffsets(FRHICommandListImmediate& RHICmdList, const class FViewInfo& View, const FMeshPassProcessorRenderState& DrawRenderState, bool bInitializeOffsets)"
  },
  {
    "label": "Append()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Append(FPrimitiveSceneProxy** PrimitiveSceneProxies, int32 NumProxies)"
  },
  {
    "label": "Append()",
    "kind": "Method",
    "detail": "Function (Prims .)",
    "insertText": "Append(PrimitiveSceneProxies, NumProxies)"
  },
  {
    "label": "NumPrims()",
    "kind": "Method",
    "detail": "Function (} int32)",
    "insertText": "NumPrims()"
  },
  {
    "label": "GetPrim()",
    "kind": "Method",
    "detail": "Function (} const FPrimitiveSceneProxy*)",
    "insertText": "GetPrim(int32 i)"
  },
  {
    "label": "FDistortionMeshProcessor()",
    "kind": "Method",
    "detail": "Function (class FDistortionMeshProcessor : public FSceneRenderingAllocatorObject<FDistortionMeshProcessor>,public FMeshPassProcessor { public :)",
    "insertText": "FDistortionMeshProcessor(const FScene* Scene, ERHIFeatureLevel::Type FeatureLevel, const FSceneView* InViewIfDynamicMeshCommand, const FMeshPassProcessorRenderState& InPassDrawRenderState, const FMeshPassProcessorRenderState& InDistortionPassStateNoDepthTest, FMeshPassDrawListContext* InDrawListContext)"
  },
  {
    "label": "AddMeshBatch()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddMeshBatch(const FMeshBatch& RESTRICT MeshBatch, uint64 BatchElementMask, const FPrimitiveSceneProxy* RESTRICT PrimitiveSceneProxy, int32 StaticMeshId = -1)"
  },
  {
    "label": "CollectPSOInitializers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CollectPSOInitializers(const FSceneTexturesConfig& SceneTexturesConfig, const FMaterial& Material, const FPSOPrecacheVertexFactoryData& VertexFactoryData, const FPSOPrecacheParams& PreCacheParams, TArray<FPSOPrecacheData>& PSOInitializers)"
  },
  {
    "label": "TryAddMeshBatch()",
    "kind": "Method",
    "detail": "Function (FMeshPassProcessorRenderState PassDrawRenderState ; FMeshPassProcessorRenderState PassDrawRenderStateNoDepthTest ; private : bool)",
    "insertText": "TryAddMeshBatch(const FMeshBatch& RESTRICT MeshBatch, uint64 BatchElementMask, const FPrimitiveSceneProxy* RESTRICT PrimitiveSceneProxy, int32 StaticMeshId, const FMaterialRenderProxy& MaterialRenderProxy, const FMaterial& Material)"
  },
  {
    "label": "Process()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Process(const FMeshBatch& MeshBatch, uint64 BatchElementMask, const FPrimitiveSceneProxy* RESTRICT PrimitiveSceneProxy, int32 StaticMeshId, const FMaterialRenderProxy& RESTRICT MaterialRenderProxy, const FMaterial& RESTRICT MaterialResource, ERasterizerFillMode MeshFillMode, ERasterizerCullMode MeshCullMode)"
  }
]