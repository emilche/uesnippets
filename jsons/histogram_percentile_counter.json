[
  {
    "label": "HistogramPercentileCounter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "HistogramPercentileCounter"
  },
  {
    "label": "HistogramPercentileCounter()",
    "kind": "Method",
    "detail": "Function (# ifndef RTC_BASE_NUMERICS_HISTOGRAM_PERCENTILE_COUNTER_H_ # define RTC_BASE_NUMERICS_HISTOGRAM_PERCENTILE_COUNTER_H_ # include<stddef . h> # include<stdint . h> # include<map> # include<vector> # include \" absl / types / optional . h \" namespace rtc { class HistogramPercentileCounter { public :)",
    "insertText": "HistogramPercentileCounter(uint32_t long_tail_boundary)"
  },
  {
    "label": "HistogramPercentileCounter()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "HistogramPercentileCounter()"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Add(uint32_t value)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Add(uint32_t value, size_t count)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Add(const HistogramPercentileCounter& other)"
  },
  {
    "label": "GetPercentile()",
    "kind": "Method",
    "detail": "Function (absl::optional<uint32_t>)",
    "insertText": "GetPercentile(float fraction)"
  }
]