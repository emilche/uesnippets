[
  {
    "label": "FConvex",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FConvex"
  },
  {
    "label": "assignment",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "assignment"
  },
  {
    "label": "needs",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "needs"
  },
  {
    "label": "assignment",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "assignment"
  },
  {
    "label": "FISPCDataVerifier",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FISPCDataVerifier"
  },
  {
    "label": "CalculateVolumeAndCenterOfMass()",
    "kind": "Method",
    "detail": "Function (this)",
    "insertText": "CalculateVolumeAndCenterOfMass(Vertices, FaceIndices, Volume, CenterOfMass)"
  },
  {
    "label": "MovePlanesAndRebuild()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MovePlanesAndRebuild(FRealType InDelta)"
  },
  {
    "label": "CreateStructureData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateStructureData(TArray<TArray<int32>>&& FaceIndices, const bool bRegularDatas = false)"
  },
  {
    "label": "PhiWithNormalInternal()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "PhiWithNormalInternal(X, Normal)"
  },
  {
    "label": "PhiWithNormalScaledInternal()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "PhiWithNormalScaledInternal(X, Scale, Normal)"
  },
  {
    "label": "MakePair()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "MakePair(Elem.Second, true)"
  },
  {
    "label": "GetClosestEdge()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetClosestEdge(PlaneIndex, Position, Unused0, Unused1)"
  },
  {
    "label": "FVec3()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FVec3(0.f, 0.f, 1.f)"
  },
  {
    "label": "GetVertex()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetVertex(VertexIndex)"
  },
  {
    "label": "GetVertex()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetVertex(VertexIndex)"
  },
  {
    "label": "GetMarginAdjustedVertex()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetMarginAdjustedVertex(SupportVertexIndex, InMargin, OutSupportDelta)"
  },
  {
    "label": "FVec3()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FVec3(0)"
  },
  {
    "label": "VectorZeroFloat()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "VectorZeroFloat()"
  },
  {
    "label": "FVec3()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FVec3(0)"
  },
  {
    "label": "FVec3()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FVec3(0)"
  },
  {
    "label": "ToStringSummary()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "ToStringSummary()"
  },
  {
    "label": "FMatrix33()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FMatrix33(ScaledInertiaTensorDiagonal.X, ScaledInertiaTensorDiagonal.Y, ScaledInertiaTensorDiagonal.Z)"
  },
  {
    "label": "FVec3()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FVec3(0)"
  },
  {
    "label": "offsetof()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "offsetof(FConvex, Planes)"
  },
  {
    "label": "sizeof()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "sizeof(FConvex::Planes)"
  },
  {
    "label": "offsetof()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "offsetof(FConvex, Vertices)"
  },
  {
    "label": "sizeof()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "sizeof(FConvex::Vertices)"
  },
  {
    "label": "offsetof()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "offsetof(FConvex, StructureData)"
  },
  {
    "label": "sizeof()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "sizeof(FConvex::StructureData)"
  },
  {
    "label": "ComputeUnitMassInertiaTensorAndRotationOfMass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ComputeUnitMassInertiaTensorAndRotationOfMass(const FReal InVolume)"
  }
]