[
  {
    "label": "ALEMBIC_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ALEMBIC_EXPORT"
  },
  {
    "label": "Hash128()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Hash128(\n        const void *message,  // message to hash\n        size_t length,        // length of message in bytes\n        uint64_t *hash1,      // in/out: in seed 1, out hash value 1\n        uint64_t *hash2)"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Init(\n        uint64_t seed1,       // any 64-bit value will do, including 0\n        uint64_t seed2)"
  },
  {
    "label": "Update()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Update(\n        const void *message,  // message fragment\n        size_t length)"
  },
  {
    "label": "Final()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Final(\n        uint64_t *hash1,    // out only: first 64 bits of hash value.\n        uint64_t *hash2)"
  }
]