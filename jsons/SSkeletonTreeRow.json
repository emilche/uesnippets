[
  {
    "label": "FDragDropEvent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDragDropEvent"
  },
  {
    "label": "STableViewBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "STableViewBase"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "FGeometry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGeometry"
  },
  {
    "label": "FMargin",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMargin"
  },
  {
    "label": "FPointerEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPointerEvent"
  },
  {
    "label": "SSkeletonTreeRow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SSkeletonTreeRow"
  },
  {
    "label": "IEditableSkeleton",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IEditableSkeleton"
  },
  {
    "label": "ISkeletonTree",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISkeletonTree"
  },
  {
    "label": "DECLARE_DELEGATE_RetVal_TwoParams()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / BitArray . h \" # include \" Delegates / Delegate . h \" # include \" Framework / Views / ITypedTableView . h \" # include \" HAL / Platform . h \" # include \" HAL / PlatformCrt . h \" # include \" ISkeletonTreeItem . h \" # include \" Input / Reply . h \" # include \" Internationalization / Text . h \" # include \" Misc / Attribute . h \" # include \" Templates / SharedPointer . h \" # include \" Templates / UnrealTemplate . h \" # include \" UObject / NameTypes . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Widgets / Views / SListView . h \" # include \" Widgets / Views / STableRow . h \" class FDragDropEvent ; class STableViewBase ; class SWidget ; struct FGeometry ; struct FMargin ; struct FPointerEvent ;)",
    "insertText": "DECLARE_DELEGATE_RetVal_TwoParams(FReply, FOnDraggingTreeItem, const FGeometry&, const FPointerEvent&)"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (class SSkeletonTreeRow : public SMultiColumnTableRow<TSharedPtr<ISkeletonTreeItem>> { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SSkeletonTreeRow)"
  },
  {
    "label": "SLATE_ARGUMENT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_ARGUMENT(TSharedPtr<ISkeletonTreeItem>, Item) SLATE_ATTRIBUTE(FText, FilterText)"
  },
  {
    "label": "SLATE_EVENT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SLATE_EVENT(FOnDraggingTreeItem, OnDraggingItem)"
  },
  {
    "label": "SLATE_END_ARGS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SLATE_END_ARGS() void Construct(const FArguments& InArgs, const TSharedRef<STableViewBase>& InOwnerTableView)"
  },
  {
    "label": "GenerateWidgetForColumn()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "GenerateWidgetForColumn(const FName& ColumnName)"
  },
  {
    "label": "ConstructChildren()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConstructChildren(ETableViewMode::Type InOwnerTableMode, const TAttribute<FMargin>& InPadding, const TSharedRef<SWidget>& InContent)"
  },
  {
    "label": "OnDragEnter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDragEnter(const FGeometry& MyGeometry, const FDragDropEvent& DragDropEvent)"
  },
  {
    "label": "OnDragLeave()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDragLeave(const FDragDropEvent& DragDropEvent)"
  },
  {
    "label": "OnDrop()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnDrop(const FGeometry& MyGeometry, const FDragDropEvent& DragDropEvent)"
  },
  {
    "label": "DoesItemHaveChildren()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "DoesItemHaveChildren()"
  },
  {
    "label": "IsItemExpanded()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsItemExpanded()"
  },
  {
    "label": "ToggleExpansion()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ToggleExpansion()"
  },
  {
    "label": "OnDragDetected()",
    "kind": "Method",
    "detail": "Function (protected : FReply)",
    "insertText": "OnDragDetected(const FGeometry& MyGeometry, const FPointerEvent& MouseEvent)"
  },
  {
    "label": "GetEditableSkeleton()",
    "kind": "Method",
    "detail": "Function (TSharedRef<class IEditableSkeleton>)",
    "insertText": "GetEditableSkeleton()"
  },
  {
    "label": "GetSkeletonTree()",
    "kind": "Method",
    "detail": "Function (} TSharedRef<class ISkeletonTree>)",
    "insertText": "GetSkeletonTree()"
  }
]