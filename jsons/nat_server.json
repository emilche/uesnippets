[
  {
    "label": "RouteCmp",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RouteCmp"
  },
  {
    "label": "AddrCmp",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "AddrCmp"
  },
  {
    "label": "NATServer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "NATServer"
  },
  {
    "label": "TransEntry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TransEntry"
  },
  {
    "label": "RouteCmp()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "RouteCmp(NAT* nat)"
  },
  {
    "label": "AddrCmp()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "AddrCmp(NAT* nat)"
  },
  {
    "label": "NATServer()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "NATServer(NATType type,\n            SocketFactory* internal,\n            const SocketAddress& internal_udp_addr,\n            const SocketAddress& internal_tcp_addr,\n            SocketFactory* external,\n            const SocketAddress& external_ip)"
  },
  {
    "label": "OnInternalUDPPacket()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnInternalUDPPacket(AsyncPacketSocket* socket,\n                           const char* buf,\n                           size_t size,\n                           const SocketAddress& addr,\n                           const int64_t& packet_time_us)"
  },
  {
    "label": "OnExternalUDPPacket()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnExternalUDPPacket(AsyncPacketSocket* socket,\n                           const char* buf,\n                           size_t size,\n                           const SocketAddress& remote_addr,\n                           const int64_t& packet_time_us)"
  },
  {
    "label": "AllowlistInsert()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AllowlistInsert(const SocketAddress& addr)"
  },
  {
    "label": "AllowlistContains()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AllowlistContains(const SocketAddress& ext_addr)"
  },
  {
    "label": "Translate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Translate(const SocketAddressPair& route)"
  },
  {
    "label": "ShouldFilterOut()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldFilterOut(TransEntry* entry, const SocketAddress& ext_addr)"
  }
]