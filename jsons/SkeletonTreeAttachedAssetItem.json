[
  {
    "label": "USceneComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USceneComponent"
  },
  {
    "label": "FSkeletonTreeAttachedAssetItem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSkeletonTreeAttachedAssetItem"
  },
  {
    "label": "ISkeletonTree",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISkeletonTree"
  },
  {
    "label": "SKELETON_TREE_ITEM_TYPE()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Widgets / SWidget . h \" # include \" ISkeletonTreeItem . h \" # include \" SkeletonTreeItem . h \" # include \" AssetRegistry / AssetData . h \" class USceneComponent ; class FSkeletonTreeAttachedAssetItem : public FSkeletonTreeItem { public :)",
    "insertText": "SKELETON_TREE_ITEM_TYPE(FSkeletonTreeAttachedAssetItem, FSkeletonTreeItem) FSkeletonTreeAttachedAssetItem(UObject* InAsset, const FName& InAttachedTo, const TSharedRef<class ISkeletonTree>& InSkeletonTree)"
  },
  {
    "label": "GenerateWidgetForNameColumn()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GenerateWidgetForNameColumn(TSharedPtr< SHorizontalBox > Box, const TAttribute<FText>& FilterText, FIsSelected InIsSelected)"
  },
  {
    "label": "GenerateWidgetForDataColumn()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "GenerateWidgetForDataColumn(const FName& DataColumnName, FIsSelected InIsSelected)"
  },
  {
    "label": "GetRowItemName()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetRowItemName()"
  },
  {
    "label": "GetAttachName()",
    "kind": "Method",
    "detail": "Function (} FName)",
    "insertText": "GetAttachName()"
  },
  {
    "label": "OnItemDoubleClicked()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "OnItemDoubleClicked()"
  },
  {
    "label": "GetParentName()",
    "kind": "Method",
    "detail": "Function (const FName&)",
    "insertText": "GetParentName()"
  },
  {
    "label": "OnToggleAssetDisplayed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnToggleAssetDisplayed(ECheckBoxState InCheckboxState)"
  },
  {
    "label": "OnGetAssetDisplayedButtonImage()",
    "kind": "Method",
    "detail": "Function (const FSlateBrush*)",
    "insertText": "OnGetAssetDisplayedButtonImage()"
  }
]