[
  {
    "label": "IMF_EXPORT_TYPE",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IMF_EXPORT_TYPE"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "IMF_EXPORT_TEMPLATE_TYPE",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IMF_EXPORT_TEMPLATE_TYPE"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# ifndef INCLUDED_IMF_ATTRIBUTE_H # define INCLUDED_IMF_ATTRIBUTE_H # include \" ImfForward . h \" # include \" ImfIO . h \" # include \" ImfXdr . h \" # include \" IexBaseExc . h \" # include<cstring> # include<typeinfo> # if)",
    "insertText": "defined(_MSC_VER) # pragma warning(push) # pragma warning(disable : 4251) # pragma warning(disable : 4275)"
  },
  {
    "label": "Attribute()",
    "kind": "Method",
    "detail": "Function (public : IMF_EXPORT)",
    "insertText": "Attribute()"
  },
  {
    "label": "typeName()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "typeName()"
  },
  {
    "label": "copy()",
    "kind": "Method",
    "detail": "Function (Attribute*)",
    "insertText": "copy()"
  },
  {
    "label": "writeValueTo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "writeValueTo(OPENEXR_IMF_INTERNAL_NAMESPACE::OStream& os, int version)"
  },
  {
    "label": "readValueFrom()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "readValueFrom(OPENEXR_IMF_INTERNAL_NAMESPACE::IStream& is, int size, int version)"
  },
  {
    "label": "copyValueFrom()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "copyValueFrom(const Attribute& other)"
  },
  {
    "label": "newAttribute()",
    "kind": "Method",
    "detail": "Function (IMF_EXPORT Attribute*)",
    "insertText": "newAttribute(const char typeName[])"
  },
  {
    "label": "knownType()",
    "kind": "Method",
    "detail": "Function (IMF_EXPORT bool)",
    "insertText": "knownType(const char typeName[])"
  },
  {
    "label": "registerAttributeType()",
    "kind": "Method",
    "detail": "Function (protected : IMF_EXPORT void)",
    "insertText": "registerAttributeType(const char typeName[], Attribute* (*newAttribute) ())"
  },
  {
    "label": "unRegisterAttributeType()",
    "kind": "Method",
    "detail": "Function (IMF_EXPORT void)",
    "insertText": "unRegisterAttributeType(const char typeName[])"
  },
  {
    "label": "TypedAttribute()",
    "kind": "Method",
    "detail": "Function (} ; template<class T> class IMF_EXPORT_TEMPLATE_TYPE TypedAttribute : public Attribute { public :)",
    "insertText": "TypedAttribute()"
  },
  {
    "label": "TypedAttribute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TypedAttribute(const T& value)"
  },
  {
    "label": "TypedAttribute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TypedAttribute(const TypedAttribute<T>& other)"
  },
  {
    "label": "TypedAttribute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TypedAttribute(TypedAttribute<T>&& other)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (TypedAttribute&)",
    "insertText": "operator(const TypedAttribute<T>& other)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (TypedAttribute&)",
    "insertText": "operator(TypedAttribute<T>&& other)"
  },
  {
    "label": "value()",
    "kind": "Method",
    "detail": "Function (T&)",
    "insertText": "value()"
  },
  {
    "label": "staticTypeName()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "staticTypeName()"
  },
  {
    "label": "makeNewAttribute()",
    "kind": "Method",
    "detail": "Function (Attribute*)",
    "insertText": "makeNewAttribute()"
  },
  {
    "label": "cast()",
    "kind": "Method",
    "detail": "Function (TypedAttribute*)",
    "insertText": "cast(Attribute* attribute)"
  },
  {
    "label": "cast()",
    "kind": "Method",
    "detail": "Function (const TypedAttribute*)",
    "insertText": "cast(const Attribute* attribute)"
  },
  {
    "label": "cast()",
    "kind": "Method",
    "detail": "Function (TypedAttribute&)",
    "insertText": "cast(Attribute& attribute)"
  },
  {
    "label": "cast()",
    "kind": "Method",
    "detail": "Function (const TypedAttribute&)",
    "insertText": "cast(const Attribute& attribute)"
  },
  {
    "label": "registerAttributeType()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "registerAttributeType()"
  },
  {
    "label": "unRegisterAttributeType()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "unRegisterAttributeType()"
  },
  {
    "label": "TypedAttribute()",
    "kind": "Method",
    "detail": "Function (private : T _value ; } ; template<class T> TypedAttribute<T)",
    "insertText": "TypedAttribute(const T& value) : Attribute (), _value (value)"
  },
  {
    "label": "T()",
    "kind": "Method",
    "detail": "Function (Attribute* attribute = new TypedAttribute<)",
    "insertText": "T()"
  },
  {
    "label": "copyValueFrom()",
    "kind": "Method",
    "detail": "Function (attribute ->)",
    "insertText": "copyValueFrom(*this)"
  },
  {
    "label": "StreamIO()",
    "kind": "Method",
    "detail": "Function (OPENEXR_IMF_INTERNAL_NAMESPACE::Xdr::write<)",
    "insertText": "StreamIO(os, _value)"
  },
  {
    "label": "StreamIO()",
    "kind": "Method",
    "detail": "Function (OPENEXR_IMF_INTERNAL_NAMESPACE::Xdr::read<)",
    "insertText": "StreamIO(is, _value)"
  },
  {
    "label": "cast()",
    "kind": "Method",
    "detail": "Function (_value =)",
    "insertText": "cast(other)"
  },
  {
    "label": "T()",
    "kind": "Method",
    "detail": "Function (TypedAttribute<T>* t = dynamic_cast<TypedAttribute<)",
    "insertText": "T(attribute)"
  },
  {
    "label": "registerAttributeType()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "registerAttributeType(staticTypeName (), makeNewAttribute)"
  },
  {
    "label": "unRegisterAttributeType()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "unRegisterAttributeType(staticTypeName ())"
  }
]