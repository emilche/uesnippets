[
  {
    "label": "FSequencerViewModelScriptingStruct",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSequencerViewModelScriptingStruct"
  },
  {
    "label": "TStructOpsTypeTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TStructOpsTypeTraits"
  },
  {
    "label": "USequencerViewModelStructExtensions",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USequencerViewModelStructExtensions"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" MVVM / ViewModelPtr . h \" # include \" Kismet / BlueprintFunctionLibrary . h \" # include \" ViewModelScriptingStruct . generated . h \")",
    "insertText": "USTRUCT(BlueprintType)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() SEQUENCERCORE_API FSequencerViewModelScriptingStruct()"
  },
  {
    "label": "FSequencerViewModelScriptingStruct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FSequencerViewModelScriptingStruct(UE::Sequencer::FViewModelPtr InViewModel)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "operator(const FSequencerViewModelScriptingStruct& A, const FSequencerViewModelScriptingStruct& B)"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (UE::Sequencer::FWeakViewModelPtr WeakViewModel ; } ; template<> struct TStructOpsTypeTraits<FSequencerViewModelScriptingStruct> : public TStructOpsTypeTraitsBase2<FSequencerViewModelScriptingStruct> { enum { WithIdenticalViaEquality = true,WithCopy = true,} ; } ;)",
    "insertText": "UCLASS()"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "GENERATED_BODY() UFUNCTION(BlueprintPure, Category = \"Sequencer Editor\", meta=(ScriptMethod)) static FString GetLabel(const FSequencerViewModelScriptingStruct& ViewModel)"
  }
]