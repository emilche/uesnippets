[
  {
    "label": "FMenuBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMenuBuilder"
  },
  {
    "label": "FSpawnTabArgs",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSpawnTabArgs"
  },
  {
    "label": "FTabManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTabManager"
  },
  {
    "label": "ITargetDeviceProxyManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITargetDeviceProxyManager"
  },
  {
    "label": "SButton",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SButton"
  },
  {
    "label": "SWindow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWindow"
  },
  {
    "label": "SSessionFrontend",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SSessionFrontend"
  },
  {
    "label": "ITraceController",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITraceController"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" SlateFwd . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Widgets / SCompoundWidget . h \" # include \" ISessionManager . h \" # include \" Interfaces / IScreenShotManager . h \" class FMenuBuilder ; class FSpawnTabArgs ; class FTabManager ; class ITargetDeviceProxyManager ; class SButton ; class SWindow ; class SSessionFrontend : public SCompoundWidget { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SSessionFrontend)"
  },
  {
    "label": "SLATE_END_ARGS()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_END_ARGS() public: void Construct( const FArguments& InArgs, const TSharedRef<SDockTab>& ConstructUnderMajorTab, const TSharedPtr<SWindow>& ConstructUnderWindow)"
  },
  {
    "label": "GetTabManager()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FTabManager>)",
    "insertText": "GetTabManager()"
  },
  {
    "label": "InitializeControllers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeControllers()"
  },
  {
    "label": "HandleAutomationModuleShutdown()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "HandleAutomationModuleShutdown()"
  },
  {
    "label": "HandleTabManagerSpawnTab()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SDockTab>)",
    "insertText": "HandleTabManagerSpawnTab(const FSpawnTabArgs& Args, FName TabIdentifier)"
  }
]