[
  {
    "label": "ISteamApps",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISteamApps"
  },
  {
    "label": "DlcInstalled_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DlcInstalled_t"
  },
  {
    "label": "NewUrlLaunchParameters_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "NewUrlLaunchParameters_t"
  },
  {
    "label": "AppProofOfPurchaseKeyResponse_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "AppProofOfPurchaseKeyResponse_t"
  },
  {
    "label": "FileDetailsResult_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FileDetailsResult_t"
  },
  {
    "label": "TimedTrialStatus_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TimedTrialStatus_t"
  },
  {
    "label": "BIsSubscribed()",
    "kind": "Method",
    "detail": "Function (# ifndef ISTEAMAPPS_H # define ISTEAMAPPS_H # ifdef _WIN32 # pragma once # endif # include \" steam_api_common . h \" const int k_cubAppProofOfPurchaseKeyMax = 2 4 0 ; class ISteamApps { public : bool)",
    "insertText": "BIsSubscribed()"
  },
  {
    "label": "BIsLowViolence()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "BIsLowViolence()"
  },
  {
    "label": "BIsCybercafe()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "BIsCybercafe()"
  },
  {
    "label": "BIsVACBanned()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "BIsVACBanned()"
  },
  {
    "label": "GetCurrentGameLanguage()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "GetCurrentGameLanguage()"
  },
  {
    "label": "GetAvailableGameLanguages()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "GetAvailableGameLanguages()"
  },
  {
    "label": "BIsSubscribedApp()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "BIsSubscribedApp(AppId_t appID)"
  },
  {
    "label": "BIsDlcInstalled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "BIsDlcInstalled(AppId_t appID)"
  },
  {
    "label": "GetEarliestPurchaseUnixTime()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetEarliestPurchaseUnixTime(AppId_t nAppID)"
  },
  {
    "label": "BIsSubscribedFromFreeWeekend()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "BIsSubscribedFromFreeWeekend()"
  },
  {
    "label": "GetDLCCount()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "GetDLCCount()"
  },
  {
    "label": "BGetDLCDataByIndex()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "BGetDLCDataByIndex(int iDLC, AppId_t *pAppID, bool *pbAvailable, char *pchName, int cchNameBufferSize)"
  },
  {
    "label": "InstallDLC()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InstallDLC(AppId_t nAppID)"
  },
  {
    "label": "UninstallDLC()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UninstallDLC(AppId_t nAppID)"
  },
  {
    "label": "RequestAppProofOfPurchaseKey()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RequestAppProofOfPurchaseKey(AppId_t nAppID)"
  },
  {
    "label": "GetCurrentBetaName()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetCurrentBetaName(char *pchName, int cchNameBufferSize)"
  },
  {
    "label": "MarkContentCorrupt()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "MarkContentCorrupt(bool bMissingFilesOnly)"
  },
  {
    "label": "GetInstalledDepots()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetInstalledDepots(AppId_t appID, DepotId_t *pvecDepots, uint32 cMaxDepots)"
  },
  {
    "label": "GetAppInstallDir()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetAppInstallDir(AppId_t appID, char *pchFolder, uint32 cchFolderBufferSize)"
  },
  {
    "label": "BIsAppInstalled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "BIsAppInstalled(AppId_t appID)"
  },
  {
    "label": "GetAppOwner()",
    "kind": "Method",
    "detail": "Function (CSteamID)",
    "insertText": "GetAppOwner()"
  },
  {
    "label": "GetLaunchQueryParam()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "GetLaunchQueryParam(const char *pchKey)"
  },
  {
    "label": "GetDlcDownloadProgress()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetDlcDownloadProgress(AppId_t nAppID, uint64 *punBytesDownloaded, uint64 *punBytesTotal)"
  },
  {
    "label": "GetAppBuildId()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "GetAppBuildId()"
  },
  {
    "label": "RequestAllProofOfPurchaseKeys()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RequestAllProofOfPurchaseKeys()"
  },
  {
    "label": "STEAM_CALL_RESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STEAM_CALL_RESULT(FileDetailsResult_t ) virtual SteamAPICall_t GetFileDetails( const char* pszFileName)"
  },
  {
    "label": "GetLaunchCommandLine()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "GetLaunchCommandLine(char *pszCommandLine, int cubCommandLine)"
  },
  {
    "label": "BIsSubscribedFromFamilySharing()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "BIsSubscribedFromFamilySharing()"
  },
  {
    "label": "BIsTimedTrial()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "BIsTimedTrial(uint32* punSecondsAllowed, uint32* punSecondsPlayed)"
  },
  {
    "label": "SetDlcContext()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetDlcContext(AppId_t nAppID)"
  },
  {
    "label": "SteamApps()",
    "kind": "Method",
    "detail": "Function (} ; # define STEAMAPPS_INTERFACE_VERSION \" STEAMAPPS_INTERFACE_VERSION008 \" ISteamApps*)",
    "insertText": "SteamApps()"
  },
  {
    "label": "STEAM_DEFINE_USER_INTERFACE_ACCESSOR()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STEAM_DEFINE_USER_INTERFACE_ACCESSOR(ISteamApps *, SteamApps, STEAMAPPS_INTERFACE_VERSION)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# if)",
    "insertText": "defined(VALVE_CALLBACK_PACK_SMALL ) #pragma pack( push, 4 ) #elif defined( VALVE_CALLBACK_PACK_LARGE ) #pragma pack( push, 8)"
  }
]