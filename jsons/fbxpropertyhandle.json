[
  {
    "label": "FbxPropertyPage",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FbxPropertyPage"
  },
  {
    "label": "FbxPropertyHandle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FbxPropertyHandle"
  },
  {
    "label": "FbxConnectionPointFilter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FbxConnectionPointFilter"
  },
  {
    "label": "FBXSDK_DLL",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBXSDK_DLL"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (# ifndef _FBXSDK_CORE_PROPERTY_HANDLE_H_ # define _FBXSDK_CORE_PROPERTY_HANDLE_H_ # include<fbxsdk / fbxsdk_def . h> # include<fbxsdk / core / fbxconnectionpoint . h> # include<fbxsdk / core / fbxpropertytypes . h> # include<fbxsdk / core / fbxpropertydef . h> # include<fbxsdk / fbxsdk_nsbegin . h> class FbxPropertyPage ; class FbxPropertyHandle ; class FbxConnectionPointFilter ; class FBXSDK_DLL FbxPropertyHandle { public : FbxPropertyHandle)",
    "insertText": "Create()"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (FbxPropertyHandle)",
    "insertText": "Create(const FbxPropertyHandle& pInstanceOf)"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (FbxPropertyHandle)",
    "insertText": "Create(const char* pName, EFbxType pType=eFbxUndefined)"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (FbxPropertyHandle)",
    "insertText": "Create(const char* pName, FbxPropertyHandle pTypeInfo)"
  },
  {
    "label": "Destroy()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Destroy()"
  },
  {
    "label": "FbxPropertyHandle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FbxPropertyHandle()"
  },
  {
    "label": "FbxPropertyHandle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FbxPropertyHandle(const FbxPropertyHandle& pAddress)"
  },
  {
    "label": "FbxPropertyHandle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FbxPropertyHandle(FbxPropertyPage* pPage, FbxInt pId=FBXSDK_PROPERTY_ID_ROOT)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FbxPropertyHandle&)",
    "insertText": "operator(const FbxPropertyHandle& pHandle)"
  },
  {
    "label": "Is()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Is(const FbxPropertyHandle& pHandle)"
  },
  {
    "label": "Valid()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Valid()"
  },
  {
    "label": "GetName()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "GetName()"
  },
  {
    "label": "GetLabel()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "GetLabel()"
  },
  {
    "label": "SetLabel()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetLabel(const char* pLabel)"
  },
  {
    "label": "GetType()",
    "kind": "Method",
    "detail": "Function (EFbxType)",
    "insertText": "GetType()"
  },
  {
    "label": "GetTypeInfo()",
    "kind": "Method",
    "detail": "Function (FbxPropertyHandle)",
    "insertText": "GetTypeInfo()"
  },
  {
    "label": "GetFlags()",
    "kind": "Method",
    "detail": "Function (FbxPropertyFlags::EFlags)",
    "insertText": "GetFlags()"
  },
  {
    "label": "GetFlagsInheritType()",
    "kind": "Method",
    "detail": "Function (FbxPropertyFlags::EInheritType)",
    "insertText": "GetFlagsInheritType(FbxPropertyFlags::EFlags pFlags, bool pCheckReferences)"
  },
  {
    "label": "ModifyFlags()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ModifyFlags(FbxPropertyFlags::EFlags pFlags, bool pValue)"
  },
  {
    "label": "SetFlagsInheritType()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetFlagsInheritType(FbxPropertyFlags::EFlags pFlags, FbxPropertyFlags::EInheritType pType)"
  },
  {
    "label": "GetUserData()",
    "kind": "Method",
    "detail": "Function (void*)",
    "insertText": "GetUserData()"
  },
  {
    "label": "SetUserData()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetUserData(const void* pUserData)"
  },
  {
    "label": "GetUserTag()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "GetUserTag()"
  },
  {
    "label": "SetUserTag()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetUserTag(int pUserData)"
  },
  {
    "label": "AddEnumValue()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "AddEnumValue(const char* pStringValue)"
  },
  {
    "label": "InsertEnumValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InsertEnumValue(int pIndex, const char* pStringValue)"
  },
  {
    "label": "GetEnumCount()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "GetEnumCount()"
  },
  {
    "label": "SetEnumValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetEnumValue(int pIndex, const char* pStringValue)"
  },
  {
    "label": "RemoveEnumValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveEnumValue(int pIndex)"
  },
  {
    "label": "GetEnumValue()",
    "kind": "Method",
    "detail": "Function (char*)",
    "insertText": "GetEnumValue(int pIndex)"
  },
  {
    "label": "BeginCreateOrFindProperty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginCreateOrFindProperty()"
  },
  {
    "label": "EndCreateOrFindProperty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EndCreateOrFindProperty()"
  },
  {
    "label": "IsRoot()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsRoot()"
  },
  {
    "label": "IsChildOf()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsChildOf(const FbxPropertyHandle& pParent)"
  },
  {
    "label": "IsDescendentOf()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsDescendentOf(const FbxPropertyHandle& pParent)"
  },
  {
    "label": "SetParent()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetParent(const FbxPropertyHandle& pOther)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (FbxPropertyHandle)",
    "insertText": "Add(const char* pName, const FbxPropertyHandle& pTypeInfo)"
  },
  {
    "label": "GetParent()",
    "kind": "Method",
    "detail": "Function (FbxPropertyHandle)",
    "insertText": "GetParent()"
  },
  {
    "label": "GetChild()",
    "kind": "Method",
    "detail": "Function (FbxPropertyHandle)",
    "insertText": "GetChild()"
  },
  {
    "label": "GetSibling()",
    "kind": "Method",
    "detail": "Function (FbxPropertyHandle)",
    "insertText": "GetSibling()"
  },
  {
    "label": "GetFirstDescendent()",
    "kind": "Method",
    "detail": "Function (FbxPropertyHandle)",
    "insertText": "GetFirstDescendent()"
  },
  {
    "label": "GetNextDescendent()",
    "kind": "Method",
    "detail": "Function (FbxPropertyHandle)",
    "insertText": "GetNextDescendent(const FbxPropertyHandle& pHandle)"
  },
  {
    "label": "Find()",
    "kind": "Method",
    "detail": "Function (FbxPropertyHandle)",
    "insertText": "Find(const char* pName, bool pCaseSensitive)"
  },
  {
    "label": "Find()",
    "kind": "Method",
    "detail": "Function (FbxPropertyHandle)",
    "insertText": "Find(const char* pName, const FbxPropertyHandle& pTypeInfo, bool pCaseSensitive)"
  },
  {
    "label": "Find()",
    "kind": "Method",
    "detail": "Function (FbxPropertyHandle)",
    "insertText": "Find(const char* pName, const char* pChildrenSeparator, bool pCaseSensitive)"
  },
  {
    "label": "Find()",
    "kind": "Method",
    "detail": "Function (FbxPropertyHandle)",
    "insertText": "Find(const char* pName, const char* pChildrenSeparator, const FbxPropertyHandle& pTypeInfo, bool pCaseSensitive)"
  },
  {
    "label": "ConnectSrc()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ConnectSrc(const FbxPropertyHandle& pSrc, const FbxConnection::EType pType=FbxConnection::eDefault)"
  },
  {
    "label": "GetSrcCount()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "GetSrcCount(FbxConnectionPointFilter* pFilter=0)"
  },
  {
    "label": "GetSrc()",
    "kind": "Method",
    "detail": "Function (FbxPropertyHandle)",
    "insertText": "GetSrc(FbxConnectionPointFilter* pFilter=0, int pIndex=0)"
  },
  {
    "label": "DisconnectSrc()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DisconnectSrc(const FbxPropertyHandle& pSrc)"
  },
  {
    "label": "IsConnectedSrc()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsConnectedSrc(const FbxPropertyHandle& pSrc)"
  },
  {
    "label": "ConnectDst()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ConnectDst(const FbxPropertyHandle& pDst, const FbxConnection::EType pType=FbxConnection::eDefault)"
  },
  {
    "label": "GetDstCount()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "GetDstCount(FbxConnectionPointFilter* pFilter=0)"
  },
  {
    "label": "GetDst()",
    "kind": "Method",
    "detail": "Function (FbxPropertyHandle)",
    "insertText": "GetDst(FbxConnectionPointFilter* pFilter=0, int pIndex=0)"
  },
  {
    "label": "DisconnectDst()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DisconnectDst(const FbxPropertyHandle& pDst)"
  },
  {
    "label": "IsConnectedDst()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsConnectedDst(const FbxPropertyHandle& pDst)"
  },
  {
    "label": "ClearConnectCache()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearConnectCache()"
  },
  {
    "label": "WipeAllConnections()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WipeAllConnections()"
  },
  {
    "label": "HasMin()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasMin()"
  },
  {
    "label": "GetMin()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetMin(void* pValue, EFbxType pValueType)"
  },
  {
    "label": "SetMin()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetMin(const void* pValue, EFbxType pValueType)"
  },
  {
    "label": "SetMin()",
    "kind": "Method",
    "detail": "Function (template<class T> bool)",
    "insertText": "SetMin(const T& pValue)"
  },
  {
    "label": "GetMin()",
    "kind": "Method",
    "detail": "Function (} template<class T> T)",
    "insertText": "GetMin(const T* pFBX_TYPE)"
  },
  {
    "label": "GetMin()",
    "kind": "Method",
    "detail": "Function (T lValue ;)",
    "insertText": "GetMin(&lValue, FbxTypeOf(lValue))"
  },
  {
    "label": "GetSoftMin()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetSoftMin(void* pValue, EFbxType pValueType)"
  },
  {
    "label": "SetSoftMin()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetSoftMin(const void* pValue, EFbxType pValueType)"
  },
  {
    "label": "SetSoftMin()",
    "kind": "Method",
    "detail": "Function (template<class T> bool)",
    "insertText": "SetSoftMin(const T& pValue)"
  },
  {
    "label": "GetSoftMin()",
    "kind": "Method",
    "detail": "Function (} template<class T> T)",
    "insertText": "GetSoftMin(const T* pFBX_TYPE)"
  },
  {
    "label": "GetSoftMin()",
    "kind": "Method",
    "detail": "Function (T lValue ;)",
    "insertText": "GetSoftMin(&lValue, FbxTypeOf(lValue))"
  },
  {
    "label": "GetMax()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetMax(void* pValue, EFbxType pValueType)"
  },
  {
    "label": "SetMax()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetMax(const void* pValue, EFbxType pValueType)"
  },
  {
    "label": "SetMax()",
    "kind": "Method",
    "detail": "Function (template<class T> bool)",
    "insertText": "SetMax(const T& pValue)"
  },
  {
    "label": "GetMax()",
    "kind": "Method",
    "detail": "Function (} template<class T> T)",
    "insertText": "GetMax(const T* pFBX_TYPE)"
  },
  {
    "label": "GetMax()",
    "kind": "Method",
    "detail": "Function (T lValue ;)",
    "insertText": "GetMax(&lValue, FbxTypeOf(lValue))"
  },
  {
    "label": "GetSoftMax()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetSoftMax(void* pValue, EFbxType pValueType)"
  },
  {
    "label": "SetSoftMax()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetSoftMax(const void* pValue, EFbxType pValueType)"
  },
  {
    "label": "SetSoftMax()",
    "kind": "Method",
    "detail": "Function (template<class T> bool)",
    "insertText": "SetSoftMax(const T& pValue)"
  },
  {
    "label": "GetSoftMax()",
    "kind": "Method",
    "detail": "Function (} template<class T> T)",
    "insertText": "GetSoftMax(const T* pFBX_TYPE)"
  },
  {
    "label": "GetSoftMax()",
    "kind": "Method",
    "detail": "Function (T lValue ;)",
    "insertText": "GetSoftMax(&lValue, FbxTypeOf(lValue))"
  },
  {
    "label": "SetValueInheritType()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetValueInheritType(FbxPropertyFlags::EInheritType pType)"
  },
  {
    "label": "GetDefaultValue()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetDefaultValue(void* pValue, EFbxType pValueType)"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Get(void* pValue, EFbxType pValueType)"
  },
  {
    "label": "Set()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Set(const void* pValue, EFbxType pValueType, bool pCheckValueEquality)"
  },
  {
    "label": "Set()",
    "kind": "Method",
    "detail": "Function (template<class T> bool)",
    "insertText": "Set(const T& pValue)"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (} template<class T> T)",
    "insertText": "Get(const T* pFBX_TYPE)"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (T lValue ;)",
    "insertText": "Get(&lValue, FbxTypeOf(lValue))"
  },
  {
    "label": "GetPageDataPtr()",
    "kind": "Method",
    "detail": "Function (void*)",
    "insertText": "GetPageDataPtr()"
  },
  {
    "label": "PushPropertiesToParentInstance()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PushPropertiesToParentInstance()"
  },
  {
    "label": "IsAReferenceTo()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsAReferenceTo(void)"
  },
  {
    "label": "GetReferenceTo()",
    "kind": "Method",
    "detail": "Function (void*)",
    "insertText": "GetReferenceTo(void)"
  },
  {
    "label": "IsReferencedBy()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsReferencedBy(void)"
  },
  {
    "label": "GetReferencedByCount()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "GetReferencedByCount(void)"
  },
  {
    "label": "GetReferencedBy()",
    "kind": "Method",
    "detail": "Function (void*)",
    "insertText": "GetReferencedBy(int pIndex)"
  }
]