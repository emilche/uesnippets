[
  {
    "label": "ANIMATIONEDITORWIDGETS_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ANIMATIONEDITORWIDGETS_API"
  },
  {
    "label": "FSchematicGraphModel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSchematicGraphModel"
  },
  {
    "label": "FSchematicGraphNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSchematicGraphNode"
  },
  {
    "label": "SCHEMATICGRAPHTAG_BODY()",
    "kind": "Method",
    "detail": "Function (# pragma once # if WITH_EDITOR # include \" SchematicGraphDefines . h \" # define)",
    "insertText": "SCHEMATICGRAPHTAG_BODY(ClassName, SuperClass) \\ SCHEMATICGRAPHELEMENT_BODY(ClassName, SuperClass, FSchematicGraphTag)"
  },
  {
    "label": "SCHEMATICGRAPHELEMENT_BODY_BASE()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "SCHEMATICGRAPHELEMENT_BODY_BASE(FSchematicGraphTag) FSchematicGraphTag()"
  },
  {
    "label": "GetNode()",
    "kind": "Method",
    "detail": "Function (const FSchematicGraphNode*)",
    "insertText": "GetNode()"
  },
  {
    "label": "GetGuid()",
    "kind": "Method",
    "detail": "Function (const FGuid&)",
    "insertText": "GetGuid()"
  },
  {
    "label": "GetForegroundColor()",
    "kind": "Method",
    "detail": "Function (BackgroundColor = InBackgroundColor ; } FLinearColor)",
    "insertText": "GetForegroundColor()"
  },
  {
    "label": "GetBackgroundBrush()",
    "kind": "Method",
    "detail": "Function (LabelColor = InLabelColor ; } const FSlateBrush*)",
    "insertText": "GetBackgroundBrush()"
  },
  {
    "label": "GetForegroundBrush()",
    "kind": "Method",
    "detail": "Function (BackgroundBrush = InBackgroundBrush ; } const FSlateBrush*)",
    "insertText": "GetForegroundBrush()"
  },
  {
    "label": "GetToolTip()",
    "kind": "Method",
    "detail": "Function (Label = InLabel ; } FText)",
    "insertText": "GetToolTip()"
  },
  {
    "label": "GetPlacementAngle()",
    "kind": "Method",
    "detail": "Function (ToolTip = InToolTip ; } float)",
    "insertText": "GetPlacementAngle()"
  },
  {
    "label": "GetVisibility()",
    "kind": "Method",
    "detail": "Function (PlacementAngle = InPlacementAngle ; } ESchematicGraphVisibility::Type)",
    "insertText": "GetVisibility()"
  },
  {
    "label": "NewGuid()",
    "kind": "Method",
    "detail": "Function (Visibility = InVisibility ; } protected : FSchematicGraphNode* Node = nullptr ; FGuid Guid =)",
    "insertText": "NewGuid()"
  },
  {
    "label": "FLinearColor()",
    "kind": "Method",
    "detail": "Function (FLinearColor BackgroundColor =)",
    "insertText": "FLinearColor(FColor(0, 112, 224))"
  },
  {
    "label": "FText()",
    "kind": "Method",
    "detail": "Function (FLinearColor ForegroundColor = FLinearColor::White ; FLinearColor LabelColor = FLinearColor::White ; const FSlateBrush* BackgroundBrush = nullptr ; const FSlateBrush* ForegroundBrush = nullptr ; FText Label =)",
    "insertText": "FText()"
  },
  {
    "label": "SCHEMATICGRAPHTAG_BODY()",
    "kind": "Method",
    "detail": "Function (float PlacementAngle = - 4 5 . f ; ESchematicGraphVisibility::Type Visibility = ESchematicGraphVisibility::Visible ; class FSchematicGraphModel ; class FSchematicGraphNode ; } ; class FSchematicGraphGroupTag : public FSchematicGraphTag { public :)",
    "insertText": "SCHEMATICGRAPHTAG_BODY(FSchematicGraphGroupTag, FSchematicGraphTag) virtual ~FSchematicGraphGroupTag()"
  },
  {
    "label": "GetLabel()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetLabel()"
  }
]