[
  {
    "label": "FGPUSkinPassthroughVertexFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGPUSkinPassthroughVertexFactory"
  },
  {
    "label": "FGPUBaseSkinVertexFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGPUBaseSkinVertexFactory"
  },
  {
    "label": "FMorphVertexBuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMorphVertexBuffer"
  },
  {
    "label": "FSkeletalMeshObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSkeletalMeshObject"
  },
  {
    "label": "FSkeletalMeshLODRenderData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSkeletalMeshLODRenderData"
  },
  {
    "label": "FSkeletalMeshObjectGPUSkin",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSkeletalMeshObjectGPUSkin"
  },
  {
    "label": "FSkeletalMeshVertexClothBuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSkeletalMeshVertexClothBuffer"
  },
  {
    "label": "FVertexOffsetBuffers",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVertexOffsetBuffers"
  },
  {
    "label": "FClothSimulData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FClothSimulData"
  },
  {
    "label": "FSkelMeshRenderSection",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSkelMeshRenderSection"
  },
  {
    "label": "FVertexBufferAndSRV",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FVertexBufferAndSRV"
  },
  {
    "label": "FRayTracingGeometrySegment",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRayTracingGeometrySegment"
  },
  {
    "label": "FGPUSkinCacheEntry",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGPUSkinCacheEntry"
  },
  {
    "label": "FClothSimulEntry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FClothSimulEntry"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FGPUSkinCache",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGPUSkinCache"
  },
  {
    "label": "FRWBufferTracker",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRWBufferTracker"
  },
  {
    "label": "ESkinCacheInitSettings",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ESkinCacheInitSettings"
  },
  {
    "label": "FDispatchEntry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDispatchEntry"
  },
  {
    "label": "FSortedDispatchEntry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSortedDispatchEntry"
  },
  {
    "label": "FSkinCacheRWBuffer",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSkinCacheRWBuffer"
  },
  {
    "label": "FRWBuffersAllocation",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRWBuffersAllocation"
  },
  {
    "label": "FRWBufferTracker",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRWBufferTracker"
  },
  {
    "label": "FRWBufferTracker",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRWBufferTracker"
  },
  {
    "label": "ShouldWeCompileGPUSkinVFShaders()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldWeCompileGPUSkinVFShaders(EShaderPlatform Platform, ERHIFeatureLevel::Type FeatureLevel)"
  },
  {
    "label": "GPUSkinCacheNeedsDuplicatedVertices()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GPUSkinCacheNeedsDuplicatedVertices()"
  },
  {
    "label": "FGPUSkinCache()",
    "kind": "Method",
    "detail": "Function (ENGINE_API)",
    "insertText": "FGPUSkinCache(ERHIFeatureLevel::Type InFeatureLevel, bool bInRequiresMemoryLimit, UWorld* InWorld)"
  },
  {
    "label": "UpdateSkinWeightBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateSkinWeightBuffer(FGPUSkinCacheEntry* Entry)"
  },
  {
    "label": "SetEntryGPUSkin()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetEntryGPUSkin(FGPUSkinCacheEntry* Entry, FSkeletalMeshObject* Skin)"
  },
  {
    "label": "ProcessEntry()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ProcessEntry(\n\t\tEGPUSkinCacheEntryMode Mode,\n\t\tFRHICommandList& RHICmdList, \n\t\tFGPUBaseSkinVertexFactory* VertexFactory,\n\t\tFGPUSkinPassthroughVertexFactory* TargetVertexFactory, \n\t\tconst FSkelMeshRenderSection& BatchElement, \n\t\tFSkeletalMeshObject* Skin,\n\t\tconst FMorphVertexBuffer* MorphVertexBuffer, \n\t\tconst FSkeletalMeshVertexClothBuffer* ClothVertexBuffer, \n\t\tconst FClothSimulData* SimData,\n\t\tconst FMatrix44f& ClothToLocal,\n\t\tfloat ClothBlendWeight, \n\t\tFVector3f ClothScale,\n\t\tuint32 RevisionNumber, \n\t\tint32 Section,\n\t\tint32 LOD,\n\t\tbool bRecreating,\n\t\tFGPUSkinCacheEntry*& InOutEntry\n\t\t)"
  },
  {
    "label": "Release()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Release(FGPUSkinCacheEntry*& SkinCacheEntry)"
  },
  {
    "label": "IsEntryValid()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsEntryValid(FGPUSkinCacheEntry* SkinCacheEntry, int32 Section)"
  },
  {
    "label": "GetVisualizationDebugColor()",
    "kind": "Method",
    "detail": "Function (FColor)",
    "insertText": "GetVisualizationDebugColor(const FName& GPUSkinCacheVisualizationMode, FGPUSkinCacheEntry* Entry, FGPUSkinCacheEntry* RayTracingEntry, uint32 SectionIndex)"
  },
  {
    "label": "GetExtraRequiredMemoryAndReset()",
    "kind": "Method",
    "detail": "Function (uint64)",
    "insertText": "GetExtraRequiredMemoryAndReset()"
  },
  {
    "label": "IsGPUSkinCacheRayTracingSupported()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsGPUSkinCacheRayTracingSupported()"
  },
  {
    "label": "CalculateRequiredMemory()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "CalculateRequiredMemory(NumVertices, WithTangents, UseIntermediateTangents, IntermediateAccumulatedTangentsSize)"
  },
  {
    "label": "RemoveAllFromTransitionArray()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveAllFromTransitionArray(TSet<FSkinCacheRWBuffer*>& BuffersToTransition)"
  },
  {
    "label": "GetUpdatedFrame()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetUpdatedFrame(FGPUSkinCacheEntry const* Entry, uint32 SectionIndex)"
  },
  {
    "label": "GetCachedGeometry()",
    "kind": "Method",
    "detail": "Function (FCachedGeometry::Section)",
    "insertText": "GetCachedGeometry(FGPUSkinCacheEntry* InOutEntry, uint32 SectionId)"
  },
  {
    "label": "ProcessRayTracingGeometryToUpdate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessRayTracingGeometryToUpdate(FRHICommandList& RHICmdList, FGPUSkinCacheEntry* SkinCacheEntry)"
  },
  {
    "label": "DoDispatch()",
    "kind": "Method",
    "detail": "Function (ENGINE_API)",
    "insertText": "DoDispatch(FRHICommandList& RHICmdList)"
  },
  {
    "label": "MakeBufferTransitions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MakeBufferTransitions(FRHICommandList& RHICmdList, TArray<FSkinCacheRWBuffer*>& Buffers, ERHIAccess ToState)"
  },
  {
    "label": "GetBufferUAVs()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetBufferUAVs(const TArray<FSkinCacheRWBuffer*>& InBuffers, TArray<FRHIUnorderedAccessView*>& OutUAVs)"
  },
  {
    "label": "DispatchUpdateSkinTangents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DispatchUpdateSkinTangents(FRHICommandList& RHICmdList, FGPUSkinCacheEntry* Entry, int32 SectionIndex, FSkinCacheRWBuffer*& StagingBuffer, bool bTrianglePass)"
  },
  {
    "label": "PrepareUpdateSkinning()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PrepareUpdateSkinning(\n\t\tFGPUSkinCacheEntry* Entry, \n\t\tint32 Section, \n\t\tuint32 RevisionNumber, \n\t\tTArray<FSkinCacheRWBuffer*>* OverlappedUAVs\n\t\t)"
  },
  {
    "label": "DispatchUpdateSkinning()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DispatchUpdateSkinning(\n\t\tFRHICommandList& RHICmdList, \n\t\tFGPUSkinCacheEntry* Entry, \n\t\tint32 Section, \n\t\tuint32 RevisionNumber,\n\t\tTArray<FSkinCacheRWBuffer*>& BuffersToTransitionToRead\n\t\t)"
  },
  {
    "label": "Cleanup()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Cleanup()"
  },
  {
    "label": "TransitionAllToReadable()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TransitionAllToReadable(FRHICommandList& RHICmdList, const TArray<FSkinCacheRWBuffer*>& BuffersToTransitionToRead)"
  },
  {
    "label": "ReleaseSkinCacheEntry()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseSkinCacheEntry(FGPUSkinCacheEntry* SkinCacheEntry)"
  },
  {
    "label": "InvalidateAllEntries()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InvalidateAllEntries()"
  },
  {
    "label": "CVarSinkFunction()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CVarSinkFunction()"
  },
  {
    "label": "IncrementDispatchCounter()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IncrementDispatchCounter(FRHICommandList& RHICmdList)"
  }
]