[
  {
    "label": "FZOrderCurvePoints",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FZOrderCurvePoints"
  },
  {
    "label": "FBRIOPoints",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBRIOPoints"
  },
  {
    "label": "FZOrderCurvePoints()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" BoxTypes . h \" # include \" Containers / Array . h \" # include \" Containers / ArrayView . h \" # include \" CoreMinimal . h \" # include \" Math / UnrealMathSSE . h \" # include \" Math / Vector2D . h \" # include \" Math / RandomStream . h \" namespace UE { namespace Geometry { using namespace UE::Math ; struct FZOrderCurvePoints { int32 MaxTreeDepth = 1 0 ; TArray<int32> Order ; public :)",
    "insertText": "FZOrderCurvePoints(int32 MaxTreeDepth = 10) : MaxTreeDepth(MaxTreeDepth)"
  },
  {
    "label": "Compute()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Compute(TArrayView<const FVector2d> Points, const FAxisAlignedBox2d& Bounds = FAxisAlignedBox2d::Empty())"
  },
  {
    "label": "Compute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Compute(TArrayView<const FVector2f> Points, const FAxisAlignedBox2f& Bounds = FAxisAlignedBox2f::Empty())"
  },
  {
    "label": "Compute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Compute(TArrayView<const FVector3d> Points, const FAxisAlignedBox3d& Bounds = FAxisAlignedBox3d::Empty())"
  },
  {
    "label": "Compute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Compute(TArrayView<const FVector3f> Points, const FAxisAlignedBox3f& Bounds = FAxisAlignedBox3f::Empty())"
  },
  {
    "label": "FBRIOPoints()",
    "kind": "Method",
    "detail": "Function (} ; struct FBRIOPoints { int32 MaxTreeDepth = 1 0 ; TArray<int32> Order ; public :)",
    "insertText": "FBRIOPoints(int32 MaxTreeDepth = 10) : MaxTreeDepth(MaxTreeDepth)"
  },
  {
    "label": "Compute()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Compute(TArrayView<const FVector2d> Points, const FAxisAlignedBox2d& Bounds = FAxisAlignedBox2d::Empty(), const FRandomStream& Random = FRandomStream())"
  },
  {
    "label": "Compute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Compute(TArrayView<const FVector2f> Points, const FAxisAlignedBox2f& Bounds = FAxisAlignedBox2f::Empty(), const FRandomStream& Random = FRandomStream())"
  },
  {
    "label": "Compute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Compute(TArrayView<const FVector3d> Points, const FAxisAlignedBox3d& Bounds = FAxisAlignedBox3d::Empty(), const FRandomStream& Random = FRandomStream())"
  },
  {
    "label": "Compute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Compute(TArrayView<const FVector3f> Points, const FAxisAlignedBox3f& Bounds = FAxisAlignedBox3f::Empty(), const FRandomStream& Random = FRandomStream())"
  }
]