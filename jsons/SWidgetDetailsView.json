[
  {
    "label": "IDetailsView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDetailsView"
  },
  {
    "label": "SBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SBox"
  },
  {
    "label": "SEditableTextBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SEditableTextBox"
  },
  {
    "label": "SWidgetDetailsView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidgetDetailsView"
  },
  {
    "label": "FWidgetBlueprintEditor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWidgetBlueprintEditor"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Layout / Visibility . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Widgets / SCompoundWidget . h \" # include \" Misc / NotifyHook . h \" # include \" WidgetBlueprintEditor . h \" class IDetailsView ; class SBox ; class SEditableTextBox ; class SWidgetDetailsView : public SCompoundWidget,public FNotifyHook { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SWidgetDetailsView)"
  },
  {
    "label": "SLATE_END_ARGS()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_END_ARGS() void Construct(const FArguments& InArgs, TSharedPtr<FWidgetBlueprintEditor> InBlueprintEditor)"
  },
  {
    "label": "SWidgetDetailsView()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "SWidgetDetailsView()"
  },
  {
    "label": "GetPropertyView()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<class IDetailsView>)",
    "insertText": "GetPropertyView()"
  },
  {
    "label": "NotifyPostChange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyPostChange(const FPropertyChangedEvent& PropertyChangedEvent, FEditPropertyChain* PropertyThatChanged)"
  },
  {
    "label": "RegisterCustomizations()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "RegisterCustomizations()"
  },
  {
    "label": "OnEditorSelectionChanging()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnEditorSelectionChanging()"
  },
  {
    "label": "OnEditorSelectionChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnEditorSelectionChanged()"
  },
  {
    "label": "OnPropertyViewObjectArrayChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPropertyViewObjectArrayChanged(const FString& InTitle, const TArray<UObject*>& InObjects)"
  },
  {
    "label": "IsDetailsPanelEditingAllowed()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsDetailsPanelEditingAllowed()"
  },
  {
    "label": "IsWidgetNameFieldEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsWidgetNameFieldEnabled()"
  },
  {
    "label": "ClearFocusIfOwned()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearFocusIfOwned()"
  },
  {
    "label": "IsPropertyVisible()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsPropertyVisible(const FPropertyAndParent& PropertyAndParent)"
  },
  {
    "label": "IsWidgetCDOSelected()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsWidgetCDOSelected()"
  },
  {
    "label": "GetNameAreaVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "GetNameAreaVisibility()"
  },
  {
    "label": "GetAddComponentAreaVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "GetAddComponentAreaVisibility()"
  },
  {
    "label": "GetNameIcon()",
    "kind": "Method",
    "detail": "Function (const FSlateBrush*)",
    "insertText": "GetNameIcon()"
  },
  {
    "label": "GetNameText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetNameText()"
  },
  {
    "label": "IsSingleObjectSelected()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsSingleObjectSelected()"
  },
  {
    "label": "HandleVerifyNameTextChanged()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HandleVerifyNameTextChanged(const FText& InText, FText& OutErrorMessage)"
  },
  {
    "label": "HandleNameTextChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleNameTextChanged(const FText& Text)"
  },
  {
    "label": "HandleNameTextCommitted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleNameTextCommitted(const FText& Text, ETextCommit::Type CommitType)"
  },
  {
    "label": "GetIsVariable()",
    "kind": "Method",
    "detail": "Function (ECheckBoxState)",
    "insertText": "GetIsVariable()"
  },
  {
    "label": "HandleIsVariableChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleIsVariableChanged(ECheckBoxState CheckState)"
  },
  {
    "label": "GetCategoryAreaVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "GetCategoryAreaVisibility()"
  },
  {
    "label": "GetCategoryText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetCategoryText()"
  },
  {
    "label": "HandleCategoryTextCommitted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleCategoryTextCommitted(const FText& Text, ETextCommit::Type CommitType)"
  },
  {
    "label": "OnAddComponentButtonClicked()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnAddComponentButtonClicked(TSharedPtr<FWidgetBlueprintEditor> InBlueprintEditor)"
  }
]