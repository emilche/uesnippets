[
  {
    "label": "FD3D11GlobalStats",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FD3D11GlobalStats"
  },
  {
    "label": "has",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "has"
  },
  {
    "label": "class",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "class"
  },
  {
    "label": "FD3D11DynamicRHI",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FD3D11DynamicRHI"
  },
  {
    "label": "FD3D11DisjointTimeStampQuery",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FD3D11DisjointTimeStampQuery"
  },
  {
    "label": "FD3D11DynamicRHI",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FD3D11DynamicRHI"
  },
  {
    "label": "FD3D11EventNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FD3D11EventNode"
  },
  {
    "label": "FD3D11DynamicRHI",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FD3D11DynamicRHI"
  },
  {
    "label": "FD3D11EventNodeFrame",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FD3D11EventNodeFrame"
  },
  {
    "label": "FD3D11DynamicRHI",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FD3D11DynamicRHI"
  },
  {
    "label": "so",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "so"
  },
  {
    "label": "FD3DGPUProfiler",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FD3DGPUProfiler"
  },
  {
    "label": "FD3D11DynamicRHI",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FD3D11DynamicRHI"
  },
  {
    "label": "FD3D11DynamicRHI",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FD3D11DynamicRHI"
  },
  {
    "label": "FD3D11DynamicRHI",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FD3D11DynamicRHI"
  },
  {
    "label": "FD3D11TransitionData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FD3D11TransitionData"
  },
  {
    "label": "AGSContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "AGSContext"
  },
  {
    "label": "FD3D11Adapter",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FD3D11Adapter"
  },
  {
    "label": "D3D11RHI_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "D3D11RHI_API"
  },
  {
    "label": "FD3D11Viewport",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FD3D11Viewport"
  },
  {
    "label": "FUpdateTextureRegion2D",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FUpdateTextureRegion2D"
  },
  {
    "label": "FUpdateTextureRegion3D",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FUpdateTextureRegion3D"
  },
  {
    "label": "IRHICommandContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IRHICommandContext"
  },
  {
    "label": "FRHICommandListBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRHICommandListBase"
  },
  {
    "label": "FRHICommandListBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRHICommandListBase"
  },
  {
    "label": "FRHICommandListImmediate",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRHICommandListImmediate"
  },
  {
    "label": "FRHICommandListImmediate",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRHICommandListImmediate"
  },
  {
    "label": "FRHICommandListImmediate",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRHICommandListImmediate"
  },
  {
    "label": "FRHICommandListImmediate",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRHICommandListImmediate"
  },
  {
    "label": "FRHICommandListImmediate",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRHICommandListImmediate"
  },
  {
    "label": "FRHICommandListImmediate",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRHICommandListImmediate"
  },
  {
    "label": "FRHICommandListImmediate",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRHICommandListImmediate"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FD3D11RenderQuery",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FD3D11RenderQuery"
  },
  {
    "label": "FProfiler",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FProfiler"
  },
  {
    "label": "FFrame",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFrame"
  },
  {
    "label": "FTimestampCalibration",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTimestampCalibration"
  },
  {
    "label": "ShaderType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ShaderType"
  },
  {
    "label": "FD3DGPUProfiler",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FD3DGPUProfiler"
  },
  {
    "label": "FD3D11DynamicRHIModule",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FD3D11DynamicRHIModule"
  },
  {
    "label": "FRangeAllocator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRangeAllocator"
  },
  {
    "label": "FRange",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRange"
  },
  {
    "label": "StartTiming()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StartTiming()"
  },
  {
    "label": "EndTiming()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EndTiming()"
  },
  {
    "label": "GetTiming()",
    "kind": "Method",
    "detail": "Function (uint64)",
    "insertText": "GetTiming(bool bGetCurrentResultsAndBlock = false)"
  },
  {
    "label": "CalibrateTimers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CalibrateTimers(FD3D11DynamicRHI* InD3DRHI)"
  },
  {
    "label": "PlatformStaticInitialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PlatformStaticInitialize(void* UserData)"
  },
  {
    "label": "FD3D11DisjointTimeStampQuery()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FD3D11DisjointTimeStampQuery(class FD3D11DynamicRHI* InD3DRHI)"
  },
  {
    "label": "StartTracking()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StartTracking()"
  },
  {
    "label": "EndTracking()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EndTracking()"
  },
  {
    "label": "IsResultValid()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsResultValid()"
  },
  {
    "label": "GetResult()",
    "kind": "Method",
    "detail": "Function (D3D11_QUERY_DATA_TIMESTAMP_DISJOINT)",
    "insertText": "GetResult()"
  },
  {
    "label": "FD3D11EventNode()",
    "kind": "Method",
    "detail": "Function (new)",
    "insertText": "FD3D11EventNode(InName, InParent, D3D11RHI)"
  },
  {
    "label": "BeginFrame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginFrame(class FD3D11DynamicRHI* InRHI)"
  },
  {
    "label": "EndFrame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EndFrame()"
  },
  {
    "label": "InitD3DDevice()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitD3DDevice()"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT(\"D3D11\")"
  },
  {
    "label": "BindUniformBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BindUniformBuffer(uint32 BufferIndex, FRHIUniformBuffer* BufferRHI)"
  },
  {
    "label": "ApplyStaticUniformBuffers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyStaticUniformBuffers(TRHIShader* Shader)"
  },
  {
    "label": "SetShaderParametersCommon()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetShaderParametersCommon(FD3D11ConstantBuffer* StageConstantBuffer, TConstArrayView<uint8> InParametersData, TConstArrayView<FRHIShaderParameter> InParameters, TConstArrayView<FRHIShaderParameterResource> InResourceParameters)"
  },
  {
    "label": "SetShaderUnbindsCommon()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetShaderUnbindsCommon(TConstArrayView<FRHIShaderParameterUnbind> InUnbinds)"
  },
  {
    "label": "GetQueryData()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetQueryData(ID3D11Query* Query, void* Data, SIZE_T DataSize, bool bTimestamp, bool bWait, bool bStallRHIThread)"
  },
  {
    "label": "RHIAsyncCopyTexture2DCopy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RHIAsyncCopyTexture2DCopy(FRHITexture* NewTexture2DRHI, FRHITexture* Texture2DRHI, int32 NewMipCount, int32 NewSizeX, int32 NewSizeY, FThreadSafeCounter* RequestStatus)"
  },
  {
    "label": "SetRenderTargets()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRenderTargets(uint32 NumSimultaneousRenderTargets, const FRHIRenderTargetView* NewRenderTargets, const FRHIDepthRenderTargetView* NewDepthStencilTarget)"
  },
  {
    "label": "InternalSetUAVCS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InternalSetUAVCS(uint32 BindIndex, FD3D11UnorderedAccessView* UnorderedAccessViewRHI)"
  },
  {
    "label": "InternalSetUAVVSPS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InternalSetUAVVSPS(uint32 BindIndex, FD3D11UnorderedAccessView* UnorderedAccessViewRHI)"
  },
  {
    "label": "SetRenderTargetsAndClear()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRenderTargetsAndClear(const FRHISetRenderTargetsInfo& RenderTargetsInfo)"
  },
  {
    "label": "PollQueryResults()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PollQueryResults()"
  },
  {
    "label": "ResolveTexture()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResolveTexture(UE::RHICore::FResolveTextureInfo Info)"
  },
  {
    "label": "Lock()",
    "kind": "Method",
    "detail": "Function (FScopeLock)",
    "insertText": "Lock(&LockTrackerCS)"
  },
  {
    "label": "Lock()",
    "kind": "Method",
    "detail": "Function (FScopeLock)",
    "insertText": "Lock(&LockTrackerCS)"
  },
  {
    "label": "IsQuadBufferStereoEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsQuadBufferStereoEnabled()"
  },
  {
    "label": "DisableQuadBufferStereo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DisableQuadBufferStereo()"
  },
  {
    "label": "EnableDepthBoundsTest()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnableDepthBoundsTest(bool bEnable, float MinDepth, float MaxDepth)"
  },
  {
    "label": "ClearUAV()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearUAV(TRHICommandList_RecursiveHazardous<FD3D11DynamicRHI>& RHICmdList, FD3D11UnorderedAccessView* UAV, const void* ClearValues, bool bFloat)"
  },
  {
    "label": "RHIClearMRTImpl()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RHIClearMRTImpl(const bool* bClearColorArray, int32 NumClearColors, const FLinearColor* ColorArray, bool bClearDepth, float Depth, bool bClearStencil, uint32 Stencil)"
  },
  {
    "label": "ClearShaderResourceViews()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearShaderResourceViews(FD3D11ViewableResource* Resource)"
  },
  {
    "label": "ClearAllShaderResourcesForFrequency()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearAllShaderResourcesForFrequency()"
  },
  {
    "label": "InternalSetShaderResourceView()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InternalSetShaderResourceView(FD3D11ViewableResource* Resource, ID3D11ShaderResourceView* SRV, int32 ResourceIndex)"
  },
  {
    "label": "TrackResourceBoundAsVB()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TrackResourceBoundAsVB(FD3D11ViewableResource* Resource, int32 StreamIndex)"
  },
  {
    "label": "TrackResourceBoundAsIB()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TrackResourceBoundAsIB(FD3D11ViewableResource* Resource)"
  },
  {
    "label": "ClearState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearState()"
  },
  {
    "label": "ConditionalClearShaderResource()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConditionalClearShaderResource(FD3D11ViewableResource* Resource, bool bCheckBoundInputAssembler)"
  },
  {
    "label": "ClearAllShaderResources()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearAllShaderResources()"
  },
  {
    "label": "InsertProfilerTimestamp()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InsertProfilerTimestamp(uint64* Target)"
  },
  {
    "label": "CalibrateTimers()",
    "kind": "Method",
    "detail": "Function (TOptional<FTimestampCalibration>)",
    "insertText": "CalibrateTimers()"
  },
  {
    "label": "InitConstantBuffers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitConstantBuffers()"
  },
  {
    "label": "CommitNonComputeShaderConstants()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CommitNonComputeShaderConstants()"
  },
  {
    "label": "CommitComputeShaderConstants()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CommitComputeShaderConstants()"
  },
  {
    "label": "SetResourcesFromTables()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetResourcesFromTables(const ShaderType* RESTRICT)"
  },
  {
    "label": "CommitGraphicsResourceTables()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CommitGraphicsResourceTables()"
  },
  {
    "label": "CommitComputeResourceTables()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CommitComputeResourceTables(FD3D11ComputeShader* ComputeShader)"
  },
  {
    "label": "GetBestSupportedMSAASetting()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetBestSupportedMSAASetting( DXGI_FORMAT PlatformFormat, uint32 MSAACount, uint32& OutBestMSAACount, uint32& OutMSAAQualityLevels )"
  },
  {
    "label": "SetupAfterDeviceCreation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetupAfterDeviceCreation()"
  },
  {
    "label": "UpdateMSAASettings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateMSAASettings()"
  },
  {
    "label": "GetMaxMSAAQuality()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetMaxMSAAQuality(uint32 SampleCount)"
  },
  {
    "label": "CommitRenderTargetsAndUAVs()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CommitRenderTargetsAndUAVs()"
  },
  {
    "label": "CommitRenderTargets()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CommitRenderTargets(bool bClearUAVS)"
  },
  {
    "label": "CommitUAVs()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CommitUAVs()"
  },
  {
    "label": "CleanupD3DDevice()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CleanupD3DDevice()"
  },
  {
    "label": "ReleasePooledUniformBuffers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleasePooledUniformBuffers()"
  },
  {
    "label": "ResolveTextureUsingShader()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResolveTextureUsingShader(\n\t\tFD3D11DynamicRHI* const This,\n\t\tFD3D11Texture* const SourceTexture,\n\t\tFD3D11Texture* const DestTexture,\n\t\tID3D11RenderTargetView* const DestTextureRTV,\n\t\tID3D11DepthStencilView* const DestTextureDSV,\n\t\tD3D11_TEXTURE2D_DESC const& ResolveTargetDesc,\n\t\tFResolveRect const& SourceRect,\n\t\tFResolveRect const& DestRect,\n\t\ttypename TPixelShader::FParameter const PixelShaderParameter\n\t\t)"
  },
  {
    "label": "GetStagingTexture()",
    "kind": "Method",
    "detail": "Function (TRefCountPtr<ID3D11Texture2D>)",
    "insertText": "GetStagingTexture(FRHITexture* TextureRHI,FIntRect InRect, FIntRect& OutRect, FReadSurfaceDataFlags InFlags)"
  },
  {
    "label": "ReadSurfaceDataNoMSAARaw()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReadSurfaceDataNoMSAARaw(FRHITexture* TextureRHI,FIntRect Rect,TArray<uint8>& OutData, FReadSurfaceDataFlags InFlags)"
  },
  {
    "label": "ReadSurfaceDataMSAARaw()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReadSurfaceDataMSAARaw(FRHITexture* TextureRHI, FIntRect Rect, TArray<uint8>& OutData, FReadSurfaceDataFlags InFlags)"
  },
  {
    "label": "StartIntelExtensions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StartIntelExtensions()"
  },
  {
    "label": "StopIntelExtensions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StopIntelExtensions()"
  },
  {
    "label": "EnableUAVOverlap()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnableUAVOverlap()"
  },
  {
    "label": "DisableUAVOverlap()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DisableUAVOverlap()"
  },
  {
    "label": "SetupDisplayHDRMetaData()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetupDisplayHDRMetaData()"
  },
  {
    "label": "UpdateMemoryStats()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateMemoryStats()"
  },
  {
    "label": "FindAdapter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FindAdapter()"
  },
  {
    "label": "FRange()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FRange()"
  },
  {
    "label": "A()",
    "kind": "Method",
    "detail": "Function (FRangeAllocator)",
    "insertText": "A(10)"
  }
]