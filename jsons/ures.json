[
  {
    "label": "UResourceBundle",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "UResourceBundle"
  },
  {
    "label": "ures_open()",
    "kind": "Method",
    "detail": "Function (# ifndef URES_H # define URES_H # include \" unicode / utypes . h \" # include \" unicode / uloc . h \" # include \" unicode / localpointer . h \" struct UResourceBundle ; typedef struct UResourceBundle UResourceBundle ; typedef enum { URES_NONE = - 1,URES_STRING = 0,URES_BINARY = 1,URES_TABLE = 2,URES_ALIAS = 3,URES_INT = 7,URES_ARRAY = 8,URES_INT_VECTOR = 1 4,# ifndef RES_NONE = URES_NONE,RES_STRING = URES_STRING,RES_BINARY = URES_BINARY,RES_TABLE = URES_TABLE,RES_ALIAS = URES_ALIAS,RES_INT = URES_INT,RES_ARRAY = URES_ARRAY,RES_INT_VECTOR = URES_INT_VECTOR,RES_RESERVED = 1 5,URES_LIMIT = 1 6 # endif } UResType ; U_STABLE UResourceBundle* U_EXPORT2)",
    "insertText": "ures_open(const char* packageName, const char* locale, UErrorCode* status)"
  },
  {
    "label": "ures_openDirect()",
    "kind": "Method",
    "detail": "Function (U_STABLE UResourceBundle* U_EXPORT2)",
    "insertText": "ures_openDirect(const char* packageName, const char* locale, UErrorCode* status)"
  },
  {
    "label": "ures_openU()",
    "kind": "Method",
    "detail": "Function (U_STABLE UResourceBundle* U_EXPORT2)",
    "insertText": "ures_openU(const UChar* packageName, const char* locale, UErrorCode* status)"
  },
  {
    "label": "ures_countArrayItems()",
    "kind": "Method",
    "detail": "Function (# ifndef U_DEPRECATED int32_t U_EXPORT2)",
    "insertText": "ures_countArrayItems(const UResourceBundle* resourceBundle, const char* resourceKey, UErrorCode* err)"
  },
  {
    "label": "ures_close()",
    "kind": "Method",
    "detail": "Function (# endif U_STABLE void U_EXPORT2)",
    "insertText": "ures_close(UResourceBundle* resourceBundle)"
  },
  {
    "label": "U_DEFINE_LOCAL_OPEN_POINTER()",
    "kind": "Method",
    "detail": "Function (# if U_NAMESPACE_BEGIN)",
    "insertText": "U_DEFINE_LOCAL_OPEN_POINTER(LocalUResourceBundlePointer, UResourceBundle, ures_close)"
  },
  {
    "label": "ures_getVersionNumber()",
    "kind": "Method",
    "detail": "Function (U_NAMESPACE_END # endif # ifndef U_DEPRECATED const char* U_EXPORT2)",
    "insertText": "ures_getVersionNumber(const UResourceBundle* resourceBundle)"
  },
  {
    "label": "ures_getVersion()",
    "kind": "Method",
    "detail": "Function (# endif U_STABLE void U_EXPORT2)",
    "insertText": "ures_getVersion(const UResourceBundle* resB, UVersionInfo versionInfo)"
  },
  {
    "label": "ures_getLocale()",
    "kind": "Method",
    "detail": "Function (# ifndef U_DEPRECATED const char* U_EXPORT2)",
    "insertText": "ures_getLocale(const UResourceBundle* resourceBundle, UErrorCode* status)"
  },
  {
    "label": "ures_getLocaleByType()",
    "kind": "Method",
    "detail": "Function (# endif U_STABLE const char* U_EXPORT2)",
    "insertText": "ures_getLocaleByType(const UResourceBundle* resourceBundle, ULocDataLocaleType type, UErrorCode* status)"
  },
  {
    "label": "ures_openFillIn()",
    "kind": "Method",
    "detail": "Function (# ifndef U_INTERNAL void U_EXPORT2)",
    "insertText": "ures_openFillIn(UResourceBundle *r, const char* packageName, const char* localeID, UErrorCode* status)"
  },
  {
    "label": "ures_getString()",
    "kind": "Method",
    "detail": "Function (# endif U_STABLE const UChar* U_EXPORT2)",
    "insertText": "ures_getString(const UResourceBundle* resourceBundle, int32_t* len, UErrorCode* status)"
  },
  {
    "label": "ures_getUTF8String()",
    "kind": "Method",
    "detail": "Function (U_STABLE const char* U_EXPORT2)",
    "insertText": "ures_getUTF8String(const UResourceBundle *resB, char *dest, int32_t *length, UBool forceCopy, UErrorCode *status)"
  },
  {
    "label": "ures_getBinary()",
    "kind": "Method",
    "detail": "Function (U_STABLE const uint8_t* U_EXPORT2)",
    "insertText": "ures_getBinary(const UResourceBundle* resourceBundle, int32_t* len, UErrorCode* status)"
  },
  {
    "label": "ures_getIntVector()",
    "kind": "Method",
    "detail": "Function (U_STABLE const int32_t* U_EXPORT2)",
    "insertText": "ures_getIntVector(const UResourceBundle* resourceBundle, int32_t* len, UErrorCode* status)"
  },
  {
    "label": "ures_getUInt()",
    "kind": "Method",
    "detail": "Function (U_STABLE uint32_t U_EXPORT2)",
    "insertText": "ures_getUInt(const UResourceBundle* resourceBundle, UErrorCode *status)"
  },
  {
    "label": "ures_getInt()",
    "kind": "Method",
    "detail": "Function (U_STABLE int32_t U_EXPORT2)",
    "insertText": "ures_getInt(const UResourceBundle* resourceBundle, UErrorCode *status)"
  },
  {
    "label": "ures_getSize()",
    "kind": "Method",
    "detail": "Function (U_STABLE int32_t U_EXPORT2)",
    "insertText": "ures_getSize(const UResourceBundle *resourceBundle)"
  },
  {
    "label": "ures_getType()",
    "kind": "Method",
    "detail": "Function (U_STABLE UResType U_EXPORT2)",
    "insertText": "ures_getType(const UResourceBundle *resourceBundle)"
  },
  {
    "label": "ures_getKey()",
    "kind": "Method",
    "detail": "Function (U_STABLE const char* U_EXPORT2)",
    "insertText": "ures_getKey(const UResourceBundle *resourceBundle)"
  },
  {
    "label": "ures_resetIterator()",
    "kind": "Method",
    "detail": "Function (U_STABLE void U_EXPORT2)",
    "insertText": "ures_resetIterator(UResourceBundle *resourceBundle)"
  },
  {
    "label": "ures_hasNext()",
    "kind": "Method",
    "detail": "Function (U_STABLE UBool U_EXPORT2)",
    "insertText": "ures_hasNext(const UResourceBundle *resourceBundle)"
  },
  {
    "label": "ures_getNextResource()",
    "kind": "Method",
    "detail": "Function (U_STABLE UResourceBundle* U_EXPORT2)",
    "insertText": "ures_getNextResource(UResourceBundle *resourceBundle, UResourceBundle *fillIn, UErrorCode *status)"
  },
  {
    "label": "ures_getNextString()",
    "kind": "Method",
    "detail": "Function (U_STABLE const UChar* U_EXPORT2)",
    "insertText": "ures_getNextString(UResourceBundle *resourceBundle, int32_t* len, const char ** key, UErrorCode *status)"
  },
  {
    "label": "ures_getByIndex()",
    "kind": "Method",
    "detail": "Function (U_STABLE UResourceBundle* U_EXPORT2)",
    "insertText": "ures_getByIndex(const UResourceBundle *resourceBundle, int32_t indexR, UResourceBundle *fillIn, UErrorCode *status)"
  },
  {
    "label": "ures_getStringByIndex()",
    "kind": "Method",
    "detail": "Function (U_STABLE const UChar* U_EXPORT2)",
    "insertText": "ures_getStringByIndex(const UResourceBundle *resourceBundle, int32_t indexS, int32_t* len, UErrorCode *status)"
  },
  {
    "label": "ures_getUTF8StringByIndex()",
    "kind": "Method",
    "detail": "Function (U_STABLE const char* U_EXPORT2)",
    "insertText": "ures_getUTF8StringByIndex(const UResourceBundle *resB, int32_t stringIndex, char *dest, int32_t *pLength, UBool forceCopy, UErrorCode *status)"
  },
  {
    "label": "ures_getByKey()",
    "kind": "Method",
    "detail": "Function (U_STABLE UResourceBundle* U_EXPORT2)",
    "insertText": "ures_getByKey(const UResourceBundle *resourceBundle, const char* key, UResourceBundle *fillIn, UErrorCode *status)"
  },
  {
    "label": "ures_getStringByKey()",
    "kind": "Method",
    "detail": "Function (U_STABLE const UChar* U_EXPORT2)",
    "insertText": "ures_getStringByKey(const UResourceBundle *resB, const char* key, int32_t* len, UErrorCode *status)"
  },
  {
    "label": "ures_getUTF8StringByKey()",
    "kind": "Method",
    "detail": "Function (U_STABLE const char* U_EXPORT2)",
    "insertText": "ures_getUTF8StringByKey(const UResourceBundle *resB, const char *key, char *dest, int32_t *pLength, UBool forceCopy, UErrorCode *status)"
  },
  {
    "label": "ures_getUnicodeString()",
    "kind": "Method",
    "detail": "Function (# if # include \" unicode / unistr . h \" U_NAMESPACE_BEGIN UnicodeString)",
    "insertText": "ures_getUnicodeString(const UResourceBundle *resB, UErrorCode* status)"
  },
  {
    "label": "ures_getString()",
    "kind": "Method",
    "detail": "Function (UnicodeString result ; int32_t len = 0 ; const UChar* r =)",
    "insertText": "ures_getString(resB, &len, status)"
  },
  {
    "label": "setTo()",
    "kind": "Method",
    "detail": "Function (result .)",
    "insertText": "setTo(TRUE, r, len)"
  },
  {
    "label": "setToBogus()",
    "kind": "Method",
    "detail": "Function (} else { result .)",
    "insertText": "setToBogus()"
  },
  {
    "label": "ures_getNextUnicodeString()",
    "kind": "Method",
    "detail": "Function (} return result ; } UnicodeString)",
    "insertText": "ures_getNextUnicodeString(UResourceBundle *resB, const char ** key, UErrorCode* status)"
  },
  {
    "label": "ures_getNextString()",
    "kind": "Method",
    "detail": "Function (UnicodeString result ; int32_t len = 0 ; const UChar* r =)",
    "insertText": "ures_getNextString(resB, &len, key, status)"
  },
  {
    "label": "ures_getUnicodeStringByIndex()",
    "kind": "Method",
    "detail": "Function (} return result ; } UnicodeString)",
    "insertText": "ures_getUnicodeStringByIndex(const UResourceBundle *resB, int32_t indexS, UErrorCode* status)"
  },
  {
    "label": "ures_getStringByIndex()",
    "kind": "Method",
    "detail": "Function (UnicodeString result ; int32_t len = 0 ; const UChar* r =)",
    "insertText": "ures_getStringByIndex(resB, indexS, &len, status)"
  },
  {
    "label": "ures_getUnicodeStringByKey()",
    "kind": "Method",
    "detail": "Function (} return result ; } UnicodeString)",
    "insertText": "ures_getUnicodeStringByKey(const UResourceBundle *resB, const char* key, UErrorCode* status)"
  },
  {
    "label": "ures_getStringByKey()",
    "kind": "Method",
    "detail": "Function (UnicodeString result ; int32_t len = 0 ; const UChar* r =)",
    "insertText": "ures_getStringByKey(resB, key, &len, status)"
  },
  {
    "label": "ures_openAvailableLocales()",
    "kind": "Method",
    "detail": "Function (} return result ; } U_NAMESPACE_END # endif U_STABLE UEnumeration* U_EXPORT2)",
    "insertText": "ures_openAvailableLocales(const char *packageName, UErrorCode *status)"
  }
]