[
  {
    "label": "FCluster",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCluster"
  },
  {
    "label": "FImposterAtlas",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FImposterAtlas"
  },
  {
    "label": "FImposterAtlas()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Math / Bounds . h \" namespace Nanite { class FCluster ; class FImposterAtlas { public : uint32 AtlasSize = 1 2 ; uint32 TileSize = 1 2 ;)",
    "insertText": "FImposterAtlas()"
  },
  {
    "label": "FImposterAtlas()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FImposterAtlas(TArray< uint16 >& InPixels, const FBounds3f& MeshBounds)"
  },
  {
    "label": "Rasterize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Rasterize(const FIntPoint& TilePos, const FCluster& Cluster, uint32 ClusterIndex)"
  },
  {
    "label": "GetLocalToImposter()",
    "kind": "Method",
    "detail": "Function (private : TArray<uint16>& Pixels ; FVector3f BoundsCenter ; FVector3f BoundsExtent ; FMatrix44f)",
    "insertText": "GetLocalToImposter(const FIntPoint& TilePos)"
  }
]