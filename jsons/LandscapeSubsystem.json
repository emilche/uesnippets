[
  {
    "label": "ALandscapeProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ALandscapeProxy"
  },
  {
    "label": "ALandscape",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ALandscape"
  },
  {
    "label": "AWorldSettings",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AWorldSettings"
  },
  {
    "label": "IConsoleVariable",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IConsoleVariable"
  },
  {
    "label": "ULandscapeInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULandscapeInfo"
  },
  {
    "label": "FLandscapeNotificationManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLandscapeNotificationManager"
  },
  {
    "label": "ULandscapeComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULandscapeComponent"
  },
  {
    "label": "FLandscapeGrassMapsBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLandscapeGrassMapsBuilder"
  },
  {
    "label": "FLandscapeTextureStreamingManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLandscapeTextureStreamingManager"
  },
  {
    "label": "FActionableMessage",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FActionableMessage"
  },
  {
    "label": "FDateTime",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDateTime"
  },
  {
    "label": "FScopedSlowTask",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FScopedSlowTask"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FOnHeightmapStreamedContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FOnHeightmapStreamedContext"
  },
  {
    "label": "ULandscapeComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULandscapeComponent"
  },
  {
    "label": "ULandscapeComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULandscapeComponent"
  },
  {
    "label": "ULandscapeComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULandscapeComponent"
  },
  {
    "label": "ULandscapeSubsystem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULandscapeSubsystem"
  },
  {
    "label": "FCanvas",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCanvas"
  },
  {
    "label": "FLandscapePhysicalMaterialBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLandscapePhysicalMaterialBuilder"
  },
  {
    "label": "MarkModifiedLandscapesAsDirty()",
    "kind": "Method",
    "detail": "Function (LANDSCAPE_API)",
    "insertText": "MarkModifiedLandscapesAsDirty()"
  },
  {
    "label": "BuildGrassMaps()",
    "kind": "Method",
    "detail": "Function (LANDSCAPE_API)",
    "insertText": "BuildGrassMaps()"
  },
  {
    "label": "BuildPhysicalMaterial()",
    "kind": "Method",
    "detail": "Function (LANDSCAPE_API)",
    "insertText": "BuildPhysicalMaterial()"
  },
  {
    "label": "BuildNanite()",
    "kind": "Method",
    "detail": "Function (LANDSCAPE_API)",
    "insertText": "BuildNanite()"
  },
  {
    "label": "BuildAll()",
    "kind": "Method",
    "detail": "Function (LANDSCAPE_API)",
    "insertText": "BuildAll()"
  },
  {
    "label": "ULandscapeSubsystem()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "ULandscapeSubsystem()"
  },
  {
    "label": "RegisterActor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterActor(ALandscapeProxy* Proxy)"
  },
  {
    "label": "UnregisterActor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterActor(ALandscapeProxy* Proxy)"
  },
  {
    "label": "RemoveGrassInstances()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveGrassInstances(const TSet<ULandscapeComponent*>* ComponentsToRemoveGrassInstances = nullptr)"
  },
  {
    "label": "RegisterComponent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterComponent(ULandscapeComponent* Component)"
  },
  {
    "label": "UnregisterComponent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterComponent(ULandscapeComponent* Component)"
  },
  {
    "label": "BuildAll()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildAll()"
  },
  {
    "label": "BuildGrassMaps()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildGrassMaps()"
  },
  {
    "label": "BuildPhysicalMaterial()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildPhysicalMaterial()"
  },
  {
    "label": "ChangeGridSize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ChangeGridSize(ULandscapeInfo* LandscapeInfo, uint32 NewGridSizeInComponents)"
  },
  {
    "label": "DisplayMessages()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DisplayMessages(class FCanvas* Canvas, float& XPos, float& YPos)"
  },
  {
    "label": "GetActionableMessage()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetActionableMessage(FActionableMessage& OutActionableMessage)"
  },
  {
    "label": "MarkModifiedLandscapesAsDirty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MarkModifiedLandscapesAsDirty()"
  },
  {
    "label": "SaveModifiedLandscapes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SaveModifiedLandscapes()"
  },
  {
    "label": "GetAppCurrentDateTime()",
    "kind": "Method",
    "detail": "Function (FDateTime)",
    "insertText": "GetAppCurrentDateTime()"
  },
  {
    "label": "AddAsyncEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddAsyncEvent(FGraphEventRef GraphEventRef)"
  },
  {
    "label": "IsMultithreadedNaniteBuildEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsMultithreadedNaniteBuildEnabled()"
  },
  {
    "label": "IsLiveNaniteRebuildEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsLiveNaniteRebuildEnabled()"
  },
  {
    "label": "IncNaniteBuild()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "IncNaniteBuild()"
  },
  {
    "label": "DecNaniteBuild()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DecNaniteBuild()"
  },
  {
    "label": "WaitLaunchNaniteBuild()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WaitLaunchNaniteBuild()"
  },
  {
    "label": "OnNaniteEnabledChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnNaniteEnabledChanged(IConsoleVariable*)"
  },
  {
    "label": "HandlePostGarbageCollect()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandlePostGarbageCollect()"
  }
]