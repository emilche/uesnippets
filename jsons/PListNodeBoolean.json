[
  {
    "label": "FText",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FText"
  },
  {
    "label": "ITableRow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITableRow"
  },
  {
    "label": "SCheckBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SCheckBox"
  },
  {
    "label": "SEditableTextBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SEditableTextBox"
  },
  {
    "label": "SPListEditorPanel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SPListEditorPanel"
  },
  {
    "label": "STableViewBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "STableViewBase"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "FSlateBrush",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSlateBrush"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FPListNodeBoolean",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPListNodeBoolean"
  },
  {
    "label": "FPListNodeBoolean()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" Containers / UnrealString . h \" # include \" PListNode . h \" # include \" HAL / Platform . h \" # include \" Styling / SlateColor . h \" # include \" Templates / SharedPointer . h \" # include \" UObject / NameTypes . h \" class FText ; class ITableRow ; class SCheckBox ; class SEditableTextBox ; class SPListEditorPanel ; class STableViewBase ; class SWidget ; struct FSlateBrush ; enum class ECheckBoxState : uint8 ; class FPListNodeBoolean : public IPListNode { public :)",
    "insertText": "FPListNodeBoolean(SPListEditorPanel* InEditorWidget) : IPListNode(InEditorWidget), bValue(false), ArrayIndex(-1), bFiltered(false), bArrayMember(false), bKeyValid(false)"
  },
  {
    "label": "IsValid()",
    "kind": "Method",
    "detail": "Function (} public : bool)",
    "insertText": "IsValid()"
  },
  {
    "label": "GetChildren()",
    "kind": "Method",
    "detail": "Function (TArray<TSharedPtr<IPListNode>>&)",
    "insertText": "GetChildren()"
  },
  {
    "label": "AddChild()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddChild(TSharedPtr<IPListNode> InChild)"
  },
  {
    "label": "GetType()",
    "kind": "Method",
    "detail": "Function (EPLNTypes)",
    "insertText": "GetType()"
  },
  {
    "label": "UsesColumns()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UsesColumns()"
  },
  {
    "label": "GenerateWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<ITableRow>)",
    "insertText": "GenerateWidget(const TSharedRef<STableViewBase>& OwnerTable)"
  },
  {
    "label": "GenerateWidgetForColumn()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "GenerateWidgetForColumn(const FName& ColumnName, int32 Depth, ITableRow* RowPtr)"
  },
  {
    "label": "ToXML()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "ToXML(const int32 indent = 0, bool bOutputKey = true)"
  },
  {
    "label": "Refresh()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Refresh()"
  },
  {
    "label": "GetNumPairs()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetNumPairs()"
  },
  {
    "label": "OnFilterTextChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnFilterTextChanged(FString NewFilter)"
  },
  {
    "label": "SetIndex()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetIndex(int32 NewIndex)"
  },
  {
    "label": "GetOverlayBrush()",
    "kind": "Method",
    "detail": "Function (public : const FSlateBrush*)",
    "insertText": "GetOverlayBrush()"
  },
  {
    "label": "SetKey()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetKey(FString NewString)"
  },
  {
    "label": "SetValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetValue(bool bNewValue)"
  },
  {
    "label": "SetArrayMember()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetArrayMember(bool bArrayMember)"
  },
  {
    "label": "OnKeyStringChanged()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "OnKeyStringChanged(const FText& NewString)"
  },
  {
    "label": "OnValueChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnValueChanged(ECheckBoxState NewValue)"
  },
  {
    "label": "GetKeyBackgroundColor()",
    "kind": "Method",
    "detail": "Function (FSlateColor)",
    "insertText": "GetKeyBackgroundColor()"
  },
  {
    "label": "GetKeyForegroundColor()",
    "kind": "Method",
    "detail": "Function (FSlateColor)",
    "insertText": "GetKeyForegroundColor()"
  }
]