[
  {
    "label": "MessagePump",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MessagePump"
  },
  {
    "label": "TaskObserver",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TaskObserver"
  },
  {
    "label": "TimeDomain",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TimeDomain"
  },
  {
    "label": "NativeWorkHandle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "NativeWorkHandle"
  },
  {
    "label": "BASE_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BASE_EXPORT"
  },
  {
    "label": "Observer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Observer"
  },
  {
    "label": "MetricRecordingSettings",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "MetricRecordingSettings"
  },
  {
    "label": "BASE_EXPORT",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "BASE_EXPORT"
  },
  {
    "label": "Builder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Builder"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "TaskQueue",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TaskQueue"
  },
  {
    "label": "BASE_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BASE_EXPORT"
  },
  {
    "label": "MetricRecordingSettings()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "MetricRecordingSettings(\n        double task_sampling_rate_for_recording_cpu_time)"
  },
  {
    "label": "Builder()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "Builder()"
  },
  {
    "label": "Build()",
    "kind": "Method",
    "detail": "Function (Settings)",
    "insertText": "Build()"
  },
  {
    "label": "CreateSequenceManagerOnCurrentThread()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<SequenceManager>)",
    "insertText": "CreateSequenceManagerOnCurrentThread(SequenceManager::Settings settings)"
  }
]