[
  {
    "label": "FEditorViewportClient",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEditorViewportClient"
  },
  {
    "label": "FMenuBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMenuBuilder"
  },
  {
    "label": "FUICommandInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FUICommandInfo"
  },
  {
    "label": "FUICommandList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FUICommandList"
  },
  {
    "label": "COMMONMENUEXTENSIONS_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "COMMONMENUEXTENSIONS_API"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FVirtualShadowMapVisualizationRecord",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FVirtualShadowMapVisualizationRecord"
  },
  {
    "label": "FVirtualShadowMapVisualizationRecord()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Map . h \" # include \" Framework / Commands / Commands . h \" # include \" Framework / Commands / UICommandInfo . h \" # include \" Framework / MultiBox / MultiBoxBuilder . h \" # include \" HAL / Platform . h \" # include \" Templates / SharedPointer . h \" # include \" UObject / NameTypes . h \" class FEditorViewportClient ; class FMenuBuilder ; class FUICommandInfo ; class FUICommandList ; class FVirtualShadowMapVisualizationMenuCommands : public TCommands<FVirtualShadowMapVisualizationMenuCommands> { public : enum class FVirtualShadowMapVisualizationType : uint8 { Standard,Advanced,} ; struct FVirtualShadowMapVisualizationRecord { FName Name ; TSharedPtr<FUICommandInfo> Command ; FVirtualShadowMapVisualizationType Type ;)",
    "insertText": "FVirtualShadowMapVisualizationRecord() : Name() , Command() , Type(FVirtualShadowMapVisualizationType::Standard)"
  },
  {
    "label": "FVirtualShadowMapVisualizationMenuCommands()",
    "kind": "Method",
    "detail": "Function (} } ; typedef TMultiMap<FName,FVirtualShadowMapVisualizationRecord> TVirtualShadowMapVisualizationModeCommandMap ; typedef TVirtualShadowMapVisualizationModeCommandMap::TConstIterator TCommandConstIterator ;)",
    "insertText": "FVirtualShadowMapVisualizationMenuCommands()"
  },
  {
    "label": "CreateCommandConstIterator()",
    "kind": "Method",
    "detail": "Function (TCommandConstIterator)",
    "insertText": "CreateCommandConstIterator()"
  },
  {
    "label": "BuildVisualisationSubMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildVisualisationSubMenu(FMenuBuilder& Menu)"
  },
  {
    "label": "RegisterCommands()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterCommands()"
  },
  {
    "label": "BindCommands()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BindCommands(FUICommandList& CommandList, const TSharedPtr<FEditorViewportClient>& Client)"
  },
  {
    "label": "IsPopulated()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsPopulated()"
  },
  {
    "label": "BuildCommandMap()",
    "kind": "Method",
    "detail": "Function (} private : void)",
    "insertText": "BuildCommandMap()"
  },
  {
    "label": "AddCommandTypeToMenu()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AddCommandTypeToMenu(FMenuBuilder& Menu, const FVirtualShadowMapVisualizationType Type, bool bSeparatorBefore = false)"
  },
  {
    "label": "ChangeVirtualShadowMapVisualizationMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ChangeVirtualShadowMapVisualizationMode(TWeakPtr<FEditorViewportClient> WeakClient, FName InName)"
  },
  {
    "label": "IsVirtualShadowMapVisualizationModeSelected()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsVirtualShadowMapVisualizationModeSelected(TWeakPtr<FEditorViewportClient> WeakClient, FName InName)"
  }
]