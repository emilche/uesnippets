[
  {
    "label": "FObjectBindingTagCache",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FObjectBindingTagCache"
  },
  {
    "label": "FText",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FText"
  },
  {
    "label": "SEditableTextBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SEditableTextBox"
  },
  {
    "label": "SObjectBindingTags",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SObjectBindingTags"
  },
  {
    "label": "SObjectBindingTag",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SObjectBindingTag"
  },
  {
    "label": "DECLARE_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" Delegates / Delegate . h \" # include \" Input / Reply . h \" # include \" Math / Color . h \" # include \" Math / Vector2D . h \" # include \" Misc / Attribute . h \" # include \" MovieSceneObjectBindingID . h \" # include \" Styling / SlateColor . h \" # include \" Templates / SharedPointer . h \" # include \" Types / SlateEnums . h \" # include \" UObject / NameTypes . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Widgets / SCompoundWidget . h \" class FObjectBindingTagCache ; class FText ; class SEditableTextBox ; class SObjectBindingTags : public SCompoundWidget { public :)",
    "insertText": "DECLARE_DELEGATE_OneParam(FTagEvent, FName) SLATE_BEGIN_ARGS(SObjectBindingTags)"
  },
  {
    "label": "SLATE_EVENT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_EVENT(FTagEvent, OnTagDeleted) SLATE_END_ARGS() MOVIESCENETOOLS_API void Construct(const FArguments& InArgs, const UE::MovieScene::FFixedObjectBindingID& InBindingID, FObjectBindingTagCache* BindingCache)"
  },
  {
    "label": "OnBindingCacheUpdated()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "OnBindingCacheUpdated(const FObjectBindingTagCache* BindingCache)"
  },
  {
    "label": "OnTagDeleted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnTagDeleted(FName TagName)"
  },
  {
    "label": "DECLARE_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (private : FTagEvent OnTagDeletedEvent ; UE::MovieScene::FFixedObjectBindingID BindingID ; } ; class SObjectBindingTag : public SCompoundWidget { public :)",
    "insertText": "DECLARE_DELEGATE_OneParam(FOnCreateNew, FName) SLATE_BEGIN_ARGS(SObjectBindingTag) : _ColorTint(FLinearColor::White)"
  },
  {
    "label": "SLATE_EVENT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_EVENT(FSimpleDelegate, OnDeleted) SLATE_EVENT(FOnCreateNew, OnCreateNew) SLATE_EVENT(FSimpleDelegate, OnClicked) SLATE_ATTRIBUTE(FText, Text) SLATE_ATTRIBUTE(FText, ToolTipText) SLATE_ATTRIBUTE(FSlateColor, ColorTint) SLATE_END_ARGS() MOVIESCENETOOLS_API void Construct(const FArguments& InArgs)"
  },
  {
    "label": "OnNewTextCommitted()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "OnNewTextCommitted(const FText& InNewText, ETextCommit::Type CommitType)"
  },
  {
    "label": "HandleCreateButtonClicked()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "HandleCreateButtonClicked()"
  },
  {
    "label": "HandleDeleteButtonClicked()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "HandleDeleteButtonClicked()"
  },
  {
    "label": "HandlePillClicked()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "HandlePillClicked()"
  },
  {
    "label": "ComputeDesiredSize()",
    "kind": "Method",
    "detail": "Function (FVector2D)",
    "insertText": "ComputeDesiredSize(float LayoutScaleMultiplier)"
  },
  {
    "label": "ComputeDesiredSize()",
    "kind": "Method",
    "detail": "Function (const float DesiredX =)",
    "insertText": "ComputeDesiredSize(LayoutScaleMultiplier)"
  }
]