[
  {
    "label": "FShaderStableKeyDebugInfoReader",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FShaderStableKeyDebugInfoReader"
  },
  {
    "label": "IsInitialized()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" ShaderCodeLibrary . h \" namespace UE { namespace ShaderUtils { class FShaderStableKeyDebugInfoReader { TMap<FSHAHash,TSet<FStableShaderKeyAndValue>> ShaderHashesToSource ; public : bool)",
    "insertText": "IsInitialized()"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "Initialize(const FString& ShaderStableKeyFile)"
  },
  {
    "label": "GetShaderStableNameOptions()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetShaderStableNameOptions(const FSHAHash& ShaderHash, int32 MaxOptionsToInclude = 16)"
  },
  {
    "label": "GetPSOStableNameOptions()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetPSOStableNameOptions(const FGraphicsPipelineStateInitializer& Initializer, int32 MaxOptionsToInclude = 16)"
  },
  {
    "label": "DumpPSOToLogIfConfigured()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DumpPSOToLogIfConfigured(const FGraphicsPipelineStateInitializer& Initializer)"
  }
]