[
  {
    "label": "is",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "is"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "when",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "when"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "RTC_EXPORT",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RTC_EXPORT"
  },
  {
    "label": "instead",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "instead"
  },
  {
    "label": "RTC_EXPORT",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RTC_EXPORT"
  },
  {
    "label": "RTC_EXPORT",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RTC_EXPORT"
  },
  {
    "label": "RTC_EXPORT",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RTC_EXPORT"
  },
  {
    "label": "Filter",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Filter"
  },
  {
    "label": "RTC_EXPORT",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RTC_EXPORT"
  },
  {
    "label": "RTC_EXPORT",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RTC_EXPORT"
  },
  {
    "label": "RTC_EXPORT",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RTC_EXPORT"
  },
  {
    "label": "RTC_EXPORT",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RTC_EXPORT"
  },
  {
    "label": "RTC_EXPORT",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RTC_EXPORT"
  },
  {
    "label": "RtcpParameters",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RtcpParameters"
  },
  {
    "label": "RTC_EXPORT",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RTC_EXPORT"
  },
  {
    "label": "RtcpFeedback()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "RtcpFeedback(RtcpFeedbackType type)"
  },
  {
    "label": "RtpHeaderExtensionCapability()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "RtpHeaderExtensionCapability(absl::string_view uri)"
  },
  {
    "label": "IsSupportedForAudio()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsSupportedForAudio(absl::string_view uri)"
  },
  {
    "label": "IsSupportedForVideo()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsSupportedForVideo(absl::string_view uri)"
  },
  {
    "label": "IsEncryptionSupported()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsEncryptionSupported(absl::string_view uri)"
  },
  {
    "label": "DeduplicateHeaderExtensions()",
    "kind": "Method",
    "detail": "Function (std::vector<RtpExtension>)",
    "insertText": "DeduplicateHeaderExtensions(\n      const std::vector<RtpExtension>& extensions,\n      Filter filter)"
  },
  {
    "label": "RtpFecParameters()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "RtpFecParameters(FecMechanism mechanism)"
  },
  {
    "label": "RtpRtxParameters()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "RtpRtxParameters(uint32_t ssrc)"
  }
]