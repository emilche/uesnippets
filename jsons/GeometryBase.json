[
  {
    "label": "ClassName",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ClassName"
  },
  {
    "label": "StructName",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "StructName"
  },
  {
    "label": "FForceGeometryNamespaceToExist",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FForceGeometryNamespaceToExist"
  },
  {
    "label": "PREDECLARE_GEOMETRY()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" Logging / LogMacros . h \" # define)",
    "insertText": "PREDECLARE_GEOMETRY(TypeName)"
  },
  {
    "label": "PREDECLARE_USE_GEOMETRY_CLASS()",
    "kind": "Method",
    "detail": "Function (namespace Geometry { ; } } # define)",
    "insertText": "PREDECLARE_USE_GEOMETRY_CLASS(ClassName)"
  },
  {
    "label": "PREDECLARE_USE_GEOMETRY_STRUCT()",
    "kind": "Method",
    "detail": "Function (namespace Geometry { class ClassName ; } } using UE::Geometry::ClassName ; # define)",
    "insertText": "PREDECLARE_USE_GEOMETRY_STRUCT(StructName)"
  },
  {
    "label": "DECLARE_LOG_CATEGORY_EXTERN()",
    "kind": "Method",
    "detail": "Function (namespace Geometry { struct StructName ; } } using UE::Geometry::StructName ; namespace UE { namespace Geometry { struct FForceGeometryNamespaceToExist { int a ; } ; } })",
    "insertText": "DECLARE_LOG_CATEGORY_EXTERN(LogGeometry, Log, All)"
  }
]