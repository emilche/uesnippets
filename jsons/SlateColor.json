[
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FSlateColor",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSlateColor"
  },
  {
    "label": "FPropertyTag",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPropertyTag"
  },
  {
    "label": "TStructOpsTypeTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TStructOpsTypeTraits"
  },
  {
    "label": "UENUM()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / Class . h \" # include \" Styling / WidgetStyle . h \" # include \" SlateColor . generated . h \")",
    "insertText": "UENUM(BlueprintType)"
  },
  {
    "label": "UMETA()",
    "kind": "Method",
    "detail": "Function (UseColor_Specified)",
    "insertText": "UMETA(DisplayName = \"Specified Color\"), UseColor_ColorTable UMETA(Hidden), UseColor_Foreground UMETA(DisplayName = \"Foreground Color\"), UseColor_Foreground_Subdued UMETA(Hidden), UseColor_UseStyle UMETA(Hidden)"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (enum class EStyleColor : uint8 ;)",
    "insertText": "USTRUCT(BlueprintType)"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() public: FSlateColor() : SpecifiedColor(FLinearColor(1.0f, 0.0f, 1.0f)) , ColorUseRule(ESlateColorStylingMode::UseColor_Specified)"
  },
  {
    "label": "FSlateColor()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FSlateColor(const FLinearColor& InColor) : SpecifiedColor(InColor) , ColorUseRule(ESlateColorStylingMode::UseColor_Specified)"
  },
  {
    "label": "FSlateColor()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FSlateColor(const FColor InColor) : SpecifiedColor(InColor.ReinterpretAsLinear()) , ColorUseRule(ESlateColorStylingMode::UseColor_Specified)"
  },
  {
    "label": "FSlateColor()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FSlateColor(const TSharedRef< FLinearColor >& InColor) : SpecifiedColor(*InColor) , ColorUseRule(ESlateColorStylingMode::UseColor_Specified)"
  },
  {
    "label": "FSlateColor()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FSlateColor(EStyleColor InColorTableId) : SpecifiedColor() , ColorUseRule(ESlateColorStylingMode::UseColor_ColorTable) , ColorTableId(InColorTableId)"
  },
  {
    "label": "FSlateColor()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "FSlateColor()"
  },
  {
    "label": "GetColor()",
    "kind": "Method",
    "detail": "Function (} public : const FLinearColor&)",
    "insertText": "GetColor(const FWidgetStyle& InWidgetStyle)"
  },
  {
    "label": "GetForegroundColor()",
    "kind": "Method",
    "detail": "Function (default : case ESlateColorStylingMode::UseColor_Foreground : return InWidgetStyle .)",
    "insertText": "GetForegroundColor()"
  },
  {
    "label": "GetColorFromTable()",
    "kind": "Method",
    "detail": "Function (break ; case ESlateColorStylingMode::UseColor_Specified : return SpecifiedColor ; break ; case ESlateColorStylingMode::UseColor_ColorTable : return)",
    "insertText": "GetColorFromTable()"
  },
  {
    "label": "GetSubduedForegroundColor()",
    "kind": "Method",
    "detail": "Function (break ; case ESlateColorStylingMode::UseColor_Foreground_Subdued : return InWidgetStyle .)",
    "insertText": "GetSubduedForegroundColor()"
  },
  {
    "label": "GetSpecifiedColor()",
    "kind": "Method",
    "detail": "Function (break ; } ; } FLinearColor)",
    "insertText": "GetSpecifiedColor()"
  },
  {
    "label": "IsColorSpecified()",
    "kind": "Method",
    "detail": "Function (} return SpecifiedColor ; } bool)",
    "insertText": "IsColorSpecified()"
  },
  {
    "label": "Unlink()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Unlink()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (ColorUseRule = ESlateColorStylingMode::UseColor_Specified ; } } bool)",
    "insertText": "operator(const FSlateColor& Other)"
  },
  {
    "label": "UseForeground()",
    "kind": "Method",
    "detail": "Function (} public : FSlateColor)",
    "insertText": "UseForeground()"
  },
  {
    "label": "UseSubduedForeground()",
    "kind": "Method",
    "detail": "Function (} FSlateColor)",
    "insertText": "UseSubduedForeground()"
  },
  {
    "label": "UseStyle()",
    "kind": "Method",
    "detail": "Function (} FSlateColor)",
    "insertText": "UseStyle()"
  },
  {
    "label": "SerializeFromMismatchedTag()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "SerializeFromMismatchedTag(const struct FPropertyTag& Tag, FStructuredArchive::FSlot Slot)"
  },
  {
    "label": "FSlateColor()",
    "kind": "Method",
    "detail": "Function (protected :)",
    "insertText": "FSlateColor(ESlateColorStylingMode InColorUseRule) : SpecifiedColor(FLinearColor(1.0f, 0.0f, 1.0f)) , ColorUseRule(InColorUseRule) , ColorTableId()"
  }
]