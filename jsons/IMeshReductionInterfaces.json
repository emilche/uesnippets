[
  {
    "label": "FOverlappingCorners",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FOverlappingCorners"
  },
  {
    "label": "FMeshDescription",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMeshDescription"
  },
  {
    "label": "IMeshReduction",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IMeshReduction"
  },
  {
    "label": "FMeshReductionSettings",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMeshReductionSettings"
  },
  {
    "label": "USkeletalMesh",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USkeletalMesh"
  },
  {
    "label": "ITargetPlatform",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITargetPlatform"
  },
  {
    "label": "FSkeletalMeshOptimizationSettings",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSkeletalMeshOptimizationSettings"
  },
  {
    "label": "FFlattenMaterial",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFlattenMaterial"
  },
  {
    "label": "FMergeCompleteData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMergeCompleteData"
  },
  {
    "label": "UPackage",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPackage"
  },
  {
    "label": "IMeshMerging",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IMeshMerging"
  },
  {
    "label": "FMeshMergeData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMeshMergeData"
  },
  {
    "label": "FMeshProxySettings",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMeshProxySettings"
  },
  {
    "label": "FInstancedMeshMergeData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInstancedMeshMergeData"
  },
  {
    "label": "IMeshReductionModule",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IMeshReductionModule"
  },
  {
    "label": "IMeshReduction()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Features / IModularFeature . h \" # include \" MeshMerge / MeshProxySettings . h \" # include \" Modules / ModuleInterface . h \" struct FOverlappingCorners ; struct FMeshDescription ; class IMeshReduction { public : ~)",
    "insertText": "IMeshReduction()"
  },
  {
    "label": "ReduceMeshDescription()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "ReduceMeshDescription(FMeshDescription& OutReducedMesh, float& OutMaxDeviation, const FMeshDescription& InMesh, const FOverlappingCorners& InOverlappingCorners, const struct FMeshReductionSettings& ReductionSettings)"
  },
  {
    "label": "ReduceSkeletalMesh()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ReduceSkeletalMesh(class USkeletalMesh* SkeletalMesh, int32 LODIndex, const class ITargetPlatform* TargetPlatform)"
  },
  {
    "label": "GetVersionString()",
    "kind": "Method",
    "detail": "Function (const FString&)",
    "insertText": "GetVersionString()"
  },
  {
    "label": "IsSupported()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsSupported()"
  },
  {
    "label": "IsReductionActive()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsReductionActive(const struct FMeshReductionSettings &ReductionSettings)"
  },
  {
    "label": "IsReductionActive()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsReductionActive(const struct FMeshReductionSettings& ReductionSettings, uint32 NumVertices, uint32 NumTriangles)"
  },
  {
    "label": "IsReductionActive()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsReductionActive(const struct FSkeletalMeshOptimizationSettings &ReductionSettings)"
  },
  {
    "label": "IsReductionActive()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsReductionActive(const struct FSkeletalMeshOptimizationSettings &ReductionSettings, uint32 NumVertices, uint32 NumTriangles)"
  },
  {
    "label": "DECLARE_DELEGATE_ThreeParams()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "DECLARE_DELEGATE_ThreeParams(FProxyCompleteDelegate, struct FMeshDescription&, struct FFlattenMaterial&, const FGuid)"
  },
  {
    "label": "DECLARE_DELEGATE_TwoParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DELEGATE_TwoParams(FProxyFailedDelegate, const FGuid, const FString&)"
  },
  {
    "label": "DECLARE_DELEGATE_TwoParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DELEGATE_TwoParams(FCreateProxyDelegate, const FGuid, TArray<UObject*>&)"
  },
  {
    "label": "DECLARE_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (struct FMergeCompleteData { class UPackage* InOuter ; FString ProxyBasePackageName ; FMeshProxySettings InProxySettings ; FCreateProxyDelegate CallbackDelegate ; TArray<const UStaticMeshComponent*> ImposterComponents ; TArray<UStaticMeshComponent*> StaticMeshComponents ; UMaterialInterface* BaseMaterial ; } ; struct FFlattenMaterial ;)",
    "insertText": "DECLARE_DELEGATE_OneParam(FBakeMaterialsDelegate, TArray<FFlattenMaterial>&)"
  },
  {
    "label": "IMeshMerging()",
    "kind": "Method",
    "detail": "Function (class IMeshMerging { public : ~)",
    "insertText": "IMeshMerging()"
  },
  {
    "label": "ProxyLOD()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "ProxyLOD(const TArray<struct FMeshMergeData>& InData, const struct FMeshProxySettings& InProxySettings, const TArray<struct FFlattenMaterial>& InputMaterials, const FGuid InJobGUID)"
  },
  {
    "label": "ProxyLOD()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "ProxyLOD(const TArray<struct FInstancedMeshMergeData>& InData, const struct FMeshProxySettings& InProxySettings, const TArray<struct FFlattenMaterial>& InputMaterials, const FGuid InJobGUID)"
  },
  {
    "label": "AggregateLOD()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "AggregateLOD()"
  },
  {
    "label": "GetName()",
    "kind": "Method",
    "detail": "Function (} FString)",
    "insertText": "GetName()"
  },
  {
    "label": "bSupportsParallelMaterialBake()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "bSupportsParallelMaterialBake()"
  },
  {
    "label": "GetSkeletalMeshReductionInterface()",
    "kind": "Method",
    "detail": "Function (class IMeshReduction*)",
    "insertText": "GetSkeletalMeshReductionInterface()"
  },
  {
    "label": "GetMeshMergingInterface()",
    "kind": "Method",
    "detail": "Function (class IMeshMerging*)",
    "insertText": "GetMeshMergingInterface()"
  },
  {
    "label": "GetDistributedMeshMergingInterface()",
    "kind": "Method",
    "detail": "Function (class IMeshMerging*)",
    "insertText": "GetDistributedMeshMergingInterface()"
  },
  {
    "label": "GetModularFeatureName()",
    "kind": "Method",
    "detail": "Function (const FName)",
    "insertText": "GetModularFeatureName()"
  }
]