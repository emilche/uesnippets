[
  {
    "label": "X509_algor_st",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "X509_algor_st"
  },
  {
    "label": "asn1_string_st",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "asn1_string_st"
  },
  {
    "label": "ASN1_ENCODING_st",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ASN1_ENCODING_st"
  },
  {
    "label": "asn1_string_table_st",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "asn1_string_table_st"
  },
  {
    "label": "ASN1_TEMPLATE_st",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ASN1_TEMPLATE_st"
  },
  {
    "label": "ASN1_TLC_st",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ASN1_TLC_st"
  },
  {
    "label": "ASN1_VALUE_st",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ASN1_VALUE_st"
  },
  {
    "label": "asn1_type_st",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "asn1_type_st"
  },
  {
    "label": "BIT_STRING_BITNAME_st",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "BIT_STRING_BITNAME_st"
  },
  {
    "label": "tm",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "tm"
  },
  {
    "label": "V_ASN1_NEG_INTEGER()",
    "kind": "Method",
    "detail": "Function (# ifndef HEADER_ASN1_H # define HEADER_ASN1_H # include<time . h> # include<openssl / e_os2 . h> # include<openssl / opensslconf . h> # include<openssl / bio . h> # include<openssl / safestack . h> # include<openssl / asn1err . h> # include<openssl / symhacks . h> # include<openssl / ossl_typ . h> # if OPENSSL_API_COMPAT<0 x10100000L # include<openssl / bn . h> # endif # ifdef OPENSSL_BUILD_SHLIBCRYPTO # undef OPENSSL_EXTERN # define OPENSSL_EXTERN OPENSSL_EXPORT # endif # ifdef __cplusplus \" C \" { # endif # define V_ASN1_UNIVERSAL 0 x00 # define V_ASN1_APPLICATION 0 x40 # define V_ASN1_CONTEXT_SPECIFIC 0 x80 # define V_ASN1_PRIVATE 0 xc0 # define V_ASN1_CONSTRUCTED 0 x20 # define V_ASN1_PRIMITIVE_TAG 0 x1f # define V_ASN1_PRIMATIVE_TAG V_ASN1_PRIMITIVE_TAG # define V_ASN1_APP_CHOOSE - 2 # define V_ASN1_OTHER - 3 # define V_ASN1_ANY - 4 # define V_ASN1_UNDEF - 1 # define V_ASN1_EOC 0 # define V_ASN1_BOOLEAN 1 # define V_ASN1_INTEGER 2 # define V_ASN1_BIT_STRING 3 # define V_ASN1_OCTET_STRING 4 # define V_ASN1_NULL 5 # define V_ASN1_OBJECT 6 # define V_ASN1_OBJECT_DESCRIPTOR 7 # define V_ASN1_EXTERNAL 8 # define V_ASN1_REAL 9 # define V_ASN1_ENUMERATED 1 0 # define V_ASN1_UTF8STRING 1 2 # define V_ASN1_SEQUENCE 1 6 # define V_ASN1_SET 1 7 # define V_ASN1_NUMERICSTRING 1 8 # define V_ASN1_PRINTABLESTRING 1 9 # define V_ASN1_T61STRING 2 0 # define V_ASN1_TELETEXSTRING 2 0 # define V_ASN1_VIDEOTEXSTRING 2 1 # define V_ASN1_IA5STRING 2 2 # define V_ASN1_UTCTIME 2 3 # define V_ASN1_GENERALIZEDTIME 2 4 # define V_ASN1_GRAPHICSTRING 2 5 # define V_ASN1_ISO64STRING 2 6 # define V_ASN1_VISIBLESTRING 2 6 # define V_ASN1_GENERALSTRING 2 7 # define V_ASN1_UNIVERSALSTRING 2 8 # define V_ASN1_BMPSTRING 3 0 # define V_ASN1_NEG 0 x100 # define)",
    "insertText": "V_ASN1_NEG_INTEGER(2 | V_ASN1_NEG) # define V_ASN1_NEG_ENUMERATED (10 | V_ASN1_NEG) # define B_ASN1_NUMERICSTRING 0x0001 # define B_ASN1_PRINTABLESTRING 0x0002 # define B_ASN1_T61STRING 0x0004 # define B_ASN1_TELETEXSTRING 0x0004 # define B_ASN1_VIDEOTEXSTRING 0x0008 # define B_ASN1_IA5STRING 0x0010 # define B_ASN1_GRAPHICSTRING 0x0020 # define B_ASN1_ISO64STRING 0x0040 # define B_ASN1_VISIBLESTRING 0x0040 # define B_ASN1_GENERALSTRING 0x0080 # define B_ASN1_UNIVERSALSTRING 0x0100 # define B_ASN1_OCTET_STRING 0x0200 # define B_ASN1_BIT_STRING 0x0400 # define B_ASN1_BMPSTRING 0x0800 # define B_ASN1_UNKNOWN 0x1000 # define B_ASN1_UTF8STRING 0x2000 # define B_ASN1_UTCTIME 0x4000 # define B_ASN1_GENERALIZEDTIME 0x8000 # define B_ASN1_SEQUENCE 0x10000 # define MBSTRING_FLAG 0x1000 # define MBSTRING_UTF8 (MBSTRING_FLAG) # define MBSTRING_ASC (MBSTRING_FLAG|1) # define MBSTRING_BMP (MBSTRING_FLAG|2) # define MBSTRING_UNIV (MBSTRING_FLAG|4)"
  },
  {
    "label": "DEFINE_STACK_OF()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DEFINE_STACK_OF(X509_ALGOR)"
  },
  {
    "label": "DIRSTRING_TYPE()",
    "kind": "Method",
    "detail": "Function (int length ; int type ; unsigned char* data ; long flags ; } ; typedef struct ASN1_ENCODING_st { unsigned char* enc ; long len ; int modified ; } ASN1_ENCODING ; # define ASN1_LONG_UNDEF 0 x7fffffffL # define STABLE_FLAGS_MALLOC 0 x01 # define STABLE_FLAGS_CLEAR STABLE_FLAGS_MALLOC # define STABLE_NO_MASK 0 x02 # define)",
    "insertText": "DIRSTRING_TYPE(B_ASN1_PRINTABLESTRING|B_ASN1_T61STRING|B_ASN1_BMPSTRING|B_ASN1_UTF8STRING) # define PKCS9STRING_TYPE (DIRSTRING_TYPE|B_ASN1_IA5STRING)"
  },
  {
    "label": "DEFINE_STACK_OF()",
    "kind": "Method",
    "detail": "Function (int nid ; long minsize ; long maxsize ; unsigned long mask ; unsigned long flags ; } ASN1_STRING_TABLE ;)",
    "insertText": "DEFINE_STACK_OF(ASN1_STRING_TABLE)"
  },
  {
    "label": "DECLARE_ASN1_FUNCTIONS()",
    "kind": "Method",
    "detail": "Function (typedef struct ASN1_TLC_st ASN1_TLC ; typedef struct ASN1_VALUE_st ASN1_VALUE ; # define)",
    "insertText": "DECLARE_ASN1_FUNCTIONS(type) DECLARE_ASN1_FUNCTIONS_name(type, type) # define DECLARE_ASN1_ALLOC_FUNCTIONS(type) \\ DECLARE_ASN1_ALLOC_FUNCTIONS_name(type, type) # define DECLARE_ASN1_FUNCTIONS_name(type, name) \\ DECLARE_ASN1_ALLOC_FUNCTIONS_name(type, name) \\ DECLARE_ASN1_ENCODE_FUNCTIONS(type, name, name) # define DECLARE_ASN1_FUNCTIONS_fname(type, itname, name) \\ DECLARE_ASN1_ALLOC_FUNCTIONS_name(type, name) \\ DECLARE_ASN1_ENCODE_FUNCTIONS(type, itname, name) # define DECLARE_ASN1_ENCODE_FUNCTIONS(type, itname, name) \\ type *d2i_##name(type **a, const unsigned char **in, long len)"
  },
  {
    "label": "name()",
    "kind": "Method",
    "detail": "Function (\\ int i2d_ # #)",
    "insertText": "name(type *a, unsigned char **out)"
  },
  {
    "label": "DECLARE_ASN1_ITEM()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "DECLARE_ASN1_ITEM(itname) # define DECLARE_ASN1_ENCODE_FUNCTIONS_const(type, name) \\ type *d2i_##name(type **a, const unsigned char **in, long len)"
  },
  {
    "label": "name()",
    "kind": "Method",
    "detail": "Function (\\ int i2d_ # #)",
    "insertText": "name(const type *a, unsigned char **out)"
  },
  {
    "label": "DECLARE_ASN1_ITEM()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "DECLARE_ASN1_ITEM(name) # define DECLARE_ASN1_NDEF_FUNCTION(name) \\ int i2d_##name##_NDEF(name *a, unsigned char **out)"
  },
  {
    "label": "DECLARE_ASN1_FUNCTIONS_const()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "DECLARE_ASN1_FUNCTIONS_const(name) \\ DECLARE_ASN1_ALLOC_FUNCTIONS(name) \\ DECLARE_ASN1_ENCODE_FUNCTIONS_const(name, name) # define DECLARE_ASN1_ALLOC_FUNCTIONS_name(type, name) \\ type *name##_new(void)"
  },
  {
    "label": "_free()",
    "kind": "Method",
    "detail": "Function (\\ void name # #)",
    "insertText": "_free(type *a)"
  },
  {
    "label": "DECLARE_ASN1_PRINT_FUNCTION()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "DECLARE_ASN1_PRINT_FUNCTION(stname) \\ DECLARE_ASN1_PRINT_FUNCTION_fname(stname, stname) # define DECLARE_ASN1_PRINT_FUNCTION_fname(stname, fname) \\ int fname##_print_ctx(BIO *out, stname *x, int indent, \\ const ASN1_PCTX *pctx)"
  },
  {
    "label": "D2I_OF()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "D2I_OF(type) type *(*)(type **,const unsigned char **,long) # define I2D_OF(type) int (*)(type *,unsigned char **) # define I2D_OF_const(type) int (*)(const type *,unsigned char **) # define CHECKED_D2I_OF(type, d2i) \\ ((d2i_of_void*) (1 ? d2i : ((D2I_OF(type))0))) # define CHECKED_I2D_OF(type, i2d) \\ ((i2d_of_void*) (1 ? i2d : ((I2D_OF(type))0))) # define CHECKED_NEW_OF(type, xnew) \\ ((void *(*)(void)) (1 ? xnew : ((type *(*)(void))0))) # define CHECKED_PTR_OF(type, p) \\ ((void*) (1 ? p : (type*)0)) # define CHECKED_PPTR_OF(type, p) \\ ((void**) (1 ? p : (type**)0)) # define TYPEDEF_D2I_OF(type) typedef type *d2i_of_##type(type **,const unsigned char **,long) # define TYPEDEF_I2D_OF(type) typedef int i2d_of_##type(type *,unsigned char **) # define TYPEDEF_D2I2D_OF(type) TYPEDEF_D2I_OF(type)"
  },
  {
    "label": "TYPEDEF_I2D_OF()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TYPEDEF_I2D_OF(type) TYPEDEF_D2I2D_OF(void)"
  },
  {
    "label": "ASN1_ITEM_ptr()",
    "kind": "Method",
    "detail": "Function (# ifndef OPENSSL_EXPORT_VAR_AS_FUNCTION typedef const ASN1_ITEM ASN1_ITEM_EXP ; # define)",
    "insertText": "ASN1_ITEM_ptr(iptr) (iptr) # define ASN1_ITEM_ref(iptr) (&(iptr##_it)) # define ASN1_ITEM_rptr(ref) (&(ref##_it)) # define DECLARE_ASN1_ITEM(name)"
  },
  {
    "label": "ASN1_ITEM_EXP()",
    "kind": "Method",
    "detail": "Function (# else typedef const ASN1_ITEM*)",
    "insertText": "ASN1_ITEM_EXP(void)"
  },
  {
    "label": "ASN1_ITEM_ptr()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "ASN1_ITEM_ptr(iptr) (iptr()) # define ASN1_ITEM_ref(iptr) (iptr##_it) # define ASN1_ITEM_rptr(ref) (ref##_it()) # define DECLARE_ASN1_ITEM(name) \\ const ASN1_ITEM * name##_it(void)"
  },
  {
    "label": "ASN1_STRFLGS_RFC2253()",
    "kind": "Method",
    "detail": "Function (# endif # define ASN1_STRFLGS_ESC_2253 1 # define ASN1_STRFLGS_ESC_CTRL 2 # define ASN1_STRFLGS_ESC_MSB 4 # define ASN1_STRFLGS_ESC_QUOTE 8 # define CHARTYPE_PRINTABLESTRING 0 x10 # define CHARTYPE_FIRST_ESC_2253 0 x20 # define CHARTYPE_LAST_ESC_2253 0 x40 # define ASN1_STRFLGS_UTF8_CONVERT 0 x10 # define ASN1_STRFLGS_IGNORE_TYPE 0 x20 # define ASN1_STRFLGS_SHOW_TYPE 0 x40 # define ASN1_STRFLGS_DUMP_ALL 0 x80 # define ASN1_STRFLGS_DUMP_UNKNOWN 0 x100 # define ASN1_STRFLGS_DUMP_DER 0 x200 # define ASN1_STRFLGS_ESC_2254 0 x400 # define)",
    "insertText": "ASN1_STRFLGS_RFC2253(ASN1_STRFLGS_ESC_2253 | \\ ASN1_STRFLGS_ESC_CTRL | \\ ASN1_STRFLGS_ESC_MSB | \\ ASN1_STRFLGS_UTF8_CONVERT | \\ ASN1_STRFLGS_DUMP_UNKNOWN | \\ ASN1_STRFLGS_DUMP_DER) DEFINE_STACK_OF(ASN1_INTEGER) DEFINE_STACK_OF(ASN1_GENERALSTRING) DEFINE_STACK_OF(ASN1_UTF8STRING)"
  },
  {
    "label": "DEFINE_STACK_OF()",
    "kind": "Method",
    "detail": "Function (int type ; union { char* ptr ; ASN1_BOOLEAN boolean ; ASN1_STRING* asn1_string ; ASN1_OBJECT* object ; ASN1_INTEGER* integer ; ASN1_ENUMERATED* enumerated ; ASN1_BIT_STRING* bit_string ; ASN1_OCTET_STRING* octet_string ; ASN1_PRINTABLESTRING* printablestring ; ASN1_T61STRING* t61string ; ASN1_IA5STRING* ia5string ; ASN1_GENERALSTRING* generalstring ; ASN1_BMPSTRING* bmpstring ; ASN1_UNIVERSALSTRING* universalstring ; ASN1_UTCTIME* utctime ; ASN1_GENERALIZEDTIME* generalizedtime ; ASN1_VISIBLESTRING* visiblestring ; ASN1_UTF8STRING* utf8string ; ASN1_STRING* set ; ASN1_STRING* sequence ; ASN1_VALUE* asn1_value ; } value ; } ASN1_TYPE ;)",
    "insertText": "DEFINE_STACK_OF(ASN1_TYPE) typedef STACK_OF(ASN1_TYPE)"
  },
  {
    "label": "DECLARE_ASN1_ENCODE_FUNCTIONS_const()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_ASN1_ENCODE_FUNCTIONS_const(ASN1_SEQUENCE_ANY, ASN1_SEQUENCE_ANY) DECLARE_ASN1_ENCODE_FUNCTIONS_const(ASN1_SEQUENCE_ANY, ASN1_SET_ANY)"
  },
  {
    "label": "DECLARE_ASN1_FUNCTIONS_fname()",
    "kind": "Method",
    "detail": "Function (int bitnum ; const char* lname ; const char* sname ; } BIT_STRING_BITNAME ; # define B_ASN1_TIME \\ B_ASN1_UTCTIME | \\ B_ASN1_GENERALIZEDTIME # define B_ASN1_PRINTABLE \\ B_ASN1_NUMERICSTRING | \\ B_ASN1_PRINTABLESTRING | \\ B_ASN1_T61STRING | \\ B_ASN1_IA5STRING | \\ B_ASN1_BIT_STRING | \\ B_ASN1_UNIVERSALSTRING | \\ B_ASN1_BMPSTRING | \\ B_ASN1_UTF8STRING | \\ B_ASN1_SEQUENCE | \\ B_ASN1_UNKNOWN # define B_ASN1_DIRECTORYSTRING \\ B_ASN1_PRINTABLESTRING | \\ B_ASN1_TELETEXSTRING | \\ B_ASN1_BMPSTRING | \\ B_ASN1_UNIVERSALSTRING | \\ B_ASN1_UTF8STRING # define B_ASN1_DISPLAYTEXT \\ B_ASN1_IA5STRING | \\ B_ASN1_VISIBLESTRING | \\ B_ASN1_BMPSTRING | \\ B_ASN1_UTF8STRING)",
    "insertText": "DECLARE_ASN1_FUNCTIONS_fname(ASN1_TYPE, ASN1_ANY, ASN1_TYPE) int ASN1_TYPE_get(const ASN1_TYPE *a)"
  },
  {
    "label": "ASN1_TYPE_set()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ASN1_TYPE_set(ASN1_TYPE *a, int type, void *value)"
  },
  {
    "label": "ASN1_TYPE_set1()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ASN1_TYPE_set1(ASN1_TYPE *a, int type, const void *value)"
  },
  {
    "label": "ASN1_TYPE_cmp()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ASN1_TYPE_cmp(const ASN1_TYPE *a, const ASN1_TYPE *b)"
  },
  {
    "label": "ASN1_TYPE_pack_sequence()",
    "kind": "Method",
    "detail": "Function (ASN1_TYPE*)",
    "insertText": "ASN1_TYPE_pack_sequence(const ASN1_ITEM *it, void *s, ASN1_TYPE **t)"
  },
  {
    "label": "ASN1_TYPE_unpack_sequence()",
    "kind": "Method",
    "detail": "Function (void*)",
    "insertText": "ASN1_TYPE_unpack_sequence(const ASN1_ITEM *it, const ASN1_TYPE *t)"
  },
  {
    "label": "ASN1_OBJECT_new()",
    "kind": "Method",
    "detail": "Function (ASN1_OBJECT*)",
    "insertText": "ASN1_OBJECT_new(void)"
  },
  {
    "label": "ASN1_OBJECT_free()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ASN1_OBJECT_free(ASN1_OBJECT *a)"
  },
  {
    "label": "i2d_ASN1_OBJECT()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "i2d_ASN1_OBJECT(const ASN1_OBJECT *a, unsigned char **pp)"
  },
  {
    "label": "d2i_ASN1_OBJECT()",
    "kind": "Method",
    "detail": "Function (ASN1_OBJECT*)",
    "insertText": "d2i_ASN1_OBJECT(ASN1_OBJECT **a, const unsigned char **pp, long length)"
  },
  {
    "label": "DECLARE_ASN1_ITEM()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_ASN1_ITEM(ASN1_OBJECT) DEFINE_STACK_OF(ASN1_OBJECT) ASN1_STRING *ASN1_STRING_new(void)"
  },
  {
    "label": "ASN1_STRING_free()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ASN1_STRING_free(ASN1_STRING *a)"
  },
  {
    "label": "ASN1_STRING_clear_free()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ASN1_STRING_clear_free(ASN1_STRING *a)"
  },
  {
    "label": "ASN1_STRING_copy()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ASN1_STRING_copy(ASN1_STRING *dst, const ASN1_STRING *str)"
  },
  {
    "label": "ASN1_STRING_dup()",
    "kind": "Method",
    "detail": "Function (ASN1_STRING*)",
    "insertText": "ASN1_STRING_dup(const ASN1_STRING *a)"
  },
  {
    "label": "ASN1_STRING_type_new()",
    "kind": "Method",
    "detail": "Function (ASN1_STRING*)",
    "insertText": "ASN1_STRING_type_new(int type)"
  },
  {
    "label": "ASN1_STRING_cmp()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ASN1_STRING_cmp(const ASN1_STRING *a, const ASN1_STRING *b)"
  },
  {
    "label": "ASN1_STRING_set()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ASN1_STRING_set(ASN1_STRING *str, const void *data, int len)"
  },
  {
    "label": "ASN1_STRING_set0()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ASN1_STRING_set0(ASN1_STRING *str, void *data, int len)"
  },
  {
    "label": "ASN1_STRING_length()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ASN1_STRING_length(const ASN1_STRING *x)"
  },
  {
    "label": "ASN1_STRING_length_set()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ASN1_STRING_length_set(ASN1_STRING *x, int n)"
  },
  {
    "label": "ASN1_STRING_type()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ASN1_STRING_type(const ASN1_STRING *x)"
  },
  {
    "label": "DEPRECATEDIN_1_1_0()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DEPRECATEDIN_1_1_0(unsigned char *ASN1_STRING_data(ASN1_STRING *x)) const unsigned char *ASN1_STRING_get0_data(const ASN1_STRING *x)"
  },
  {
    "label": "DECLARE_ASN1_FUNCTIONS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_ASN1_FUNCTIONS(ASN1_BIT_STRING) int ASN1_BIT_STRING_set(ASN1_BIT_STRING *a, unsigned char *d, int length)"
  },
  {
    "label": "ASN1_BIT_STRING_set_bit()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ASN1_BIT_STRING_set_bit(ASN1_BIT_STRING *a, int n, int value)"
  },
  {
    "label": "ASN1_BIT_STRING_get_bit()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ASN1_BIT_STRING_get_bit(const ASN1_BIT_STRING *a, int n)"
  },
  {
    "label": "ASN1_BIT_STRING_check()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ASN1_BIT_STRING_check(const ASN1_BIT_STRING *a, const unsigned char *flags, int flags_len)"
  },
  {
    "label": "ASN1_BIT_STRING_name_print()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ASN1_BIT_STRING_name_print(BIO *out, ASN1_BIT_STRING *bs, BIT_STRING_BITNAME *tbl, int indent)"
  },
  {
    "label": "ASN1_BIT_STRING_num_asc()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ASN1_BIT_STRING_num_asc(const char *name, BIT_STRING_BITNAME *tbl)"
  },
  {
    "label": "ASN1_BIT_STRING_set_asc()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ASN1_BIT_STRING_set_asc(ASN1_BIT_STRING *bs, const char *name, int value, BIT_STRING_BITNAME *tbl)"
  },
  {
    "label": "DECLARE_ASN1_FUNCTIONS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_ASN1_FUNCTIONS(ASN1_INTEGER) ASN1_INTEGER *d2i_ASN1_UINTEGER(ASN1_INTEGER **a, const unsigned char **pp, long length)"
  },
  {
    "label": "ASN1_INTEGER_dup()",
    "kind": "Method",
    "detail": "Function (ASN1_INTEGER*)",
    "insertText": "ASN1_INTEGER_dup(const ASN1_INTEGER *x)"
  },
  {
    "label": "ASN1_INTEGER_cmp()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ASN1_INTEGER_cmp(const ASN1_INTEGER *x, const ASN1_INTEGER *y)"
  },
  {
    "label": "DECLARE_ASN1_FUNCTIONS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_ASN1_FUNCTIONS(ASN1_ENUMERATED) int ASN1_UTCTIME_check(const ASN1_UTCTIME *a)"
  },
  {
    "label": "ASN1_UTCTIME_set()",
    "kind": "Method",
    "detail": "Function (ASN1_UTCTIME*)",
    "insertText": "ASN1_UTCTIME_set(ASN1_UTCTIME *s, time_t t)"
  },
  {
    "label": "ASN1_UTCTIME_adj()",
    "kind": "Method",
    "detail": "Function (ASN1_UTCTIME*)",
    "insertText": "ASN1_UTCTIME_adj(ASN1_UTCTIME *s, time_t t, int offset_day, long offset_sec)"
  },
  {
    "label": "ASN1_UTCTIME_set_string()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ASN1_UTCTIME_set_string(ASN1_UTCTIME *s, const char *str)"
  },
  {
    "label": "ASN1_UTCTIME_cmp_time_t()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ASN1_UTCTIME_cmp_time_t(const ASN1_UTCTIME *s, time_t t)"
  },
  {
    "label": "ASN1_GENERALIZEDTIME_check()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ASN1_GENERALIZEDTIME_check(const ASN1_GENERALIZEDTIME *a)"
  },
  {
    "label": "ASN1_GENERALIZEDTIME_set()",
    "kind": "Method",
    "detail": "Function (ASN1_GENERALIZEDTIME*)",
    "insertText": "ASN1_GENERALIZEDTIME_set(ASN1_GENERALIZEDTIME *s, time_t t)"
  },
  {
    "label": "ASN1_GENERALIZEDTIME_adj()",
    "kind": "Method",
    "detail": "Function (ASN1_GENERALIZEDTIME*)",
    "insertText": "ASN1_GENERALIZEDTIME_adj(ASN1_GENERALIZEDTIME *s, time_t t, int offset_day, long offset_sec)"
  },
  {
    "label": "ASN1_GENERALIZEDTIME_set_string()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ASN1_GENERALIZEDTIME_set_string(ASN1_GENERALIZEDTIME *s, const char *str)"
  },
  {
    "label": "ASN1_TIME_diff()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ASN1_TIME_diff(int *pday, int *psec, const ASN1_TIME *from, const ASN1_TIME *to)"
  },
  {
    "label": "DECLARE_ASN1_FUNCTIONS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_ASN1_FUNCTIONS(ASN1_OCTET_STRING) ASN1_OCTET_STRING *ASN1_OCTET_STRING_dup(const ASN1_OCTET_STRING *a)"
  },
  {
    "label": "ASN1_OCTET_STRING_cmp()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ASN1_OCTET_STRING_cmp(const ASN1_OCTET_STRING *a, const ASN1_OCTET_STRING *b)"
  },
  {
    "label": "ASN1_OCTET_STRING_set()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ASN1_OCTET_STRING_set(ASN1_OCTET_STRING *str, const unsigned char *data, int len)"
  },
  {
    "label": "DECLARE_ASN1_FUNCTIONS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_ASN1_FUNCTIONS(ASN1_VISIBLESTRING) DECLARE_ASN1_FUNCTIONS(ASN1_UNIVERSALSTRING) DECLARE_ASN1_FUNCTIONS(ASN1_UTF8STRING) DECLARE_ASN1_FUNCTIONS(ASN1_NULL) DECLARE_ASN1_FUNCTIONS(ASN1_BMPSTRING) int UTF8_getc(const unsigned char *str, int len, unsigned long *val)"
  },
  {
    "label": "UTF8_putc()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "UTF8_putc(unsigned char *str, int len, unsigned long value)"
  },
  {
    "label": "DECLARE_ASN1_FUNCTIONS_name()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_ASN1_FUNCTIONS_name(ASN1_STRING, ASN1_PRINTABLE) DECLARE_ASN1_FUNCTIONS_name(ASN1_STRING, DIRECTORYSTRING) DECLARE_ASN1_FUNCTIONS_name(ASN1_STRING, DISPLAYTEXT) DECLARE_ASN1_FUNCTIONS(ASN1_PRINTABLESTRING) DECLARE_ASN1_FUNCTIONS(ASN1_T61STRING) DECLARE_ASN1_FUNCTIONS(ASN1_IA5STRING) DECLARE_ASN1_FUNCTIONS(ASN1_GENERALSTRING) DECLARE_ASN1_FUNCTIONS(ASN1_UTCTIME) DECLARE_ASN1_FUNCTIONS(ASN1_GENERALIZEDTIME) DECLARE_ASN1_FUNCTIONS(ASN1_TIME) DECLARE_ASN1_ITEM(ASN1_OCTET_STRING_NDEF) ASN1_TIME *ASN1_TIME_set(ASN1_TIME *s, time_t t)"
  },
  {
    "label": "ASN1_TIME_adj()",
    "kind": "Method",
    "detail": "Function (ASN1_TIME*)",
    "insertText": "ASN1_TIME_adj(ASN1_TIME *s, time_t t, int offset_day, long offset_sec)"
  },
  {
    "label": "ASN1_TIME_check()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ASN1_TIME_check(const ASN1_TIME *t)"
  },
  {
    "label": "ASN1_TIME_to_generalizedtime()",
    "kind": "Method",
    "detail": "Function (ASN1_GENERALIZEDTIME*)",
    "insertText": "ASN1_TIME_to_generalizedtime(const ASN1_TIME *t, ASN1_GENERALIZEDTIME **out)"
  },
  {
    "label": "ASN1_TIME_set_string()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ASN1_TIME_set_string(ASN1_TIME *s, const char *str)"
  },
  {
    "label": "ASN1_TIME_set_string_X509()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ASN1_TIME_set_string_X509(ASN1_TIME *s, const char *str)"
  },
  {
    "label": "ASN1_TIME_to_tm()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ASN1_TIME_to_tm(const ASN1_TIME *s, struct tm *tm)"
  },
  {
    "label": "ASN1_TIME_normalize()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ASN1_TIME_normalize(ASN1_TIME *s)"
  },
  {
    "label": "ASN1_TIME_cmp_time_t()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ASN1_TIME_cmp_time_t(const ASN1_TIME *s, time_t t)"
  },
  {
    "label": "ASN1_TIME_compare()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ASN1_TIME_compare(const ASN1_TIME *a, const ASN1_TIME *b)"
  },
  {
    "label": "i2a_ASN1_INTEGER()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "i2a_ASN1_INTEGER(BIO *bp, const ASN1_INTEGER *a)"
  },
  {
    "label": "a2i_ASN1_INTEGER()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "a2i_ASN1_INTEGER(BIO *bp, ASN1_INTEGER *bs, char *buf, int size)"
  },
  {
    "label": "i2a_ASN1_ENUMERATED()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "i2a_ASN1_ENUMERATED(BIO *bp, const ASN1_ENUMERATED *a)"
  },
  {
    "label": "a2i_ASN1_ENUMERATED()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "a2i_ASN1_ENUMERATED(BIO *bp, ASN1_ENUMERATED *bs, char *buf, int size)"
  },
  {
    "label": "i2a_ASN1_OBJECT()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "i2a_ASN1_OBJECT(BIO *bp, const ASN1_OBJECT *a)"
  },
  {
    "label": "a2i_ASN1_STRING()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "a2i_ASN1_STRING(BIO *bp, ASN1_STRING *bs, char *buf, int size)"
  },
  {
    "label": "i2a_ASN1_STRING()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "i2a_ASN1_STRING(BIO *bp, const ASN1_STRING *a, int type)"
  },
  {
    "label": "i2t_ASN1_OBJECT()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "i2t_ASN1_OBJECT(char *buf, int buf_len, const ASN1_OBJECT *a)"
  },
  {
    "label": "a2d_ASN1_OBJECT()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "a2d_ASN1_OBJECT(unsigned char *out, int olen, const char *buf, int num)"
  },
  {
    "label": "ASN1_OBJECT_create()",
    "kind": "Method",
    "detail": "Function (ASN1_OBJECT*)",
    "insertText": "ASN1_OBJECT_create(int nid, unsigned char *data, int len, const char *sn, const char *ln)"
  },
  {
    "label": "ASN1_INTEGER_get_int64()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ASN1_INTEGER_get_int64(int64_t *pr, const ASN1_INTEGER *a)"
  },
  {
    "label": "ASN1_INTEGER_set_int64()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ASN1_INTEGER_set_int64(ASN1_INTEGER *a, int64_t r)"
  },
  {
    "label": "ASN1_INTEGER_get_uint64()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ASN1_INTEGER_get_uint64(uint64_t *pr, const ASN1_INTEGER *a)"
  },
  {
    "label": "ASN1_INTEGER_set_uint64()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ASN1_INTEGER_set_uint64(ASN1_INTEGER *a, uint64_t r)"
  },
  {
    "label": "ASN1_INTEGER_set()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ASN1_INTEGER_set(ASN1_INTEGER *a, long v)"
  },
  {
    "label": "ASN1_INTEGER_get()",
    "kind": "Method",
    "detail": "Function (long)",
    "insertText": "ASN1_INTEGER_get(const ASN1_INTEGER *a)"
  },
  {
    "label": "BN_to_ASN1_INTEGER()",
    "kind": "Method",
    "detail": "Function (ASN1_INTEGER*)",
    "insertText": "BN_to_ASN1_INTEGER(const BIGNUM *bn, ASN1_INTEGER *ai)"
  },
  {
    "label": "ASN1_INTEGER_to_BN()",
    "kind": "Method",
    "detail": "Function (BIGNUM*)",
    "insertText": "ASN1_INTEGER_to_BN(const ASN1_INTEGER *ai, BIGNUM *bn)"
  },
  {
    "label": "ASN1_ENUMERATED_get_int64()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ASN1_ENUMERATED_get_int64(int64_t *pr, const ASN1_ENUMERATED *a)"
  },
  {
    "label": "ASN1_ENUMERATED_set_int64()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ASN1_ENUMERATED_set_int64(ASN1_ENUMERATED *a, int64_t r)"
  },
  {
    "label": "ASN1_ENUMERATED_set()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ASN1_ENUMERATED_set(ASN1_ENUMERATED *a, long v)"
  },
  {
    "label": "ASN1_ENUMERATED_get()",
    "kind": "Method",
    "detail": "Function (long)",
    "insertText": "ASN1_ENUMERATED_get(const ASN1_ENUMERATED *a)"
  },
  {
    "label": "BN_to_ASN1_ENUMERATED()",
    "kind": "Method",
    "detail": "Function (ASN1_ENUMERATED*)",
    "insertText": "BN_to_ASN1_ENUMERATED(const BIGNUM *bn, ASN1_ENUMERATED *ai)"
  },
  {
    "label": "ASN1_ENUMERATED_to_BN()",
    "kind": "Method",
    "detail": "Function (BIGNUM*)",
    "insertText": "ASN1_ENUMERATED_to_BN(const ASN1_ENUMERATED *ai, BIGNUM *bn)"
  },
  {
    "label": "ASN1_PRINTABLE_type()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ASN1_PRINTABLE_type(const unsigned char *s, int max)"
  },
  {
    "label": "ASN1_tag2bit()",
    "kind": "Method",
    "detail": "Function (unsigned long)",
    "insertText": "ASN1_tag2bit(int tag)"
  },
  {
    "label": "ASN1_get_object()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ASN1_get_object(const unsigned char **pp, long *plength, int *ptag, int *pclass, long omax)"
  },
  {
    "label": "ASN1_check_infinite_end()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ASN1_check_infinite_end(unsigned char **p, long len)"
  },
  {
    "label": "ASN1_const_check_infinite_end()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ASN1_const_check_infinite_end(const unsigned char **p, long len)"
  },
  {
    "label": "ASN1_put_object()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ASN1_put_object(unsigned char **pp, int constructed, int length, int tag, int xclass)"
  },
  {
    "label": "ASN1_put_eoc()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ASN1_put_eoc(unsigned char **pp)"
  },
  {
    "label": "ASN1_object_size()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ASN1_object_size(int constructed, int length, int tag)"
  },
  {
    "label": "ASN1_dup()",
    "kind": "Method",
    "detail": "Function (void*)",
    "insertText": "ASN1_dup(i2d_of_void *i2d, d2i_of_void *d2i, void *x)"
  },
  {
    "label": "ASN1_dup_of()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "ASN1_dup_of(type,i2d,d2i,x) \\ ((type*)ASN1_dup(CHECKED_I2D_OF(type, i2d), \\ CHECKED_D2I_OF(type, d2i), \\ CHECKED_PTR_OF(type, x))) # define ASN1_dup_of_const(type,i2d,d2i,x) \\ ((type*)ASN1_dup(CHECKED_I2D_OF(const type, i2d), \\ CHECKED_D2I_OF(type, d2i), \\ CHECKED_PTR_OF(const type, x))) void *ASN1_item_dup(const ASN1_ITEM *it, void *x)"
  },
  {
    "label": "M_ASN1_new_of()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "M_ASN1_new_of(type) (type *)ASN1_item_new(ASN1_ITEM_rptr(type)) # define M_ASN1_free_of(x, type) \\ ASN1_item_free(CHECKED_PTR_OF(type, x), ASN1_ITEM_rptr(type)) # ifndef OPENSSL_NO_STDIO void *ASN1_d2i_fp(void *(*xnew) (void), d2i_of_void *d2i, FILE *in, void **x)"
  },
  {
    "label": "ASN1_d2i_fp_of()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "ASN1_d2i_fp_of(type,xnew,d2i,in,x) \\ ((type*)ASN1_d2i_fp(CHECKED_NEW_OF(type, xnew), \\ CHECKED_D2I_OF(type, d2i), \\ in, \\ CHECKED_PPTR_OF(type, x))) void *ASN1_item_d2i_fp(const ASN1_ITEM *it, FILE *in, void *x)"
  },
  {
    "label": "ASN1_i2d_fp()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ASN1_i2d_fp(i2d_of_void *i2d, FILE *out, void *x)"
  },
  {
    "label": "ASN1_i2d_fp_of()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "ASN1_i2d_fp_of(type,i2d,out,x) \\ (ASN1_i2d_fp(CHECKED_I2D_OF(type, i2d), \\ out, \\ CHECKED_PTR_OF(type, x))) # define ASN1_i2d_fp_of_const(type,i2d,out,x) \\ (ASN1_i2d_fp(CHECKED_I2D_OF(const type, i2d), \\ out, \\ CHECKED_PTR_OF(const type, x))) int ASN1_item_i2d_fp(const ASN1_ITEM *it, FILE *out, void *x)"
  },
  {
    "label": "ASN1_STRING_print_ex_fp()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ASN1_STRING_print_ex_fp(FILE *fp, const ASN1_STRING *str, unsigned long flags)"
  },
  {
    "label": "ASN1_STRING_to_UTF8()",
    "kind": "Method",
    "detail": "Function (# endif int)",
    "insertText": "ASN1_STRING_to_UTF8(unsigned char **out, const ASN1_STRING *in)"
  },
  {
    "label": "ASN1_d2i_bio()",
    "kind": "Method",
    "detail": "Function (void*)",
    "insertText": "ASN1_d2i_bio(void *(*xnew) (void), d2i_of_void *d2i, BIO *in, void **x)"
  },
  {
    "label": "ASN1_d2i_bio_of()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "ASN1_d2i_bio_of(type,xnew,d2i,in,x) \\ ((type*)ASN1_d2i_bio( CHECKED_NEW_OF(type, xnew), \\ CHECKED_D2I_OF(type, d2i), \\ in, \\ CHECKED_PPTR_OF(type, x))) void *ASN1_item_d2i_bio(const ASN1_ITEM *it, BIO *in, void *x)"
  },
  {
    "label": "ASN1_i2d_bio()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ASN1_i2d_bio(i2d_of_void *i2d, BIO *out, unsigned char *x)"
  },
  {
    "label": "ASN1_i2d_bio_of()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "ASN1_i2d_bio_of(type,i2d,out,x) \\ (ASN1_i2d_bio(CHECKED_I2D_OF(type, i2d), \\ out, \\ CHECKED_PTR_OF(type, x))) # define ASN1_i2d_bio_of_const(type,i2d,out,x) \\ (ASN1_i2d_bio(CHECKED_I2D_OF(const type, i2d), \\ out, \\ CHECKED_PTR_OF(const type, x))) int ASN1_item_i2d_bio(const ASN1_ITEM *it, BIO *out, void *x)"
  },
  {
    "label": "ASN1_UTCTIME_print()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ASN1_UTCTIME_print(BIO *fp, const ASN1_UTCTIME *a)"
  },
  {
    "label": "ASN1_GENERALIZEDTIME_print()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ASN1_GENERALIZEDTIME_print(BIO *fp, const ASN1_GENERALIZEDTIME *a)"
  },
  {
    "label": "ASN1_TIME_print()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ASN1_TIME_print(BIO *fp, const ASN1_TIME *a)"
  },
  {
    "label": "ASN1_STRING_print()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ASN1_STRING_print(BIO *bp, const ASN1_STRING *v)"
  },
  {
    "label": "ASN1_STRING_print_ex()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ASN1_STRING_print_ex(BIO *out, const ASN1_STRING *str, unsigned long flags)"
  },
  {
    "label": "ASN1_buf_print()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ASN1_buf_print(BIO *bp, const unsigned char *buf, size_t buflen, int off)"
  },
  {
    "label": "ASN1_bn_print()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ASN1_bn_print(BIO *bp, const char *number, const BIGNUM *num, unsigned char *buf, int off)"
  },
  {
    "label": "ASN1_parse()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ASN1_parse(BIO *bp, const unsigned char *pp, long len, int indent)"
  },
  {
    "label": "ASN1_parse_dump()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ASN1_parse_dump(BIO *bp, const unsigned char *pp, long len, int indent, int dump)"
  },
  {
    "label": "ASN1_tag2str()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "ASN1_tag2str(int tag)"
  },
  {
    "label": "ASN1_UNIVERSALSTRING_to_string()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ASN1_UNIVERSALSTRING_to_string(ASN1_UNIVERSALSTRING *s)"
  },
  {
    "label": "ASN1_TYPE_set_octetstring()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ASN1_TYPE_set_octetstring(ASN1_TYPE *a, unsigned char *data, int len)"
  },
  {
    "label": "ASN1_TYPE_get_octetstring()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ASN1_TYPE_get_octetstring(const ASN1_TYPE *a, unsigned char *data, int max_len)"
  },
  {
    "label": "ASN1_TYPE_set_int_octetstring()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ASN1_TYPE_set_int_octetstring(ASN1_TYPE *a, long num, unsigned char *data, int len)"
  },
  {
    "label": "ASN1_TYPE_get_int_octetstring()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ASN1_TYPE_get_int_octetstring(const ASN1_TYPE *a, long *num, unsigned char *data, int max_len)"
  },
  {
    "label": "ASN1_item_unpack()",
    "kind": "Method",
    "detail": "Function (void*)",
    "insertText": "ASN1_item_unpack(const ASN1_STRING *oct, const ASN1_ITEM *it)"
  },
  {
    "label": "ASN1_item_pack()",
    "kind": "Method",
    "detail": "Function (ASN1_STRING*)",
    "insertText": "ASN1_item_pack(void *obj, const ASN1_ITEM *it, ASN1_OCTET_STRING **oct)"
  },
  {
    "label": "ASN1_STRING_set_default_mask()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ASN1_STRING_set_default_mask(unsigned long mask)"
  },
  {
    "label": "ASN1_STRING_set_default_mask_asc()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ASN1_STRING_set_default_mask_asc(const char *p)"
  },
  {
    "label": "ASN1_STRING_get_default_mask()",
    "kind": "Method",
    "detail": "Function (unsigned long)",
    "insertText": "ASN1_STRING_get_default_mask(void)"
  },
  {
    "label": "ASN1_mbstring_copy()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ASN1_mbstring_copy(ASN1_STRING **out, const unsigned char *in, int len, int inform, unsigned long mask)"
  },
  {
    "label": "ASN1_mbstring_ncopy()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ASN1_mbstring_ncopy(ASN1_STRING **out, const unsigned char *in, int len, int inform, unsigned long mask, long minsize, long maxsize)"
  },
  {
    "label": "ASN1_STRING_set_by_NID()",
    "kind": "Method",
    "detail": "Function (ASN1_STRING*)",
    "insertText": "ASN1_STRING_set_by_NID(ASN1_STRING **out, const unsigned char *in, int inlen, int inform, int nid)"
  },
  {
    "label": "ASN1_STRING_TABLE_get()",
    "kind": "Method",
    "detail": "Function (ASN1_STRING_TABLE*)",
    "insertText": "ASN1_STRING_TABLE_get(int nid)"
  },
  {
    "label": "ASN1_STRING_TABLE_add()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ASN1_STRING_TABLE_add(int, long, long, unsigned long, unsigned long)"
  },
  {
    "label": "ASN1_STRING_TABLE_cleanup()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ASN1_STRING_TABLE_cleanup(void)"
  },
  {
    "label": "ASN1_item_new()",
    "kind": "Method",
    "detail": "Function (ASN1_VALUE*)",
    "insertText": "ASN1_item_new(const ASN1_ITEM *it)"
  },
  {
    "label": "ASN1_item_free()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ASN1_item_free(ASN1_VALUE *val, const ASN1_ITEM *it)"
  },
  {
    "label": "ASN1_item_d2i()",
    "kind": "Method",
    "detail": "Function (ASN1_VALUE*)",
    "insertText": "ASN1_item_d2i(ASN1_VALUE **val, const unsigned char **in, long len, const ASN1_ITEM *it)"
  },
  {
    "label": "ASN1_item_i2d()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ASN1_item_i2d(ASN1_VALUE *val, unsigned char **out, const ASN1_ITEM *it)"
  },
  {
    "label": "ASN1_item_ndef_i2d()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ASN1_item_ndef_i2d(ASN1_VALUE *val, unsigned char **out, const ASN1_ITEM *it)"
  },
  {
    "label": "ASN1_add_oid_module()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ASN1_add_oid_module(void)"
  },
  {
    "label": "ASN1_add_stable_module()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ASN1_add_stable_module(void)"
  },
  {
    "label": "ASN1_generate_nconf()",
    "kind": "Method",
    "detail": "Function (ASN1_TYPE*)",
    "insertText": "ASN1_generate_nconf(const char *str, CONF *nconf)"
  },
  {
    "label": "ASN1_generate_v3()",
    "kind": "Method",
    "detail": "Function (ASN1_TYPE*)",
    "insertText": "ASN1_generate_v3(const char *str, X509V3_CTX *cnf)"
  },
  {
    "label": "ASN1_str2mask()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ASN1_str2mask(const char *str, unsigned long *pmask)"
  },
  {
    "label": "ASN1_item_print()",
    "kind": "Method",
    "detail": "Function (# define ASN1_PCTX_FLAGS_SHOW_ABSENT 0 x001 # define ASN1_PCTX_FLAGS_SHOW_SEQUENCE 0 x002 # define ASN1_PCTX_FLAGS_SHOW_SSOF 0 x004 # define ASN1_PCTX_FLAGS_SHOW_TYPE 0 x008 # define ASN1_PCTX_FLAGS_NO_ANY_TYPE 0 x010 # define ASN1_PCTX_FLAGS_NO_MSTRING_TYPE 0 x020 # define ASN1_PCTX_FLAGS_NO_FIELD_NAME 0 x040 # define ASN1_PCTX_FLAGS_SHOW_FIELD_STRUCT_NAME 0 x080 # define ASN1_PCTX_FLAGS_NO_STRUCT_NAME 0 x100 int)",
    "insertText": "ASN1_item_print(BIO *out, ASN1_VALUE *ifld, int indent, const ASN1_ITEM *it, const ASN1_PCTX *pctx)"
  },
  {
    "label": "ASN1_PCTX_new()",
    "kind": "Method",
    "detail": "Function (ASN1_PCTX*)",
    "insertText": "ASN1_PCTX_new(void)"
  },
  {
    "label": "ASN1_PCTX_free()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ASN1_PCTX_free(ASN1_PCTX *p)"
  },
  {
    "label": "ASN1_PCTX_get_flags()",
    "kind": "Method",
    "detail": "Function (unsigned long)",
    "insertText": "ASN1_PCTX_get_flags(const ASN1_PCTX *p)"
  },
  {
    "label": "ASN1_PCTX_set_flags()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ASN1_PCTX_set_flags(ASN1_PCTX *p, unsigned long flags)"
  },
  {
    "label": "ASN1_PCTX_get_nm_flags()",
    "kind": "Method",
    "detail": "Function (unsigned long)",
    "insertText": "ASN1_PCTX_get_nm_flags(const ASN1_PCTX *p)"
  },
  {
    "label": "ASN1_PCTX_set_nm_flags()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ASN1_PCTX_set_nm_flags(ASN1_PCTX *p, unsigned long flags)"
  },
  {
    "label": "ASN1_PCTX_get_cert_flags()",
    "kind": "Method",
    "detail": "Function (unsigned long)",
    "insertText": "ASN1_PCTX_get_cert_flags(const ASN1_PCTX *p)"
  },
  {
    "label": "ASN1_PCTX_set_cert_flags()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ASN1_PCTX_set_cert_flags(ASN1_PCTX *p, unsigned long flags)"
  },
  {
    "label": "ASN1_PCTX_get_oid_flags()",
    "kind": "Method",
    "detail": "Function (unsigned long)",
    "insertText": "ASN1_PCTX_get_oid_flags(const ASN1_PCTX *p)"
  },
  {
    "label": "ASN1_PCTX_set_oid_flags()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ASN1_PCTX_set_oid_flags(ASN1_PCTX *p, unsigned long flags)"
  },
  {
    "label": "ASN1_PCTX_get_str_flags()",
    "kind": "Method",
    "detail": "Function (unsigned long)",
    "insertText": "ASN1_PCTX_get_str_flags(const ASN1_PCTX *p)"
  },
  {
    "label": "ASN1_PCTX_set_str_flags()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ASN1_PCTX_set_str_flags(ASN1_PCTX *p, unsigned long flags)"
  },
  {
    "label": "ASN1_SCTX_new()",
    "kind": "Method",
    "detail": "Function (ASN1_SCTX*)",
    "insertText": "ASN1_SCTX_new(int (*scan_cb) (ASN1_SCTX *ctx))"
  },
  {
    "label": "ASN1_SCTX_free()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ASN1_SCTX_free(ASN1_SCTX *p)"
  },
  {
    "label": "ASN1_SCTX_get_item()",
    "kind": "Method",
    "detail": "Function (const ASN1_ITEM*)",
    "insertText": "ASN1_SCTX_get_item(ASN1_SCTX *p)"
  },
  {
    "label": "ASN1_SCTX_get_template()",
    "kind": "Method",
    "detail": "Function (const ASN1_TEMPLATE*)",
    "insertText": "ASN1_SCTX_get_template(ASN1_SCTX *p)"
  },
  {
    "label": "ASN1_SCTX_get_flags()",
    "kind": "Method",
    "detail": "Function (unsigned long)",
    "insertText": "ASN1_SCTX_get_flags(ASN1_SCTX *p)"
  },
  {
    "label": "ASN1_SCTX_set_app_data()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ASN1_SCTX_set_app_data(ASN1_SCTX *p, void *data)"
  },
  {
    "label": "ASN1_SCTX_get_app_data()",
    "kind": "Method",
    "detail": "Function (void*)",
    "insertText": "ASN1_SCTX_get_app_data(ASN1_SCTX *p)"
  },
  {
    "label": "BIO_f_asn1()",
    "kind": "Method",
    "detail": "Function (const BIO_METHOD*)",
    "insertText": "BIO_f_asn1(void)"
  },
  {
    "label": "BIO_new_NDEF()",
    "kind": "Method",
    "detail": "Function (BIO*)",
    "insertText": "BIO_new_NDEF(BIO *out, ASN1_VALUE *val, const ASN1_ITEM *it)"
  },
  {
    "label": "i2d_ASN1_bio_stream()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "i2d_ASN1_bio_stream(BIO *out, ASN1_VALUE *val, BIO *in, int flags, const ASN1_ITEM *it)"
  },
  {
    "label": "PEM_write_bio_ASN1_stream()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "PEM_write_bio_ASN1_stream(BIO *out, ASN1_VALUE *val, BIO *in, int flags, const char *hdr, const ASN1_ITEM *it)"
  },
  {
    "label": "SMIME_write_ASN1()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SMIME_write_ASN1(BIO *bio, ASN1_VALUE *val, BIO *data, int flags, int ctype_nid, int econt_nid, STACK_OF(X509_ALGOR) *mdalgs, const ASN1_ITEM *it)"
  },
  {
    "label": "SMIME_read_ASN1()",
    "kind": "Method",
    "detail": "Function (ASN1_VALUE*)",
    "insertText": "SMIME_read_ASN1(BIO *bio, BIO **bcont, const ASN1_ITEM *it)"
  },
  {
    "label": "SMIME_crlf_copy()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SMIME_crlf_copy(BIO *in, BIO *out, int flags)"
  },
  {
    "label": "SMIME_text()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SMIME_text(BIO *in, BIO *out)"
  },
  {
    "label": "ASN1_ITEM_lookup()",
    "kind": "Method",
    "detail": "Function (const ASN1_ITEM*)",
    "insertText": "ASN1_ITEM_lookup(const char *name)"
  },
  {
    "label": "ASN1_ITEM_get()",
    "kind": "Method",
    "detail": "Function (const ASN1_ITEM*)",
    "insertText": "ASN1_ITEM_get(size_t i)"
  }
]