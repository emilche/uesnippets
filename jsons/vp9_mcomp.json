[
  {
    "label": "search_site_config",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "search_site_config"
  },
  {
    "label": "buf_2d",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "buf_2d"
  },
  {
    "label": "VP9_COMP",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VP9_COMP"
  },
  {
    "label": "SPEED_FEATURES",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SPEED_FEATURES"
  },
  {
    "label": "macroblock",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "macroblock"
  },
  {
    "label": "mv",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "mv"
  },
  {
    "label": "vp9_variance_vtable",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "vp9_variance_vtable"
  },
  {
    "label": "mv",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "mv"
  },
  {
    "label": "VP9_COMP",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VP9_COMP"
  },
  {
    "label": "VP9_COMP",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VP9_COMP"
  },
  {
    "label": "VP9_COMP",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VP9_COMP"
  },
  {
    "label": "TplDepStats",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TplDepStats"
  },
  {
    "label": "VP9_COMP",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VP9_COMP"
  },
  {
    "label": "TplDepFrame",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TplDepFrame"
  },
  {
    "label": "MotionField",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "MotionField"
  },
  {
    "label": "vp9_init_dsmotion_compensation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vp9_init_dsmotion_compensation(search_site_config *cfg, int stride)"
  },
  {
    "label": "vp9_init3smotion_compensation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vp9_init3smotion_compensation(search_site_config *cfg, int stride)"
  },
  {
    "label": "vp9_set_mv_search_range()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vp9_set_mv_search_range(MvLimits *mv_limits, const MV *mv)"
  },
  {
    "label": "vp9_mv_bit_cost()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "vp9_mv_bit_cost(const MV *mv, const MV *ref, const int *mvjcost,\n                    int *mvcost[2], int weight)"
  },
  {
    "label": "vp9_get_mvpred_var()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "vp9_get_mvpred_var(const MACROBLOCK *x, const MV *best_mv,\n                       const MV *center_mv, const vp9_variance_fn_ptr_t *vfp,\n                       int use_mvcost)"
  },
  {
    "label": "vp9_get_mvpred_av_var()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "vp9_get_mvpred_av_var(const MACROBLOCK *x, const MV *best_mv,\n                          const MV *center_mv, const uint8_t *second_pred,\n                          const vp9_variance_fn_ptr_t *vfp, int use_mvcost)"
  },
  {
    "label": "vp9_init_search_range()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "vp9_init_search_range(int size)"
  },
  {
    "label": "vp9_refining_search_sad()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "vp9_refining_search_sad(const struct macroblock *x, struct mv *ref_mv,\n                            int error_per_bit, int search_range,\n                            const struct vp9_variance_vtable *fn_ptr,\n                            const struct mv *center_mv)"
  },
  {
    "label": "vp9_int_pro_motion_estimation()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "vp9_int_pro_motion_estimation(const struct VP9_COMP *cpi,\n                                           MACROBLOCK *x, BLOCK_SIZE bsize,\n                                           int mi_row, int mi_col,\n                                           const MV *ref_mv)"
  },
  {
    "label": "vp9_refining_search_8p_c()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "vp9_refining_search_8p_c(const MACROBLOCK *x, MV *ref_mv, int error_per_bit,\n                             int search_range,\n                             const vp9_variance_fn_ptr_t *fn_ptr,\n                             const MV *center_mv, const uint8_t *second_pred)"
  },
  {
    "label": "vp9_full_pixel_search()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "vp9_full_pixel_search(const struct VP9_COMP *const cpi,\n                          const MACROBLOCK *const x, BLOCK_SIZE bsize,\n                          MV *mvp_full, int step_param, int search_method,\n                          int error_per_bit, int *cost_list, const MV *ref_mv,\n                          MV *tmp_mv, int var_max, int rd)"
  },
  {
    "label": "vp9_set_subpel_mv_search_range()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vp9_set_subpel_mv_search_range(MvLimits *subpel_mv_limits,\n                                    const MvLimits *umv_window_limits,\n                                    const MV *ref_mv)"
  },
  {
    "label": "vp9_refining_search_sad_new()",
    "kind": "Method",
    "detail": "Function (int64_t)",
    "insertText": "vp9_refining_search_sad_new(const MACROBLOCK *x, MV *best_full_mv,\n                                    int lambda, int search_range,\n                                    const vp9_variance_fn_ptr_t *fn_ptr,\n                                    const int_mv *nb_full_mvs, int full_mv_num)"
  },
  {
    "label": "vp9_full_pixel_diamond_new()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "vp9_full_pixel_diamond_new(const struct VP9_COMP *cpi, MACROBLOCK *x,\n                               BLOCK_SIZE bsize, MV *mvp_full, int step_param,\n                               int lambda, int do_refine,\n                               const int_mv *nb_full_mvs, int full_mv_num,\n                               MV *best_mv)"
  },
  {
    "label": "vp9_prepare_nb_full_mvs()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "vp9_prepare_nb_full_mvs(const struct MotionField *motion_field, int mi_row,\n                            int mi_col, int_mv *nb_full_mvs)"
  }
]