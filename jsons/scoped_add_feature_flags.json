[
  {
    "label": "CommandLine",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CommandLine"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "BASE_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BASE_EXPORT"
  },
  {
    "label": "ScopedAddFeatureFlags()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "ScopedAddFeatureFlags(CommandLine* command_line)"
  },
  {
    "label": "EnableIfNotSet()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnableIfNotSet(const Feature& feature)"
  },
  {
    "label": "DisableIfNotSet()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DisableIfNotSet(const Feature& feature)"
  },
  {
    "label": "EnableIfNotSetWithParameter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnableIfNotSetWithParameter(const Feature& feature,\n                                   StringPiece name,\n                                   StringPiece value)"
  },
  {
    "label": "IsEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsEnabled(const Feature& feature)"
  },
  {
    "label": "IsEnabledWithParameter()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsEnabledWithParameter(const Feature& feature,\n                              StringPiece parameter_name,\n                              StringPiece parameter_value)"
  },
  {
    "label": "AddFeatureIfNotSet()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddFeatureIfNotSet(const Feature& feature,\n                          StringPiece suffix,\n                          bool enable)"
  }
]