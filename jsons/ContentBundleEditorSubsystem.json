[
  {
    "label": "FContentBundleEditor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FContentBundleEditor"
  },
  {
    "label": "UContentBundleDescriptor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UContentBundleDescriptor"
  },
  {
    "label": "UContentBundleEditorSubsystem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UContentBundleEditorSubsystem"
  },
  {
    "label": "UContentBundleEditorSubsystemModule",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UContentBundleEditorSubsystemModule"
  },
  {
    "label": "UContentBundleEditingSubmodule",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UContentBundleEditingSubmodule"
  },
  {
    "label": "WORLDPARTITIONEDITOR_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "WORLDPARTITIONEDITOR_API"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / Object . h \" # include \" EditorSubsystem . h \" # include \" WorldPartition / ContentBundle / ContentBundleEditorSubsystemInterface . h \" # include \" IActorEditorContextClient . h \" # include \" ContentBundleEditorSubsystem . generated . h \" class FContentBundleEditor ; class UContentBundleDescriptor ; class UContentBundleEditorSubsystem ;)",
    "insertText": "UCLASS(Within = ContentBundleEditorSubsystem)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: virtual void BeginDestroy()"
  },
  {
    "label": "BeginDestroy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginDestroy()"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Initialize()"
  },
  {
    "label": "Deinitialize()",
    "kind": "Method",
    "detail": "Function (bIsInitialized = true ; } void)",
    "insertText": "Deinitialize()"
  },
  {
    "label": "DoDenitialize()",
    "kind": "Method",
    "detail": "Function (bIsInitialized = false ;)",
    "insertText": "DoDenitialize()"
  },
  {
    "label": "IsInitialize()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsInitialize()"
  },
  {
    "label": "DoInitialize()",
    "kind": "Method",
    "detail": "Function (} protected : void)",
    "insertText": "DoInitialize()"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (} ; private : bool bIsInitialized = false ; } ;)",
    "insertText": "UCLASS()"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY()"
  },
  {
    "label": "OnExecuteActorEditorContextAction()",
    "kind": "Method",
    "detail": "Function (public : void)",
    "insertText": "OnExecuteActorEditorContextAction(UWorld* InWorld, const EActorEditorContextAction& InType, AActor* InActor = nullptr)"
  },
  {
    "label": "GetActorEditorContextDisplayInfo()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetActorEditorContextDisplayInfo(UWorld* InWorld, FActorEditorContextClientDisplayInfo& OutDiplayInfo)"
  },
  {
    "label": "CanResetContext()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanResetContext(UWorld* InWorld)"
  },
  {
    "label": "GetOnActorEditorContextClientChanged()",
    "kind": "Method",
    "detail": "Function (FOnActorEditorContextClientChanged&)",
    "insertText": "GetOnActorEditorContextClientChanged()"
  },
  {
    "label": "DeactivateContentBundleEditing()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DeactivateContentBundleEditing(TSharedPtr<FContentBundleEditor>& ContentBundleEditor)"
  },
  {
    "label": "DeactivateCurrentContentBundleEditing()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DeactivateCurrentContentBundleEditing()"
  },
  {
    "label": "IsEditingContentBundle()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsEditingContentBundle()"
  },
  {
    "label": "IsEditingContentBundle()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsEditingContentBundle(const TSharedPtr<FContentBundleEditor>& ContentBundleEditor)"
  },
  {
    "label": "IsEditingContentBundle()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsEditingContentBundle(const FGuid& ContentBundleGuid)"
  },
  {
    "label": "GetEditorContentBundle()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FContentBundleEditor>)",
    "insertText": "GetEditorContentBundle(const FGuid& ContentBundleGuid)"
  },
  {
    "label": "PushContentBundleEditing()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "PushContentBundleEditing(bool bDuplicateContext)"
  },
  {
    "label": "PopContentBundleEditing()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PopContentBundleEditing()"
  },
  {
    "label": "StartEditing()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StartEditing(TSharedPtr<FContentBundleEditor>& ContentBundleEditor)"
  },
  {
    "label": "StopEditing()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StopEditing(TSharedPtr<FContentBundleEditor>& ContentBundleEditor)"
  },
  {
    "label": "ApplyContext()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyContext(AActor* InActor)"
  },
  {
    "label": "PreEditUndo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PreEditUndo()"
  },
  {
    "label": "PostEditUndo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostEditUndo()"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: static UContentBundleEditorSubsystem* Get()"
  },
  {
    "label": "UContentBundleEditorSubsystem()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "UContentBundleEditorSubsystem()"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Initialize(FSubsystemCollectionBase& Collection)"
  },
  {
    "label": "NotifyContentBundleAdded()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyContentBundleAdded(const FContentBundleEditor* ContentBundle)"
  },
  {
    "label": "OnContentBundleAdded()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnContentBundleAdded().Broadcast(ContentBundle)"
  },
  {
    "label": "NotifyContentBundleRemoved()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "NotifyContentBundleRemoved(const FContentBundleEditor* ContentBundle)"
  },
  {
    "label": "OnContentBundleRemoved()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnContentBundleRemoved().Broadcast(ContentBundle)"
  },
  {
    "label": "NotifyContentBundleInjectedContent()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "NotifyContentBundleInjectedContent(const FContentBundleEditor* ContentBundle)"
  },
  {
    "label": "NotifyContentBundleRemovedContent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyContentBundleRemovedContent(const FContentBundleEditor* ContentBundle)"
  },
  {
    "label": "NotifyContentBundleChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyContentBundleChanged(const FContentBundleEditor* ContentBundle)"
  },
  {
    "label": "OnContentBundleChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnContentBundleChanged().Broadcast(ContentBundle)"
  },
  {
    "label": "GetWorld()",
    "kind": "Method",
    "detail": "Function (} UWorld*)",
    "insertText": "GetWorld()"
  },
  {
    "label": "GetEditingSubmodule()",
    "kind": "Method",
    "detail": "Function (UContentBundleEditingSubmodule*)",
    "insertText": "GetEditingSubmodule()"
  },
  {
    "label": "GetEditorContentBundles()",
    "kind": "Method",
    "detail": "Function (TArray<TSharedPtr<FContentBundleEditor>>)",
    "insertText": "GetEditorContentBundles()"
  },
  {
    "label": "GetEditorContentBundle()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FContentBundleEditor>)",
    "insertText": "GetEditorContentBundle(const UContentBundleDescriptor* ContentBundleDescriptor)"
  },
  {
    "label": "SelectActors()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SelectActors(FContentBundleEditor& EditorContentBundle)"
  },
  {
    "label": "DeselectActors()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeselectActors(FContentBundleEditor& EditorContentBundle)"
  },
  {
    "label": "ReferenceAllActors()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReferenceAllActors(FContentBundleEditor& EditorContentBundle)"
  },
  {
    "label": "UnreferenceAllActors()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnreferenceAllActors(FContentBundleEditor& EditorContentBundle)"
  },
  {
    "label": "ActivateContentBundleEditing()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ActivateContentBundleEditing(TSharedPtr<FContentBundleEditor>& ContentBundleEditor)"
  },
  {
    "label": "IsContentBundleEditingActivated()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsContentBundleEditingActivated(TSharedPtr<FContentBundleEditor>& ContentBundleEditor)"
  },
  {
    "label": "SelectActorsInternal()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "SelectActorsInternal(FContentBundleEditor& EditorContentBundle, bool bSelect)"
  }
]