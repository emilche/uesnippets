[
  {
    "label": "DtmfQueue",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DtmfQueue"
  },
  {
    "label": "Event",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Event"
  },
  {
    "label": "DtmfQueue()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_RTP_RTCP_SOURCE_DTMF_QUEUE_H_ # define MODULES_RTP_RTCP_SOURCE_DTMF_QUEUE_H_ # include<stdint . h> # include<list> # include \" rtc_base / synchronization / mutex . h \" namespace webrtc { class DtmfQueue { public : struct Event { uint16_t duration_ms = 0 ; uint8_t payload_type = 0 ; uint8_t key = 0 ; uint8_t level = 0 ; } ;)",
    "insertText": "DtmfQueue()"
  },
  {
    "label": "AddDtmf()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AddDtmf(const Event& event)"
  },
  {
    "label": "NextDtmf()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "NextDtmf(Event* event)"
  },
  {
    "label": "PendingDtmf()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PendingDtmf()"
  }
]