[
  {
    "label": "FResourceSizeEx",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FResourceSizeEx"
  },
  {
    "label": "UTextureRenderTarget2D",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UTextureRenderTarget2D"
  },
  {
    "label": "UTextureRenderTarget2DArray",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UTextureRenderTarget2DArray"
  },
  {
    "label": "LANDSCAPE_EDIT_LAYERS_BATCHED_MERGE_EXPERIMENTAL",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "LANDSCAPE_EDIT_LAYERS_BATCHED_MERGE_EXPERIMENTAL"
  },
  {
    "label": "ULandscapeScratchRenderTarget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULandscapeScratchRenderTarget"
  },
  {
    "label": "ULandscapeEditResourcesSubsystem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULandscapeEditResourcesSubsystem"
  },
  {
    "label": "FTransitionBatcherScope",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTransitionBatcherScope"
  },
  {
    "label": "FTransitionInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTransitionInfo"
  },
  {
    "label": "FCopyFromParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCopyFromParams"
  },
  {
    "label": "FCopyFromTextureParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCopyFromTextureParams"
  },
  {
    "label": "FCopyFromScratchRenderTargetParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCopyFromScratchRenderTargetParams"
  },
  {
    "label": "FScratchRenderTargetParams()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Subsystems / EngineSubsystem . h \" # include \" Engine / TextureRenderTarget2D . h \" # include \" LandscapeEditTypes . h \" # include \" RHIAccess . h \" # include \" RHITransition . h \" # include \" LandscapeEditResourcesSubsystem . generated . h \" struct FResourceSizeEx ; class UTextureRenderTarget2D ; class UTextureRenderTarget2DArray ; namespace UE::Landscape { struct LANDSCAPE_EDIT_LAYERS_BATCHED_MERGE_EXPERIMENTAL FScratchRenderTargetParams {)",
    "insertText": "FScratchRenderTargetParams()"
  },
  {
    "label": "FScratchRenderTargetParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FScratchRenderTargetParams(const FString& InDebugName, bool bInExactDimensions, bool bInUseUAV, bool bInTargetArraySlicesIndependently, const FIntPoint& InResolution, int32 InNumSlices, ETextureRenderTargetFormat InFormat, const FLinearColor& InClearColor, ERHIAccess InInitialState) : DebugName(InDebugName) , bExactDimensions(bInExactDimensions) , bUseUAV(bInUseUAV) , bTargetArraySlicesIndependently(bInTargetArraySlicesIndependently) , Resolution(InResolution) , NumSlices(InNumSlices) , Format(InFormat) , ClearColor(InClearColor) , InitialState(InInitialState)"
  },
  {
    "label": "FIntPoint()",
    "kind": "Method",
    "detail": "Function (} FString DebugName ; bool bExactDimensions = false ; bool bUseUAV = false ; bool bTargetArraySlicesIndependently = false ; FIntPoint Resolution =)",
    "insertText": "FIntPoint(ForceInit)"
  },
  {
    "label": "FLinearColor()",
    "kind": "Method",
    "detail": "Function (int32 NumSlices = 0 ; ETextureRenderTargetFormat Format = ETextureRenderTargetFormat::RTF_RGBA8 ; FLinearColor ClearColor =)",
    "insertText": "FLinearColor(ForceInitToZero)"
  },
  {
    "label": "FScratchRenderTargetScope()",
    "kind": "Method",
    "detail": "Function (ERHIAccess InitialState = ERHIAccess::None ; } ; struct LANDSCAPE_EDIT_LAYERS_BATCHED_MERGE_EXPERIMENTAL FScratchRenderTargetScope : public FNoncopyable {)",
    "insertText": "FScratchRenderTargetScope()"
  },
  {
    "label": "FScratchRenderTargetScope()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FScratchRenderTargetScope(const FScratchRenderTargetParams& InParams)"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (ULandscapeEditResourcesSubsystem* EditResourcesSubsystem = nullptr ; ULandscapeScratchRenderTarget* RenderTarget = nullptr ; } ; })",
    "insertText": "UCLASS(Transient)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY()"
  },
  {
    "label": "ULandscapeScratchRenderTarget()",
    "kind": "Method",
    "detail": "Function (class FTransitionBatcherScope ; public :)",
    "insertText": "ULandscapeScratchRenderTarget()"
  },
  {
    "label": "GetDebugName()",
    "kind": "Method",
    "detail": "Function (LANDSCAPE_EDIT_LAYERS_BATCHED_MERGE_EXPERIMENTAL const FString&)",
    "insertText": "GetDebugName()"
  },
  {
    "label": "GetRenderTarget()",
    "kind": "Method",
    "detail": "Function (UTextureRenderTarget*)",
    "insertText": "GetRenderTarget()"
  },
  {
    "label": "TryGetRenderTarget2D()",
    "kind": "Method",
    "detail": "Function (LANDSCAPE_EDIT_LAYERS_BATCHED_MERGE_EXPERIMENTAL UTextureRenderTarget2D*)",
    "insertText": "TryGetRenderTarget2D()"
  },
  {
    "label": "GetRenderTarget2DArray()",
    "kind": "Method",
    "detail": "Function (LANDSCAPE_EDIT_LAYERS_BATCHED_MERGE_EXPERIMENTAL UTextureRenderTarget2DArray*)",
    "insertText": "GetRenderTarget2DArray()"
  },
  {
    "label": "TryGetRenderTarget2DArray()",
    "kind": "Method",
    "detail": "Function (LANDSCAPE_EDIT_LAYERS_BATCHED_MERGE_EXPERIMENTAL UTextureRenderTarget2DArray*)",
    "insertText": "TryGetRenderTarget2DArray()"
  },
  {
    "label": "GetResolution()",
    "kind": "Method",
    "detail": "Function (LANDSCAPE_EDIT_LAYERS_BATCHED_MERGE_EXPERIMENTAL FIntPoint)",
    "insertText": "GetResolution()"
  },
  {
    "label": "GetEffectiveResolution()",
    "kind": "Method",
    "detail": "Function (LANDSCAPE_EDIT_LAYERS_BATCHED_MERGE_EXPERIMENTAL FIntPoint)",
    "insertText": "GetEffectiveResolution()"
  },
  {
    "label": "GetNumSlices()",
    "kind": "Method",
    "detail": "Function (LANDSCAPE_EDIT_LAYERS_BATCHED_MERGE_EXPERIMENTAL int32)",
    "insertText": "GetNumSlices()"
  },
  {
    "label": "GetEffectiveNumSlices()",
    "kind": "Method",
    "detail": "Function (LANDSCAPE_EDIT_LAYERS_BATCHED_MERGE_EXPERIMENTAL int32)",
    "insertText": "GetEffectiveNumSlices()"
  },
  {
    "label": "IsTexture2DArray()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsTexture2DArray()"
  },
  {
    "label": "GetFormat()",
    "kind": "Method",
    "detail": "Function (} LANDSCAPE_EDIT_LAYERS_BATCHED_MERGE_EXPERIMENTAL ETextureRenderTargetFormat)",
    "insertText": "GetFormat()"
  },
  {
    "label": "GetClearColor()",
    "kind": "Method",
    "detail": "Function (LANDSCAPE_EDIT_LAYERS_BATCHED_MERGE_EXPERIMENTAL FLinearColor)",
    "insertText": "GetClearColor()"
  },
  {
    "label": "GetCurrentState()",
    "kind": "Method",
    "detail": "Function (ERHIAccess)",
    "insertText": "GetCurrentState()"
  },
  {
    "label": "FTransitionInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FTransitionInfo(FTextureResource* InResource, ERHIAccess InStateBefore, ERHIAccess InStateAfter) : Resource(InResource) , StateBefore(InStateBefore) , StateAfter(InStateAfter)"
  },
  {
    "label": "ToRHITransitionInfo()",
    "kind": "Method",
    "detail": "Function (} FRHITransitionInfo)",
    "insertText": "ToRHITransitionInfo()"
  },
  {
    "label": "FTransitionBatcherScope()",
    "kind": "Method",
    "detail": "Function (private : FTextureResource* Resource = nullptr ; ERHIAccess StateBefore = ERHIAccess::None ; ERHIAccess StateAfter = ERHIAccess::None ; } ; class FTransitionBatcherScope : public FNoncopyable { public :)",
    "insertText": "FTransitionBatcherScope()"
  },
  {
    "label": "TransitionTo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TransitionTo(ULandscapeScratchRenderTarget* InScratchRenderTarget, ERHIAccess InStateAfter)"
  },
  {
    "label": "FIntPoint()",
    "kind": "Method",
    "detail": "Function (private : TArray<FTransitionInfo> PendingTransitions ; } ; struct FCopyFromParams { FIntPoint CopySize =)",
    "insertText": "FIntPoint(0, 0)"
  },
  {
    "label": "FCopyFromTextureParams()",
    "kind": "Method",
    "detail": "Function (uint8 SourceMip = 0 ; uint8 DestMip = 0 ; uint32 SourceSliceIndex = 0 ; uint32 DestSliceIndex = 0 ; } ; struct FCopyFromTextureParams : public FCopyFromParams {)",
    "insertText": "FCopyFromTextureParams(UTexture* InSourceTexture) : SourceTexture(InSourceTexture)"
  },
  {
    "label": "FCopyFromScratchRenderTargetParams()",
    "kind": "Method",
    "detail": "Function (} UTexture* SourceTexture = nullptr ; } ; struct FCopyFromScratchRenderTargetParams : public FCopyFromParams {)",
    "insertText": "FCopyFromScratchRenderTargetParams(ULandscapeScratchRenderTarget* InSourceScratchRenderTarget) : SourceScratchRenderTarget(InSourceScratchRenderTarget)"
  },
  {
    "label": "CopyFrom()",
    "kind": "Method",
    "detail": "Function (} ULandscapeScratchRenderTarget* SourceScratchRenderTarget = nullptr ; } ; LANDSCAPE_EDIT_LAYERS_BATCHED_MERGE_EXPERIMENTAL void)",
    "insertText": "CopyFrom(const FCopyFromTextureParams& InCopyParams)"
  },
  {
    "label": "CopyFrom()",
    "kind": "Method",
    "detail": "Function (LANDSCAPE_EDIT_LAYERS_BATCHED_MERGE_EXPERIMENTAL void)",
    "insertText": "CopyFrom(const FCopyFromScratchRenderTargetParams& InCopyParams)"
  },
  {
    "label": "TransitionTo()",
    "kind": "Method",
    "detail": "Function (LANDSCAPE_EDIT_LAYERS_BATCHED_MERGE_EXPERIMENTAL void)",
    "insertText": "TransitionTo(ERHIAccess InStateAfter)"
  },
  {
    "label": "Clear()",
    "kind": "Method",
    "detail": "Function (LANDSCAPE_EDIT_LAYERS_BATCHED_MERGE_EXPERIMENTAL void)",
    "insertText": "Clear()"
  },
  {
    "label": "IsCompatibleWith()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsCompatibleWith(const UE::Landscape::FScratchRenderTargetParams& InParams)"
  },
  {
    "label": "IsInUse()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsInUse()"
  },
  {
    "label": "OnReleased()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnReleased()"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (ETextureRenderTargetFormat RenderTargetFormat = ETextureRenderTargetFormat::RTF_RGBA8 ; bool bTargetArraySlicesIndependently = false ; bool bUseUAV = false ; bool bIsInUse = false ; UE::Landscape::FScratchRenderTargetParams CurrentRenderTargetParams ; ERHIAccess CurrentState = ERHIAccess::None ; } ;)",
    "insertText": "UCLASS()"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: ULandscapeEditResourcesSubsystem()"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Initialize(FSubsystemCollectionBase& Collection)"
  },
  {
    "label": "Deinitialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Deinitialize()"
  },
  {
    "label": "RequestScratchRenderTarget()",
    "kind": "Method",
    "detail": "Function (ULandscapeScratchRenderTarget*)",
    "insertText": "RequestScratchRenderTarget(const UE::Landscape::FScratchRenderTargetParams& InParams)"
  },
  {
    "label": "ReleaseScratchRenderTarget()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseScratchRenderTarget(ULandscapeScratchRenderTarget* InScratchRenderTarget)"
  }
]