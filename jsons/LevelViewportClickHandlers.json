[
  {
    "label": "AActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AActor"
  },
  {
    "label": "ABrush",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ABrush"
  },
  {
    "label": "FLevelEditorViewportClient",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLevelEditorViewportClient"
  },
  {
    "label": "UModel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UModel"
  },
  {
    "label": "USceneComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USceneComponent"
  },
  {
    "label": "FTypedElementHandle",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTypedElementHandle"
  },
  {
    "label": "FViewportClick",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FViewportClick"
  },
  {
    "label": "HActor",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "HActor"
  },
  {
    "label": "HGeomEdgeProxy",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "HGeomEdgeProxy"
  },
  {
    "label": "HGeomPolyProxy",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "HGeomPolyProxy"
  },
  {
    "label": "HGeomVertexProxy",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "HGeomVertexProxy"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "HLevelSocketProxy",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "HLevelSocketProxy"
  },
  {
    "label": "ClickViewport()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ClickViewport(FLevelEditorViewportClient* ViewportClient, const FViewportClick& Click)"
  },
  {
    "label": "ClickElement()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ClickElement(FLevelEditorViewportClient* ViewportClient, const FTypedElementHandle& HitElement, const FViewportClick& Click)"
  },
  {
    "label": "ClickActor()",
    "kind": "Method",
    "detail": "Function (UNREALED_API)",
    "insertText": "ClickActor(FLevelEditorViewportClient* ViewportClient,AActor* Actor,const FViewportClick& Click,bool bAllowSelectionChange)"
  },
  {
    "label": "ClickComponent()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ClickComponent(FLevelEditorViewportClient* ViewportClient, HActor* ActorHitProxy, const FViewportClick& Click)"
  },
  {
    "label": "ClickBrushVertex()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClickBrushVertex(FLevelEditorViewportClient* ViewportClient,ABrush* InBrush,FVector* InVertex,const FViewportClick& Click)"
  },
  {
    "label": "ClickStaticMeshVertex()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClickStaticMeshVertex(FLevelEditorViewportClient* ViewportClient,AActor* InActor,FVector& InVertex,const FViewportClick& Click)"
  },
  {
    "label": "ClickSurface()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClickSurface(FLevelEditorViewportClient* ViewportClient, UModel* Model, int32 iSurf, const FViewportClick& Click)"
  },
  {
    "label": "ClickBackdrop()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClickBackdrop(FLevelEditorViewportClient* ViewportClient,const FViewportClick& Click)"
  },
  {
    "label": "ClickLevelSocket()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClickLevelSocket(FLevelEditorViewportClient* ViewportClient, HHitProxy* HitProxy, const FViewportClick& Click)"
  }
]