[
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FPropertyReflectionData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPropertyReflectionData"
  },
  {
    "label": "UNDOHISTORY_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UNDOHISTORY_API"
  },
  {
    "label": "HasClassDisplayName()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / UnrealType . h \" namespace UE::UndoHistory { enum class EPropertyType : uint8 { ObjectProperty,StructProperty,EnumProperty,ArrayProperty,Other } ; struct FPropertyReflectionData { FString CppMacroType ; FString ; EPropertyFlags PropertyFlags ; EPropertyType PropertyType ; } ; class IReflectionDataProvider { public : bool)",
    "insertText": "HasClassDisplayName(const FSoftClassPath& ClassPath)"
  },
  {
    "label": "GetClassDisplayName()",
    "kind": "Method",
    "detail": "Function (TOptional<FString>)",
    "insertText": "GetClassDisplayName(const FSoftClassPath& ClassPath)"
  },
  {
    "label": "SupportsGetPropertyReflectionData()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SupportsGetPropertyReflectionData()"
  },
  {
    "label": "GetPropertyReflectionData()",
    "kind": "Method",
    "detail": "Function (TOptional<FPropertyReflectionData>)",
    "insertText": "GetPropertyReflectionData(const FSoftClassPath& ClassPath, FName PropertyName)"
  },
  {
    "label": "IReflectionDataProvider()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "IReflectionDataProvider()"
  },
  {
    "label": "CreateDefaultReflectionProvider()",
    "kind": "Method",
    "detail": "Function (} ; TSharedRef<IReflectionDataProvider>)",
    "insertText": "CreateDefaultReflectionProvider()"
  }
]