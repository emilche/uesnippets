[
  {
    "label": "FMediaAudioResampler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMediaAudioResampler"
  },
  {
    "label": "FMediaPlayerFacade",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMediaPlayerFacade"
  },
  {
    "label": "FMediaSoundComponentClockSink",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMediaSoundComponentClockSink"
  },
  {
    "label": "IMediaAudioSample",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IMediaAudioSample"
  },
  {
    "label": "IMediaPlayer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IMediaPlayer"
  },
  {
    "label": "UMediaPlayer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMediaPlayer"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FMediaSoundComponentSpectralData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMediaSoundComponentSpectralData"
  },
  {
    "label": "FMediaSoundGenerator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMediaSoundGenerator"
  },
  {
    "label": "FSoundGeneratorParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSoundGeneratorParams"
  },
  {
    "label": "UMediaSoundComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMediaSoundComponent"
  },
  {
    "label": "ELevelTick",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ELevelTick"
  },
  {
    "label": "SetCachedData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCachedData(float InCachedRate, const FTimespan& InCachedTime)"
  },
  {
    "label": "SetLastPlaySampleTime()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetLastPlaySampleTime(const FTimespan& InLastPlaySampleTime)"
  },
  {
    "label": "SetEnableSpectralAnalysis()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetEnableSpectralAnalysis(bool bInSpectralAnlaysisEnabled)"
  },
  {
    "label": "SetEnableEnvelopeFollowing()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetEnableEnvelopeFollowing(bool bInEnvelopeFollowingEnabled)"
  },
  {
    "label": "SetSpectrumAnalyzerSettings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSpectrumAnalyzerSettings(Audio::FSpectrumAnalyzerSettings::EFFTSize InFFTSize, const TArray<float>& InFrequenciesToAnalyze)"
  },
  {
    "label": "SetEnvelopeFollowingSettings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetEnvelopeFollowingSettings(int32 InAttackTimeMsec, int32 InReleaseTimeMsec)"
  },
  {
    "label": "SetSampleQueue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSampleQueue(TSharedPtr<FMediaAudioSampleQueue, ESPMode::ThreadSafe>& InSampleQueue)"
  },
  {
    "label": "UMediaSoundComponent()",
    "kind": "Method",
    "detail": "Function (MEDIAASSETS_API)",
    "insertText": "UMediaSoundComponent(const FObjectInitializer& ObjectInitializer)"
  },
  {
    "label": "BP_GetAttenuationSettingsToApply()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "BP_GetAttenuationSettingsToApply(FSoundAttenuationSettings& OutAttenuationSettings)"
  },
  {
    "label": "SetMediaPlayer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetMediaPlayer(UMediaPlayer* NewMediaPlayer)"
  },
  {
    "label": "SetEnableSpectralAnalysis()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetEnableSpectralAnalysis(bool bInSpectralAnalysisEnabled)"
  },
  {
    "label": "SetSpectralAnalysisSettings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSpectralAnalysisSettings(TArray<float> InFrequenciesToAnalyze, EMediaSoundComponentFFTSize InFFTSize = EMediaSoundComponentFFTSize::Medium_512)"
  },
  {
    "label": "GetSpectralData()",
    "kind": "Method",
    "detail": "Function (TArray<FMediaSoundComponentSpectralData>)",
    "insertText": "GetSpectralData()"
  },
  {
    "label": "GetNormalizedSpectralData()",
    "kind": "Method",
    "detail": "Function (TArray<FMediaSoundComponentSpectralData>)",
    "insertText": "GetNormalizedSpectralData()"
  },
  {
    "label": "SetEnableEnvelopeFollowing()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetEnableEnvelopeFollowing(bool bInEnvelopeFollowing)"
  },
  {
    "label": "SetEnvelopeFollowingsettings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetEnvelopeFollowingsettings(int32 AttackTimeMsec, int32 ReleaseTimeMsec)"
  },
  {
    "label": "AddClockSink()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddClockSink()"
  },
  {
    "label": "RemoveClockSink()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveClockSink()"
  },
  {
    "label": "UpdatePlayer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdatePlayer()"
  },
  {
    "label": "SetDefaultMediaPlayer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDefaultMediaPlayer(UMediaPlayer* NewMediaPlayer)"
  }
]