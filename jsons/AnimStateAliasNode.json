[
  {
    "label": "FArchive",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FArchive"
  },
  {
    "label": "UAnimStateNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimStateNode"
  },
  {
    "label": "UEdGraph",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEdGraph"
  },
  {
    "label": "UEdGraphPin",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEdGraphPin"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "UAnimStateAliasNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimStateAliasNode"
  },
  {
    "label": "FCompilerResultsLog",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCompilerResultsLog"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" AnimStateNodeBase . h \" # include \" Animation / AnimTypes . h \" # include \" Containers / Set . h \" # include \" Containers / UnrealString . h \" # include \" CoreMinimal . h \" # include \" EdGraph / EdGraphNode . h \" # include \" Internationalization / Text . h \" # include \" Misc / AssertionMacros . h \" # include \" UObject / NameTypes . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / UObjectGlobals . h \" # include \" UObject / WeakObjectPtrTemplates . h \" # include \" AnimStateAliasNode . generated . h \" class FArchive ; class UAnimStateNode ; class UEdGraph ; class UEdGraphPin ; class UObject ;)",
    "insertText": "UCLASS(MinimalAPI)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() public: UPROPERTY(EditAnywhere, BlueprintReadWrite, Category = \"State Alias\")"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Serialize(FArchive& Ar)"
  },
  {
    "label": "AllocateDefaultPins()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AllocateDefaultPins()"
  },
  {
    "label": "AutowireNewNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AutowireNewNode(UEdGraphPin* FromPin)"
  },
  {
    "label": "GetNodeTitle()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetNodeTitle(ENodeTitleType::Type TitleType)"
  },
  {
    "label": "GetTooltipText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetTooltipText()"
  },
  {
    "label": "CanDuplicateNode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanDuplicateNode()"
  },
  {
    "label": "PostPasteNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostPasteNode()"
  },
  {
    "label": "PostPlacedNewNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostPlacedNewNode()"
  },
  {
    "label": "ValidateNodeDuringCompilation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ValidateNodeDuringCompilation(class FCompilerResultsLog& MessageLog)"
  },
  {
    "label": "GetInputPin()",
    "kind": "Method",
    "detail": "Function (UEdGraphPin*)",
    "insertText": "GetInputPin()"
  },
  {
    "label": "GetOutputPin()",
    "kind": "Method",
    "detail": "Function (UEdGraphPin*)",
    "insertText": "GetOutputPin()"
  },
  {
    "label": "GetStateName()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetStateName()"
  },
  {
    "label": "GetDesiredNewNodeName()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetDesiredNewNodeName()"
  },
  {
    "label": "GetJumpTargetForDoubleClick()",
    "kind": "Method",
    "detail": "Function (UObject*)",
    "insertText": "GetJumpTargetForDoubleClick()"
  },
  {
    "label": "GetAliasedStates()",
    "kind": "Method",
    "detail": "Function (const TSet<TWeakObjectPtr<UAnimStateNodeBase>>&)",
    "insertText": "GetAliasedStates()"
  },
  {
    "label": "GetAliasedState()",
    "kind": "Method",
    "detail": "Function (UAnimStateNodeBase*)",
    "insertText": "GetAliasedState()"
  },
  {
    "label": "GetAliasedStateNodesPropertyName()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetAliasedStateNodesPropertyName()"
  },
  {
    "label": "RebuildAliasedStateNodeReferences()",
    "kind": "Method",
    "detail": "Function (} private : void)",
    "insertText": "RebuildAliasedStateNodeReferences()"
  }
]