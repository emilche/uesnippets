[
  {
    "label": "FSourcesData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSourcesData"
  },
  {
    "label": "FContentBrowserItemData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FContentBrowserItemData"
  },
  {
    "label": "DECLARE_DELEGATE_RetVal_OneParam()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" CollectionManagerTypes . h \" # include \" ICollectionManager . h \" # include \" CollectionManagerModule . h \" struct FSourcesData {)",
    "insertText": "DECLARE_DELEGATE_RetVal_OneParam(bool, FOnEnumerateCustomSourceItemDatas, TFunctionRef<bool(class FContentBrowserItemData&&)>)"
  },
  {
    "label": "FSourcesData()",
    "kind": "Method",
    "detail": "Function (TArray<FCollectionNameType> Collections ; FOnEnumerateCustomSourceItemDatas OnEnumerateCustomSourceItemDatas ; bool bIncludeVirtualPaths = true ;)",
    "insertText": "FSourcesData()"
  },
  {
    "label": "FSourcesData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FSourcesData(FName InVirtualPath)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (VirtualPaths .)",
    "insertText": "Add(InVirtualPath)"
  },
  {
    "label": "FSourcesData()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FSourcesData(FCollectionNameType InCollection)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (Collections .)",
    "insertText": "Add(InCollection)"
  },
  {
    "label": "FSourcesData()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FSourcesData(TArray<FName> InVirtualPaths, TArray<FCollectionNameType> InCollections) : VirtualPaths(MoveTemp(InVirtualPaths)) , Collections(MoveTemp(InCollections))"
  },
  {
    "label": "FSourcesData()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FSourcesData(const FSourcesData& Other)"
  },
  {
    "label": "FSourcesData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FSourcesData(FSourcesData&& Other)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FSourcesData&)",
    "insertText": "operator(const FSourcesData& Other)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FSourcesData&)",
    "insertText": "operator(FSourcesData&& Other)"
  },
  {
    "label": "HasVirtualPaths()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "HasVirtualPaths()"
  },
  {
    "label": "HasCollections()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "HasCollections()"
  },
  {
    "label": "IsIncludingVirtualPaths()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsIncludingVirtualPaths()"
  },
  {
    "label": "GetModule()",
    "kind": "Method",
    "detail": "Function (FCollectionManagerModule& CollectionManagerModule =)",
    "insertText": "GetModule()"
  },
  {
    "label": "return()",
    "kind": "Method",
    "detail": "Function (ECollectionStorageMode::Type StorageMode = ECollectionStorageMode::;)",
    "insertText": "return(CollectionManagerModule.Get().GetCollectionStorageMode(Collections[0].Name, Collections[0].Type, StorageMode) && StorageMode == ECollectionStorageMode::Dynamic)"
  }
]