[
  {
    "label": "srtp_key_limit_ctx_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "srtp_key_limit_ctx_t"
  },
  {
    "label": "srtp_key_limit_set()",
    "kind": "Method",
    "detail": "Function (# ifndef KEY_H # define KEY_H # include \" rdbx . h \" # include \" err . h \" # ifdef __cplusplus \" C \" { # endif typedef struct srtp_key_limit_ctx_t* srtp_key_limit_t ; typedef enum { srtp_key_event_normal,srtp_key_event_soft_limit,srtp_key_event_hard_limit } srtp_key_event_t ; srtp_err_status_t)",
    "insertText": "srtp_key_limit_set(srtp_key_limit_t key, const srtp_xtd_seq_num_t s)"
  },
  {
    "label": "srtp_key_limit_clone()",
    "kind": "Method",
    "detail": "Function (srtp_err_status_t)",
    "insertText": "srtp_key_limit_clone(srtp_key_limit_t original, srtp_key_limit_t *new_key)"
  },
  {
    "label": "srtp_key_limit_check()",
    "kind": "Method",
    "detail": "Function (srtp_err_status_t)",
    "insertText": "srtp_key_limit_check(const srtp_key_limit_t key)"
  },
  {
    "label": "srtp_key_limit_update()",
    "kind": "Method",
    "detail": "Function (srtp_key_event_t)",
    "insertText": "srtp_key_limit_update(srtp_key_limit_t key)"
  }
]