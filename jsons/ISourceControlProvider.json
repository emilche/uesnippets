[
  {
    "label": "FName",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FName"
  },
  {
    "label": "UPackage",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPackage"
  },
  {
    "label": "TFunctionRef",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TFunctionRef"
  },
  {
    "label": "FSourceControlInitSettings",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSourceControlInitSettings"
  },
  {
    "label": "ISourceControlLabel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISourceControlLabel"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "ISourceControlProvider",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISourceControlProvider"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FInitResult",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInitResult"
  },
  {
    "label": "FConnectionErrors",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FConnectionErrors"
  },
  {
    "label": "FDownloadFile",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDownloadFile"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "FSourceControlModule",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSourceControlModule"
  },
  {
    "label": "DECLARE_DELEGATE_TwoParams()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" Containers / StringFwd . h \" # include \" Containers / UnrealString . h \" # include \" CoreMinimal . h \" # include \" Delegates / Delegate . h \" # include \" Features / IModularFeature . h \" # include \" HAL / Platform . h \" # include \" ISourceControlChangelist . h \" # include \" ISourceControlChangelistState . h \" # include \" ISourceControlOperation . h \" # include \" ISourceControlState . h \" # include \" Internationalization / Text . h \" # include \" Templates / SharedPointer . h \" # include \" Templates / UniquePtr . h \" class FName ; class UPackage ; template<FuncType> class TFunctionRef ; # ifndef SOURCE_CONTROL_WITH_SLATE # error \" SOURCE_CONTROL_WITH_SLATE must be defined . Did you forget a dependency on the ' SourceControl ' module ? \" # endif class FSourceControlInitSettings ; class ISourceControlLabel ; namespace EConcurrency { enum Type { Synchronous,Asynchronous } ; } namespace EStateCacheUsage { enum Type { ForceUpdate,Use,} ; } namespace ECommandResult { enum Type { Failed,Succeeded,Cancelled,} ; })",
    "insertText": "DECLARE_DELEGATE_TwoParams(FSourceControlOperationComplete, const FSourceControlOperationRef&, ECommandResult::Type)"
  },
  {
    "label": "DECLARE_DELEGATE_RetVal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DELEGATE_RetVal(FSourceControlOperationRef, FGetSourceControlOperation)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_MULTICAST_DELEGATE(FSourceControlStateChanged)"
  },
  {
    "label": "FConnectionErrors()",
    "kind": "Method",
    "detail": "Function (class ISourceControlProvider : public IModularFeature { public : enum class EStatus { Enabled,Connected,Port,User,Client,Repository,Remote,Branch,Email,ScmVersion,PluginVersion,Workspace,WorkspacePath,Changeset } ; enum class EInitFlags : uint32 { None = 0,AttemptConnection = 1<<0,SupressErrorLogging = 1<<1 } ; struct FInitResult { bool bIsAvailable = false ; TMap<EStatus,FString> ConnectionSettings ; struct FConnectionErrors { FText ErrorMessage ; TArray<FText> AdditionalErrors ;)",
    "insertText": "FConnectionErrors()"
  },
  {
    "label": "FConnectionErrors()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FConnectionErrors(const FText& InErrorMessage, const TArray<FText>& InAdditionalErrors) : ErrorMessage(InErrorMessage), AdditionalErrors(InAdditionalErrors)"
  },
  {
    "label": "ISourceControlProvider()",
    "kind": "Method",
    "detail": "Function (} Errors ; } ; public : ~)",
    "insertText": "ISourceControlProvider()"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Init(bool bForceConnection = true)"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (FInitResult)",
    "insertText": "Init(EInitFlags Flags)"
  },
  {
    "label": "Close()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Close()"
  },
  {
    "label": "GetName()",
    "kind": "Method",
    "detail": "Function (const FName&)",
    "insertText": "GetName()"
  },
  {
    "label": "GetStatusText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetStatusText()"
  },
  {
    "label": "GetStatus()",
    "kind": "Method",
    "detail": "Function (TMap<EStatus,FString>)",
    "insertText": "GetStatus()"
  },
  {
    "label": "IsEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsEnabled()"
  },
  {
    "label": "IsAvailable()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsAvailable()"
  },
  {
    "label": "Login()",
    "kind": "Method",
    "detail": "Function (ECommandResult::Type)",
    "insertText": "Login(const FString& InPassword = FString(), EConcurrency::Type InConcurrency = EConcurrency::Synchronous, const FSourceControlOperationComplete& InOperationCompleteDelegate = FSourceControlOperationComplete())"
  },
  {
    "label": "QueryStateBranchConfig()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "QueryStateBranchConfig(const FString& ConfigSrc, const FString& ConfigDest)"
  },
  {
    "label": "RegisterStateBranches()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterStateBranches(const TArray<FString>& BranchNames, const FString& ContentRoot)"
  },
  {
    "label": "GetStateBranchIndex()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetStateBranchIndex(const FString& BranchName)"
  },
  {
    "label": "GetState()",
    "kind": "Method",
    "detail": "Function (ECommandResult::Type)",
    "insertText": "GetState(const TArray<FString>& InFiles, TArray<FSourceControlStateRef>& OutState, EStateCacheUsage::Type InStateCacheUsage)"
  },
  {
    "label": "GetState()",
    "kind": "Method",
    "detail": "Function (ECommandResult::Type)",
    "insertText": "GetState(const TArray<UPackage*>& InPackages, TArray<FSourceControlStateRef>& OutState, EStateCacheUsage::Type InStateCacheUsage)"
  },
  {
    "label": "GetState()",
    "kind": "Method",
    "detail": "Function (FSourceControlStatePtr)",
    "insertText": "GetState(const FString& InFile, EStateCacheUsage::Type InStateCacheUsage)"
  },
  {
    "label": "GetState()",
    "kind": "Method",
    "detail": "Function (FSourceControlStatePtr)",
    "insertText": "GetState(const UPackage* InPackage, EStateCacheUsage::Type InStateCacheUsage)"
  },
  {
    "label": "GetState()",
    "kind": "Method",
    "detail": "Function (ECommandResult::Type)",
    "insertText": "GetState(const TArray<FSourceControlChangelistRef>& InChangelists, TArray<FSourceControlChangelistStateRef>& OutState, EStateCacheUsage::Type InStateCacheUsage)"
  },
  {
    "label": "GetState()",
    "kind": "Method",
    "detail": "Function (FSourceControlChangelistStatePtr)",
    "insertText": "GetState(const FSourceControlChangelistRef& InChangelist, EStateCacheUsage::Type InStateCacheUsage)"
  },
  {
    "label": "GetCachedStateByPredicate()",
    "kind": "Method",
    "detail": "Function (TArray<FSourceControlStateRef>)",
    "insertText": "GetCachedStateByPredicate(TFunctionRef<bool(const FSourceControlStateRef&)> Predicate)"
  },
  {
    "label": "RegisterSourceControlStateChanged_Handle()",
    "kind": "Method",
    "detail": "Function (FDelegateHandle)",
    "insertText": "RegisterSourceControlStateChanged_Handle(const FSourceControlStateChanged::FDelegate& SourceControlStateChanged)"
  },
  {
    "label": "UnregisterSourceControlStateChanged_Handle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterSourceControlStateChanged_Handle(FDelegateHandle Handle)"
  },
  {
    "label": "Execute()",
    "kind": "Method",
    "detail": "Function (ECommandResult::Type)",
    "insertText": "Execute(const FSourceControlOperationRef& InOperation, FSourceControlChangelistPtr InChangelist, const TArray<FString>& InFiles, EConcurrency::Type InConcurrency = EConcurrency::Synchronous, const FSourceControlOperationComplete& InOperationCompleteDelegate = FSourceControlOperationComplete())"
  },
  {
    "label": "Execute()",
    "kind": "Method",
    "detail": "Function (ECommandResult::Type)",
    "insertText": "Execute(const FSourceControlOperationRef& InOperation, const TArray<FString>& InFiles, EConcurrency::Type InConcurrency = EConcurrency::Synchronous, const FSourceControlOperationComplete& InOperationCompleteDelegate = FSourceControlOperationComplete())"
  },
  {
    "label": "Execute()",
    "kind": "Method",
    "detail": "Function (ECommandResult::Type)",
    "insertText": "Execute(const FSourceControlOperationRef& InOperation, const EConcurrency::Type InConcurrency = EConcurrency::Synchronous, const FSourceControlOperationComplete& InOperationCompleteDelegate = FSourceControlOperationComplete())"
  },
  {
    "label": "Execute()",
    "kind": "Method",
    "detail": "Function (ECommandResult::Type)",
    "insertText": "Execute(const FSourceControlOperationRef& InOperation, const UPackage* InPackage, const EConcurrency::Type InConcurrency = EConcurrency::Synchronous, const FSourceControlOperationComplete& InOperationCompleteDelegate = FSourceControlOperationComplete())"
  },
  {
    "label": "Execute()",
    "kind": "Method",
    "detail": "Function (ECommandResult::Type)",
    "insertText": "Execute(const FSourceControlOperationRef& InOperation, const FString& InFile, const EConcurrency::Type InConcurrency = EConcurrency::Synchronous, const FSourceControlOperationComplete& InOperationCompleteDelegate = FSourceControlOperationComplete())"
  },
  {
    "label": "Execute()",
    "kind": "Method",
    "detail": "Function (ECommandResult::Type)",
    "insertText": "Execute(const FSourceControlOperationRef& InOperation, const TArray<UPackage*>& InPackages, const EConcurrency::Type InConcurrency = EConcurrency::Synchronous, const FSourceControlOperationComplete& InOperationCompleteDelegate = FSourceControlOperationComplete())"
  },
  {
    "label": "Execute()",
    "kind": "Method",
    "detail": "Function (ECommandResult::Type)",
    "insertText": "Execute(const FSourceControlOperationRef& InOperation, FSourceControlChangelistPtr InChangelist, const EConcurrency::Type InConcurrency = EConcurrency::Synchronous, const FSourceControlOperationComplete& InOperationCompleteDelegate = FSourceControlOperationComplete())"
  },
  {
    "label": "CanExecuteOperation()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanExecuteOperation(const FSourceControlOperationRef& InOperation)"
  },
  {
    "label": "CanCancelOperation()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanCancelOperation(const FSourceControlOperationRef& InOperation)"
  },
  {
    "label": "CancelOperation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CancelOperation(const FSourceControlOperationRef& InOperation)"
  },
  {
    "label": "GetLabel()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<class ISourceControlLabel>)",
    "insertText": "GetLabel(const FString& InLabelName)"
  },
  {
    "label": "GetLabels()",
    "kind": "Method",
    "detail": "Function (TArray<TSharedRef<class ISourceControlLabel>>)",
    "insertText": "GetLabels(const FString& InMatchingSpec)"
  },
  {
    "label": "GetChangelists()",
    "kind": "Method",
    "detail": "Function (TArray<FSourceControlChangelistRef>)",
    "insertText": "GetChangelists(EStateCacheUsage::Type InStateCacheUsage)"
  },
  {
    "label": "TryToDownloadFileFromBackgroundThread()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TryToDownloadFileFromBackgroundThread(const TSharedRef<class FDownloadFile>& InOperation, const FString& InFile)"
  },
  {
    "label": "TryToDownloadFileFromBackgroundThread()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TryToDownloadFileFromBackgroundThread(const TSharedRef<class FDownloadFile>& InOperation, const TArray<FString>& InFiles)"
  },
  {
    "label": "SwitchWorkspace()",
    "kind": "Method",
    "detail": "Function (ECommandResult::Type)",
    "insertText": "SwitchWorkspace(FStringView NewWorkspaceName, FSourceControlResultInfo& OutResultInfo, FString* OutOldWorkspaceName)"
  },
  {
    "label": "UsesLocalReadOnlyState()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UsesLocalReadOnlyState()"
  },
  {
    "label": "UsesChangelists()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UsesChangelists()"
  },
  {
    "label": "UsesUncontrolledChangelists()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UsesUncontrolledChangelists()"
  },
  {
    "label": "UsesCheckout()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UsesCheckout()"
  },
  {
    "label": "UsesFileRevisions()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UsesFileRevisions()"
  },
  {
    "label": "UsesSnapshots()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UsesSnapshots()"
  },
  {
    "label": "AllowsDiffAgainstDepot()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AllowsDiffAgainstDepot()"
  },
  {
    "label": "IsAtLatestRevision()",
    "kind": "Method",
    "detail": "Function (TOptional<bool>)",
    "insertText": "IsAtLatestRevision()"
  },
  {
    "label": "GetNumLocalChanges()",
    "kind": "Method",
    "detail": "Function (TOptional<int>)",
    "insertText": "GetNumLocalChanges()"
  },
  {
    "label": "Tick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Tick()"
  },
  {
    "label": "MakeSettingsWidget()",
    "kind": "Method",
    "detail": "Function (# if SOURCE_CONTROL_WITH_SLATE TSharedRef<class SWidget>)",
    "insertText": "MakeSettingsWidget()"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (# endif protected : class FSourceControlModule ; TUniquePtr<ISourceControlProvider>)",
    "insertText": "Create(const FStringView& OwnerName, const FSourceControlInitSettings& InitialSettings)"
  },
  {
    "label": "ENUM_CLASS_FLAGS()",
    "kind": "Method",
    "detail": "Function (} } ;)",
    "insertText": "ENUM_CLASS_FLAGS(ISourceControlProvider::EInitFlags)"
  }
]