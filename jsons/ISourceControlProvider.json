[
  {
    "label": "FName",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FName"
  },
  {
    "label": "UPackage",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPackage"
  },
  {
    "label": "TFunctionRef",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TFunctionRef"
  },
  {
    "label": "FSourceControlInitSettings",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSourceControlInitSettings"
  },
  {
    "label": "ISourceControlLabel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISourceControlLabel"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "ISourceControlProvider",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISourceControlProvider"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FInitResult",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInitResult"
  },
  {
    "label": "FConnectionErrors",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FConnectionErrors"
  },
  {
    "label": "ISourceControlLabel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISourceControlLabel"
  },
  {
    "label": "ISourceControlLabel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISourceControlLabel"
  },
  {
    "label": "FDownloadFile",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDownloadFile"
  },
  {
    "label": "FDownloadFile",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDownloadFile"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "FSourceControlModule",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSourceControlModule"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (FInitResult)",
    "insertText": "Init(EInitFlags Flags)"
  },
  {
    "label": "GetState()",
    "kind": "Method",
    "detail": "Function (ECommandResult::Type)",
    "insertText": "GetState( const TArray<UPackage*>& InPackages, TArray<FSourceControlStateRef>& OutState, EStateCacheUsage::Type InStateCacheUsage )"
  },
  {
    "label": "GetState()",
    "kind": "Method",
    "detail": "Function (FSourceControlStatePtr)",
    "insertText": "GetState( const FString& InFile, EStateCacheUsage::Type InStateCacheUsage )"
  },
  {
    "label": "GetState()",
    "kind": "Method",
    "detail": "Function (FSourceControlStatePtr)",
    "insertText": "GetState( const UPackage* InPackage, EStateCacheUsage::Type InStateCacheUsage )"
  },
  {
    "label": "GetState()",
    "kind": "Method",
    "detail": "Function (FSourceControlChangelistStatePtr)",
    "insertText": "GetState( const FSourceControlChangelistRef& InChangelist, EStateCacheUsage::Type InStateCacheUsage )"
  },
  {
    "label": "TryToDownloadFileFromBackgroundThread()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TryToDownloadFileFromBackgroundThread(const TSharedRef<class FDownloadFile>& InOperation, const FString& InFile)"
  },
  {
    "label": "TryToDownloadFileFromBackgroundThread()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TryToDownloadFileFromBackgroundThread(const TSharedRef<class FDownloadFile>& InOperation, const TArray<FString>& InFiles)"
  },
  {
    "label": "SwitchWorkspace()",
    "kind": "Method",
    "detail": "Function (ECommandResult::Type)",
    "insertText": "SwitchWorkspace(FStringView NewWorkspaceName, FSourceControlResultInfo& OutResultInfo, FString* OutOldWorkspaceName)"
  }
]