[
  {
    "label": "FArchive",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FArchive"
  },
  {
    "label": "UClass",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UClass"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "UPackage",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPackage"
  },
  {
    "label": "FTextReferenceCollector",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTextReferenceCollector"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FAutoRegisterTextReferenceCollectorCallback",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAutoRegisterTextReferenceCollectorCallback"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Map . h \" # include \" Containers / UnrealString . h \" # include \" CoreMinimal . h \" # include \" HAL / Platform . h \" # include \" Templates / Function . h \" class FArchive ; class UClass ; class UObject ; class UPackage ; class FTextReferenceCollector { public : enum class EComparisonMode : uint8 { MatchId,MatchSource,MismatchSource,} ; typedef TFunction<)",
    "insertText": "void(UObject*, FArchive&)"
  },
  {
    "label": "FTextReferenceCollector()",
    "kind": "Method",
    "detail": "Function (typedef TMap<const UClass*,FTextReferenceCollectorCallback> FTextReferenceCollectorCallbackMap ;)",
    "insertText": "FTextReferenceCollector(const UPackage* const InPackage, const EComparisonMode InComparisonMode, const FString& InTextNamespace, const FString& InTextKey, const FString& InTextSource, int32& OutCount)"
  },
  {
    "label": "GetTypeSpecificTextReferenceCollectorCallbacks()",
    "kind": "Method",
    "detail": "Function (FTextReferenceCollectorCallbackMap&)",
    "insertText": "GetTypeSpecificTextReferenceCollectorCallbacks()"
  },
  {
    "label": "FAutoRegisterTextReferenceCollectorCallback()",
    "kind": "Method",
    "detail": "Function (} ; struct FAutoRegisterTextReferenceCollectorCallback {)",
    "insertText": "FAutoRegisterTextReferenceCollectorCallback(const UClass* InClass, const FTextReferenceCollector::FTextReferenceCollectorCallback& InCallback)"
  },
  {
    "label": "GetTypeSpecificTextReferenceCollectorCallbacks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetTypeSpecificTextReferenceCollectorCallbacks().Add(InClass, InCallback)"
  }
]