[
  {
    "label": "NoiseEstimator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "NoiseEstimator"
  },
  {
    "label": "NoiseEstimator()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_AUDIO_PROCESSING_NS_NOISE_ESTIMATOR_H_ # define MODULES_AUDIO_PROCESSING_NS_NOISE_ESTIMATOR_H_ # include<array> # include \" api / array_view . h \" # include \" modules / audio_processing / ns / ns_common . h \" # include \" modules / audio_processing / ns / quantile_noise_estimator . h \" # include \" modules / audio_processing / ns / suppression_params . h \" namespace webrtc { class NoiseEstimator { public :)",
    "insertText": "NoiseEstimator(const SuppressionParams& suppression_params)"
  },
  {
    "label": "PrepareAnalysis()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PrepareAnalysis()"
  },
  {
    "label": "PreUpdate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PreUpdate(int32_t num_analyzed_frames, rtc::ArrayView<const float, kFftSizeBy2Plus1> signal_spectrum, float signal_spectral_sum)"
  },
  {
    "label": "PostUpdate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostUpdate(rtc::ArrayView<const float> speech_probability, rtc::ArrayView<const float, kFftSizeBy2Plus1> signal_spectrum)"
  },
  {
    "label": "get_noise_spectrum()",
    "kind": "Method",
    "detail": "Function (rtc::ArrayView<const float,kFftSizeBy2Plus1>)",
    "insertText": "get_noise_spectrum()"
  }
]