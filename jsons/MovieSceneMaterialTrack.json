[
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FComponentMaterialInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FComponentMaterialInfo"
  },
  {
    "label": "UMovieSceneMaterialTrack",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieSceneMaterialTrack"
  },
  {
    "label": "UMovieSceneComponentMaterialTrack",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieSceneComponentMaterialTrack"
  },
  {
    "label": "UENUM()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" Sections / MovieSceneParameterSection . h \" # include \" MovieSceneNameableTrack . h \" # include \" EntitySystem / IMovieSceneEntityProvider . h \" # include \" MaterialTypes . h \" # if WITH_EDITOR # include \" Styling / SlateColor . h \" # endif # include \" MovieSceneMaterialTrack . generated . h \")",
    "insertText": "UENUM(BlueprintType)"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (Empty,IndexedMaterial,OverlayMaterial,DecalMaterial,VolumetricCloudMaterial } ;)",
    "insertText": "USTRUCT(BlueprintType)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() UPROPERTY(EditAnywhere, BlueprintReadWrite, Category=\"Sequencer|Material\")"
  },
  {
    "label": "GetTypeHash()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetTypeHash(const FComponentMaterialInfo& In)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "operator(const FComponentMaterialInfo& A, const FComponentMaterialInfo& B)"
  },
  {
    "label": "Printf()",
    "kind": "Method",
    "detail": "Function (} else { return)",
    "insertText": "Printf(TEXT(\"Material Element %i\"), MaterialSlotIndex)"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (} break ; case EComponentMaterialType::OverlayMaterial : return)",
    "insertText": "TEXT(\"Overlay Material\")"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (break ; case EComponentMaterialType::DecalMaterial : return)",
    "insertText": "TEXT(\"Decal Material\")"
  },
  {
    "label": "FString()",
    "kind": "Method",
    "detail": "Function (break ; } return)",
    "insertText": "FString()"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (} } ;)",
    "insertText": "UCLASS(MinimalAPI)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: MOVIESCENETRACKS_API UMovieSceneMaterialTrack(const FObjectInitializer& ObjectInitializer)"
  },
  {
    "label": "SupportsType()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SupportsType(TSubclassOf<UMovieSceneSection> SectionClass)"
  },
  {
    "label": "CreateNewSection()",
    "kind": "Method",
    "detail": "Function (UMovieSceneSection*)",
    "insertText": "CreateNewSection()"
  },
  {
    "label": "RemoveAllAnimationData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveAllAnimationData()"
  },
  {
    "label": "HasSection()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasSection(const UMovieSceneSection& Section)"
  },
  {
    "label": "AddSection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddSection(UMovieSceneSection& Section)"
  },
  {
    "label": "RemoveSection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveSection(UMovieSceneSection& Section)"
  },
  {
    "label": "RemoveSectionAt()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveSectionAt(int32 SectionIndex)"
  },
  {
    "label": "IsEmpty()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsEmpty()"
  },
  {
    "label": "GetAllSections()",
    "kind": "Method",
    "detail": "Function (const TArray<UMovieSceneSection*>&)",
    "insertText": "GetAllSections()"
  },
  {
    "label": "SupportsMultipleRows()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SupportsMultipleRows()"
  },
  {
    "label": "SetSectionToKey()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSectionToKey(UMovieSceneSection* Section)"
  },
  {
    "label": "GetSectionToKey()",
    "kind": "Method",
    "detail": "Function (UMovieSceneSection*)",
    "insertText": "GetSectionToKey()"
  },
  {
    "label": "AddScalarParameterKey()",
    "kind": "Method",
    "detail": "Function (public : void)",
    "insertText": "AddScalarParameterKey(FName ParameterName, FFrameNumber Position, float Value)"
  },
  {
    "label": "AddScalarParameterKey()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddScalarParameterKey(FName ParameterName, FFrameNumber Position, int32 RowIndex, float Value)"
  },
  {
    "label": "AddScalarParameterKey()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddScalarParameterKey(const FMaterialParameterInfo& ParameterInfo, FFrameNumber Position, float Value, const FString& InLayerName, const FString& InAssetName)"
  },
  {
    "label": "AddScalarParameterKey()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddScalarParameterKey(const FMaterialParameterInfo& ParameterInfo, FFrameNumber Position, int32 RowIndex, float Value, const FString& InLayerName, const FString& InAssetName)"
  },
  {
    "label": "AddColorParameterKey()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddColorParameterKey(FName ParameterName, FFrameNumber Position, FLinearColor Value)"
  },
  {
    "label": "AddColorParameterKey()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddColorParameterKey(FName ParameterName, FFrameNumber Position, int32 RowIndex, FLinearColor Value)"
  },
  {
    "label": "AddColorParameterKey()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddColorParameterKey(const FMaterialParameterInfo& ParameterInfo, FFrameNumber Position, FLinearColor Value, const FString& InLayerName, const FString& InAssetName)"
  },
  {
    "label": "AddColorParameterKey()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddColorParameterKey(const FMaterialParameterInfo& ParameterInfo, FFrameNumber Position, int32 RowIndex, FLinearColor Value, const FString& InLayerName, const FString& InAssetName)"
  },
  {
    "label": "AddColorParameterKey()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddColorParameterKey(const FMaterialParameterInfo& ParameterInfo, FFrameNumber Position, int32 RowIndex, FLinearColor Value, const FString& InLayerName, const FString& InAssetName, const FParameterChannelNames& InChannelNames)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() public: virtual void ImportEntityImpl(UMovieSceneEntitySystemLinker* EntityLinker, const FEntityImportParams& Params, FImportedEntity* OutImportedEntity)"
  },
  {
    "label": "PopulateEvaluationFieldImpl()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PopulateEvaluationFieldImpl(const TRange<FFrameNumber>& EffectiveRange, const FMovieSceneEvaluationFieldEntityMetaData& InMetaData, FMovieSceneEntityComponentFieldBuilder* OutFieldBuilder)"
  },
  {
    "label": "ExtendEntityImpl()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExtendEntityImpl(UMovieSceneParameterSection* Section, UMovieSceneEntitySystemLinker* EntityLinker, const UE::MovieScene::FEntityImportParams& Params, UE::MovieScene::FImportedEntity* OutImportedEntity)"
  },
  {
    "label": "GetDefaultDisplayName()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITORONLY_DATA FText)",
    "insertText": "GetDefaultDisplayName()"
  },
  {
    "label": "GetMaterialInfo()",
    "kind": "Method",
    "detail": "Function (# endif public : const FComponentMaterialInfo&)",
    "insertText": "GetMaterialInfo()"
  },
  {
    "label": "GetDisplayNameToolTipText()",
    "kind": "Method",
    "detail": "Function (MaterialInfo = InMaterialInfo ; } # if WITH_EDITOR FText)",
    "insertText": "GetDisplayNameToolTipText(const FMovieSceneLabelParams& LabelParams)"
  },
  {
    "label": "GetLabelColor()",
    "kind": "Method",
    "detail": "Function (FSlateColor)",
    "insertText": "GetLabelColor(const FMovieSceneLabelParams& LabelParams)"
  },
  {
    "label": "PostLoad()",
    "kind": "Method",
    "detail": "Function (# endif # if WITH_EDITORONLY_DATA protected : void)",
    "insertText": "PostLoad()"
  }
]