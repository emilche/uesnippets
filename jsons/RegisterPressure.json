[
  {
    "label": "which",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "which"
  },
  {
    "label": "LiveIntervals",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "LiveIntervals"
  },
  {
    "label": "LiveRange",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "LiveRange"
  },
  {
    "label": "RegisterClassInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RegisterClassInfo"
  },
  {
    "label": "MachineInstr",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MachineInstr"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "RegisterPressure",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RegisterPressure"
  },
  {
    "label": "ID",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ID"
  },
  {
    "label": "IntervalPressure",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IntervalPressure"
  },
  {
    "label": "RegionPressure",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RegionPressure"
  },
  {
    "label": "PressureChange",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PressureChange"
  },
  {
    "label": "isPodLike",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "isPodLike"
  },
  {
    "label": "PressureDiff",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PressureDiff"
  },
  {
    "label": "PressureDiffs",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PressureDiffs"
  },
  {
    "label": "RegPressureDelta",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RegPressureDelta"
  },
  {
    "label": "LiveRegSet",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "LiveRegSet"
  },
  {
    "label": "RegPressureTracker",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RegPressureTracker"
  },
  {
    "label": "ID",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ID"
  },
  {
    "label": "reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "reset()"
  },
  {
    "label": "openTop()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "openTop(SlotIndex NextTop)"
  },
  {
    "label": "openBottom()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "openBottom(SlotIndex PrevBottom)"
  },
  {
    "label": "reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "reset()"
  },
  {
    "label": "openTop()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "openTop(MachineBasicBlock::const_iterator PrevTop)"
  },
  {
    "label": "openBottom()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "openBottom(MachineBasicBlock::const_iterator PrevBottom)"
  },
  {
    "label": "addPressureChange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "addPressureChange(unsigned RegUnit, bool IsDec,\n                         const MachineRegisterInfo *MRI)"
  },
  {
    "label": "init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "init(unsigned N)"
  },
  {
    "label": "reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "reset()"
  },
  {
    "label": "init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "init(const MachineFunction *mf, const RegisterClassInfo *rci,\n            const LiveIntervals *lis, const MachineBasicBlock *mbb,\n            MachineBasicBlock::const_iterator pos,\n            bool ShouldTrackUntiedDefs = false)"
  },
  {
    "label": "addLiveRegs()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "addLiveRegs(ArrayRef<unsigned> Regs)"
  },
  {
    "label": "recede()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "recede(SmallVectorImpl<unsigned> *LiveUses = nullptr,\n              PressureDiff *PDiff = nullptr)"
  },
  {
    "label": "advance()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "advance()"
  },
  {
    "label": "closeRegion()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "closeRegion()"
  },
  {
    "label": "initLiveThru()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "initLiveThru(const RegPressureTracker &RPTracker)"
  },
  {
    "label": "discoverLiveOut()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "discoverLiveOut(unsigned Reg)"
  },
  {
    "label": "discoverLiveIn()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "discoverLiveIn(unsigned Reg)"
  },
  {
    "label": "closeTop()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "closeTop()"
  },
  {
    "label": "closeBottom()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "closeBottom()"
  },
  {
    "label": "getMaxUpwardPressureDelta()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "getMaxUpwardPressureDelta(const MachineInstr *MI,\n                                 PressureDiff *PDiff,\n                                 RegPressureDelta &Delta,\n                                 ArrayRef<PressureChange> CriticalPSets,\n                                 ArrayRef<unsigned> MaxPressureLimit)"
  },
  {
    "label": "getMaxDownwardPressureDelta()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "getMaxDownwardPressureDelta(const MachineInstr *MI,\n                                   RegPressureDelta &Delta,\n                                   ArrayRef<PressureChange> CriticalPSets,\n                                   ArrayRef<unsigned> MaxPressureLimit)"
  },
  {
    "label": "getMaxDownwardPressureDelta()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "getMaxDownwardPressureDelta(MI, Delta, CriticalPSets,\n                                         MaxPressureLimit)"
  },
  {
    "label": "getMaxUpwardPressureDelta()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "getMaxUpwardPressureDelta(MI, nullptr, Delta, CriticalPSets,\n                                     MaxPressureLimit)"
  },
  {
    "label": "getUpwardPressure()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "getUpwardPressure(const MachineInstr *MI,\n                         std::vector<unsigned> &PressureResult,\n                         std::vector<unsigned> &MaxPressureResult)"
  },
  {
    "label": "getDownwardPressure()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "getDownwardPressure(const MachineInstr *MI,\n                           std::vector<unsigned> &PressureResult,\n                           std::vector<unsigned> &MaxPressureResult)"
  },
  {
    "label": "getUpwardPressure()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "getUpwardPressure(MI, PressureResult, MaxPressureResult)"
  },
  {
    "label": "getDownwardPressure()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "getDownwardPressure(MI, PressureResult, MaxPressureResult)"
  },
  {
    "label": "increaseRegPressure()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "increaseRegPressure(ArrayRef<unsigned> Regs)"
  },
  {
    "label": "decreaseRegPressure()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "decreaseRegPressure(ArrayRef<unsigned> Regs)"
  },
  {
    "label": "bumpUpwardPressure()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "bumpUpwardPressure(const MachineInstr *MI)"
  },
  {
    "label": "bumpDownwardPressure()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "bumpDownwardPressure(const MachineInstr *MI)"
  },
  {
    "label": "dumpRegSetPressure()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "dumpRegSetPressure(ArrayRef<unsigned> SetPressure,\n                        const TargetRegisterInfo *TRI)"
  }
]