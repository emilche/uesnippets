[
  {
    "label": "FGPUScenePrimitiveCollector",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGPUScenePrimitiveCollector"
  },
  {
    "label": "FViewElementPDI",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FViewElementPDI"
  },
  {
    "label": "FViewElementPDI()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" SceneManagement . h \" # include \" SceneRendering . h \" class FGPUScenePrimitiveCollector ; class FViewElementPDI : public FPrimitiveDrawInterface { public :)",
    "insertText": "FViewElementPDI(FViewInfo* InViewInfo,FHitProxyConsumer* InHitProxyConsumer, FGPUScenePrimitiveCollector *InDynamicPrimitiveCollector)"
  },
  {
    "label": "IsHitTesting()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsHitTesting()"
  },
  {
    "label": "SetHitProxy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetHitProxy(HHitProxy* HitProxy)"
  },
  {
    "label": "RegisterDynamicResource()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterDynamicResource(FDynamicPrimitiveResource* DynamicResource)"
  },
  {
    "label": "AddReserveLines()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddReserveLines(uint8 DepthPriorityGroup, int32 NumLines, bool bDepthBiased = false, bool bThickLines = false)"
  },
  {
    "label": "DrawSprite()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DrawSprite(const FVector& Position, float SizeX, float SizeY, const FTexture* Sprite, const FLinearColor& Color, uint8 DepthPriorityGroup, float U, float UL, float V, float VL, uint8 BlendMode = SE_BLEND_Masked, float OpacityMaskRefVal = .5f)"
  },
  {
    "label": "DrawLine()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DrawLine(const FVector& Start, const FVector& End, const FLinearColor& Color, uint8 DepthPriorityGroup, float Thickness = 0.0f, float DepthBias = 0.0f, bool bScreenSpace = false)"
  },
  {
    "label": "DrawTranslucentLine()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DrawTranslucentLine(const FVector& Start, const FVector& End, const FLinearColor& Color, uint8 DepthPriorityGroup, float Thickness = 0.0f, float DepthBias = 0.0f, bool bScreenSpace = false)"
  },
  {
    "label": "DrawPoint()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DrawPoint(const FVector& Position, const FLinearColor& Color, float PointSize, uint8 DepthPriorityGroup)"
  },
  {
    "label": "DrawMesh()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "DrawMesh(const FMeshBatch& Mesh)"
  },
  {
    "label": "GetElements()",
    "kind": "Method",
    "detail": "Function (private : FViewInfo* ViewInfo ; TRefCountPtr<HHitProxy> CurrentHitProxy ; FHitProxyConsumer* HitProxyConsumer ; FGPUScenePrimitiveCollector* DynamicPrimitiveCollector ; FBatchedElements&)",
    "insertText": "GetElements(uint8 DepthPriorityGroup)"
  }
]