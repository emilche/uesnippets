[
  {
    "label": "FDiagnosticsProvider",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDiagnosticsProvider"
  },
  {
    "label": "FDiagnosticsProvider()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" TraceServices / Model / Diagnostics . h \" namespace TraceServices { class FDiagnosticsProvider : public IDiagnosticsProvider { public :)",
    "insertText": "FDiagnosticsProvider(IAnalysisSession& Session)"
  },
  {
    "label": "FDiagnosticsProvider()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FDiagnosticsProvider()"
  },
  {
    "label": "IsSessionInfoAvailable()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsSessionInfoAvailable()"
  },
  {
    "label": "GetSessionInfo()",
    "kind": "Method",
    "detail": "Function (const FSessionInfo&)",
    "insertText": "GetSessionInfo()"
  },
  {
    "label": "SetSessionInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSessionInfo(const FSessionInfo& InSessionInfo)"
  }
]