[
  {
    "label": "ChannelMixer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ChannelMixer"
  },
  {
    "label": "ChannelMixer()",
    "kind": "Method",
    "detail": "Function (# ifndef AUDIO_UTILITY_CHANNEL_MIXER_H_ # define AUDIO_UTILITY_CHANNEL_MIXER_H_ # include<stddef . h> # include<stdint . h> # include<memory> # include<vector> # include \" api / audio / audio_frame . h \" # include \" api / audio / channel_layout . h \" namespace webrtc { class ChannelMixer { public : float kHalfPower = 0 . 7 0 7 1 0 6 7 8 1 1 8 6 5 4 7 5 2 4 4 0 1 f ;)",
    "insertText": "ChannelMixer(ChannelLayout input_layout, ChannelLayout output_layout)"
  },
  {
    "label": "ChannelMixer()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "ChannelMixer()"
  },
  {
    "label": "Transform()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Transform(AudioFrame* frame)"
  },
  {
    "label": "IsUpMixing()",
    "kind": "Method",
    "detail": "Function (private : bool)",
    "insertText": "IsUpMixing()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (ChannelMixer&)",
    "insertText": "operator(const ChannelMixer& other)"
  }
]