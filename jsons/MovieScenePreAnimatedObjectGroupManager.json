[
  {
    "label": "UClass",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UClass"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "FPreAnimatedStorageGroupHandle",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPreAnimatedStorageGroupHandle"
  },
  {
    "label": "TAutoRegisterPreAnimatedStorageID",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TAutoRegisterPreAnimatedStorageID"
  },
  {
    "label": "FPreAnimatedObjectGroupManager",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPreAnimatedObjectGroupManager"
  },
  {
    "label": "OnObjectsReplaced()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" Containers / Map . h \" # include \" CoreTypes . h \" # include \" Evaluation / PreAnimatedState / MovieScenePreAnimatedStateExtension . h \" # include \" Evaluation / PreAnimatedState / MovieScenePreAnimatedStorageID . h \" # include \" UObject / ObjectKey . h \" class UClass ; class UObject ; namespace UE { namespace MovieScene { struct FPreAnimatedStorageGroupHandle ; template<StorageType> struct TAutoRegisterPreAnimatedStorageID ; struct FPreAnimatedObjectGroupManager : TPreAnimatedStateGroupManager<FObjectKey> { TAutoRegisterPreAnimatedStorageID<FPreAnimatedObjectGroupManager> GroupManagerID ; void)",
    "insertText": "OnObjectsReplaced(const TMap<UObject*, UObject*>& ReplacementMap)"
  },
  {
    "label": "GetGroupsByClass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetGroupsByClass(UClass* GeneratedClass, TArray<FPreAnimatedStorageGroupHandle>& OutGroupHandles)"
  },
  {
    "label": "GatherStaleStorageGroups()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GatherStaleStorageGroups(TArray<FPreAnimatedStorageGroupHandle>& StaleGroupStorage)"
  }
]