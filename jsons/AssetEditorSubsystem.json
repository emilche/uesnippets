[
  {
    "label": "UAssetEditor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAssetEditor"
  },
  {
    "label": "UEdMode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEdMode"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "UClass",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UClass"
  },
  {
    "label": "FAssetEditorRequestOpenAsset",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAssetEditorRequestOpenAsset"
  },
  {
    "label": "FEditorModeTools",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEditorModeTools"
  },
  {
    "label": "IMessageContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IMessageContext"
  },
  {
    "label": "UToolMenu",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UToolMenu"
  },
  {
    "label": "FToolMenuSection",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FToolMenuSection"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "keeps",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "keeps"
  },
  {
    "label": "IAssetEditorInstance",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IAssetEditorInstance"
  },
  {
    "label": "FTabId",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTabId"
  },
  {
    "label": "FTabManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTabManager"
  },
  {
    "label": "FRegisteredModeInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRegisteredModeInfo"
  },
  {
    "label": "UAssetEditorSubsystem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAssetEditorSubsystem"
  },
  {
    "label": "where",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "where"
  },
  {
    "label": "used",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "used"
  },
  {
    "label": "FOpenedEditorTime",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FOpenedEditorTime"
  },
  {
    "label": "used",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "used"
  },
  {
    "label": "FAssetEditorAnalyticInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAssetEditorAnalyticInfo"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "for"
  },
  {
    "label": "FAssetEntry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAssetEntry"
  },
  {
    "label": "CloseWindow()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "CloseWindow()"
  },
  {
    "label": "IncludeAssetInRestoreOpenAssetsPrompt()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "IncludeAssetInRestoreOpenAssetsPrompt()"
  },
  {
    "label": "UAssetEditorSubsystem()",
    "kind": "Method",
    "detail": "Function (UNREALED_API)",
    "insertText": "UAssetEditorSubsystem()"
  },
  {
    "label": "IsAssetEditable()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsAssetEditable(const UObject* Asset)"
  },
  {
    "label": "OpenEditorForAsset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OpenEditorForAsset(const FString& AssetPathName, const EAssetTypeActivationOpenedMethod OpenedMethod = EAssetTypeActivationOpenedMethod::Edit)"
  },
  {
    "label": "OpenEditorForAsset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OpenEditorForAsset(const FSoftObjectPath& AssetPath, const EAssetTypeActivationOpenedMethod OpenedMethod = EAssetTypeActivationOpenedMethod::Edit)"
  },
  {
    "label": "OpenEditorForAssets()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "OpenEditorForAssets(const TArray<UObject*>& Assets, const EAssetTypeActivationOpenedMethod OpenedMethod = EAssetTypeActivationOpenedMethod::Edit)"
  },
  {
    "label": "OpenEditorsForAssets()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OpenEditorsForAssets(const TArray<FString>& AssetsToOpen, const EAssetTypeActivationOpenedMethod OpenedMethod = EAssetTypeActivationOpenedMethod::Edit)"
  },
  {
    "label": "OpenEditorsForAssets()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OpenEditorsForAssets(const TArray<FName>& AssetsToOpen, const EAssetTypeActivationOpenedMethod OpenedMethod = EAssetTypeActivationOpenedMethod::Edit)"
  },
  {
    "label": "OpenEditorsForAssets()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OpenEditorsForAssets(const TArray<FSoftObjectPath>& AssetsToOpen)"
  },
  {
    "label": "CanOpenEditorForAsset()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanOpenEditorForAsset(UObject* Asset, const EAssetTypeActivationOpenedMethod OpenedMethod, FText* OutErrorMsg)"
  },
  {
    "label": "CloseAllEditorsForAsset()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "CloseAllEditorsForAsset(UObject* Asset)"
  },
  {
    "label": "CloseOtherEditors()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CloseOtherEditors(UObject* Asset, IAssetEditorInstance* OnlyEditor)"
  },
  {
    "label": "RemoveAssetFromAllEditors()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveAssetFromAllEditors(UObject* Asset)"
  },
  {
    "label": "NotifyAssetOpened()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyAssetOpened(UObject* Asset, IAssetEditorInstance* Instance)"
  },
  {
    "label": "NotifyAssetsOpened()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyAssetsOpened(const TArray< UObject* >& Assets, IAssetEditorInstance* Instance)"
  },
  {
    "label": "NotifyEditorOpeningPreWidgets()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyEditorOpeningPreWidgets(const TArray< UObject* >& Assets, IAssetEditorInstance* Instance)"
  },
  {
    "label": "NotifyAssetClosed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyAssetClosed(UObject* Asset, IAssetEditorInstance* Instance)"
  },
  {
    "label": "NotifyEditorClosed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyEditorClosed(IAssetEditorInstance* Instance)"
  },
  {
    "label": "CloseAllAssetEditors()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CloseAllAssetEditors()"
  },
  {
    "label": "RequestRestorePreviouslyOpenAssets()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RequestRestorePreviouslyOpenAssets()"
  },
  {
    "label": "RegisterUAssetEditor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterUAssetEditor(UAssetEditor* NewAssetEditor)"
  },
  {
    "label": "UnregisterUAssetEditor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterUAssetEditor(UAssetEditor* RemovedAssetEditor)"
  },
  {
    "label": "CreateRecentAssetsMenuForEditor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateRecentAssetsMenuForEditor(const IAssetEditorInstance* InAssetEditorInstance, FToolMenuSection& InSection)"
  },
  {
    "label": "HandleRequestOpenAssetMessage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleRequestOpenAssetMessage(const FAssetEditorRequestOpenAsset& Message, const TSharedRef<IMessageContext, ESPMode::ThreadSafe>& Context)"
  },
  {
    "label": "HandleTicker()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HandleTicker(float DeltaTime)"
  },
  {
    "label": "SpawnRestorePreviouslyOpenAssetsNotification()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SpawnRestorePreviouslyOpenAssetsNotification(const bool bCleanShutdown, const TArray<FString>& AssetsToOpen)"
  },
  {
    "label": "OnConfirmRestorePreviouslyOpenAssets()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnConfirmRestorePreviouslyOpenAssets(TArray<FString> AssetsToOpen)"
  },
  {
    "label": "OnCancelRestorePreviouslyOpenAssets()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnCancelRestorePreviouslyOpenAssets()"
  },
  {
    "label": "RegisterLevelEditorMenuExtensions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterLevelEditorMenuExtensions()"
  },
  {
    "label": "OnAssetRemoved()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAssetRemoved(const FAssetData& AssetData)"
  },
  {
    "label": "OnAssetRenamed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAssetRenamed(const FAssetData& AssetData, const FString& AssetOldName)"
  },
  {
    "label": "SaveOpenAssetEditors()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SaveOpenAssetEditors(const bool bOnShutdown)"
  },
  {
    "label": "SaveOpenAssetEditors()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SaveOpenAssetEditors(const bool bOnShutdown, const bool bCancelIfDebugger)"
  },
  {
    "label": "RestorePreviouslyOpenAssets()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RestorePreviouslyOpenAssets()"
  },
  {
    "label": "SetAutoRestoreAndDisableSaving()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAutoRestoreAndDisableSaving(const bool bInAutoRestoreAndDisableSaving)"
  },
  {
    "label": "SetAutoRestoreAndDisableSavingOverride()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAutoRestoreAndDisableSavingOverride(TOptional<bool> bInAutoRestoreAndDisableSaving)"
  },
  {
    "label": "SetRecentAssetsFilter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRecentAssetsFilter(const FMainMRUFavoritesList::FDoesMRUFavoritesItemPassFilter& InFilter)"
  },
  {
    "label": "GetAssetBeingOpenedMethod()",
    "kind": "Method",
    "detail": "Function (TOptional<EAssetOpenMethod>)",
    "insertText": "GetAssetBeingOpenedMethod(TObjectPtr<UObject> Asset)"
  },
  {
    "label": "GetAssetsBeingOpenedMethod()",
    "kind": "Method",
    "detail": "Function (TOptional<EAssetOpenMethod>)",
    "insertText": "GetAssetsBeingOpenedMethod(TArray<TObjectPtr<UObject>> Assets)"
  },
  {
    "label": "AddReadOnlyAssetFilter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddReadOnlyAssetFilter(const FName& Owner, const FReadOnlyAssetFilter& ReadOnlyAssetFilter)"
  },
  {
    "label": "RemoveReadOnlyAssetFilter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveReadOnlyAssetFilter(const FName& Owner)"
  },
  {
    "label": "HandlePackageReloaded()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandlePackageReloaded(const EPackageReloadPhase InPackageReloadPhase, FPackageReloadedEvent* InPackageReloadedEvent)"
  },
  {
    "label": "OnEditorClose()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnEditorClose()"
  },
  {
    "label": "RegisterEditorModes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterEditorModes()"
  },
  {
    "label": "UnregisterEditorModes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterEditorModes()"
  },
  {
    "label": "OnSMInstanceElementsEnabled()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSMInstanceElementsEnabled()"
  },
  {
    "label": "InitializeRecentAssets()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeRecentAssets()"
  },
  {
    "label": "SaveRecentAssets()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SaveRecentAssets(const bool bOnShutdown = false)"
  },
  {
    "label": "CullRecentAssetEditorsMap()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CullRecentAssetEditorsMap()"
  },
  {
    "label": "GetTypeHash()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetTypeHash(AssetEntry.RawPtr)"
  }
]