[
  {
    "label": "Config",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Config"
  },
  {
    "label": "FileAccessor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FileAccessor"
  },
  {
    "label": "Trace",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Trace"
  },
  {
    "label": "WorkManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "WorkManager"
  },
  {
    "label": "DirectoryEntry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DirectoryEntry"
  },
  {
    "label": "Storage",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Storage"
  },
  {
    "label": "RetrieveResult",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RetrieveResult"
  },
  {
    "label": "CachedFileInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "CachedFileInfo"
  },
  {
    "label": "WriteResult",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "WriteResult"
  },
  {
    "label": "StorageCreateInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "StorageCreateInfo"
  },
  {
    "label": "BufferSlots",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "BufferSlots"
  },
  {
    "label": "StorageImpl",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "StorageImpl"
  },
  {
    "label": "CasEntry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "CasEntry"
  },
  {
    "label": "FileEntry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FileEntry"
  },
  {
    "label": "FileEntry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FileEntry"
  },
  {
    "label": "CasEntry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "CasEntry"
  },
  {
    "label": "DeferedCasCreation",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DeferedCasCreation"
  },
  {
    "label": "GetMappingString()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetMappingString(StringBufferBase& out, FileMappingHandle mappingHandle, u64 offset)"
  },
  {
    "label": "Apply()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Apply(Config& config)"
  },
  {
    "label": "Push()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Push(u8* slot)"
  },
  {
    "label": "LoadCasTable()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "LoadCasTable(bool logStats = true, bool alwaysCheckAllFiles = false)"
  },
  {
    "label": "CheckCasContent()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CheckCasContent(u32 workerCount)"
  },
  {
    "label": "CheckFileTable()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CheckFileTable(const tchar* searchPath, u32 workerCount)"
  },
  {
    "label": "DeleteAllCas()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DeleteAllCas()"
  },
  {
    "label": "HasCasFile()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasCasFile(const CasKey& casKey, CasEntry** out = nullptr)"
  },
  {
    "label": "EnsureCasFile()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "EnsureCasFile(const CasKey& casKey, const tchar* fileName)"
  },
  {
    "label": "CalculateCasKey()",
    "kind": "Method",
    "detail": "Function (CasKey)",
    "insertText": "CalculateCasKey(const tchar* fileName, FileHandle fileHandle, u64 fileSize, bool storeCompressed)"
  },
  {
    "label": "CalculateCasKey()",
    "kind": "Method",
    "detail": "Function (CasKey)",
    "insertText": "CalculateCasKey(u8* fileMem, u64 fileSize, bool storeCompressed)"
  },
  {
    "label": "StoreCasKey()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "StoreCasKey(CasKey& out, const tchar* fileName, const CasKey& casKeyOverride, bool fileIsCompressed)"
  },
  {
    "label": "StoreCasKey()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "StoreCasKey(CasKey& out, const StringKey& fileNameKey, const tchar* fileName, const CasKey& casKeyOverride, bool fileIsCompressed)"
  },
  {
    "label": "IsFileVerified()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsFileVerified(const StringKey& fileNameKey)"
  },
  {
    "label": "ReportFileInfoWeak()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReportFileInfoWeak(const StringKey& fileNameKey, u64 verifiedLastWriteTime, u64 verifiedSize)"
  },
  {
    "label": "WriteCompressed()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "WriteCompressed(WriteResult& out, const tchar* from, const tchar* toFile)"
  },
  {
    "label": "WriteMemToCompressedFile()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "WriteMemToCompressedFile(FileAccessor& destination, u32 workCount, const u8* uncompressedData, u64 fileSize, u64 maxUncompressedBlock, u64& totalWritten)"
  },
  {
    "label": "WriteCasFileNoCheck()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "WriteCasFileNoCheck(WriteResult& out, const tchar* fileName, bool fileIsCompressed, const tchar* casFile, bool storeCompressed)"
  },
  {
    "label": "WriteCasFile()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "WriteCasFile(WriteResult& out, const tchar* fileName, bool fileIsCompressed, const CasKey& casKey)"
  },
  {
    "label": "VerifyExisting()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "VerifyExisting(bool& outReturnValue, ScopedWriteLock& entryLock, const CasKey& casKey, CasEntry& casEntry, StringBufferBase& casFile)"
  },
  {
    "label": "AddCasFile()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AddCasFile(StringKey fileNameKey, const tchar* fileName, const CasKey& casKey, bool deferCreation, bool fileIsCompressed)"
  },
  {
    "label": "CasEntryAccessed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CasEntryAccessed(const CasKey& casKey)"
  },
  {
    "label": "IsDisallowedPath()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsDisallowedPath(const tchar* fileName)"
  },
  {
    "label": "DecompressMemoryToFile()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DecompressMemoryToFile(u8* compressedData, FileAccessor& destination, u64 decompressedSize, bool useNoBuffering)"
  },
  {
    "label": "CasEntryAccessed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CasEntryAccessed(CasEntry& entry)"
  },
  {
    "label": "CasEntryWritten()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CasEntryWritten(CasEntry& entry, u64 size)"
  },
  {
    "label": "CasEntryDeleted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CasEntryDeleted(CasEntry& entry, u64 size)"
  },
  {
    "label": "AttachEntry()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AttachEntry(CasEntry& entry)"
  },
  {
    "label": "DetachEntry()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DetachEntry(CasEntry& entry)"
  },
  {
    "label": "HandleOverflow()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleOverflow(UnorderedSet<CasKey>* outDeletedFiles)"
  },
  {
    "label": "OpenCasDataFile()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "OpenCasDataFile(u32 index, u64 size)"
  },
  {
    "label": "CreateCasDataFiles()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CreateCasDataFiles()"
  }
]