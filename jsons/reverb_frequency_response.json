[
  {
    "label": "ReverbFrequencyResponse",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ReverbFrequencyResponse"
  },
  {
    "label": "ReverbFrequencyResponse()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_AUDIO_PROCESSING_AEC3_REVERB_FREQUENCY_RESPONSE_H_ # define MODULES_AUDIO_PROCESSING_AEC3_REVERB_FREQUENCY_RESPONSE_H_ # include<array> # include<vector> # include \" absl / types / optional . h \" # include \" api / array_view . h \" # include \" modules / audio_processing / aec3 / aec3_common . h \" namespace webrtc { class ReverbFrequencyResponse { public :)",
    "insertText": "ReverbFrequencyResponse(bool use_conservative_tail_frequency_response)"
  },
  {
    "label": "ReverbFrequencyResponse()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "ReverbFrequencyResponse()"
  },
  {
    "label": "Update()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Update(const std::vector<std::array<float, kFftLengthBy2Plus1>>& frequency_response, int filter_delay_blocks, const absl::optional<float>& linear_filter_quality, bool stationary_block)"
  },
  {
    "label": "FrequencyResponse()",
    "kind": "Method",
    "detail": "Function (rtc::ArrayView<const float>)",
    "insertText": "FrequencyResponse()"
  }
]