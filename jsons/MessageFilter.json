[
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FMessageFilter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMessageFilter"
  },
  {
    "label": "FMessageFilter()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Input / Reply . h \" # include \" Textures / SlateIcon . h \" enum class ECheckBoxState : uint8 ; class FMessageFilter : public TSharedFromThis<FMessageFilter> { public :)",
    "insertText": "FMessageFilter(const FText& InName, const FSlateIcon& InIcon) : Name(InName) , Icon(InIcon) , Display(true)"
  },
  {
    "label": "FMessageFilter()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "FMessageFilter()"
  },
  {
    "label": "OnMouseButtonUp()",
    "kind": "Method",
    "detail": "Function (} FReply)",
    "insertText": "OnMouseButtonUp(const FGeometry& MyGeometry, const FPointerEvent& MouseEvent)"
  },
  {
    "label": "OnGetDisplayCheckState()",
    "kind": "Method",
    "detail": "Function (ECheckBoxState)",
    "insertText": "OnGetDisplayCheckState()"
  },
  {
    "label": "OnDisplayCheckStateChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDisplayCheckStateChanged(ECheckBoxState InNewState)"
  },
  {
    "label": "OnFilterChanged()",
    "kind": "Method",
    "detail": "Function (FSimpleMulticastDelegate&)",
    "insertText": "OnFilterChanged()"
  }
]