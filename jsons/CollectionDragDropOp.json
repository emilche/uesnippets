[
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "FAssetData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAssetData"
  },
  {
    "label": "FCollectionDragDropOp",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCollectionDragDropOp"
  },
  {
    "label": "DRAG_DROP_OPERATOR_TYPE()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" AssetRegistry / AssetData . h \" # include \" AssetTagItemTypes . h \" # include \" CollectionManagerTypes . h \" # include \" Containers / Array . h \" # include \" Containers / UnrealString . h \" # include \" CoreMinimal . h \" # include \" DragAndDrop / DecoratedDragDropOp . h \" # include \" GenericPlatform / ICursor . h \" # include \" HAL / PlatformCrt . h \" # include \" Input / DragAndDrop . h \" # include \" Internationalization / Text . h \" # include \" Misc / Optional . h \" # include \" Templates / SharedPointer . h \" # include \" Templates / UnrealTemplate . h \" class SWidget ; struct FAssetData ; class FCollectionDragDropOp : public FDecoratedDragDropOp { public :)",
    "insertText": "DRAG_DROP_OPERATOR_TYPE(FCollectionDragDropOp, FDecoratedDragDropOp)"
  },
  {
    "label": "New()",
    "kind": "Method",
    "detail": "Function (TSharedRef<FCollectionDragDropOp>)",
    "insertText": "New(TArray<FCollectionNameType> InCollections, const EAssetTagItemViewMode InAssetTagViewMode = EAssetTagItemViewMode::Standard)"
  },
  {
    "label": "MakeShareable()",
    "kind": "Method",
    "detail": "Function (TSharedRef<FCollectionDragDropOp> Operation =)",
    "insertText": "MakeShareable(new FCollectionDragDropOp)"
  },
  {
    "label": "MoveTemp()",
    "kind": "Method",
    "detail": "Function (Operation -> AssetTagViewMode = InAssetTagViewMode ; Operation -> MouseCursor = EMouseCursor::GrabHandClosed ; Operation -> Collections =)",
    "insertText": "MoveTemp(InCollections)"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (Operation ->)",
    "insertText": "Construct()"
  },
  {
    "label": "GetDefaultDecorator()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<SWidget>)",
    "insertText": "GetDefaultDecorator()"
  },
  {
    "label": "GetDecoratorText()",
    "kind": "Method",
    "detail": "Function (private : FText)",
    "insertText": "GetDecoratorText()"
  }
]