[
  {
    "label": "FReferenceCollector",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FReferenceCollector"
  },
  {
    "label": "FSpawnTabArgs",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSpawnTabArgs"
  },
  {
    "label": "FTabManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTabManager"
  },
  {
    "label": "FUICommandList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FUICommandList"
  },
  {
    "label": "IDetailsView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDetailsView"
  },
  {
    "label": "IToolkitHost",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IToolkitHost"
  },
  {
    "label": "SDockTab",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SDockTab"
  },
  {
    "label": "UEdGraph",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEdGraph"
  },
  {
    "label": "UEdGraphPin",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEdGraphPin"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "USoundSubmixBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USoundSubmixBase"
  },
  {
    "label": "FSoundSubmixEditor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSoundSubmixEditor"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Init(const EToolkitMode::Type Mode, const TSharedPtr<IToolkitHost>& InitToolkitHost, UObject* ObjectToEdit)"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT(\"FSoundSubmixEditor\")"
  },
  {
    "label": "AddMissingEditableSubmixes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddMissingEditableSubmixes()"
  },
  {
    "label": "SelectSubmixes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SelectSubmixes(TSet<USoundSubmixBase*>& InSubmixes)"
  },
  {
    "label": "SpawnTab_GraphCanvas()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SDockTab>)",
    "insertText": "SpawnTab_GraphCanvas(const FSpawnTabArgs& Args)"
  },
  {
    "label": "SpawnTab_Properties()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SDockTab>)",
    "insertText": "SpawnTab_Properties(const FSpawnTabArgs& Args)"
  },
  {
    "label": "CreateInternalWidgets()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateInternalWidgets(USoundSubmixBase* InSoundSubmix)"
  },
  {
    "label": "CreateGraphEditorWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SGraphEditor>)",
    "insertText": "CreateGraphEditorWidget(USoundSubmixBase* InSoundSubmix)"
  },
  {
    "label": "OnSelectedNodesChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSelectedNodesChanged(const TSet<UObject*>& NewSelection)"
  },
  {
    "label": "OnCreateGraphActionMenu()",
    "kind": "Method",
    "detail": "Function (FActionMenuContent)",
    "insertText": "OnCreateGraphActionMenu(UEdGraph* InGraph, const FVector2D& InNodePosition, const TArray<UEdGraphPin*>& InDraggedPins, bool bAutoExpand, SGraphEditor::FActionMenuClosed InOnMenuClosed)"
  },
  {
    "label": "AddEditableSubmixChildren()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddEditableSubmixChildren(USoundSubmixBase* RootSubmix)"
  },
  {
    "label": "SelectAllNodes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SelectAllNodes()"
  },
  {
    "label": "RemoveSelectedNodes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveSelectedNodes()"
  },
  {
    "label": "UndoGraphAction()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UndoGraphAction()"
  },
  {
    "label": "RedoGraphAction()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RedoGraphAction()"
  }
]