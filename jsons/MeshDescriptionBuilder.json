[
  {
    "label": "TAttributesSet",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TAttributesSet"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "FMeshDescriptionBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMeshDescriptionBuilder"
  },
  {
    "label": "SetMeshDescription()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetMeshDescription(FMeshDescription* Description)"
  },
  {
    "label": "ReserveNewVertices()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReserveNewVertices(int32 Count)"
  },
  {
    "label": "AppendVertex()",
    "kind": "Method",
    "detail": "Function (FVertexID)",
    "insertText": "AppendVertex(const FVector& Position)"
  },
  {
    "label": "AppendVertexWithId()",
    "kind": "Method",
    "detail": "Function (FVertexID)",
    "insertText": "AppendVertexWithId(int32 NewVertexID, const FVector& Position)"
  },
  {
    "label": "GetPosition()",
    "kind": "Method",
    "detail": "Function (FVector)",
    "insertText": "GetPosition(const FVertexID& VertexID)"
  },
  {
    "label": "GetPosition()",
    "kind": "Method",
    "detail": "Function (FVector)",
    "insertText": "GetPosition(const FVertexInstanceID& InstanceID)"
  },
  {
    "label": "SetPosition()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPosition(const FVertexID& VertexID, const FVector& NewPosition)"
  },
  {
    "label": "SetNumUVLayers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetNumUVLayers(int32 NumUVLayers)"
  },
  {
    "label": "ReserveNewUVs()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReserveNewUVs(int32 Count, int UVLayerIndex)"
  },
  {
    "label": "AppendUV()",
    "kind": "Method",
    "detail": "Function (FUVID)",
    "insertText": "AppendUV(const FVector2D& UVvalue, int32 UVLayerIndex)"
  },
  {
    "label": "AppendInstance()",
    "kind": "Method",
    "detail": "Function (FVertexInstanceID)",
    "insertText": "AppendInstance(const FVertexID& VertexID)"
  },
  {
    "label": "SetInstanceUV()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetInstanceUV(const FVertexInstanceID& InstanceID, const FVector2D& InstanceUV, int32 UVLayerIndex = 0)"
  },
  {
    "label": "SetInstanceNormal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetInstanceNormal(const FVertexInstanceID& InstanceID, const FVector& Normal)"
  },
  {
    "label": "SetInstanceTangentSpace()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetInstanceTangentSpace(const FVertexInstanceID& InstanceID, const FVector& Normal, const FVector& Tangent, float Sign)"
  },
  {
    "label": "SetInstanceColor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetInstanceColor(const FVertexInstanceID& InstanceID, const FVector4f& Color)"
  },
  {
    "label": "EnablePolyGroups()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnablePolyGroups()"
  },
  {
    "label": "SetPolyGroupID()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPolyGroupID(const FTriangleID& TriangleID, int GroupID)"
  },
  {
    "label": "AppendUVTriangle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AppendUVTriangle(const FTriangleID& TriangleID, const FUVID UVverterxID0, const FUVID UVvertexID1, const FUVID UVvertexID2, int32 UVLayerIndex)"
  },
  {
    "label": "AppendTriangle()",
    "kind": "Method",
    "detail": "Function (FTriangleID)",
    "insertText": "AppendTriangle(const FVertexID& Vertex0, const FVertexID& Vertex1, const FVertexID& Vertex2, const FPolygonGroupID& PolygonGroup)"
  },
  {
    "label": "AppendTriangle()",
    "kind": "Method",
    "detail": "Function (FTriangleID)",
    "insertText": "AppendTriangle(const FVertexID* Triangle, const FPolygonGroupID& PolygonGroup)"
  },
  {
    "label": "AppendTriangle()",
    "kind": "Method",
    "detail": "Function (FTriangleID)",
    "insertText": "AppendTriangle(const FVertexInstanceID& Instance0, const FVertexInstanceID& Instance1, const FVertexInstanceID& Instance2, const FPolygonGroupID& PolygonGroup)"
  },
  {
    "label": "AppendPolygon()",
    "kind": "Method",
    "detail": "Function (FPolygonID)",
    "insertText": "AppendPolygon(const TArray<FVertexID>& Vertices, const FPolygonGroupID& PolygonGroup)"
  },
  {
    "label": "AppendPolygonGroup()",
    "kind": "Method",
    "detail": "Function (FPolygonGroupID)",
    "insertText": "AppendPolygonGroup(FName MaterialSlotName = NAME_None)"
  },
  {
    "label": "SetAllEdgesHardness()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAllEdgesHardness(bool bHard)"
  },
  {
    "label": "Translate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Translate(const FVector& Translation)"
  },
  {
    "label": "SuspendMeshDescriptionIndexing()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SuspendMeshDescriptionIndexing()"
  },
  {
    "label": "ResumeMeshDescriptionIndexing()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResumeMeshDescriptionIndexing()"
  }
]