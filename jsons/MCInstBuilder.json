[
  {
    "label": "MCInstBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MCInstBuilder"
  },
  {
    "label": "MCInstBuilder()",
    "kind": "Method",
    "detail": "Function (# ifndef LLVM_MC_MCINSTBUILDER_H # define LLVM_MC_MCINSTBUILDER_H # include \" llvm / MC / MCInst . h \" namespace llvm { class MCInstBuilder { MCInst Inst ; public :)",
    "insertText": "MCInstBuilder(unsigned Opcode)"
  },
  {
    "label": "setOpcode()",
    "kind": "Method",
    "detail": "Function (Inst .)",
    "insertText": "setOpcode(Opcode)"
  },
  {
    "label": "addReg()",
    "kind": "Method",
    "detail": "Function (} MCInstBuilder&)",
    "insertText": "addReg(unsigned Reg)"
  },
  {
    "label": "addOperand()",
    "kind": "Method",
    "detail": "Function (Inst .)",
    "insertText": "addOperand(MCOperand::createReg(Reg))"
  },
  {
    "label": "addOperand()",
    "kind": "Method",
    "detail": "Function (Inst .)",
    "insertText": "addOperand(MCOperand::createImm(Val))"
  },
  {
    "label": "addOperand()",
    "kind": "Method",
    "detail": "Function (Inst .)",
    "insertText": "addOperand(MCOperand::createFPImm(Val))"
  },
  {
    "label": "addOperand()",
    "kind": "Method",
    "detail": "Function (Inst .)",
    "insertText": "addOperand(MCOperand::createExpr(Val))"
  },
  {
    "label": "addOperand()",
    "kind": "Method",
    "detail": "Function (Inst .)",
    "insertText": "addOperand(MCOperand::createInst(Val))"
  },
  {
    "label": "addOperand()",
    "kind": "Method",
    "detail": "Function (Inst .)",
    "insertText": "addOperand(Op)"
  }
]