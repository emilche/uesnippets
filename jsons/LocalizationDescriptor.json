[
  {
    "label": "FJsonObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FJsonObject"
  },
  {
    "label": "FText",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FText"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "FLocalizationTargetDescriptor",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLocalizationTargetDescriptor"
  },
  {
    "label": "FromString()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" Containers / UnrealString . h \" # include \" CoreMinimal . h \" # include \" HAL / Platform . h \" # include \" Serialization / JsonWriter . h \" class FJsonObject ; class FText ; namespace ELocalizationTargetDescriptorLoadingPolicy { enum Type { Never,Always,Editor,Game,PropertyNames,ToolTips,Max,} ; ELocalizationTargetDescriptorLoadingPolicy::Type)",
    "insertText": "FromString(const TCHAR *Text)"
  },
  {
    "label": "ToString()",
    "kind": "Method",
    "detail": "Function (const TCHAR*)",
    "insertText": "ToString(const ELocalizationTargetDescriptorLoadingPolicy::Type Value)"
  },
  {
    "label": "FromString()",
    "kind": "Method",
    "detail": "Function (} ; namespace ELocalizationConfigGenerationPolicy { enum Type { Never,User,Auto,Max,} ; ELocalizationConfigGenerationPolicy::Type)",
    "insertText": "FromString(const TCHAR* Text)"
  },
  {
    "label": "ToString()",
    "kind": "Method",
    "detail": "Function (const TCHAR*)",
    "insertText": "ToString(const ELocalizationConfigGenerationPolicy::Type Value)"
  },
  {
    "label": "FLocalizationTargetDescriptor()",
    "kind": "Method",
    "detail": "Function (} ; struct FLocalizationTargetDescriptor { FString Name ; ELocalizationTargetDescriptorLoadingPolicy::Type LoadingPolicy ; ELocalizationConfigGenerationPolicy::Type ConfigGenerationPolicy ;)",
    "insertText": "FLocalizationTargetDescriptor(FString InName = FString(), ELocalizationTargetDescriptorLoadingPolicy::Type InLoadingPolicy = ELocalizationTargetDescriptorLoadingPolicy::Never, ELocalizationConfigGenerationPolicy::Type InGenerationPolicy = ELocalizationConfigGenerationPolicy::Never)"
  },
  {
    "label": "Read()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Read(const FJsonObject& InObject, FText* OutFailReason = nullptr)"
  },
  {
    "label": "Read()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Read(const FJsonObject& InObject, FText& OutFailReason)"
  },
  {
    "label": "ReadArray()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ReadArray(const FJsonObject& InObject, const TCHAR* InName, TArray<FLocalizationTargetDescriptor>& OutTargets, FText* OutFailReason = nullptr)"
  },
  {
    "label": "ReadArray()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ReadArray(const FJsonObject& InObject, const TCHAR* InName, TArray<FLocalizationTargetDescriptor>& OutTargets, FText& OutFailReason)"
  },
  {
    "label": "Write()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Write(TJsonWriter<>& Writer)"
  },
  {
    "label": "UpdateJson()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateJson(FJsonObject& JsonObject)"
  },
  {
    "label": "WriteArray()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WriteArray(TJsonWriter<>& Writer, const TCHAR* ArrayName, const TArray<FLocalizationTargetDescriptor>& Descriptors)"
  },
  {
    "label": "UpdateArray()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateArray(FJsonObject& JsonObject, const TCHAR* ArrayName, const TArray<FLocalizationTargetDescriptor>& Descriptors)"
  },
  {
    "label": "ShouldLoadLocalizationTarget()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldLoadLocalizationTarget()"
  }
]