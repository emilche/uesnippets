[
  {
    "label": "FbxControlSetPlug",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FbxControlSetPlug"
  },
  {
    "label": "FBXSDK_DLL",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBXSDK_DLL"
  },
  {
    "label": "ESetId",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ESetId"
  },
  {
    "label": "ENodeId",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ENodeId"
  },
  {
    "label": "EType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EType"
  },
  {
    "label": "FbxCharacter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FbxCharacter"
  },
  {
    "label": "FbxNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FbxNode"
  },
  {
    "label": "FbxScene",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FbxScene"
  },
  {
    "label": "FbxControlSet",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FbxControlSet"
  },
  {
    "label": "FbxControlSetLink()",
    "kind": "Method",
    "detail": "Function (# ifndef _FBXSDK_SCENE_CONSTRAINT_CONTROL_SET_H_ # define _FBXSDK_SCENE_CONSTRAINT_CONTROL_SET_H_ # include<fbxsdk / fbxsdk_def . h> # include<fbxsdk / scene / constraint / fbxcharacter . h> # include<fbxsdk / fbxsdk_nsbegin . h> class FbxControlSetPlug ; class FBXSDK_DLL FbxControlSetLink { public :)",
    "insertText": "FbxControlSetLink()"
  },
  {
    "label": "FbxControlSetLink()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FbxControlSetLink(const FbxControlSetLink& pControlSetLink)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FbxControlSetLink&)",
    "insertText": "operator(const FbxControlSetLink& pControlSetLink)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "FbxEffector()",
    "kind": "Method",
    "detail": "Function (FbxNode* mNode ; FbxString mTemplateName ; } ; class FBXSDK_DLL FbxEffector { public : enum ESetId { eDefaultSet,eAux1Set,eAux2Set,eAux3Set,eAux4Set,eAux5Set,eAux6Set,eAux7Set,eAux8Set,eAux9Set,eAux10Set,eAux11Set,eAux12Set,eAux13Set,eAux14Set,eSetIdCount } ; enum ENodeId { eHips,eLeftAnkle,eRightAnkle,eLeftWrist,eRightWrist,eLeftKnee,eRightKnee,eLeftElbow,eRightElbow,eChestOrigin,eChestEnd,eLeftFoot,eRightFoot,eLeftShoulder,eRightShoulder,eHead,eLeftHip,eRightHip,eLeftHand,eRightHand,eLeftHandThumb,eLeftHandIndex,eLeftHandMiddle,eLeftHandRing,eLeftHandPinky,eLeftHandExtraFinger,eRightHandThumb,eRightHandIndex,eRightHandMiddle,eRightHandRing,eRightHandPinky,eRightHandExtraFinger,eLeftFootThumb,eLeftFootIndex,eLeftFootMiddle,eLeftFootRing,eLeftFootPinky,eLeftFootExtraFinger,eRightFootThumb,eRightFootIndex,eRightFootMiddle,eRightFootRing,eRightFootPinky,eRightFootExtraFinger,eNodeIdCount,eNodeIdInvalid = - 1 } ;)",
    "insertText": "FbxEffector()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FbxEffector&)",
    "insertText": "operator(const FbxEffector& pEffector)"
  },
  {
    "label": "SetType()",
    "kind": "Method",
    "detail": "Function (enum EType { eNone,eFkIk,eIkOnly } ; void)",
    "insertText": "SetType(EType pType)"
  },
  {
    "label": "GetType()",
    "kind": "Method",
    "detail": "Function (EType)",
    "insertText": "GetType()"
  },
  {
    "label": "SetUseAxis()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetUseAxis(bool pUseAxis)"
  },
  {
    "label": "GetUseAxis()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetUseAxis()"
  },
  {
    "label": "SetLockTransform()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetLockTransform(bool pLockTransform)"
  },
  {
    "label": "GetLockTransform()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetLockTransform()"
  },
  {
    "label": "SetLock3DPick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetLock3DPick(bool pLock3DPick)"
  },
  {
    "label": "GetLock3DPick()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetLock3DPick()"
  },
  {
    "label": "SetControlSetLink()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetControlSetLink(FbxCharacter::ENodeId pCharacterNodeId, const FbxControlSetLink& pControlSetLink)"
  },
  {
    "label": "GetControlSetLink()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetControlSetLink(FbxCharacter::ENodeId pCharacterNodeId, FbxControlSetLink* pControlSetLink = NULL)"
  },
  {
    "label": "SetEffector()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetEffector(FbxEffector::ENodeId pEffectorNodeId, FbxEffector pEffector)"
  },
  {
    "label": "GetEffector()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetEffector(FbxEffector::ENodeId pEffectorNodeId, FbxEffector* pEffector = NULL)"
  },
  {
    "label": "SetEffectorAux()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetEffectorAux(FbxEffector::ENodeId pEffectorNodeId, FbxNode* pNode, FbxEffector::ESetId pEffectorSetId=FbxEffector::eAux1Set)"
  },
  {
    "label": "GetEffectorAux()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetEffectorAux(FbxEffector::ENodeId pEffectorNodeId, FbxNode** pNode=NULL, FbxEffector::ESetId pEffectorSetId=FbxEffector::eAux1Set)"
  },
  {
    "label": "GetEffectorNodeName()",
    "kind": "Method",
    "detail": "Function (char*)",
    "insertText": "GetEffectorNodeName(FbxEffector::ENodeId pEffectorNodeId)"
  },
  {
    "label": "GetEffectorNodeId()",
    "kind": "Method",
    "detail": "Function (FbxEffector::ENodeId)",
    "insertText": "GetEffectorNodeId(const char* pEffectorNodeName)"
  },
  {
    "label": "FromPlug()",
    "kind": "Method",
    "detail": "Function (# ifndef DOXYGEN_SHOULD_SKIP_THIS void)",
    "insertText": "FromPlug(FbxControlSetPlug *pPlug)"
  },
  {
    "label": "ToPlug()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ToPlug(FbxControlSetPlug *pPlug)"
  },
  {
    "label": "FbxControlSet()",
    "kind": "Method",
    "detail": "Function (private :)",
    "insertText": "FbxControlSet()"
  },
  {
    "label": "FBXSDK_FRIEND_NEW()",
    "kind": "Method",
    "detail": "Function (FbxCharacter* mCharacter ; EType mType ; bool mUseAxis ; bool mLockTransform ; bool mLock3DPick ; FbxControlSetLink mControlSetLink [ FbxCharacter::eNodeIdCount ] ; FbxEffector mEffector [ FbxEffector::eNodeIdCount ] ; FbxNode* mEffectorAux [ FbxEffector::eNodeIdCount ] [ FbxEffector::eSetIdCount - 1 ] ;)",
    "insertText": "FBXSDK_FRIEND_NEW()"
  },
  {
    "label": "FBXSDK_OBJECT_DECLARE()",
    "kind": "Method",
    "detail": "Function (class FbxCharacter ; class FbxNode ; # endif } ; class FBXSDK_DLL FbxControlSetPlug : public FbxObject {)",
    "insertText": "FBXSDK_OBJECT_DECLARE(FbxControlSetPlug, FbxObject)"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (public : FbxPropertyT<FbxControlSet::EType> ControlSetType ; FbxPropertyT<FbxBool> UseAxis ; FbxPropertyT<FbxReference> Character ; protected : void)",
    "insertText": "Construct(const FbxObject* pFrom)"
  },
  {
    "label": "ConstructProperties()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConstructProperties(bool pForceSet)"
  },
  {
    "label": "GetTypeFlags()",
    "kind": "Method",
    "detail": "Function (FbxStringList)",
    "insertText": "GetTypeFlags()"
  },
  {
    "label": "FbxTypeOf()",
    "kind": "Method",
    "detail": "Function (private : FbxArray<FbxProperty> mFKBuf ; FbxArray<FbxProperty> mIKBuf ; class FbxScene ; class FbxControlSet ; } ; EFbxType)",
    "insertText": "FbxTypeOf(const FbxControlSet::EType&)"
  }
]