[
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "DumpWithoutCrashingUnthrottled()",
    "kind": "Method",
    "detail": "Function (# ifndef BASE_DEBUG_DUMP_WITHOUT_CRASHING_H_ # define BASE_DEBUG_DUMP_WITHOUT_CRASHING_H_ # include \" base / base_export . h \" # include \" base / compiler_specific . h \" # include \" base / location . h \" # include \" base / time / time . h \" # include \" build / build_config . h \" enum class DumpWithoutCrashingStatus { kThrottled,kUploaded,kMaxValue = kUploaded } ; namespace base { namespace debug { BASE_EXPORT bool NOT_TAIL_CALLED)",
    "insertText": "DumpWithoutCrashingUnthrottled()"
  },
  {
    "label": "DumpWithoutCrashing()",
    "kind": "Method",
    "detail": "Function (BASE_EXPORT bool NOT_TAIL_CALLED)",
    "insertText": "DumpWithoutCrashing(const base::Location& location = base::Location::Current(), base::TimeDelta time_between_dumps = base::Minutes(5))"
  },
  {
    "label": "DumpWithoutCrashingWithUniqueId()",
    "kind": "Method",
    "detail": "Function (BASE_EXPORT bool NOT_TAIL_CALLED)",
    "insertText": "DumpWithoutCrashingWithUniqueId(size_t unique_identifier, const base::Location& location = base::Location::Current(), base::TimeDelta time_between_dumps = base::Minutes(5))"
  },
  {
    "label": "SetDumpWithoutCrashingFunction()",
    "kind": "Method",
    "detail": "Function (BASE_EXPORT void)",
    "insertText": "SetDumpWithoutCrashingFunction(void (CDECL *function)())"
  }
]