[
  {
    "label": "D3D10_FEATURE_LEVEL1",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "D3D10_FEATURE_LEVEL1"
  },
  {
    "label": "D3D10_RENDER_TARGET_BLEND_DESC1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "D3D10_RENDER_TARGET_BLEND_DESC1"
  },
  {
    "label": "D3D10_BLEND_DESC1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "D3D10_BLEND_DESC1"
  },
  {
    "label": "ID3D10BlendState1Vtbl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ID3D10BlendState1Vtbl"
  },
  {
    "label": "D3D10_TEXCUBE_ARRAY_SRV1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "D3D10_TEXCUBE_ARRAY_SRV1"
  },
  {
    "label": "D3D10_SHADER_RESOURCE_VIEW_DESC1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "D3D10_SHADER_RESOURCE_VIEW_DESC1"
  },
  {
    "label": "ID3D10ShaderResourceView1Vtbl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ID3D10ShaderResourceView1Vtbl"
  },
  {
    "label": "D3D10_STANDARD_MULTISAMPLE_QUALITY_LEVELS",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "D3D10_STANDARD_MULTISAMPLE_QUALITY_LEVELS"
  },
  {
    "label": "ID3D10Device1Vtbl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ID3D10Device1Vtbl"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# ifndef __REQUIRED_RPCNDR_H_VERSION__ # define __REQUIRED_RPCNDR_H_VERSION__ 5 0 0 # endif # ifndef __REQUIRED_RPCSAL_H_VERSION__ # define __REQUIRED_RPCSAL_H_VERSION__ 1 0 0 # endif # include \" rpc . h \" # include \" rpcndr . h \" # ifndef __RPCNDR_H_VERSION__ # error this stub requires an updated version of<rpcndr . h> # endif # ifndef COM_NO_WINDOWS_H # include \" windows . h \" # include \" ole2 . h \" # endif # ifndef __d3d10_1_h__ # define __d3d10_1_h__ # if)",
    "insertText": "defined(_MSC_VER) && (_MSC_VER >= 1020)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# endif # ifndef __ID3D10ShaderResourceView1_FWD_DEFINED__ # define __ID3D10ShaderResourceView1_FWD_DEFINED__ typedef interface ID3D10ShaderResourceView1 ID3D10ShaderResourceView1 ; # endif # ifndef __ID3D10Device1_FWD_DEFINED__ # define __ID3D10Device1_FWD_DEFINED__ typedef interface ID3D10Device1 ID3D10Device1 ; # endif # include \" oaidl . h \" # include \" ocidl . h \" # ifdef __cplusplus \" C \" { # endif # if)",
    "insertText": "defined(__d3d10_h__ ) && !defined( D3D10_ARBITRARY_HEADER_ORDERING ) #error d3d10.h is included before d3d10_1.h, and it will confuse tools that honor SAL annotations. \\ If possibly targeting d3d10.1, include d3d10_1.h instead of d3d10.h, or ensure d3d10_1.h is included before d3d10.h #endif #ifndef _D3D10_1_CONSTANTS #define _D3D10_1_CONSTANTS #define D3D10_1_DEFAULT_SAMPLE_MASK ( 0xffffffff ) #define D3D10_1_FLOAT16_FUSED_TOLERANCE_IN_ULP ( 0.6 ) #define D3D10_1_FLOAT32_TO_INTEGER_TOLERANCE_IN_ULP ( 0.6f ) #define D3D10_1_GS_INPUT_REGISTER_COUNT ( 32 ) #define D3D10_1_IA_VERTEX_INPUT_RESOURCE_SLOT_COUNT ( 32 ) #define D3D10_1_IA_VERTEX_INPUT_STRUCTURE_ELEMENTS_COMPONENTS ( 128 ) #define D3D10_1_IA_VERTEX_INPUT_STRUCTURE_ELEMENT_COUNT ( 32 ) #define D3D10_1_PS_OUTPUT_MASK_REGISTER_COMPONENTS ( 1 ) #define D3D10_1_PS_OUTPUT_MASK_REGISTER_COMPONENT_BIT_COUNT ( 32 ) #define D3D10_1_PS_OUTPUT_MASK_REGISTER_COUNT ( 1 ) #define D3D10_1_SHADER_MAJOR_VERSION ( 4 ) #define D3D10_1_SHADER_MINOR_VERSION ( 1 ) #define D3D10_1_SO_BUFFER_MAX_STRIDE_IN_BYTES ( 2048 ) #define D3D10_1_SO_BUFFER_MAX_WRITE_WINDOW_IN_BYTES ( 256 ) #define D3D10_1_SO_BUFFER_SLOT_COUNT ( 4 ) #define D3D10_1_SO_MULTIPLE_BUFFER_ELEMENTS_PER_BUFFER ( 1 ) #define D3D10_1_SO_SINGLE_BUFFER_COMPONENT_LIMIT ( 64 ) #define D3D10_1_STANDARD_VERTEX_ELEMENT_COUNT ( 32 ) #define D3D10_1_SUBPIXEL_FRACTIONAL_BIT_COUNT ( 8 ) #define D3D10_1_VS_INPUT_REGISTER_COUNT ( 32 ) #define D3D10_1_VS_OUTPUT_REGISTER_COUNT ( 32 ) #endif #include <winapifamily.h> #include \"d3d10.h\" #pragma region Desktop Family #if WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_DESKTOP)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (D3D10_FEATURE_LEVEL_10_0 = 0 xa000,D3D10_FEATURE_LEVEL_10_1 = 0 xa100,D3D10_FEATURE_LEVEL_9_1 = 0 x9100,D3D10_FEATURE_LEVEL_9_2 = 0 x9200,D3D10_FEATURE_LEVEL_9_3 = 0 x9300 } D3D10_FEATURE_LEVEL1 ; typedef struct D3D10_RENDER_TARGET_BLEND_DESC1 { BOOL BlendEnable ; D3D10_BLEND SrcBlend ; D3D10_BLEND DestBlend ; D3D10_BLEND_OP BlendOp ; D3D10_BLEND SrcBlendAlpha ; D3D10_BLEND DestBlendAlpha ; D3D10_BLEND_OP BlendOpAlpha ; UINT8 RenderTargetWriteMask ; } D3D10_RENDER_TARGET_BLEND_DESC1 ; typedef struct D3D10_BLEND_DESC1 { BOOL AlphaToCoverageEnable ; BOOL IndependentBlendEnable ; D3D10_RENDER_TARGET_BLEND_DESC1 RenderTarget [ 8 ] ; } D3D10_BLEND_DESC1 ; RPC_IF_HANDLE __MIDL_itf_d3d10_1_0000_0000_v0_0_c_ifspec ; RPC_IF_HANDLE __MIDL_itf_d3d10_1_0000_0000_v0_0_s_ifspec ; # ifndef __ID3D10BlendState1_INTERFACE_DEFINED__ # define __ID3D10BlendState1_INTERFACE_DEFINED__ EXTERN_C const IID IID_ID3D10BlendState1 ; # if)",
    "insertText": "defined(__cplusplus) && !defined(CINTERFACE) MIDL_INTERFACE(\"EDAD8D99-8A35-4d6d-8566-2EA276CDE161\")"
  },
  {
    "label": "GetDesc1()",
    "kind": "Method",
    "detail": "Function (public : void STDMETHODCALLTYPE)",
    "insertText": "GetDesc1(_Out_ D3D10_BLEND_DESC1 *pDesc)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (} ; # else typedef struct ID3D10BlendState1Vtbl { BEGIN_INTERFACE)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *QueryInterface )( ID3D10BlendState1 * This, REFIID riid, _COM_Outptr_ void **ppvObject)"
  },
  {
    "label": "ULONG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ULONG(STDMETHODCALLTYPE *AddRef )( ID3D10BlendState1 * This)"
  },
  {
    "label": "ULONG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ULONG(STDMETHODCALLTYPE *Release )( ID3D10BlendState1 * This)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *GetDevice )( ID3D10BlendState1 * This, _Out_ ID3D10Device **ppDevice)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetPrivateData )( ID3D10BlendState1 * This, _In_ REFGUID guid, _Inout_ UINT *pDataSize, _Out_writes_bytes_opt_(*pDataSize) void *pData)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *SetPrivateData )( ID3D10BlendState1 * This, _In_ REFGUID guid, _In_ UINT DataSize, _In_reads_bytes_opt_(DataSize) const void *pData)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *SetPrivateDataInterface )( ID3D10BlendState1 * This, _In_ REFGUID guid, _In_opt_ const IUnknown *pData)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *GetDesc )( ID3D10BlendState1 * This, _Out_ D3D10_BLEND_DESC *pDesc)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *GetDesc1 )( ID3D10BlendState1 * This, _Out_ D3D10_BLEND_DESC1 *pDesc)"
  },
  {
    "label": "ID3D10BlendState1_QueryInterface()",
    "kind": "Method",
    "detail": "Function (END_INTERFACE } ID3D10BlendState1Vtbl ; interface ID3D10BlendState1 { CONST_VTBL struct ID3D10BlendState1Vtbl* lpVtbl ; } ; # ifdef COBJMACROS # define)",
    "insertText": "ID3D10BlendState1_QueryInterface(This,riid,ppvObject) \\ ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) #define ID3D10BlendState1_AddRef(This) \\ ( (This)->lpVtbl -> AddRef(This) ) #define ID3D10BlendState1_Release(This) \\ ( (This)->lpVtbl -> Release(This) ) #define ID3D10BlendState1_GetDevice(This,ppDevice) \\ ( (This)->lpVtbl -> GetDevice(This,ppDevice) ) #define ID3D10BlendState1_GetPrivateData(This,guid,pDataSize,pData) \\ ( (This)->lpVtbl -> GetPrivateData(This,guid,pDataSize,pData) ) #define ID3D10BlendState1_SetPrivateData(This,guid,DataSize,pData) \\ ( (This)->lpVtbl -> SetPrivateData(This,guid,DataSize,pData) ) #define ID3D10BlendState1_SetPrivateDataInterface(This,guid,pData) \\ ( (This)->lpVtbl -> SetPrivateDataInterface(This,guid,pData) ) #define ID3D10BlendState1_GetDesc(This,pDesc) \\ ( (This)->lpVtbl -> GetDesc(This,pDesc) ) #define ID3D10BlendState1_GetDesc1(This,pDesc) \\ ( (This)->lpVtbl -> GetDesc1(This,pDesc))"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (UINT MostDetailedMip ; UINT MipLevels ; UINT First2DArrayFace ; UINT NumCubes ; } D3D10_TEXCUBE_ARRAY_SRV1 ; typedef D3D_SRV_DIMENSION D3D10_SRV_DIMENSION1 ; typedef struct D3D10_SHADER_RESOURCE_VIEW_DESC1 { DXGI_FORMAT Format ; D3D10_SRV_DIMENSION1 ViewDimension ; union { D3D10_BUFFER_SRV Buffer ; D3D10_TEX1D_SRV Texture1D ; D3D10_TEX1D_ARRAY_SRV Texture1DArray ; D3D10_TEX2D_SRV Texture2D ; D3D10_TEX2D_ARRAY_SRV Texture2DArray ; D3D10_TEX2DMS_SRV Texture2DMS ; D3D10_TEX2DMS_ARRAY_SRV Texture2DMSArray ; D3D10_TEX3D_SRV Texture3D ; D3D10_TEXCUBE_SRV TextureCube ; D3D10_TEXCUBE_ARRAY_SRV1 TextureCubeArray ; } ; } D3D10_SHADER_RESOURCE_VIEW_DESC1 ; RPC_IF_HANDLE __MIDL_itf_d3d10_1_0000_0001_v0_0_c_ifspec ; RPC_IF_HANDLE __MIDL_itf_d3d10_1_0000_0001_v0_0_s_ifspec ; # ifndef __ID3D10ShaderResourceView1_INTERFACE_DEFINED__ # define __ID3D10ShaderResourceView1_INTERFACE_DEFINED__ EXTERN_C const IID IID_ID3D10ShaderResourceView1 ; # if)",
    "insertText": "defined(__cplusplus) && !defined(CINTERFACE) MIDL_INTERFACE(\"9B7E4C87-342C-4106-A19F-4F2704F689F0\")"
  },
  {
    "label": "GetDesc1()",
    "kind": "Method",
    "detail": "Function (public : void STDMETHODCALLTYPE)",
    "insertText": "GetDesc1(_Out_ D3D10_SHADER_RESOURCE_VIEW_DESC1 *pDesc)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (} ; # else typedef struct ID3D10ShaderResourceView1Vtbl { BEGIN_INTERFACE)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *QueryInterface )( ID3D10ShaderResourceView1 * This, REFIID riid, _COM_Outptr_ void **ppvObject)"
  },
  {
    "label": "ULONG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ULONG(STDMETHODCALLTYPE *AddRef )( ID3D10ShaderResourceView1 * This)"
  },
  {
    "label": "ULONG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ULONG(STDMETHODCALLTYPE *Release )( ID3D10ShaderResourceView1 * This)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *GetDevice )( ID3D10ShaderResourceView1 * This, _Out_ ID3D10Device **ppDevice)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetPrivateData )( ID3D10ShaderResourceView1 * This, _In_ REFGUID guid, _Inout_ UINT *pDataSize, _Out_writes_bytes_opt_(*pDataSize) void *pData)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *SetPrivateData )( ID3D10ShaderResourceView1 * This, _In_ REFGUID guid, _In_ UINT DataSize, _In_reads_bytes_opt_(DataSize) const void *pData)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *SetPrivateDataInterface )( ID3D10ShaderResourceView1 * This, _In_ REFGUID guid, _In_opt_ const IUnknown *pData)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *GetResource )( ID3D10ShaderResourceView1 * This, _Out_ ID3D10Resource **ppResource)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *GetDesc )( ID3D10ShaderResourceView1 * This, _Out_ D3D10_SHADER_RESOURCE_VIEW_DESC *pDesc)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *GetDesc1 )( ID3D10ShaderResourceView1 * This, _Out_ D3D10_SHADER_RESOURCE_VIEW_DESC1 *pDesc)"
  },
  {
    "label": "ID3D10ShaderResourceView1_QueryInterface()",
    "kind": "Method",
    "detail": "Function (END_INTERFACE } ID3D10ShaderResourceView1Vtbl ; interface ID3D10ShaderResourceView1 { CONST_VTBL struct ID3D10ShaderResourceView1Vtbl* lpVtbl ; } ; # ifdef COBJMACROS # define)",
    "insertText": "ID3D10ShaderResourceView1_QueryInterface(This,riid,ppvObject) \\ ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) #define ID3D10ShaderResourceView1_AddRef(This) \\ ( (This)->lpVtbl -> AddRef(This) ) #define ID3D10ShaderResourceView1_Release(This) \\ ( (This)->lpVtbl -> Release(This) ) #define ID3D10ShaderResourceView1_GetDevice(This,ppDevice) \\ ( (This)->lpVtbl -> GetDevice(This,ppDevice) ) #define ID3D10ShaderResourceView1_GetPrivateData(This,guid,pDataSize,pData) \\ ( (This)->lpVtbl -> GetPrivateData(This,guid,pDataSize,pData) ) #define ID3D10ShaderResourceView1_SetPrivateData(This,guid,DataSize,pData) \\ ( (This)->lpVtbl -> SetPrivateData(This,guid,DataSize,pData) ) #define ID3D10ShaderResourceView1_SetPrivateDataInterface(This,guid,pData) \\ ( (This)->lpVtbl -> SetPrivateDataInterface(This,guid,pData) ) #define ID3D10ShaderResourceView1_GetResource(This,ppResource) \\ ( (This)->lpVtbl -> GetResource(This,ppResource) ) #define ID3D10ShaderResourceView1_GetDesc(This,pDesc) \\ ( (This)->lpVtbl -> GetDesc(This,pDesc) ) #define ID3D10ShaderResourceView1_GetDesc1(This,pDesc) \\ ( (This)->lpVtbl -> GetDesc1(This,pDesc))"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (D3D10_STANDARD_MULTISAMPLE_PATTERN = 0 xffffffff,D3D10_CENTER_MULTISAMPLE_PATTERN = 0 xfffffffe } D3D10_STANDARD_MULTISAMPLE_QUALITY_LEVELS ; RPC_IF_HANDLE __MIDL_itf_d3d10_1_0000_0002_v0_0_c_ifspec ; RPC_IF_HANDLE __MIDL_itf_d3d10_1_0000_0002_v0_0_s_ifspec ; # ifndef __ID3D10Device1_INTERFACE_DEFINED__ # define __ID3D10Device1_INTERFACE_DEFINED__ EXTERN_C const IID IID_ID3D10Device1 ; # if)",
    "insertText": "defined(__cplusplus) && !defined(CINTERFACE) MIDL_INTERFACE(\"9B7E4C8F-342C-4106-A19F-4F2704F689F0\")"
  },
  {
    "label": "CreateShaderResourceView1()",
    "kind": "Method",
    "detail": "Function (public : HRESULT STDMETHODCALLTYPE)",
    "insertText": "CreateShaderResourceView1(_In_ ID3D10Resource *pResource, _In_opt_ const D3D10_SHADER_RESOURCE_VIEW_DESC1 *pDesc, _Out_opt_ ID3D10ShaderResourceView1 **ppSRView)"
  },
  {
    "label": "CreateBlendState1()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "CreateBlendState1(_In_ const D3D10_BLEND_DESC1 *pBlendStateDesc, _Out_opt_ ID3D10BlendState1 **ppBlendState)"
  },
  {
    "label": "GetFeatureLevel()",
    "kind": "Method",
    "detail": "Function (D3D10_FEATURE_LEVEL1 STDMETHODCALLTYPE)",
    "insertText": "GetFeatureLevel(void)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (} ; # else typedef struct ID3D10Device1Vtbl { BEGIN_INTERFACE)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *QueryInterface )( ID3D10Device1 * This, REFIID riid, _COM_Outptr_ void **ppvObject)"
  },
  {
    "label": "ULONG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ULONG(STDMETHODCALLTYPE *AddRef )( ID3D10Device1 * This)"
  },
  {
    "label": "ULONG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ULONG(STDMETHODCALLTYPE *Release )( ID3D10Device1 * This)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *VSSetConstantBuffers )( ID3D10Device1 * This, _In_range_( 0, D3D10_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - 1 ) UINT StartSlot, _In_range_( 0, D3D10_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - StartSlot ) UINT NumBuffers, _In_reads_opt_(NumBuffers) ID3D10Buffer *const *ppConstantBuffers)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *PSSetShaderResources )( ID3D10Device1 * This, _In_range_( 0, D3D10_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - 1 ) UINT StartSlot, _In_range_( 0, D3D10_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - StartSlot ) UINT NumViews, _In_reads_opt_(NumViews) ID3D10ShaderResourceView *const *ppShaderResourceViews)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *PSSetShader )( ID3D10Device1 * This, _In_opt_ ID3D10PixelShader *pPixelShader)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *PSSetSamplers )( ID3D10Device1 * This, _In_range_( 0, D3D10_COMMONSHADER_SAMPLER_SLOT_COUNT - 1 ) UINT StartSlot, _In_range_( 0, D3D10_COMMONSHADER_SAMPLER_SLOT_COUNT - StartSlot ) UINT NumSamplers, _In_reads_opt_(NumSamplers) ID3D10SamplerState *const *ppSamplers)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *VSSetShader )( ID3D10Device1 * This, _In_opt_ ID3D10VertexShader *pVertexShader)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *DrawIndexed )( ID3D10Device1 * This, _In_ UINT IndexCount, _In_ UINT StartIndexLocation, _In_ INT BaseVertexLocation)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *Draw )( ID3D10Device1 * This, _In_ UINT VertexCount, _In_ UINT StartVertexLocation)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *PSSetConstantBuffers )( ID3D10Device1 * This, _In_range_( 0, D3D10_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - 1 ) UINT StartSlot, _In_range_( 0, D3D10_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - StartSlot ) UINT NumBuffers, _In_reads_opt_(NumBuffers) ID3D10Buffer *const *ppConstantBuffers)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *IASetInputLayout )( ID3D10Device1 * This, _In_opt_ ID3D10InputLayout *pInputLayout)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *IASetVertexBuffers )( ID3D10Device1 * This, _In_range_( 0, D3D10_1_IA_VERTEX_INPUT_RESOURCE_SLOT_COUNT - 1 ) UINT StartSlot, _In_range_( 0, D3D10_1_IA_VERTEX_INPUT_RESOURCE_SLOT_COUNT - StartSlot ) UINT NumBuffers, _In_reads_opt_(NumBuffers) ID3D10Buffer *const *ppVertexBuffers, _In_reads_opt_(NumBuffers) const UINT *pStrides, _In_reads_opt_(NumBuffers) const UINT *pOffsets)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *IASetIndexBuffer )( ID3D10Device1 * This, _In_opt_ ID3D10Buffer *pIndexBuffer, _In_ DXGI_FORMAT Format, _In_ UINT Offset)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *DrawIndexedInstanced )( ID3D10Device1 * This, _In_ UINT IndexCountPerInstance, _In_ UINT InstanceCount, _In_ UINT StartIndexLocation, _In_ INT BaseVertexLocation, _In_ UINT StartInstanceLocation)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *DrawInstanced )( ID3D10Device1 * This, _In_ UINT VertexCountPerInstance, _In_ UINT InstanceCount, _In_ UINT StartVertexLocation, _In_ UINT StartInstanceLocation)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *GSSetConstantBuffers )( ID3D10Device1 * This, _In_range_( 0, D3D10_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - 1 ) UINT StartSlot, _In_range_( 0, D3D10_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - StartSlot ) UINT NumBuffers, _In_reads_opt_(NumBuffers) ID3D10Buffer *const *ppConstantBuffers)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *GSSetShader )( ID3D10Device1 * This, _In_opt_ ID3D10GeometryShader *pShader)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *IASetPrimitiveTopology )( ID3D10Device1 * This, _In_ D3D10_PRIMITIVE_TOPOLOGY Topology)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *VSSetShaderResources )( ID3D10Device1 * This, _In_range_( 0, D3D10_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - 1 ) UINT StartSlot, _In_range_( 0, D3D10_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - StartSlot ) UINT NumViews, _In_reads_opt_(NumViews) ID3D10ShaderResourceView *const *ppShaderResourceViews)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *VSSetSamplers )( ID3D10Device1 * This, _In_range_( 0, D3D10_COMMONSHADER_SAMPLER_SLOT_COUNT - 1 ) UINT StartSlot, _In_range_( 0, D3D10_COMMONSHADER_SAMPLER_SLOT_COUNT - StartSlot ) UINT NumSamplers, _In_reads_opt_(NumSamplers) ID3D10SamplerState *const *ppSamplers)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *SetPredication )( ID3D10Device1 * This, _In_opt_ ID3D10Predicate *pPredicate, _In_ BOOL PredicateValue)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *GSSetShaderResources )( ID3D10Device1 * This, _In_range_( 0, D3D10_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - 1 ) UINT StartSlot, _In_range_( 0, D3D10_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - StartSlot ) UINT NumViews, _In_reads_opt_(NumViews) ID3D10ShaderResourceView *const *ppShaderResourceViews)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *GSSetSamplers )( ID3D10Device1 * This, _In_range_( 0, D3D10_COMMONSHADER_SAMPLER_SLOT_COUNT - 1 ) UINT StartSlot, _In_range_( 0, D3D10_COMMONSHADER_SAMPLER_SLOT_COUNT - StartSlot ) UINT NumSamplers, _In_reads_opt_(NumSamplers) ID3D10SamplerState *const *ppSamplers)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *OMSetRenderTargets )( ID3D10Device1 * This, _In_range_( 0, D3D10_SIMULTANEOUS_RENDER_TARGET_COUNT ) UINT NumViews, _In_reads_opt_(NumViews) ID3D10RenderTargetView *const *ppRenderTargetViews, _In_opt_ ID3D10DepthStencilView *pDepthStencilView)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *OMSetBlendState )( ID3D10Device1 * This, _In_opt_ ID3D10BlendState *pBlendState, _In_ const FLOAT BlendFactor[ 4 ], _In_ UINT SampleMask)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *OMSetDepthStencilState )( ID3D10Device1 * This, _In_opt_ ID3D10DepthStencilState *pDepthStencilState, _In_ UINT StencilRef)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *SOSetTargets )( ID3D10Device1 * This, _In_range_( 0, D3D10_SO_BUFFER_SLOT_COUNT) UINT NumBuffers, _In_reads_opt_(NumBuffers) ID3D10Buffer *const *ppSOTargets, _In_reads_opt_(NumBuffers) const UINT *pOffsets)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *DrawAuto )( ID3D10Device1 * This)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *RSSetState )( ID3D10Device1 * This, _In_opt_ ID3D10RasterizerState *pRasterizerState)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *RSSetViewports )( ID3D10Device1 * This, _In_range_(0, D3D10_VIEWPORT_AND_SCISSORRECT_OBJECT_COUNT_PER_PIPELINE) UINT NumViewports, _In_reads_opt_(NumViewports) const D3D10_VIEWPORT *pViewports)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *RSSetScissorRects )( ID3D10Device1 * This, _In_range_(0, D3D10_VIEWPORT_AND_SCISSORRECT_OBJECT_COUNT_PER_PIPELINE) UINT NumRects, _In_reads_opt_(NumRects) const D3D10_RECT *pRects)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *CopySubresourceRegion )( ID3D10Device1 * This, _In_ ID3D10Resource *pDstResource, _In_ UINT DstSubresource, _In_ UINT DstX, _In_ UINT DstY, _In_ UINT DstZ, _In_ ID3D10Resource *pSrcResource, _In_ UINT SrcSubresource, _In_opt_ const D3D10_BOX *pSrcBox)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *CopyResource )( ID3D10Device1 * This, _In_ ID3D10Resource *pDstResource, _In_ ID3D10Resource *pSrcResource)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *UpdateSubresource )( ID3D10Device1 * This, _In_ ID3D10Resource *pDstResource, _In_ UINT DstSubresource, _In_opt_ const D3D10_BOX *pDstBox, _In_ const void *pSrcData, _In_ UINT SrcRowPitch, _In_ UINT SrcDepthPitch)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *ClearRenderTargetView )( ID3D10Device1 * This, _In_ ID3D10RenderTargetView *pRenderTargetView, _In_ const FLOAT ColorRGBA[ 4 ])"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *ClearDepthStencilView )( ID3D10Device1 * This, _In_ ID3D10DepthStencilView *pDepthStencilView, _In_ UINT ClearFlags, _In_ FLOAT Depth, _In_ UINT8 Stencil)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *GenerateMips )( ID3D10Device1 * This, _In_ ID3D10ShaderResourceView *pShaderResourceView)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *ResolveSubresource )( ID3D10Device1 * This, _In_ ID3D10Resource *pDstResource, _In_ UINT DstSubresource, _In_ ID3D10Resource *pSrcResource, _In_ UINT SrcSubresource, _In_ DXGI_FORMAT Format)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *VSGetConstantBuffers )( ID3D10Device1 * This, _In_range_( 0, D3D10_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - 1 ) UINT StartSlot, _In_range_( 0, D3D10_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - StartSlot ) UINT NumBuffers, _Out_writes_opt_(NumBuffers) ID3D10Buffer **ppConstantBuffers)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *PSGetShaderResources )( ID3D10Device1 * This, _In_range_( 0, D3D10_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - 1 ) UINT StartSlot, _In_range_( 0, D3D10_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - StartSlot ) UINT NumViews, _Out_writes_opt_(NumViews) ID3D10ShaderResourceView **ppShaderResourceViews)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *PSGetShader )( ID3D10Device1 * This, _Out_ ID3D10PixelShader **ppPixelShader)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *PSGetSamplers )( ID3D10Device1 * This, _In_range_( 0, D3D10_COMMONSHADER_SAMPLER_SLOT_COUNT - 1 ) UINT StartSlot, _In_range_( 0, D3D10_COMMONSHADER_SAMPLER_SLOT_COUNT - StartSlot ) UINT NumSamplers, _Out_writes_opt_(NumSamplers) ID3D10SamplerState **ppSamplers)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *VSGetShader )( ID3D10Device1 * This, _Out_ ID3D10VertexShader **ppVertexShader)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *PSGetConstantBuffers )( ID3D10Device1 * This, _In_range_( 0, D3D10_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - 1 ) UINT StartSlot, _In_range_( 0, D3D10_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - StartSlot ) UINT NumBuffers, _Out_writes_opt_(NumBuffers) ID3D10Buffer **ppConstantBuffers)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *IAGetInputLayout )( ID3D10Device1 * This, _Out_ ID3D10InputLayout **ppInputLayout)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *IAGetVertexBuffers )( ID3D10Device1 * This, _In_range_( 0, D3D10_1_IA_VERTEX_INPUT_RESOURCE_SLOT_COUNT - 1 ) UINT StartSlot, _In_range_( 0, D3D10_1_IA_VERTEX_INPUT_RESOURCE_SLOT_COUNT - StartSlot ) UINT NumBuffers, _Out_writes_opt_(NumBuffers) ID3D10Buffer **ppVertexBuffers, _Out_writes_opt_(NumBuffers) UINT *pStrides, _Out_writes_opt_(NumBuffers) UINT *pOffsets)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *IAGetIndexBuffer )( ID3D10Device1 * This, _Out_opt_ ID3D10Buffer **pIndexBuffer, _Out_opt_ DXGI_FORMAT *Format, _Out_opt_ UINT *Offset)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *GSGetConstantBuffers )( ID3D10Device1 * This, _In_range_( 0, D3D10_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - 1 ) UINT StartSlot, _In_range_( 0, D3D10_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - StartSlot ) UINT NumBuffers, _Out_writes_opt_(NumBuffers) ID3D10Buffer **ppConstantBuffers)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *GSGetShader )( ID3D10Device1 * This, _Out_ ID3D10GeometryShader **ppGeometryShader)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *IAGetPrimitiveTopology )( ID3D10Device1 * This, _Out_ D3D10_PRIMITIVE_TOPOLOGY *pTopology)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *VSGetShaderResources )( ID3D10Device1 * This, _In_range_( 0, D3D10_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - 1 ) UINT StartSlot, _In_range_( 0, D3D10_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - StartSlot ) UINT NumViews, _Out_writes_opt_(NumViews) ID3D10ShaderResourceView **ppShaderResourceViews)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *VSGetSamplers )( ID3D10Device1 * This, _In_range_( 0, D3D10_COMMONSHADER_SAMPLER_SLOT_COUNT - 1 ) UINT StartSlot, _In_range_( 0, D3D10_COMMONSHADER_SAMPLER_SLOT_COUNT - StartSlot ) UINT NumSamplers, _Out_writes_opt_(NumSamplers) ID3D10SamplerState **ppSamplers)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *GetPredication )( ID3D10Device1 * This, _Out_opt_ ID3D10Predicate **ppPredicate, _Out_opt_ BOOL *pPredicateValue)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *GSGetShaderResources )( ID3D10Device1 * This, _In_range_( 0, D3D10_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - 1 ) UINT StartSlot, _In_range_( 0, D3D10_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - StartSlot ) UINT NumViews, _Out_writes_opt_(NumViews) ID3D10ShaderResourceView **ppShaderResourceViews)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *GSGetSamplers )( ID3D10Device1 * This, _In_range_( 0, D3D10_COMMONSHADER_SAMPLER_SLOT_COUNT - 1 ) UINT StartSlot, _In_range_( 0, D3D10_COMMONSHADER_SAMPLER_SLOT_COUNT - StartSlot ) UINT NumSamplers, _Out_writes_opt_(NumSamplers) ID3D10SamplerState **ppSamplers)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *OMGetRenderTargets )( ID3D10Device1 * This, _In_range_( 0, D3D10_SIMULTANEOUS_RENDER_TARGET_COUNT ) UINT NumViews, _Out_writes_opt_(NumViews) ID3D10RenderTargetView **ppRenderTargetViews, _Out_opt_ ID3D10DepthStencilView **ppDepthStencilView)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *OMGetBlendState )( ID3D10Device1 * This, _Out_opt_ ID3D10BlendState **ppBlendState, _Out_opt_ FLOAT BlendFactor[ 4 ], _Out_opt_ UINT *pSampleMask)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *OMGetDepthStencilState )( ID3D10Device1 * This, _Out_opt_ ID3D10DepthStencilState **ppDepthStencilState, _Out_opt_ UINT *pStencilRef)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *SOGetTargets )( ID3D10Device1 * This, _In_range_( 0, D3D10_SO_BUFFER_SLOT_COUNT ) UINT NumBuffers, _Out_writes_opt_(NumBuffers) ID3D10Buffer **ppSOTargets, _Out_writes_opt_(NumBuffers) UINT *pOffsets)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *RSGetState )( ID3D10Device1 * This, _Out_ ID3D10RasterizerState **ppRasterizerState)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *RSGetViewports )( ID3D10Device1 * This, _Inout_ UINT *NumViewports, _Out_writes_opt_(*NumViewports) D3D10_VIEWPORT *pViewports)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *RSGetScissorRects )( ID3D10Device1 * This, _Inout_ UINT *NumRects, _Out_writes_opt_(*NumRects) D3D10_RECT *pRects)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetDeviceRemovedReason )( ID3D10Device1 * This)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *SetExceptionMode )( ID3D10Device1 * This, UINT RaiseFlags)"
  },
  {
    "label": "UINT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UINT(STDMETHODCALLTYPE *GetExceptionMode )( ID3D10Device1 * This)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetPrivateData )( ID3D10Device1 * This, _In_ REFGUID guid, _Inout_ UINT *pDataSize, _Out_writes_bytes_opt_(*pDataSize) void *pData)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *SetPrivateData )( ID3D10Device1 * This, _In_ REFGUID guid, _In_ UINT DataSize, _In_reads_bytes_opt_(DataSize) const void *pData)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *SetPrivateDataInterface )( ID3D10Device1 * This, _In_ REFGUID guid, _In_opt_ const IUnknown *pData)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *ClearState )( ID3D10Device1 * This)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *Flush )( ID3D10Device1 * This)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *CreateBuffer )( ID3D10Device1 * This, _In_ const D3D10_BUFFER_DESC *pDesc, _In_opt_ const D3D10_SUBRESOURCE_DATA *pInitialData, _Out_opt_ ID3D10Buffer **ppBuffer)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *CreateTexture1D )( ID3D10Device1 * This, _In_ const D3D10_TEXTURE1D_DESC *pDesc, _In_reads_opt_(_Inexpressible_(pDesc->MipLevels * pDesc->ArraySize)) const D3D10_SUBRESOURCE_DATA *pInitialData, _Out_ ID3D10Texture1D **ppTexture1D)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *CreateTexture2D )( ID3D10Device1 * This, _In_ const D3D10_TEXTURE2D_DESC *pDesc, _In_reads_opt_(_Inexpressible_(pDesc->MipLevels * pDesc->ArraySize)) const D3D10_SUBRESOURCE_DATA *pInitialData, _Out_ ID3D10Texture2D **ppTexture2D)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *CreateTexture3D )( ID3D10Device1 * This, _In_ const D3D10_TEXTURE3D_DESC *pDesc, _In_reads_opt_(_Inexpressible_(pDesc->MipLevels)) const D3D10_SUBRESOURCE_DATA *pInitialData, _Out_ ID3D10Texture3D **ppTexture3D)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *CreateShaderResourceView )( ID3D10Device1 * This, _In_ ID3D10Resource *pResource, _In_opt_ const D3D10_SHADER_RESOURCE_VIEW_DESC *pDesc, _Out_opt_ ID3D10ShaderResourceView **ppSRView)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *CreateRenderTargetView )( ID3D10Device1 * This, _In_ ID3D10Resource *pResource, _In_opt_ const D3D10_RENDER_TARGET_VIEW_DESC *pDesc, _Out_opt_ ID3D10RenderTargetView **ppRTView)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *CreateDepthStencilView )( ID3D10Device1 * This, _In_ ID3D10Resource *pResource, _In_opt_ const D3D10_DEPTH_STENCIL_VIEW_DESC *pDesc, _Out_opt_ ID3D10DepthStencilView **ppDepthStencilView)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *CreateInputLayout )( ID3D10Device1 * This, _In_reads_(NumElements) const D3D10_INPUT_ELEMENT_DESC *pInputElementDescs, _In_range_( 0, D3D10_1_IA_VERTEX_INPUT_STRUCTURE_ELEMENT_COUNT ) UINT NumElements, _In_reads_(BytecodeLength) const void *pShaderBytecodeWithInputSignature, _In_ SIZE_T BytecodeLength, _Out_opt_ ID3D10InputLayout **ppInputLayout)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *CreateVertexShader )( ID3D10Device1 * This, _In_reads_(BytecodeLength) const void *pShaderBytecode, _In_ SIZE_T BytecodeLength, _Out_opt_ ID3D10VertexShader **ppVertexShader)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *CreateGeometryShader )( ID3D10Device1 * This, _In_reads_(BytecodeLength) const void *pShaderBytecode, _In_ SIZE_T BytecodeLength, _Out_opt_ ID3D10GeometryShader **ppGeometryShader)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *CreateGeometryShaderWithStreamOutput )( ID3D10Device1 * This, _In_reads_(BytecodeLength) const void *pShaderBytecode, _In_ SIZE_T BytecodeLength, _In_reads_opt_(NumEntries) const D3D10_SO_DECLARATION_ENTRY *pSODeclaration, _In_range_( 0, D3D10_SO_SINGLE_BUFFER_COMPONENT_LIMIT ) UINT NumEntries, _In_ UINT OutputStreamStride, _Out_opt_ ID3D10GeometryShader **ppGeometryShader)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *CreatePixelShader )( ID3D10Device1 * This, _In_reads_(BytecodeLength) const void *pShaderBytecode, _In_ SIZE_T BytecodeLength, _Out_opt_ ID3D10PixelShader **ppPixelShader)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *CreateBlendState )( ID3D10Device1 * This, _In_ const D3D10_BLEND_DESC *pBlendStateDesc, _Out_opt_ ID3D10BlendState **ppBlendState)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *CreateDepthStencilState )( ID3D10Device1 * This, _In_ const D3D10_DEPTH_STENCIL_DESC *pDepthStencilDesc, _Out_opt_ ID3D10DepthStencilState **ppDepthStencilState)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *CreateRasterizerState )( ID3D10Device1 * This, _In_ const D3D10_RASTERIZER_DESC *pRasterizerDesc, _Out_opt_ ID3D10RasterizerState **ppRasterizerState)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *CreateSamplerState )( ID3D10Device1 * This, _In_ const D3D10_SAMPLER_DESC *pSamplerDesc, _Out_opt_ ID3D10SamplerState **ppSamplerState)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *CreateQuery )( ID3D10Device1 * This, _In_ const D3D10_QUERY_DESC *pQueryDesc, _Out_opt_ ID3D10Query **ppQuery)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *CreatePredicate )( ID3D10Device1 * This, _In_ const D3D10_QUERY_DESC *pPredicateDesc, _Out_opt_ ID3D10Predicate **ppPredicate)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *CreateCounter )( ID3D10Device1 * This, _In_ const D3D10_COUNTER_DESC *pCounterDesc, _Out_opt_ ID3D10Counter **ppCounter)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *CheckFormatSupport )( ID3D10Device1 * This, _In_ DXGI_FORMAT Format, _Out_ UINT *pFormatSupport)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *CheckMultisampleQualityLevels )( ID3D10Device1 * This, _In_ DXGI_FORMAT Format, _In_ UINT SampleCount, _Out_ UINT *pNumQualityLevels)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *CheckCounterInfo )( ID3D10Device1 * This, _Out_ D3D10_COUNTER_INFO *pCounterInfo)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *CheckCounter )( ID3D10Device1 * This, _In_ const D3D10_COUNTER_DESC *pDesc, _Out_ D3D10_COUNTER_TYPE *pType, _Out_ UINT *pActiveCounters, _Out_writes_opt_(*pNameLength) LPSTR szName, _Inout_opt_ UINT *pNameLength, _Out_writes_opt_(*pUnitsLength) LPSTR szUnits, _Inout_opt_ UINT *pUnitsLength, _Out_writes_opt_(*pDescriptionLength) LPSTR szDescription, _Inout_opt_ UINT *pDescriptionLength)"
  },
  {
    "label": "UINT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UINT(STDMETHODCALLTYPE *GetCreationFlags )( ID3D10Device1 * This)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *OpenSharedResource )( ID3D10Device1 * This, _In_ HANDLE hResource, _In_ REFIID ReturnedInterface, _Out_opt_ void **ppResource)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *SetTextFilterSize )( ID3D10Device1 * This, _In_ UINT Width, _In_ UINT Height)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *GetTextFilterSize )( ID3D10Device1 * This, _Out_opt_ UINT *pWidth, _Out_opt_ UINT *pHeight)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *CreateShaderResourceView1 )( ID3D10Device1 * This, _In_ ID3D10Resource *pResource, _In_opt_ const D3D10_SHADER_RESOURCE_VIEW_DESC1 *pDesc, _Out_opt_ ID3D10ShaderResourceView1 **ppSRView)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *CreateBlendState1 )( ID3D10Device1 * This, _In_ const D3D10_BLEND_DESC1 *pBlendStateDesc, _Out_opt_ ID3D10BlendState1 **ppBlendState)"
  },
  {
    "label": "D3D10_FEATURE_LEVEL1()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "D3D10_FEATURE_LEVEL1(STDMETHODCALLTYPE *GetFeatureLevel )( ID3D10Device1 * This)"
  },
  {
    "label": "ID3D10Device1_QueryInterface()",
    "kind": "Method",
    "detail": "Function (END_INTERFACE } ID3D10Device1Vtbl ; interface ID3D10Device1 { CONST_VTBL struct ID3D10Device1Vtbl* lpVtbl ; } ; # ifdef COBJMACROS # define)",
    "insertText": "ID3D10Device1_QueryInterface(This,riid,ppvObject) \\ ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) #define ID3D10Device1_AddRef(This) \\ ( (This)->lpVtbl -> AddRef(This) ) #define ID3D10Device1_Release(This) \\ ( (This)->lpVtbl -> Release(This) ) #define ID3D10Device1_VSSetConstantBuffers(This,StartSlot,NumBuffers,ppConstantBuffers) \\ ( (This)->lpVtbl -> VSSetConstantBuffers(This,StartSlot,NumBuffers,ppConstantBuffers) ) #define ID3D10Device1_PSSetShaderResources(This,StartSlot,NumViews,ppShaderResourceViews) \\ ( (This)->lpVtbl -> PSSetShaderResources(This,StartSlot,NumViews,ppShaderResourceViews) ) #define ID3D10Device1_PSSetShader(This,pPixelShader) \\ ( (This)->lpVtbl -> PSSetShader(This,pPixelShader) ) #define ID3D10Device1_PSSetSamplers(This,StartSlot,NumSamplers,ppSamplers) \\ ( (This)->lpVtbl -> PSSetSamplers(This,StartSlot,NumSamplers,ppSamplers) ) #define ID3D10Device1_VSSetShader(This,pVertexShader) \\ ( (This)->lpVtbl -> VSSetShader(This,pVertexShader) ) #define ID3D10Device1_DrawIndexed(This,IndexCount,StartIndexLocation,BaseVertexLocation) \\ ( (This)->lpVtbl -> DrawIndexed(This,IndexCount,StartIndexLocation,BaseVertexLocation) ) #define ID3D10Device1_Draw(This,VertexCount,StartVertexLocation) \\ ( (This)->lpVtbl -> Draw(This,VertexCount,StartVertexLocation) ) #define ID3D10Device1_PSSetConstantBuffers(This,StartSlot,NumBuffers,ppConstantBuffers) \\ ( (This)->lpVtbl -> PSSetConstantBuffers(This,StartSlot,NumBuffers,ppConstantBuffers) ) #define ID3D10Device1_IASetInputLayout(This,pInputLayout) \\ ( (This)->lpVtbl -> IASetInputLayout(This,pInputLayout) ) #define ID3D10Device1_IASetVertexBuffers(This,StartSlot,NumBuffers,ppVertexBuffers,pStrides,pOffsets) \\ ( (This)->lpVtbl -> IASetVertexBuffers(This,StartSlot,NumBuffers,ppVertexBuffers,pStrides,pOffsets) ) #define ID3D10Device1_IASetIndexBuffer(This,pIndexBuffer,Format,Offset) \\ ( (This)->lpVtbl -> IASetIndexBuffer(This,pIndexBuffer,Format,Offset) ) #define ID3D10Device1_DrawIndexedInstanced(This,IndexCountPerInstance,InstanceCount,StartIndexLocation,BaseVertexLocation,StartInstanceLocation) \\ ( (This)->lpVtbl -> DrawIndexedInstanced(This,IndexCountPerInstance,InstanceCount,StartIndexLocation,BaseVertexLocation,StartInstanceLocation) ) #define ID3D10Device1_DrawInstanced(This,VertexCountPerInstance,InstanceCount,StartVertexLocation,StartInstanceLocation) \\ ( (This)->lpVtbl -> DrawInstanced(This,VertexCountPerInstance,InstanceCount,StartVertexLocation,StartInstanceLocation) ) #define ID3D10Device1_GSSetConstantBuffers(This,StartSlot,NumBuffers,ppConstantBuffers) \\ ( (This)->lpVtbl -> GSSetConstantBuffers(This,StartSlot,NumBuffers,ppConstantBuffers) ) #define ID3D10Device1_GSSetShader(This,pShader) \\ ( (This)->lpVtbl -> GSSetShader(This,pShader) ) #define ID3D10Device1_IASetPrimitiveTopology(This,Topology) \\ ( (This)->lpVtbl -> IASetPrimitiveTopology(This,Topology) ) #define ID3D10Device1_VSSetShaderResources(This,StartSlot,NumViews,ppShaderResourceViews) \\ ( (This)->lpVtbl -> VSSetShaderResources(This,StartSlot,NumViews,ppShaderResourceViews) ) #define ID3D10Device1_VSSetSamplers(This,StartSlot,NumSamplers,ppSamplers) \\ ( (This)->lpVtbl -> VSSetSamplers(This,StartSlot,NumSamplers,ppSamplers) ) #define ID3D10Device1_SetPredication(This,pPredicate,PredicateValue) \\ ( (This)->lpVtbl -> SetPredication(This,pPredicate,PredicateValue) ) #define ID3D10Device1_GSSetShaderResources(This,StartSlot,NumViews,ppShaderResourceViews) \\ ( (This)->lpVtbl -> GSSetShaderResources(This,StartSlot,NumViews,ppShaderResourceViews) ) #define ID3D10Device1_GSSetSamplers(This,StartSlot,NumSamplers,ppSamplers) \\ ( (This)->lpVtbl -> GSSetSamplers(This,StartSlot,NumSamplers,ppSamplers) ) #define ID3D10Device1_OMSetRenderTargets(This,NumViews,ppRenderTargetViews,pDepthStencilView) \\ ( (This)->lpVtbl -> OMSetRenderTargets(This,NumViews,ppRenderTargetViews,pDepthStencilView) ) #define ID3D10Device1_OMSetBlendState(This,pBlendState,BlendFactor,SampleMask) \\ ( (This)->lpVtbl -> OMSetBlendState(This,pBlendState,BlendFactor,SampleMask) ) #define ID3D10Device1_OMSetDepthStencilState(This,pDepthStencilState,StencilRef) \\ ( (This)->lpVtbl -> OMSetDepthStencilState(This,pDepthStencilState,StencilRef) ) #define ID3D10Device1_SOSetTargets(This,NumBuffers,ppSOTargets,pOffsets) \\ ( (This)->lpVtbl -> SOSetTargets(This,NumBuffers,ppSOTargets,pOffsets) ) #define ID3D10Device1_DrawAuto(This) \\ ( (This)->lpVtbl -> DrawAuto(This) ) #define ID3D10Device1_RSSetState(This,pRasterizerState) \\ ( (This)->lpVtbl -> RSSetState(This,pRasterizerState) ) #define ID3D10Device1_RSSetViewports(This,NumViewports,pViewports) \\ ( (This)->lpVtbl -> RSSetViewports(This,NumViewports,pViewports) ) #define ID3D10Device1_RSSetScissorRects(This,NumRects,pRects) \\ ( (This)->lpVtbl -> RSSetScissorRects(This,NumRects,pRects) ) #define ID3D10Device1_CopySubresourceRegion(This,pDstResource,DstSubresource,DstX,DstY,DstZ,pSrcResource,SrcSubresource,pSrcBox) \\ ( (This)->lpVtbl -> CopySubresourceRegion(This,pDstResource,DstSubresource,DstX,DstY,DstZ,pSrcResource,SrcSubresource,pSrcBox) ) #define ID3D10Device1_CopyResource(This,pDstResource,pSrcResource) \\ ( (This)->lpVtbl -> CopyResource(This,pDstResource,pSrcResource) ) #define ID3D10Device1_UpdateSubresource(This,pDstResource,DstSubresource,pDstBox,pSrcData,SrcRowPitch,SrcDepthPitch) \\ ( (This)->lpVtbl -> UpdateSubresource(This,pDstResource,DstSubresource,pDstBox,pSrcData,SrcRowPitch,SrcDepthPitch) ) #define ID3D10Device1_ClearRenderTargetView(This,pRenderTargetView,ColorRGBA) \\ ( (This)->lpVtbl -> ClearRenderTargetView(This,pRenderTargetView,ColorRGBA) ) #define ID3D10Device1_ClearDepthStencilView(This,pDepthStencilView,ClearFlags,Depth,Stencil) \\ ( (This)->lpVtbl -> ClearDepthStencilView(This,pDepthStencilView,ClearFlags,Depth,Stencil) ) #define ID3D10Device1_GenerateMips(This,pShaderResourceView) \\ ( (This)->lpVtbl -> GenerateMips(This,pShaderResourceView) ) #define ID3D10Device1_ResolveSubresource(This,pDstResource,DstSubresource,pSrcResource,SrcSubresource,Format) \\ ( (This)->lpVtbl -> ResolveSubresource(This,pDstResource,DstSubresource,pSrcResource,SrcSubresource,Format) ) #define ID3D10Device1_VSGetConstantBuffers(This,StartSlot,NumBuffers,ppConstantBuffers) \\ ( (This)->lpVtbl -> VSGetConstantBuffers(This,StartSlot,NumBuffers,ppConstantBuffers) ) #define ID3D10Device1_PSGetShaderResources(This,StartSlot,NumViews,ppShaderResourceViews) \\ ( (This)->lpVtbl -> PSGetShaderResources(This,StartSlot,NumViews,ppShaderResourceViews) ) #define ID3D10Device1_PSGetShader(This,ppPixelShader) \\ ( (This)->lpVtbl -> PSGetShader(This,ppPixelShader) ) #define ID3D10Device1_PSGetSamplers(This,StartSlot,NumSamplers,ppSamplers) \\ ( (This)->lpVtbl -> PSGetSamplers(This,StartSlot,NumSamplers,ppSamplers) ) #define ID3D10Device1_VSGetShader(This,ppVertexShader) \\ ( (This)->lpVtbl -> VSGetShader(This,ppVertexShader) ) #define ID3D10Device1_PSGetConstantBuffers(This,StartSlot,NumBuffers,ppConstantBuffers) \\ ( (This)->lpVtbl -> PSGetConstantBuffers(This,StartSlot,NumBuffers,ppConstantBuffers) ) #define ID3D10Device1_IAGetInputLayout(This,ppInputLayout) \\ ( (This)->lpVtbl -> IAGetInputLayout(This,ppInputLayout) ) #define ID3D10Device1_IAGetVertexBuffers(This,StartSlot,NumBuffers,ppVertexBuffers,pStrides,pOffsets) \\ ( (This)->lpVtbl -> IAGetVertexBuffers(This,StartSlot,NumBuffers,ppVertexBuffers,pStrides,pOffsets) ) #define ID3D10Device1_IAGetIndexBuffer(This,pIndexBuffer,Format,Offset) \\ ( (This)->lpVtbl -> IAGetIndexBuffer(This,pIndexBuffer,Format,Offset) ) #define ID3D10Device1_GSGetConstantBuffers(This,StartSlot,NumBuffers,ppConstantBuffers) \\ ( (This)->lpVtbl -> GSGetConstantBuffers(This,StartSlot,NumBuffers,ppConstantBuffers) ) #define ID3D10Device1_GSGetShader(This,ppGeometryShader) \\ ( (This)->lpVtbl -> GSGetShader(This,ppGeometryShader) ) #define ID3D10Device1_IAGetPrimitiveTopology(This,pTopology) \\ ( (This)->lpVtbl -> IAGetPrimitiveTopology(This,pTopology) ) #define ID3D10Device1_VSGetShaderResources(This,StartSlot,NumViews,ppShaderResourceViews) \\ ( (This)->lpVtbl -> VSGetShaderResources(This,StartSlot,NumViews,ppShaderResourceViews) ) #define ID3D10Device1_VSGetSamplers(This,StartSlot,NumSamplers,ppSamplers) \\ ( (This)->lpVtbl -> VSGetSamplers(This,StartSlot,NumSamplers,ppSamplers) ) #define ID3D10Device1_GetPredication(This,ppPredicate,pPredicateValue) \\ ( (This)->lpVtbl -> GetPredication(This,ppPredicate,pPredicateValue) ) #define ID3D10Device1_GSGetShaderResources(This,StartSlot,NumViews,ppShaderResourceViews) \\ ( (This)->lpVtbl -> GSGetShaderResources(This,StartSlot,NumViews,ppShaderResourceViews) ) #define ID3D10Device1_GSGetSamplers(This,StartSlot,NumSamplers,ppSamplers) \\ ( (This)->lpVtbl -> GSGetSamplers(This,StartSlot,NumSamplers,ppSamplers) ) #define ID3D10Device1_OMGetRenderTargets(This,NumViews,ppRenderTargetViews,ppDepthStencilView) \\ ( (This)->lpVtbl -> OMGetRenderTargets(This,NumViews,ppRenderTargetViews,ppDepthStencilView) ) #define ID3D10Device1_OMGetBlendState(This,ppBlendState,BlendFactor,pSampleMask) \\ ( (This)->lpVtbl -> OMGetBlendState(This,ppBlendState,BlendFactor,pSampleMask) ) #define ID3D10Device1_OMGetDepthStencilState(This,ppDepthStencilState,pStencilRef) \\ ( (This)->lpVtbl -> OMGetDepthStencilState(This,ppDepthStencilState,pStencilRef) ) #define ID3D10Device1_SOGetTargets(This,NumBuffers,ppSOTargets,pOffsets) \\ ( (This)->lpVtbl -> SOGetTargets(This,NumBuffers,ppSOTargets,pOffsets) ) #define ID3D10Device1_RSGetState(This,ppRasterizerState) \\ ( (This)->lpVtbl -> RSGetState(This,ppRasterizerState) ) #define ID3D10Device1_RSGetViewports(This,NumViewports,pViewports) \\ ( (This)->lpVtbl -> RSGetViewports(This,NumViewports,pViewports) ) #define ID3D10Device1_RSGetScissorRects(This,NumRects,pRects) \\ ( (This)->lpVtbl -> RSGetScissorRects(This,NumRects,pRects) ) #define ID3D10Device1_GetDeviceRemovedReason(This) \\ ( (This)->lpVtbl -> GetDeviceRemovedReason(This) ) #define ID3D10Device1_SetExceptionMode(This,RaiseFlags) \\ ( (This)->lpVtbl -> SetExceptionMode(This,RaiseFlags) ) #define ID3D10Device1_GetExceptionMode(This) \\ ( (This)->lpVtbl -> GetExceptionMode(This) ) #define ID3D10Device1_GetPrivateData(This,guid,pDataSize,pData) \\ ( (This)->lpVtbl -> GetPrivateData(This,guid,pDataSize,pData) ) #define ID3D10Device1_SetPrivateData(This,guid,DataSize,pData) \\ ( (This)->lpVtbl -> SetPrivateData(This,guid,DataSize,pData) ) #define ID3D10Device1_SetPrivateDataInterface(This,guid,pData) \\ ( (This)->lpVtbl -> SetPrivateDataInterface(This,guid,pData) ) #define ID3D10Device1_ClearState(This) \\ ( (This)->lpVtbl -> ClearState(This) ) #define ID3D10Device1_Flush(This) \\ ( (This)->lpVtbl -> Flush(This) ) #define ID3D10Device1_CreateBuffer(This,pDesc,pInitialData,ppBuffer) \\ ( (This)->lpVtbl -> CreateBuffer(This,pDesc,pInitialData,ppBuffer) ) #define ID3D10Device1_CreateTexture1D(This,pDesc,pInitialData,ppTexture1D) \\ ( (This)->lpVtbl -> CreateTexture1D(This,pDesc,pInitialData,ppTexture1D) ) #define ID3D10Device1_CreateTexture2D(This,pDesc,pInitialData,ppTexture2D) \\ ( (This)->lpVtbl -> CreateTexture2D(This,pDesc,pInitialData,ppTexture2D) ) #define ID3D10Device1_CreateTexture3D(This,pDesc,pInitialData,ppTexture3D) \\ ( (This)->lpVtbl -> CreateTexture3D(This,pDesc,pInitialData,ppTexture3D) ) #define ID3D10Device1_CreateShaderResourceView(This,pResource,pDesc,ppSRView) \\ ( (This)->lpVtbl -> CreateShaderResourceView(This,pResource,pDesc,ppSRView) ) #define ID3D10Device1_CreateRenderTargetView(This,pResource,pDesc,ppRTView) \\ ( (This)->lpVtbl -> CreateRenderTargetView(This,pResource,pDesc,ppRTView) ) #define ID3D10Device1_CreateDepthStencilView(This,pResource,pDesc,ppDepthStencilView) \\ ( (This)->lpVtbl -> CreateDepthStencilView(This,pResource,pDesc,ppDepthStencilView) ) #define ID3D10Device1_CreateInputLayout(This,pInputElementDescs,NumElements,pShaderBytecodeWithInputSignature,BytecodeLength,ppInputLayout) \\ ( (This)->lpVtbl -> CreateInputLayout(This,pInputElementDescs,NumElements,pShaderBytecodeWithInputSignature,BytecodeLength,ppInputLayout) ) #define ID3D10Device1_CreateVertexShader(This,pShaderBytecode,BytecodeLength,ppVertexShader) \\ ( (This)->lpVtbl -> CreateVertexShader(This,pShaderBytecode,BytecodeLength,ppVertexShader) ) #define ID3D10Device1_CreateGeometryShader(This,pShaderBytecode,BytecodeLength,ppGeometryShader) \\ ( (This)->lpVtbl -> CreateGeometryShader(This,pShaderBytecode,BytecodeLength,ppGeometryShader) ) #define ID3D10Device1_CreateGeometryShaderWithStreamOutput(This,pShaderBytecode,BytecodeLength,pSODeclaration,NumEntries,OutputStreamStride,ppGeometryShader) \\ ( (This)->lpVtbl -> CreateGeometryShaderWithStreamOutput(This,pShaderBytecode,BytecodeLength,pSODeclaration,NumEntries,OutputStreamStride,ppGeometryShader) ) #define ID3D10Device1_CreatePixelShader(This,pShaderBytecode,BytecodeLength,ppPixelShader) \\ ( (This)->lpVtbl -> CreatePixelShader(This,pShaderBytecode,BytecodeLength,ppPixelShader) ) #define ID3D10Device1_CreateBlendState(This,pBlendStateDesc,ppBlendState) \\ ( (This)->lpVtbl -> CreateBlendState(This,pBlendStateDesc,ppBlendState) ) #define ID3D10Device1_CreateDepthStencilState(This,pDepthStencilDesc,ppDepthStencilState) \\ ( (This)->lpVtbl -> CreateDepthStencilState(This,pDepthStencilDesc,ppDepthStencilState) ) #define ID3D10Device1_CreateRasterizerState(This,pRasterizerDesc,ppRasterizerState) \\ ( (This)->lpVtbl -> CreateRasterizerState(This,pRasterizerDesc,ppRasterizerState) ) #define ID3D10Device1_CreateSamplerState(This,pSamplerDesc,ppSamplerState) \\ ( (This)->lpVtbl -> CreateSamplerState(This,pSamplerDesc,ppSamplerState) ) #define ID3D10Device1_CreateQuery(This,pQueryDesc,ppQuery) \\ ( (This)->lpVtbl -> CreateQuery(This,pQueryDesc,ppQuery) ) #define ID3D10Device1_CreatePredicate(This,pPredicateDesc,ppPredicate) \\ ( (This)->lpVtbl -> CreatePredicate(This,pPredicateDesc,ppPredicate) ) #define ID3D10Device1_CreateCounter(This,pCounterDesc,ppCounter) \\ ( (This)->lpVtbl -> CreateCounter(This,pCounterDesc,ppCounter) ) #define ID3D10Device1_CheckFormatSupport(This,Format,pFormatSupport) \\ ( (This)->lpVtbl -> CheckFormatSupport(This,Format,pFormatSupport) ) #define ID3D10Device1_CheckMultisampleQualityLevels(This,Format,SampleCount,pNumQualityLevels) \\ ( (This)->lpVtbl -> CheckMultisampleQualityLevels(This,Format,SampleCount,pNumQualityLevels) ) #define ID3D10Device1_CheckCounterInfo(This,pCounterInfo) \\ ( (This)->lpVtbl -> CheckCounterInfo(This,pCounterInfo) ) #define ID3D10Device1_CheckCounter(This,pDesc,pType,pActiveCounters,szName,pNameLength,szUnits,pUnitsLength,szDescription,pDescriptionLength) \\ ( (This)->lpVtbl -> CheckCounter(This,pDesc,pType,pActiveCounters,szName,pNameLength,szUnits,pUnitsLength,szDescription,pDescriptionLength) ) #define ID3D10Device1_GetCreationFlags(This) \\ ( (This)->lpVtbl -> GetCreationFlags(This) ) #define ID3D10Device1_OpenSharedResource(This,hResource,ReturnedInterface,ppResource) \\ ( (This)->lpVtbl -> OpenSharedResource(This,hResource,ReturnedInterface,ppResource) ) #define ID3D10Device1_SetTextFilterSize(This,Width,Height) \\ ( (This)->lpVtbl -> SetTextFilterSize(This,Width,Height) ) #define ID3D10Device1_GetTextFilterSize(This,pWidth,pHeight) \\ ( (This)->lpVtbl -> GetTextFilterSize(This,pWidth,pHeight) ) #define ID3D10Device1_CreateShaderResourceView1(This,pResource,pDesc,ppSRView) \\ ( (This)->lpVtbl -> CreateShaderResourceView1(This,pResource,pDesc,ppSRView) ) #define ID3D10Device1_CreateBlendState1(This,pBlendStateDesc,ppBlendState) \\ ( (This)->lpVtbl -> CreateBlendState1(This,pBlendStateDesc,ppBlendState) ) #define ID3D10Device1_GetFeatureLevel(This) \\ ( (This)->lpVtbl -> GetFeatureLevel(This) ) #endif #endif #endif #define D3D10_1_SDK_VERSION ( ( 0 + 0x20 ) ) #include \"d3d10_1shader.h\" typedef HRESULT (WINAPI* PFN_D3D10_CREATE_DEVICE1)(IDXGIAdapter *, D3D10_DRIVER_TYPE, HMODULE, UINT, D3D10_FEATURE_LEVEL1, UINT, ID3D10Device1**)"
  },
  {
    "label": "D3D10CreateDevice1()",
    "kind": "Method",
    "detail": "Function (HRESULT WINAPI)",
    "insertText": "D3D10CreateDevice1(_In_opt_ IDXGIAdapter *pAdapter, D3D10_DRIVER_TYPE DriverType, HMODULE Software, UINT Flags, D3D10_FEATURE_LEVEL1 HardwareLevel, UINT SDKVersion, _Out_opt_ ID3D10Device1 **ppDevice)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "HRESULT(WINAPI* PFN_D3D10_CREATE_DEVICE_AND_SWAP_CHAIN1)(IDXGIAdapter *, D3D10_DRIVER_TYPE, HMODULE, UINT, D3D10_FEATURE_LEVEL1, UINT, DXGI_SWAP_CHAIN_DESC *, IDXGISwapChain **, ID3D10Device1 **)"
  },
  {
    "label": "D3D10CreateDeviceAndSwapChain1()",
    "kind": "Method",
    "detail": "Function (HRESULT WINAPI)",
    "insertText": "D3D10CreateDeviceAndSwapChain1(_In_opt_ IDXGIAdapter *pAdapter, D3D10_DRIVER_TYPE DriverType, HMODULE Software, UINT Flags, D3D10_FEATURE_LEVEL1 HardwareLevel, UINT SDKVersion, _In_opt_ DXGI_SWAP_CHAIN_DESC *pSwapChainDesc, _Out_opt_ IDXGISwapChain **ppSwapChain, _Out_opt_ ID3D10Device1 **ppDevice)"
  },
  {
    "label": "DEFINE_GUID()",
    "kind": "Method",
    "detail": "Function (# endif # pragma endregion)",
    "insertText": "DEFINE_GUID(IID_ID3D10BlendState1,0xEDAD8D99,0x8A35,0x4d6d,0x85,0x66,0x2E,0xA2,0x76,0xCD,0xE1,0x61)"
  },
  {
    "label": "DEFINE_GUID()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DEFINE_GUID(IID_ID3D10ShaderResourceView1,0x9B7E4C87,0x342C,0x4106,0xA1,0x9F,0x4F,0x27,0x04,0xF6,0x89,0xF0)"
  },
  {
    "label": "DEFINE_GUID()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DEFINE_GUID(IID_ID3D10Device1,0x9B7E4C8F,0x342C,0x4106,0xA1,0x9F,0x4F,0x27,0x04,0xF6,0x89,0xF0)"
  }
]