[
  {
    "label": "PyAPI_FUNC()",
    "kind": "Method",
    "detail": "Function (# ifndef Py_CPYTHON_COMPLEXOBJECT_H # error \" this header file must not be included directly \" # endif typedef struct { double real ; double imag ; } Py_complex ;)",
    "insertText": "PyAPI_FUNC(Py_complex) _Py_c_sum(Py_complex, Py_complex)"
  },
  {
    "label": "PyAPI_FUNC()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PyAPI_FUNC(Py_complex) _Py_c_diff(Py_complex, Py_complex)"
  },
  {
    "label": "PyAPI_FUNC()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PyAPI_FUNC(Py_complex) _Py_c_neg(Py_complex)"
  },
  {
    "label": "PyAPI_FUNC()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PyAPI_FUNC(Py_complex) _Py_c_prod(Py_complex, Py_complex)"
  },
  {
    "label": "PyAPI_FUNC()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PyAPI_FUNC(Py_complex) _Py_c_quot(Py_complex, Py_complex)"
  },
  {
    "label": "PyAPI_FUNC()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PyAPI_FUNC(Py_complex) _Py_c_pow(Py_complex, Py_complex)"
  },
  {
    "label": "PyAPI_FUNC()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PyAPI_FUNC(double) _Py_c_abs(Py_complex)"
  },
  {
    "label": "PyAPI_FUNC()",
    "kind": "Method",
    "detail": "Function (typedef struct { PyObject_HEAD Py_complex cval ; } PyComplexObject ;)",
    "insertText": "PyAPI_FUNC(PyObject *) PyComplex_FromCComplex(Py_complex)"
  },
  {
    "label": "PyAPI_FUNC()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PyAPI_FUNC(Py_complex) PyComplex_AsCComplex(PyObject *op)"
  },
  {
    "label": "_PyComplex_FormatAdvancedWriter()",
    "kind": "Method",
    "detail": "Function (# ifdef Py_BUILD_CORE int)",
    "insertText": "_PyComplex_FormatAdvancedWriter(_PyUnicodeWriter *writer, PyObject *obj, PyObject *format_spec, Py_ssize_t start, Py_ssize_t end)"
  }
]