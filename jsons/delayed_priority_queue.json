[
  {
    "label": "BASE_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BASE_EXPORT"
  },
  {
    "label": "TaskSourceAndDelayedSortKey",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TaskSourceAndDelayedSortKey"
  },
  {
    "label": "DelayedPriorityQueueComparisonOperator",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DelayedPriorityQueueComparisonOperator"
  },
  {
    "label": "DelayedPriorityQueue()",
    "kind": "Method",
    "detail": "Function (# ifndef BASE_TASK_THREAD_POOL_DELAYED_PRIORITY_QUEUE_H_ # define BASE_TASK_THREAD_POOL_DELAYED_PRIORITY_QUEUE_H_ # include \" base / base_export . h \" # include \" base / containers / intrusive_heap . h \" # include \" base / stl_util . h \" # include \" base / task / thread_pool / task_source . h \" # include \" base / time / time . h \" namespace base::internal { class BASE_EXPORT DelayedPriorityQueue { public :)",
    "insertText": "DelayedPriorityQueue()"
  },
  {
    "label": "DelayedPriorityQueue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DelayedPriorityQueue(const DelayedPriorityQueue&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (DelayedPriorityQueue&)",
    "insertText": "operator(const DelayedPriorityQueue&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (DelayedPriorityQueue&)",
    "insertText": "operator(DelayedPriorityQueue&& other)"
  },
  {
    "label": "Push()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Push(scoped_refptr<TaskSource> task_source, TimeTicks delayed_sort_key)"
  },
  {
    "label": "PeekDelayedSortKey()",
    "kind": "Method",
    "detail": "Function (const TimeTicks)",
    "insertText": "PeekDelayedSortKey()"
  },
  {
    "label": "PeekTaskSource()",
    "kind": "Method",
    "detail": "Function (scoped_refptr<TaskSource>)",
    "insertText": "PeekTaskSource()"
  },
  {
    "label": "PopTaskSource()",
    "kind": "Method",
    "detail": "Function (scoped_refptr<TaskSource>)",
    "insertText": "PopTaskSource()"
  },
  {
    "label": "RemoveTaskSource()",
    "kind": "Method",
    "detail": "Function (scoped_refptr<TaskSource>)",
    "insertText": "RemoveTaskSource(scoped_refptr<TaskSource> task_source)"
  },
  {
    "label": "UpdateDelayedSortKey()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateDelayedSortKey(scoped_refptr<TaskSource> task_source)"
  },
  {
    "label": "IsEmpty()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsEmpty()"
  },
  {
    "label": "Size()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "Size()"
  },
  {
    "label": "EnableFlushTaskSourcesOnDestroyForTesting()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnableFlushTaskSourcesOnDestroyForTesting()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (private : class TaskSourceAndDelayedSortKey ; struct DelayedPriorityQueueComparisonOperator { bool)",
    "insertText": "operator()(const TaskSourceAndDelayedSortKey& lhs, const TaskSourceAndDelayedSortKey& rhs)"
  }
]