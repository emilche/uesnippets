[
  {
    "label": "FPIEPreviewDeviceModule",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPIEPreviewDeviceModule"
  },
  {
    "label": "SGameLayerManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SGameLayerManager"
  },
  {
    "label": "FMenuBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMenuBuilder"
  },
  {
    "label": "FPIEPreviewDevice",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPIEPreviewDevice"
  },
  {
    "label": "SPIEPreviewWindow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SPIEPreviewWindow"
  },
  {
    "label": "FPIEPreviewDeviceModule()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" IDeviceProfileSelectorModule . h \" # include \" PIEPreviewDeviceEnumeration . h \" # include \" RHIDefinitions . h \" # include \" Misc / CommandLine . h \" # include \" Widgets / SWindow . h \" # include \" IPIEPreviewDeviceModule . h \" # include \" Dom / JsonObject . h \" class FPIEPreviewDeviceModule : public IPIEPreviewDeviceModule { public :)",
    "insertText": "FPIEPreviewDeviceModule() : bInitialized(false)"
  },
  {
    "label": "GetRuntimeDeviceProfileName()",
    "kind": "Method",
    "detail": "Function (} const FString)",
    "insertText": "GetRuntimeDeviceProfileName()"
  },
  {
    "label": "GetSelectorPropertyValue()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetSelectorPropertyValue(const FName& PropertyType, FString& PropertyValueOUT)"
  },
  {
    "label": "StartupModule()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StartupModule()"
  },
  {
    "label": "ShutdownModule()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ShutdownModule()"
  },
  {
    "label": "FPIEPreviewDeviceModule()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FPIEPreviewDeviceModule()"
  },
  {
    "label": "GetPreviewPlatformName()",
    "kind": "Method",
    "detail": "Function (} FName)",
    "insertText": "GetPreviewPlatformName()"
  },
  {
    "label": "ApplyPreviewDeviceState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyPreviewDeviceState()"
  },
  {
    "label": "CreatePIEPreviewDeviceWindow()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWindow>)",
    "insertText": "CreatePIEPreviewDeviceWindow(FVector2D ClientSize, FText WindowTitle, EAutoCenter AutoCenterType, FVector2D ScreenPosition, TOptional<float> MaxWindowWidth, TOptional<float> MaxWindowHeight)"
  },
  {
    "label": "OnWindowReady()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnWindowReady(TSharedRef<SWindow> Window)"
  },
  {
    "label": "GetPreviewDeviceContainer()",
    "kind": "Method",
    "detail": "Function (const FPIEPreviewDeviceContainer&)",
    "insertText": "GetPreviewDeviceContainer()"
  },
  {
    "label": "GetPreviewDeviceRootCategory()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FPIEPreviewDeviceContainerCategory>)",
    "insertText": "GetPreviewDeviceRootCategory()"
  },
  {
    "label": "IsRequestingPreviewDevice()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsRequestingPreviewDevice()"
  },
  {
    "label": "Value()",
    "kind": "Method",
    "detail": "Function (FString PreviewDeviceDummy ; return)",
    "insertText": "Value(FCommandLine::Get(), GetPreviewDeviceCommandSwitch(), PreviewDeviceDummy)"
  },
  {
    "label": "SetGameLayerManagerWidget()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetGameLayerManagerWidget(TSharedPtr<class SGameLayerManager> GameLayerManager)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_TwoParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_TwoParams(FAddToDevicePreviewMenu, const FText& DeviceCategoryName, class FMenuBuilder& MenuBuilder)"
  },
  {
    "label": "SetPreviewDevice()",
    "kind": "Method",
    "detail": "Function (FAddToDevicePreviewMenu AddToDevicePreviewMenuDelegates ; void)",
    "insertText": "SetPreviewDevice(const FString& DeviceName)"
  },
  {
    "label": "GetPreviewDeviceCommandSwitch()",
    "kind": "Method",
    "detail": "Function (private : const TCHAR*)",
    "insertText": "GetPreviewDeviceCommandSwitch()"
  },
  {
    "label": "OnViewportCreated()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "OnViewportCreated()"
  },
  {
    "label": "OnEngineInitComplete()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnEngineInitComplete()"
  },
  {
    "label": "InitPreviewDevice()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitPreviewDevice()"
  },
  {
    "label": "GetDeviceSpecificationContentDir()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetDeviceSpecificationContentDir()"
  },
  {
    "label": "ReadDeviceSpecification()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ReadDeviceSpecification()"
  },
  {
    "label": "FindDeviceSpecificationFilePath()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "FindDeviceSpecificationFilePath(const FString& SearchDevice)"
  },
  {
    "label": "UpdateDisplayResolution()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateDisplayResolution()"
  },
  {
    "label": "ReadWindowConfig()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ReadWindowConfig()"
  }
]