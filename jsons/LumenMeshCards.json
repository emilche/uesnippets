[
  {
    "label": "FLumenCard",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLumenCard"
  },
  {
    "label": "FLumenPrimitiveGroup",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLumenPrimitiveGroup"
  },
  {
    "label": "FPrimitiveSceneInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPrimitiveSceneInfo"
  },
  {
    "label": "FLumenSceneFrameTemporaries",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLumenSceneFrameTemporaries"
  },
  {
    "label": "FRDGBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRDGBuilder"
  },
  {
    "label": "FSceneViewFamily",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSceneViewFamily"
  },
  {
    "label": "FScene",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FScene"
  },
  {
    "label": "FMeshCardsBuildData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMeshCardsBuildData"
  },
  {
    "label": "FLumenMeshCards",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLumenMeshCards"
  },
  {
    "label": "UpdateCardSceneBuffer()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" TextureLayout3d . h \" # include \" RenderResource . h \" # include \" MeshCardRepresentation . h \" # include \" LumenSparseSpanArray . h \" class FLumenCard ; class FLumenPrimitiveGroup ; class FPrimitiveSceneInfo ; struct FLumenSceneFrameTemporaries ; class FRDGBuilder ; class FSceneViewFamily ; class FScene ; class FMeshCardsBuildData ; namespace Lumen { uint32 NumAxisAlignedDirections = 6 ; void)",
    "insertText": "UpdateCardSceneBuffer(FRDGBuilder& GraphBuilder, FLumenSceneFrameTemporaries& FrameTemporaries, const FSceneViewFamily& ViewFamily, FScene* Scene)"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (} ; class FLumenMeshCards { public : void)",
    "insertText": "Initialize(const FMatrix& InLocalToWorld, int32 InPrimitiveGroupIndex, uint32 InFirstCardIndex, uint32 InNumCards, const FMeshCardsBuildData& MeshCardsBuildData, const FLumenPrimitiveGroup& PrimitiveGroup)"
  },
  {
    "label": "UpdateLookup()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateLookup(const TSparseSpanArray<FLumenCard>& Cards)"
  },
  {
    "label": "SetTransform()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTransform(const FMatrix& InLocalToWorld)"
  },
  {
    "label": "GetWorldSpaceBounds()",
    "kind": "Method",
    "detail": "Function (FBox)",
    "insertText": "GetWorldSpaceBounds()"
  },
  {
    "label": "TransformBy()",
    "kind": "Method",
    "detail": "Function (const FBox WorldSpaceBounds = LocalBounds .)",
    "insertText": "TransformBy(LocalToWorld)"
  },
  {
    "label": "FBox()",
    "kind": "Method",
    "detail": "Function (FMatrix WorldToLocalRotation = FMatrix::Identity ; FBox LocalBounds =)",
    "insertText": "FBox(FVector(-1.0f), FVector(-1.0f))"
  },
  {
    "label": "GetCardMinSurfaceArea()",
    "kind": "Method",
    "detail": "Function (int32 PrimitiveGroupIndex = - 1 ; bool bFarField = false ; bool bHeightfield = false ; bool bMostlyTwoSided = false ; bool bEmissiveLightSource = false ; uint32 FirstCardIndex = 0 ; uint32 NumCards = 0 ; uint32 CardLookup [ Lumen::NumAxisAlignedDirections ] ; TArray<int32,TInlineAllocator<1>> ScenePrimitiveIndices ; } ; namespace LumenMeshCards { float)",
    "insertText": "GetCardMinSurfaceArea(bool bEmissiveLightSource)"
  }
]