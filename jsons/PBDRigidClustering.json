[
  {
    "label": "FPBDCollisionConstraints",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPBDCollisionConstraints"
  },
  {
    "label": "FClusterDestoryParameters",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FClusterDestoryParameters"
  },
  {
    "label": "FRigidClustering",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRigidClustering"
  },
  {
    "label": "FMomentumRestoringData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMomentumRestoringData"
  },
  {
    "label": "FRigidClustering()",
    "kind": "Method",
    "detail": "Function (CHAOS_API)",
    "insertText": "FRigidClustering(FRigidEvolution& InEvolution, FPBDRigidClusteredParticles& InParticles, const TArray<ISimCallbackObject*>* InStrainModifiers)"
  },
  {
    "label": "AddParticlesToCluster()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddParticlesToCluster(\n\t\tFPBDRigidClusteredParticleHandle* Cluster,\n\t\tconst TArray<FPBDRigidParticleHandle*>& InChildren,\n\t\tconst TMap<FPBDRigidParticleHandle*, FPBDRigidParticleHandle*>& ChildToParentMap)"
  },
  {
    "label": "RemoveParticlesFromCluster()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveParticlesFromCluster(\n\t\tFPBDRigidClusteredParticleHandle* Cluster,\n\t\tconst TArray<FPBDRigidParticleHandle*>& InChildren)"
  },
  {
    "label": "UnionClusterGroups()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnionClusterGroups()"
  },
  {
    "label": "ForceReleaseChildParticleAndParents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ForceReleaseChildParticleAndParents(FPBDRigidClusteredParticleHandle* ChildClusteredParticle, bool bTriggerBreakEvents)"
  },
  {
    "label": "BreakCluster()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "BreakCluster(FPBDRigidClusteredParticleHandle* ClusteredParticle)"
  },
  {
    "label": "BreakClustersByProxy()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "BreakClustersByProxy(const IPhysicsProxyBase* Proxy)"
  },
  {
    "label": "AdvanceClustering()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AdvanceClustering(const FReal dt, FPBDCollisionConstraints& CollisionRule)"
  },
  {
    "label": "BreakingModel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BreakingModel()"
  },
  {
    "label": "BreakingModel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BreakingModel(TArray<FPBDRigidClusteredParticleHandle*>& InParticles)"
  },
  {
    "label": "BreakingModel()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "BreakingModel(TArrayView<FPBDRigidClusteredParticleHandle*> InParticles)"
  },
  {
    "label": "Visitor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Visitor(FClusterHandle Cluster, FVisitorFunction Function)"
  },
  {
    "label": "events()",
    "kind": "Method",
    "detail": "Function (all)",
    "insertText": "events( this include breaking, crumbling event and tracking data \n\t*/\n\tCHAOS_API void ResetAllEvents()"
  },
  {
    "label": "ClearConnectionGraph()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearConnectionGraph(FPBDRigidClusteredParticleHandle* Parent)"
  },
  {
    "label": "SetInternalStrain()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetInternalStrain(FPBDRigidClusteredParticleHandle* Particle, FRealSingle Strain)"
  },
  {
    "label": "SetExternalStrain()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetExternalStrain(FPBDRigidClusteredParticleHandle* Particle, FRealSingle Strain)"
  },
  {
    "label": "BuildConvexOptimizer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildConvexOptimizer(FPBDRigidClusteredParticleHandle* Particle)"
  },
  {
    "label": "ShouldUnionsHaveCollisionParticles()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldUnionsHaveCollisionParticles()"
  },
  {
    "label": "RemoveNodeConnections()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveNodeConnections(FPBDRigidParticleHandle* Child)"
  },
  {
    "label": "RemoveNodeConnections()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveNodeConnections(FPBDRigidClusteredParticleHandle* Child)"
  },
  {
    "label": "CreateNodeConnection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateNodeConnection(FPBDRigidClusteredParticleHandle* A, FPBDRigidClusteredParticleHandle* B)"
  },
  {
    "label": "CleanupInternalClustersForProxies()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CleanupInternalClustersForProxies(TArrayView<IPhysicsProxyBase*> Proxies)"
  },
  {
    "label": "DisableCluster()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DisableCluster(FPBDRigidClusteredParticleHandle* ClusteredParticle)"
  },
  {
    "label": "ThrottleReleasedParticlesIfNecessary()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ThrottleReleasedParticlesIfNecessary(TSet<FPBDRigidParticleHandle*>& Particles)"
  },
  {
    "label": "ThrottleReleasedParticlesIfNecessary()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ThrottleReleasedParticlesIfNecessary(TArray<FPBDRigidParticleHandle*>& Particles)"
  },
  {
    "label": "DisableParticle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DisableParticle(FPBDRigidParticleHandle* ParticleToDisable, bool bRemoveFromChildrenMap = true)"
  },
  {
    "label": "ComputeStrainFromCollision()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ComputeStrainFromCollision(const FPBDCollisionConstraints& CollisionRule, const FReal Dt)"
  },
  {
    "label": "ResetCollisionImpulseArray()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetCollisionImpulseArray()"
  },
  {
    "label": "ApplyStrainModifiers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyStrainModifiers(const TArray<FPBDRigidClusteredParticleHandle*>& StrainedParticles)"
  },
  {
    "label": "UpdateConnectivityGraphUsingPointImplicit()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateConnectivityGraphUsingPointImplicit(\n\t\tconst TArray<FPBDRigidParticleHandle*>& Particles,\n\t\tFReal CollisionThicknessPercent,\n\t\tconst TSet<FPBDRigidParticleHandle*>* FromParticles = nullptr,\n\t\tconst TSet<FPBDRigidParticleHandle*>* ToParticles = nullptr)"
  },
  {
    "label": "RemoveChildFromParent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveChildFromParent(FPBDRigidParticleHandle* Child, FPBDRigidClusteredParticleHandle* ClusteredParent)"
  },
  {
    "label": "RemoveChildFromParentAndChildrenArray()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveChildFromParentAndChildrenArray(FPBDRigidParticleHandle* Child, FPBDRigidClusteredParticleHandle* ClusteredParent)"
  },
  {
    "label": "TrackBreakingCollision()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TrackBreakingCollision(FPBDRigidClusteredParticleHandle* ClusteredParticle)"
  },
  {
    "label": "RestoreBreakingMomentum()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RestoreBreakingMomentum()"
  },
  {
    "label": "RemoveFromMomentumRestoringStructures()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveFromMomentumRestoringStructures(const FPBDRigidParticleHandle* ParticleToRemove)"
  },
  {
    "label": "SendBreakingEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SendBreakingEvent(FPBDRigidClusteredParticleHandle* ClusteredParticle, bool bFromCrumble)"
  },
  {
    "label": "SendCrumblingEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SendCrumblingEvent(FPBDRigidClusteredParticleHandle* ClusteredParticle)"
  },
  {
    "label": "FindIslandsInChildren()",
    "kind": "Method",
    "detail": "Function (TArray<FParticleIsland>)",
    "insertText": "FindIslandsInChildren(const FPBDRigidClusteredParticleHandle* ClusteredParticle, bool bTraverseInterclusterEdges)"
  },
  {
    "label": "UpdateTopLevelParticle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateTopLevelParticle(FPBDRigidClusteredParticleHandle* Particle)"
  },
  {
    "label": "UpdateClusterParticlePropertiesFromChildren()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateClusterParticlePropertiesFromChildren(\n\t\tFPBDRigidClusteredParticleHandle* Cluster,\n\t\tconst FRigidHandleArray& Children,\n\t\tconst TMap<FPBDRigidParticleHandle*, FPBDRigidParticleHandle*>& ChildToParentMap)"
  }
]