[
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "SDerivedDataRemoteStoreDialog",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SDerivedDataRemoteStoreDialog"
  },
  {
    "label": "SDerivedDataCacheStatisticsDialog",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SDerivedDataCacheStatisticsDialog"
  },
  {
    "label": "SDerivedDataResourceUsageDialog",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SDerivedDataResourceUsageDialog"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct(const FArguments& InArgs)"
  },
  {
    "label": "GetGridPanel()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "GetGridPanel()"
  },
  {
    "label": "UpdateGridPanels()",
    "kind": "Method",
    "detail": "Function (EActiveTimerReturnType)",
    "insertText": "UpdateGridPanels(double InCurrentTime, float InDeltaTime)"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct(const FArguments& InArgs)"
  },
  {
    "label": "GetGridPanel()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "GetGridPanel()"
  },
  {
    "label": "UpdateGridPanels()",
    "kind": "Method",
    "detail": "Function (EActiveTimerReturnType)",
    "insertText": "UpdateGridPanels(double InCurrentTime, float InDeltaTime)"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct(const FArguments& InArgs)"
  },
  {
    "label": "GetGridPanel()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "GetGridPanel()"
  },
  {
    "label": "UpdateGridPanels()",
    "kind": "Method",
    "detail": "Function (EActiveTimerReturnType)",
    "insertText": "UpdateGridPanels(double InCurrentTime, float InDeltaTime)"
  }
]