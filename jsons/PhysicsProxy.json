[
  {
    "label": "FKinematicProxy",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FKinematicProxy"
  },
  {
    "label": "FFieldSystemCommand",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFieldSystemCommand"
  },
  {
    "label": "FBodyInstance",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBodyInstance"
  },
  {
    "label": "TPBDRigidParticles",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TPBDRigidParticles"
  },
  {
    "label": "Concrete",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Concrete"
  },
  {
    "label": "ConcreteData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ConcreteData"
  },
  {
    "label": "TPhysicsProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TPhysicsProxy"
  },
  {
    "label": "TPhysicsProxy()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Chaos / ArrayCollectionArray . h \" # include \" Chaos / Declares . h \" # include \" Chaos / Framework / PhysicsSolverBase . h \" # include \" Chaos / Framework / PhysicsProxyBase . h \" # include \" UObject / GCObject . h \" struct FKinematicProxy ; class FFieldSystemCommand ; struct FBodyInstance ; namespace Chaos { template<T,int D> class TPBDRigidParticles ; using FPBDRigidParticles = TPBDRigidParticles<FReal,3> ; } template<class Concrete,class ConcreteData,TProxyTimeStamp> class TPhysicsProxy : public IPhysicsProxyBase { public : using FParticleType = Concrete ; using FParticlesType = Chaos::FPBDRigidParticles ; using FIntArray = Chaos::TArrayCollectionArray<int32> ;)",
    "insertText": "TPhysicsProxy() : IPhysicsProxyBase(ConcreteType(), nullptr, MakeShared<TProxyTimeStamp>())"
  },
  {
    "label": "TPhysicsProxy()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "TPhysicsProxy(UObject* InOwner) : IPhysicsProxyBase(ConcreteType(), InOwner, MakeShared<TProxyTimeStamp>())"
  },
  {
    "label": "TPhysicsProxy()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "TPhysicsProxy()"
  },
  {
    "label": "IsSimulating()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsSimulating()"
  },
  {
    "label": "UpdateKinematicBodiesCallback()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "UpdateKinematicBodiesCallback(const FParticlesType& InParticles, const float InDt, const float InTime, FKinematicProxy& InKinematicProxy)"
  },
  {
    "label": "Concrete()",
    "kind": "Method",
    "detail": "Function (static_cast<)",
    "insertText": "Concrete(this)->UpdateKinematicBodiesCallback(InParticles, InDt, InTime, InKinematicProxy)"
  },
  {
    "label": "StartFrameCallback()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "StartFrameCallback(const float InDt, const float InTime)"
  },
  {
    "label": "Concrete()",
    "kind": "Method",
    "detail": "Function (static_cast<)",
    "insertText": "Concrete(this)->StartFrameCallback(InDt, InTime)"
  },
  {
    "label": "EndFrameCallback()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "EndFrameCallback(const float InDt)"
  },
  {
    "label": "Concrete()",
    "kind": "Method",
    "detail": "Function (static_cast<)",
    "insertText": "Concrete(this)->EndFrameCallback(InDt)"
  },
  {
    "label": "CreateRigidBodyCallback()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "CreateRigidBodyCallback(FParticlesType& InOutParticles)"
  },
  {
    "label": "Concrete()",
    "kind": "Method",
    "detail": "Function (static_cast<)",
    "insertText": "Concrete(this)->CreateRigidBodyCallback(InOutParticles)"
  },
  {
    "label": "DisableCollisionsCallback()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "DisableCollisionsCallback(TSet<TTuple<int32, int32>>& InPairs)"
  },
  {
    "label": "Concrete()",
    "kind": "Method",
    "detail": "Function (static_cast<)",
    "insertText": "Concrete(this)->DisableCollisionsCallback(InPairs)"
  },
  {
    "label": "AddForceCallback()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "AddForceCallback(FParticlesType& InParticles, const float InDt, const int32 InIndex)"
  },
  {
    "label": "Concrete()",
    "kind": "Method",
    "detail": "Function (static_cast<)",
    "insertText": "Concrete(this)->AddForceCallback(InParticles, InDt, InIndex)"
  },
  {
    "label": "BindParticleCallbackMapping()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "BindParticleCallbackMapping(Chaos::TArrayCollectionArray<PhysicsProxyWrapper> & PhysicsProxyReverseMap, Chaos::TArrayCollectionArray<int32> & ParticleIDReverseMap)"
  },
  {
    "label": "Concrete()",
    "kind": "Method",
    "detail": "Function (static_cast<)",
    "insertText": "Concrete(this)->BindParticleCallbackMapping(PhysicsProxyReverseMap, ParticleIDReverseMap)"
  },
  {
    "label": "ConcreteType()",
    "kind": "Method",
    "detail": "Function (} EPhysicsProxyType)",
    "insertText": "ConcreteType()"
  },
  {
    "label": "ClearAccumulatedData()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "ClearAccumulatedData()"
  },
  {
    "label": "Concrete()",
    "kind": "Method",
    "detail": "Function (static_cast<)",
    "insertText": "Concrete(this)->ClearAccumulatedData()"
  },
  {
    "label": "SyncBeforeDestroy()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SyncBeforeDestroy()"
  },
  {
    "label": "Concrete()",
    "kind": "Method",
    "detail": "Function (static_cast<)",
    "insertText": "Concrete(this)->SyncBeforeDestroy()"
  },
  {
    "label": "OnRemoveFromScene()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "OnRemoveFromScene()"
  },
  {
    "label": "Concrete()",
    "kind": "Method",
    "detail": "Function (static_cast<)",
    "insertText": "Concrete(this)->OnRemoveFromScene()"
  },
  {
    "label": "IsDirty()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsDirty()"
  },
  {
    "label": "GetUserData()",
    "kind": "Method",
    "detail": "Function (} void*)",
    "insertText": "GetUserData()"
  },
  {
    "label": "GetSyncTimestampTyped()",
    "kind": "Method",
    "detail": "Function (} TProxyTimeStamp&)",
    "insertText": "GetSyncTimestampTyped()"
  }
]