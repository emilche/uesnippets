[
  {
    "label": "USkinnedAsset",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USkinnedAsset"
  },
  {
    "label": "FSkeletalMeshLODModel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSkeletalMeshLODModel"
  },
  {
    "label": "FSkeletalMeshVertexAttributeInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSkeletalMeshVertexAttributeInfo"
  },
  {
    "label": "FSkelMeshRenderSection",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSkelMeshRenderSection"
  },
  {
    "label": "FSkeletalMeshLODRenderData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSkeletalMeshLODRenderData"
  },
  {
    "label": "UMorphTarget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMorphTarget"
  },
  {
    "label": "ENGINE_API",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ENGINE_API"
  },
  {
    "label": "EClassDataStripFlag",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EClassDataStripFlag"
  },
  {
    "label": "FSkeletalMeshRenderData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSkeletalMeshRenderData"
  },
  {
    "label": "InitResources()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitResources(bool bNeedsVertexColors, int32 LODIndex, TArray<class UMorphTarget*>& InMorphTargets, USkinnedAsset* Owner)"
  },
  {
    "label": "InitMorphResources()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitMorphResources()"
  },
  {
    "label": "ReleaseResources()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseResources()"
  },
  {
    "label": "ReleaseCPUResources()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseCPUResources(bool bForStreaming = false)"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Serialize(FArchive& Ar, UObject* Owner, int32 Idx)"
  },
  {
    "label": "SerializeStreamedData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SerializeStreamedData(FArchive& Ar, USkinnedAsset* Owner, int32 LODIdx, uint8 ClassStripFlags, bool bNeedsCPUAccess, bool bForceKeepCPUResources)"
  },
  {
    "label": "SerializeAvailabilityInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SerializeAvailabilityInfo(FArchive& Ar, int32 LODIdx, bool bHasAdjacencyData, bool bNeedsCPUAccess)"
  },
  {
    "label": "BuildFromLODModel()",
    "kind": "Method",
    "detail": "Function (ENGINE_API)",
    "insertText": "BuildFromLODModel(\n\t\tconst FSkeletalMeshLODModel* InLODModel,\n\t\tTConstArrayView<FSkeletalMeshVertexAttributeInfo> InVertexAttributeInfos = {},\n\t\tconst FBuildSettings& InBuildSettings = FBuildSettings{ESkeletalMeshVertexFlags::None, false}\n\t\t)"
  },
  {
    "label": "IncrementMemoryStats()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "IncrementMemoryStats(bool bNeedsVertexColors)"
  },
  {
    "label": "DecrementMemoryStats()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DecrementMemoryStats()"
  },
  {
    "label": "ShouldForceKeepCPUResources()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldForceKeepCPUResources()"
  },
  {
    "label": "ShouldKeepCPUResources()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldKeepCPUResources(const USkinnedAsset* SkinnedAsset, int32 LODIdx, bool bForceKeep)"
  },
  {
    "label": "GenerateClassStripFlags()",
    "kind": "Method",
    "detail": "Function (uint8)",
    "insertText": "GenerateClassStripFlags(FArchive& Ar, const USkinnedAsset* OwnerMesh, int32 LODIdx)"
  },
  {
    "label": "IsLODCookedOut()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsLODCookedOut(const ITargetPlatform* TargetPlatform, const USkinnedAsset* SkinnedAsset, bool bIsBelowMinLOD)"
  },
  {
    "label": "IsLODInlined()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsLODInlined(const ITargetPlatform* TargetPlatform, const USkinnedAsset* SkinnedAsset, int32 LODIdx, bool bIsBelowMinLOD)"
  },
  {
    "label": "GetNumOptionalLODsAllowed()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetNumOptionalLODsAllowed(const ITargetPlatform* TargetPlatform, const USkinnedAsset* SkinnedAsset)"
  }
]