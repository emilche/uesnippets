[
  {
    "label": "FProgressCancel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FProgressCancel"
  },
  {
    "label": "FGeometryError",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGeometryError"
  },
  {
    "label": "FGeometryWarning",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGeometryWarning"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FGeometryResult",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGeometryResult"
  },
  {
    "label": "FProgressCancel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FProgressCancel"
  },
  {
    "label": "FProgressData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FProgressData"
  },
  {
    "label": "FProgressScope",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FProgressScope"
  },
  {
    "label": "FProgressScope",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FProgressScope"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FMessageInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMessageInfo"
  },
  {
    "label": "SetSuccess()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSuccess(bool bSuccess, FProgressCancel* Progress = nullptr )"
  },
  {
    "label": "SetFailed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFailed(FText ErrorMessage, int ResultCode = 0)"
  },
  {
    "label": "CheckAndSetCancelled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CheckAndSetCancelled( FProgressCancel* Progress )"
  },
  {
    "label": "FGeometryResult()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FGeometryResult(EGeometryResultType::Failure)"
  },
  {
    "label": "FGeometryResult()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FGeometryResult(EGeometryResultType::Cancelled)"
  },
  {
    "label": "StartWorkScope()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StartWorkScope(FProgressData& SaveProgressFrameOut, float StepSize, const FText& Message)"
  },
  {
    "label": "EndWorkScope()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EndWorkScope(const FProgressData& SavedProgressFrame)"
  },
  {
    "label": "Done()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Done()"
  },
  {
    "label": "MessageLock()",
    "kind": "Method",
    "detail": "Function (FScopeLock)",
    "insertText": "MessageLock(&MessageCS)"
  },
  {
    "label": "MessageLock()",
    "kind": "Method",
    "detail": "Function (FScopeLock)",
    "insertText": "MessageLock(&MessageCS)"
  }
]