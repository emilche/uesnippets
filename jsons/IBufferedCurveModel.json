[
  {
    "label": "FCurveEditorScreenSpace",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCurveEditorScreenSpace"
  },
  {
    "label": "FCurveEditor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCurveEditor"
  },
  {
    "label": "FCurveModel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCurveModel"
  },
  {
    "label": "IBufferedCurveModel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IBufferedCurveModel"
  },
  {
    "label": "IBufferedCurveModel()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" Templates / Tuple . h \" # include \" CurveDataAbstraction . h \" struct FCurveEditorScreenSpace ; class FCurveEditor ; class FCurveModel ; class IBufferedCurveModel { public :)",
    "insertText": "IBufferedCurveModel(TArray<FKeyPosition>&& InKeyPositions, TArray<FKeyAttributes>&& InKeyAttributes, const FString& InLongDisplayName, const double InValueMin, const double InValueMax) : KeyPositions(MoveTemp(InKeyPositions)) , KeyAttributes(MoveTemp(InKeyAttributes)) , LongDisplayName(InLongDisplayName) , ValueMin(InValueMin) , ValueMax(InValueMax)"
  },
  {
    "label": "IBufferedCurveModel()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "IBufferedCurveModel()"
  },
  {
    "label": "DrawCurve()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DrawCurve(const FCurveEditor& CurveEditor, const FCurveEditorScreenSpace& ScreenSpace, TArray<TTuple<double, double>>& InterpolatingPoints)"
  },
  {
    "label": "GetKeyAttributes()",
    "kind": "Method",
    "detail": "Function (OutKeyPositions = KeyPositions ; } void)",
    "insertText": "GetKeyAttributes(TArray<FKeyAttributes>& OutKeyAttributes)"
  },
  {
    "label": "GetLongDisplayName()",
    "kind": "Method",
    "detail": "Function (OutKeyAttributes = KeyAttributes ; } FString)",
    "insertText": "GetLongDisplayName()"
  }
]