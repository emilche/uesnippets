[
  {
    "label": "FActiveTimerHandle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FActiveTimerHandle"
  },
  {
    "label": "ITableRow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITableRow"
  },
  {
    "label": "SEditableTextBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SEditableTextBox"
  },
  {
    "label": "SNotificationList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SNotificationList"
  },
  {
    "label": "SScrollBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SScrollBox"
  },
  {
    "label": "SSearchBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SSearchBox"
  },
  {
    "label": "STableViewBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "STableViewBase"
  },
  {
    "label": "SVerticalBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SVerticalBox"
  },
  {
    "label": "FStoreConnection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStoreConnection"
  },
  {
    "label": "FInsightsFrontendSettings",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FInsightsFrontendSettings"
  },
  {
    "label": "FStoreBrowser",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStoreBrowser"
  },
  {
    "label": "FStoreBrowserTraceInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FStoreBrowserTraceInfo"
  },
  {
    "label": "FTableImporter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTableImporter"
  },
  {
    "label": "FTraceViewModel",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTraceViewModel"
  },
  {
    "label": "FTraceDirectoryModel",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTraceDirectoryModel"
  },
  {
    "label": "FTraceFilterByPlatform",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTraceFilterByPlatform"
  },
  {
    "label": "FTraceFilterByAppName",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTraceFilterByAppName"
  },
  {
    "label": "FTraceFilterByBuildConfig",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTraceFilterByBuildConfig"
  },
  {
    "label": "FTraceFilterByBuildTarget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTraceFilterByBuildTarget"
  },
  {
    "label": "FTraceFilterByBranch",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTraceFilterByBranch"
  },
  {
    "label": "FTraceFilterByVersion",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTraceFilterByVersion"
  },
  {
    "label": "FTraceFilterBySize",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTraceFilterBySize"
  },
  {
    "label": "FTraceFilterByStatus",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTraceFilterByStatus"
  },
  {
    "label": "STraceStoreWindow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "STraceStoreWindow"
  },
  {
    "label": "STraceListRow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "STraceListRow"
  },
  {
    "label": "STraceDirectoryItem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "STraceDirectoryItem"
  },
  {
    "label": "STraceWatchDirTableRow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "STraceWatchDirTableRow"
  },
  {
    "label": "STraceStoreWindow()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "STraceStoreWindow()"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct(const FArguments& InArgs, TSharedRef<UE::Trace::FStoreConnection> InTraceStoreConnection)"
  },
  {
    "label": "OpenSettings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OpenSettings()"
  },
  {
    "label": "CloseSettings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CloseSettings()"
  },
  {
    "label": "OnFilterChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnFilterChanged()"
  },
  {
    "label": "ConstructFiltersToolbar()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "ConstructFiltersToolbar()"
  },
  {
    "label": "ConstructSessionsPanel()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "ConstructSessionsPanel()"
  },
  {
    "label": "ConstructLoadPanel()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "ConstructLoadPanel()"
  },
  {
    "label": "ConstructTraceStoreDirectoryPanel()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "ConstructTraceStoreDirectoryPanel()"
  },
  {
    "label": "ConstructAutoStartPanel()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "ConstructAutoStartPanel()"
  },
  {
    "label": "TraceList_OnGenerateRow()",
    "kind": "Method",
    "detail": "Function (TSharedRef<ITableRow>)",
    "insertText": "TraceList_OnGenerateRow(TSharedPtr<FTraceViewModel> InTrace, const TSharedRef<STableViewBase>& OwnerTable)"
  },
  {
    "label": "TraceList_GetMenuContent()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<SWidget>)",
    "insertText": "TraceList_GetMenuContent()"
  },
  {
    "label": "RenameSelectedTrace()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenameSelectedTrace()"
  },
  {
    "label": "DeleteSelectedTraces()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeleteSelectedTraces()"
  },
  {
    "label": "DeleteTrace()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DeleteTrace(const TSharedPtr<FTraceViewModel>& TraceToDelete)"
  },
  {
    "label": "CopyTraceId()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CopyTraceId()"
  },
  {
    "label": "CopyFullPath()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CopyFullPath()"
  },
  {
    "label": "OpenContainingFolder()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OpenContainingFolder()"
  },
  {
    "label": "ShowSplashScreenOverlay()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ShowSplashScreenOverlay()"
  },
  {
    "label": "TickSplashScreenOverlay()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TickSplashScreenOverlay(const float InDeltaTime)"
  },
  {
    "label": "Open_OnClicked()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "Open_OnClicked()"
  },
  {
    "label": "OpenTraceFile()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OpenTraceFile()"
  },
  {
    "label": "OpenTraceFile()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OpenTraceFile(const FString& InTraceFile)"
  },
  {
    "label": "OpenTraceSession()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OpenTraceSession(TSharedPtr<FTraceViewModel> InTrace)"
  },
  {
    "label": "OpenTraceSession()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OpenTraceSession(uint32 InTraceId)"
  },
  {
    "label": "MakeTraceListMenu()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "MakeTraceListMenu()"
  },
  {
    "label": "MakePlatformColumnHeaderMenu()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "MakePlatformColumnHeaderMenu()"
  },
  {
    "label": "MakePlatformFilterMenu()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "MakePlatformFilterMenu()"
  },
  {
    "label": "BuildPlatformFilterSubMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildPlatformFilterSubMenu(FMenuBuilder& InMenuBuilder)"
  },
  {
    "label": "MakeAppNameColumnHeaderMenu()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "MakeAppNameColumnHeaderMenu()"
  },
  {
    "label": "MakeAppNameFilterMenu()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "MakeAppNameFilterMenu()"
  },
  {
    "label": "BuildAppNameFilterSubMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildAppNameFilterSubMenu(FMenuBuilder& InMenuBuilder)"
  },
  {
    "label": "MakeBuildConfigColumnHeaderMenu()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "MakeBuildConfigColumnHeaderMenu()"
  },
  {
    "label": "MakeBuildConfigFilterMenu()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "MakeBuildConfigFilterMenu()"
  },
  {
    "label": "BuildBuildConfigFilterSubMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildBuildConfigFilterSubMenu(FMenuBuilder& InMenuBuilder)"
  },
  {
    "label": "MakeBuildTargetColumnHeaderMenu()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "MakeBuildTargetColumnHeaderMenu()"
  },
  {
    "label": "MakeBuildTargetFilterMenu()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "MakeBuildTargetFilterMenu()"
  },
  {
    "label": "BuildBuildTargetFilterSubMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildBuildTargetFilterSubMenu(FMenuBuilder& InMenuBuilder)"
  },
  {
    "label": "MakeBranchColumnHeaderMenu()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "MakeBranchColumnHeaderMenu()"
  },
  {
    "label": "MakeBranchFilterMenu()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "MakeBranchFilterMenu()"
  },
  {
    "label": "BuildBranchFilterSubMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildBranchFilterSubMenu(FMenuBuilder& InMenuBuilder)"
  },
  {
    "label": "MakeVersionColumnHeaderMenu()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "MakeVersionColumnHeaderMenu()"
  },
  {
    "label": "MakeVersionFilterMenu()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "MakeVersionFilterMenu()"
  },
  {
    "label": "BuildVersionFilterSubMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildVersionFilterSubMenu(FMenuBuilder& InMenuBuilder)"
  },
  {
    "label": "MakeSizeColumnHeaderMenu()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "MakeSizeColumnHeaderMenu()"
  },
  {
    "label": "MakeSizeFilterMenu()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "MakeSizeFilterMenu()"
  },
  {
    "label": "BuildSizeFilterSubMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildSizeFilterSubMenu(FMenuBuilder& InMenuBuilder)"
  },
  {
    "label": "MakeStatusColumnHeaderMenu()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "MakeStatusColumnHeaderMenu()"
  },
  {
    "label": "MakeStatusFilterMenu()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "MakeStatusFilterMenu()"
  },
  {
    "label": "BuildStatusFilterSubMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildStatusFilterSubMenu(FMenuBuilder& InMenuBuilder)"
  },
  {
    "label": "RefreshTraces_OnClicked()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "RefreshTraces_OnClicked()"
  },
  {
    "label": "GetColorByPath()",
    "kind": "Method",
    "detail": "Function (FSlateColor)",
    "insertText": "GetColorByPath(const FString& Uri)"
  },
  {
    "label": "RefreshTraceList()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RefreshTraceList()"
  },
  {
    "label": "UpdateTrace()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateTrace(FTraceViewModel& InOutTrace, const FStoreBrowserTraceInfo& InSourceTrace)"
  },
  {
    "label": "OnTraceListChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnTraceListChanged()"
  },
  {
    "label": "TraceList_OnSelectionChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TraceList_OnSelectionChanged(TSharedPtr<FTraceViewModel> InTrace, ESelectInfo::Type SelectInfo)"
  },
  {
    "label": "TraceList_OnMouseButtonDoubleClick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TraceList_OnMouseButtonDoubleClick(TSharedPtr<FTraceViewModel> InTrace)"
  },
  {
    "label": "AutoStart_OnCheckStateChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AutoStart_OnCheckStateChanged(ECheckBoxState NewState)"
  },
  {
    "label": "AutoConnect_OnCheckStateChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AutoConnect_OnCheckStateChanged(ECheckBoxState NewState)"
  },
  {
    "label": "ExploreTraceStoreDirectory_OnClicked()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "ExploreTraceStoreDirectory_OnClicked()"
  },
  {
    "label": "TraceDirs_OnGenerateRow()",
    "kind": "Method",
    "detail": "Function (TSharedRef<ITableRow>)",
    "insertText": "TraceDirs_OnGenerateRow(TSharedPtr<FTraceDirectoryModel> Item, const TSharedRef<STableViewBase>& Owner)"
  },
  {
    "label": "AddWatchDir_Clicked()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "AddWatchDir_Clicked()"
  },
  {
    "label": "UpdateActiveDuration()",
    "kind": "Method",
    "detail": "Function (EActiveTimerReturnType)",
    "insertText": "UpdateActiveDuration(double InCurrentTime, float InDeltaTime)"
  },
  {
    "label": "CoreTick()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CoreTick(float DeltaTime)"
  },
  {
    "label": "FilterByNameSearchBox_OnTextChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FilterByNameSearchBox_OnTextChanged(const FText& InFilterText)"
  },
  {
    "label": "CreateFilters()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateFilters()"
  },
  {
    "label": "UpdateFiltering()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateFiltering()"
  },
  {
    "label": "UpdateFilterStatsText()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateFilterStatsText()"
  },
  {
    "label": "OnSortModeChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSortModeChanged(const EColumnSortPriority::Type SortPriority, const FName& ColumnId, const EColumnSortMode::Type InSortMode)"
  },
  {
    "label": "UpdateSorting()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateSorting()"
  },
  {
    "label": "UpdateTraceListView()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateTraceListView()"
  },
  {
    "label": "ShowSuccessMessage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ShowSuccessMessage(FText& InMessage)"
  },
  {
    "label": "ShowFailMessage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ShowFailMessage(FText& InMessage)"
  },
  {
    "label": "EnableAutoConnect()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnableAutoConnect()"
  },
  {
    "label": "DisableAutoConnect()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DisableAutoConnect()"
  },
  {
    "label": "AutoStartPlatformFilterBox_OnValueCommitted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AutoStartPlatformFilterBox_OnValueCommitted(const FText& InText, ETextCommit::Type InCommitType)"
  },
  {
    "label": "AutoStartAppNameFilterBox_OnValueCommitted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AutoStartAppNameFilterBox_OnValueCommitted(const FText& InText, ETextCommit::Type InCommitType)"
  }
]