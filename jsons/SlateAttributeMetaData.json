[
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "FSlateAttributeMetaData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateAttributeMetaData"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FGetterItem",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGetterItem"
  },
  {
    "label": "SLATE_METADATA_TYPE()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Algo / BinarySearch . h \" # include \" Types / ISlateMetaData . h \" # include \" Types / SlateAttribute . h \" # include \" Types / SlateAttributeDescriptor . h \" # include \" Widgets / InvalidateWidgetReason . h \" # include<limits> class SWidget ; class FSlateAttributeMetaData : public ISlateMetaData { SlateAttributePrivate::FSlateAttributeImpl ; SlateAttributePrivate::ISlateAttributeContainer ; public :)",
    "insertText": "SLATE_METADATA_TYPE(FSlateAttributeMetaData, ISlateMetaData)"
  },
  {
    "label": "FSlateAttributeMetaData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FSlateAttributeMetaData()"
  },
  {
    "label": "FSlateAttributeMetaData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FSlateAttributeMetaData(const FSlateAttributeMetaData&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FSlateAttributeMetaData&)",
    "insertText": "operator(const FSlateAttributeMetaData&)"
  },
  {
    "label": "FindMetaData()",
    "kind": "Method",
    "detail": "Function (public : FSlateAttributeMetaData*)",
    "insertText": "FindMetaData(const SWidget& OwningWidget)"
  },
  {
    "label": "UpdateAllAttributes()",
    "kind": "Method",
    "detail": "Function (enum class EInvalidationPermission : uint8 { AllowInvalidationIfConstructed,AllowInvalidation,DelayInvalidation,DenyInvalidation,DenyAndClearDelayedInvalidation,} ; void)",
    "insertText": "UpdateAllAttributes(SWidget& OwningWidget, EInvalidationPermission InvalidationStyle)"
  },
  {
    "label": "UpdateOnlyVisibilityAttributes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateOnlyVisibilityAttributes(SWidget& OwningWidget, EInvalidationPermission InvalidationStyle)"
  },
  {
    "label": "UpdateExceptVisibilityAttributes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateExceptVisibilityAttributes(SWidget& OwningWidget, EInvalidationPermission InvalidationStyle)"
  },
  {
    "label": "UpdateChildrenOnlyVisibilityAttributes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateChildrenOnlyVisibilityAttributes(SWidget& OwningWidget, EInvalidationPermission InvalidationStyle, bool bRecursive)"
  },
  {
    "label": "ApplyDelayedInvalidation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyDelayedInvalidation(SWidget& OwningWidget)"
  },
  {
    "label": "IsBound()",
    "kind": "Method",
    "detail": "Function (public : bool)",
    "insertText": "IsBound(const FSlateAttributeBase& Attribute)"
  },
  {
    "label": "GetRegisteredAttributeCount()",
    "kind": "Method",
    "detail": "Function (} int32)",
    "insertText": "GetRegisteredAttributeCount()"
  },
  {
    "label": "GetRegisteredAffectVisibilityAttributeCount()",
    "kind": "Method",
    "detail": "Function (} int32)",
    "insertText": "GetRegisteredAffectVisibilityAttributeCount()"
  },
  {
    "label": "DebugSlateAttribute()",
    "kind": "Method",
    "detail": "Function (const TCHAR*)",
    "insertText": "DebugSlateAttribute(const SWidget* Widget, int32 Index)"
  },
  {
    "label": "RegisterAttribute()",
    "kind": "Method",
    "detail": "Function (private : using ISlateAttributeContainer = SlateAttributePrivate::ISlateAttributeContainer ; using ESlateAttributeType = SlateAttributePrivate::ESlateAttributeType ; using ISlateAttributeGetter = SlateAttributePrivate::ISlateAttributeGetter ; void)",
    "insertText": "RegisterAttribute(SWidget& OwningWidget, FSlateAttributeBase& Attribute, ESlateAttributeType AttributeType, TUniquePtr<ISlateAttributeGetter>&& Wrapper)"
  },
  {
    "label": "RegisterAttribute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterAttribute(ISlateAttributeContainer& OwningContainer, FSlateAttributeBase& Attribute, ESlateAttributeType AttributeType, TUniquePtr<ISlateAttributeGetter>&& Wrapper)"
  },
  {
    "label": "UnregisterAttribute()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UnregisterAttribute(SWidget& OwningWidget, const FSlateAttributeBase& Attribute)"
  },
  {
    "label": "UnregisterAttribute()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UnregisterAttribute(ISlateAttributeContainer& OwningContainer, const FSlateAttributeBase& Attribute)"
  },
  {
    "label": "InvalidateWidget()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InvalidateWidget(SWidget& OwningWidget, const FSlateAttributeBase& Attribute, ESlateAttributeType AttributeType, EInvalidateWidgetReason Reason)"
  },
  {
    "label": "InvalidateWidget()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InvalidateWidget(ISlateAttributeContainer& OwningContainer, const FSlateAttributeBase& Attribute, ESlateAttributeType AttributeType, EInvalidateWidgetReason Reason)"
  },
  {
    "label": "UpdateAttribute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateAttribute(SWidget& OwningWidget, FSlateAttributeBase& Attribute)"
  },
  {
    "label": "IsAttributeBound()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsAttributeBound(const SWidget& OwningWidget, const FSlateAttributeBase& Attribute)"
  },
  {
    "label": "GetAttributeGetter()",
    "kind": "Method",
    "detail": "Function (SlateAttributePrivate::ISlateAttributeGetter*)",
    "insertText": "GetAttributeGetter(const SWidget& OwningWidget, const FSlateAttributeBase& Attribute)"
  },
  {
    "label": "GetAttributeGetterHandle()",
    "kind": "Method",
    "detail": "Function (FDelegateHandle)",
    "insertText": "GetAttributeGetterHandle(const SWidget& OwningWidget, const FSlateAttributeBase& Attribute)"
  },
  {
    "label": "MoveAttribute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MoveAttribute(const SWidget& OwningWidget, FSlateAttributeBase& NewAttribute, ESlateAttributeType AttributeType, const FSlateAttributeBase* PreviousAttribute)"
  },
  {
    "label": "RemoveContainerWidget()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveContainerWidget(SWidget& Widget, ISlateAttributeContainer& Container)"
  },
  {
    "label": "UpdateContainerSortOrder()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateContainerSortOrder(SWidget& Widget, ISlateAttributeContainer& Container)"
  },
  {
    "label": "RegisterMemberAttributeImpl()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "RegisterMemberAttributeImpl(SWidget& OwningWidget, FSlateAttributeBase& Attribute, TUniquePtr<ISlateAttributeGetter>&& Getter)"
  },
  {
    "label": "RegisterManagedAttributeImpl()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterManagedAttributeImpl(SWidget& OwningWidget, FSlateAttributeBase& Attribute, TUniquePtr<ISlateAttributeGetter>&& Getter)"
  },
  {
    "label": "RegisterContainAttributeImpl()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterContainAttributeImpl(ISlateAttributeContainer& OwningContainer, SWidget& OwningWidget, FSlateAttributeBase& Attribute, TUniquePtr<ISlateAttributeGetter>&& Getter)"
  },
  {
    "label": "UnregisterAttributeImpl()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UnregisterAttributeImpl(const FSlateAttributeBase& Attribute)"
  },
  {
    "label": "RemoveMetaDataIfNeeded()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveMetaDataIfNeeded(SWidget& OwningWidget, bool bRemoved)"
  },
  {
    "label": "InvalidateWidgetAttribute()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "InvalidateWidgetAttribute(SWidget& OwningWidget, const FSlateAttributeBase& Attribute, EInvalidateWidgetReason Reason)"
  },
  {
    "label": "UpdateAttributesImpl()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateAttributesImpl(SWidget& OwningWidget, EInvalidationPermission InvaldiationStyle, int32 StartIndex, int32 IndexNum)"
  },
  {
    "label": "IndexOfAttribute()",
    "kind": "Method",
    "detail": "Function (private : int32)",
    "insertText": "IndexOfAttribute(const FSlateAttributeBase& Attribute)"
  },
  {
    "label": "IndexOfByPredicate()",
    "kind": "Method",
    "detail": "Function (const FSlateAttributeBase* AttributePtr =& Attribute ; return Attributes .)",
    "insertText": "IndexOfByPredicate([AttributePtr](const FGetterItem& Item) { return Item.Attribute == AttributePtr; })"
  },
  {
    "label": "FGetterItem()",
    "kind": "Method",
    "detail": "Function (} struct FGetterItem {)",
    "insertText": "FGetterItem(const FGetterItem&)"
  },
  {
    "label": "FGetterItem()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FGetterItem(FGetterItem&&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FGetterItem&)",
    "insertText": "operator(const FGetterItem&)"
  },
  {
    "label": "FGetterItem()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FGetterItem(FSlateAttributeBase* InAttribute, uint32 InSortOrder, TUniquePtr<SlateAttributePrivate::ISlateAttributeGetter>&& InGetter) : Attribute(InAttribute) , Getter(MoveTemp(InGetter)) , CachedAttributeDescriptor(nullptr) , SortOrder(InSortOrder) , AttributeContainerOffset(0)"
  },
  {
    "label": "FGetterItem()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FGetterItem(FSlateAttributeBase* InAttribute, uint32 InSortOrder, TUniquePtr<SlateAttributePrivate::ISlateAttributeGetter> && InGetter, const FSlateAttributeDescriptor::FAttribute* InAttributeDescriptor) : Attribute(InAttribute) , Getter(MoveTemp(InGetter)) , CachedAttributeDescriptor(InAttributeDescriptor) , SortOrder(InSortOrder) , AttributeContainerOffset(0)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} FSlateAttributeBase* Attribute ; TUniquePtr<SlateAttributePrivate::ISlateAttributeGetter> Getter ; const FSlateAttributeDescriptor::FAttribute* CachedAttributeDescriptor ; uint32 SortOrder ; int32 AttributeContainerOffset ; bool)",
    "insertText": "operator(const FGetterItem& Other)"
  },
  {
    "label": "GetAttributeContainer()",
    "kind": "Method",
    "detail": "Function (const SlateAttributePrivate::ISlateAttributeContainer* Container =)",
    "insertText": "GetAttributeContainer()"
  },
  {
    "label": "GetAttributeName()",
    "kind": "Method",
    "detail": "Function (} } return SortOrder<Other . SortOrder ; } FName)",
    "insertText": "GetAttributeName(const SWidget& OwningWidget)"
  },
  {
    "label": "static_assert()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "static_assert(sizeof(FGetterItem) <= 32, \"The size of FGetterItem is bigger than expected.\")"
  }
]