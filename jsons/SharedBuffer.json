[
  {
    "label": "FSharedBuffer",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSharedBuffer"
  },
  {
    "label": "FNextSharedBuffer",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FNextSharedBuffer"
  },
  {
    "label": "RefInit()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" HAL / Platform . h \" # include \" Trace / Config . h \" # if TRACE_PRIVATE_MINIMAL_ENABLED&& TRACE_PRIVATE_ALLOW_IMPORTANTS namespace UE { namespace Trace { namespace Private { struct FSharedBuffer { enum : uint32 { CursorShift = 1 0 } ; enum : uint32 { RefBit = 1<<0 } ; enum : uint32 {)",
    "insertText": "RefInit(1 << CursorShift)"
  },
  {
    "label": "MaxSize()",
    "kind": "Method",
    "detail": "Function (enum : uint32 {)",
    "insertText": "MaxSize(32 - CursorShift - 1)"
  }
]