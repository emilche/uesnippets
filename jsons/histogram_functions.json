[
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "size",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "size"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "UmaHistogramExactLinear()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UmaHistogramExactLinear(const std::string& name,\n                                         int sample,\n                                         int exclusive_max)"
  },
  {
    "label": "UmaHistogramExactLinear()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UmaHistogramExactLinear(const char* name,\n                                         int sample,\n                                         int exclusive_max)"
  },
  {
    "label": "UmaHistogramBoolean()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UmaHistogramBoolean(const std::string& name, bool sample)"
  },
  {
    "label": "UmaHistogramBoolean()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UmaHistogramBoolean(const char* name, bool sample)"
  },
  {
    "label": "UmaHistogramPercentage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UmaHistogramPercentage(const std::string& name, int percent)"
  },
  {
    "label": "UmaHistogramPercentage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UmaHistogramPercentage(const char* name, int percent)"
  },
  {
    "label": "UmaHistogramPercentageObsoleteDoNotUse()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UmaHistogramPercentageObsoleteDoNotUse(const std::string& name,\n                                                        int percent)"
  },
  {
    "label": "UmaHistogramPercentageObsoleteDoNotUse()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UmaHistogramPercentageObsoleteDoNotUse(const char* name,\n                                                        int percent)"
  },
  {
    "label": "UmaHistogramCustomCounts()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UmaHistogramCustomCounts(const std::string& name,\n                                          int sample,\n                                          int min,\n                                          int exclusive_max,\n                                          size_t buckets)"
  },
  {
    "label": "UmaHistogramCustomCounts()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UmaHistogramCustomCounts(const char* name,\n                                          int sample,\n                                          int min,\n                                          int exclusive_max,\n                                          size_t buckets)"
  },
  {
    "label": "UmaHistogramCounts100()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UmaHistogramCounts100(const std::string& name, int sample)"
  },
  {
    "label": "UmaHistogramCounts100()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UmaHistogramCounts100(const char* name, int sample)"
  },
  {
    "label": "UmaHistogramCounts1000()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UmaHistogramCounts1000(const std::string& name, int sample)"
  },
  {
    "label": "UmaHistogramCounts1000()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UmaHistogramCounts1000(const char* name, int sample)"
  },
  {
    "label": "UmaHistogramCounts10000()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UmaHistogramCounts10000(const std::string& name, int sample)"
  },
  {
    "label": "UmaHistogramCounts10000()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UmaHistogramCounts10000(const char* name, int sample)"
  },
  {
    "label": "UmaHistogramCounts100000()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UmaHistogramCounts100000(const std::string& name, int sample)"
  },
  {
    "label": "UmaHistogramCounts100000()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UmaHistogramCounts100000(const char* name, int sample)"
  },
  {
    "label": "UmaHistogramCounts1M()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UmaHistogramCounts1M(const std::string& name, int sample)"
  },
  {
    "label": "UmaHistogramCounts1M()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UmaHistogramCounts1M(const char* name, int sample)"
  },
  {
    "label": "UmaHistogramCounts10M()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UmaHistogramCounts10M(const std::string& name, int sample)"
  },
  {
    "label": "UmaHistogramCounts10M()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UmaHistogramCounts10M(const char* name, int sample)"
  },
  {
    "label": "UmaHistogramCustomTimes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UmaHistogramCustomTimes(const std::string& name,\n                                         TimeDelta sample,\n                                         TimeDelta min,\n                                         TimeDelta max,\n                                         size_t buckets)"
  },
  {
    "label": "UmaHistogramCustomTimes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UmaHistogramCustomTimes(const char* name,\n                                         TimeDelta sample,\n                                         TimeDelta min,\n                                         TimeDelta max,\n                                         size_t buckets)"
  },
  {
    "label": "UmaHistogramTimes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UmaHistogramTimes(const std::string& name, TimeDelta sample)"
  },
  {
    "label": "UmaHistogramTimes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UmaHistogramTimes(const char* name, TimeDelta sample)"
  },
  {
    "label": "UmaHistogramMediumTimes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UmaHistogramMediumTimes(const std::string& name,\n                                         TimeDelta sample)"
  },
  {
    "label": "UmaHistogramMediumTimes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UmaHistogramMediumTimes(const char* name, TimeDelta sample)"
  },
  {
    "label": "UmaHistogramLongTimes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UmaHistogramLongTimes(const std::string& name,\n                                       TimeDelta sample)"
  },
  {
    "label": "UmaHistogramLongTimes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UmaHistogramLongTimes(const char* name, TimeDelta sample)"
  },
  {
    "label": "UmaHistogramLongTimes100()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UmaHistogramLongTimes100(const std::string& name,\n                                          TimeDelta sample)"
  },
  {
    "label": "UmaHistogramLongTimes100()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UmaHistogramLongTimes100(const char* name, TimeDelta sample)"
  },
  {
    "label": "UmaHistogramCustomMicrosecondsTimes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UmaHistogramCustomMicrosecondsTimes(const std::string& name,\n                                                     TimeDelta sample,\n                                                     TimeDelta min,\n                                                     TimeDelta max,\n                                                     size_t buckets)"
  },
  {
    "label": "UmaHistogramCustomMicrosecondsTimes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UmaHistogramCustomMicrosecondsTimes(const char* name,\n                                                     TimeDelta sample,\n                                                     TimeDelta min,\n                                                     TimeDelta max,\n                                                     size_t buckets)"
  },
  {
    "label": "UmaHistogramMicrosecondsTimes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UmaHistogramMicrosecondsTimes(const std::string& name,\n                                               TimeDelta sample)"
  },
  {
    "label": "UmaHistogramMicrosecondsTimes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UmaHistogramMicrosecondsTimes(const char* name,\n                                               TimeDelta sample)"
  },
  {
    "label": "UmaHistogramMemoryKB()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UmaHistogramMemoryKB(const std::string& name, int sample)"
  },
  {
    "label": "UmaHistogramMemoryKB()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UmaHistogramMemoryKB(const char* name, int sample)"
  },
  {
    "label": "UmaHistogramMemoryMB()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UmaHistogramMemoryMB(const std::string& name, int sample)"
  },
  {
    "label": "UmaHistogramMemoryMB()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UmaHistogramMemoryMB(const char* name, int sample)"
  },
  {
    "label": "UmaHistogramMemoryLargeMB()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UmaHistogramMemoryLargeMB(const std::string& name, int sample)"
  },
  {
    "label": "UmaHistogramMemoryLargeMB()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UmaHistogramMemoryLargeMB(const char* name, int sample)"
  },
  {
    "label": "UmaHistogramSparse()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UmaHistogramSparse(const std::string& name, int sample)"
  },
  {
    "label": "UmaHistogramSparse()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UmaHistogramSparse(const char* name, int sample)"
  }
]