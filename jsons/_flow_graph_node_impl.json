[
  {
    "label": "function_input_queue",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "function_input_queue"
  },
  {
    "label": "function_input_base",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "function_input_base"
  },
  {
    "label": "op_type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "op_type"
  },
  {
    "label": "apply_body_task_bypass",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "apply_body_task_bypass"
  },
  {
    "label": "forward_task_bypass",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "forward_task_bypass"
  },
  {
    "label": "operation_type",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "operation_type"
  },
  {
    "label": "internal",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "internal"
  },
  {
    "label": "function_input",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "function_input"
  },
  {
    "label": "task",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "task"
  },
  {
    "label": "clear_element",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "clear_element"
  },
  {
    "label": "clear_element",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "clear_element"
  },
  {
    "label": "extract_element",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "extract_element"
  },
  {
    "label": "extract_element",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "extract_element"
  },
  {
    "label": "multifunction_input",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "multifunction_input"
  },
  {
    "label": "emit_element",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "emit_element"
  },
  {
    "label": "emit_element",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "emit_element"
  },
  {
    "label": "continue_input",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "continue_input"
  },
  {
    "label": "apply_body_task_bypass",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "apply_body_task_bypass"
  },
  {
    "label": "function_output",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "function_output"
  },
  {
    "label": "clear_element",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "clear_element"
  },
  {
    "label": "return",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "return"
  },
  {
    "label": "multifunction_output",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "multifunction_output"
  },
  {
    "label": "emit_element",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "emit_element"
  },
  {
    "label": "op_data()",
    "kind": "Method",
    "detail": "Function (operation_type)",
    "insertText": "op_data(reg_pred)"
  },
  {
    "label": "op_data()",
    "kind": "Method",
    "detail": "Function (operation_type)",
    "insertText": "op_data(rem_pred)"
  },
  {
    "label": "op_data()",
    "kind": "Method",
    "detail": "Function (operation_type)",
    "insertText": "op_data(add_blt_pred)"
  },
  {
    "label": "op_data()",
    "kind": "Method",
    "detail": "Function (operation_type)",
    "insertText": "op_data(del_blt_pred)"
  },
  {
    "label": "op_data()",
    "kind": "Method",
    "detail": "Function (operation_type)",
    "insertText": "op_data(blt_pred_cnt)"
  },
  {
    "label": "op_data()",
    "kind": "Method",
    "detail": "Function (operation_type)",
    "insertText": "op_data(blt_pred_cpy)"
  },
  {
    "label": "op_data()",
    "kind": "Method",
    "detail": "Function (operation_type)",
    "insertText": "op_data(i, app_body_bypass)"
  },
  {
    "label": "internal_try_put_task()",
    "kind": "Method",
    "detail": "Function (tryput_bypass:)",
    "insertText": "internal_try_put_task(tmp)"
  },
  {
    "label": "internal_forward()",
    "kind": "Method",
    "detail": "Function (try_fwd:)",
    "insertText": "internal_forward(tmp)"
  },
  {
    "label": "op_data()",
    "kind": "Method",
    "detail": "Function (operation_type)",
    "insertText": "op_data(t, tryput_bypass)"
  },
  {
    "label": "apply_body_bypass()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "apply_body_bypass(t)"
  },
  {
    "label": "check_op()",
    "kind": "Method",
    "detail": "Function (operation_type)",
    "insertText": "check_op(t, occupy_concurrency)"
  },
  {
    "label": "apply_body_bypass()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "apply_body_bypass(t)"
  },
  {
    "label": "internal_try_put_bypass()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "internal_try_put_bypass(t)"
  },
  {
    "label": "create_body_task()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "create_body_task(t)"
  },
  {
    "label": "internal_try_put_bypass()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "internal_try_put_bypass(t)"
  },
  {
    "label": "op_data()",
    "kind": "Method",
    "detail": "Function (operation_type)",
    "insertText": "op_data(try_fwd)"
  },
  {
    "label": "combine_tasks()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "combine_tasks(g, successor_task, postponed_task)"
  }
]