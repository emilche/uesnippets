[
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# ifndef SILK_LPC_INV_PRED_GAIN_ARM_H # define SILK_LPC_INV_PRED_GAIN_ARM_H # include \" celt / arm / armcpu . h \" # if)",
    "insertText": "defined(OPUS_ARM_MAY_HAVE_NEON_INTR) opus_int32 silk_LPC_inverse_pred_gain_neon( const opus_int16 *A_Q12, const opus_int order)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# if !)",
    "insertText": "defined(OPUS_HAVE_RTCD) && defined(OPUS_ARM_PRESUME_NEON) # define OVERRIDE_silk_LPC_inverse_pred_gain (1) # define silk_LPC_inverse_pred_gain(A_Q12, order, arch) ((void)(arch), PRESUME_NEON(silk_LPC_inverse_pred_gain)(A_Q12, order)) # endif # endif # if !defined(OVERRIDE_silk_LPC_inverse_pred_gain) # if defined(OPUS_HAVE_RTCD) && (defined(OPUS_ARM_MAY_HAVE_NEON_INTR) && !defined(OPUS_ARM_PRESUME_NEON_INTR)) extern opus_int32 (*const SILK_LPC_INVERSE_PRED_GAIN_IMPL[OPUS_ARCHMASK+1])(const opus_int16 *A_Q12, const opus_int order)"
  }
]