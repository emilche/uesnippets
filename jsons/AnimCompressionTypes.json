[
  {
    "label": "AnimationKeyFormat",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "AnimationKeyFormat"
  },
  {
    "label": "FMemoryReader",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMemoryReader"
  },
  {
    "label": "FMemoryWriter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMemoryWriter"
  },
  {
    "label": "UAnimCompress",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimCompress"
  },
  {
    "label": "UAnimCurveCompressionSettings",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimCurveCompressionSettings"
  },
  {
    "label": "UAnimBoneCompressionSettings",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimBoneCompressionSettings"
  },
  {
    "label": "UAnimBoneCompressionCodec",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimBoneCompressionCodec"
  },
  {
    "label": "USkeleton",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USkeleton"
  },
  {
    "label": "FCompactPose",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCompactPose"
  },
  {
    "label": "FBoneAnimationTrack",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBoneAnimationTrack"
  },
  {
    "label": "FCompressedOffsetDataBase",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCompressedOffsetDataBase"
  },
  {
    "label": "FAnimationErrorStats",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimationErrorStats"
  },
  {
    "label": "FArcToHexString",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FArcToHexString"
  },
  {
    "label": "FCompressedOffsetData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCompressedOffsetData"
  },
  {
    "label": "FCancelCompressionSignal",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCancelCompressionSignal"
  },
  {
    "label": "FCompressibleAnimData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCompressibleAnimData"
  },
  {
    "label": "UAnimSequence",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimSequence"
  },
  {
    "label": "FCompressedAnimSequence",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCompressedAnimSequence"
  },
  {
    "label": "TArrayMaker",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TArrayMaker"
  },
  {
    "label": "TNonConstArrayViewMaker",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TNonConstArrayViewMaker"
  },
  {
    "label": "TArrayViewMaker",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TArrayViewMaker"
  },
  {
    "label": "ContainerTypeMakerTemplate",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ContainerTypeMakerTemplate"
  },
  {
    "label": "FCompressedAnimDataBase",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCompressedAnimDataBase"
  },
  {
    "label": "AnimEncoding",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AnimEncoding"
  },
  {
    "label": "AnimEncoding",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AnimEncoding"
  },
  {
    "label": "AnimEncoding",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AnimEncoding"
  },
  {
    "label": "AnimationKeyFormat",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "AnimationKeyFormat"
  },
  {
    "label": "OtherContainerMaker",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "OtherContainerMaker"
  },
  {
    "label": "ICompressedAnimData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ICompressedAnimData"
  },
  {
    "label": "FArchive",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FArchive"
  },
  {
    "label": "FArchive",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FArchive"
  },
  {
    "label": "FCompressibleAnimDataResult",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCompressibleAnimDataResult"
  },
  {
    "label": "FUECompressedAnimDataMutable",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FUECompressedAnimDataMutable"
  },
  {
    "label": "FUECompressedAnimData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FUECompressedAnimData"
  },
  {
    "label": "FArchive",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FArchive"
  },
  {
    "label": "TMaybeMappedAllocator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TMaybeMappedAllocator"
  },
  {
    "label": "ForAnyElementType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ForAnyElementType"
  },
  {
    "label": "ForElementType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ForElementType"
  },
  {
    "label": "TMaybeMappedArray",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TMaybeMappedArray"
  },
  {
    "label": "TIsContiguousContainer",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TIsContiguousContainer"
  },
  {
    "label": "FAnimCompressedCurveIndexedName",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimCompressedCurveIndexedName"
  },
  {
    "label": "FCompressedAnimSequence",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCompressedAnimSequence"
  },
  {
    "label": "FTrackToSkeletonMap",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTrackToSkeletonMap"
  },
  {
    "label": "FSmartName",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSmartName"
  },
  {
    "label": "UAnimBoneCompressionCodec",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimBoneCompressionCodec"
  },
  {
    "label": "UAnimCurveCompressionCodec",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimCurveCompressionCodec"
  },
  {
    "label": "FRootMotionReset",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRootMotionReset"
  },
  {
    "label": "FAnimDDCKeyArgs",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimDDCKeyArgs"
  },
  {
    "label": "FCompressibleAnimData()",
    "kind": "Method",
    "detail": "Function (ENGINE_API)",
    "insertText": "FCompressibleAnimData()"
  },
  {
    "label": "FCompressibleAnimData()",
    "kind": "Method",
    "detail": "Function (ENGINE_API)",
    "insertText": "FCompressibleAnimData(UAnimBoneCompressionSettings* InBoneCompressionSettings, UAnimCurveCompressionSettings* InCurveCompressionSettings, USkeleton* InSkeleton, EAnimInterpolationType InInterpolation, float InSequenceLength, int32 InNumberOfKeys, const ITargetPlatform* InTargetPlatform)"
  },
  {
    "label": "FCompressibleAnimData()",
    "kind": "Method",
    "detail": "Function (ENGINE_API)",
    "insertText": "FCompressibleAnimData(class UAnimSequence* InSeq, const bool bPerformStripping, const ITargetPlatform* InTargetPlatform)"
  },
  {
    "label": "FCompressibleAnimData()",
    "kind": "Method",
    "detail": "Function (ENGINE_API)",
    "insertText": "FCompressibleAnimData(const FCompressibleAnimData&)"
  },
  {
    "label": "GetApproxRawDataArraySize()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetApproxRawDataArraySize(RawAnimationData)"
  },
  {
    "label": "FetchData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FetchData(const ITargetPlatform* InPlatform)"
  },
  {
    "label": "BakeOutAdditiveIntoRawData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BakeOutAdditiveIntoRawData(const FFrameRate& SampleRate, TArray<FBoneAnimationTrack>& ResampledTrackData, TArray<FFloatCurve>& FloatCurves)"
  },
  {
    "label": "ICompressedAnimData()",
    "kind": "Method",
    "detail": "Function (ENGINE_API)",
    "insertText": "ICompressedAnimData(const ICompressedAnimData&)"
  },
  {
    "label": "SerializeCompressedData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SerializeCompressedData(class FArchive& Ar)"
  },
  {
    "label": "SerializeCompressedData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SerializeCompressedData(UObject* DataOwner, class FArchive& Ar)"
  },
  {
    "label": "FString()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FString()"
  },
  {
    "label": "BuildFinalBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildFinalBuffer(TArray<uint8>& OutCompressedByteStream)"
  },
  {
    "label": "InitViewsFromBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitViewsFromBuffer(const TArrayView<uint8> BulkData)"
  },
  {
    "label": "ByteSwapData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ByteSwapData(TArrayView<uint8> CompresedData, TArchive& MemoryStream)"
  },
  {
    "label": "OnInvalidMaybeMappedAllocatorNum()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnInvalidMaybeMappedAllocatorNum(int32 NewNum, SIZE_T NumBytesPerElement)"
  },
  {
    "label": "DefaultCalculateSlackReserve()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "DefaultCalculateSlackReserve(NewMax, NumBytesPerElement, true, Alignment)"
  },
  {
    "label": "DefaultCalculateSlackShrink()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "DefaultCalculateSlackShrink(NewMax, CurrentMax, NumBytesPerElement, true, Alignment)"
  },
  {
    "label": "DefaultCalculateSlackGrow()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "DefaultCalculateSlackGrow(NewMax, CurrentMax, NumBytesPerElement, true, Alignment)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (loading)",
    "insertText": "Reset()"
  },
  {
    "label": "SerializeCompressedData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SerializeCompressedData(FArchive& Ar, bool bDDCData, UObject* DataOwner, USkeleton* Skeleton, UAnimBoneCompressionSettings* BoneCompressionSettings, UAnimCurveCompressionSettings* CurveCompressionSettings, bool bCanUseBulkData=true)"
  },
  {
    "label": "RebuildCurveIndexTable()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RebuildCurveIndexTable()"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "ClearCompressedBoneData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearCompressedBoneData()"
  },
  {
    "label": "ClearCompressedCurveData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearCompressedCurveData()"
  },
  {
    "label": "FAnimDDCKeyArgs()",
    "kind": "Method",
    "detail": "Function (ENGINE_API)",
    "insertText": "FAnimDDCKeyArgs(const UAnimSequenceBase& AnimSequence)"
  },
  {
    "label": "FAnimDDCKeyArgs()",
    "kind": "Method",
    "detail": "Function (ENGINE_API)",
    "insertText": "FAnimDDCKeyArgs(const UAnimSequenceBase& AnimSequence, const ITargetPlatform* TargetPlatform)"
  },
  {
    "label": "GetCompressionFrameRate()",
    "kind": "Method",
    "detail": "Function (FFrameRate)",
    "insertText": "GetCompressionFrameRate(const UAnimSequence& AnimSequence, const ITargetPlatform* TargetPlatform)"
  },
  {
    "label": "DecompressPose()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DecompressPose(FCompactPose& OutPose,\n\t\t\t\t\t\t\tconst FCompressedAnimSequence& CompressedData,\n\t\t\t\t\t\t\tconst FAnimExtractContext& ExtractionContext,\n\t\t\t\t\t\t\tUSkeleton* Skeleton,\n\t\t\t\t\t\t\tfloat SequenceLength,\n\t\t\t\t\t\t\tEAnimInterpolationType Interpolation,\n\t\t\t\t\t\t\tbool bIsBakedAdditive,\n\t\t\t\t\t\t\tconst TArray<FTransform>& RetargetTransforms,\n\t\t\t\t\t\t\tFName SourceName,\n\t\t\t\t\t\t\tconst FRootMotionReset& RootMotionReset)"
  },
  {
    "label": "DecompressPose()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DecompressPose(\tFCompactPose& OutPose,\n\t\t\t\t\t\t\tconst FCompressedAnimSequence& CompressedData,\n\t\t\t\t\t\t\tconst FAnimExtractContext& ExtractionContext,\n\t\t\t\t\t\t\tUSkeleton* SourceSkeleton,\n\t\t\t\t\t\t\tfloat SequenceLength,\n\t\t\t\t\t\t\tEAnimInterpolationType Interpolation,\n\t\t\t\t\t\t\tbool bIsBakedAdditive,\n\t\t\t\t\t\t\tFName RetargetSource,\n\t\t\t\t\t\t\tFName SourceName,\n\t\t\t\t\t\t\tconst FRootMotionReset& RootMotionReset)"
  },
  {
    "label": "GenerateGuidFromRawAnimData()",
    "kind": "Method",
    "detail": "Function (FGuid)",
    "insertText": "GenerateGuidFromRawAnimData(const TArray<FRawAnimSequenceTrack>& RawAnimationData, const FRawCurveTracks& RawCurveData)"
  }
]