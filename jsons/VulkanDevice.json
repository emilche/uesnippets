[
  {
    "label": "FVulkanSamplerState",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanSamplerState"
  },
  {
    "label": "FVulkanDynamicRHI",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanDynamicRHI"
  },
  {
    "label": "FVulkanDescriptorSetCache",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanDescriptorSetCache"
  },
  {
    "label": "FVulkanDescriptorPool",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanDescriptorPool"
  },
  {
    "label": "FVulkanDescriptorPoolsManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanDescriptorPoolsManager"
  },
  {
    "label": "FVulkanBindlessDescriptorManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanBindlessDescriptorManager"
  },
  {
    "label": "FVulkanCommandListContextImmediate",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanCommandListContextImmediate"
  },
  {
    "label": "FVulkanTransientHeapCache",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanTransientHeapCache"
  },
  {
    "label": "FVulkanDeviceExtension",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanDeviceExtension"
  },
  {
    "label": "FVulkanOcclusionQueryPool",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanOcclusionQueryPool"
  },
  {
    "label": "FVulkanRenderPassManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanRenderPassManager"
  },
  {
    "label": "FVulkanRayTracingCompactionRequestHandler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanRayTracingCompactionRequestHandler"
  },
  {
    "label": "FOptionalVulkanDeviceExtensions",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FOptionalVulkanDeviceExtensions"
  },
  {
    "label": "FOptionalVulkanDeviceExtensionProperties",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FOptionalVulkanDeviceExtensionProperties"
  },
  {
    "label": "FVulkanPhysicalDeviceFeatures",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanPhysicalDeviceFeatures"
  },
  {
    "label": "FVulkanDevice",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanDevice"
  },
  {
    "label": "FDeferredDeletionQueue2",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDeferredDeletionQueue2"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FEntry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FEntry"
  },
  {
    "label": "FVulkanDevice",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanDevice"
  },
  {
    "label": "FVulkanPipelineStateCacheManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanPipelineStateCacheManager"
  },
  {
    "label": "FVulkanRHIGraphicsPipelineState",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanRHIGraphicsPipelineState"
  },
  {
    "label": "FVulkanComputePipeline",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanComputePipeline"
  },
  {
    "label": "FVulkanCommandListContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanCommandListContext"
  },
  {
    "label": "FVulkanPipelineStateCacheManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanPipelineStateCacheManager"
  },
  {
    "label": "FVulkanDynamicRHI",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanDynamicRHI"
  },
  {
    "label": "FVulkanRHIGraphicsPipelineState",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanRHIGraphicsPipelineState"
  },
  {
    "label": "Query()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Query(VkPhysicalDevice PhysicalDevice, uint32 APIVersion)"
  },
  {
    "label": "FDeferredDeletionQueue2()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FDeferredDeletionQueue2(FVulkanDevice* InDevice)"
  },
  {
    "label": "EnqueueResourceAllocation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnqueueResourceAllocation(FVulkanAllocation& Allocation)"
  },
  {
    "label": "EnqueueDeviceAllocation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnqueueDeviceAllocation(FDeviceMemoryAllocation* DeviceMemoryAllocation)"
  },
  {
    "label": "ReleaseResources()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseResources(bool bDeleteImmediately = false)"
  },
  {
    "label": "OnCmdBufferDeleted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnCmdBufferDeleted(FVulkanCmdBuffer* CmdBuffer)"
  },
  {
    "label": "EnqueueGenericResource()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnqueueGenericResource(EType Type, uint64 Handle)"
  },
  {
    "label": "FVulkanDevice()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FVulkanDevice(FVulkanDynamicRHI* InRHI, VkPhysicalDevice Gpu)"
  },
  {
    "label": "InitGPU()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitGPU()"
  },
  {
    "label": "CreateDevice()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateDevice(TArray<const ANSICHAR*>& DeviceLayers, FVulkanDeviceExtensionArray& UEExtensions)"
  },
  {
    "label": "ChooseVariableRateShadingMethod()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ChooseVariableRateShadingMethod()"
  },
  {
    "label": "PrepareForDestroy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PrepareForDestroy()"
  },
  {
    "label": "Destroy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Destroy()"
  },
  {
    "label": "WaitUntilIdle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WaitUntilIdle()"
  },
  {
    "label": "InitializeRayTracing()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeRayTracing()"
  },
  {
    "label": "CleanUpRayTracing()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CleanUpRayTracing()"
  },
  {
    "label": "NotifyDeletedImage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyDeletedImage(VkImage Image, bool bRenderTarget)"
  },
  {
    "label": "PrepareForCPURead()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PrepareForCPURead()"
  },
  {
    "label": "SubmitCommandsAndFlushGPU()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SubmitCommandsAndFlushGPU()"
  },
  {
    "label": "ReleaseUnusedOcclusionQueryPools()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseUnusedOcclusionQueryPools()"
  },
  {
    "label": "NotifyDeletedGfxPipeline()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyDeletedGfxPipeline(class FVulkanRHIGraphicsPipelineState* Pipeline)"
  },
  {
    "label": "NotifyDeletedComputePipeline()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyDeletedComputePipeline(class FVulkanComputePipeline* Pipeline)"
  },
  {
    "label": "ReleaseDeferredContext()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseDeferredContext(FVulkanCommandListContext* InContext)"
  },
  {
    "label": "VulkanSetObjectName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "VulkanSetObjectName(VkObjectType Type, uint64_t Handle, const TCHAR* Name)"
  },
  {
    "label": "SetupPresentQueue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetupPresentQueue(VkSurfaceKHR Surface)"
  },
  {
    "label": "GetCalibrationTimestamp()",
    "kind": "Method",
    "detail": "Function (FGPUTimingCalibrationTimestamp)",
    "insertText": "GetCalibrationTimestamp()"
  },
  {
    "label": "MapBufferFormatSupport()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MapBufferFormatSupport(FPixelFormatInfo& PixelFormatInfo, EPixelFormat UEFormat, VkFormat VulkanFormat)"
  },
  {
    "label": "MapImageFormatSupport()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MapImageFormatSupport(FPixelFormatInfo& PixelFormatInfo, const TArrayView<const VkFormat>& PrioritizedFormats, EPixelFormatCapabilities RequiredCapabilities)"
  },
  {
    "label": "MapFormatSupport()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MapFormatSupport(EPixelFormat UEFormat, std::initializer_list<VkFormat> PrioritizedFormats, const VkComponentMapping& ComponentMapping, EPixelFormatCapabilities RequiredCapabilities, int32 BlockBytes)"
  },
  {
    "label": "MapFormatSupport()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MapFormatSupport(EPixelFormat UEFormat, std::initializer_list<VkFormat> PrioritizedFormats, const VkComponentMapping& ComponentMapping)"
  },
  {
    "label": "MapFormatSupport()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MapFormatSupport(EPixelFormat UEFormat, std::initializer_list<VkFormat> PrioritizedFormats, const VkComponentMapping& ComponentMapping, int32 BlockBytes)"
  },
  {
    "label": "MapFormatSupport()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MapFormatSupport(EPixelFormat UEFormat, std::initializer_list<VkFormat> PrioritizedFormats, const VkComponentMapping& ComponentMapping, EPixelFormatCapabilities RequiredCapabilities)"
  },
  {
    "label": "SubmitCommands()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SubmitCommands(FVulkanCommandListContext* Context)"
  },
  {
    "label": "SetupFormats()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetupFormats()"
  },
  {
    "label": "SetupDrawMarkers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetupDrawMarkers()"
  }
]