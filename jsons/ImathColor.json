[
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "IMATH_EXPORT_TEMPLATE_TYPE",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IMATH_EXPORT_TEMPLATE_TYPE"
  },
  {
    "label": "S",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "S"
  },
  {
    "label": "Color3()",
    "kind": "Method",
    "detail": "Function (# ifndef INCLUDED_IMATHCOLOR_H # define INCLUDED_IMATHCOLOR_H # include \" ImathExport . h \" # include \" ImathNamespace . h \" # include \" ImathVec . h \" # include \" half . h \" IMATH_INTERNAL_NAMESPACE_HEADER_ENTER template<class T> class IMATH_EXPORT_TEMPLATE_TYPE Color3 : public Vec3<T> { public : IMATH_HOSTDEVICE)",
    "insertText": "Color3()"
  },
  {
    "label": "Color3()",
    "kind": "Method",
    "detail": "Function (IMATH_HOSTDEVICE)",
    "insertText": "Color3(T a)"
  },
  {
    "label": "Color3()",
    "kind": "Method",
    "detail": "Function (IMATH_HOSTDEVICE)",
    "insertText": "Color3(T a, T b, T c)"
  },
  {
    "label": "Color3()",
    "kind": "Method",
    "detail": "Function (IMATH_HOSTDEVICE)",
    "insertText": "Color3(const Color3& c)"
  },
  {
    "label": "Color3()",
    "kind": "Method",
    "detail": "Function (template<class S> IMATH_HOSTDEVICE)",
    "insertText": "Color3(const Vec3<S>& v)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (IMATH_HOSTDEVICE IMATH_CONSTEXPR14 const Color3&)",
    "insertText": "operator(const Color3& c)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (IMATH_HOSTDEVICE Color3)",
    "insertText": "operator()"
  },
  {
    "label": "negate()",
    "kind": "Method",
    "detail": "Function (IMATH_HOSTDEVICE IMATH_CONSTEXPR14 const Color3&)",
    "insertText": "negate()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (IMATH_HOSTDEVICE IMATH_CONSTEXPR14 const Color3&)",
    "insertText": "operator(T a)"
  },
  {
    "label": "Color4()",
    "kind": "Method",
    "detail": "Function (} ; template<class T> class IMATH_EXPORT_TEMPLATE_TYPE Color4 { public : T r,g,b,a ; IMATH_HOSTDEVICE)",
    "insertText": "Color4()"
  },
  {
    "label": "Color4()",
    "kind": "Method",
    "detail": "Function (IMATH_HOSTDEVICE IMATH_CONSTEXPR14)",
    "insertText": "Color4(T a)"
  },
  {
    "label": "Color4()",
    "kind": "Method",
    "detail": "Function (IMATH_HOSTDEVICE IMATH_CONSTEXPR14)",
    "insertText": "Color4(T a, T b, T c, T d)"
  },
  {
    "label": "Color4()",
    "kind": "Method",
    "detail": "Function (IMATH_HOSTDEVICE IMATH_CONSTEXPR14)",
    "insertText": "Color4(const Color4& v)"
  },
  {
    "label": "Color4()",
    "kind": "Method",
    "detail": "Function (template<class S> IMATH_HOSTDEVICE IMATH_CONSTEXPR14)",
    "insertText": "Color4(const Color4<S>& v)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (IMATH_HOSTDEVICE IMATH_CONSTEXPR14 const Color4&)",
    "insertText": "operator(const Color4& v)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (IMATH_HOSTDEVICE T&)",
    "insertText": "operator(int i)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (template<class S> IMATH_HOSTDEVICE bool)",
    "insertText": "operator(const Color4<S>& v)"
  },
  {
    "label": "dimensions()",
    "kind": "Method",
    "detail": "Function (IMATH_HOSTDEVICE unsigned int)",
    "insertText": "dimensions()"
  },
  {
    "label": "baseTypeMax()",
    "kind": "Method",
    "detail": "Function (} IMATH_HOSTDEVICE T)",
    "insertText": "baseTypeMax()"
  },
  {
    "label": "baseTypeSmallest()",
    "kind": "Method",
    "detail": "Function (} IMATH_HOSTDEVICE T)",
    "insertText": "baseTypeSmallest()"
  },
  {
    "label": "baseTypeEpsilon()",
    "kind": "Method",
    "detail": "Function (} IMATH_HOSTDEVICE T)",
    "insertText": "baseTypeEpsilon()"
  },
  {
    "label": "setValue()",
    "kind": "Method",
    "detail": "Function (} typedef T BaseType ; template<class S> IMATH_HOSTDEVICE void)",
    "insertText": "setValue(S a, S b, S c, S d)"
  },
  {
    "label": "setValue()",
    "kind": "Method",
    "detail": "Function (template<class S> IMATH_HOSTDEVICE void)",
    "insertText": "setValue(const Color4<S>& v)"
  },
  {
    "label": "getValue()",
    "kind": "Method",
    "detail": "Function (template<class S> IMATH_HOSTDEVICE void)",
    "insertText": "getValue(S& a, S& b, S& c, S& d)"
  },
  {
    "label": "getValue()",
    "kind": "Method",
    "detail": "Function (template<class S> IMATH_HOSTDEVICE void)",
    "insertText": "getValue(Color4<S>& v)"
  },
  {
    "label": "getValue()",
    "kind": "Method",
    "detail": "Function (IMATH_HOSTDEVICE T*)",
    "insertText": "getValue()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} ; template<class T> std::ostream&)",
    "insertText": "operator(std::ostream& s, const Color4<T>& v)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (template<class S,class T> IMATH_HOSTDEVICE Color4<T>)",
    "insertText": "operator(S a, const Color4<T>& v)"
  },
  {
    "label": "Color3()",
    "kind": "Method",
    "detail": "Function (typedef Color3<float> Color3f ; typedef Color3<half> Color3h ; typedef Color3<unsigned char> Color3c ; typedef Color3<half> C3h ; typedef Color3<float> C3f ; typedef Color3<unsigned char> C3c ; typedef Color4<float> Color4f ; typedef Color4<half> Color4h ; typedef Color4<unsigned char> Color4c ; typedef Color4<float> C4f ; typedef Color4<half> C4h ; typedef Color4<unsigned char> C4c ; typedef unsigned int PackedColor ; template<class T> IMATH_HOSTDEVICE Color3<T)",
    "insertText": "Color3() IMATH_NOEXCEPT : Vec3<T>()"
  },
  {
    "label": "Color3()",
    "kind": "Method",
    "detail": "Function (} template<class T> IMATH_HOSTDEVICE Color3<T)",
    "insertText": "Color3(T a) IMATH_NOEXCEPT : Vec3<T> (a)"
  },
  {
    "label": "Color3()",
    "kind": "Method",
    "detail": "Function (} template<class T> IMATH_HOSTDEVICE Color3<T)",
    "insertText": "Color3(T a, T b, T c) IMATH_NOEXCEPT : Vec3<T> (a, b, c)"
  },
  {
    "label": "Color3()",
    "kind": "Method",
    "detail": "Function (} template<class T> IMATH_HOSTDEVICE Color3<T)",
    "insertText": "Color3(const Color3& c) IMATH_NOEXCEPT : Vec3<T> (c)"
  },
  {
    "label": "Color3()",
    "kind": "Method",
    "detail": "Function (} template<class T> template<class S> IMATH_HOSTDEVICE Color3<T)",
    "insertText": "Color3(const Vec3<S>& v) IMATH_NOEXCEPT : Vec3<T> (v)"
  },
  {
    "label": "Color4()",
    "kind": "Method",
    "detail": "Function (} template<class T> IMATH_HOSTDEVICE IMATH_CONSTEXPR14 Color4<T)",
    "insertText": "Color4(T x)"
  },
  {
    "label": "Color4()",
    "kind": "Method",
    "detail": "Function (r = g = b = a = x ; } template<class T> IMATH_HOSTDEVICE IMATH_CONSTEXPR14 Color4<T)",
    "insertText": "Color4(T x, T y, T z, T w)"
  },
  {
    "label": "T()",
    "kind": "Method",
    "detail": "Function (r =)",
    "insertText": "T(v.r)"
  },
  {
    "label": "T()",
    "kind": "Method",
    "detail": "Function (g =)",
    "insertText": "T(v.g)"
  },
  {
    "label": "T()",
    "kind": "Method",
    "detail": "Function (b =)",
    "insertText": "T(v.b)"
  },
  {
    "label": "T()",
    "kind": "Method",
    "detail": "Function (a =)",
    "insertText": "T(v.a)"
  },
  {
    "label": "setValue()",
    "kind": "Method",
    "detail": "Function (r = v . r ; g = v . g ; b = v . b ; a = v . a ; return* this ; } template<class T> template<class S> IMATH_HOSTDEVICE void Color4<T)",
    "insertText": "setValue(S x, S y, S z, S w)"
  },
  {
    "label": "T()",
    "kind": "Method",
    "detail": "Function (r =)",
    "insertText": "T(x)"
  },
  {
    "label": "T()",
    "kind": "Method",
    "detail": "Function (g =)",
    "insertText": "T(y)"
  },
  {
    "label": "T()",
    "kind": "Method",
    "detail": "Function (b =)",
    "insertText": "T(z)"
  },
  {
    "label": "T()",
    "kind": "Method",
    "detail": "Function (a =)",
    "insertText": "T(w)"
  },
  {
    "label": "getValue()",
    "kind": "Method",
    "detail": "Function (} template<class T> template<class S> IMATH_HOSTDEVICE void Color4<T)",
    "insertText": "getValue(S& x, S& y, S& z, S& w)"
  },
  {
    "label": "S()",
    "kind": "Method",
    "detail": "Function (x =)",
    "insertText": "S(r)"
  },
  {
    "label": "S()",
    "kind": "Method",
    "detail": "Function (y =)",
    "insertText": "S(g)"
  },
  {
    "label": "S()",
    "kind": "Method",
    "detail": "Function (z =)",
    "insertText": "S(b)"
  },
  {
    "label": "S()",
    "kind": "Method",
    "detail": "Function (w =)",
    "insertText": "S(a)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (r* = v . r ; g* = v . g ; b* = v . b ; a* = v . a ; return* this ; } template<class T> IMATH_HOSTDEVICE IMATH_CONSTEXPR14 const Color4<T>& Color4<T)",
    "insertText": "operator(T x)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} template<class S,class T> IMATH_HOSTDEVICE Color4<T>)",
    "insertText": "operator(S x, const Color4<T>& v)"
  }
]