[
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "FAttackRelease",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAttackRelease"
  },
  {
    "label": "FAttackReleaseSmoother",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAttackReleaseSmoother"
  },
  {
    "label": "FMeanSquaredFIR",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMeanSquaredFIR"
  },
  {
    "label": "FMeanSquaredIIR",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMeanSquaredIIR"
  },
  {
    "label": "FEnvelopeFollowerInitParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FEnvelopeFollowerInitParams"
  },
  {
    "label": "FEnvelopeFollower",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEnvelopeFollower"
  },
  {
    "label": "FInlineEnvelopeFollowerInitParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInlineEnvelopeFollowerInitParams"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "FInlineEnvelopeFollower",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FInlineEnvelopeFollower"
  },
  {
    "label": "FAttackRelease()",
    "kind": "Method",
    "detail": "Function (SIGNALPROCESSING_API)",
    "insertText": "FAttackRelease(float InSampleRate, float InAttackTimeMsec, float InReleaseTimeMsec, bool bInIsAnalog)"
  },
  {
    "label": "SetAnalog()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAnalog(bool bInIsAnalog)"
  },
  {
    "label": "SetAttackTime()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAttackTime(float InAttackTimeMsec)"
  },
  {
    "label": "SetReleaseTime()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetReleaseTime(float InReleaseTimeMsec)"
  },
  {
    "label": "SetSampleRate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSampleRate(float InSampleRate)"
  },
  {
    "label": "FAttackReleaseSmoother()",
    "kind": "Method",
    "detail": "Function (SIGNALPROCESSING_API)",
    "insertText": "FAttackReleaseSmoother(float InSampleRate, int32 InNumChannels, float InAttackTimeMsec, float InReleaseTimeMsec, bool bInIsAnalog)"
  },
  {
    "label": "ProcessAudio()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessAudio(const float* InBuffer, int32 InNumFrames)"
  },
  {
    "label": "ProcessAudio()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessAudio(const float* InBuffer, int32 InNumFrames, float* OutBuffer)"
  },
  {
    "label": "SetNumChannels()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetNumChannels(int32 InNumChannels)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "FMeanSquaredFIR()",
    "kind": "Method",
    "detail": "Function (SIGNALPROCESSING_API)",
    "insertText": "FMeanSquaredFIR(float InSampleRate, int32 InNumChannels, float InWindowTimeMsec)"
  },
  {
    "label": "SetWindowSize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetWindowSize(float InWindowTimeMsec)"
  },
  {
    "label": "SetNumChannels()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetNumChannels(int32 InNumChannels)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "ProcessAudio()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessAudio(const float* InBuffer, int32 InNumFrames, float* OutBuffer)"
  },
  {
    "label": "FMeanSquaredIIR()",
    "kind": "Method",
    "detail": "Function (SIGNALPROCESSING_API)",
    "insertText": "FMeanSquaredIIR(float InSampleRate, int32 InNumChannels, float InWindowTimeMsec)"
  },
  {
    "label": "SetWindowSize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetWindowSize(float InWindowTimeMsec)"
  },
  {
    "label": "SetNumChannels()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetNumChannels(int32 InNumChannels)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "ProcessAudio()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessAudio(const float* InBuffer, int32 InNumFrames, float* OutBuffer)"
  },
  {
    "label": "FEnvelopeFollower()",
    "kind": "Method",
    "detail": "Function (SIGNALPROCESSING_API)",
    "insertText": "FEnvelopeFollower()"
  },
  {
    "label": "FEnvelopeFollower()",
    "kind": "Method",
    "detail": "Function (SIGNALPROCESSING_API)",
    "insertText": "FEnvelopeFollower(const FEnvelopeFollowerInitParams& InParams)"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Init(const FEnvelopeFollowerInitParams& InParams)"
  },
  {
    "label": "SetNumChannels()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetNumChannels(int32 InNumChannels)"
  },
  {
    "label": "SetAnalog()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAnalog(bool bInIsAnalog)"
  },
  {
    "label": "SetAttackTime()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAttackTime(float InAttackTimeMsec)"
  },
  {
    "label": "SetReleaseTime()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetReleaseTime(float InReleaseTimeMsec)"
  },
  {
    "label": "SetMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetMode(EPeakMode::Type InMode)"
  },
  {
    "label": "ProcessAudio()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessAudio(const float* InBuffer, int32 InNumFrames, float* OutBuffer)"
  },
  {
    "label": "ProcessAudio()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessAudio(const float* InBuffer, int32 InNumFrames)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "ProcessWorkBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessWorkBuffer(const float* InBuffer, int32 InNumFrames)"
  },
  {
    "label": "ArrayAbs()",
    "kind": "Method",
    "detail": "Function (EPeakMode::Peak:)",
    "insertText": "ArrayAbs(In, Out)"
  }
]