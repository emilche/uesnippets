[
  {
    "label": "FPrimitiveDrawInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPrimitiveDrawInterface"
  },
  {
    "label": "FSceneView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSceneView"
  },
  {
    "label": "FViewport",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FViewport"
  },
  {
    "label": "FCCDIKEditMode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCCDIKEditMode"
  },
  {
    "label": "UAnimGraphNode_Base",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimGraphNode_Base"
  },
  {
    "label": "FAnimNode_Base",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimNode_Base"
  },
  {
    "label": "FAnimNode_CCDIK",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimNode_CCDIK"
  },
  {
    "label": "UAnimGraphNode_CCDIK",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimGraphNode_CCDIK"
  },
  {
    "label": "EnterMode()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" AnimNodeEditMode . h \" # include \" Math / MathFwd . h \" # include \" UnrealWidgetFwd . h \" class FPrimitiveDrawInterface ; class FSceneView ; class FViewport ; class FCCDIKEditMode : public FAnimNodeEditMode { public : void)",
    "insertText": "EnterMode(class UAnimGraphNode_Base* InEditorNode, struct FAnimNode_Base* InRuntimeNode)"
  },
  {
    "label": "ExitMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExitMode()"
  },
  {
    "label": "GetWidgetLocation()",
    "kind": "Method",
    "detail": "Function (FVector)",
    "insertText": "GetWidgetLocation()"
  },
  {
    "label": "GetWidgetMode()",
    "kind": "Method",
    "detail": "Function (UE::Widget::EWidgetMode)",
    "insertText": "GetWidgetMode()"
  },
  {
    "label": "UsesTransformWidget()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UsesTransformWidget(UE::Widget::EWidgetMode InWidgetMode)"
  },
  {
    "label": "DoTranslation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DoTranslation(FVector& InTranslation)"
  },
  {
    "label": "Render()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Render(const FSceneView* View, FViewport* Viewport, FPrimitiveDrawInterface* PDI)"
  }
]