[
  {
    "label": "ClientHandlerStd",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ClientHandlerStd"
  },
  {
    "label": "ClientHandlerStd()",
    "kind": "Method",
    "detail": "Function (# ifndef CEF_TESTS_CEFCLIENT_BROWSER_CLIENT_HANDLER_STD_H_ # define CEF_TESTS_CEFCLIENT_BROWSER_CLIENT_HANDLER_STD_H_ # pragma once # include \" tests / cefclient / browser / client_handler . h \" namespace client { class ClientHandlerStd : public ClientHandler { public :)",
    "insertText": "ClientHandlerStd(Delegate* delegate, const std::string& startup_url)"
  },
  {
    "label": "IMPLEMENT_REFCOUNTING()",
    "kind": "Method",
    "detail": "Function (private :)",
    "insertText": "IMPLEMENT_REFCOUNTING(ClientHandlerStd)"
  },
  {
    "label": "DISALLOW_COPY_AND_ASSIGN()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DISALLOW_COPY_AND_ASSIGN(ClientHandlerStd)"
  }
]