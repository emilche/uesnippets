[
  {
    "label": "SGameMenuItemWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SGameMenuItemWidget"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "FGameMenuItem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGameMenuItem"
  },
  {
    "label": "FGameMenuPage",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGameMenuPage"
  },
  {
    "label": "DECLARE_DELEGATE()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" CoreMinimal . h \" # include \" Delegates / Delegate . h \" # include \" HAL / Platform . h \" # include \" Internationalization / Text . h \" # include \" Templates / SharedPointer . h \" class SGameMenuItemWidget ; namespace EGameMenuItemType { enum Type { Root,Standard,MultiChoice,CustomWidget,} ; } ; class FGameMenuItem : public TSharedFromThis<FGameMenuItem> { public :)",
    "insertText": "DECLARE_DELEGATE(FOnConfirmMenuItem)"
  },
  {
    "label": "DECLARE_DELEGATE_TwoParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DELEGATE_TwoParams(FOnOptionChanged, TSharedPtr<FGameMenuItem>, int32)"
  },
  {
    "label": "FGameMenuItem()",
    "kind": "Method",
    "detail": "Function (FOnConfirmMenuItem OnConfirmMenuItem ; FOnOptionChanged OnOptionChanged ; EGameMenuItemType::Type MenuItemType ; FText Text ; TSharedPtr<class FGameMenuPage> SubMenu ; TSharedPtr<SGameMenuItemWidget> Widget ; TSharedPtr<SGameMenuItemWidget> CustomWidget ; TArray<FText> MultiChoice ; int32 MinMultiChoiceIndex ; int32 MaxMultiChoiceIndex ; int32 SelectedMultiChoice ; bool bInactive ;)",
    "insertText": "FGameMenuItem(FText _text)"
  },
  {
    "label": "FGameMenuItem()",
    "kind": "Method",
    "detail": "Function (Text = _text ; MenuItemType = EGameMenuItemType::Standard ; MinMultiChoiceIndex = MaxMultiChoiceIndex = SelectedMultiChoice = 0 ; bInactive = false ; })",
    "insertText": "FGameMenuItem(TSharedPtr<SGameMenuItemWidget> InWidget)"
  },
  {
    "label": "FGameMenuItem()",
    "kind": "Method",
    "detail": "Function (MenuItemType = EGameMenuItemType::CustomWidget ; CustomWidget = InWidget ; MinMultiChoiceIndex = MaxMultiChoiceIndex = SelectedMultiChoice = 0 ; bInactive = false ; })",
    "insertText": "FGameMenuItem(FText InText, TArray<FText> InOptions, int32 InDefaultIndex=0)"
  },
  {
    "label": "ConfirmPressed()",
    "kind": "Method",
    "detail": "Function (Text = InText ; MenuItemType = EGameMenuItemType::MultiChoice ; MultiChoice = InOptions ; MinMultiChoiceIndex = MaxMultiChoiceIndex = - 1 ; SelectedMultiChoice = InDefaultIndex ; bInactive = false ; } bool)",
    "insertText": "ConfirmPressed()"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (bool bHandled = false ;)",
    "insertText": "if((bInactive == false ) && (OnConfirmMenuItem.IsBound() == true ))"
  },
  {
    "label": "Execute()",
    "kind": "Method",
    "detail": "Function (OnConfirmMenuItem .)",
    "insertText": "Execute()"
  },
  {
    "label": "CreateRoot()",
    "kind": "Method",
    "detail": "Function (bHandled = true ; } return bHandled ; } TSharedRef<FGameMenuItem>)",
    "insertText": "CreateRoot()"
  },
  {
    "label": "FGameMenuItem()",
    "kind": "Method",
    "detail": "Function (} private :)",
    "insertText": "FGameMenuItem()"
  }
]