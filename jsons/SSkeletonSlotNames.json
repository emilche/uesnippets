[
  {
    "label": "FMenuBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMenuBuilder"
  },
  {
    "label": "IEditableSkeleton",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IEditableSkeleton"
  },
  {
    "label": "SSlotNameReferenceWindow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SSlotNameReferenceWindow"
  },
  {
    "label": "SToolTip",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SToolTip"
  },
  {
    "label": "UAnimBlueprint",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimBlueprint"
  },
  {
    "label": "UAnimGraphNode_Slot",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimGraphNode_Slot"
  },
  {
    "label": "FNotificationInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FNotificationInfo"
  },
  {
    "label": "FSkeletonSlotNamesSummoner",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSkeletonSlotNamesSummoner"
  },
  {
    "label": "FAssetEditorToolkit",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAssetEditorToolkit"
  },
  {
    "label": "IEditableSkeleton",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IEditableSkeleton"
  },
  {
    "label": "IEditableSkeleton",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IEditableSkeleton"
  },
  {
    "label": "FDisplayedSlotNameInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDisplayedSlotNameInfo"
  },
  {
    "label": "SSkeletonSlotNames",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SSkeletonSlotNames"
  },
  {
    "label": "FAssetData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAssetData"
  },
  {
    "label": "IEditableSkeleton",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IEditableSkeleton"
  },
  {
    "label": "FSkeletonSlotNamesSummoner()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FSkeletonSlotNamesSummoner(TSharedPtr<class FAssetEditorToolkit> InHostingApp, const TSharedRef<class IEditableSkeleton>& InEditableSkeleton, FOnObjectSelected InOnObjectSelected)"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct(const FArguments& InArgs, const TSharedRef<IEditableSkeleton>& InEditableSkeleton)"
  },
  {
    "label": "ClearDetailsView()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearDetailsView()"
  },
  {
    "label": "PostUndoRedo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostUndoRedo()"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT(\"SSkeletonSlotNames\")"
  },
  {
    "label": "OnFilterTextChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnFilterTextChanged( const FText& SearchText )"
  },
  {
    "label": "OnFilterTextCommitted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnFilterTextCommitted( const FText& SearchText, ETextCommit::Type CommitInfo )"
  },
  {
    "label": "GenerateNotifyRow()",
    "kind": "Method",
    "detail": "Function (TSharedRef<ITableRow>)",
    "insertText": "GenerateNotifyRow( TSharedPtr<FDisplayedSlotNameInfo> InInfo, const TSharedRef<STableViewBase>& OwnerTable )"
  },
  {
    "label": "GetChildrenForInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetChildrenForInfo(TSharedPtr<FDisplayedSlotNameInfo> InInfo, TArray< TSharedPtr<FDisplayedSlotNameInfo> >& OutChildren)"
  },
  {
    "label": "OnNotifySelectionChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnNotifySelectionChanged( TSharedPtr<FDisplayedSlotNameInfo> Selection, ESelectInfo::Type SelectInfo )"
  },
  {
    "label": "OnSaveSkeleton()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSaveSkeleton()"
  },
  {
    "label": "OnAddSlot()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAddSlot()"
  },
  {
    "label": "AddSlotPopUpOnCommit()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddSlotPopUpOnCommit(const FText& InNewSlotName, ETextCommit::Type CommitInfo)"
  },
  {
    "label": "OnAddGroup()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAddGroup()"
  },
  {
    "label": "AddGroupPopUpOnCommit()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddGroupPopUpOnCommit(const FText& InNewGroupName, ETextCommit::Type CommitInfo)"
  },
  {
    "label": "OnDeleteSlot()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDeleteSlot(FName SlotName)"
  },
  {
    "label": "DeleteSlot()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeleteSlot(const FName& SlotName)"
  },
  {
    "label": "RetryDeleteSlot()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RetryDeleteSlot(FName SlotName)"
  },
  {
    "label": "OnDeleteSlotGroup()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDeleteSlotGroup(FName GroupName)"
  },
  {
    "label": "DeleteSlotGroup()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeleteSlotGroup(const FName& GroupName)"
  },
  {
    "label": "RetryDeleteSlotGroup()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RetryDeleteSlotGroup(FName GroupName)"
  },
  {
    "label": "CanDeleteSlotGroup()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanDeleteSlotGroup(FName GroupName)"
  },
  {
    "label": "OnRenameSlotPopupCommitted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnRenameSlotPopupCommitted(const FText& InNewSlotText, ETextCommit::Type CommitInfo, FName OldName)"
  },
  {
    "label": "OnRenameSlot()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnRenameSlot(FName CurrentName)"
  },
  {
    "label": "RenameSlot()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenameSlot(FName CurrentName, FName NewName)"
  },
  {
    "label": "RetryRenameSlot()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RetryRenameSlot(FName CurrentName, FName NewName)"
  },
  {
    "label": "FillSetSlotGroupSubMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FillSetSlotGroupSubMenu(FMenuBuilder& MenuBuilder)"
  },
  {
    "label": "ContextMenuOnSetSlot()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ContextMenuOnSetSlot(FName InNewGroupName)"
  },
  {
    "label": "RefreshSlotNameListWithFilter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RefreshSlotNameListWithFilter()"
  },
  {
    "label": "ShowNotifyInDetailsView()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ShowNotifyInDetailsView( FName NotifyName )"
  },
  {
    "label": "GetCompatibleAnimMontages()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetCompatibleAnimMontages( TArray<struct FAssetData>& OutAssets )"
  },
  {
    "label": "GetCompatibleAnimBlueprints()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetCompatibleAnimBlueprints( TArray<FAssetData>& OutAssets )"
  },
  {
    "label": "GetAnimMontagesUsingSlot()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetAnimMontagesUsingSlot(FName SlotName, TArray<FAssetData>& OutMontages)"
  },
  {
    "label": "GetAnimMontagesUsingSlotGroup()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetAnimMontagesUsingSlotGroup(FName SlotGroupName, TArray<FAssetData>& OutMontages)"
  },
  {
    "label": "GetMontagesAndNodesUsingSlot()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetMontagesAndNodesUsingSlot(const FName& SlotName, TArray<FAssetData>& CompatibleMontages, TMultiMap<UAnimBlueprint*, UAnimGraphNode_Slot*>& CompatibleSlotNodes)"
  },
  {
    "label": "GetMontagesAndNodesUsingSlotGroup()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetMontagesAndNodesUsingSlotGroup(const FName& SlotGroupName, TArray<FAssetData>& OutMontages, TMultiMap<UAnimBlueprint*, UAnimGraphNode_Slot*> &OutBlueprintSlotMap)"
  },
  {
    "label": "NotifyUser()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyUser( FNotificationInfo& NotificationInfo )"
  },
  {
    "label": "ReferenceWindowClosed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReferenceWindowClosed(const TSharedRef<SWindow>& Window)"
  }
]