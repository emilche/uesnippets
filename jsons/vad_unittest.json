[
  {
    "label": "VadTest",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "VadTest"
  },
  {
    "label": "sizeof()",
    "kind": "Method",
    "detail": "Function (# ifndef COMMON_AUDIO_VAD_VAD_UNITTEST_H_ # define COMMON_AUDIO_VAD_VAD_UNITTEST_H_ # include<stddef . h> # include \" test / gtest . h \" namespace webrtc { namespace test { const int kModes [ ] = { 0,1,2,3 } ; const size_t kModesSize =)",
    "insertText": "sizeof(kModes) / sizeof(*kModes)"
  },
  {
    "label": "sizeof()",
    "kind": "Method",
    "detail": "Function (const int kRates [ ] = { 8 0 0 0,1 2 0 0 0,1 6 0 0 0,2 4 0 0 0,3 2 0 0 0,4 8 0 0 0 } ; const size_t kRatesSize =)",
    "insertText": "sizeof(kRates) / sizeof(*kRates)"
  },
  {
    "label": "sizeof()",
    "kind": "Method",
    "detail": "Function (const size_t kMaxFrameLength = 1 4 4 0 ; const size_t kFrameLengths [ ] = { 8 0,1 2 0,1 6 0,2 4 0,3 2 0,4 8 0,6 4 0,9 6 0,kMaxFrameLength } ; const size_t kFrameLengthsSize =)",
    "insertText": "sizeof(kFrameLengths) / sizeof(*kFrameLengths)"
  },
  {
    "label": "VadTest()",
    "kind": "Method",
    "detail": "Function (} } class VadTest : public::testing::Test { protected :)",
    "insertText": "VadTest()"
  },
  {
    "label": "SetUp()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetUp()"
  },
  {
    "label": "TearDown()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TearDown()"
  },
  {
    "label": "ValidRatesAndFrameLengths()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ValidRatesAndFrameLengths(int rate, size_t frame_length)"
  }
]