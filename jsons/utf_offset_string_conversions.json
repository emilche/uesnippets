[
  {
    "label": "and",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "and"
  },
  {
    "label": "BASE_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BASE_EXPORT"
  },
  {
    "label": "BASE_EXPORT",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "BASE_EXPORT"
  },
  {
    "label": "AdjustOffsets()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AdjustOffsets(const Adjustments& adjustments,\n                            std::vector<size_t>* offsets_for_adjustment,\n                            size_t limit = std::u16string::npos)"
  },
  {
    "label": "AdjustOffset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AdjustOffset(const Adjustments& adjustments,\n                           size_t* offset,\n                           size_t limit = std::u16string::npos)"
  },
  {
    "label": "UnadjustOffsets()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnadjustOffsets(const Adjustments& adjustments,\n                              std::vector<size_t>* offsets_for_unadjustment)"
  },
  {
    "label": "UnadjustOffset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnadjustOffset(const Adjustments& adjustments,\n                             size_t* offset)"
  },
  {
    "label": "MergeSequentialAdjustments()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MergeSequentialAdjustments(\n      const Adjustments& first_adjustments,\n      Adjustments* adjustments_on_adjusted_string)"
  },
  {
    "label": "UTF8ToUTF16WithAdjustments()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UTF8ToUTF16WithAdjustments(\n    const char* src,\n    size_t src_len,\n    std::u16string* output,\n    base::OffsetAdjuster::Adjustments* adjustments)"
  },
  {
    "label": "UTF8ToUTF16WithAdjustments()",
    "kind": "Method",
    "detail": "Function (std::u16string)",
    "insertText": "UTF8ToUTF16WithAdjustments(\n    const base::StringPiece& utf8,\n    base::OffsetAdjuster::Adjustments* adjustments)"
  },
  {
    "label": "UTF8ToUTF16AndAdjustOffsets()",
    "kind": "Method",
    "detail": "Function (std::u16string)",
    "insertText": "UTF8ToUTF16AndAdjustOffsets(\n    const base::StringPiece& utf8,\n    std::vector<size_t>* offsets_for_adjustment)"
  },
  {
    "label": "UTF16ToUTF8AndAdjustOffsets()",
    "kind": "Method",
    "detail": "Function (std::string)",
    "insertText": "UTF16ToUTF8AndAdjustOffsets(\n    const base::StringPiece16& utf16,\n    std::vector<size_t>* offsets_for_adjustment)"
  }
]