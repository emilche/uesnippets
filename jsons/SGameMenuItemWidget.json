[
  {
    "label": "FGeometry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGeometry"
  },
  {
    "label": "FPointerEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPointerEvent"
  },
  {
    "label": "GAMEMENUBUILDER_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "GAMEMENUBUILDER_API"
  },
  {
    "label": "APlayerController",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "APlayerController"
  },
  {
    "label": "APlayerController",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "APlayerController"
  },
  {
    "label": "DECLARE_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "DECLARE_DELEGATE_OneParam( FOnArrowPressed, int )"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct(const FArguments& InArgs)"
  },
  {
    "label": "SetMenuItemActive()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetMenuItemActive(bool bIsMenuItemActive)"
  },
  {
    "label": "SetMenuOwner()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetMenuOwner(TWeakObjectPtr<class APlayerController> InPCOwner)"
  },
  {
    "label": "SetMenuStyle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetMenuStyle(const FGameMenuStyle* InMenuStyle)"
  },
  {
    "label": "SetClickedDelegate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetClickedDelegate(FOnClicked InOnClicked)"
  },
  {
    "label": "SetArrowPressedDelegate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetArrowPressedDelegate(FOnArrowPressed InOnArrowPressed)"
  },
  {
    "label": "OnRightArrowDown()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnRightArrowDown(const FGeometry& MyGeometry, const FPointerEvent& MouseEvent)"
  },
  {
    "label": "OnLeftArrowDown()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnLeftArrowDown(const FGeometry& MyGeometry, const FPointerEvent& MouseEvent)"
  }
]