[
  {
    "label": "FHLSLSyntaxHighlighterMarshaller",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FHLSLSyntaxHighlighterMarshaller"
  },
  {
    "label": "FShaderStatsInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FShaderStatsInfo"
  },
  {
    "label": "FContent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FContent"
  },
  {
    "label": "FMaterialShaderEntry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMaterialShaderEntry"
  },
  {
    "label": "FShaderPlatformSettings",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FShaderPlatformSettings"
  },
  {
    "label": "FInstanceData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInstanceData"
  },
  {
    "label": "FPlatformData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPlatformData"
  },
  {
    "label": "SScrollBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SScrollBox"
  },
  {
    "label": "SDockTab",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SDockTab"
  },
  {
    "label": "SScrollBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SScrollBox"
  },
  {
    "label": "SDockTab",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SDockTab"
  },
  {
    "label": "FMaterialStats",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMaterialStats"
  },
  {
    "label": "FMaterialStatsUtils",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMaterialStatsUtils"
  },
  {
    "label": "SMaterialEditorStatsWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SMaterialEditorStatsWidget"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "IMessageLogListing",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IMessageLogListing"
  },
  {
    "label": "FMaterialStatsGrid",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMaterialStatsGrid"
  },
  {
    "label": "UMaterialStatsOptions",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialStatsOptions"
  },
  {
    "label": "IMaterialEditor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IMaterialEditor"
  },
  {
    "label": "UMaterialInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialInterface"
  },
  {
    "label": "SDockTab",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SDockTab"
  },
  {
    "label": "FSpawnTabArgs",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSpawnTabArgs"
  },
  {
    "label": "SDockTab",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SDockTab"
  },
  {
    "label": "FSpawnTabArgs",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSpawnTabArgs"
  },
  {
    "label": "SMaterialEditorStatsWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SMaterialEditorStatsWidget"
  },
  {
    "label": "IMessageLogListing",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IMessageLogListing"
  },
  {
    "label": "IMessageLogListing",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IMessageLogListing"
  },
  {
    "label": "SMaterialEditorStatsWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SMaterialEditorStatsWidget"
  },
  {
    "label": "SScrollBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SScrollBox"
  },
  {
    "label": "SDockTab",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SDockTab"
  },
  {
    "label": "CheckShaders()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CheckShaders(bool bIgnoreCooldown)"
  },
  {
    "label": "AllocateMaterialResources()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AllocateMaterialResources()"
  },
  {
    "label": "ClearResources()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearResources()"
  },
  {
    "label": "FShaderPlatformSettings()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FShaderPlatformSettings(\n\t\tconst EPlatformCategoryType _PlatformType,\n\t\tconst EShaderPlatform _ShaderPlatformID,\n\t\tconst FName _Name,\n\t\tconst bool _bAllowPresenceInGrid,\n\t\tconst bool _bAllowCodeView,\n\t\tconst FString& _Description,\n\t\tconst bool bAlwaysOn)"
  },
  {
    "label": "GetShaderViewerScrollBox()",
    "kind": "Method",
    "detail": "Function (SScrollBox>)",
    "insertText": "GetShaderViewerScrollBox(const EMaterialQualityLevel::Type QualityLevel)"
  },
  {
    "label": "SetCodeViewerTab()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCodeViewerTab(const EMaterialQualityLevel::Type QualityLevel, TSharedRef<SDockTab> Tab)"
  },
  {
    "label": "GetCodeViewerTab()",
    "kind": "Method",
    "detail": "Function (SDockTab>)",
    "insertText": "GetCodeViewerTab(const EMaterialQualityLevel::Type QualityLevel)"
  },
  {
    "label": "SetExtractStatsFlag()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetExtractStatsFlag(const EMaterialQualityLevel::Type QualityType, const bool bValue)"
  },
  {
    "label": "SetCodeViewNeeded()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCodeViewNeeded(const EMaterialQualityLevel::Type Quality, const bool bValue)"
  },
  {
    "label": "FlipPresentInGrid()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "FlipPresentInGrid()"
  },
  {
    "label": "SetPresentInGrid()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPresentInGrid(const bool bValue)"
  },
  {
    "label": "SetNeedShaderCompilation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetNeedShaderCompilation(const EMaterialQualityLevel::Type QualityLevel, const bool bValue, const bool bOnlyCompileDerivedMI)"
  },
  {
    "label": "OnShaderViewComboSelectionChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnShaderViewComboSelectionChanged(TSharedPtr<FMaterialShaderEntry> Item, EMaterialQualityLevel::Type QualityType, const int32 InstanceIndex)"
  },
  {
    "label": "GetShaderCode()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetShaderCode(const EMaterialQualityLevel::Type QualityType, const int32 InstanceIndex)"
  },
  {
    "label": "SetMaterial()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetMaterial(UMaterial *InBaseMaterial, UMaterialInstance *InBaseMaterialInstance, const TArray<TObjectPtr<UMaterialInstance>>& InDerivedMaterialInstances)"
  },
  {
    "label": "Update()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Update()"
  },
  {
    "label": "CachePendingShaders()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CachePendingShaders()"
  },
  {
    "label": "AddShaderPlatform()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FShaderPlatformSettings>)",
    "insertText": "AddShaderPlatform(const EPlatformCategoryType PlatformType, const EShaderPlatform PlatformID, const FName PlatformName, const bool bAllowCodeView, const FString& Description, const bool bAlwaysOn = false)"
  },
  {
    "label": "BuildShaderPlatformDB()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildShaderPlatformDB(const bool bAllowIgnoringCompilationErrors)"
  },
  {
    "label": "SpawnTab_ShaderCode()",
    "kind": "Method",
    "detail": "Function (SDockTab>)",
    "insertText": "SpawnTab_ShaderCode(const class FSpawnTabArgs& Args, const EShaderPlatform PlatformID, const EMaterialQualityLevel::Type QualityType, const int32 InstanceIndex)"
  },
  {
    "label": "SpawnTab_HLSLCode()",
    "kind": "Method",
    "detail": "Function (SDockTab>)",
    "insertText": "SpawnTab_HLSLCode(const class FSpawnTabArgs& Args)"
  },
  {
    "label": "MakeTabName()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "MakeTabName(const EPlatformCategoryType PlatformType, const EShaderPlatform ShaderPlatformType, const EMaterialQualityLevel::Type QualityLevel, const int32 InstanceIndex)"
  },
  {
    "label": "BuildStatsTab()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildStatsTab()"
  },
  {
    "label": "SpawnTab_Stats()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SDockTab>)",
    "insertText": "SpawnTab_Stats(const FSpawnTabArgs& Args)"
  },
  {
    "label": "BuildOldStatsTab()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildOldStatsTab()"
  },
  {
    "label": "SpawnTab_OldStats()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SDockTab>)",
    "insertText": "SpawnTab_OldStats(const FSpawnTabArgs& Args)"
  },
  {
    "label": "BuildViewShaderCodeMenus()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildViewShaderCodeMenus()"
  },
  {
    "label": "ToggleStats()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ToggleStats()"
  },
  {
    "label": "ToggleOldStats()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ToggleOldStats()"
  },
  {
    "label": "SetShowStats()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetShowStats(const bool bValue)"
  },
  {
    "label": "SetShowOldStats()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetShowOldStats(const bool bValue)"
  },
  {
    "label": "SetShaderPlatformUseCodeView()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetShaderPlatformUseCodeView(const EShaderPlatform PlatformID, const EMaterialQualityLevel::Type Quality, const bool bValue)"
  },
  {
    "label": "RefreshStatsGrid()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RefreshStatsGrid()"
  },
  {
    "label": "DisplayStatsGrid()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DisplayStatsGrid(const bool bShow)"
  },
  {
    "label": "DisplayOldStats()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DisplayOldStats(const bool bShow)"
  },
  {
    "label": "LoadSettings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LoadSettings(const bool bAllowIgnoringCompilationErrors)"
  },
  {
    "label": "SaveSettings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SaveSettings()"
  },
  {
    "label": "ComputeGridWarnings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ComputeGridWarnings()"
  },
  {
    "label": "ExtractHLSLCode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExtractHLSLCode()"
  },
  {
    "label": "GetGridStatsTabName()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetGridStatsTabName()"
  },
  {
    "label": "GetGridOldStatsTabName()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetGridOldStatsTabName()"
  },
  {
    "label": "GetGridStatsWidget()",
    "kind": "Method",
    "detail": "Function (SMaterialEditorStatsWidget>)",
    "insertText": "GetGridStatsWidget()"
  },
  {
    "label": "GetStatsGrid()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FMaterialStatsGrid>)",
    "insertText": "GetStatsGrid()"
  },
  {
    "label": "GetOldStatsListing()",
    "kind": "Method",
    "detail": "Function (IMessageLogListing>)",
    "insertText": "GetOldStatsListing()"
  },
  {
    "label": "SwitchStatsQualityFlag()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SwitchStatsQualityFlag(const EMaterialQualityLevel::Type Quality)"
  },
  {
    "label": "SetStatusQualityFlag()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetStatusQualityFlag(const EMaterialQualityLevel::Type Quality, const bool bValue)"
  },
  {
    "label": "GetStatsQualityFlag()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetStatsQualityFlag(const EMaterialQualityLevel::Type Quality)"
  },
  {
    "label": "GetStatsQualityFlagAlwaysOn()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetStatsQualityFlagAlwaysOn(const EMaterialQualityLevel::Type Quality)"
  },
  {
    "label": "SetMaterialStatsDerivedMIOption()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetMaterialStatsDerivedMIOption(const EMaterialStatsDerivedMIOption value)"
  },
  {
    "label": "SwitchShaderPlatformUseStats()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SwitchShaderPlatformUseStats(const EShaderPlatform PlatformID)"
  },
  {
    "label": "SetMaterialsDisplayNames()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetMaterialsDisplayNames(const TArray<FString>& Names)"
  },
  {
    "label": "GetPlatformSettings()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FShaderPlatformSettings>)",
    "insertText": "GetPlatformSettings(const EShaderPlatform PlatformID)"
  },
  {
    "label": "GetPlatformSettings()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FShaderPlatformSettings>)",
    "insertText": "GetPlatformSettings(const FName PlatformName)"
  },
  {
    "label": "GetShaderCode()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetShaderCode(const EShaderPlatform PlatformID, const EMaterialQualityLevel::Type QualityType, const int32 InstanceIndex)"
  },
  {
    "label": "SignalMaterialChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SignalMaterialChanged()"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT(\"FMaterialStats\")"
  },
  {
    "label": "RegisterTabs()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterTabs()"
  },
  {
    "label": "UnregisterTabs()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterTabs()"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Initialize(IMaterialEditor *MaterialEditor, const bool bShowMaterialInstancesMenu, const bool bAllowIgnoringCompilationErrors)"
  },
  {
    "label": "Update()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Update()"
  },
  {
    "label": "CacheAndCompilePendingShaders()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CacheAndCompilePendingShaders()"
  },
  {
    "label": "SetMaterial()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetMaterial(UMaterial *InMaterial, const TArray<TObjectPtr<UMaterialInstance>>& InDerivedMaterialInstances)"
  },
  {
    "label": "SetMaterial()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetMaterial(UMaterialInstance *InMaterialInstance)"
  },
  {
    "label": "AnyNewCompilationErrors()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AnyNewCompilationErrors(const int32 StartingFromInstanceIndex = 0)"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT(\"\")"
  },
  {
    "label": "IsPresentInGrid()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "IsPresentInGrid()"
  }
]