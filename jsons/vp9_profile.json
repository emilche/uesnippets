[
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "VP9ProfileToString()",
    "kind": "Method",
    "detail": "Function (# ifndef API_VIDEO_CODECS_VP9_PROFILE_H_ # define API_VIDEO_CODECS_VP9_PROFILE_H_ # include<string> # include \" absl / types / optional . h \" # include \" api / video_codecs / sdp_video_format . h \" # include \" rtc_base / system / rtc_export . h \" namespace webrtc { RTC_EXPORT const char kVP9FmtpProfileId [ ] ; enum class VP9Profile { kProfile0,kProfile1,kProfile2,kProfile3,} ; RTC_EXPORT std::string)",
    "insertText": "VP9ProfileToString(VP9Profile profile)"
  },
  {
    "label": "StringToVP9Profile()",
    "kind": "Method",
    "detail": "Function (absl::optional<VP9Profile>)",
    "insertText": "StringToVP9Profile(const std::string& str)"
  },
  {
    "label": "ParseSdpForVP9Profile()",
    "kind": "Method",
    "detail": "Function (RTC_EXPORT absl::optional<VP9Profile>)",
    "insertText": "ParseSdpForVP9Profile(const SdpVideoFormat::Parameters& params)"
  },
  {
    "label": "VP9IsSameProfile()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "VP9IsSameProfile(const SdpVideoFormat::Parameters& params1, const SdpVideoFormat::Parameters& params2)"
  }
]