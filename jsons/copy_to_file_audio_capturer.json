[
  {
    "label": "CopyToFileAudioCapturer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CopyToFileAudioCapturer"
  },
  {
    "label": "CopyToFileAudioCapturer()",
    "kind": "Method",
    "detail": "Function (# ifndef TEST_TESTSUPPORT_COPY_TO_FILE_AUDIO_CAPTURER_H_ # define TEST_TESTSUPPORT_COPY_TO_FILE_AUDIO_CAPTURER_H_ # include<memory> # include<string> # include \" absl / types / optional . h \" # include \" api / array_view . h \" # include \" common_audio / wav_file . h \" # include \" modules / audio_device / include / test_audio_device . h \" # include \" rtc_base / buffer . h \" namespace webrtc { namespace test { class CopyToFileAudioCapturer : public TestAudioDeviceModule::Capturer { public :)",
    "insertText": "CopyToFileAudioCapturer(std::unique_ptr<TestAudioDeviceModule::Capturer> delegate, std::string stream_dump_file_name)"
  },
  {
    "label": "CopyToFileAudioCapturer()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "CopyToFileAudioCapturer()"
  },
  {
    "label": "SamplingFrequency()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SamplingFrequency()"
  },
  {
    "label": "NumChannels()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "NumChannels()"
  },
  {
    "label": "Capture()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Capture(rtc::BufferT<int16_t>* buffer)"
  }
]