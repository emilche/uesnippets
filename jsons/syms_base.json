[
  {
    "label": "SYMS_U64Array",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SYMS_U64Array"
  },
  {
    "label": "SYMS_U32Array",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SYMS_U32Array"
  },
  {
    "label": "SYMS_U16Array",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SYMS_U16Array"
  },
  {
    "label": "SYMS_U64ArrayNode",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SYMS_U64ArrayNode"
  },
  {
    "label": "SYMS_U64Maybe",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SYMS_U64Maybe"
  },
  {
    "label": "SYMS_U32Range",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SYMS_U32Range"
  },
  {
    "label": "SYMS_U64Range",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SYMS_U64Range"
  },
  {
    "label": "SYMS_U64RangeNode",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SYMS_U64RangeNode"
  },
  {
    "label": "SYMS_U64RangeList",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SYMS_U64RangeList"
  },
  {
    "label": "SYMS_U64RangeArray",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SYMS_U64RangeArray"
  },
  {
    "label": "SYMS_U64Node",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SYMS_U64Node"
  },
  {
    "label": "SYMS_U64List",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SYMS_U64List"
  },
  {
    "label": "SYMS_String8",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SYMS_String8"
  },
  {
    "label": "SYMS_String8Node",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SYMS_String8Node"
  },
  {
    "label": "SYMS_String8List",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SYMS_String8List"
  },
  {
    "label": "SYMS_String8Array",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SYMS_String8Array"
  },
  {
    "label": "SYMS_StringJoin",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SYMS_StringJoin"
  },
  {
    "label": "SYMS_SortNode",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SYMS_SortNode"
  },
  {
    "label": "SYMS_SerialWidthKind",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "SYMS_SerialWidthKind"
  },
  {
    "label": "SYMS_SerialField",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SYMS_SerialField"
  },
  {
    "label": "SYMS_SerialType",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SYMS_SerialType"
  },
  {
    "label": "SYMS_SerialValue",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SYMS_SerialValue"
  },
  {
    "label": "SYMS_SerialFlag",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SYMS_SerialFlag"
  },
  {
    "label": "SYMS_SerialTypeKind",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "SYMS_SerialTypeKind"
  },
  {
    "label": "SYMS_ArenaTemp",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SYMS_ArenaTemp"
  },
  {
    "label": "SYMS_MemoryView",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SYMS_MemoryView"
  },
  {
    "label": "SYMS_UnwindResult",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SYMS_UnwindResult"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# ifndef SYMS_BASE_H # define SYMS_BASE_H # define SYMS_VERSION_MAJOR 1 # define SYMS_VERSION_MINOR 0 # define SYMS_VERSION_SUBMINOR 0 # define SYMS_VERSION_STR \" 1 . 0 . 0 \" # include \" syms_base_context_crack . h \" # include \" syms_base_overrides_check . h \" # if !)",
    "insertText": "defined(SYMS_API)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# define SYMS_C_LINKAGE_END } # define SYMS_EXTERN \" C \" # else # define SYMS_C_LINKAGE_BEGIN # define SYMS_C_LINKAGE_END # define SYMS_EXTERN # endif # define SYMS_GLOBAL # define SYMS_LOCAL # if !)",
    "insertText": "defined(SYMS_READ_ONLY) # if SYMS_COMPILER_CL || (SYMS_COMPILER_CLANG && SYMS_OS_WINDOWS) # pragma section(\".roglob\", read) # define SYMS_READ_ONLY __declspec(allocate(\".roglob\")) # elif (SYMS_COMPILER_CLANG && SYMS_OS_LINUX) # define SYMS_READ_ONLY __attribute__((section(\".rodata\"))) # else # define SYMS_READ_ONLY # endif #endif #if SYMS_COMPILER_CL # define SYMS_THREAD_LOCAL __declspec(thread) #elif SYMS_COMPILER_CLANG || SYMS_COMPILER_GCC # define SYMS_THREAD_LOCAL __thread #else # error No SYMS_THREAD_LOCAL for this compiler #endif #if !defined(SYMS_PARANOID) # define SYMS_PARANOID 0 #endif #if !defined(SYMS_ASSERT_INVARIANTS) # define SYMS_ASSERT_INVARIANTS 0 #endif #if !defined(SYMS_DISABLE_NORMAL_ASSERTS) # define SYMS_DISABLE_NORMAL_ASSERTS 0 #endif #if !defined(SYMS_ENABLE_DEV_SRCLOC) # define SYMS_ENABLE_DEV_SRCLOC 0 #endif #if !defined(SYMS_ENABLE_DEV_STRING) # define SYMS_ENABLE_DEV_STRING 0 #endif #if !defined(SYMS_ENABLE_DEV_LOG) # define SYMS_ENABLE_DEV_LOG 0 #endif #if !defined(SYMS_ENABLE_DEV_PROFILE)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (typedef SYMS_S16 SYMS_B16 ; typedef SYMS_S32 SYMS_B32 ; typedef SYMS_S64 SYMS_B64 ; typedef float SYMS_F32 ; typedef double SYMS_F64 ; # define syms_false 0 # define syms_true 1 typedef SYMS_U32 SYMS_RegID ; # if !)",
    "insertText": "defined(syms_write_srcloc__impl) # define syms_write_srcloc__impl(f,l) ((void)0) #endif #if SYMS_ENABLE_DEV_SRCLOC # define SYMS_WRITE_SRCLOC(f,l) syms_write_srcloc__impl(f,l) #else # define SYMS_WRITE_SRCLOC(f,l) ((void)0) #endif #define SYMS_ASSERT_RAW(x)"
  },
  {
    "label": "SYMS_ASSERT_BREAK()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SYMS_ASSERT_BREAK(x)"
  },
  {
    "label": "while()",
    "kind": "Method",
    "detail": "Function (} })",
    "insertText": "while(0) #if !SYMS_DISABLE_NORMAL_ASSERTS # define SYMS_ASSERT(x) SYMS_ASSERT_RAW(x) #else # define SYMS_ASSERT(x) #endif #if SYMS_PARANOID # define SYMS_ASSERT_PARANOID(x) SYMS_ASSERT_RAW(x) #else # define SYMS_ASSERT_PARANOID(x) #endif #if SYMS_ASSERT_INVARIANTS # define SYMS_INVARIANT(r,x) SYMS_ASSERT_RAW(x) #else # define SYMS_INVARIANT(r,x)"
  },
  {
    "label": "t__()",
    "kind": "Method",
    "detail": "Function (T)",
    "insertText": "t__(a)"
  },
  {
    "label": "while()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "while(0) #define SYMS_THIS_SRCLOC __FILE__ \":\" SYMS_Stringify(__LINE__) #define SYMS_ID_u32_0(id) (SYMS_U32)(id) #define SYMS_ID_u32_1(id) (SYMS_U32)((id) >> 32) #define SYMS_ID_u16_0(id) (SYMS_U16)(id) #define SYMS_ID_u16_1(id) (SYMS_U16)((id) >> 16) #define SYMS_ID_u16_2(id) (SYMS_U16)((id) >> 32) #define SYMS_ID_u16_3(id) (SYMS_U16)((id) >> 48) #define SYMS_ID_u32_u32(a,b) ((SYMS_U64)(a) | ((SYMS_U64)(b) << 32)) #define SYMS_ID_u16_u16_u32(a,b,c) ((SYMS_U64)(a) | ((SYMS_U64)(b) << 16) | ((SYMS_U64)(c) << 32)) #define SYMS_QueuePush_N(f,l,n,next) ( (f)==0?\\ ((f)=(l)=(n),(n)->next=0):\\ ((l)->next=(n),(l)=(n),(n)->next=0) ) #define SYMS_QueuePushFront_N(f,l,n,next) ( (f)==0?\\ ((f)=(l)=(n),(n)->next=0):\\ ((n)->next=(f),(f)=(n)) ) #define SYMS_QueuePop_N(f,l,next) ( (f)==(l)?\\ (f)=(l)=0:\\ ((f)=(f)->next) ) #define SYMS_QueuePush(f,l,n) SYMS_QueuePush_N(f,l,n,next) #define SYMS_QueuePushFront(f,l,n) SYMS_QueuePushFront_N(f,l,n,next) #define SYMS_QueuePop(f,l) SYMS_QueuePop_N(f,l,next) #define SYMS_StackPush_N(f,n,next) ( (n)->next=(f), (f)=(n) ) #define SYMS_StackPop_N(f,next) ( (f)=(f)->next ) #define SYMS_StackPush(f,n) SYMS_StackPush_N(f,n,next) #define SYMS_StackPop(f) SYMS_StackPop_N(f,next)"
  },
  {
    "label": "SYMS_StringMatchFlag_CaseInsensitive()",
    "kind": "Method",
    "detail": "Function (SYMS_U64* u64 ; SYMS_U64 count ; } SYMS_U64Array ; typedef struct SYMS_U32Array { SYMS_U32* u32 ; SYMS_U64 count ; } SYMS_U32Array ; typedef struct SYMS_U16Array { SYMS_U16* u16 ; SYMS_U64 count ; } SYMS_U16Array ; typedef struct SYMS_U64ArrayNode { struct SYMS_U64ArrayNode* next ; SYMS_U64* u64 ; SYMS_U64 count ; } SYMS_U64ArrayNode ; typedef struct SYMS_U64Maybe { SYMS_B32 valid ; SYMS_U64 u64 ; } SYMS_U64Maybe ; typedef struct SYMS_U32Range { SYMS_U32 min ; SYMS_U32 max ; } SYMS_U32Range ; typedef struct SYMS_U64Range { SYMS_U64 min ; SYMS_U64 max ; } SYMS_U64Range ; typedef struct SYMS_U64RangeNode { struct SYMS_U64RangeNode* next ; SYMS_U64Range range ; } SYMS_U64RangeNode ; typedef struct SYMS_U64RangeList { SYMS_U64RangeNode* first ; SYMS_U64RangeNode* last ; SYMS_U64 node_count ; } SYMS_U64RangeList ; typedef struct SYMS_U64RangeArray { SYMS_U64Range* ranges ; SYMS_U64 count ; } SYMS_U64RangeArray ; typedef struct SYMS_U64Node { struct SYMS_U64Node* next ; SYMS_U64 u64 ; } SYMS_U64Node ; typedef struct SYMS_U64List { SYMS_U64Node* first ; SYMS_U64Node* last ; SYMS_U64 count ; } SYMS_U64List ; typedef struct SYMS_String8 { SYMS_U8* str ; SYMS_U64 size ; } SYMS_String8 ; typedef struct SYMS_String8Node { struct SYMS_String8Node* next ; SYMS_String8 string ; } SYMS_String8Node ; typedef struct SYMS_String8List { SYMS_String8Node* first ; SYMS_String8Node* last ; SYMS_U64 node_count ; SYMS_U64 total_size ; } SYMS_String8List ; typedef struct SYMS_String8Array { SYMS_String8* strings ; SYMS_U64 count ; } SYMS_String8Array ; typedef SYMS_U32 SYMS_StringMatchFlags ; enum {)",
    "insertText": "SYMS_StringMatchFlag_CaseInsensitive(1<<0), SYMS_StringMatchFlag_RightSideSloppy = (1<<1), SYMS_StringMatchFlag_SlashInsensitive = (1<<2)"
  },
  {
    "label": "SYMS_U64()",
    "kind": "Method",
    "detail": "Function (typedef struct SYMS_StringJoin { SYMS_String8 pre ; SYMS_String8 sep ; SYMS_String8 post ; } SYMS_StringJoin ; typedef struct SYMS_SortNode { struct SYMS_SortNode* next ; SYMS_U64 first ; SYMS_U64 opl ; } SYMS_SortNode ; # include \" syms / core / generated / syms_meta_base . h \" typedef enum SYMS_SerialWidthKind { SYMS_SerialWidthKind_Null,SYMS_SerialWidthKind_Fixed,SYMS_SerialWidthKind_Array,SYMS_SerialWidthKind_NullTerminated,SYMS_SerialWidthKind_SequenceNullTerminated,SYMS_SerialWidthKind_RestOfStream,SYMS_SerialWidthKind_PdbNumeric,SYMS_SerialWidthKind_COUNT } SYMS_SerialWidthKind ; typedef struct SYMS_SerialField { SYMS_String8 name ; struct SYMS_SerialType* type ; SYMS_SerialWidthKind width_kind ; SYMS_U32 width_var ; } SYMS_SerialField ; typedef struct SYMS_SerialValue { SYMS_String8 name ; SYMS_U64 value ; } SYMS_SerialValue ; typedef struct SYMS_SerialFlag { SYMS_String8 name ; struct SYMS_SerialType* type ; SYMS_U32 mask ; SYMS_U32 bitshift ; } SYMS_SerialFlag ; typedef enum SYMS_SerialTypeKind { SYMS_SerialTypeKind_Null,SYMS_SerialTypeKind_Integer,SYMS_SerialTypeKind_UnsignedInteger,SYMS_SerialTypeKind_Character,SYMS_SerialTypeKind_BinaryAnnotation,SYMS_SerialTypeKind_Enum,SYMS_SerialTypeKind_Flags,SYMS_SerialTypeKind_Struct,SYMS_SerialTypeKind_COUNT } SYMS_SerialTypeKind ; typedef struct SYMS_SerialType { SYMS_String8 name ; SYMS_SerialTypeKind kind ; SYMS_U32 child_count ; void* children ; SYMS_U64 basic_size ;)",
    "insertText": "SYMS_U64(*enum_index_from_value)(SYMS_U64 value)"
  },
  {
    "label": "syms_version_string()",
    "kind": "Method",
    "detail": "Function (} SYMS_SerialType ; typedef struct SYMS_ArenaTemp { SYMS_Arena* arena ; SYMS_U64 pos ; } SYMS_ArenaTemp ; typedef struct SYMS_MemoryView { void* data ; SYMS_U64 addr_first ; SYMS_U64 addr_opl ; } SYMS_MemoryView ; typedef struct SYMS_UnwindResult { SYMS_B32 dead ; SYMS_B32 missed_read ; SYMS_U64 missed_read_addr ; SYMS_U64 stack_pointer ; } SYMS_UnwindResult ; # include \" syms / core / generated / syms_meta_serial_base . h \" SYMS_C_LINKAGE_BEGIN SYMS_String8)",
    "insertText": "syms_version_string(void)"
  },
  {
    "label": "syms_make_u64_range()",
    "kind": "Method",
    "detail": "Function (SYMS_U64Range)",
    "insertText": "syms_make_u64_range(SYMS_U64 min, SYMS_U64 max)"
  },
  {
    "label": "syms_make_u64_inrange()",
    "kind": "Method",
    "detail": "Function (SYMS_U64Range)",
    "insertText": "syms_make_u64_inrange(SYMS_U64Range range, SYMS_U64 offset, SYMS_U64 size)"
  },
  {
    "label": "syms_u64_range_size()",
    "kind": "Method",
    "detail": "Function (SYMS_U64)",
    "insertText": "syms_u64_range_size(SYMS_U64Range range)"
  },
  {
    "label": "syms_hash_djb2()",
    "kind": "Method",
    "detail": "Function (SYMS_GLOBAL SYMS_U64 syms_hash_djb2_initial = 5 3 8 1 ; SYMS_U64)",
    "insertText": "syms_hash_djb2(SYMS_String8 string)"
  },
  {
    "label": "syms_hash_djb2_continue()",
    "kind": "Method",
    "detail": "Function (SYMS_U64)",
    "insertText": "syms_hash_djb2_continue(SYMS_String8 string, SYMS_U64 intermediate_hash)"
  },
  {
    "label": "syms_hash_u64()",
    "kind": "Method",
    "detail": "Function (SYMS_U64)",
    "insertText": "syms_hash_u64(SYMS_U64 x)"
  },
  {
    "label": "syms_serial_type()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "syms_serial_type(name) (_syms_serial_type_##name) #define syms_string_from_enum_value(enum_type, value) \\ (syms_serial_value_from_enum_value(&syms_serial_type(enum_type), value)->name) #define syms_bswap_in_place(type, ptr) syms_bswap_in_place__##type((type*)(ptr)) SYMS_API SYMS_SerialField* syms_serial_first_field(SYMS_SerialType *type)"
  },
  {
    "label": "syms_serial_first_value()",
    "kind": "Method",
    "detail": "Function (SYMS_SerialValue*)",
    "insertText": "syms_serial_first_value(SYMS_SerialType *type)"
  },
  {
    "label": "syms_serial_first_flag()",
    "kind": "Method",
    "detail": "Function (SYMS_SerialFlag*)",
    "insertText": "syms_serial_first_flag(SYMS_SerialType *type)"
  },
  {
    "label": "syms_serial_value_from_enum_value()",
    "kind": "Method",
    "detail": "Function (SYMS_SerialValue*)",
    "insertText": "syms_serial_value_from_enum_value(SYMS_SerialType *type, SYMS_U64 value)"
  },
  {
    "label": "syms_serial_flag_from_bit_offset()",
    "kind": "Method",
    "detail": "Function (SYMS_SerialFlag*)",
    "insertText": "syms_serial_flag_from_bit_offset(SYMS_SerialType *type, SYMS_U64 bit_off)"
  },
  {
    "label": "syms_string_list_from_flags()",
    "kind": "Method",
    "detail": "Function (SYMS_String8List)",
    "insertText": "syms_string_list_from_flags(SYMS_Arena *arena, SYMS_SerialType *type, SYMS_U32 flags)"
  },
  {
    "label": "syms_enum_index_from_value_identity()",
    "kind": "Method",
    "detail": "Function (SYMS_U64)",
    "insertText": "syms_enum_index_from_value_identity(SYMS_U64 v)"
  },
  {
    "label": "syms_codepoint_is_whitespace()",
    "kind": "Method",
    "detail": "Function (SYMS_B32)",
    "insertText": "syms_codepoint_is_whitespace(SYMS_U32 codepoint)"
  },
  {
    "label": "syms_lowercase_from_codepoint()",
    "kind": "Method",
    "detail": "Function (SYMS_U32)",
    "insertText": "syms_lowercase_from_codepoint(SYMS_U32 codepoint)"
  },
  {
    "label": "syms_str8_comp()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "syms_str8_comp(s)"
  },
  {
    "label": "syms_str8_cstring()",
    "kind": "Method",
    "detail": "Function (SYMS_String8)",
    "insertText": "syms_str8_cstring(char *str)"
  },
  {
    "label": "syms_str8_range()",
    "kind": "Method",
    "detail": "Function (SYMS_String8)",
    "insertText": "syms_str8_range(SYMS_U8 *first, SYMS_U8 *opl)"
  },
  {
    "label": "syms_str8_skip_chop_whitespace()",
    "kind": "Method",
    "detail": "Function (SYMS_String8)",
    "insertText": "syms_str8_skip_chop_whitespace(SYMS_String8 str)"
  },
  {
    "label": "syms_string_match()",
    "kind": "Method",
    "detail": "Function (SYMS_B32)",
    "insertText": "syms_string_match(SYMS_String8 a, SYMS_String8 b, SYMS_StringMatchFlags flags)"
  },
  {
    "label": "syms_decode_utf8()",
    "kind": "Method",
    "detail": "Function (SYMS_U8*)",
    "insertText": "syms_decode_utf8(SYMS_U8 *p, SYMS_U32 *dst)"
  },
  {
    "label": "syms_string_list_push_node()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "syms_string_list_push_node(SYMS_String8Node *node, SYMS_String8List *list, SYMS_String8 string)"
  },
  {
    "label": "syms_string_list_push_node_front()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "syms_string_list_push_node_front(SYMS_String8Node *node, SYMS_String8List *list, SYMS_String8 string)"
  },
  {
    "label": "syms_string_list_push()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "syms_string_list_push(SYMS_Arena *arena, SYMS_String8List *list, SYMS_String8 string)"
  },
  {
    "label": "syms_string_list_push_front()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "syms_string_list_push_front(SYMS_Arena *arena, SYMS_String8List *list, SYMS_String8 string)"
  },
  {
    "label": "syms_string_list_concat()",
    "kind": "Method",
    "detail": "Function (SYMS_String8List)",
    "insertText": "syms_string_list_concat(SYMS_String8List *left, SYMS_String8List *right)"
  },
  {
    "label": "syms_string_list_join()",
    "kind": "Method",
    "detail": "Function (SYMS_String8)",
    "insertText": "syms_string_list_join(SYMS_Arena *arena, SYMS_String8List *list, SYMS_StringJoin *join)"
  },
  {
    "label": "syms_push_string_copy()",
    "kind": "Method",
    "detail": "Function (SYMS_String8)",
    "insertText": "syms_push_string_copy(SYMS_Arena *arena, SYMS_String8 string)"
  },
  {
    "label": "syms_string_trunc_symbol_heuristic()",
    "kind": "Method",
    "detail": "Function (SYMS_String8)",
    "insertText": "syms_string_trunc_symbol_heuristic(SYMS_String8 string)"
  },
  {
    "label": "syms_string_split()",
    "kind": "Method",
    "detail": "Function (SYMS_String8List)",
    "insertText": "syms_string_split(SYMS_Arena *arena, SYMS_String8 input, SYMS_U32 delimiter)"
  },
  {
    "label": "syms_u64_from_string()",
    "kind": "Method",
    "detail": "Function (SYMS_U64)",
    "insertText": "syms_u64_from_string(SYMS_String8 str, SYMS_U32 radix)"
  },
  {
    "label": "syms_s64_from_string_c_rules()",
    "kind": "Method",
    "detail": "Function (SYMS_S64)",
    "insertText": "syms_s64_from_string_c_rules(SYMS_String8 str)"
  },
  {
    "label": "syms_string_from_u64()",
    "kind": "Method",
    "detail": "Function (SYMS_String8)",
    "insertText": "syms_string_from_u64(SYMS_Arena *arena, SYMS_U64 x)"
  },
  {
    "label": "syms_u64_range_list_push_node()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "syms_u64_range_list_push_node(SYMS_U64RangeNode *node, SYMS_U64RangeList *list, SYMS_U64Range range)"
  },
  {
    "label": "syms_u64_range_list_push()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "syms_u64_range_list_push(SYMS_Arena *arena, SYMS_U64RangeList *list, SYMS_U64Range range)"
  },
  {
    "label": "syms_u64_range_list_concat()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "syms_u64_range_list_concat(SYMS_U64RangeList *list, SYMS_U64RangeList *to_push)"
  },
  {
    "label": "syms_u64_range_array_from_list()",
    "kind": "Method",
    "detail": "Function (SYMS_U64RangeArray)",
    "insertText": "syms_u64_range_array_from_list(SYMS_Arena *arena, SYMS_U64RangeList *list)"
  },
  {
    "label": "syms_u64_list_push_node()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "syms_u64_list_push_node(SYMS_U64Node *node, SYMS_U64List *list, SYMS_U64 v)"
  },
  {
    "label": "syms_u64_list_push()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "syms_u64_list_push(SYMS_Arena *arena, SYMS_U64List *list, SYMS_U64 v)"
  },
  {
    "label": "syms_u64_list_concat_in_place()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "syms_u64_list_concat_in_place(SYMS_U64List *dst, SYMS_U64List *src)"
  },
  {
    "label": "syms_u64_array_from_list()",
    "kind": "Method",
    "detail": "Function (SYMS_U64Array)",
    "insertText": "syms_u64_array_from_list(SYMS_Arena *arena, SYMS_U64List *list)"
  },
  {
    "label": "syms_1based_checked_lookup_u64()",
    "kind": "Method",
    "detail": "Function (SYMS_U64)",
    "insertText": "syms_1based_checked_lookup_u64(SYMS_U64 *u64, SYMS_U64 count, SYMS_U64 n)"
  },
  {
    "label": "syms_arena_push_align()",
    "kind": "Method",
    "detail": "Function (# define syms_arena_alloc syms_arena_alloc__impl # define syms_arena_release syms_arena_release__impl # define syms_arena_get_pos syms_arena_get_pos__impl # define syms_arena_push syms_arena_push__impl # define syms_arena_pop_to syms_arena_pop_to__impl # define syms_arena_set_auto_align syms_arena_set_auto_align__impl # define syms_arena_absorb syms_arena_absorb__impl # define syms_arena_tidy syms_arena_tidy__impl # define syms_get_implicit_thread_arena syms_get_implicit_thread_arena__impl void)",
    "insertText": "syms_arena_push_align(SYMS_Arena *arena, SYMS_U64 boundary)"
  },
  {
    "label": "syms_arena_put_back()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "syms_arena_put_back(SYMS_Arena *arena, SYMS_U64 amount)"
  },
  {
    "label": "syms_arena_temp_begin()",
    "kind": "Method",
    "detail": "Function (SYMS_ArenaTemp)",
    "insertText": "syms_arena_temp_begin(SYMS_Arena *arena)"
  },
  {
    "label": "syms_arena_temp_end()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "syms_arena_temp_end(SYMS_ArenaTemp frame)"
  },
  {
    "label": "syms_push_array()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "syms_push_array(a,T,c) (SYMS_WRITE_SRCLOC(__FILE__, __LINE__),\\ (T*)syms_arena_push((a), sizeof(T)*(c))) #define syms_push_array_zero(a,T,c) ((T*)syms_memset(syms_push_array(a,T,c), 0, sizeof(T)*(c))) SYMS_API SYMS_ArenaTemp syms_get_scratch(SYMS_Arena **conflicts, SYMS_U64 count)"
  },
  {
    "label": "syms_sort_node_push()",
    "kind": "Method",
    "detail": "Function (# define syms_release_scratch syms_arena_temp_end # define syms_scratch_pool_tidy syms_scratch_pool_tidy__impl SYMS_SortNode*)",
    "insertText": "syms_sort_node_push(SYMS_Arena *arena, SYMS_SortNode **stack, SYMS_SortNode **free_stack, SYMS_U64 first, SYMS_U64 opl)"
  },
  {
    "label": "syms_set_lane()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "syms_set_lane(SYMS_U64 lane)"
  },
  {
    "label": "syms_get_lane()",
    "kind": "Method",
    "detail": "Function (SYMS_U64)",
    "insertText": "syms_get_lane(void)"
  },
  {
    "label": "syms_based_range_ptr()",
    "kind": "Method",
    "detail": "Function (void*)",
    "insertText": "syms_based_range_ptr(void *base, SYMS_U64Range range, SYMS_U64 offset)"
  },
  {
    "label": "syms_based_range_read()",
    "kind": "Method",
    "detail": "Function (SYMS_U64)",
    "insertText": "syms_based_range_read(void *base, SYMS_U64Range range, SYMS_U64 offset, SYMS_U64 out_size, void *out)"
  },
  {
    "label": "syms_based_range_read_uleb128()",
    "kind": "Method",
    "detail": "Function (SYMS_U64)",
    "insertText": "syms_based_range_read_uleb128(void *base, SYMS_U64Range range, SYMS_U64 offset, SYMS_U64 *out_value)"
  },
  {
    "label": "syms_based_range_read_sleb128()",
    "kind": "Method",
    "detail": "Function (SYMS_U64)",
    "insertText": "syms_based_range_read_sleb128(void *base, SYMS_U64Range range, SYMS_U64 offset, SYMS_S64 *out_value)"
  },
  {
    "label": "syms_based_range_read_string()",
    "kind": "Method",
    "detail": "Function (SYMS_String8)",
    "insertText": "syms_based_range_read_string(void *base, SYMS_U64Range range, SYMS_U64 offset)"
  },
  {
    "label": "syms_based_range_read_struct()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "syms_based_range_read_struct(b,r,o,p) syms_based_range_read((b), (r), (o), sizeof(*(p)), p) SYMS_API SYMS_MemoryView syms_memory_view_make(SYMS_String8 data, SYMS_U64 base)"
  },
  {
    "label": "syms_memory_view_read()",
    "kind": "Method",
    "detail": "Function (SYMS_B32)",
    "insertText": "syms_memory_view_read(SYMS_MemoryView *memview, SYMS_U64 addr, SYMS_U64 size, void *ptr)"
  },
  {
    "label": "syms_memory_view_read_struct()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "syms_memory_view_read_struct(s,a,p) syms_memory_view_read((s),(a),sizeof(*(p)),(p)) SYMS_API void syms_unwind_result_missed_read(SYMS_UnwindResult *unwind_result, SYMS_U64 addr)"
  },
  {
    "label": "syms_bswap_u16()",
    "kind": "Method",
    "detail": "Function (SYMS_U16)",
    "insertText": "syms_bswap_u16(SYMS_U16 x)"
  },
  {
    "label": "syms_bswap_u32()",
    "kind": "Method",
    "detail": "Function (SYMS_U32)",
    "insertText": "syms_bswap_u32(SYMS_U32 x)"
  },
  {
    "label": "syms_bswap_u64()",
    "kind": "Method",
    "detail": "Function (SYMS_U64)",
    "insertText": "syms_bswap_u64(SYMS_U64 x)"
  },
  {
    "label": "syms_bswap_bytes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "syms_bswap_bytes(void *p, SYMS_U64 size)"
  }
]