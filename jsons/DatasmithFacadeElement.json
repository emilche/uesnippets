[
  {
    "label": "FDatasmithFacadeScene",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDatasmithFacadeScene"
  },
  {
    "label": "DATASMITHFACADE_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DATASMITHFACADE_API"
  },
  {
    "label": "FDatasmithFacadeScene",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDatasmithFacadeScene"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "SetCoordinateSystemType()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCoordinateSystemType(\n\t\tECoordinateSystemType InWorldCoordinateSystemType // world coordinate system type\n\t)"
  },
  {
    "label": "SetWorldUnitScale()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetWorldUnitScale(\n\t\tfloat InWorldUnitScale // scale factor from world units to Datasmith centimeters\n\t)"
  },
  {
    "label": "GetStringHash()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetStringHash( const TCHAR* InString, TCHAR OutBuffer[33], size_t BufferSize )"
  },
  {
    "label": "SetName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetName(\n\t\tconst TCHAR* InElementName // Datasmith element name\n\t)"
  },
  {
    "label": "SetLabel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetLabel(\n\t\tconst TCHAR* InElementLabel // Datasmith element label\n\t)"
  },
  {
    "label": "Convert()",
    "kind": "Method",
    "detail": "Function (Vec_t)",
    "insertText": "Convert(const Vec_t& V)"
  },
  {
    "label": "ConvertDirection()",
    "kind": "Method",
    "detail": "Function (FVector)",
    "insertText": "ConvertDirection(const FVector& In)"
  },
  {
    "label": "ConvertBackDirection()",
    "kind": "Method",
    "detail": "Function (FVector)",
    "insertText": "ConvertBackDirection(const FVector& In)"
  },
  {
    "label": "ConvertPosition()",
    "kind": "Method",
    "detail": "Function (FVector)",
    "insertText": "ConvertPosition(const FVector& In)"
  },
  {
    "label": "ConvertBackPosition()",
    "kind": "Method",
    "detail": "Function (FVector)",
    "insertText": "ConvertBackPosition(const FVector& In)"
  },
  {
    "label": "ConvertDirection()",
    "kind": "Method",
    "detail": "Function (FVector)",
    "insertText": "ConvertDirection(double InX, double InY, double InZ)"
  },
  {
    "label": "ConvertBackDirection()",
    "kind": "Method",
    "detail": "Function (FVector)",
    "insertText": "ConvertBackDirection(double InX, double InY, double InZ)"
  },
  {
    "label": "ConvertPosition()",
    "kind": "Method",
    "detail": "Function (FVector)",
    "insertText": "ConvertPosition(double InX, double InY, double InZ)"
  },
  {
    "label": "ConvertBackPosition()",
    "kind": "Method",
    "detail": "Function (FVector)",
    "insertText": "ConvertBackPosition(double InX, double InY, double InZ)"
  },
  {
    "label": "ConvertDirection()",
    "kind": "Method",
    "detail": "Function (FVector3f)",
    "insertText": "ConvertDirection(const FVector3f& In)"
  },
  {
    "label": "ConvertBackDirection()",
    "kind": "Method",
    "detail": "Function (FVector3f)",
    "insertText": "ConvertBackDirection(const FVector3f& In)"
  },
  {
    "label": "ConvertPosition()",
    "kind": "Method",
    "detail": "Function (FVector3f)",
    "insertText": "ConvertPosition(const FVector3f& In)"
  },
  {
    "label": "ConvertBackPosition()",
    "kind": "Method",
    "detail": "Function (FVector3f)",
    "insertText": "ConvertBackPosition(const FVector3f& In)"
  },
  {
    "label": "ConvertDirection()",
    "kind": "Method",
    "detail": "Function (FVector3f)",
    "insertText": "ConvertDirection(float InX, float InY, float InZ)"
  },
  {
    "label": "ConvertBackDirection()",
    "kind": "Method",
    "detail": "Function (FVector3f)",
    "insertText": "ConvertBackDirection(float InX, float InY, float InZ)"
  },
  {
    "label": "ConvertPosition()",
    "kind": "Method",
    "detail": "Function (FVector3f)",
    "insertText": "ConvertPosition(float InX, float InY, float InZ)"
  },
  {
    "label": "ConvertBackPosition()",
    "kind": "Method",
    "detail": "Function (FVector3f)",
    "insertText": "ConvertBackPosition(float InX, float InY, float InZ)"
  },
  {
    "label": "ConvertPosition()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "ConvertPosition(InVertex)"
  },
  {
    "label": "ConvertPosition()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "ConvertPosition(InVertex)"
  },
  {
    "label": "ExportAsset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExportAsset(\n\t\tFString const& InAssetFolder // Datasmith asset folder path\n\t)"
  },
  {
    "label": "FDatasmithFacadeElement()",
    "kind": "Method",
    "detail": "Function (protected:)",
    "insertText": "FDatasmithFacadeElement(\n\t\tconst TSharedRef<IDatasmithElement>& InElement\n\t)"
  }
]