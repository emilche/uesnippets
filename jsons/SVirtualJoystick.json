[
  {
    "label": "FPaintArgs",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPaintArgs"
  },
  {
    "label": "FSlateWindowElementList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateWindowElementList"
  },
  {
    "label": "ISlateBrushSource",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISlateBrushSource"
  },
  {
    "label": "SVirtualJoystick",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SVirtualJoystick"
  },
  {
    "label": "FControlInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FControlInfo"
  },
  {
    "label": "FControlData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FControlData"
  },
  {
    "label": "EVirtualJoystickState",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EVirtualJoystickState"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct(const FArguments& InArgs)"
  },
  {
    "label": "ShouldDisplayTouchInterface()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldDisplayTouchInterface()"
  },
  {
    "label": "SetJoystickVisibility()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetJoystickVisibility(const bool bVisible, const bool bFade)"
  },
  {
    "label": "AddControl()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddControl(const FControlInfo& Control)"
  },
  {
    "label": "ClearControls()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearControls()"
  },
  {
    "label": "SetControls()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetControls(const TArray<FControlInfo>& InControls)"
  },
  {
    "label": "SetGlobalParameters()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetGlobalParameters(float InActiveOpacity, float InInactiveOpacity, float InTimeUntilDeactive, float InTimeUntilReset, float InActivationDelay, bool InbPreventReCenter, float InStartupDelay)"
  },
  {
    "label": "HandleDisplayMetricsChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleDisplayMetricsChanged(const FDisplayMetrics& NewDisplayMetric)"
  },
  {
    "label": "AlignBoxIntoScreen()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AlignBoxIntoScreen(FVector2D& Position, const FVector2D& Size, const FVector2D& ScreenSize)"
  },
  {
    "label": "ComputeThumbPosition()",
    "kind": "Method",
    "detail": "Function (FVector2D)",
    "insertText": "ComputeThumbPosition(int32 ControlIndex, const FVector2D& LocalCoord, float* OutDistanceToTouchSqr = nullptr, float* OutDistanceToEdgeSqr = nullptr)"
  },
  {
    "label": "HandleTouch()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HandleTouch(int32 ControlIndex, const FVector2D& LocalCoord, const FVector2D& ScreenSize)"
  },
  {
    "label": "GetBaseOpacity()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetBaseOpacity()"
  }
]