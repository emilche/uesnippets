[
  {
    "label": "TDualQuat",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TDualQuat"
  },
  {
    "label": "TIsUECoreVariant",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TIsUECoreVariant"
  },
  {
    "label": "TDualQuat()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" Math / UnrealMathUtility . h \" # include \" Math / Vector . h \" # include \" Math / Quat . h \" # include \" Math / Transform . h \" namespace UE { namespace Math { template<T> struct TDualQuat { public : using FReal = T ; TQuat<T> R ; TQuat<T> D ;)",
    "insertText": "TDualQuat(const TQuat<T> &InR, const TQuat<T> &InD) : R(InR) , D(InD)"
  },
  {
    "label": "TDualQuat()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "TDualQuat(const TTransform<T> &Transform)"
  },
  {
    "label": "GetTranslation()",
    "kind": "Method",
    "detail": "Function (TVector<T> V = Transform .)",
    "insertText": "GetTranslation()"
  },
  {
    "label": "T()",
    "kind": "Method",
    "detail": "Function (* this = TDualQuat<)",
    "insertText": "T(TQuat<T>(0, 0, 0, 1), TQuat<T>(V.X, V.Y, V.Z, 0.f)) * TDualQuat<T>(Transform.GetRotation(), TQuat<T>(0, 0, 0, 0))"
  },
  {
    "label": "UE_REQUIRES()",
    "kind": "Method",
    "detail": "Function (} template<FArg)",
    "insertText": "UE_REQUIRES(!std::is_same_v<T, FArg>)> explicit TDualQuat(const TDualQuat<FArg>& From) : TDualQuat<T>(TQuat<T>(From.R), TQuat<T>(From.D))"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} TDualQuat<T>)",
    "insertText": "operator(const TDualQuat<T> &B)"
  },
  {
    "label": "Sqrt()",
    "kind": "Method",
    "detail": "Function (T MinV = 1 . 0 f /)",
    "insertText": "Sqrt(R | R)"
  },
  {
    "label": "T()",
    "kind": "Method",
    "detail": "Function (TQuat<T> TQ = D* TQuat<)",
    "insertText": "T(-R.X, -R.Y, -R.Z, R.W)"
  },
  {
    "label": "UE_DECLARE_LWC_TYPE()",
    "kind": "Method",
    "detail": "Function (} } ; } })",
    "insertText": "UE_DECLARE_LWC_TYPE(DualQuat, 4)"
  }
]