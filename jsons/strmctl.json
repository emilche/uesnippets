[
  {
    "label": "CBaseStreamControl",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CBaseStreamControl"
  },
  {
    "label": "StreamControlState",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "StreamControlState"
  },
  {
    "label": "ExecuteStop()",
    "kind": "Method",
    "detail": "Function (# ifndef __strmctl_h__ # define __strmctl_h__ class CBaseStreamControl : public IAMStreamControl { public : enum StreamControlState { STREAM_FLOWING = 0 x1000,STREAM_DISCARDING } ; private : enum StreamControlState m_StreamState ; enum StreamControlState m_StreamStateOnStop ; REFERENCE_TIME m_tStartTime ; REFERENCE_TIME m_tStopTime ; DWORD m_dwStartCookie ; DWORD m_dwStopCookie ; volatile BOOL m_bIsFlushing ; volatile BOOL m_bStopSendExtra ; volatile BOOL m_bStopExtraSent ; CCritSec m_CritSec ; CAMEvent m_StreamEvent ; void)",
    "insertText": "ExecuteStop()"
  },
  {
    "label": "ExecuteStart()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExecuteStart()"
  },
  {
    "label": "CancelStop()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CancelStop()"
  },
  {
    "label": "CancelStart()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CancelStart()"
  },
  {
    "label": "CheckSampleTimes()",
    "kind": "Method",
    "detail": "Function (IReferenceClock* m_pRefClock ; IMediaEventSink* m_pSink ; FILTER_STATE m_FilterState ; REFERENCE_TIME m_tRunStart ; enum StreamControlState)",
    "insertText": "CheckSampleTimes(__in const REFERENCE_TIME * pSampleStart, __in const REFERENCE_TIME * pSampleStop)"
  },
  {
    "label": "CBaseStreamControl()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "CBaseStreamControl(__inout_opt HRESULT *phr = NULL)"
  },
  {
    "label": "CBaseStreamControl()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "CBaseStreamControl()"
  },
  {
    "label": "SetSyncSource()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSyncSource(IReferenceClock * pRefClock)"
  },
  {
    "label": "lck()",
    "kind": "Method",
    "detail": "Function (CAutoLock)",
    "insertText": "lck(&m_CritSec)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (m_pRefClock = pRefClock ;)",
    "insertText": "if(m_pRefClock) m_pRefClock->AddRef()"
  },
  {
    "label": "SetFilterGraph()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetFilterGraph(IMediaEventSink *pSink)"
  },
  {
    "label": "NotifyFilterState()",
    "kind": "Method",
    "detail": "Function (m_pSink = pSink ; } void)",
    "insertText": "NotifyFilterState(FILTER_STATE new_state, REFERENCE_TIME tStart = 0)"
  },
  {
    "label": "Flushing()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Flushing(BOOL bInProgress)"
  },
  {
    "label": "StopAt()",
    "kind": "Method",
    "detail": "Function (STDMETHODIMP)",
    "insertText": "StopAt(const REFERENCE_TIME * ptStop = NULL, BOOL bSendExtra = FALSE, DWORD dwCookie = 0)"
  },
  {
    "label": "StartAt()",
    "kind": "Method",
    "detail": "Function (STDMETHODIMP)",
    "insertText": "StartAt(const REFERENCE_TIME * ptStart = NULL, DWORD dwCookie = 0)"
  },
  {
    "label": "GetInfo()",
    "kind": "Method",
    "detail": "Function (STDMETHODIMP)",
    "insertText": "GetInfo(__out AM_STREAM_INFO *pInfo)"
  },
  {
    "label": "CheckStreamState()",
    "kind": "Method",
    "detail": "Function (enum StreamControlState)",
    "insertText": "CheckStreamState(IMediaSample * pSample)"
  },
  {
    "label": "GetStreamEventHandle()",
    "kind": "Method",
    "detail": "Function (private : HANDLE)",
    "insertText": "GetStreamEventHandle()"
  }
]