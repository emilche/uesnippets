[
  {
    "label": "FPaintArgs",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPaintArgs"
  },
  {
    "label": "FSlateWindowElementList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateWindowElementList"
  },
  {
    "label": "SBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SBox"
  },
  {
    "label": "UAnimSequence",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimSequence"
  },
  {
    "label": "UBlendSpace",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBlendSpace"
  },
  {
    "label": "SBlendSpaceGridWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SBlendSpaceGridWidget"
  },
  {
    "label": "FBlendSampleDetails",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBlendSampleDetails"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FBlendSample",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBlendSample"
  },
  {
    "label": "FUICommandList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FUICommandList"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct(const FArguments& InArgs)"
  },
  {
    "label": "SetPreviewingState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPreviewingState(const FVector& InPosition, const FVector& InFilteredPosition)"
  },
  {
    "label": "InvalidateCachedData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InvalidateCachedData()"
  },
  {
    "label": "InvalidateState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InvalidateState()"
  },
  {
    "label": "IsValidDragDropOperation()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsValidDragDropOperation(const FDragDropEvent& DragDropEvent, FText& InvalidOperationText)"
  },
  {
    "label": "StartPreviewing()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StartPreviewing()"
  },
  {
    "label": "StopPreviewing()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StopPreviewing()"
  },
  {
    "label": "MakeViewContextMenuEntries()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MakeViewContextMenuEntries(FMenuBuilder& InMenuBuilder)"
  },
  {
    "label": "CreateBlendSampleContextMenu()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<SWidget>)",
    "insertText": "CreateBlendSampleContextMenu()"
  },
  {
    "label": "CreateNewBlendSampleContextMenu()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<SWidget>)",
    "insertText": "CreateNewBlendSampleContextMenu(const FVector2D& InMousePosition)"
  },
  {
    "label": "CreateGridEntryBox()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<SWidget>)",
    "insertText": "CreateGridEntryBox(const int32 BoxIndex, const bool bShowLabel)"
  },
  {
    "label": "ProcessClick()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "ProcessClick(const FGeometry& MyGeometry, const FPointerEvent& MouseEvent)"
  },
  {
    "label": "ToggleTriangulationVisibility()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "ToggleTriangulationVisibility()"
  },
  {
    "label": "ToggleFittingType()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "ToggleFittingType()"
  },
  {
    "label": "UpdateGridRatioMargin()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateGridRatioMargin(const FVector2D& GeometrySize)"
  },
  {
    "label": "ToggleShowAnimationNames()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "ToggleShowAnimationNames()"
  },
  {
    "label": "CalculateGridPoints()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CalculateGridPoints()"
  },
  {
    "label": "GetGridRectangleFromGeometry()",
    "kind": "Method",
    "detail": "Function (FSlateRect)",
    "insertText": "GetGridRectangleFromGeometry(const FGeometry& MyGeometry)"
  },
  {
    "label": "ShowToolTip()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ShowToolTip()"
  },
  {
    "label": "ResetToolTip()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetToolTip()"
  },
  {
    "label": "OnInputBoxValueCommited()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnInputBoxValueCommited(const float NewValue, ETextCommit::Type CommitType, const int32 ParameterIndex)"
  },
  {
    "label": "OnInputBoxValueChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnInputBoxValueChanged(const float NewValue, const int32 ParameterIndex, bool bIsInteractive)"
  },
  {
    "label": "OnInputSliderBegin()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnInputSliderBegin(const int32 ParameterIndex)"
  },
  {
    "label": "OnInputSliderEnd()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnInputSliderEnd(const float NewValue, const int32 ParameterIndex)"
  },
  {
    "label": "BindCommands()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BindCommands()"
  },
  {
    "label": "OnBlendSampleCut()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnBlendSampleCut()"
  },
  {
    "label": "OnBlendSampleCopy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnBlendSampleCopy()"
  },
  {
    "label": "OnBlendSamplePaste()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnBlendSamplePaste()"
  },
  {
    "label": "OnBlendSampleDelete()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnBlendSampleDelete()"
  },
  {
    "label": "CanBlendSampleCutCopy()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanBlendSampleCutCopy()"
  },
  {
    "label": "CanBlendSamplePaste()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanBlendSamplePaste()"
  },
  {
    "label": "CanBlendSampleDelete()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanBlendSampleDelete()"
  },
  {
    "label": "UpdateCachedBlendParameterData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateCachedBlendParameterData()"
  },
  {
    "label": "EnableStatusBarMessage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnableStatusBarMessage(bool bEnable)"
  }
]