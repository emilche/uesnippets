[
  {
    "label": "IAsyncReadFileHandle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IAsyncReadFileHandle"
  },
  {
    "label": "FFileCachePreloadEntry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFileCachePreloadEntry"
  },
  {
    "label": "IFileCacheHandle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IFileCacheHandle"
  },
  {
    "label": "FFileCachePreloadEntry()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Async / TaskGraphInterfaces . h \" # include \" Containers / UnrealString . h \" # include \" CoreMinimal . h \" # include \" GenericPlatform / GenericPlatformFile . h \" # include \" HAL / Platform . h \" # include \" HAL / PlatformFile . h \" # include \" Misc / MemoryReadStream . h \" class IAsyncReadFileHandle ; struct FFileCachePreloadEntry {)",
    "insertText": "FFileCachePreloadEntry() : Offset(0), Size(0)"
  },
  {
    "label": "FFileCachePreloadEntry()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FFileCachePreloadEntry(int64 InOffset, int64 InSize) : Offset(InOffset), Size(InSize)"
  },
  {
    "label": "EvictAll()",
    "kind": "Method",
    "detail": "Function (} int64 Offset ; int64 Size ; } ; class IFileCacheHandle { public : void)",
    "insertText": "EvictAll()"
  },
  {
    "label": "CreateFileCacheHandle()",
    "kind": "Method",
    "detail": "Function (IFileCacheHandle*)",
    "insertText": "CreateFileCacheHandle(const TCHAR* InFileName, int64 InBaseOffset = 0)"
  },
  {
    "label": "CreateFileCacheHandle()",
    "kind": "Method",
    "detail": "Function (IFileCacheHandle*)",
    "insertText": "CreateFileCacheHandle(IAsyncReadFileHandle* FileHandle, int64 InBaseOffset = 0)"
  },
  {
    "label": "IFileCacheHandle()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "IFileCacheHandle()"
  },
  {
    "label": "GetFileCacheSize()",
    "kind": "Method",
    "detail": "Function (} ; int64)",
    "insertText": "GetFileCacheSize()"
  },
  {
    "label": "ReadData()",
    "kind": "Method",
    "detail": "Function (IMemoryReadStreamRef)",
    "insertText": "ReadData(FGraphEventArray& OutCompletionEvents, int64 Offset, int64 BytesToRead, EAsyncIOPriorityAndFlags Priority)"
  },
  {
    "label": "PreloadData()",
    "kind": "Method",
    "detail": "Function (FGraphEventRef)",
    "insertText": "PreloadData(const FFileCachePreloadEntry* PreloadEntries, int32 NumEntries, EAsyncIOPriorityAndFlags Priority)"
  },
  {
    "label": "WaitAll()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WaitAll()"
  },
  {
    "label": "FileCache_PostIoStoreCompressionBlockSize()",
    "kind": "Method",
    "detail": "Function (} ; # if ! UE_BUILD_SHIPPING void)",
    "insertText": "FileCache_PostIoStoreCompressionBlockSize(uint32 InCompressionBlockSize, FString const& InContainerFilePath)"
  }
]