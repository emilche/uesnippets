[
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# pragma once # if WITH_VERSE_VM | |)",
    "insertText": "defined(__INTELLISENSE__)"
  },
  {
    "label": "ConvertToFloat()",
    "kind": "Method",
    "detail": "Function (VFloat)",
    "insertText": "ConvertToFloat()"
  },
  {
    "label": "VHeapInt()",
    "kind": "Method",
    "detail": "Function (} return StaticCast<)",
    "insertText": "VHeapInt().ConvertToFloat()"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (} VInt)",
    "insertText": "Add(FAllocationContext Context, VInt Lhs, VInt Rhs)"
  },
  {
    "label": "int64()",
    "kind": "Method",
    "detail": "Function (const int64 Result64 = static_cast<)",
    "insertText": "int64(Lhs.AsInt32()) + static_cast<int64>(Rhs.AsInt32())"
  },
  {
    "label": "AddSlowPath()",
    "kind": "Method",
    "detail": "Function (} else { return)",
    "insertText": "AddSlowPath(Context, Lhs, Rhs)"
  },
  {
    "label": "Sub()",
    "kind": "Method",
    "detail": "Function (} } VInt)",
    "insertText": "Sub(FAllocationContext Context, VInt Lhs, VInt Rhs)"
  },
  {
    "label": "int64()",
    "kind": "Method",
    "detail": "Function (const int64 Result64 = static_cast<)",
    "insertText": "int64(Lhs.AsInt32()) - static_cast<int64>(Rhs.AsInt32())"
  },
  {
    "label": "SubSlowPath()",
    "kind": "Method",
    "detail": "Function (} else { return)",
    "insertText": "SubSlowPath(Context, Lhs, Rhs)"
  },
  {
    "label": "Mul()",
    "kind": "Method",
    "detail": "Function (} } VInt)",
    "insertText": "Mul(FAllocationContext Context, VInt Lhs, VInt Rhs)"
  },
  {
    "label": "int64()",
    "kind": "Method",
    "detail": "Function (const int64 Result64 = static_cast<)",
    "insertText": "int64(Lhs.AsInt32()) * static_cast<int64>(Rhs.AsInt32())"
  },
  {
    "label": "MulSlowPath()",
    "kind": "Method",
    "detail": "Function (} else { return)",
    "insertText": "MulSlowPath(Context, Lhs, Rhs)"
  },
  {
    "label": "Div()",
    "kind": "Method",
    "detail": "Function (} } VInt)",
    "insertText": "Div(FAllocationContext Context, VInt Lhs, VInt Rhs, bool* bOutHasNonZeroRemainder)"
  },
  {
    "label": "VInt()",
    "kind": "Method",
    "detail": "Function (* bOutHasNonZeroRemainder = false ; } return)",
    "insertText": "VInt(Context, int64(INT32_MAX) + 1)"
  },
  {
    "label": "AsInt32()",
    "kind": "Method",
    "detail": "Function (} const int32 Lhs32 = Lhs .)",
    "insertText": "AsInt32()"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (const int32 Result32 = Lhs32 / Rhs32 ;)",
    "insertText": "if(bOutHasNonZeroRemainder)"
  },
  {
    "label": "bOutHasNonZeroRemainder()",
    "kind": "Method",
    "detail": "Function (*)",
    "insertText": "bOutHasNonZeroRemainder(Lhs32 != Rhs32 * Result32)"
  },
  {
    "label": "VInt()",
    "kind": "Method",
    "detail": "Function (} return)",
    "insertText": "VInt(Result32)"
  },
  {
    "label": "DivSlowPath()",
    "kind": "Method",
    "detail": "Function (} else { return)",
    "insertText": "DivSlowPath(Context, Lhs, Rhs, bOutHasNonZeroRemainder)"
  },
  {
    "label": "Mod()",
    "kind": "Method",
    "detail": "Function (} } VInt)",
    "insertText": "Mod(FAllocationContext Context, VInt Lhs, VInt Rhs)"
  },
  {
    "label": "AsInt32()",
    "kind": "Method",
    "detail": "Function (} const int32 Result32 = Lhs .)",
    "insertText": "AsInt32() % Rhs.AsInt32()"
  },
  {
    "label": "ModSlowPath()",
    "kind": "Method",
    "detail": "Function (} else { return)",
    "insertText": "ModSlowPath(Context, Lhs, Rhs)"
  },
  {
    "label": "Neg()",
    "kind": "Method",
    "detail": "Function (} } VInt)",
    "insertText": "Neg(FAllocationContext Context, VInt x)"
  },
  {
    "label": "int64()",
    "kind": "Method",
    "detail": "Function (const int64 r64 = static_cast<)",
    "insertText": "int64(x.AsInt32())"
  },
  {
    "label": "NegSlowPath()",
    "kind": "Method",
    "detail": "Function (} return)",
    "insertText": "NegSlowPath(Context, x)"
  },
  {
    "label": "Abs()",
    "kind": "Method",
    "detail": "Function (} VInt)",
    "insertText": "Abs(FAllocationContext Context, VInt x)"
  },
  {
    "label": "AbsSlowPath()",
    "kind": "Method",
    "detail": "Function (} return)",
    "insertText": "AbsSlowPath(Context, x)"
  },
  {
    "label": "Eq()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "Eq(FAllocationContext Context, VInt Lhs, VInt Rhs)"
  },
  {
    "label": "EqSlowPath()",
    "kind": "Method",
    "detail": "Function (} else { return)",
    "insertText": "EqSlowPath(Context, Lhs, Rhs)"
  },
  {
    "label": "Lt()",
    "kind": "Method",
    "detail": "Function (} } bool)",
    "insertText": "Lt(FAllocationContext Context, VInt Lhs, VInt Rhs)"
  },
  {
    "label": "LtSlowPath()",
    "kind": "Method",
    "detail": "Function (} return)",
    "insertText": "LtSlowPath(Context, Lhs, Rhs)"
  },
  {
    "label": "Gt()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "Gt(FAllocationContext Context, VInt Lhs, VInt Rhs)"
  },
  {
    "label": "GtSlowPath()",
    "kind": "Method",
    "detail": "Function (} return)",
    "insertText": "GtSlowPath(Context, Lhs, Rhs)"
  },
  {
    "label": "Lte()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "Lte(FAllocationContext Context, VInt Lhs, VInt Rhs)"
  },
  {
    "label": "LteSlowPath()",
    "kind": "Method",
    "detail": "Function (} return)",
    "insertText": "LteSlowPath(Context, Lhs, Rhs)"
  },
  {
    "label": "Gte()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "Gte(FAllocationContext Context, VInt Lhs, VInt Rhs)"
  },
  {
    "label": "GteSlowPath()",
    "kind": "Method",
    "detail": "Function (} return)",
    "insertText": "GteSlowPath(Context, Lhs, Rhs)"
  },
  {
    "label": "AddSlowPath()",
    "kind": "Method",
    "detail": "Function (} VInt)",
    "insertText": "AddSlowPath(FAllocationContext Context, VInt Lhs, VInt Rhs)"
  },
  {
    "label": "AsInt64()",
    "kind": "Method",
    "detail": "Function (const int64 Lhs64 = Lhs .)",
    "insertText": "AsInt64()"
  },
  {
    "label": "FGuardedInt64()",
    "kind": "Method",
    "detail": "Function (FGuardedInt64 Result =)",
    "insertText": "FGuardedInt64(Lhs64) + FGuardedInt64(Rhs64)"
  },
  {
    "label": "AsHeapInt()",
    "kind": "Method",
    "detail": "Function (} } VHeapInt& LhsHeapInt =)",
    "insertText": "AsHeapInt(Context, Lhs)"
  },
  {
    "label": "AsHeapInt()",
    "kind": "Method",
    "detail": "Function (VHeapInt& RhsHeapInt =)",
    "insertText": "AsHeapInt(Context, Rhs)"
  },
  {
    "label": "SubSlowPath()",
    "kind": "Method",
    "detail": "Function (} VInt)",
    "insertText": "SubSlowPath(FAllocationContext Context, VInt Lhs, VInt Rhs)"
  },
  {
    "label": "FGuardedInt64()",
    "kind": "Method",
    "detail": "Function (FGuardedInt64 Result =)",
    "insertText": "FGuardedInt64(Lhs64) - FGuardedInt64(Rhs64)"
  },
  {
    "label": "MulSlowPath()",
    "kind": "Method",
    "detail": "Function (} VInt)",
    "insertText": "MulSlowPath(FAllocationContext Context, VInt Lhs, VInt Rhs)"
  },
  {
    "label": "FGuardedInt64()",
    "kind": "Method",
    "detail": "Function (FGuardedInt64 Result =)",
    "insertText": "FGuardedInt64(Lhs64) * FGuardedInt64(Rhs64)"
  },
  {
    "label": "DivSlowPath()",
    "kind": "Method",
    "detail": "Function (} VInt)",
    "insertText": "DivSlowPath(FAllocationContext Context, VInt Lhs, VInt Rhs, bool* bOutHasNonZeroRemainder)"
  },
  {
    "label": "FGuardedInt64()",
    "kind": "Method",
    "detail": "Function (FGuardedInt64 Result =)",
    "insertText": "FGuardedInt64(Lhs64) / FGuardedInt64(Rhs64)"
  },
  {
    "label": "bOutHasNonZeroRemainder()",
    "kind": "Method",
    "detail": "Function (*)",
    "insertText": "bOutHasNonZeroRemainder(Lhs64 != Rhs64 * Result.GetChecked())"
  },
  {
    "label": "VInt()",
    "kind": "Method",
    "detail": "Function (} return)",
    "insertText": "VInt(Context, Result.GetChecked())"
  },
  {
    "label": "ModSlowPath()",
    "kind": "Method",
    "detail": "Function (} VInt)",
    "insertText": "ModSlowPath(FAllocationContext Context, VInt Lhs, VInt Rhs)"
  },
  {
    "label": "FGuardedInt64()",
    "kind": "Method",
    "detail": "Function (FGuardedInt64 Result =)",
    "insertText": "FGuardedInt64(Lhs64) % FGuardedInt64(Rhs64)"
  },
  {
    "label": "EqSlowPath()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "EqSlowPath(FAllocationContext Context, VInt Lhs, VInt Rhs)"
  },
  {
    "label": "AsHeapInt()",
    "kind": "Method",
    "detail": "Function (VHeapInt& RhsHeapInt =)",
    "insertText": "AsHeapInt(FAllocationContext(Context), Rhs)"
  },
  {
    "label": "NegSlowPath()",
    "kind": "Method",
    "detail": "Function (} VInt)",
    "insertText": "NegSlowPath(FAllocationContext Context, VInt N)"
  },
  {
    "label": "VHeapInt()",
    "kind": "Method",
    "detail": "Function (VHeapInt& NHeap = N . StaticCast<)",
    "insertText": "VHeapInt()"
  },
  {
    "label": "AbsSlowPath()",
    "kind": "Method",
    "detail": "Function (} VInt)",
    "insertText": "AbsSlowPath(FAllocationContext Context, VInt N)"
  },
  {
    "label": "LtSlowPath()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "LtSlowPath(FAllocationContext Context, VInt Lhs, VInt Rhs)"
  },
  {
    "label": "GtSlowPath()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "GtSlowPath(FAllocationContext Context, VInt Lhs, VInt Rhs)"
  },
  {
    "label": "LteSlowPath()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "LteSlowPath(FAllocationContext Context, VInt Lhs, VInt Rhs)"
  },
  {
    "label": "Compare()",
    "kind": "Method",
    "detail": "Function (const VHeapInt::ComparisonResult Result =)",
    "insertText": "Compare(LhsHeap, RhsHeap)"
  },
  {
    "label": "IsInt64()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsInt64()"
  },
  {
    "label": "checkSlow()",
    "kind": "Method",
    "detail": "Function (} else {)",
    "insertText": "checkSlow(IsInt64())"
  },
  {
    "label": "IsUint32()",
    "kind": "Method",
    "detail": "Function (} } bool)",
    "insertText": "IsUint32()"
  },
  {
    "label": "AsUint32()",
    "kind": "Method",
    "detail": "Function (} return false ; } uint32)",
    "insertText": "AsUint32()"
  },
  {
    "label": "GetTypeHash()",
    "kind": "Method",
    "detail": "Function (} uint32)",
    "insertText": "GetTypeHash(VInt Int)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "if(Int.IsInt64())"
  },
  {
    "label": "GetTypeHash()",
    "kind": "Method",
    "detail": "Function (} return)",
    "insertText": "GetTypeHash(Int.StaticCast<VHeapInt>())"
  }
]