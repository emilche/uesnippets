[
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "FConstraintDrive",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FConstraintDrive"
  },
  {
    "label": "FConstraintInstance",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FConstraintInstance"
  },
  {
    "label": "FLinearDriveConstraint",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLinearDriveConstraint"
  },
  {
    "label": "FAngularDriveConstraint",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAngularDriveConstraint"
  },
  {
    "label": "EAngularDriveMode",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EAngularDriveMode"
  },
  {
    "label": "UENUM()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" EngineDefines . h \" # include \" ConstraintDrives . generated . h \")",
    "insertText": "UENUM()"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (enum Type : int { SLERP,TwistAndSwing } ; })",
    "insertText": "USTRUCT()"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() UPROPERTY(EditAnywhere, AdvancedDisplay, Category = Constraint, meta = (ClampMin = \"0.0\"))"
  },
  {
    "label": "FConstraintDrive()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FConstraintDrive()"
  },
  {
    "label": "SetDriveParams()",
    "kind": "Method",
    "detail": "Function (private : struct FConstraintInstance ; struct FLinearDriveConstraint ; struct FAngularDriveConstraint ; void)",
    "insertText": "SetDriveParams(float InStiffness, float InDamping, float InForceLimit)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() UPROPERTY(EditAnywhere, Category = LinearMotor)"
  },
  {
    "label": "FLinearDriveConstraint()",
    "kind": "Method",
    "detail": "Function (PRAGMA_ENABLE_DEPRECATION_WARNINGS # endif)",
    "insertText": "FLinearDriveConstraint()"
  },
  {
    "label": "IsPositionDriveEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsPositionDriveEnabled()"
  },
  {
    "label": "SetLinearVelocityDrive()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetLinearVelocityDrive(bool bEnableXDrive, bool bEnableYDrive, bool bEnableZDrive)"
  },
  {
    "label": "SetDriveParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDriveParams(const FVector& InStiffness, const FVector& InDamping, const FVector& InForceLimit)"
  },
  {
    "label": "GetDriveParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetDriveParams(float& OutStiffness, float& OutDamping, float& OutForceLimit)"
  },
  {
    "label": "GetDriveParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetDriveParams(FVector& OutStiffness, FVector& OutDamping, FVector& OutForceLimit)"
  },
  {
    "label": "SetAccelerationMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAccelerationMode(bool bAccelerationMode)"
  },
  {
    "label": "GetAccelerationMode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetAccelerationMode()"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() UPROPERTY(EditAnywhere, Category = LinearMotor, meta = (DisplayName=\"Twist\"))"
  },
  {
    "label": "FAngularDriveConstraint()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FAngularDriveConstraint()"
  },
  {
    "label": "IsOrientationDriveEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsOrientationDriveEnabled()"
  },
  {
    "label": "SetOrientationDriveSLERP()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetOrientationDriveSLERP(bool InEnableSLERP)"
  },
  {
    "label": "SetAngularVelocityDriveTwistAndSwing()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAngularVelocityDriveTwistAndSwing(bool InEnableTwistDrive, bool InEnableSwingDrive)"
  },
  {
    "label": "SetAngularVelocityDriveSLERP()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAngularVelocityDriveSLERP(bool InEnableSLERP)"
  },
  {
    "label": "SetAngularDriveMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAngularDriveMode(EAngularDriveMode::Type DriveMode)"
  }
]