[
  {
    "label": "FArchive",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FArchive"
  },
  {
    "label": "FProperty",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FProperty"
  },
  {
    "label": "UActorComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UActorComponent"
  },
  {
    "label": "UBlueprint",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBlueprint"
  },
  {
    "label": "UClass",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UClass"
  },
  {
    "label": "UEdGraph",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEdGraph"
  },
  {
    "label": "UEdGraphPin",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEdGraphPin"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "UStruct",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UStruct"
  },
  {
    "label": "FBPVariableDescription",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBPVariableDescription"
  },
  {
    "label": "FEdGraphPinType",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FEdGraphPinType"
  },
  {
    "label": "TKeyValuePair",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TKeyValuePair"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "BLUEPRINTGRAPH_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BLUEPRINTGRAPH_API"
  },
  {
    "label": "UToolMenu",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UToolMenu"
  },
  {
    "label": "UGraphNodeContextMenuContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UGraphNodeContextMenuContext"
  },
  {
    "label": "FCompilerResultsLog",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCompilerResultsLog"
  },
  {
    "label": "UEdGraphSchema_K2",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEdGraphSchema_K2"
  },
  {
    "label": "UENUM()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" Containers / EnumAsByte . h \" # include \" Containers / UnrealString . h \" # include \" CoreMinimal . h \" # include \" EdGraph / EdGraphNode . h \" # include \" Engine / Blueprint . h \" # include \" Engine / MemberReference . h \" # include \" HAL / Platform . h \" # include \" Internationalization / Text . h \" # include \" K2Node . h \" # include \" Math / Color . h \" # include \" Templates / SubclassOf . h \" # include \" Textures / SlateIcon . h \" # include \" UObject / NameTypes . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / UObjectGlobals . h \" # include \" UObject / UnrealNames . h \" # include \" K2Node_Variable . generated . h \" class FArchive ; class FProperty ; class UActorComponent ; class UBlueprint ; class UClass ; class UEdGraph ; class UEdGraphPin ; class UObject ; class UStruct ; struct FBPVariableDescription ; struct FEdGraphPinType ; template<KeyType,ValueType> struct TKeyValuePair ;)",
    "insertText": "UENUM()"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (enum Type : int { Unspecified,NotSelfContext,} ; })",
    "insertText": "UCLASS(abstract)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() UPROPERTY(meta=(BlueprintSearchable=\"true\", BlueprintSearchableHiddenExplicit=\"true\", BlueprintSearchableFormatVersion=\"FIB_VER_VARIABLE_REFERENCE\"))"
  },
  {
    "label": "RemapRestrictedLinkReference()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RemapRestrictedLinkReference(FName OldVariableName, FName NewVariableName, const UClass* MatchInVariableClass, const UClass* RemapIfLinkedToClass, bool bLogWarning)"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (public : void)",
    "insertText": "Serialize(FArchive& Ar)"
  },
  {
    "label": "GetNodeTitleColor()",
    "kind": "Method",
    "detail": "Function (FLinearColor)",
    "insertText": "GetNodeTitleColor()"
  },
  {
    "label": "GetFindReferenceSearchString_Impl()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetFindReferenceSearchString_Impl(EGetFindReferenceSearchStringFlags InFlags)"
  },
  {
    "label": "ReconstructNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReconstructNode()"
  },
  {
    "label": "GetDocumentationLink()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetDocumentationLink()"
  },
  {
    "label": "GetDocumentationExcerptName()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetDocumentationExcerptName()"
  },
  {
    "label": "GetCornerIcon()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetCornerIcon()"
  },
  {
    "label": "GetIconAndTint()",
    "kind": "Method",
    "detail": "Function (FSlateIcon)",
    "insertText": "GetIconAndTint(FLinearColor& OutColor)"
  },
  {
    "label": "AutowireNewNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AutowireNewNode(UEdGraphPin* FromPin)"
  },
  {
    "label": "CanPasteHere()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanPasteHere(const UEdGraph* TargetGraph)"
  },
  {
    "label": "PostPasteNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostPasteNode()"
  },
  {
    "label": "HasDeprecatedReference()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasDeprecatedReference()"
  },
  {
    "label": "GetDeprecationResponse()",
    "kind": "Method",
    "detail": "Function (FEdGraphNodeDeprecationResponse)",
    "insertText": "GetDeprecationResponse(EEdGraphNodeDeprecationType DeprecationType)"
  },
  {
    "label": "GetJumpTargetForDoubleClick()",
    "kind": "Method",
    "detail": "Function (UObject*)",
    "insertText": "GetJumpTargetForDoubleClick()"
  },
  {
    "label": "CanJumpToDefinition()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanJumpToDefinition()"
  },
  {
    "label": "JumpToDefinition()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "JumpToDefinition()"
  },
  {
    "label": "GetNodeContextMenuActions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetNodeContextMenuActions(class UToolMenu* Menu, class UGraphNodeContextMenuContext* Context)"
  },
  {
    "label": "GetPinMetaData()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetPinMetaData(FName InPinName, FName InKey)"
  },
  {
    "label": "HasExternalDependencies()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasExternalDependencies(TArray<class UStruct*>* OptionalOutput)"
  },
  {
    "label": "DrawNodeAsVariable()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DrawNodeAsVariable()"
  },
  {
    "label": "ValidateNodeDuringCompilation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ValidateNodeDuringCompilation(class FCompilerResultsLog& MessageLog)"
  },
  {
    "label": "GetToolTipHeading()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetToolTipHeading()"
  },
  {
    "label": "GetNodeAttributes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetNodeAttributes(TArray<TKeyValuePair<FString, FString>>& OutNodeAttributes)"
  },
  {
    "label": "HandleVariableRenamed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleVariableRenamed(UBlueprint* InBlueprint, UClass* InVariableClass, UEdGraph* InGraph, const FName& InOldVarName, const FName& InNewVarName)"
  },
  {
    "label": "ReplaceReferences()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReplaceReferences(UBlueprint* InBlueprint, UBlueprint* InReplacementBlueprint, const FMemberReference& InSource, const FMemberReference& InReplacement)"
  },
  {
    "label": "ReferencesVariable()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ReferencesVariable(const FName& InVarName, const UStruct* InScope)"
  },
  {
    "label": "SetFromProperty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFromProperty(const FProperty* Property, bool bSelfContext, UClass* OwnerClass)"
  },
  {
    "label": "GetVarNameString()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetVarNameString()"
  },
  {
    "label": "GetVarNameText()",
    "kind": "Method",
    "detail": "Function (} FText)",
    "insertText": "GetVarNameText()"
  },
  {
    "label": "GetVarName()",
    "kind": "Method",
    "detail": "Function (} FName)",
    "insertText": "GetVarName()"
  },
  {
    "label": "CreatePinForVariable()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "CreatePinForVariable(EEdGraphPinDirection Direction, FName InPinName = NAME_None)"
  },
  {
    "label": "CreatePinForSelf()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreatePinForSelf()"
  },
  {
    "label": "RecreatePinForVariable()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RecreatePinForVariable(EEdGraphPinDirection Direction, TArray<UEdGraphPin*>& OldPins, FName InPinName = NAME_None)"
  },
  {
    "label": "GetVariableSourceClass()",
    "kind": "Method",
    "detail": "Function (UClass*)",
    "insertText": "GetVariableSourceClass()"
  },
  {
    "label": "GetPropertyForVariable()",
    "kind": "Method",
    "detail": "Function (FProperty*)",
    "insertText": "GetPropertyForVariable()"
  },
  {
    "label": "GetPropertyForVariableFromSkeleton()",
    "kind": "Method",
    "detail": "Function (FProperty*)",
    "insertText": "GetPropertyForVariableFromSkeleton()"
  },
  {
    "label": "DoesRenamedVariableMatch()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DoesRenamedVariableMatch(FName OldVariableName, FName NewVariableName, UStruct* StructType)"
  },
  {
    "label": "GetPropertyForVariable_Internal()",
    "kind": "Method",
    "detail": "Function (private : FProperty*)",
    "insertText": "GetPropertyForVariable_Internal(UClass* OwningClass)"
  },
  {
    "label": "GetValuePin()",
    "kind": "Method",
    "detail": "Function (public : UEdGraphPin*)",
    "insertText": "GetValuePin()"
  },
  {
    "label": "CheckForErrors()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CheckForErrors(const class UEdGraphSchema_K2* Schema, class FCompilerResultsLog& MessageLog)"
  },
  {
    "label": "GetVariableIconAndColor()",
    "kind": "Method",
    "detail": "Function (FSlateIcon)",
    "insertText": "GetVariableIconAndColor(const UStruct* VarScope, FName VarName, FLinearColor& IconColorOut)"
  },
  {
    "label": "GetVarIconFromPinType()",
    "kind": "Method",
    "detail": "Function (FSlateIcon)",
    "insertText": "GetVarIconFromPinType(const FEdGraphPinType& InPinType, FLinearColor& IconColorOut)"
  },
  {
    "label": "GetBlueprintVarDescription()",
    "kind": "Method",
    "detail": "Function (protected : FBPVariableDescription const*)",
    "insertText": "GetBlueprintVarDescription()"
  },
  {
    "label": "GetActorComponent()",
    "kind": "Method",
    "detail": "Function (const UActorComponent*)",
    "insertText": "GetActorComponent(const FProperty* VariableProperty)"
  },
  {
    "label": "SuppressDeprecationWarning()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SuppressDeprecationWarning()"
  },
  {
    "label": "FunctionParameterExists()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "FunctionParameterExists(const UEdGraph* InFunctionGraph, const FName InParameterName)"
  }
]