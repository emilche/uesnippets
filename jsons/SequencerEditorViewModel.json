[
  {
    "label": "FMovieSceneSequenceID",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneSequenceID"
  },
  {
    "label": "ISequencer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISequencer"
  },
  {
    "label": "FSequencer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSequencer"
  },
  {
    "label": "UMovieSceneSequence",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieSceneSequence"
  },
  {
    "label": "FSequencerHostCapabilities",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSequencerHostCapabilities"
  },
  {
    "label": "FSequenceModel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSequenceModel"
  },
  {
    "label": "FSequencerSelection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSequencerSelection"
  },
  {
    "label": "STrackAreaView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "STrackAreaView"
  },
  {
    "label": "ITrackAreaHotspot",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ITrackAreaHotspot"
  },
  {
    "label": "SEQUENCER_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SEQUENCER_API"
  },
  {
    "label": "UE_SEQUENCER_DECLARE_CASTABLE()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "UE_SEQUENCER_DECLARE_CASTABLE(FSequencerEditorViewModel, FEditorViewModel)"
  },
  {
    "label": "SetSequence()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSequence(UMovieSceneSequence* InRootSequence)"
  },
  {
    "label": "UpdateSequencerCustomizations()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UpdateSequencerCustomizations(const UMovieSceneSequence* PreviousFocusedSequence)"
  },
  {
    "label": "HandleDataHierarchyChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleDataHierarchyChanged()"
  },
  {
    "label": "OnTrackAreaHotspotChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnTrackAreaHotspotChanged(TSharedPtr<ITrackAreaHotspot> NewHotspot)"
  }
]