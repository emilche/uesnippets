[
  {
    "label": "FMovieSceneSequenceID",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneSequenceID"
  },
  {
    "label": "ISequencer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISequencer"
  },
  {
    "label": "FSequencer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSequencer"
  },
  {
    "label": "UMovieSceneSequence",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieSceneSequence"
  },
  {
    "label": "FSequencerHostCapabilities",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSequencerHostCapabilities"
  },
  {
    "label": "FSequenceModel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSequenceModel"
  },
  {
    "label": "FSequencerSelection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSequencerSelection"
  },
  {
    "label": "STrackAreaView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "STrackAreaView"
  },
  {
    "label": "ITrackAreaHotspot",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ITrackAreaHotspot"
  },
  {
    "label": "SEQUENCER_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SEQUENCER_API"
  },
  {
    "label": "UE_SEQUENCER_DECLARE_CASTABLE()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Framework / Commands / UICommandList . h \" # include \" MVVM / ViewModels / EditorViewModel . h \" # include \" SequencerCustomizationManager . h \" # include \" Toolkits / AssetEditorToolkit . h \" struct FMovieSceneSequenceID ; class ISequencer ; class FSequencer ; class UMovieSceneSequence ; struct FSequencerHostCapabilities ; namespace UE::Sequencer { class FSequenceModel ; class FSequencerSelection ; class STrackAreaView ; struct ITrackAreaHotspot ; class FSequencerEditorViewModel : public FEditorViewModel { public :)",
    "insertText": "UE_SEQUENCER_DECLARE_CASTABLE(FSequencerEditorViewModel, FEditorViewModel)"
  },
  {
    "label": "FSequencerEditorViewModel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FSequencerEditorViewModel(TSharedRef<ISequencer> InSequencer, const FSequencerHostCapabilities& InHostCapabilities)"
  },
  {
    "label": "FSequencerEditorViewModel()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FSequencerEditorViewModel()"
  },
  {
    "label": "GetSelection()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FSequencerSelection>)",
    "insertText": "GetSelection()"
  },
  {
    "label": "GetSequencer()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<ISequencer>)",
    "insertText": "GetSequencer()"
  },
  {
    "label": "GetSequencerImpl()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FSequencer>)",
    "insertText": "GetSequencerImpl()"
  },
  {
    "label": "SetSequence()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSequence(UMovieSceneSequence* InRootSequence)"
  },
  {
    "label": "GetRootSequenceModel()",
    "kind": "Method",
    "detail": "Function (TViewModelPtr<FSequenceModel>)",
    "insertText": "GetRootSequenceModel()"
  },
  {
    "label": "UpdateSequencerCustomizations()",
    "kind": "Method",
    "detail": "Function (public : bool)",
    "insertText": "UpdateSequencerCustomizations(const UMovieSceneSequence* PreviousFocusedSequence)"
  },
  {
    "label": "GetActiveCustomizationInfos()",
    "kind": "Method",
    "detail": "Function (TArrayView<const FSequencerCustomizationInfo>)",
    "insertText": "GetActiveCustomizationInfos()"
  },
  {
    "label": "GetSequencerMenuExtender()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FExtender>)",
    "insertText": "GetSequencerMenuExtender(TSharedPtr<FExtensibilityManager> ExtensibilityManager, const TArray<UObject*>& ContextObjects, TFunctionRef<const FOnGetSequencerMenuExtender&(const FSequencerCustomizationInfo&)> Endpoint, FViewModelPtr InViewModel)"
  },
  {
    "label": "GetPinnedTrackArea()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FTrackAreaViewModel>)",
    "insertText": "GetPinnedTrackArea()"
  },
  {
    "label": "GetHotspot()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<ITrackAreaHotspot>)",
    "insertText": "GetHotspot()"
  },
  {
    "label": "HandleDataHierarchyChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleDataHierarchyChanged()"
  },
  {
    "label": "PreInitializeEditorImpl()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "PreInitializeEditorImpl()"
  },
  {
    "label": "InitializeEditorImpl()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeEditorImpl()"
  },
  {
    "label": "CreateRootModelImpl()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FViewModel>)",
    "insertText": "CreateRootModelImpl()"
  },
  {
    "label": "CreateOutlinerImpl()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FOutlinerViewModel>)",
    "insertText": "CreateOutlinerImpl()"
  },
  {
    "label": "CreateTrackAreaImpl()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FTrackAreaViewModel>)",
    "insertText": "CreateTrackAreaImpl()"
  },
  {
    "label": "CreateSelectionImpl()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FSequencerCoreSelection>)",
    "insertText": "CreateSelectionImpl()"
  },
  {
    "label": "CreateScriptingLayerImpl()",
    "kind": "Method",
    "detail": "Function (USequencerScriptingLayer*)",
    "insertText": "CreateScriptingLayerImpl()"
  },
  {
    "label": "IsReadOnly()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsReadOnly()"
  },
  {
    "label": "OnTrackAreaHotspotChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnTrackAreaHotspotChanged(TSharedPtr<ITrackAreaHotspot> NewHotspot)"
  }
]