[
  {
    "label": "CT_POLICY_EVAL_CTX_free()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CT_POLICY_EVAL_CTX_free(CT_POLICY_EVAL_CTX *ctx)"
  },
  {
    "label": "CT_POLICY_EVAL_CTX_set1_cert()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "CT_POLICY_EVAL_CTX_set1_cert(CT_POLICY_EVAL_CTX *ctx, X509 *cert)"
  },
  {
    "label": "CT_POLICY_EVAL_CTX_set1_issuer()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "CT_POLICY_EVAL_CTX_set1_issuer(CT_POLICY_EVAL_CTX *ctx, X509 *issuer)"
  },
  {
    "label": "CT_POLICY_EVAL_CTX_set_shared_CTLOG_STORE()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CT_POLICY_EVAL_CTX_set_shared_CTLOG_STORE(CT_POLICY_EVAL_CTX *ctx,\n                                               CTLOG_STORE *log_store)"
  },
  {
    "label": "CT_POLICY_EVAL_CTX_get_time()",
    "kind": "Method",
    "detail": "Function (uint64_t)",
    "insertText": "CT_POLICY_EVAL_CTX_get_time(const CT_POLICY_EVAL_CTX *ctx)"
  },
  {
    "label": "CT_POLICY_EVAL_CTX_set_time()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CT_POLICY_EVAL_CTX_set_time(CT_POLICY_EVAL_CTX *ctx, uint64_t time_in_ms)"
  },
  {
    "label": "SCT_free()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SCT_free(SCT *sct)"
  },
  {
    "label": "SCT_get_version()",
    "kind": "Method",
    "detail": "Function (sct_version_t)",
    "insertText": "SCT_get_version(const SCT *sct)"
  },
  {
    "label": "SCT_set_version()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SCT_set_version(SCT *sct, sct_version_t version)"
  },
  {
    "label": "SCT_get_log_entry_type()",
    "kind": "Method",
    "detail": "Function (ct_log_entry_type_t)",
    "insertText": "SCT_get_log_entry_type(const SCT *sct)"
  },
  {
    "label": "SCT_set_log_entry_type()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SCT_set_log_entry_type(SCT *sct, ct_log_entry_type_t entry_type)"
  },
  {
    "label": "SCT_get0_log_id()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "SCT_get0_log_id(const SCT *sct, unsigned char **log_id)"
  },
  {
    "label": "SCT_set0_log_id()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SCT_set0_log_id(SCT *sct, unsigned char *log_id, size_t log_id_len)"
  },
  {
    "label": "SCT_set1_log_id()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SCT_set1_log_id(SCT *sct, const unsigned char *log_id,\n                           size_t log_id_len)"
  },
  {
    "label": "SCT_get_timestamp()",
    "kind": "Method",
    "detail": "Function (uint64_t)",
    "insertText": "SCT_get_timestamp(const SCT *sct)"
  },
  {
    "label": "SCT_set_timestamp()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SCT_set_timestamp(SCT *sct, uint64_t timestamp)"
  },
  {
    "label": "SCT_get_signature_nid()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SCT_get_signature_nid(const SCT *sct)"
  },
  {
    "label": "SCT_set_signature_nid()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SCT_set_signature_nid(SCT *sct, int nid)"
  },
  {
    "label": "SCT_get0_extensions()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "SCT_get0_extensions(const SCT *sct, unsigned char **ext)"
  },
  {
    "label": "SCT_set0_extensions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SCT_set0_extensions(SCT *sct, unsigned char *ext, size_t ext_len)"
  },
  {
    "label": "SCT_set1_extensions()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SCT_set1_extensions(SCT *sct, const unsigned char *ext,\n                               size_t ext_len)"
  },
  {
    "label": "SCT_get0_signature()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "SCT_get0_signature(const SCT *sct, unsigned char **sig)"
  },
  {
    "label": "SCT_set0_signature()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SCT_set0_signature(SCT *sct, unsigned char *sig, size_t sig_len)"
  },
  {
    "label": "SCT_set1_signature()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SCT_set1_signature(SCT *sct, const unsigned char *sig,\n                              size_t sig_len)"
  },
  {
    "label": "SCT_get_source()",
    "kind": "Method",
    "detail": "Function (sct_source_t)",
    "insertText": "SCT_get_source(const SCT *sct)"
  },
  {
    "label": "SCT_set_source()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SCT_set_source(SCT *sct, sct_source_t source)"
  },
  {
    "label": "SCT_print()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SCT_print(const SCT *sct, BIO *out, int indent, const CTLOG_STORE *logs)"
  },
  {
    "label": "SCT_get_validation_status()",
    "kind": "Method",
    "detail": "Function (sct_validation_status_t)",
    "insertText": "SCT_get_validation_status(const SCT *sct)"
  },
  {
    "label": "SCT_validate()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SCT_validate(SCT *sct, const CT_POLICY_EVAL_CTX *ctx)"
  },
  {
    "label": "i2o_SCT()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "i2o_SCT(const SCT *sct, unsigned char **out)"
  },
  {
    "label": "CTLOG_new_from_base64()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "CTLOG_new_from_base64(CTLOG ** ct_log,\n                          const char *pkey_base64, const char *name)"
  },
  {
    "label": "CTLOG_free()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CTLOG_free(CTLOG *log)"
  },
  {
    "label": "CTLOG_get0_log_id()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CTLOG_get0_log_id(const CTLOG *log, const uint8_t **log_id,\n                       size_t *log_id_len)"
  },
  {
    "label": "CTLOG_STORE_free()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CTLOG_STORE_free(CTLOG_STORE *store)"
  },
  {
    "label": "CTLOG_STORE_load_file()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "CTLOG_STORE_load_file(CTLOG_STORE *store, const char *file)"
  },
  {
    "label": "CTLOG_STORE_load_default_file()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "CTLOG_STORE_load_default_file(CTLOG_STORE *store)"
  }
]