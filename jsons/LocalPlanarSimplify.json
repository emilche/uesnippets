[
  {
    "label": "FDynamicMesh3",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDynamicMesh3"
  },
  {
    "label": "FLocalPlanarSimplify",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLocalPlanarSimplify"
  },
  {
    "label": "member",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "member"
  },
  {
    "label": "IsFlat()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsFlat(const FDynamicMesh3& Mesh, int VID, double DotTolerance, FVector3d& OutFirstNormal)"
  },
  {
    "label": "IsDevelopableAlongEdge()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsDevelopableAlongEdge(const FDynamicMesh3& Mesh, int EID, int VID, double DotTolerance, FVector3d& NormalA, bool& bIsFlat)"
  },
  {
    "label": "CollapseWouldHurtTriangleQuality()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CollapseWouldHurtTriangleQuality(\n\t\tconst FDynamicMesh3& Mesh, const FVector3d& RemoveVNormal,\n\t\tint32 RemoveV, const FVector3d& RemoveVPos, int32 KeepV, const FVector3d& KeepVPos,\n\t\tdouble TryToImproveTriQualityThreshold, bool bHasMultipleNormals = false\n\t)"
  },
  {
    "label": "CollapseWouldChangeShapeOrUVs()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CollapseWouldChangeShapeOrUVs(\n\t\tconst FDynamicMesh3& Mesh, const TSet<int>& PathEdgeSet, double DotTolerance, int SourceEID,\n\t\tint32 RemoveV, const FVector3d& RemoveVPos, int32 KeepV, const FVector3d& KeepVPos,\n\t\tconst FVector3d& EdgeDir, bool bPreserveTriangleGroups, bool bPreserveUVsForMesh,\n\t\tbool bPreserveVertexUVs, bool bPreserveOverlayUVs, float UVToleranceSq,\n\t\tbool bPreserveVertexNormals, float NormalEqualCosThreshold)"
  }
]