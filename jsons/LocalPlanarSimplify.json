[
  {
    "label": "FDynamicMesh3",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDynamicMesh3"
  },
  {
    "label": "FLocalPlanarSimplify",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLocalPlanarSimplify"
  },
  {
    "label": "SimplifyAlongEdges()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" MathUtil . h \" # include \" VectorTypes . h \" # include \" GeometryTypes . h \" # include \" DynamicMesh / InfoTypes . h \" namespace UE { namespace Geometry { class FDynamicMesh3 ; class FLocalPlanarSimplify { public : double SimplificationAngleTolerance = . 1 ; double TryToImproveTriQualityThreshold = . 2 5 ; bool bPreserveTriangleGroups = true ; bool bPreserveVertexUVs = true ; bool bPreserveOverlayUVs = true ; float UVDistortTolerance = FMathf::ZeroTolerance ; bool bPreserveVertexNormals = true ; float NormalDistortTolerance = . 0 1 f ; void)",
    "insertText": "SimplifyAlongEdges(FDynamicMesh3& Mesh, TSet<int32>& InOutEdges, TUniqueFunction<void(const DynamicMeshInfo::FEdgeCollapseInfo&)> ProcessCollapse = nullptr)"
  },
  {
    "label": "IsFlat()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsFlat(const FDynamicMesh3& Mesh, int VID, double DotTolerance, FVector3d& OutFirstNormal)"
  },
  {
    "label": "IsDevelopableAlongEdge()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsDevelopableAlongEdge(const FDynamicMesh3& Mesh, int EID, int VID, double DotTolerance, FVector3d& NormalA, bool& bIsFlat)"
  },
  {
    "label": "CollapseWouldHurtTriangleQuality()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CollapseWouldHurtTriangleQuality(const FDynamicMesh3& Mesh, const FVector3d& RemoveVNormal, int32 RemoveV, const FVector3d& RemoveVPos, int32 KeepV, const FVector3d& KeepVPos, double TryToImproveTriQualityThreshold, bool bHasMultipleNormals = false)"
  },
  {
    "label": "CollapseWouldChangeShapeOrUVs()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CollapseWouldChangeShapeOrUVs(const FDynamicMesh3& Mesh, const TSet<int>& PathEdgeSet, double DotTolerance, int SourceEID, int32 RemoveV, const FVector3d& RemoveVPos, int32 KeepV, const FVector3d& KeepVPos, const FVector3d& EdgeDir, bool bPreserveTriangleGroups, bool bPreserveUVsForMesh, bool bPreserveVertexUVs, bool bPreserveOverlayUVs, float UVToleranceSq, bool bPreserveVertexNormals, float NormalEqualCosThreshold)"
  }
]