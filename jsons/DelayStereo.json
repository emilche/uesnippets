[
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "FDelayStereo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDelayStereo"
  },
  {
    "label": "FDelayStereo()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" DSP / Delay . h \" # include \" DSP / Filter . h \" namespace Audio { namespace EStereoDelayMode { enum Type { Normal,Cross,PingPong,NumStereoDelayModes } ; } class FDelayStereo { public :)",
    "insertText": "FDelayStereo()"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Init(const float InSampleRate, const int32 InNumChannels, const float InDelayLengthSec = 2.0f)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "ProcessAudioFrame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessAudioFrame(const float* InFrame, float* OutFrame)"
  },
  {
    "label": "ProcessAudio()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessAudio(const float* InBuffer, const int32 InNumSamples, float* OutBuffer)"
  },
  {
    "label": "SetMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetMode(const EStereoDelayMode::Type InMode)"
  },
  {
    "label": "GetMode()",
    "kind": "Method",
    "detail": "Function (EStereoDelayMode::Type)",
    "insertText": "GetMode()"
  },
  {
    "label": "SetFeedback()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFeedback(const float InFeedback)"
  },
  {
    "label": "SetDelayRatio()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDelayRatio(const float InDelayRatio)"
  },
  {
    "label": "SetWetLevel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetWetLevel(const float InWetLevel)"
  },
  {
    "label": "SetDryLevel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDryLevel(const float InDryLevel)"
  },
  {
    "label": "SetFilterEnabled()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFilterEnabled(bool bInEnabled)"
  },
  {
    "label": "SetFilterSettings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFilterSettings(EBiquadFilter::Type InFilterType, const float InCutoffFrequency, const float InQ)"
  },
  {
    "label": "UpdateDelays()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "UpdateDelays()"
  }
]