[
  {
    "label": "FSimpleTireConfig",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSimpleTireConfig"
  },
  {
    "label": "FSimpleTireSim",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSimpleTireSim"
  },
  {
    "label": "FSimpleTireConfig()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" VehicleSystemTemplate . h \" # include \" VehicleUtility . h \" # if VEHICLE_DEBUGGING_ENABLED UE_DISABLE_OPTIMIZATION # endif namespace Chaos { struct FSimpleTireConfig {)",
    "insertText": "FSimpleTireConfig() : Radius(594.f / 2.f / 1000.0f) , Width(195.f / 1000.0f) , Depth(107.f / 1000.0f) , StaticFrictionCoefficient(0.5f) , KineticFrictionCoefficient(StaticFrictionCoefficient * 0.7f) , InitialTirePressure(0.f) , InitialTireWear(0.f)"
  },
  {
    "label": "FSimpleTireSim()",
    "kind": "Method",
    "detail": "Function (} float Radius ; float Width ; float Depth ; float StaticFrictionCoefficient ; float KineticFrictionCoefficient ; float InitialTirePressure ; float InitialTireWear ; } ; class FSimpleTireSim : public TVehicleSystem<FSimpleTireConfig> { public :)",
    "insertText": "FSimpleTireSim(const FSimpleTireConfig* SetupIn) : TVehicleSystem<FSimpleTireConfig>(SetupIn) , TirePressure(0.f) , TireTemperature(0.f) , TireWear(0.f)"
  }
]