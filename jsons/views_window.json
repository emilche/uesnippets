[
  {
    "label": "ViewsWindow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ViewsWindow"
  },
  {
    "label": "Delegate",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Delegate"
  },
  {
    "label": "ExtensionInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ExtensionInfo"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (CefRefPtr<ViewsWindow>)",
    "insertText": "Create(\n      Delegate* delegate,\n      CefRefPtr<CefClient> client,\n      const CefString& url,\n      const CefBrowserSettings& settings,\n      CefRefPtr<CefRequestContext> request_context)"
  },
  {
    "label": "Show()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Show()"
  },
  {
    "label": "Hide()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Hide()"
  },
  {
    "label": "Minimize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Minimize()"
  },
  {
    "label": "Maximize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Maximize()"
  },
  {
    "label": "SetBounds()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetBounds(const CefRect& bounds)"
  },
  {
    "label": "SetBrowserSize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetBrowserSize(const CefSize& size,\n                      bool has_position,\n                      const CefPoint& position)"
  },
  {
    "label": "Close()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Close(bool force)"
  },
  {
    "label": "SetAddress()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAddress(const std::string& url)"
  },
  {
    "label": "SetTitle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTitle(const std::string& title)"
  },
  {
    "label": "SetFavicon()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFavicon(CefRefPtr<CefImage> image)"
  },
  {
    "label": "SetFullscreen()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFullscreen(bool fullscreen)"
  },
  {
    "label": "SetAlwaysOnTop()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAlwaysOnTop(bool on_top)"
  },
  {
    "label": "SetLoadingState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetLoadingState(bool isLoading, bool canGoBack, bool canGoForward)"
  },
  {
    "label": "SetDraggableRegions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDraggableRegions(const std::vector<CefDraggableRegion>& regions)"
  },
  {
    "label": "TakeFocus()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TakeFocus(bool next)"
  },
  {
    "label": "OnBeforeContextMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnBeforeContextMenu(CefRefPtr<CefMenuModel> model)"
  },
  {
    "label": "OnExtensionsChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnExtensionsChanged(const ExtensionSet& extensions)"
  },
  {
    "label": "SetBrowserView()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetBrowserView(CefRefPtr<CefBrowserView> browser_view)"
  },
  {
    "label": "CreateMenuModel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateMenuModel()"
  },
  {
    "label": "CreateBrowseButton()",
    "kind": "Method",
    "detail": "Function (CefRefPtr<CefLabelButton>)",
    "insertText": "CreateBrowseButton(const std::string& label,\n                                               int id)"
  },
  {
    "label": "AddControls()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddControls()"
  },
  {
    "label": "AddAccelerators()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddAccelerators()"
  },
  {
    "label": "SetMenuFocusable()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetMenuFocusable(bool focusable)"
  },
  {
    "label": "EnableView()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnableView(int id, bool enable)"
  },
  {
    "label": "ShowTopControls()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ShowTopControls(bool show)"
  },
  {
    "label": "UpdateExtensionControls()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateExtensionControls()"
  },
  {
    "label": "OnExtensionIconsLoaded()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnExtensionIconsLoaded(const ExtensionSet& extensions,\n                              const ImageCache::ImageSet& images)"
  },
  {
    "label": "OnExtensionWindowClosed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnExtensionWindowClosed()"
  }
]