[
  {
    "label": "SimulcastRateAllocator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SimulcastRateAllocator"
  },
  {
    "label": "SimulcastRateAllocator()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_VIDEO_CODING_UTILITY_SIMULCAST_RATE_ALLOCATOR_H_ # define MODULES_VIDEO_CODING_UTILITY_SIMULCAST_RATE_ALLOCATOR_H_ # include<stddef . h> # include<stdint . h> # include<vector> # include \" api / video / video_bitrate_allocation . h \" # include \" api / video / video_bitrate_allocator . h \" # include \" api / video_codecs / video_codec . h \" # include \" rtc_base / experiments / rate_control_settings . h \" # include \" rtc_base / experiments / stable_target_rate_experiment . h \" namespace webrtc { class SimulcastRateAllocator : public VideoBitrateAllocator { public :)",
    "insertText": "SimulcastRateAllocator(const VideoCodec& codec)"
  },
  {
    "label": "SimulcastRateAllocator()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "SimulcastRateAllocator()"
  },
  {
    "label": "SimulcastRateAllocator()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SimulcastRateAllocator(const SimulcastRateAllocator&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (SimulcastRateAllocator&)",
    "insertText": "operator(const SimulcastRateAllocator&)"
  },
  {
    "label": "Allocate()",
    "kind": "Method",
    "detail": "Function (VideoBitrateAllocation)",
    "insertText": "Allocate(VideoBitrateAllocationParameters parameters)"
  },
  {
    "label": "GetCodec()",
    "kind": "Method",
    "detail": "Function (const VideoCodec&)",
    "insertText": "GetCodec()"
  },
  {
    "label": "GetTemporalRateAllocation()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetTemporalRateAllocation(int num_layers, int temporal_id, bool base_heavy_tl3_alloc)"
  },
  {
    "label": "SetLegacyConferenceMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetLegacyConferenceMode(bool mode)"
  },
  {
    "label": "DistributeAllocationToSimulcastLayers()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "DistributeAllocationToSimulcastLayers(DataRate total_bitrate, DataRate stable_bitrate, VideoBitrateAllocation* allocated_bitrates)"
  },
  {
    "label": "DistributeAllocationToTemporalLayers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DistributeAllocationToTemporalLayers(VideoBitrateAllocation* allocated_bitrates)"
  },
  {
    "label": "DefaultTemporalLayerAllocation()",
    "kind": "Method",
    "detail": "Function (std::vector<uint32_t>)",
    "insertText": "DefaultTemporalLayerAllocation(int bitrate_kbps, int max_bitrate_kbps, int simulcast_id)"
  },
  {
    "label": "ScreenshareTemporalLayerAllocation()",
    "kind": "Method",
    "detail": "Function (std::vector<uint32_t>)",
    "insertText": "ScreenshareTemporalLayerAllocation(int bitrate_kbps, int max_bitrate_kbps, int simulcast_id)"
  },
  {
    "label": "NumTemporalStreams()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "NumTemporalStreams(size_t simulcast_id)"
  }
]