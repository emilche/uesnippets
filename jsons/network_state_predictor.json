[
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "NetworkStatePredictor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "NetworkStatePredictor"
  },
  {
    "label": "NetworkStatePredictorFactoryInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "NetworkStatePredictorFactoryInterface"
  },
  {
    "label": "NetworkStatePredictor()",
    "kind": "Method",
    "detail": "Function (# ifndef API_NETWORK_STATE_PREDICTOR_H_ # define API_NETWORK_STATE_PREDICTOR_H_ # include<memory> # include<vector> namespace webrtc { enum class BandwidthUsage { kBwNormal = 0,kBwUnderusing = 1,kBwOverusing = 2,kLast } ; class NetworkStatePredictor { public : ~)",
    "insertText": "NetworkStatePredictor()"
  },
  {
    "label": "Update()",
    "kind": "Method",
    "detail": "Function (} BandwidthUsage)",
    "insertText": "Update(int64_t send_time_ms, int64_t arrival_time_ms, BandwidthUsage network_state)"
  },
  {
    "label": "CreateNetworkStatePredictor()",
    "kind": "Method",
    "detail": "Function (} ; class NetworkStatePredictorFactoryInterface { public : std::unique_ptr<NetworkStatePredictor>)",
    "insertText": "CreateNetworkStatePredictor()"
  },
  {
    "label": "NetworkStatePredictorFactoryInterface()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "NetworkStatePredictorFactoryInterface()"
  }
]