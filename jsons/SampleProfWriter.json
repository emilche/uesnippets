[
  {
    "label": "SampleProfileFormat",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "SampleProfileFormat"
  },
  {
    "label": "SampleProfileWriter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SampleProfileWriter"
  },
  {
    "label": "SampleProfileWriterText",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SampleProfileWriterText"
  },
  {
    "label": "SampleProfileWriterBinary",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SampleProfileWriterBinary"
  },
  {
    "label": "SampleProfileWriter()",
    "kind": "Method",
    "detail": "Function (# ifndef LLVM_PROFILEDATA_SAMPLEPROFWRITER_H # define LLVM_PROFILEDATA_SAMPLEPROFWRITER_H # include \" llvm / ADT / StringRef . h \" # include \" llvm / IR / Function . h \" # include \" llvm / IR / Module . h \" # include \" llvm / ProfileData / SampleProf . h \" # include \" llvm / Support / ErrorOr . h \" # include \" llvm / Support / FileSystem . h \" # include \" llvm / Support / raw_ostream . h \" namespace llvm { namespace sampleprof { enum SampleProfileFormat { SPF_None = 0,SPF_Text,SPF_Binary,SPF_GCC } ; class SampleProfileWriter { public :)",
    "insertText": "SampleProfileWriter(StringRef Filename, std::error_code &EC, sys::fs::OpenFlags Flags) : OS(Filename, EC, Flags)"
  },
  {
    "label": "SampleProfileWriter()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "SampleProfileWriter()"
  },
  {
    "label": "write()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "write(StringRef FName, const FunctionSamples &S)"
  },
  {
    "label": "write()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "write(const Function &F, const FunctionSamples &S)"
  },
  {
    "label": "write()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "write(const Module &M, StringMap<FunctionSamples> &P)"
  },
  {
    "label": "getName()",
    "kind": "Method",
    "detail": "Function (StringRef Name = F .)",
    "insertText": "getName()"
  },
  {
    "label": "write()",
    "kind": "Method",
    "detail": "Function (} return true ; } bool)",
    "insertText": "write(StringMap<FunctionSamples> &ProfileMap)"
  },
  {
    "label": "first()",
    "kind": "Method",
    "detail": "Function (StringRef FName = I .)",
    "insertText": "first()"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (FunctionSamples& Profile = I . second ;)",
    "insertText": "if(!write(FName, Profile))"
  },
  {
    "label": "create()",
    "kind": "Method",
    "detail": "Function (} return true ; } ErrorOr<std::unique_ptr<SampleProfileWriter>>)",
    "insertText": "create(StringRef Filename, SampleProfileFormat Format)"
  },
  {
    "label": "SampleProfileWriterText()",
    "kind": "Method",
    "detail": "Function (protected : raw_fd_ostream OS ; } ; class SampleProfileWriterText : public SampleProfileWriter { public :)",
    "insertText": "SampleProfileWriterText(StringRef F, std::error_code &EC) : SampleProfileWriter(F, EC, sys::fs::F_Text)"
  },
  {
    "label": "SampleProfileWriterBinary()",
    "kind": "Method",
    "detail": "Function (} } ; class SampleProfileWriterBinary : public SampleProfileWriter { public :)",
    "insertText": "SampleProfileWriterBinary(StringRef F, std::error_code &EC)"
  },
  {
    "label": "write()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "write(StringRef F, const FunctionSamples &S)"
  }
]