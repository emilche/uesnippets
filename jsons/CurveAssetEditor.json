[
  {
    "label": "FCurveEditor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCurveEditor"
  },
  {
    "label": "FExtender",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FExtender"
  },
  {
    "label": "FSpawnTabArgs",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSpawnTabArgs"
  },
  {
    "label": "SCurveEditorPanel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SCurveEditorPanel"
  },
  {
    "label": "SDockTab",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SDockTab"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "UCurveBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UCurveBase"
  },
  {
    "label": "FCurveAssetEditor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCurveAssetEditor"
  },
  {
    "label": "FTabManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTabManager"
  },
  {
    "label": "IToolkitHost",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IToolkitHost"
  },
  {
    "label": "IDetailsView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDetailsView"
  },
  {
    "label": "FCurveAssetEditor()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / UnrealString . h \" # include \" ICurveAssetEditor . h \" # include \" Internationalization / Text . h \" # include \" Math / Color . h \" # include \" Templates / SharedPointer . h \" # include \" Toolkits / IToolkit . h \" # include \" Types / SlateEnums . h \" # include \" UObject / NameTypes . h \" class FCurveEditor ; class FExtender ; class FSpawnTabArgs ; class SCurveEditorPanel ; class SDockTab ; class SWidget ; class UCurveBase ; class FCurveAssetEditor : public ICurveAssetEditor { public :)",
    "insertText": "FCurveAssetEditor()"
  },
  {
    "label": "RegisterTabSpawners()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "RegisterTabSpawners(const TSharedRef<class FTabManager>& TabManager)"
  },
  {
    "label": "UnregisterTabSpawners()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterTabSpawners(const TSharedRef<class FTabManager>& TabManager)"
  },
  {
    "label": "InitCurveAssetEditor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitCurveAssetEditor(const EToolkitMode::Type Mode, const TSharedPtr< class IToolkitHost >& InitToolkitHost, UCurveBase* CurveToEdit)"
  },
  {
    "label": "GetToolkitFName()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetToolkitFName()"
  },
  {
    "label": "GetBaseToolkitName()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetBaseToolkitName()"
  },
  {
    "label": "GetWorldCentricTabPrefix()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetWorldCentricTabPrefix()"
  },
  {
    "label": "GetWorldCentricTabColorScale()",
    "kind": "Method",
    "detail": "Function (FLinearColor)",
    "insertText": "GetWorldCentricTabColorScale()"
  },
  {
    "label": "GetToolbarExtender()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FExtender>)",
    "insertText": "GetToolbarExtender()"
  },
  {
    "label": "MakeCurveEditorCurveOptionsMenu()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "MakeCurveEditorCurveOptionsMenu()"
  },
  {
    "label": "SpawnTab_CurveAsset()",
    "kind": "Method",
    "detail": "Function (private : TSharedRef<SDockTab>)",
    "insertText": "SpawnTab_CurveAsset(const FSpawnTabArgs& Args)"
  },
  {
    "label": "SpawnTab_ColorCurveEditor()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SDockTab>)",
    "insertText": "SpawnTab_ColorCurveEditor(const FSpawnTabArgs& Args)"
  },
  {
    "label": "GetSnapLabelOrientation()",
    "kind": "Method",
    "detail": "Function (EOrientation)",
    "insertText": "GetSnapLabelOrientation()"
  },
  {
    "label": "GetColorGradientViewMin()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetColorGradientViewMin()"
  },
  {
    "label": "GetColorGradientViewMax()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetColorGradientViewMax()"
  }
]