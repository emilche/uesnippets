[
  {
    "label": "FOrientedEdge",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FOrientedEdge"
  },
  {
    "label": "FTopologicalEdge",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTopologicalEdge"
  },
  {
    "label": "FTopologicalFace",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTopologicalFace"
  },
  {
    "label": "FTopologicalLoop",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTopologicalLoop"
  },
  {
    "label": "IsPlanar()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" namespace UE::CADKernel { class FOrientedEdge ; class FTopologicalEdge ; class FTopologicalFace ; class FTopologicalLoop ; namespace TopologicalFaceUtilities { bool)",
    "insertText": "IsPlanar(const UE::CADKernel::FTopologicalFace& Face)"
  },
  {
    "label": "Get2DPolyline()",
    "kind": "Method",
    "detail": "Function (TArray<FVector2d>)",
    "insertText": "Get2DPolyline(const UE::CADKernel::FTopologicalEdge& Edge)"
  },
  {
    "label": "Get2DPolyline()",
    "kind": "Method",
    "detail": "Function (TArray<FVector2d>)",
    "insertText": "Get2DPolyline(const UE::CADKernel::FOrientedEdge& Edge)"
  },
  {
    "label": "Get2DPolyline()",
    "kind": "Method",
    "detail": "Function (TArray<FVector2d>)",
    "insertText": "Get2DPolyline(const UE::CADKernel::FTopologicalLoop& Loop)"
  },
  {
    "label": "Get3DPolyline()",
    "kind": "Method",
    "detail": "Function (TArray<FVector>)",
    "insertText": "Get3DPolyline(const UE::CADKernel::FTopologicalEdge& Edge)"
  },
  {
    "label": "Get3DPolyline()",
    "kind": "Method",
    "detail": "Function (TArray<FVector>)",
    "insertText": "Get3DPolyline(const UE::CADKernel::FOrientedEdge& Edge)"
  },
  {
    "label": "Get3DPolyline()",
    "kind": "Method",
    "detail": "Function (TArray<FVector>)",
    "insertText": "Get3DPolyline(const UE::CADKernel::FTopologicalLoop& Loop)"
  }
]