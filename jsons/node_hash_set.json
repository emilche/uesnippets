[
  {
    "label": "NodeHashSetPolicy",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "NodeHashSetPolicy"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "Hash",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Hash"
  },
  {
    "label": "Eq",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Eq"
  },
  {
    "label": "Alloc",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Alloc"
  },
  {
    "label": "node_hash_set",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "node_hash_set"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "NodeHashSetPolicy",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "NodeHashSetPolicy"
  },
  {
    "label": "Allocator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Allocator"
  },
  {
    "label": "Allocator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Allocator"
  },
  {
    "label": "F",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "F"
  },
  {
    "label": "Key",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Key"
  },
  {
    "label": "Hash",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Hash"
  },
  {
    "label": "KeyEqual",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "KeyEqual"
  },
  {
    "label": "Allocator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Allocator"
  },
  {
    "label": "IsUnorderedContainer",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IsUnorderedContainer"
  },
  {
    "label": "set3()",
    "kind": "Method",
    "detail": "Function (absl::node_hash_set<std::string>)",
    "insertText": "set3(set2)"
  },
  {
    "label": "value_alloc()",
    "kind": "Method",
    "detail": "Function (ValueAlloc)",
    "insertText": "value_alloc(*alloc)"
  },
  {
    "label": "value_alloc()",
    "kind": "Method",
    "detail": "Function (ValueAlloc)",
    "insertText": "value_alloc(*alloc)"
  },
  {
    "label": "sizeof()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "sizeof(T)"
  }
]