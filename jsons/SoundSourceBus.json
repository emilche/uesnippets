[
  {
    "label": "USoundSourceBus",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USoundSourceBus"
  },
  {
    "label": "USoundWaveProcedural",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USoundWaveProcedural"
  },
  {
    "label": "FAudioDevice",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAudioDevice"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "UENUM()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / Object . h \" # include \" Sound / SoundWaveProcedural . h \" # include \" Sound / SoundSourceBusSend . h \" # include \" Sound / AudioBus . h \" # include \" SoundSourceBus . generated . h \" class USoundSourceBus ; class USoundWaveProcedural ; class FAudioDevice ;)",
    "insertText": "UENUM(BlueprintType)"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (Mono,Stereo,} ;)",
    "insertText": "UCLASS(hidecategories= (Compression, SoundWave, Streaming, Subtitles, Analysis, Format, Loading, Info, ImportSettings), ClassGroup = Sound, meta = (BlueprintSpawnableComponent), MinimalAPI)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() public: UPROPERTY(EditAnywhere, Category = BusProperties)"
  },
  {
    "label": "PostLoad()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostLoad()"
  },
  {
    "label": "CanVisualizeAsset()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR bool)",
    "insertText": "CanVisualizeAsset()"
  },
  {
    "label": "BeginCacheForCookedPlatformData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginCacheForCookedPlatformData(const ITargetPlatform* TargetPlatform)"
  },
  {
    "label": "IsCachedCookedPlatformDataLoaded()",
    "kind": "Method",
    "detail": "Function (} ; bool)",
    "insertText": "IsCachedCookedPlatformDataLoaded(const ITargetPlatform* TargetPlatform)"
  },
  {
    "label": "CachePlatformData()",
    "kind": "Method",
    "detail": "Function (} ; # endif # if WITH_EDITORONLY_DATA void)",
    "insertText": "CachePlatformData(bool bAsyncCache = false)"
  },
  {
    "label": "BeginCachePlatformData()",
    "kind": "Method",
    "detail": "Function (} ; void)",
    "insertText": "BeginCachePlatformData()"
  },
  {
    "label": "FinishCachePlatformData()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "FinishCachePlatformData()"
  },
  {
    "label": "SerializeCookedPlatformData()",
    "kind": "Method",
    "detail": "Function (} ; # endif void)",
    "insertText": "SerializeCookedPlatformData(FArchive& Ar)"
  },
  {
    "label": "IsSeekable()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsSeekable()"
  },
  {
    "label": "GetDuration()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetDuration()"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "Init()"
  },
  {
    "label": "SerializeCuePoints()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SerializeCuePoints(FArchive& Ar, const bool bIsLoadingFromCookedArchive)"
  }
]