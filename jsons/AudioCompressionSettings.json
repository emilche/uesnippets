[
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FAudioStreamCachingSettings",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAudioStreamCachingSettings"
  },
  {
    "label": "FPlatformAudioCookOverrides",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPlatformAudioCookOverrides"
  },
  {
    "label": "FPlatformRuntimeAudioCompressionOverrides",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPlatformRuntimeAudioCompressionOverrides"
  },
  {
    "label": "UENUM()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Map . h \" # include \" Containers / UnrealString . h \" # include \" CoreMinimal . h \" # include \" CoreTypes . h \" # include \" Math / UnrealMathSSE . h \" # include \" Templates / Tuple . h \" # include \" UObject / ObjectMacros . h \" # include \" AudioCompressionSettings . generated . h \")",
    "insertText": "UENUM()"
  },
  {
    "label": "FAudioStreamCachingSettings()",
    "kind": "Method",
    "detail": "Function (Max,High,Medium,Low,Min } ; struct FAudioStreamCachingSettings { int32 DefaultCacheSize = 6 4* 1 0 2 4 ; int32 CacheSizeKB ; bool bForceLegacyStreamChunking ; int32 ZerothChunkSizeForLegacyStreamChunkingKB ; int32 MaxChunkSizeOverrideKB ;)",
    "insertText": "FAudioStreamCachingSettings() : CacheSizeKB(DefaultCacheSize) , bForceLegacyStreamChunking(false) , ZerothChunkSizeForLegacyStreamChunkingKB(256) , MaxChunkSizeOverrideKB(INDEX_NONE)"
  },
  {
    "label": "GetStreamCachingVersion()",
    "kind": "Method",
    "detail": "Function (} } ; struct FPlatformAudioCookOverrides { int32)",
    "insertText": "GetStreamCachingVersion()"
  },
  {
    "label": "FPlatformAudioCookOverrides()",
    "kind": "Method",
    "detail": "Function (bool bResampleForDevice ; TMap<ESoundwaveSampleRateSettings,float> PlatformSampleRates ; float CompressionQualityModifier ; int32 SoundCueCookQualityIndex = INDEX_NONE ; float AutoStreamingThreshold ; bool bInlineFirstAudioChunk = false ; float LengthOfFirstAudioChunkInSecs = 0 . f ; FAudioStreamCachingSettings StreamCachingSettings ;)",
    "insertText": "FPlatformAudioCookOverrides() : bResampleForDevice(false) , CompressionQualityModifier(1.0f) , AutoStreamingThreshold(0.0f) , bInlineFirstAudioChunk(false) , LengthOfFirstAudioChunkInSecs(0.f)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (PlatformSampleRates .)",
    "insertText": "Add(ESoundwaveSampleRateSettings::Max, 48000)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (PlatformSampleRates .)",
    "insertText": "Add(ESoundwaveSampleRateSettings::High, 32000)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (PlatformSampleRates .)",
    "insertText": "Add(ESoundwaveSampleRateSettings::Medium, 24000)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (PlatformSampleRates .)",
    "insertText": "Add(ESoundwaveSampleRateSettings::Low, 12000)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (PlatformSampleRates .)",
    "insertText": "Add(ESoundwaveSampleRateSettings::Min, 8000)"
  },
  {
    "label": "GetHashSuffix()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "GetHashSuffix(const FPlatformAudioCookOverrides* InOverrides, FString& OutSuffix)"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "USTRUCT()"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() UPROPERTY(EditAnywhere, Category = \"DecompressOnLoad\")"
  },
  {
    "label": "FPlatformRuntimeAudioCompressionOverrides()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FPlatformRuntimeAudioCompressionOverrides()"
  },
  {
    "label": "GetDefaultCompressionOverrides()",
    "kind": "Method",
    "detail": "Function (FPlatformRuntimeAudioCompressionOverrides*)",
    "insertText": "GetDefaultCompressionOverrides()"
  }
]