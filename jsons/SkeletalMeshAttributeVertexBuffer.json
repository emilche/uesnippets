[
  {
    "label": "FSkeletalMeshAttributeVertexBuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSkeletalMeshAttributeVertexBuffer"
  },
  {
    "label": "FSkeletalMeshAttributeVertexBuffer()",
    "kind": "Method",
    "detail": "Function (\ufeff # pragma once # include \" GPUSkinVertexFactory . h \" # include \" SkeletalMeshVertexBuffer . h \" class FSkeletalMeshAttributeVertexBuffer : public FRenderResource { public : ~)",
    "insertText": "FSkeletalMeshAttributeVertexBuffer()"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Init(const EPixelFormat InPixelFormat, const int32 InNumVertices, const int32 InComponentCount, TConstArrayView<float> InValues)"
  },
  {
    "label": "GetSRV()",
    "kind": "Method",
    "detail": "Function (FRHIShaderResourceView*)",
    "insertText": "GetSRV()"
  },
  {
    "label": "CleanUp()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CleanUp()"
  },
  {
    "label": "InitRHI()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitRHI(FRHICommandListBase& RHICmdList)"
  },
  {
    "label": "ReleaseRHI()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseRHI()"
  },
  {
    "label": "GetFriendlyName()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetFriendlyName()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} FArchive&)",
    "insertText": "operator(FArchive& Ar, FSkeletalMeshAttributeVertexBuffer& Data)"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (Data .)",
    "insertText": "Serialize(Ar)"
  },
  {
    "label": "Allocate()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "Allocate()"
  },
  {
    "label": "SetData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetData(TConstArrayView<float> InValues)"
  }
]