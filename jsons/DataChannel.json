[
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FNetControlMessage",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNetControlMessage"
  },
  {
    "label": "FNetControlMessageInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNetControlMessageInfo"
  },
  {
    "label": "FNetControlMessage",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNetControlMessage"
  },
  {
    "label": "FNetControlMessage",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNetControlMessage"
  },
  {
    "label": "Bunch()",
    "kind": "Method",
    "detail": "Function (FControlChannelOutBunch)",
    "insertText": "Bunch(Conn->Channels[0], false)"
  },
  {
    "label": "DEFINE_CONTROL_CHANNEL_MESSAGE()",
    "kind": "Method",
    "detail": "Function (definitions)",
    "insertText": "DEFINE_CONTROL_CHANNEL_MESSAGE(Hello, 0, uint8, uint32, FString, uint16)"
  },
  {
    "label": "DEFINE_CONTROL_CHANNEL_MESSAGE()",
    "kind": "Method",
    "detail": "Function (message)",
    "insertText": "DEFINE_CONTROL_CHANNEL_MESSAGE(Welcome, 1, FString, FString, FString)"
  },
  {
    "label": "DEFINE_CONTROL_CHANNEL_MESSAGE()",
    "kind": "Method",
    "detail": "Function (level)",
    "insertText": "DEFINE_CONTROL_CHANNEL_MESSAGE(Upgrade, 2, uint32, uint16)"
  },
  {
    "label": "DEFINE_CONTROL_CHANNEL_MESSAGE()",
    "kind": "Method",
    "detail": "Function (incompatible)",
    "insertText": "DEFINE_CONTROL_CHANNEL_MESSAGE(Challenge, 3, FString)"
  },
  {
    "label": "DEFINE_CONTROL_CHANNEL_MESSAGE()",
    "kind": "Method",
    "detail": "Function (integrity)",
    "insertText": "DEFINE_CONTROL_CHANNEL_MESSAGE(Netspeed, 4, int32)"
  },
  {
    "label": "DEFINE_CONTROL_CHANNEL_MESSAGE()",
    "kind": "Method",
    "detail": "Function (rate)",
    "insertText": "DEFINE_CONTROL_CHANNEL_MESSAGE(Login, 5, FString, FString, FUniqueNetIdRepl, FString)"
  },
  {
    "label": "DEFINE_CONTROL_CHANNEL_MESSAGE()",
    "kind": "Method",
    "detail": "Function (game)",
    "insertText": "DEFINE_CONTROL_CHANNEL_MESSAGE(Failure, 6, FString)"
  },
  {
    "label": "DEFINE_CONTROL_CHANNEL_MESSAGE()",
    "kind": "Method",
    "detail": "Function (failure)",
    "insertText": "DEFINE_CONTROL_CHANNEL_MESSAGE(Join, 9)"
  },
  {
    "label": "DEFINE_CONTROL_CHANNEL_MESSAGE()",
    "kind": "Method",
    "detail": "Function (request)",
    "insertText": "DEFINE_CONTROL_CHANNEL_MESSAGE(Skip, 12, FGuid)"
  },
  {
    "label": "DEFINE_CONTROL_CHANNEL_MESSAGE()",
    "kind": "Method",
    "detail": "Function (package)",
    "insertText": "DEFINE_CONTROL_CHANNEL_MESSAGE(Abort, 13, FGuid)"
  },
  {
    "label": "DEFINE_CONTROL_CHANNEL_MESSAGE()",
    "kind": "Method",
    "detail": "Function (request)",
    "insertText": "DEFINE_CONTROL_CHANNEL_MESSAGE(PCSwap, 15, int32)"
  },
  {
    "label": "DEFINE_CONTROL_CHANNEL_MESSAGE()",
    "kind": "Method",
    "detail": "Function (Actor)",
    "insertText": "DEFINE_CONTROL_CHANNEL_MESSAGE(ActorChannelFailure, 16, int32)"
  },
  {
    "label": "DEFINE_CONTROL_CHANNEL_MESSAGE()",
    "kind": "Method",
    "detail": "Function (server)",
    "insertText": "DEFINE_CONTROL_CHANNEL_MESSAGE(NetGUIDAssign, 18, FNetworkGUID, FString)"
  },
  {
    "label": "DEFINE_CONTROL_CHANNEL_MESSAGE()",
    "kind": "Method",
    "detail": "Function (disconnected)",
    "insertText": "DEFINE_CONTROL_CHANNEL_MESSAGE(GameSpecific, 20, uint8, FString)"
  },
  {
    "label": "DEFINE_CONTROL_CHANNEL_MESSAGE()",
    "kind": "Method",
    "detail": "Function (processing)",
    "insertText": "DEFINE_CONTROL_CHANNEL_MESSAGE(EncryptionAck, 21)"
  },
  {
    "label": "DEFINE_CONTROL_CHANNEL_MESSAGE()",
    "kind": "Method",
    "detail": "Function (logging)",
    "insertText": "DEFINE_CONTROL_CHANNEL_MESSAGE(NetPing, 24, ENetPingControlMessage /* MessageType */, FString /* MessageStr */)"
  },
  {
    "label": "DEFINE_CONTROL_CHANNEL_MESSAGE()",
    "kind": "Method",
    "detail": "Function (complete)",
    "insertText": "DEFINE_CONTROL_CHANNEL_MESSAGE(BeaconWelcome, 25)"
  },
  {
    "label": "DEFINE_CONTROL_CHANNEL_MESSAGE()",
    "kind": "Method",
    "detail": "Function (sync)",
    "insertText": "DEFINE_CONTROL_CHANNEL_MESSAGE(BeaconAssignGUID, 27, FNetworkGUID)"
  },
  {
    "label": "DEFINE_CONTROL_CHANNEL_MESSAGE()",
    "kind": "Method",
    "detail": "Function (NetGUIDAck)",
    "insertText": "DEFINE_CONTROL_CHANNEL_MESSAGE(BeaconNetGUIDAck, 28, FString)"
  },
  {
    "label": "DEFINE_CONTROL_CHANNEL_MESSAGE()",
    "kind": "Method",
    "detail": "Function (successfully)",
    "insertText": "DEFINE_CONTROL_CHANNEL_MESSAGE(IrisProtocolMismatch, 29, uint64)"
  },
  {
    "label": "DEFINE_CONTROL_CHANNEL_MESSAGE()",
    "kind": "Method",
    "detail": "Function (server)",
    "insertText": "DEFINE_CONTROL_CHANNEL_MESSAGE(IrisNetRefHandleError, 30, uint32, uint64)"
  }
]