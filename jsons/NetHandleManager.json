[
  {
    "label": "FNetCoreModule",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNetCoreModule"
  },
  {
    "label": "UReplicationBridge",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UReplicationBridge"
  },
  {
    "label": "FNetHandleDestroyer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNetHandleDestroyer"
  },
  {
    "label": "FNetHandleManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNetHandleManager"
  },
  {
    "label": "FPimpl",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPimpl"
  },
  {
    "label": "DestroyNetHandle()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Net / Core / NetHandle / NetHandle . h \" class FNetCoreModule ; class UReplicationBridge ; namespace UE::Net { class FNetHandleDestroyer { private : void)",
    "insertText": "DestroyNetHandle(FNetHandle Handle)"
  },
  {
    "label": "GetNetHandle()",
    "kind": "Method",
    "detail": "Function (private : UReplicationBridge ; } ; class FNetHandleManager { public : FNetHandle)",
    "insertText": "GetNetHandle(const UObject*)"
  },
  {
    "label": "GetOrCreateNetHandle()",
    "kind": "Method",
    "detail": "Function (FNetHandle)",
    "insertText": "GetOrCreateNetHandle(const UObject*)"
  },
  {
    "label": "MakeNetHandleFromId()",
    "kind": "Method",
    "detail": "Function (FNetHandle)",
    "insertText": "MakeNetHandleFromId(uint32 Id)"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (protected : FNetCoreModule ; void)",
    "insertText": "Init()"
  },
  {
    "label": "Deinit()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Deinit()"
  },
  {
    "label": "DestroyNetHandle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyNetHandle(Handle)"
  }
]