[
  {
    "label": "FPackageData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPackageData"
  },
  {
    "label": "FWorkerId",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FWorkerId"
  },
  {
    "label": "LoadBalanceStriped()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" Containers / ArrayView . h \" # include \" Containers / Map . h \" namespace UE::Cook { struct FPackageData ; } namespace UE::Cook { struct FWorkerId ; } namespace UE::Cook { void)",
    "insertText": "LoadBalanceStriped(TConstArrayView<FWorkerId> Workers, TArrayView<FPackageData*> Requests, TMap<FPackageData*, TArray<FPackageData*>>&& RequestGraph, TArray<FWorkerId>& OutAssignments, bool bInLogResults)"
  },
  {
    "label": "LoadBalanceCookBurden()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LoadBalanceCookBurden(TConstArrayView<FWorkerId> Workers, TArrayView<FPackageData*> Requests, TMap<FPackageData*, TArray<FPackageData*>>&& RequestGraph, TArray<FWorkerId>& OutAssignments, bool bInLogResults)"
  }
]