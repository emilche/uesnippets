[
  {
    "label": "FBlueprintEditor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBlueprintEditor"
  },
  {
    "label": "SFunctionEditor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SFunctionEditor"
  },
  {
    "label": "SScrollBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SScrollBox"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "UEdGraph",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEdGraph"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "FSlateBrush",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSlateBrush"
  },
  {
    "label": "SGraphTitleBar",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SGraphTitleBar"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" BlueprintUtilities . h \" # include \" Internationalization / Text . h \" # include \" Layout / Visibility . h \" # include \" Templates / SharedPointer . h \" # include \" Templates / UnrealTemplate . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Widgets / Navigation / SBreadcrumbTrail . h \" # include \" Widgets / SCompoundWidget . h \" class FBlueprintEditor ; class SFunctionEditor ; class SScrollBox ; class SWidget ; class UEdGraph ; class UObject ; struct FSlateBrush ; class SGraphTitleBar : public SCompoundWidget { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SGraphTitleBar ) : _EdGraphObj(nullptr) , _Kismet2()"
  },
  {
    "label": "SLATE_ARGUMENT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_ARGUMENT(UEdGraph*, EdGraphObj ) SLATE_ARGUMENT( TWeakPtr<FBlueprintEditor>, Kismet2 ) SLATE_EVENT( FEdGraphEvent, OnDifferentGraphCrumbClicked ) SLATE_ARGUMENT( TSharedPtr<SWidget>, HistoryNavigationWidget ) SLATE_END_ARGS() ~SGraphTitleBar()"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct(const FArguments& InArgs)"
  },
  {
    "label": "Refresh()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Refresh()"
  },
  {
    "label": "GetTypeGlyph()",
    "kind": "Method",
    "detail": "Function (protected : TWeakPtr<FBlueprintEditor> Kismet2Ptr ; UEdGraph* EdGraphObj ; TWeakPtr<SFunctionEditor> FuncEditorPtr ; TSharedPtr<SScrollBox> BreadcrumbTrailScrollBox ; TSharedPtr<SBreadcrumbTrail<UEdGraph*>> BreadcrumbTrail ; FEdGraphEvent OnDifferentGraphCrumbClicked ; bool bShowBlueprintTitle ; FText BlueprintTitle ; protected : const FSlateBrush*)",
    "insertText": "GetTypeGlyph()"
  },
  {
    "label": "GetTitleExtra()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetTitleExtra()"
  },
  {
    "label": "IsGraphBlueprintNameVisible()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "IsGraphBlueprintNameVisible()"
  },
  {
    "label": "OnBreadcrumbClicked()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnBreadcrumbClicked(UEdGraph* const & Item)"
  },
  {
    "label": "RebuildBreadcrumbTrail()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RebuildBreadcrumbTrail()"
  },
  {
    "label": "GetTitleForOneCrumb()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetTitleForOneCrumb(const UEdGraph* Graph)"
  },
  {
    "label": "GetOuterGraph()",
    "kind": "Method",
    "detail": "Function (UEdGraph*)",
    "insertText": "GetOuterGraph(UObject* Obj)"
  },
  {
    "label": "GetBlueprintTitle()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetBlueprintTitle()"
  },
  {
    "label": "CreateBookmarkSelectionWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "CreateBookmarkSelectionWidget()"
  }
]