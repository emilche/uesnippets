[
  {
    "label": "FAdvancedDropdownNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAdvancedDropdownNode"
  },
  {
    "label": "FAdvancedDropdownNode()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Misc / Attribute . h \" # include \" Input / Reply . h \" # include \" IPropertyUtilities . h \" # include \" DetailTreeNode . h \" # include \" Widgets / Views / STableViewBase . h \" # include \" Widgets / Views / STableRow . h \" # include \" DetailCategoryBuilderImpl . h \" # include \" PropertyCustomizationHelpers . h \" class FAdvancedDropdownNode : public FDetailTreeNode,public TSharedFromThis<FAdvancedDropdownNode> { public :)",
    "insertText": "FAdvancedDropdownNode(TSharedRef<FDetailCategoryImpl> InParentCategory, const TAttribute<bool>& InExpanded, const TAttribute<bool>& InEnabled, TAttribute<bool> InVisible) : ParentCategory(InParentCategory.Get()) , IsEnabled(InEnabled) , IsExpanded(InExpanded) , IsVisible(InVisible)"
  },
  {
    "label": "SetParentNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetParentNode(InParentCategory)"
  },
  {
    "label": "GetNodeDetailsView()",
    "kind": "Method",
    "detail": "Function (} private : IDetailsView*)",
    "insertText": "GetNodeDetailsView()"
  },
  {
    "label": "GetDetailsView()",
    "kind": "Method",
    "detail": "Function (} IDetailsViewPrivate*)",
    "insertText": "GetDetailsView()"
  },
  {
    "label": "GenerateWidgetForTableView()",
    "kind": "Method",
    "detail": "Function (} TSharedRef<ITableRow>)",
    "insertText": "GenerateWidgetForTableView(const TSharedRef<STableViewBase>& OwnerTable, bool bAllowFavoriteSystem)"
  },
  {
    "label": "GenerateStandaloneWidget()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GenerateStandaloneWidget(FDetailWidgetRow& OutRow)"
  },
  {
    "label": "GetChildren()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetChildren(FDetailNodeList& OutChildren, const bool& bInIgnoreVisibility)"
  },
  {
    "label": "OnItemExpansionChanged()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "OnItemExpansionChanged(bool bIsExpanded, bool bShouldSaveState)"
  },
  {
    "label": "ShouldBeExpanded()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "ShouldBeExpanded()"
  },
  {
    "label": "FilterNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FilterNode(const FDetailFilter& InFilter)"
  },
  {
    "label": "Tick()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Tick(float DeltaTime)"
  },
  {
    "label": "ShouldShowOnlyChildren()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "ShouldShowOnlyChildren()"
  }
]