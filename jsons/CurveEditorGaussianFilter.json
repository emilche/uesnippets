[
  {
    "label": "FCurveEditor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCurveEditor"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "FCurveModelID",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCurveModelID"
  },
  {
    "label": "FKeyHandleSet",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FKeyHandleSet"
  },
  {
    "label": "FGaussianParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGaussianParams"
  },
  {
    "label": "UCurveEditorGaussianFilter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UCurveEditorGaussianFilter"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Map . h \" # include \" Filters / CurveEditorFilterBase . h \" # include \" Misc / FrameRate . h \" # include \" Templates / SharedPointer . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / UObjectGlobals . h \" # include \" CurveEditorGaussianFilter . generated . h \" class FCurveEditor ; class UObject ; struct FCurveModelID ; struct FKeyHandleSet ;)",
    "insertText": "USTRUCT(BlueprintType)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() UPROPERTY(EditAnywhere, BlueprintReadWrite, Category = \"Settings\", meta = (ClampMin = \"3\", ClampMax = \"9999\", UIMin = \"3\", UIMax = \"9999\"))"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (KernelWidth = 5 ; } } ;)",
    "insertText": "UCLASS(DisplayName = \"Gaussian\", CollapseCategories)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: UCurveEditorGaussianFilter()"
  },
  {
    "label": "Gaussian()",
    "kind": "Method",
    "detail": "Function (} ; void)",
    "insertText": "Gaussian(FCurveModel* Curve, const FGaussianParams& InParams, const TOptional<FKeyHandleSet>& KeyHandleSet, FKeyHandleSet& OutHandleSet)"
  },
  {
    "label": "ApplyFilter_Impl()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "ApplyFilter_Impl(TSharedRef<FCurveEditor> InCurveEditor, const TMap<FCurveModelID, FKeyHandleSet>& InKeysToOperateOn, TMap<FCurveModelID, FKeyHandleSet>& OutKeysToSelect)"
  },
  {
    "label": "CalculateKernel()",
    "kind": "Method",
    "detail": "Function (TArray<double>)",
    "insertText": "CalculateKernel(int32 KernelWidth)"
  },
  {
    "label": "ApplyKernel()",
    "kind": "Method",
    "detail": "Function (double)",
    "insertText": "ApplyKernel(int32 Index, const TArray<double> Kernel, const TArray<FKeyPosition>& KeyPositions)"
  }
]