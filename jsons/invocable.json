[
  {
    "label": "_Fn",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_Fn"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# ifndef _LIBCPP___CONCEPTS_INVOCABLE_H # define _LIBCPP___CONCEPTS_INVOCABLE_H # include<__config> # include<__functional / invoke . h> # include<__utility / forward . h> # include<type_traits> # if !)",
    "insertText": "defined(_LIBCPP_HAS_NO_PRAGMA_SYSTEM_HEADER) # pragma GCC system_header #endif _LIBCPP_BEGIN_NAMESPACE_STD #if _LIBCPP_STD_VER > 17 template<class _Fn, class... _Args> concept invocable = requires(_Fn&& __fn, _Args&&... __args)"
  },
  {
    "label": "invoke()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "invoke(_VSTD::forward<_Fn>(__fn), _VSTD::forward<_Args>(__args)...)"
  }
]