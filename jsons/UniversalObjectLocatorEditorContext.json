[
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "IPropertyHandle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPropertyHandle"
  },
  {
    "label": "UNIVERSALOBJECTLOCATOREDITOR_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UNIVERSALOBJECTLOCATOREDITOR_API"
  },
  {
    "label": "ILocatorFragmentEditorContext()",
    "kind": "Method",
    "detail": "Function (\ufeff # pragma once # include \" Templates / SharedPointer . h \" class UObject ; class IPropertyHandle ; namespace UE::UniversalObjectLocator { class ILocatorFragmentEditorContext : public TSharedFromThis<ILocatorFragmentEditorContext> { public : ~)",
    "insertText": "ILocatorFragmentEditorContext()"
  },
  {
    "label": "GetContext()",
    "kind": "Method",
    "detail": "Function (UObject*)",
    "insertText": "GetContext(const IPropertyHandle& InPropertyHandle)"
  },
  {
    "label": "IsFragmentAllowed()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsFragmentAllowed(FName InFragmentName)"
  }
]