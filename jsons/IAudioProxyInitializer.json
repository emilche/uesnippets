[
  {
    "label": "IProxyData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IProxyData"
  },
  {
    "label": "TProxyData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TProxyData"
  },
  {
    "label": "FProxyDataInitParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FProxyDataInitParams"
  },
  {
    "label": "IAudioProxyDataFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IAudioProxyDataFactory"
  },
  {
    "label": "IMPL_AUDIOPROXY_CLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Misc / AssertionMacros . h \" # include \" Misc / CoreMiscDefines . h \" # include \" Templates / Casts . h \" # include \" Templates / SharedPointer . h \" # include \" Templates / UniquePtr . h \" # include \" UObject / NameTypes . h \" # include<type_traits> # define)",
    "insertText": "IMPL_AUDIOPROXY_CLASS(FClassName) \\ static FName GetAudioProxyTypeName()"
  },
  {
    "label": "IProxyData()",
    "kind": "Method",
    "detail": "Function (class IProxyData { private : FName ProxyTypeName ; public : ~)",
    "insertText": "IProxyData()"
  },
  {
    "label": "CheckTypeCast()",
    "kind": "Method",
    "detail": "Function (template<ProxyType> bool)",
    "insertText": "CheckTypeCast()"
  },
  {
    "label": "GetAudioProxyTypeName()",
    "kind": "Method",
    "detail": "Function (const FName DestinationTypeName =)",
    "insertText": "GetAudioProxyTypeName()"
  },
  {
    "label": "GetProxyTypeName()",
    "kind": "Method",
    "detail": "Function (} FName)",
    "insertText": "GetProxyTypeName()"
  },
  {
    "label": "checkNoEntry()",
    "kind": "Method",
    "detail": "Function (} else {)",
    "insertText": "checkNoEntry()"
  },
  {
    "label": "GetAs()",
    "kind": "Method",
    "detail": "Function (} } template<ProxyType> const ProxyType&)",
    "insertText": "GetAs()"
  },
  {
    "label": "IProxyData()",
    "kind": "Method",
    "detail": "Function (} })",
    "insertText": "IProxyData(FName InProxyTypeName) : ProxyTypeName(InProxyTypeName)"
  },
  {
    "label": "CreateProxyData()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<Audio::IProxyData>)",
    "insertText": "CreateProxyData(const Audio::FProxyDataInitParams& InitParams)"
  },
  {
    "label": "CastToProxyDataFactory()",
    "kind": "Method",
    "detail": "Function (} ; namespace Audio { template<UClassToUse> IAudioProxyDataFactory*)",
    "insertText": "CastToProxyDataFactory(UObject* InObject)"
  },
  {
    "label": "UClassToUse()",
    "kind": "Method",
    "detail": "Function (UClassToUse* DowncastObject = Cast<)",
    "insertText": "UClassToUse(InObject)"
  }
]