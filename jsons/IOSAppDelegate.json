[
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "APPLICATIONCORE_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "APPLICATIONCORE_API"
  },
  {
    "label": "FFilterDelegateAndHandle",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFilterDelegateAndHandle"
  },
  {
    "label": "IOSAppDelegate",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IOSAppDelegate"
  },
  {
    "label": "FIOSView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FIOSView"
  },
  {
    "label": "IOSViewController",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IOSViewController"
  },
  {
    "label": "SlateOpenGLESViewController",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SlateOpenGLESViewController"
  },
  {
    "label": "FIOSApplication",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FIOSApplication"
  },
  {
    "label": "LexFromString()",
    "kind": "Method",
    "detail": "Function (# pragma once # import<UIKit / UIKit . h> # import<GameKit / GKGameCenterViewController . h> # ifndef SWIFT_IMPORT # import<AVFoundation / AVAudioSession . h> # include \" Delegates / Delegate . h \" # include \" Logging / LogMacros . h \" # include \" Containers / UnrealString . h \" # endif # if PLATFORM_VISIONOS # import<CompositorServices / CompositorServices . h> # else # import<UserNotifications / UserNotifications . h> # endif # define USE_MUTE_SWITCH_DETECTION 0 # ifndef SWIFT_IMPORT enum class EAudioFeature : uint8 { Playback,Record,DoNotMixWithOthers,VoiceChat,UseReceiver,DisableBluetoothSpeaker,BluetoothMicrophone,BackgroundAudio,NumFeatures,} ; void)",
    "insertText": "LexFromString(EAudioFeature& OutFeature, const TCHAR* String)"
  },
  {
    "label": "LexToString()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "LexToString(EAudioFeature Feature)"
  },
  {
    "label": "DECLARE_DELEGATE_RetVal_OneParam()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DELEGATE_RetVal_OneParam(bool, FPushNotificationFilter, NSDictionary*)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_FourParams()",
    "kind": "Method",
    "detail": "Function (class FIOSCoreDelegates { public :)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_FourParams(FOnOpenURL, UIApplication*, NSURL*, NSString*, id)"
  },
  {
    "label": "AddPushNotificationFilter()",
    "kind": "Method",
    "detail": "Function (FOnOpenURL OnOpenURL ; FDelegateHandle)",
    "insertText": "AddPushNotificationFilter(const FPushNotificationFilter& FilterDel)"
  },
  {
    "label": "RemovePushNotificationFilter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemovePushNotificationFilter(FDelegateHandle Handle)"
  },
  {
    "label": "PassesPushNotificationFilters()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PassesPushNotificationFilters(NSDictionary* Payload)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_MULTICAST_DELEGATE(FOnWillResignActive)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE()",
    "kind": "Method",
    "detail": "Function (FOnWillResignActive OnWillResignActive ;)",
    "insertText": "DECLARE_MULTICAST_DELEGATE(FOnDidBecomeActive)"
  },
  {
    "label": "DECLARE_LOG_CATEGORY_EXTERN()",
    "kind": "Method",
    "detail": "Function (FOnWillResignActive OnDidBecomeActive ; private : struct FFilterDelegateAndHandle { FPushNotificationFilter Filter ; FDelegateHandle Handle ; } ; TArray<FFilterDelegateAndHandle> PushNotificationFilters ; } ;)",
    "insertText": "DECLARE_LOG_CATEGORY_EXTERN(LogIOSAudioSession, Log, All)"
  },
  {
    "label": "PlatformInit()",
    "kind": "Method",
    "detail": "Function (@ class IOSAppDelegate ; namespace FAppEntry { void)",
    "insertText": "PlatformInit()"
  },
  {
    "label": "PreInit()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PreInit(IOSAppDelegate* AppDelegate, UIApplication* Application)"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Init()"
  },
  {
    "label": "Tick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Tick()"
  },
  {
    "label": "SuspendTick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SuspendTick()"
  },
  {
    "label": "ResumeAudioContext()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResumeAudioContext()"
  },
  {
    "label": "ResetAudioContextResumeTime()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetAudioContextResumeTime()"
  },
  {
    "label": "Shutdown()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Shutdown()"
  },
  {
    "label": "Suspend()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Suspend(bool bIsInterrupt = false)"
  },
  {
    "label": "Resume()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Resume(bool bIsInterrupt = false)"
  },
  {
    "label": "RestartAudio()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RestartAudio()"
  },
  {
    "label": "IncrementAudioSuspendCounters()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "IncrementAudioSuspendCounters()"
  },
  {
    "label": "DecrementAudioSuspendCounters()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DecrementAudioSuspendCounters()"
  },
  {
    "label": "IsStartupMoviePlaying()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsStartupMoviePlaying()"
  },
  {
    "label": "property()",
    "kind": "Method",
    "detail": "Function (bool gAppLaunchedWithLocalNotification ; FString gLaunchLocalNotificationActivationEvent ; int32 gLaunchLocalNotificationFireDate ; } # endif @ class FIOSView ; @ class IOSViewController ; @ class SlateOpenGLESViewController ; # ifndef SWIFT_IMPORT # endif @ interface IOSAppDelegate : UIResponder<UIApplicationDelegate,# if ! UE_BUILD_SHIPPING UIGestureRecognizerDelegate,# endif GKGameCenterControllerDelegate,# if ! PLATFORM_VISIONOS UNUserNotificationCenterDelegate,# endif UITextFieldDelegate> { bool bForceExit ; } @)",
    "insertText": "property(strong, retain, nonatomic)"
  },
  {
    "label": "property()",
    "kind": "Method",
    "detail": "Function (# if PLATFORM_VISIONOS @)",
    "insertText": "property(strong)"
  },
  {
    "label": "property()",
    "kind": "Method",
    "detail": "Function (@)",
    "insertText": "property(retain)"
  },
  {
    "label": "property()",
    "kind": "Method",
    "detail": "Function (@ property class FIOSApplication* IOSApplication ; @)",
    "insertText": "property(readonly)"
  },
  {
    "label": "property()",
    "kind": "Method",
    "detail": "Function (@)",
    "insertText": "property(assign)"
  },
  {
    "label": "property()",
    "kind": "Method",
    "detail": "Function (# if WITH_ACCESSIBILITY @)",
    "insertText": "property(nonatomic, retain)"
  },
  {
    "label": "property()",
    "kind": "Method",
    "detail": "Function (@)",
    "insertText": "property(nonatomic, assign)"
  },
  {
    "label": "property()",
    "kind": "Method",
    "detail": "Function (@)",
    "insertText": "property(atomic)"
  },
  {
    "label": "SWIFT_IMPORT()",
    "kind": "Method",
    "detail": "Function (# ifndef)",
    "insertText": "SWIFT_IMPORT(bool)WaitAndRunOnGameThread:(TUniqueFunction<void()>)"
  },
  {
    "label": "endif()",
    "kind": "Method",
    "detail": "Function (#)",
    "insertText": "endif(void)"
  },
  {
    "label": "PLATFORM_VISIONOS()",
    "kind": "Method",
    "detail": "Function (# if ! PLATFORM_TVOS&& !)",
    "insertText": "PLATFORM_VISIONOS(EDeviceScreenOrientation) ConvertFromUIInterfaceOrientation:(UIInterfaceOrientation)"
  },
  {
    "label": "endif()",
    "kind": "Method",
    "detail": "Function (#)",
    "insertText": "endif(bool)"
  },
  {
    "label": "SWIFT_IMPORT()",
    "kind": "Method",
    "detail": "Function (# ifndef)",
    "insertText": "SWIFT_IMPORT(void)SetFeature:(EAudioFeature)Feature Active:(bool)"
  },
  {
    "label": "property()",
    "kind": "Method",
    "detail": "Function (@)",
    "insertText": "property(nonatomic, copy) void(^BackgroundSessionEventCompleteDelegate)()"
  },
  {
    "label": "interruptionListener()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "interruptionListener(void* ClientData, UInt32 Interruption)"
  },
  {
    "label": "InstallSignalHandlers()",
    "kind": "Method",
    "detail": "Function (@ end void)",
    "insertText": "InstallSignalHandlers()"
  }
]