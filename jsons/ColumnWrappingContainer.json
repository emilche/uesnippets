[
  {
    "label": "SBorder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SBorder"
  },
  {
    "label": "SUniformWrapPanel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SUniformWrapPanel"
  },
  {
    "label": "FColumnWrappingContainerArgs",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FColumnWrappingContainerArgs"
  },
  {
    "label": "FColumnWrappingContainer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FColumnWrappingContainer"
  },
  {
    "label": "FColumnWrappingContainerArgs()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" WidgetContainer . h \" class SBorder ; class SUniformWrapPanel ; class FColumnWrappingContainerArgs : public FWidgetContainerArgs { public :)",
    "insertText": "FColumnWrappingContainerArgs(float InCellHeight = TNumericLimits<float>::Min() , int32 InNumColumnsOverride = TNumericLimits<float>::Min() , FName InIdentifier = \"FColumnWrappingContainer\")"
  },
  {
    "label": "FColumnWrappingContainer()",
    "kind": "Method",
    "detail": "Function (int32 NumColumns ; float CellHeight ; } ; class FColumnWrappingContainer : public FWidgetContainer { public :)",
    "insertText": "FColumnWrappingContainer(FColumnWrappingContainerArgs&& Args)"
  },
  {
    "label": "FColumnWrappingContainer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FColumnWrappingContainer(const FColumnWrappingContainerArgs& Args = {})"
  },
  {
    "label": "SetNumColumns()",
    "kind": "Method",
    "detail": "Function (FColumnWrappingContainer&)",
    "insertText": "SetNumColumns(const int32& InNumColumns)"
  },
  {
    "label": "Empty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Empty()"
  },
  {
    "label": "CreateAndPositionWidgetAtIndex()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "CreateAndPositionWidgetAtIndex(int32 Index)"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "Initialize()"
  }
]