[
  {
    "label": "UBreakIterator",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "UBreakIterator"
  },
  {
    "label": "UBreakIteratorType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "UBreakIteratorType"
  },
  {
    "label": "UWordBreak",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "UWordBreak"
  },
  {
    "label": "ULineBreakTag",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ULineBreakTag"
  },
  {
    "label": "USentenceBreakTag",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "USentenceBreakTag"
  },
  {
    "label": "UBRK_DONE()",
    "kind": "Method",
    "detail": "Function (# ifndef UBRK_H # define UBRK_H # include \" unicode / utypes . h \" # include \" unicode / uloc . h \" # include \" unicode / utext . h \" # include \" unicode / localpointer . h \" # ifndef UBRK_TYPEDEF_UBREAK_ITERATOR # define UBRK_TYPEDEF_UBREAK_ITERATOR typedef struct UBreakIterator UBreakIterator ; # endif # if ! UCONFIG_NO_BREAK_ITERATION # include \" unicode / parseerr . h \" typedef enum UBreakIteratorType { UBRK_CHARACTER = 0,UBRK_WORD = 1,UBRK_LINE = 2,UBRK_SENTENCE = 3,# ifndef UBRK_TITLE = 4,UBRK_COUNT = 5 # endif } UBreakIteratorType ; # define)",
    "insertText": "UBRK_DONE((int32_t) -1)"
  },
  {
    "label": "ubrk_open()",
    "kind": "Method",
    "detail": "Function (UBRK_WORD_NONE = 0,UBRK_WORD_NONE_LIMIT = 1 0 0,UBRK_WORD_NUMBER = 1 0 0,UBRK_WORD_NUMBER_LIMIT = 2 0 0,UBRK_WORD_LETTER = 2 0 0,UBRK_WORD_LETTER_LIMIT = 3 0 0,UBRK_WORD_KANA = 3 0 0,UBRK_WORD_KANA_LIMIT = 4 0 0,UBRK_WORD_IDEO = 4 0 0,UBRK_WORD_IDEO_LIMIT = 5 0 0 } UWordBreak ; typedef enum ULineBreakTag { UBRK_LINE_SOFT = 0,UBRK_LINE_SOFT_LIMIT = 1 0 0,UBRK_LINE_HARD = 1 0 0,UBRK_LINE_HARD_LIMIT = 2 0 0 } ULineBreakTag ; typedef enum USentenceBreakTag { UBRK_SENTENCE_TERM = 0,UBRK_SENTENCE_TERM_LIMIT = 1 0 0,UBRK_SENTENCE_SEP = 1 0 0,UBRK_SENTENCE_SEP_LIMIT = 2 0 0 } USentenceBreakTag ; U_STABLE UBreakIterator* U_EXPORT2)",
    "insertText": "ubrk_open(UBreakIteratorType type, const char *locale, const UChar *text, int32_t textLength, UErrorCode *status)"
  },
  {
    "label": "ubrk_openRules()",
    "kind": "Method",
    "detail": "Function (U_STABLE UBreakIterator* U_EXPORT2)",
    "insertText": "ubrk_openRules(const UChar *rules, int32_t rulesLength, const UChar *text, int32_t textLength, UParseError *parseErr, UErrorCode *status)"
  },
  {
    "label": "ubrk_openBinaryRules()",
    "kind": "Method",
    "detail": "Function (U_STABLE UBreakIterator* U_EXPORT2)",
    "insertText": "ubrk_openBinaryRules(const uint8_t *binaryRules, int32_t rulesLength, const UChar * text, int32_t textLength, UErrorCode * status)"
  },
  {
    "label": "ubrk_safeClone()",
    "kind": "Method",
    "detail": "Function (U_STABLE UBreakIterator* U_EXPORT2)",
    "insertText": "ubrk_safeClone(const UBreakIterator *bi, void *stackBuffer, int32_t *pBufferSize, UErrorCode *status)"
  },
  {
    "label": "ubrk_close()",
    "kind": "Method",
    "detail": "Function (# ifndef # define U_BRK_SAFECLONE_BUFFERSIZE 1 # endif U_STABLE void U_EXPORT2)",
    "insertText": "ubrk_close(UBreakIterator *bi)"
  },
  {
    "label": "U_DEFINE_LOCAL_OPEN_POINTER()",
    "kind": "Method",
    "detail": "Function (# if U_NAMESPACE_BEGIN)",
    "insertText": "U_DEFINE_LOCAL_OPEN_POINTER(LocalUBreakIteratorPointer, UBreakIterator, ubrk_close)"
  },
  {
    "label": "ubrk_setText()",
    "kind": "Method",
    "detail": "Function (U_NAMESPACE_END # endif U_STABLE void U_EXPORT2)",
    "insertText": "ubrk_setText(UBreakIterator* bi, const UChar* text, int32_t textLength, UErrorCode* status)"
  },
  {
    "label": "ubrk_setUText()",
    "kind": "Method",
    "detail": "Function (U_STABLE void U_EXPORT2)",
    "insertText": "ubrk_setUText(UBreakIterator* bi, UText* text, UErrorCode* status)"
  },
  {
    "label": "ubrk_current()",
    "kind": "Method",
    "detail": "Function (U_STABLE int32_t U_EXPORT2)",
    "insertText": "ubrk_current(const UBreakIterator *bi)"
  },
  {
    "label": "ubrk_next()",
    "kind": "Method",
    "detail": "Function (U_STABLE int32_t U_EXPORT2)",
    "insertText": "ubrk_next(UBreakIterator *bi)"
  },
  {
    "label": "ubrk_previous()",
    "kind": "Method",
    "detail": "Function (U_STABLE int32_t U_EXPORT2)",
    "insertText": "ubrk_previous(UBreakIterator *bi)"
  },
  {
    "label": "ubrk_first()",
    "kind": "Method",
    "detail": "Function (U_STABLE int32_t U_EXPORT2)",
    "insertText": "ubrk_first(UBreakIterator *bi)"
  },
  {
    "label": "ubrk_last()",
    "kind": "Method",
    "detail": "Function (U_STABLE int32_t U_EXPORT2)",
    "insertText": "ubrk_last(UBreakIterator *bi)"
  },
  {
    "label": "ubrk_preceding()",
    "kind": "Method",
    "detail": "Function (U_STABLE int32_t U_EXPORT2)",
    "insertText": "ubrk_preceding(UBreakIterator *bi, int32_t offset)"
  },
  {
    "label": "ubrk_following()",
    "kind": "Method",
    "detail": "Function (U_STABLE int32_t U_EXPORT2)",
    "insertText": "ubrk_following(UBreakIterator *bi, int32_t offset)"
  },
  {
    "label": "ubrk_getAvailable()",
    "kind": "Method",
    "detail": "Function (U_STABLE const char* U_EXPORT2)",
    "insertText": "ubrk_getAvailable(int32_t index)"
  },
  {
    "label": "ubrk_countAvailable()",
    "kind": "Method",
    "detail": "Function (U_STABLE int32_t U_EXPORT2)",
    "insertText": "ubrk_countAvailable(void)"
  },
  {
    "label": "ubrk_isBoundary()",
    "kind": "Method",
    "detail": "Function (U_STABLE UBool U_EXPORT2)",
    "insertText": "ubrk_isBoundary(UBreakIterator *bi, int32_t offset)"
  },
  {
    "label": "ubrk_getRuleStatus()",
    "kind": "Method",
    "detail": "Function (U_STABLE int32_t U_EXPORT2)",
    "insertText": "ubrk_getRuleStatus(UBreakIterator *bi)"
  },
  {
    "label": "ubrk_getRuleStatusVec()",
    "kind": "Method",
    "detail": "Function (U_STABLE int32_t U_EXPORT2)",
    "insertText": "ubrk_getRuleStatusVec(UBreakIterator *bi, int32_t *fillInVec, int32_t capacity, UErrorCode *status)"
  },
  {
    "label": "ubrk_getLocaleByType()",
    "kind": "Method",
    "detail": "Function (U_STABLE const char* U_EXPORT2)",
    "insertText": "ubrk_getLocaleByType(const UBreakIterator *bi, ULocDataLocaleType type, UErrorCode* status)"
  },
  {
    "label": "ubrk_refreshUText()",
    "kind": "Method",
    "detail": "Function (U_STABLE void U_EXPORT2)",
    "insertText": "ubrk_refreshUText(UBreakIterator *bi, UText *text, UErrorCode *status)"
  },
  {
    "label": "ubrk_getBinaryRules()",
    "kind": "Method",
    "detail": "Function (U_STABLE int32_t U_EXPORT2)",
    "insertText": "ubrk_getBinaryRules(UBreakIterator *bi, uint8_t * binaryRules, int32_t rulesCapacity, UErrorCode * status)"
  }
]