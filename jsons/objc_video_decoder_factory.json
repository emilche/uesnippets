[
  {
    "label": "ObjCVideoDecoderFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ObjCVideoDecoderFactory"
  },
  {
    "label": "RTC_OBJC_TYPE()",
    "kind": "Method",
    "detail": "Function (# ifndef SDK_OBJC_NATIVE_SRC_OBJC_VIDEO_DECODER_FACTORY_H_ # define SDK_OBJC_NATIVE_SRC_OBJC_VIDEO_DECODER_FACTORY_H_ # import \" base / RTCMacros . h \" # include \" api / video_codecs / video_decoder_factory . h \" # include \" media / base / codec . h \" @ protocol)",
    "insertText": "RTC_OBJC_TYPE(RTCVideoDecoderFactory)"
  },
  {
    "label": "ObjCVideoDecoderFactory()",
    "kind": "Method",
    "detail": "Function (namespace webrtc { class ObjCVideoDecoderFactory : public VideoDecoderFactory { public :)",
    "insertText": "ObjCVideoDecoderFactory(id<RTC_OBJC_TYPE(RTCVideoDecoderFactory)>)"
  },
  {
    "label": "ObjCVideoDecoderFactory()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "ObjCVideoDecoderFactory()"
  },
  {
    "label": "RTC_OBJC_TYPE()",
    "kind": "Method",
    "detail": "Function (id<)",
    "insertText": "RTC_OBJC_TYPE(RTCVideoDecoderFactory)> wrapped_decoder_factory()"
  },
  {
    "label": "GetSupportedFormats()",
    "kind": "Method",
    "detail": "Function (std::vector<SdpVideoFormat>)",
    "insertText": "GetSupportedFormats()"
  },
  {
    "label": "CreateVideoDecoder()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<VideoDecoder>)",
    "insertText": "CreateVideoDecoder(const SdpVideoFormat& format)"
  }
]