[
  {
    "label": "FKeyState",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FKeyState"
  },
  {
    "label": "FKeyState()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Engine / EngineBaseTypes . h \" struct FKeyState { FVector RawValue ; FVector Value ; float LastUpDownTransitionTime ; uint8 bDown : 1 ; uint8 bDownPrevious : 1 ; uint8 bConsumed : 1 ; uint8 bWasJustFlushed : 1 ; uint8 PairSampledAxes : 3 ; uint8 SampleCountAccumulator ; TArray<uint32> EventCounts [ IE_MAX ] ; TArray<uint32> EventAccumulator [ IE_MAX ] ; FVector RawValueAccumulator ;)",
    "insertText": "FKeyState() : RawValue(0.f, 0.f, 0.f) , Value(0.f, 0.f, 0.f) , LastUpDownTransitionTime(0.f) , bDown(false) , bDownPrevious(false) , bConsumed(false) , bWasJustFlushed(false) , PairSampledAxes(0) , SampleCountAccumulator(0) , RawValueAccumulator(0.f, 0.f, 0.f)"
  }
]