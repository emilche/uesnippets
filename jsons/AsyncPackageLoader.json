[
  {
    "label": "FLinkerInstancingContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLinkerInstancingContext"
  },
  {
    "label": "FPackagePath",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPackagePath"
  },
  {
    "label": "FThreadSafeCounter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FThreadSafeCounter"
  },
  {
    "label": "UPackage",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPackage"
  },
  {
    "label": "FGuid",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGuid"
  },
  {
    "label": "TFunctionRef",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TFunctionRef"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FPackageIndex",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPackageIndex"
  },
  {
    "label": "IAsyncPackageLoader",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IAsyncPackageLoader"
  },
  {
    "label": "LinkerInstancingContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "LinkerInstancingContext"
  },
  {
    "label": "FAsyncLoadingThreadSettings",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAsyncLoadingThreadSettings"
  },
  {
    "label": "DECLARE_STATS_GROUP_VERBOSE()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / ArrayView . h \" # include \" Containers / UnrealString . h \" # include \" CoreMinimal . h \" # include \" CoreTypes . h \" # include \" Misc / PackagePath . h \" # include \" Stats / Stats2 . h \" # include \" UObject / NameTypes . h \" # include \" UObject / Object . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / UObjectArray . h \" # include \" UObject / UObjectGlobals . h \" class FLinkerInstancingContext ; class FPackagePath ; class FThreadSafeCounter ; class UPackage ; struct FGuid ; template<FuncType> class TFunctionRef ;)",
    "insertText": "DECLARE_STATS_GROUP_VERBOSE(TEXT(\"Async Load\"), STATGROUP_AsyncLoad, STATCAT_Advanced)"
  },
  {
    "label": "DECLARE_CYCLE_STAT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_CYCLE_STAT(TEXT(\"Async Loading Time\"),STAT_AsyncLoadingTime,STATGROUP_AsyncLoad)"
  },
  {
    "label": "DECLARE_STATS_GROUP()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_STATS_GROUP(TEXT(\"Async Load Game Thread\"), STATGROUP_AsyncLoadGameThread, STATCAT_Advanced)"
  },
  {
    "label": "DECLARE_CYCLE_STAT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_CYCLE_STAT(TEXT(\"PostLoadObjects GT\"), STAT_FAsyncPackage_PostLoadObjectsGameThread, STATGROUP_AsyncLoadGameThread)"
  },
  {
    "label": "DECLARE_CYCLE_STAT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_CYCLE_STAT(TEXT(\"TickAsyncLoading GT\"), STAT_FAsyncPackage_TickAsyncLoadingGameThread, STATGROUP_AsyncLoadGameThread)"
  },
  {
    "label": "DECLARE_CYCLE_STAT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_CYCLE_STAT(TEXT(\"Flush Async Loading GT\"), STAT_FAsyncPackage_FlushAsyncLoadingGameThread, STATGROUP_AsyncLoadGameThread)"
  },
  {
    "label": "DECLARE_CYCLE_STAT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_CYCLE_STAT(TEXT(\"Flush All Async Loads GT\"), STAT_FAsyncPackage_FlushAllAsyncLoadingGameThread, STATGROUP_AsyncLoadGameThread)"
  },
  {
    "label": "DECLARE_CYCLE_STAT_WITH_FLAGS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_CYCLE_STAT_WITH_FLAGS(TEXT(\"PostLoadInstances GT\"), STAT_FAsyncPackage_PostLoadInstancesGameThread, STATGROUP_AsyncLoadGameThread, EStatFlags::Verbose)"
  },
  {
    "label": "DECLARE_CYCLE_STAT_WITH_FLAGS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_CYCLE_STAT_WITH_FLAGS(TEXT(\"CreateClusters GT\"), STAT_FAsyncPackage_CreateClustersGameThread, STATGROUP_AsyncLoadGameThread, EStatFlags::Verbose)"
  },
  {
    "label": "IsGarbageCollectionLocked()",
    "kind": "Method",
    "detail": "Function (enum class ENotifyRegistrationType ; enum class ENotifyRegistrationPhase ; const FName PrestreamPackageClassNameLoad ; bool)",
    "insertText": "IsGarbageCollectionLocked()"
  },
  {
    "label": "IsNativeCodePackage()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsNativeCodePackage(UPackage* Package)"
  },
  {
    "label": "CanPostLoadOnAsyncLoadingThread()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanPostLoadOnAsyncLoadingThread(UObject* Object)"
  },
  {
    "label": "ClearFlagsAndDissolveClustersFromLoadedObjects()",
    "kind": "Method",
    "detail": "Function (template<T> void)",
    "insertText": "ClearFlagsAndDissolveClustersFromLoadedObjects(T& LoadedObjects)"
  },
  {
    "label": "for()",
    "kind": "Method",
    "detail": "Function (const EObjectFlags ObjectLoadFlags = RF_NeedLoad | RF_NeedPostLoad | RF_NeedPostLoadSubobjects | RF_WasLoaded ;)",
    "insertText": "for(UObject* ObjRef : LoadedObjects)"
  },
  {
    "label": "AtomicallyClearFlags()",
    "kind": "Method",
    "detail": "Function (ObjRef ->)",
    "insertText": "AtomicallyClearFlags(ObjectLoadFlags)"
  },
  {
    "label": "DissolveCluster()",
    "kind": "Method",
    "detail": "Function (GUObjectClusters .)",
    "insertText": "DissolveCluster(ObjRef)"
  },
  {
    "label": "FAsyncLoadingThreadSettings()",
    "kind": "Method",
    "detail": "Function (} } } } class FPackageIndex ; class IAsyncPackageLoader ; class LinkerInstancingContext ; struct FAsyncLoadingThreadSettings { bool bAsyncLoadingThreadEnabled ; bool bAsyncPostLoadEnabled ;)",
    "insertText": "FAsyncLoadingThreadSettings()"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (FAsyncLoadingThreadSettings&)",
    "insertText": "Get()"
  },
  {
    "label": "IAsyncPackageLoader()",
    "kind": "Method",
    "detail": "Function (} ; class IAsyncPackageLoader { public : ~)",
    "insertText": "IAsyncPackageLoader()"
  },
  {
    "label": "InitializeLoading()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "InitializeLoading()"
  },
  {
    "label": "ShutdownLoading()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ShutdownLoading()"
  },
  {
    "label": "StartThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StartThread()"
  },
  {
    "label": "ShouldAlwaysLoadPackageAsync()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldAlwaysLoadPackageAsync(const FPackagePath& PackagePath)"
  },
  {
    "label": "LoadPackage()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "LoadPackage(const FPackagePath& PackagePath, FName CustomPackageName, FLoadPackageAsyncDelegate InCompletionDelegate, EPackageFlags InPackageFlags, int32 InPIEInstanceID, int32 InPackagePriority, const FLinkerInstancingContext* InInstancingContext, uint32 InLoadFlags)"
  },
  {
    "label": "LoadPackage()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "LoadPackage(const FPackagePath& PackagePath, FLoadPackageAsyncOptionalParams OptionalParams)"
  },
  {
    "label": "ProcessLoadingUntilComplete()",
    "kind": "Method",
    "detail": "Function (EAsyncPackageState::Type)",
    "insertText": "ProcessLoadingUntilComplete(TFunctionRef<bool()> CompletionPredicate, double TimeLimit)"
  },
  {
    "label": "CancelLoading()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CancelLoading()"
  },
  {
    "label": "SuspendLoading()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SuspendLoading()"
  },
  {
    "label": "ResumeLoading()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResumeLoading()"
  },
  {
    "label": "FlushLoading()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FlushLoading(TConstArrayView<int32> RequestIds)"
  },
  {
    "label": "GetNumQueuedPackages()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetNumQueuedPackages()"
  },
  {
    "label": "GetNumAsyncPackages()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetNumAsyncPackages()"
  },
  {
    "label": "GetAsyncLoadPercentage()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetAsyncLoadPercentage(const FName& PackageName)"
  },
  {
    "label": "IsAsyncLoadingSuspended()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsAsyncLoadingSuspended()"
  },
  {
    "label": "IsInAsyncLoadThread()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsInAsyncLoadThread()"
  },
  {
    "label": "IsMultithreaded()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsMultithreaded()"
  },
  {
    "label": "IsAsyncLoadingPackages()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsAsyncLoadingPackages()"
  },
  {
    "label": "NotifyConstructedDuringAsyncLoading()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyConstructedDuringAsyncLoading(UObject* Object, bool bSubObject)"
  },
  {
    "label": "NotifyUnreachableObjects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyUnreachableObjects(const TArrayView<FUObjectItem*>& UnreachableObjects)"
  },
  {
    "label": "NotifyRegistrationEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyRegistrationEvent(const TCHAR* PackageName, const TCHAR* Name, ENotifyRegistrationType NotifyRegistrationType, ENotifyRegistrationPhase NotifyRegistrationPhase, UObject* (*InRegister)(), bool InbDynamic, UObject* FinishedObject)"
  },
  {
    "label": "NotifyRegistrationComplete()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyRegistrationComplete()"
  },
  {
    "label": "GetLoaderType()",
    "kind": "Method",
    "detail": "Function (ELoaderType)",
    "insertText": "GetLoaderType()"
  },
  {
    "label": "GetNextRequestId()",
    "kind": "Method",
    "detail": "Function (protected : int32)",
    "insertText": "GetNextRequestId()"
  },
  {
    "label": "ResetAsyncLoadingStats()",
    "kind": "Method",
    "detail": "Function (private : FThreadSafeCounter NextPackageRequestId ; } ; double GFlushAsyncLoadingTime ; uint32 GFlushAsyncLoadingCount ; uint32 GSyncLoadCount ; void)",
    "insertText": "ResetAsyncLoadingStats()"
  },
  {
    "label": "IsTimeLimitExceededPrint()",
    "kind": "Method",
    "detail": "Function (int32 GWarnIfTimeLimitExceeded ; float GTimeLimitExceededMultiplier ; float GTimeLimitExceededMinTime ; void)",
    "insertText": "IsTimeLimitExceededPrint(double InTickStartTime, double CurrentTime, double LastTestTime, double InTimeLimit, const TCHAR* InLastTypeOfWorkPerformed = nullptr, UObject* InLastObjectWorkWasPerformedOn = nullptr)"
  }
]