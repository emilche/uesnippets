[
  {
    "label": "FPointIntersection",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPointIntersection"
  },
  {
    "label": "FSegmentIntersection",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSegmentIntersection"
  },
  {
    "label": "FPolygonIntersection",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPolygonIntersection"
  },
  {
    "label": "FIntersectionsQueryResult",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FIntersectionsQueryResult"
  },
  {
    "label": "TriangleMeshType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TriangleMeshType"
  },
  {
    "label": "TFastWindingTree",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TFastWindingTree"
  },
  {
    "label": "TriangleMeshType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TriangleMeshType"
  },
  {
    "label": "TMeshAABBTree3",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TMeshAABBTree3"
  },
  {
    "label": "TFastWindingTree",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TFastWindingTree"
  },
  {
    "label": "FTreeTraversal",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTreeTraversal"
  },
  {
    "label": "FBoxesSet",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBoxesSet"
  },
  {
    "label": "GetBox()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetBox(RootIndex)"
  },
  {
    "label": "FindNearestHitTriangle()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FindNearestHitTriangle(Ray, NearestT, TID, BaryCoords, Options)"
  },
  {
    "label": "NewIntersection()",
    "kind": "Method",
    "detail": "Function (MeshIntersection::FHitIntersectionResult)",
    "insertText": "NewIntersection({ti, Query.RayParameter, Query.TriangleBaryCoords})"
  },
  {
    "label": "TransformF()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TransformF(P)"
  },
  {
    "label": "triBounds()",
    "kind": "Method",
    "detail": "Function (FAxisAlignedBox3d)",
    "insertText": "triBounds(Triangle.V[0], Triangle.V[1], Triangle.V[2])"
  },
  {
    "label": "FAxisAlignedBox3d()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FAxisAlignedBox3d(Min, Max)"
  },
  {
    "label": "TransformF()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TransformF(P)"
  },
  {
    "label": "GetBox()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetBox(iBox)"
  },
  {
    "label": "FAxisAlignedBox3d()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FAxisAlignedBox3d(Min, Max)"
  },
  {
    "label": "Box()",
    "kind": "Method",
    "detail": "Function (FAxisAlignedBox3d)",
    "insertText": "Box(c - e, c + e)"
  },
  {
    "label": "find_any_intersection()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "find_any_intersection(iChild1, Triangle, triBounds, TriangleIntersectionTest, Options)"
  },
  {
    "label": "find_any_intersection()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "find_any_intersection(iBox, OtherTree, TransformF, oBox, depth + 1, TriangleIntersectionTest, Options, OtherTreeOptions)"
  },
  {
    "label": "find_any_intersection()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "find_any_intersection(iChild1, OtherTree, TransformF, oBox, depth + 1, TriangleIntersectionTest, Options, OtherTreeOptions)"
  }
]