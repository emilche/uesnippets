[
  {
    "label": "MockRenderDelayBuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MockRenderDelayBuffer"
  },
  {
    "label": "MockRenderDelayBuffer()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_AUDIO_PROCESSING_AEC3_MOCK_MOCK_RENDER_DELAY_BUFFER_H_ # define MODULES_AUDIO_PROCESSING_AEC3_MOCK_MOCK_RENDER_DELAY_BUFFER_H_ # include<vector> # include \" modules / audio_processing / aec3 / aec3_common . h \" # include \" modules / audio_processing / aec3 / downsampled_render_buffer . h \" # include \" modules / audio_processing / aec3 / render_buffer . h \" # include \" modules / audio_processing / aec3 / render_delay_buffer . h \" # include \" test / gmock . h \" namespace webrtc { namespace test { class MockRenderDelayBuffer : public RenderDelayBuffer { public :)",
    "insertText": "MockRenderDelayBuffer(int sample_rate_hz, size_t num_channels)"
  },
  {
    "label": "MockRenderDelayBuffer()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "MockRenderDelayBuffer()"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(void, Reset, (), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(RenderDelayBuffer::BufferingEvent, Insert, (const Block& block), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(void, HandleSkippedCaptureProcessing, (), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(RenderDelayBuffer::BufferingEvent, PrepareCaptureProcessing, (), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(bool, AlignFromDelay, (size_t delay), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(void, AlignFromExternalDelay, (), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(size_t, Delay, (), (const, override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(size_t, MaxDelay, (), (const, override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(RenderBuffer*, GetRenderBuffer, (), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(const DownsampledRenderBuffer&, GetDownsampledRenderBuffer, (), (const, override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(void, SetAudioBufferDelay, (int delay_ms), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(bool, HasReceivedBufferDelay, (), (override))"
  },
  {
    "label": "FakeGetRenderBuffer()",
    "kind": "Method",
    "detail": "Function (private : RenderBuffer*)",
    "insertText": "FakeGetRenderBuffer()"
  }
]