[
  {
    "label": "COutputQueue",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "COutputQueue"
  },
  {
    "label": "NewSegmentPacket",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "NewSegmentPacket"
  },
  {
    "label": "COutputQueue()",
    "kind": "Method",
    "detail": "Function (typedef CGenericList<IMediaSample> CSampleList ; class COutputQueue : public CCritSec { public :)",
    "insertText": "COutputQueue(IPin *pInputPin, __inout HRESULT *phr, BOOL bAuto = TRUE, BOOL bQueue = TRUE, LONG lBatchSize = 1, BOOL bBatchExact = FALSE, LONG lListSize = DEFAULTCACHE, DWORD dwPriority = THREAD_PRIORITY_NORMAL, bool bFlushingOpt = false)"
  },
  {
    "label": "COutputQueue()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "COutputQueue()"
  },
  {
    "label": "BeginFlush()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginFlush()"
  },
  {
    "label": "EndFlush()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EndFlush()"
  },
  {
    "label": "EOS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EOS()"
  },
  {
    "label": "SendAnyway()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SendAnyway()"
  },
  {
    "label": "NewSegment()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NewSegment(REFERENCE_TIME tStart, REFERENCE_TIME tStop, double dRate)"
  },
  {
    "label": "Receive()",
    "kind": "Method",
    "detail": "Function (HRESULT)",
    "insertText": "Receive(IMediaSample *pSample)"
  },
  {
    "label": "ReceiveMultiple()",
    "kind": "Method",
    "detail": "Function (HRESULT)",
    "insertText": "ReceiveMultiple(__in_ecount(nSamples) IMediaSample **pSamples, long nSamples, __out long *nSamplesProcessed)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "IsIdle()",
    "kind": "Method",
    "detail": "Function (BOOL)",
    "insertText": "IsIdle()"
  },
  {
    "label": "SetPopEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPopEvent(HANDLE hEvent)"
  },
  {
    "label": "InitialThreadProc()",
    "kind": "Method",
    "detail": "Function (protected : DWORD WINAPI)",
    "insertText": "InitialThreadProc(__in LPVOID pv)"
  },
  {
    "label": "ThreadProc()",
    "kind": "Method",
    "detail": "Function (DWORD)",
    "insertText": "ThreadProc()"
  },
  {
    "label": "IsQueued()",
    "kind": "Method",
    "detail": "Function (BOOL)",
    "insertText": "IsQueued()"
  },
  {
    "label": "IsSpecialSample()",
    "kind": "Method",
    "detail": "Function (BOOL)",
    "insertText": "IsSpecialSample(IMediaSample *pSample)"
  },
  {
    "label": "FreeSamples()",
    "kind": "Method",
    "detail": "Function (} ; void)",
    "insertText": "FreeSamples()"
  },
  {
    "label": "NotifyThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyThread()"
  },
  {
    "label": "SEND_PACKET()",
    "kind": "Method",
    "detail": "Function (protected : # define)",
    "insertText": "SEND_PACKET((IMediaSample *)(LONG_PTR)(-2)) #define EOS_PACKET ((IMediaSample *)(LONG_PTR)(-3)) #define RESET_PACKET ((IMediaSample *)(LONG_PTR)(-4)) #define NEW_SEGMENT ((IMediaSample *)(LONG_PTR)(-5))"
  },
  {
    "label": "__field_ecount_opt()",
    "kind": "Method",
    "detail": "Function (REFERENCE_TIME tStart ; REFERENCE_TIME tStop ; double dRate ; } ; IPin* const m_pPin ; IMemInputPin* m_pInputPin ; BOOL const m_bBatchExact ; LONG const m_lBatchSize ; CSampleList* m_List ; HANDLE m_hSem ; CAMEvent m_evFlushComplete ; HANDLE m_hThread ;)",
    "insertText": "__field_ecount_opt(m_lBatchSize)"
  },
  {
    "label": "__range()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "__range(0, m_lBatchSize)"
  }
]