[
  {
    "label": "UClass",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UClass"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FCustomColorForChannel",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCustomColorForChannel"
  },
  {
    "label": "FCustomColorForSpaceSwitch",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCustomColorForSpaceSwitch"
  },
  {
    "label": "CURVEEDITOR_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CURVEEDITOR_API"
  },
  {
    "label": "UENUM()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" Containers / UnrealString . h \" # include \" CoreMinimal . h \" # include \" HAL / Platform . h \" # include \" Math / Color . h \" # include \" Misc / Optional . h \" # include \" UObject / Object . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / SoftObjectPtr . h \" # include \" UObject / UObjectGlobals . h \" # include \" CurveEditorSettings . generated . h \" class UClass ;)",
    "insertText": "UENUM()"
  },
  {
    "label": "UMETA()",
    "kind": "Method",
    "detail": "Function (CurrentTime)",
    "insertText": "UMETA(DisplayName = \"Playhead\"), MousePosition UMETA(DisplayName = \"Mouse Position\")"
  },
  {
    "label": "UMETA()",
    "kind": "Method",
    "detail": "Function (CESA_None)",
    "insertText": "UMETA(DisplayName = \"None\"), CESA_X UMETA(DisplayName = \"X Only\"), CESA_Y UMETA(DisplayName = \"Y Only\")"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "USTRUCT()"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() FCustomColorForChannel() : Object(nullptr), Color(1.0f, 1.0f, 1.0f, 1.0f)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() FCustomColorForSpaceSwitch() : Color(1.0f, 1.0f, 1.0f, 1.0f)"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "UCLASS(config=EditorPerProjectUserSettings)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "GENERATED_BODY() DECLARE_MULTICAST_DELEGATE(FOnCustomColorsChanged)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_MULTICAST_DELEGATE(FOnAxisSnappingChanged)"
  },
  {
    "label": "UCurveEditorSettings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UCurveEditorSettings()"
  },
  {
    "label": "GetAutoFrameCurveEditor()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetAutoFrameCurveEditor()"
  },
  {
    "label": "SetAutoFrameCurveEditor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAutoFrameCurveEditor(bool InbAutoFrameCurveEditor)"
  },
  {
    "label": "GetShowBars()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetShowBars()"
  },
  {
    "label": "SetShowBars()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetShowBars(bool InShowBars)"
  },
  {
    "label": "GetFrameInputPadding()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetFrameInputPadding()"
  },
  {
    "label": "SetFrameInputPadding()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFrameInputPadding(int32 InFrameInputPadding)"
  },
  {
    "label": "GetFrameOutputPadding()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetFrameOutputPadding()"
  },
  {
    "label": "SetFrameOutputPadding()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFrameOutputPadding(int32 InFrameOutputPadding)"
  },
  {
    "label": "GetShowBufferedCurves()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetShowBufferedCurves()"
  },
  {
    "label": "SetShowBufferedCurves()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetShowBufferedCurves(bool InbShowBufferedCurves)"
  },
  {
    "label": "GetShowCurveEditorCurveToolTips()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetShowCurveEditorCurveToolTips()"
  },
  {
    "label": "SetShowCurveEditorCurveToolTips()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetShowCurveEditorCurveToolTips(bool InbShowCurveEditorCurveToolTips)"
  },
  {
    "label": "GetTangentVisibility()",
    "kind": "Method",
    "detail": "Function (ECurveEditorTangentVisibility)",
    "insertText": "GetTangentVisibility()"
  },
  {
    "label": "SetTangentVisibility()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTangentVisibility(ECurveEditorTangentVisibility InTangentVisibility)"
  },
  {
    "label": "GetZoomPosition()",
    "kind": "Method",
    "detail": "Function (ECurveEditorZoomPosition)",
    "insertText": "GetZoomPosition()"
  },
  {
    "label": "SetZoomPosition()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetZoomPosition(ECurveEditorZoomPosition InZoomPosition)"
  },
  {
    "label": "GetSnapAxis()",
    "kind": "Method",
    "detail": "Function (ECurveEditorSnapAxis)",
    "insertText": "GetSnapAxis()"
  },
  {
    "label": "SetSnapAxis()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSnapAxis(ECurveEditorSnapAxis InSnapAxis)"
  },
  {
    "label": "GetSnapTimeToSelection()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetSnapTimeToSelection()"
  },
  {
    "label": "SetSnapTimeToSelection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSnapTimeToSelection(bool bInSnapTimeToSelection)"
  },
  {
    "label": "SetSelectionColor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSelectionColor(const FLinearColor& InColor)"
  },
  {
    "label": "GetSelectionColor()",
    "kind": "Method",
    "detail": "Function (FLinearColor)",
    "insertText": "GetSelectionColor()"
  },
  {
    "label": "GetCustomColor()",
    "kind": "Method",
    "detail": "Function (TOptional<FLinearColor>)",
    "insertText": "GetCustomColor(UClass* InClass, const FString& InPropertyName)"
  },
  {
    "label": "SetCustomColor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCustomColor(UClass* InClass, const FString& InPropertyName, FLinearColor InColor)"
  },
  {
    "label": "DeleteCustomColor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeleteCustomColor(UClass* InClass, const FString& InPropertyName)"
  },
  {
    "label": "GetOnCustomColorsChanged()",
    "kind": "Method",
    "detail": "Function (FOnCustomColorsChanged&)",
    "insertText": "GetOnCustomColorsChanged()"
  },
  {
    "label": "SetSpaceSwitchColor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSpaceSwitchColor(const FString& InControlName, FLinearColor InColor)"
  },
  {
    "label": "DeleteSpaceSwitchColor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeleteSpaceSwitchColor(const FString& InControlName)"
  },
  {
    "label": "GetNextRandomColor()",
    "kind": "Method",
    "detail": "Function (FLinearColor)",
    "insertText": "GetNextRandomColor()"
  },
  {
    "label": "GetTreeViewWidth()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetTreeViewWidth()"
  },
  {
    "label": "PostEditChangeProperty()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "PostEditChangeProperty(FPropertyChangedEvent& PropertyChangedEvent)"
  }
]