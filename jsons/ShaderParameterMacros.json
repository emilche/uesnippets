[
  {
    "label": "FRDGTexture",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRDGTexture"
  },
  {
    "label": "FRDGTextureSRV",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRDGTextureSRV"
  },
  {
    "label": "FRDGTextureUAV",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRDGTextureUAV"
  },
  {
    "label": "FRDGBuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRDGBuffer"
  },
  {
    "label": "FRDGBufferSRV",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRDGBufferSRV"
  },
  {
    "label": "FRDGBufferUAV",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRDGBufferUAV"
  },
  {
    "label": "FRDGUniformBuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRDGUniformBuffer"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FShaderBindingLayoutContainer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FShaderBindingLayoutContainer"
  },
  {
    "label": "TRDGUniformBuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TRDGUniformBuffer"
  },
  {
    "label": "TAlignedTypedef",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TAlignedTypedef"
  },
  {
    "label": "alignas",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "alignas"
  },
  {
    "label": "UniformBufferStructType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UniformBufferStructType"
  },
  {
    "label": "TUniformBufferMetadataHelper",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TUniformBufferMetadataHelper"
  },
  {
    "label": "TUniformBufferRef",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TUniformBufferRef"
  },
  {
    "label": "TUniformBuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TUniformBuffer"
  },
  {
    "label": "FRenderTargetBinding",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRenderTargetBinding"
  },
  {
    "label": "FDepthStencilBinding",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDepthStencilBinding"
  },
  {
    "label": "FTypeInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTypeInfo"
  },
  {
    "label": "TShaderParameterTypeInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TShaderParameterTypeInfo"
  },
  {
    "label": "TRDGResourceAccessTypeInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TRDGResourceAccessTypeInfo"
  },
  {
    "label": "TRDGTextureAccessTypeInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TRDGTextureAccessTypeInfo"
  },
  {
    "label": "TShaderResourceParameterTypeInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TShaderResourceParameterTypeInfo"
  },
  {
    "label": "TShaderParameterStructTypeInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TShaderParameterStructTypeInfo"
  },
  {
    "label": "PrefixKeywords",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PrefixKeywords"
  },
  {
    "label": "zzFirstMemberId",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "zzFirstMemberId"
  },
  {
    "label": "zzNextMemberId",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "zzNextMemberId"
  },
  {
    "label": "member",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "member"
  },
  {
    "label": "FShaderParametersMetadataRegistration",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FShaderParametersMetadataRegistration"
  },
  {
    "label": "TShaderParameterScalarArrayTypeInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TShaderParameterScalarArrayTypeInfo"
  },
  {
    "label": "IMPLEMENT_ALIGNED_TYPE()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" ShaderParameterStructDeclaration . h \" # include \" ShaderParameterMetadata . h \" # include \" RenderGraphAllocator . h \" # include \" Algo / Reverse . h \" # include \" Templates / IsArrayOrRefOfTypeByPredicate . h \" # include \" Traits / IsCharEncodingCompatibleWith . h \" # include \" Misc / AssertionMacros . h \" # include \" RHICommandList . h \" # include \" RenderGraphTextureSubresource . h \" PRAGMA_DISABLE_BUFFER_OVERRUN_WARNING class FRDGTexture ; class FRDGTextureSRV ; class FRDGTextureUAV ; class FRDGBuffer ; class FRDGBufferSRV ; class FRDGBufferUAV ; class FRDGUniformBuffer ; enum class EShaderBindingLayoutFlags : uint8 ; class FShaderBindingLayoutContainer ; template<TUniformStruct> class TRDGUniformBuffer ; template<T,int32 Alignment> class TAlignedTypedef ; # define)",
    "insertText": "IMPLEMENT_ALIGNED_TYPE(Alignment)"
  },
  {
    "label": "MS_ALIGN()",
    "kind": "Method",
    "detail": "Function (\\ public : \\ typedef)",
    "insertText": "MS_ALIGN(Alignment) T Type GCC_ALIGN(Alignment)"
  },
  {
    "label": "IMPLEMENT_ALIGNED_TYPE()",
    "kind": "Method",
    "detail": "Function (\\ } ;)",
    "insertText": "IMPLEMENT_ALIGNED_TYPE(1)"
  },
  {
    "label": "IMPLEMENT_ALIGNED_TYPE()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "IMPLEMENT_ALIGNED_TYPE(2)"
  },
  {
    "label": "IMPLEMENT_ALIGNED_TYPE()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "IMPLEMENT_ALIGNED_TYPE(4)"
  },
  {
    "label": "IMPLEMENT_ALIGNED_TYPE()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "IMPLEMENT_ALIGNED_TYPE(8)"
  },
  {
    "label": "IMPLEMENT_ALIGNED_TYPE()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "IMPLEMENT_ALIGNED_TYPE(16)"
  },
  {
    "label": "static_assert()",
    "kind": "Method",
    "detail": "Function (# undef IMPLEMENT_ALIGNED_TYPE # if PLATFORM_64BITS template<PtrType> using TAlignedShaderParameterPtr = TAlignedTypedef<PtrType,SHADER_PARAMETER_POINTER_ALIGNMENT>::Type ;)",
    "insertText": "static_assert(sizeof(void*) == 8, \"Wrong PLATFORM_64BITS settings.\")"
  },
  {
    "label": "alignas()",
    "kind": "Method",
    "detail": "Function (# else template<PtrType> class)",
    "insertText": "alignas(SHADER_PARAMETER_POINTER_ALIGNMENT)"
  },
  {
    "label": "TAlignedShaderParameterPtr()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "TAlignedShaderParameterPtr()"
  },
  {
    "label": "TAlignedShaderParameterPtr()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "TAlignedShaderParameterPtr(const PtrType& Other) : Ref(Other)"
  },
  {
    "label": "TAlignedShaderParameterPtr()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "TAlignedShaderParameterPtr(const TAlignedShaderParameterPtr<PtrType>& Other) : Ref(Other.Ref)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "operator(const PtrType& Other)"
  },
  {
    "label": "PtrType()",
    "kind": "Method",
    "detail": "Function (Ref = Other ; } operator)",
    "insertText": "PtrType()"
  },
  {
    "label": "static_assert()",
    "kind": "Method",
    "detail": "Function (# endif)",
    "insertText": "static_assert(sizeof(PtrType) == sizeof(void*), \"T should be a pointer.\")"
  },
  {
    "label": "GetStructMetadata()",
    "kind": "Method",
    "detail": "Function (} ; # endif template<class UniformBufferStructType,= void> struct TUniformBufferMetadataHelper { const FShaderParametersMetadata*)",
    "insertText": "GetStructMetadata()"
  },
  {
    "label": "static_assert()",
    "kind": "Method",
    "detail": "Function (} } ; template<TBufferStruct> class TUniformBufferRef : public FUniformBufferRHIRef {)",
    "insertText": "static_assert(!TIsUECoreVariant<TBufferStruct, double>::Value, \"UniformBufferRHIRef cannot be double core variants! Switch to float variant.\")"
  },
  {
    "label": "TUniformBufferRef()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "TUniformBufferRef()"
  },
  {
    "label": "TUniformBufferRef()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TUniformBufferRef(FRHIUniformBuffer* InRHIRef) : FUniformBufferRHIRef(InRHIRef)"
  },
  {
    "label": "CreateUniformBufferImmediate()",
    "kind": "Method",
    "detail": "Function (} TUniformBufferRef<TBufferStruct>)",
    "insertText": "CreateUniformBufferImmediate(const TBufferStruct& Value, EUniformBufferUsage Usage, EUniformBufferValidation Validation = EUniformBufferValidation::ValidateResources)"
  },
  {
    "label": "CreateEmptyUniformBufferImmediate()",
    "kind": "Method",
    "detail": "Function (} TUniformBufferRef<TBufferStruct>)",
    "insertText": "CreateEmptyUniformBufferImmediate(EUniformBufferUsage Usage)"
  },
  {
    "label": "RHIUpdateUniformBuffer()",
    "kind": "Method",
    "detail": "Function (PRAGMA_DISABLE_DEPRECATION_WARNINGS)",
    "insertText": "RHIUpdateUniformBuffer(GetReference(), &Value)"
  },
  {
    "label": "UpdateUniformBufferImmediate()",
    "kind": "Method",
    "detail": "Function (PRAGMA_ENABLE_DEPRECATION_WARNINGS } void)",
    "insertText": "UpdateUniformBufferImmediate(FRHICommandListBase& RHICmdList, const TBufferStruct& Value)"
  },
  {
    "label": "UpdateUniformBuffer()",
    "kind": "Method",
    "detail": "Function (RHICmdList .)",
    "insertText": "UpdateUniformBuffer(GetReference(), &Value)"
  },
  {
    "label": "alignas()",
    "kind": "Method",
    "detail": "Function (} private : template<TBufferStruct2> class TUniformBuffer ; class TRDGUniformBuffer<TBufferStruct> ; } ; class)",
    "insertText": "alignas(SHADER_PARAMETER_STRUCT_ALIGNMENT)"
  },
  {
    "label": "FUniformBufferBinding()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "FUniformBufferBinding()"
  },
  {
    "label": "IsShader()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsShader()"
  },
  {
    "label": "bool()",
    "kind": "Method",
    "detail": "Function (} operator)",
    "insertText": "bool()"
  },
  {
    "label": "TUniformBufferBinding()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "TUniformBufferBinding()"
  },
  {
    "label": "TUniformBufferBinding()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TUniformBufferBinding(const TUniformBufferRef<TBufferStruct>& InUniformBuffer) : FUniformBufferBinding(InUniformBuffer, TUniformBufferMetadataHelper<TBufferStruct>::GetStructMetadata()->GetPreferredBindingFlag())"
  },
  {
    "label": "TUniformBufferBinding()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "TUniformBufferBinding(const TUniformBufferRef<TBufferStruct>& InUniformBuffer, EUniformBufferBindingFlags InBindingFlags) : FUniformBufferBinding(InUniformBuffer, InBindingFlags)"
  },
  {
    "label": "GetUniformBufferRef()",
    "kind": "Method",
    "detail": "Function (# endif } TUniformBufferRef<TBufferStruct>)",
    "insertText": "GetUniformBufferRef()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} TRDGUniformBuffer<TBufferStruct>*)",
    "insertText": "operator()"
  },
  {
    "label": "GetStaticBinding()",
    "kind": "Method",
    "detail": "Function (} } ; template<TBufferStruct> TUniformBufferBinding<TBufferStruct>)",
    "insertText": "GetStaticBinding(const TUniformBufferRef<TBufferStruct>& InUniformBuffer)"
  },
  {
    "label": "GetShaderBinding()",
    "kind": "Method",
    "detail": "Function (} template<TBufferStruct> TUniformBufferBinding<TBufferStruct>)",
    "insertText": "GetShaderBinding(const TUniformBufferRef<TBufferStruct>& InUniformBuffer)"
  },
  {
    "label": "FRDGUniformBufferBinding()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "FRDGUniformBufferBinding()"
  },
  {
    "label": "TRDGUniformBufferBinding()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "TRDGUniformBufferBinding()"
  },
  {
    "label": "TRDGUniformBufferBinding()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TRDGUniformBufferBinding(TRDGUniformBuffer<TBufferStruct>* InUniformBuffer) : FRDGUniformBufferBinding(InUniformBuffer, TUniformBufferMetadataHelper<TBufferStruct>::GetStructMetadata()->GetPreferredBindingFlag())"
  },
  {
    "label": "TRDGUniformBufferBinding()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "TRDGUniformBufferBinding(TRDGUniformBuffer<TBufferStruct>* InUniformBuffer, EUniformBufferBindingFlags InBindingFlags) : FRDGUniformBufferBinding(InUniformBuffer, InBindingFlags)"
  },
  {
    "label": "GetUniformBuffer()",
    "kind": "Method",
    "detail": "Function (# endif } TRDGUniformBuffer<TBufferStruct>*)",
    "insertText": "GetUniformBuffer()"
  },
  {
    "label": "GetShaderBinding()",
    "kind": "Method",
    "detail": "Function (} } ; template<TBufferStruct> TRDGUniformBufferBinding<TBufferStruct>)",
    "insertText": "GetShaderBinding(TRDGUniformBuffer<TBufferStruct>* InUniformBuffer)"
  },
  {
    "label": "GetStaticBinding()",
    "kind": "Method",
    "detail": "Function (} template<TBufferStruct> TRDGUniformBufferBinding<TBufferStruct>)",
    "insertText": "GetStaticBinding(TRDGUniformBuffer<TBufferStruct>* InUniformBuffer)"
  },
  {
    "label": "FRDGBufferAccess()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "FRDGBufferAccess()"
  },
  {
    "label": "FRDGBufferAccess()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FRDGBufferAccess(FRDGBuffer* InBuffer, ERHIAccess InAccess) : Buffer(InBuffer) , Access(InAccess)"
  },
  {
    "label": "GetBuffer()",
    "kind": "Method",
    "detail": "Function (} FRDGBuffer*)",
    "insertText": "GetBuffer()"
  },
  {
    "label": "static_assert()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "static_assert(IsValidAccess(InAccess), \"Buffer access is invalid.\")"
  },
  {
    "label": "TRDGBufferAccess()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TRDGBufferAccess() : FRDGBufferAccess(nullptr, InAccess)"
  },
  {
    "label": "TRDGBufferAccess()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "TRDGBufferAccess(FRDGBuffer* InBuffer) : FRDGBufferAccess(InBuffer, InAccess)"
  },
  {
    "label": "FRDGTextureAccess()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "FRDGTextureAccess()"
  },
  {
    "label": "FRDGTextureAccess()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FRDGTextureAccess(FRDGTexture* InTexture, FRDGTextureSubresourceRange InSubresourceRange, ERHIAccess InAccess) : Texture(InTexture) , SubresourceRange(InSubresourceRange) , Access(InAccess)"
  },
  {
    "label": "FRDGTextureAccess()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FRDGTextureAccess(FRDGTexture* InTexture, ERHIAccess InAccess)"
  },
  {
    "label": "FRDGTextureAccess()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FRDGTextureAccess(FRDGTextureSRV* InTextureSRV, ERHIAccess InAccess)"
  },
  {
    "label": "FRDGTextureAccess()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FRDGTextureAccess(FRDGTextureUAV* InTextureUAV, ERHIAccess InAccess)"
  },
  {
    "label": "static_assert()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "static_assert(IsValidAccess(InAccess), \"Texture access is invalid.\")"
  },
  {
    "label": "TRDGTextureAccess()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TRDGTextureAccess()"
  },
  {
    "label": "TRDGTextureAccess()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TRDGTextureAccess(FRDGTexture* InTexture, FRDGTextureSubresourceRange InSubresourceRange) : FRDGTextureAccess(InTexture, InSubresourceRange, InAccess)"
  },
  {
    "label": "TRDGTextureAccess()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "TRDGTextureAccess(FRDGTexture* InTexture) : FRDGTextureAccess(InTexture, InAccess)"
  },
  {
    "label": "TRDGTextureAccess()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "TRDGTextureAccess(FRDGTextureSRV* InTextureSRV) : FRDGTextureAccess(InTextureSRV, InAccess)"
  },
  {
    "label": "TRDGTextureAccess()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "TRDGTextureAccess(FRDGTextureUAV* InTextureUAV) : FRDGTextureAccess(InTextureUAV, InAccess)"
  },
  {
    "label": "FRenderTargetBinding()",
    "kind": "Method",
    "detail": "Function (using Super = TArray<ResourceAccessType,FRDGArrayAllocator> ; public : using Super::Super ; private : # if ! PLATFORM_64BITS uint32 _Padding ; # endif } ; using FRDGBufferAccessArray = TRDGResourceAccessArray<FRDGBufferAccess> ; using FRDGTextureAccessArray = TRDGResourceAccessArray<FRDGTextureAccess> ; struct FRenderTargetBinding {)",
    "insertText": "FRenderTargetBinding()"
  },
  {
    "label": "FRenderTargetBinding()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FRenderTargetBinding(FRDGTexture* InTexture, ERenderTargetLoadAction InLoadAction, uint8 InMipIndex = 0, int16 InArraySlice = -1) : Texture(InTexture) , LoadAction(InLoadAction) , MipIndex(InMipIndex) , ArraySlice(InArraySlice)"
  },
  {
    "label": "FRenderTargetBinding()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FRenderTargetBinding(FRDGTexture* InTexture, FRDGTexture* InResolveTexture, ERenderTargetLoadAction InLoadAction, uint8 InMipIndex = 0, int16 InArraySlice = -1) : Texture(InTexture) , ResolveTexture(InResolveTexture) , LoadAction(InLoadAction) , MipIndex(InMipIndex) , ArraySlice(InArraySlice)"
  },
  {
    "label": "GetTexture()",
    "kind": "Method",
    "detail": "Function (} FRDGTexture*)",
    "insertText": "GetTexture()"
  },
  {
    "label": "check()",
    "kind": "Method",
    "detail": "Function (Texture = InTexture ;)",
    "insertText": "check(Validate())"
  },
  {
    "label": "SetResolveTexture()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetResolveTexture(FRDGTexture* InTexture)"
  },
  {
    "label": "SetLoadAction()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetLoadAction(ERenderTargetLoadAction InLoadAction)"
  },
  {
    "label": "SetMipIndex()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetMipIndex(uint8 InMipIndex)"
  },
  {
    "label": "SetArraySlice()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetArraySlice(int16 InArraySlice)"
  },
  {
    "label": "SetMipIndex()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetMipIndex(InMipIndex)"
  },
  {
    "label": "Validate()",
    "kind": "Method",
    "detail": "Function (} private : TAlignedShaderParameterPtr<FRDGTexture*> Texture = nullptr ; TAlignedShaderParameterPtr<FRDGTexture*> ResolveTexture = nullptr ; ERenderTargetLoadAction LoadAction = ERenderTargetLoadAction::ENoAction ; uint8 MipIndex = 0 ; int16 ArraySlice = - 1 ; bool)",
    "insertText": "Validate()"
  },
  {
    "label": "FDepthStencilBinding()",
    "kind": "Method",
    "detail": "Function (} ; struct FDepthStencilBinding {)",
    "insertText": "FDepthStencilBinding()"
  },
  {
    "label": "FDepthStencilBinding()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FDepthStencilBinding(FRDGTexture* InTexture, FRDGTexture* InResolveTexture, ERenderTargetLoadAction InDepthLoadAction, ERenderTargetLoadAction InStencilLoadAction, FExclusiveDepthStencil InDepthStencilAccess) : Texture(InTexture) , ResolveTexture(InResolveTexture) , DepthLoadAction(InDepthLoadAction) , StencilLoadAction(InStencilLoadAction) , DepthStencilAccess(InDepthStencilAccess)"
  },
  {
    "label": "FDepthStencilBinding()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FDepthStencilBinding(FRDGTexture* InTexture, ERenderTargetLoadAction InDepthLoadAction, FExclusiveDepthStencil InDepthStencilAccess) : Texture(InTexture) , ResolveTexture(nullptr) , DepthLoadAction(InDepthLoadAction) , DepthStencilAccess(InDepthStencilAccess)"
  },
  {
    "label": "FDepthStencilBinding()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FDepthStencilBinding(FRDGTexture* InTexture, FRDGTexture* InResolveTexture, ERenderTargetLoadAction InDepthLoadAction, FExclusiveDepthStencil InDepthStencilAccess) : Texture(InTexture) , ResolveTexture(InResolveTexture) , DepthLoadAction(InDepthLoadAction) , DepthStencilAccess(InDepthStencilAccess)"
  },
  {
    "label": "SetDepthStencilAccess()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetDepthStencilAccess(FExclusiveDepthStencil InAccess)"
  },
  {
    "label": "SetDepthLoadAction()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetDepthLoadAction(ERenderTargetLoadAction InAction)"
  },
  {
    "label": "SetStencilLoadAction()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetStencilLoadAction(ERenderTargetLoadAction InAction)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (TStaticArray<FRenderTargetBinding,MaxSimultaneousRenderTargets> Output ; FDepthStencilBinding DepthStencil ; FResolveRect ResolveRect ; uint32 NumOcclusionQueries = 0 ; ESubpassHint SubpassHint = ESubpassHint::None ; uint8 MultiViewCount = 0 ; FRDGTexture* ShadingRateTexture = nullptr ; FRenderTargetBinding&)",
    "insertText": "operator(uint32 Index)"
  },
  {
    "label": "Function()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Function(Output[Index])"
  },
  {
    "label": "Enumerate()",
    "kind": "Method",
    "detail": "Function (} else { break ; } } } template<TFunction> void)",
    "insertText": "Enumerate(TFunction Function)"
  },
  {
    "label": "GetActiveCount()",
    "kind": "Method",
    "detail": "Function (} else { break ; } } } uint32)",
    "insertText": "GetActiveCount()"
  },
  {
    "label": "for()",
    "kind": "Method",
    "detail": "Function (uint32 Count = 0 ;)",
    "insertText": "for(; Output[Count].GetTexture() != nullptr; ++Count)"
  },
  {
    "label": "CanMergeBefore()",
    "kind": "Method",
    "detail": "Function (} ; return Count ; } bool)",
    "insertText": "CanMergeBefore(const FRenderTargetBindingSlots& Other)"
  },
  {
    "label": "TShaderResourceParameterArray()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "TShaderResourceParameterArray()"
  },
  {
    "label": "alignof()",
    "kind": "Method",
    "detail": "Function (} } } ; template<TypeParameter> struct TShaderParameterTypeInfo { EUniformBufferBaseType BaseType = UBMT_INVALID ; int32 NumRows = 1 ; int32 NumColumns = 1 ; int32 NumElements = 0 ; int32 Alignment =)",
    "insertText": "alignof(TypeParameter)"
  },
  {
    "label": "static_assert()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "static_assert(((sizeof(T) % 16) == 0), \"Array element size does not satisfy 16 byte alignment requirements. Try packing it with other values in a vector or using SHADER_PARAMETER_SCALAR_ARRAY.\")"
  },
  {
    "label": "INTERNAL_UNIFORM_BUFFER_STRUCT_GET_STRUCT_METADATA()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "INTERNAL_UNIFORM_BUFFER_STRUCT_GET_STRUCT_METADATA(StructTypeName)"
  },
  {
    "label": "INTERNAL_SHADER_PARAMETER_GET_STRUCT_METADATA()",
    "kind": "Method",
    "detail": "Function (} # define)",
    "insertText": "INTERNAL_SHADER_PARAMETER_GET_STRUCT_METADATA(StructTypeName)"
  },
  {
    "label": "StaticStructMetadata()",
    "kind": "Method",
    "detail": "Function (\\ FShaderParametersMetadata)",
    "insertText": "StaticStructMetadata(\\ FShaderParametersMetadata::EUseCase::ShaderParameterStruct, \\ EUniformBufferBindingFlags::Shader, \\ TEXT(#StructTypeName), \\ TEXT(#StructTypeName), \\ nullptr, \\ nullptr, \\ FTypeInfo::FileName, \\ FTypeInfo::FileLine, \\ sizeof(StructTypeName), \\ StructTypeName::zzGetMembers())"
  },
  {
    "label": "RHICreateUniformBuffer()",
    "kind": "Method",
    "detail": "Function (\\ return& StaticStructMetadata ; \\ } # define INTERNAL_SHADER_PARAMETER_STRUCT_CREATE_UNIFORM_BUFFER return nullptr ; # define INTERNAL_UNIFORM_BUFFER_STRUCT_CREATE_UNIFORM_BUFFER return)",
    "insertText": "RHICreateUniformBuffer(&InContents, FTypeInfo::GetStructMetadata()->GetLayoutPtr(), InUsage)"
  },
  {
    "label": "INTERNAL_SHADER_PARAMETER_STRUCT_BEGIN()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "INTERNAL_SHADER_PARAMETER_STRUCT_BEGIN(StructTypeName,PrefixKeywords,ConstructorSuffix,GetStructMetadataScope,CreateUniformBufferImpl) \\ MS_ALIGN(SHADER_PARAMETER_STRUCT_ALIGNMENT)"
  },
  {
    "label": "StructTypeName()",
    "kind": "Method",
    "detail": "Function (\\ public : \\)",
    "insertText": "StructTypeName()"
  },
  {
    "label": "UE_LOG_SOURCE_FILE()",
    "kind": "Method",
    "detail": "Function (\\ int32 NumRows = 1 ; \\ int32 NumColumns = 1 ; \\ int32 NumElements = 0 ; \\ int32 Alignment = SHADER_PARAMETER_STRUCT_ALIGNMENT ; \\ bool bIsStoredInConstantBuffer = true ; \\ const ANSICHAR* const FileName =)",
    "insertText": "UE_LOG_SOURCE_FILE(__builtin_FILE())"
  },
  {
    "label": "__builtin_LINE()",
    "kind": "Method",
    "detail": "Function (\\ int32 FileLine =)",
    "insertText": "__builtin_LINE()"
  },
  {
    "label": "CreateUniformBuffer()",
    "kind": "Method",
    "detail": "Function (\\ FUniformBufferRHIRef)",
    "insertText": "CreateUniformBuffer(const StructTypeName& InContents, EUniformBufferUsage InUsage)"
  },
  {
    "label": "zzFuncPtr()",
    "kind": "Method",
    "detail": "Function (\\ CreateUniformBufferImpl \\ } \\ private : \\ typedef StructTypeName zzTThisStruct ; \\ struct zzFirstMemberId { enum { HasDeclaredResource = 0 } ; } ; \\ typedef void* zzFuncPtr ; \\ typedef)",
    "insertText": "zzFuncPtr(*zzMemberFunc)(zzFirstMemberId, TArray<FShaderParametersMetadata::FMember>*)"
  },
  {
    "label": "zzAppendMemberGetPrev()",
    "kind": "Method",
    "detail": "Function (\\ zzFuncPtr)",
    "insertText": "zzAppendMemberGetPrev(zzFirstMemberId, TArray<FShaderParametersMetadata::FMember>*)"
  },
  {
    "label": "INTERNAL_SHADER_PARAMETER_EXPLICIT()",
    "kind": "Method",
    "detail": "Function (\\ return nullptr ; \\ } \\ typedef zzFirstMemberId # define)",
    "insertText": "INTERNAL_SHADER_PARAMETER_EXPLICIT(BaseType,TypeInfo,MemberType,MemberName,ArrayDecl,DefaultValue,Precision,OptionalShaderType,IsMemberStruct)"
  },
  {
    "label": "static_assert()",
    "kind": "Method",
    "detail": "Function (\\ public : \\ TypeInfo::TAlignedType MemberName DefaultValue ; \\)",
    "insertText": "static_assert(BaseType != UBMT_INVALID, \"Invalid type \" #MemberType \" of member \" #MemberName \".\")"
  },
  {
    "label": "zzAppendMemberGetPrev()",
    "kind": "Method",
    "detail": "Function (\\ private : \\ struct zzNextMemberId # # MemberName { enum { HasDeclaredResource = zzMemberId # # MemberName::HasDeclaredResource | | ! TypeInfo::bIsStoredInConstantBuffer } ; } ; \\ zzFuncPtr)",
    "insertText": "zzAppendMemberGetPrev(zzNextMemberId##MemberName, TArray<FShaderParametersMetadata::FMember>* Members)"
  },
  {
    "label": "static_assert()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "static_assert(TypeInfo::bIsStoredInConstantBuffer || TIsArrayOrRefOfTypeByPredicate<decltype(OptionalShaderType), TIsCharEncodingCompatibleWithTCHAR>::Value, \"No shader type for \" #MemberName \".\")"
  },
  {
    "label": "static_assert()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "static_assert(\\ (STRUCT_OFFSET(zzTThisStruct, MemberName) & (TypeInfo::Alignment - 1)) == 0, \\ \"Misaligned uniform buffer struct member \" #MemberName \".\")"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (\\ Members ->)",
    "insertText": "Add(FShaderParametersMetadata::FMember( \\ TEXT(#MemberName), \\ (const TCHAR*)OptionalShaderType, \\ __LINE__, \\ STRUCT_OFFSET(zzTThisStruct,MemberName), \\ EUniformBufferBaseType(BaseType), \\ Precision, \\ TypeInfo::NumRows, \\ TypeInfo::NumColumns, \\ TypeInfo::NumElements, \\ TypeInfo::GetStructMetadata() \\ ))"
  },
  {
    "label": "zzFuncPtr()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "zzFuncPtr(*PrevFunc)(zzMemberId##MemberName, TArray<FShaderParametersMetadata::FMember>*)"
  },
  {
    "label": "return()",
    "kind": "Method",
    "detail": "Function (\\ PrevFunc = zzAppendMemberGetPrev ; \\)",
    "insertText": "return(zzFuncPtr)"
  },
  {
    "label": "FindUniformBufferStructByName()",
    "kind": "Method",
    "detail": "Function (\\ } \\ typedef zzNextMemberId # # MemberName FShaderParametersMetadata*)",
    "insertText": "FindUniformBufferStructByName(const TCHAR* StructName)"
  },
  {
    "label": "FindUniformBufferStructByFName()",
    "kind": "Method",
    "detail": "Function (FShaderParametersMetadata*)",
    "insertText": "FindUniformBufferStructByFName(FName StructName)"
  },
  {
    "label": "FindUniformBufferStructByLayoutHash()",
    "kind": "Method",
    "detail": "Function (FShaderParametersMetadata*)",
    "insertText": "FindUniformBufferStructByLayoutHash(uint32 Hash)"
  },
  {
    "label": "FindUniformBufferStructByShaderVariableName()",
    "kind": "Method",
    "detail": "Function (FShaderParametersMetadata*)",
    "insertText": "FindUniformBufferStructByShaderVariableName(const FHashedName& Name)"
  },
  {
    "label": "BuildShaderBindingLayout()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildShaderBindingLayout(TConstArrayView<FShaderParametersMetadata*> UniformBuffers, EShaderBindingLayoutFlags BaseShaderBindingLayoutFlags, FShaderBindingLayoutContainer& OutShaderBindingLayoutContainer)"
  },
  {
    "label": "BEGIN_SHADER_PARAMETER_STRUCT()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "BEGIN_SHADER_PARAMETER_STRUCT(StructTypeName, PrefixKeywords) \\ INTERNAL_SHADER_PARAMETER_STRUCT_BEGIN(StructTypeName, PrefixKeywords, {}, INTERNAL_SHADER_PARAMETER_GET_STRUCT_METADATA(StructTypeName), INTERNAL_SHADER_PARAMETER_STRUCT_CREATE_UNIFORM_BUFFER) #define END_SHADER_PARAMETER_STRUCT()"
  },
  {
    "label": "zzGetMembers()",
    "kind": "Method",
    "detail": "Function (\\ public : \\ TArray<FShaderParametersMetadata::FMember>)",
    "insertText": "zzGetMembers()"
  },
  {
    "label": "zzFuncPtr()",
    "kind": "Method",
    "detail": "Function (\\ TArray<FShaderParametersMetadata::FMember> Members ; \\)",
    "insertText": "zzFuncPtr(*LastFunc)(zzLastMemberId, TArray<FShaderParametersMetadata::FMember>*)"
  },
  {
    "label": "Ptr()",
    "kind": "Method",
    "detail": "Function (\\ LastFunc = zzAppendMemberGetPrev ; \\ zzFuncPtr)",
    "insertText": "Ptr(zzFuncPtr)"
  },
  {
    "label": "zzMemberFunc()",
    "kind": "Method",
    "detail": "Function (\\ do \\ { \\ Ptr = reinterpret_cast<)",
    "insertText": "zzMemberFunc(Ptr)(zzFirstMemberId(), &Members)"
  },
  {
    "label": "while()",
    "kind": "Method",
    "detail": "Function (\\ })",
    "insertText": "while(Ptr)"
  },
  {
    "label": "Reverse()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "Reverse(Members)"
  },
  {
    "label": "GCC_ALIGN()",
    "kind": "Method",
    "detail": "Function (\\ return Members ; \\ } \\ })",
    "insertText": "GCC_ALIGN(SHADER_PARAMETER_STRUCT_ALIGNMENT)"
  },
  {
    "label": "BEGIN_UNIFORM_BUFFER_STRUCT()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "BEGIN_UNIFORM_BUFFER_STRUCT(StructTypeName, PrefixKeywords) \\ DECLARE_UNIFORM_BUFFER_STRUCT(StructTypeName, PrefixKeywords) \\ INTERNAL_SHADER_PARAMETER_STRUCT_BEGIN(StructTypeName,PrefixKeywords,{} INTERNAL_BEGIN_UNIFORM_BUFFER_STRUCT, INTERNAL_UNIFORM_BUFFER_STRUCT_GET_STRUCT_METADATA(StructTypeName), INTERNAL_UNIFORM_BUFFER_STRUCT_CREATE_UNIFORM_BUFFER) #define BEGIN_UNIFORM_BUFFER_STRUCT_WITH_CONSTRUCTOR(StructTypeName, PrefixKeywords) \\ DECLARE_UNIFORM_BUFFER_STRUCT(StructTypeName, PrefixKeywords) \\ INTERNAL_SHADER_PARAMETER_STRUCT_BEGIN(StructTypeName,PrefixKeywords,; INTERNAL_BEGIN_UNIFORM_BUFFER_STRUCT, INTERNAL_UNIFORM_BUFFER_STRUCT_GET_STRUCT_METADATA(StructTypeName), INTERNAL_UNIFORM_BUFFER_STRUCT_CREATE_UNIFORM_BUFFER) #define END_UNIFORM_BUFFER_STRUCT() \\ END_SHADER_PARAMETER_STRUCT()"
  },
  {
    "label": "FShaderParametersMetadataRegistration()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "FShaderParametersMetadataRegistration(TFunctionRef<const FShaderParametersMetadata* ()> LazyShaderParametersMetadataAccessor) : LazyShaderParametersMetadataAccessor(LazyShaderParametersMetadataAccessor)"
  },
  {
    "label": "GetInstances()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetInstances().Add(this)"
  },
  {
    "label": "GetInstances()",
    "kind": "Method",
    "detail": "Function (} TArray<const FShaderParametersMetadataRegistration*>&)",
    "insertText": "GetInstances()"
  },
  {
    "label": "CommitAll()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CommitAll()"
  },
  {
    "label": "IsReadyForRegistration()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsReadyForRegistration()"
  },
  {
    "label": "FShaderParametersMetadata()",
    "kind": "Method",
    "detail": "Function (private : TFunctionRef<const)",
    "insertText": "FShaderParametersMetadata()"
  },
  {
    "label": "IMPLEMENT_UNIFORM_BUFFER_STRUCT_EX()",
    "kind": "Method",
    "detail": "Function (} ; # define)",
    "insertText": "IMPLEMENT_UNIFORM_BUFFER_STRUCT_EX(StructTypeName,ShaderVariableName,UsageFlags) \\ const FShaderParametersMetadata* GetForwardDeclaredShaderParametersStructMetadata(const StructTypeName* DummyPtr)"
  },
  {
    "label": "ensureMsgf()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "ensureMsgf(FShaderParametersMetadataRegistration::IsReadyForRegistration(), TEXT(\"GetStructMetadata should not be called from a static initializer\"))"
  },
  {
    "label": "StaticStructMetadata()",
    "kind": "Method",
    "detail": "Function (\\ const FShaderParametersMetadata)",
    "insertText": "StaticStructMetadata(\\ FShaderParametersMetadata::EUseCase::UniformBuffer, \\ EUniformBufferBindingFlags::Shader, \\ TEXT(#StructTypeName), \\ TEXT(#StructTypeName), \\ TEXT(ShaderVariableName), \\ nullptr, \\ StructTypeName::FTypeInfo::FileName, \\ StructTypeName::FTypeInfo::FileLine, \\ sizeof(StructTypeName), \\ StructTypeName::zzGetMembers(), \\ false, \\ nullptr, \\ UsageFlags)"
  },
  {
    "label": "IMPLEMENT_UNIFORM_BUFFER_STRUCT()",
    "kind": "Method",
    "detail": "Function (StructTypeName::GetStructMetadata } } ; # define)",
    "insertText": "IMPLEMENT_UNIFORM_BUFFER_STRUCT(StructTypeName,ShaderVariableName) \\ IMPLEMENT_UNIFORM_BUFFER_STRUCT_EX(StructTypeName,ShaderVariableName,FShaderParametersMetadata::EUsageFlags::None) #define IMPLEMENT_UNIFORM_BUFFER_ALIAS_STRUCT(StructTypeName, UniformBufferAlias) \\ static const FShaderParametersMetadata UniformBufferAlias( \\ FShaderParametersMetadata::EUseCase::UniformBuffer, \\ EUniformBufferBindingFlags::Shader, \\ TEXT(#StructTypeName), \\ TEXT(#StructTypeName), \\ TEXT(#UniformBufferAlias), \\ nullptr, \\ StructTypeName::FTypeInfo::FileName, \\ StructTypeName::FTypeInfo::FileLine, \\ sizeof(StructTypeName), \\ StructTypeName::zzGetMembers()) #define IMPLEMENT_STATIC_UNIFORM_BUFFER_STRUCT_EX(StructTypeName,ShaderVariableName,StaticSlotName,BindingFlagsEnum) \\ static_assert(EnumHasAnyFlags(EUniformBufferBindingFlags::BindingFlagsEnum, EUniformBufferBindingFlags::Static), \"Shader bindings must include 'Static'.\")"
  },
  {
    "label": "GetForwardDeclaredShaderParametersStructMetadata()",
    "kind": "Method",
    "detail": "Function (\\ const FShaderParametersMetadata*)",
    "insertText": "GetForwardDeclaredShaderParametersStructMetadata(const StructTypeName* DummyPtr)"
  },
  {
    "label": "StaticStructMetadata()",
    "kind": "Method",
    "detail": "Function (\\ const FShaderParametersMetadata)",
    "insertText": "StaticStructMetadata(\\ FShaderParametersMetadata::EUseCase::UniformBuffer, \\ EUniformBufferBindingFlags::BindingFlagsEnum, \\ TEXT(#StructTypeName), \\ TEXT(#StructTypeName), \\ TEXT(ShaderVariableName), \\ TEXT(#StaticSlotName), \\ StructTypeName::FTypeInfo::FileName, \\ StructTypeName::FTypeInfo::FileLine, \\ sizeof(StructTypeName), \\ StructTypeName::zzGetMembers())"
  },
  {
    "label": "IMPLEMENT_STATIC_UNIFORM_BUFFER_STRUCT_EX2()",
    "kind": "Method",
    "detail": "Function (StructTypeName::GetStructMetadata } } ; # define)",
    "insertText": "IMPLEMENT_STATIC_UNIFORM_BUFFER_STRUCT_EX2(StructTypeName,ShaderVariableName,StaticSlotName,BindingFlagsEnum,UsageFlags) \\ static_assert(EnumHasAnyFlags(EUniformBufferBindingFlags::BindingFlagsEnum, EUniformBufferBindingFlags::Static), \"Shader bindings must include 'Static'.\")"
  },
  {
    "label": "StaticStructMetadata()",
    "kind": "Method",
    "detail": "Function (\\ const FShaderParametersMetadata)",
    "insertText": "StaticStructMetadata(\\ FShaderParametersMetadata::EUseCase::UniformBuffer, \\ EUniformBufferBindingFlags::BindingFlagsEnum, \\ TEXT(#StructTypeName), \\ TEXT(#StructTypeName), \\ TEXT(ShaderVariableName), \\ TEXT(#StaticSlotName), \\ StructTypeName::FTypeInfo::FileName, \\ StructTypeName::FTypeInfo::FileLine, \\ sizeof(StructTypeName), \\ StructTypeName::zzGetMembers(), \\ false, \\ nullptr, \\ UsageFlags)"
  },
  {
    "label": "IMPLEMENT_STATIC_AND_SHADER_UNIFORM_BUFFER_STRUCT()",
    "kind": "Method",
    "detail": "Function (StructTypeName::GetStructMetadata } } ; # define)",
    "insertText": "IMPLEMENT_STATIC_AND_SHADER_UNIFORM_BUFFER_STRUCT(StructTypeName,ShaderVariableName,StaticSlotName) \\ IMPLEMENT_STATIC_UNIFORM_BUFFER_STRUCT_EX(StructTypeName, ShaderVariableName, StaticSlotName, StaticAndShader) #define IMPLEMENT_STATIC_AND_SHADER_UNIFORM_BUFFER_STRUCT_EX(StructTypeName,ShaderVariableName,StaticSlotName,UsageFlags) \\ IMPLEMENT_STATIC_UNIFORM_BUFFER_STRUCT_EX2(StructTypeName, ShaderVariableName, StaticSlotName, StaticAndShader, UsageFlags) #define IMPLEMENT_STATIC_UNIFORM_BUFFER_STRUCT(StructTypeName,ShaderVariableName,StaticSlotName) \\ IMPLEMENT_STATIC_UNIFORM_BUFFER_STRUCT_EX(StructTypeName, ShaderVariableName, StaticSlotName, Static) #define IMPLEMENT_STATIC_UNIFORM_BUFFER_SLOT(SlotName) \\ static FUniformBufferStaticSlotRegistrar UniformBufferStaticSlot_##SlotName(TEXT(#SlotName))"
  },
  {
    "label": "SHADER_PARAMETER()",
    "kind": "Method",
    "detail": "Function (# define BEGIN_GLOBAL_SHADER_PARAMETER_STRUCT \\ BEGIN_UNIFORM_BUFFER_STRUCT # define BEGIN_GLOBAL_SHADER_PARAMETER_STRUCT_WITH_CONSTRUCTOR \\ BEGIN_UNIFORM_BUFFER_STRUCT_WITH_CONSTRUCTOR # define END_GLOBAL_SHADER_PARAMETER_STRUCT \\ END_UNIFORM_BUFFER_STRUCT # define IMPLEMENT_GLOBAL_SHADER_PARAMETER_STRUCT \\ IMPLEMENT_UNIFORM_BUFFER_STRUCT # define IMPLEMENT_GLOBAL_SHADER_PARAMETER_ALIAS_STRUCT \\ IMPLEMENT_UNIFORM_BUFFER_ALIAS_STRUCT # define)",
    "insertText": "SHADER_PARAMETER(MemberType,MemberName) \\ SHADER_PARAMETER_EX(MemberType,MemberName,EShaderPrecisionModifier::Float) #define SHADER_PARAMETER_EX(MemberType,MemberName,Precision) \\ INTERNAL_SHADER_PARAMETER_EXPLICIT(TShaderParameterTypeInfo<MemberType>::BaseType, TShaderParameterTypeInfo<MemberType>, MemberType,MemberName,,,Precision,TEXT(\"\"),false) #define SHADER_PARAMETER_ARRAY(MemberType,MemberName,ArrayDecl) \\ SHADER_PARAMETER_ARRAY_EX(MemberType,MemberName,ArrayDecl,EShaderPrecisionModifier::Float) #define SHADER_PARAMETER_ARRAY_EX(MemberType,MemberName,ArrayDecl,Precision) \\ INTERNAL_SHADER_PARAMETER_EXPLICIT(TShaderParameterTypeInfo<MemberType ArrayDecl>::BaseType, TShaderParameterTypeInfo<MemberType ArrayDecl>, MemberType,MemberName,ArrayDecl,,Precision,TEXT(\"\"),false) #define SHADER_PARAMETER_TEXTURE(ShaderType,MemberName) \\ INTERNAL_SHADER_PARAMETER_EXPLICIT(UBMT_TEXTURE, TShaderResourceParameterTypeInfo<FRHITexture*>, FRHITexture*,MemberName,, = nullptr,EShaderPrecisionModifier::Float,TEXT(#ShaderType),false) #define SHADER_PARAMETER_TEXTURE_ARRAY(ShaderType,MemberName, ArrayDecl) \\ INTERNAL_SHADER_PARAMETER_EXPLICIT(UBMT_TEXTURE, TShaderResourceParameterTypeInfo<FRHITexture* ArrayDecl>, FRHITexture*,MemberName,ArrayDecl,,EShaderPrecisionModifier::Float,TEXT(#ShaderType),false) #define SHADER_PARAMETER_SRV(ShaderType,MemberName) \\ INTERNAL_SHADER_PARAMETER_EXPLICIT(UBMT_SRV, TShaderResourceParameterTypeInfo<FRHIShaderResourceView*>, FRHIShaderResourceView*,MemberName,, = nullptr,EShaderPrecisionModifier::Float,TEXT(#ShaderType),false) #define SHADER_PARAMETER_SRV_ARRAY(ShaderType,MemberName, ArrayDecl) \\ INTERNAL_SHADER_PARAMETER_EXPLICIT(UBMT_SRV, TShaderResourceParameterTypeInfo<FRHIShaderResourceView* ArrayDecl>, FRHIShaderResourceView*,MemberName,ArrayDecl,,EShaderPrecisionModifier::Float,TEXT(#ShaderType),false) #define SHADER_PARAMETER_UAV(ShaderType,MemberName) \\ INTERNAL_SHADER_PARAMETER_EXPLICIT(UBMT_UAV, TShaderResourceParameterTypeInfo<FRHIUnorderedAccessView*>, FRHIUnorderedAccessView*,MemberName,, = nullptr,EShaderPrecisionModifier::Float,TEXT(#ShaderType),false) #define SHADER_PARAMETER_SAMPLER(ShaderType,MemberName) \\ INTERNAL_SHADER_PARAMETER_EXPLICIT(UBMT_SAMPLER, TShaderResourceParameterTypeInfo<FRHISamplerState*>, FRHISamplerState*,MemberName,, = nullptr,EShaderPrecisionModifier::Float,TEXT(#ShaderType),false) #define SHADER_PARAMETER_SAMPLER_ARRAY(ShaderType,MemberName, ArrayDecl) \\ INTERNAL_SHADER_PARAMETER_EXPLICIT(UBMT_SAMPLER, TShaderResourceParameterTypeInfo<FRHISamplerState* ArrayDecl>, FRHISamplerState*,MemberName,ArrayDecl,,EShaderPrecisionModifier::Float,TEXT(#ShaderType),false) #define SHADER_PARAMETER_RDG_TEXTURE(ShaderType,MemberName) \\ INTERNAL_SHADER_PARAMETER_EXPLICIT(UBMT_RDG_TEXTURE, TShaderResourceParameterTypeInfo<FRDGTexture*>, FRDGTexture*,MemberName,, = nullptr,EShaderPrecisionModifier::Float,TEXT(#ShaderType),false) #define SHADER_PARAMETER_RDG_TEXTURE_ARRAY(ShaderType,MemberName, ArrayDecl) \\ INTERNAL_SHADER_PARAMETER_EXPLICIT(UBMT_RDG_TEXTURE, TShaderResourceParameterTypeInfo<FRDGTexture* ArrayDecl>, FRDGTexture*,MemberName,ArrayDecl,,EShaderPrecisionModifier::Float,TEXT(#ShaderType),false) #define SHADER_PARAMETER_RDG_TEXTURE_SRV(ShaderType,MemberName) \\ INTERNAL_SHADER_PARAMETER_EXPLICIT(UBMT_RDG_TEXTURE_SRV, TShaderResourceParameterTypeInfo<FRDGTextureSRV*>, FRDGTextureSRV*,MemberName,, = nullptr,EShaderPrecisionModifier::Float,TEXT(#ShaderType),false) #define SHADER_PARAMETER_RDG_TEXTURE_SRV_ARRAY(ShaderType,MemberName, ArrayDecl) \\ INTERNAL_SHADER_PARAMETER_EXPLICIT(UBMT_RDG_TEXTURE_SRV, TShaderResourceParameterTypeInfo<FRDGTextureSRV* ArrayDecl>, FRDGTextureSRV*,MemberName,ArrayDecl,,EShaderPrecisionModifier::Float,TEXT(#ShaderType),false) #define SHADER_PARAMETER_RDG_TEXTURE_NON_PIXEL_SRV(ShaderType,MemberName) \\ INTERNAL_SHADER_PARAMETER_EXPLICIT(UBMT_RDG_TEXTURE_NON_PIXEL_SRV, TShaderResourceParameterTypeInfo<FRDGTextureSRV*>, FRDGTextureSRV*,MemberName,, = nullptr,EShaderPrecisionModifier::Float,TEXT(#ShaderType),false) #define SHADER_PARAMETER_RDG_TEXTURE_NON_PIXEL_SRV_ARRAY(ShaderType,MemberName, ArrayDecl) \\ INTERNAL_SHADER_PARAMETER_EXPLICIT(UBMT_RDG_TEXTURE_NON_PIXEL_SRV, TShaderResourceParameterTypeInfo<FRDGTextureSRV* ArrayDecl>, FRDGTextureSRV*,MemberName,ArrayDecl,,EShaderPrecisionModifier::Float,TEXT(#ShaderType),false) #define SHADER_PARAMETER_RDG_TEXTURE_UAV(ShaderType,MemberName) \\ INTERNAL_SHADER_PARAMETER_EXPLICIT(UBMT_RDG_TEXTURE_UAV, TShaderResourceParameterTypeInfo<FRDGTextureUAV*>, FRDGTextureUAV*,MemberName,, = nullptr,EShaderPrecisionModifier::Float,TEXT(#ShaderType),false) #define SHADER_PARAMETER_RDG_TEXTURE_UAV_ARRAY(ShaderType,MemberName, ArrayDecl) \\ INTERNAL_SHADER_PARAMETER_EXPLICIT(UBMT_RDG_TEXTURE_UAV, TShaderResourceParameterTypeInfo<FRDGTextureUAV* ArrayDecl>, FRDGTextureUAV*,MemberName,ArrayDecl,,EShaderPrecisionModifier::Float,TEXT(#ShaderType),false) #define SHADER_PARAMETER_RDG_BUFFER_SRV(ShaderType,MemberName) \\ INTERNAL_SHADER_PARAMETER_EXPLICIT(UBMT_RDG_BUFFER_SRV, TShaderResourceParameterTypeInfo<FRDGBufferSRV*>, FRDGBufferSRV*,MemberName,, = nullptr,EShaderPrecisionModifier::Float,TEXT(#ShaderType),false) #define SHADER_PARAMETER_RDG_BUFFER_SRV_ARRAY(ShaderType,MemberName, ArrayDecl) \\ INTERNAL_SHADER_PARAMETER_EXPLICIT(UBMT_RDG_BUFFER_SRV, TShaderResourceParameterTypeInfo<FRDGBufferSRV* ArrayDecl>, FRDGBufferSRV*,MemberName,ArrayDecl,,EShaderPrecisionModifier::Float,TEXT(#ShaderType),false) #define SHADER_PARAMETER_RDG_BUFFER_UAV(ShaderType,MemberName) \\ INTERNAL_SHADER_PARAMETER_EXPLICIT(UBMT_RDG_BUFFER_UAV, TShaderResourceParameterTypeInfo<FRDGBufferUAV*>, FRDGBufferUAV*,MemberName,, = nullptr,EShaderPrecisionModifier::Float,TEXT(#ShaderType),false) #define SHADER_PARAMETER_RDG_BUFFER_UAV_ARRAY(ShaderType,MemberName, ArrayDecl) \\ INTERNAL_SHADER_PARAMETER_EXPLICIT(UBMT_RDG_BUFFER_UAV, TShaderResourceParameterTypeInfo<FRDGBufferUAV* ArrayDecl>, FRDGBufferUAV*,MemberName,ArrayDecl,,EShaderPrecisionModifier::Float,TEXT(#ShaderType),false) #define SHADER_PARAMETER_RDG_UNIFORM_BUFFER(StructType, MemberName) \\ INTERNAL_SHADER_PARAMETER_EXPLICIT(UBMT_RDG_UNIFORM_BUFFER, TShaderParameterTypeInfo<TRDGUniformBufferBinding<StructType>>, TRDGUniformBufferBinding<StructType>,MemberName,,,EShaderPrecisionModifier::Float,TEXT(#StructType),false) #define SHADER_PARAMETER_STRUCT(StructType,MemberName) \\ INTERNAL_SHADER_PARAMETER_EXPLICIT(UBMT_NESTED_STRUCT, StructType::FTypeInfo, StructType, MemberName,,,EShaderPrecisionModifier::Float,TEXT(#StructType),true) #define SHADER_PARAMETER_STRUCT_ARRAY(StructType,MemberName, ArrayDecl) \\ INTERNAL_SHADER_PARAMETER_EXPLICIT(UBMT_NESTED_STRUCT, TShaderParameterStructTypeInfo<StructType ArrayDecl>, StructType, MemberName,ArrayDecl,,EShaderPrecisionModifier::Float,TEXT(#StructType),true) #define SHADER_PARAMETER_STRUCT_INCLUDE(StructType,MemberName) \\ INTERNAL_SHADER_PARAMETER_EXPLICIT(UBMT_INCLUDED_STRUCT, StructType::FTypeInfo, StructType, MemberName,,,EShaderPrecisionModifier::Float,TEXT(#StructType),true) #define SHADER_PARAMETER_STRUCT_REF(StructType,MemberName) \\ INTERNAL_SHADER_PARAMETER_EXPLICIT(UBMT_REFERENCED_STRUCT, TShaderParameterTypeInfo<TUniformBufferBinding<StructType>>, TUniformBufferBinding<StructType>,MemberName,,,EShaderPrecisionModifier::Float,TEXT(#StructType),false) #define RDG_BUFFER_ACCESS(MemberName, Access) \\ INTERNAL_SHADER_PARAMETER_EXPLICIT(UBMT_RDG_BUFFER_ACCESS, TRDGResourceAccessTypeInfo<TRDGBufferAccess<Access>>, TRDGBufferAccess<Access>,MemberName,,,EShaderPrecisionModifier::Float,TEXT(\"\"),false) #define RDG_BUFFER_ACCESS_DYNAMIC(MemberName) \\ INTERNAL_SHADER_PARAMETER_EXPLICIT(UBMT_RDG_BUFFER_ACCESS, TRDGResourceAccessTypeInfo<FRDGBufferAccess>, FRDGBufferAccess,MemberName,,,EShaderPrecisionModifier::Float,TEXT(\"\"),false) #define RDG_BUFFER_ACCESS_ARRAY(MemberName) \\ INTERNAL_SHADER_PARAMETER_EXPLICIT(UBMT_RDG_BUFFER_ACCESS_ARRAY, TRDGResourceAccessTypeInfo<FRDGBufferAccessArray>, FRDGBufferAccessArray,MemberName,,,EShaderPrecisionModifier::Float,TEXT(\"\"),false) #define RDG_TEXTURE_ACCESS(MemberName, Access) \\ INTERNAL_SHADER_PARAMETER_EXPLICIT(UBMT_RDG_TEXTURE_ACCESS, TRDGTextureAccessTypeInfo<TRDGTextureAccess<Access>>, TRDGTextureAccess<Access>,MemberName,,,EShaderPrecisionModifier::Float,TEXT(\"\"),false) #define RDG_TEXTURE_ACCESS_DYNAMIC(MemberName) \\ INTERNAL_SHADER_PARAMETER_EXPLICIT(UBMT_RDG_TEXTURE_ACCESS, TRDGTextureAccessTypeInfo<FRDGTextureAccess>, FRDGTextureAccess,MemberName,,,EShaderPrecisionModifier::Float,TEXT(\"\"),false) #define RDG_TEXTURE_ACCESS_ARRAY(MemberName) \\ INTERNAL_SHADER_PARAMETER_EXPLICIT(UBMT_RDG_TEXTURE_ACCESS_ARRAY, TRDGResourceAccessTypeInfo<FRDGTextureAccessArray>, FRDGTextureAccessArray,MemberName,,,EShaderPrecisionModifier::Float,TEXT(\"\"),false) #define RENDER_TARGET_BINDING_SLOTS() \\ INTERNAL_SHADER_PARAMETER_EXPLICIT(UBMT_RENDER_TARGET_BINDING_SLOTS, FRenderTargetBindingSlots::FTypeInfo, FRenderTargetBindingSlots,RenderTargets,,,EShaderPrecisionModifier::Float,TEXT(\"\"),false) BEGIN_SHADER_PARAMETER_STRUCT(FEmptyShaderParameters, RENDERCORE_API) END_SHADER_PARAMETER_STRUCT() BEGIN_SHADER_PARAMETER_STRUCT(FRenderTargetParameters, RENDERCORE_API) RENDER_TARGET_BINDING_SLOTS() END_SHADER_PARAMETER_STRUCT() const TCHAR* GetShaderParameterMacroName(EUniformBufferBaseType ShaderParameterBaseType)"
  },
  {
    "label": "SHADER_PARAMETER_RDG_BUFFER_UPLOAD()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "SHADER_PARAMETER_RDG_BUFFER_UPLOAD(MemberName) \\ UE_DEPRECATED_MACRO(5.0, \"SHADER_PARAMETER_RDG_BUFFER_UPLOAD has been deprecated. Use RDG_BUFFER_ACCESS(Buffer, ERHIAccess::CopyDest) instead.\") \\ RDG_BUFFER_ACCESS(MemberName, ERHIAccess::CopyDest) #define SHADER_PARAMETER_RDG_BUFFER(ShaderType,MemberName) \\ UE_DEPRECATED_MACRO(5.0, \"SHADER_PARAMETER_RDG_BUFFER has been deprecated. Use RDG_BUFFER_ACCESS with an explicit RHI state instead.\") \\ RDG_BUFFER_ACCESS(MemberName, ERHIAccess::SRVMask | ERHIAccess::IndirectArgs) #define SHADER_PARAMETER_RDG_BUFFER_ARRAY(ShaderType,MemberName, ArrayDecl) \\ UE_DEPRECATED_MACRO(5.0, \"SHADER_PARAMETER_RDG_BUFFER_ARRAY has been deprecated. Use RDG_BUFFER_ACCESS_ARRAY instead.\")"
  },
  {
    "label": "CalcPackedArraySize()",
    "kind": "Method",
    "detail": "Function (using PackedArrayType = void ; } ; template<> struct TShaderParameterScalarArrayTypeInfo<uint32> { using PackedArrayType = FUintVector4 ; } ; template<> struct TShaderParameterScalarArrayTypeInfo<int32> { using PackedArrayType = FIntVector4 ; } ; template<> struct TShaderParameterScalarArrayTypeInfo<float> { using PackedArrayType = FVector4f ; } ; uint32)",
    "insertText": "CalcPackedArraySize(uint32 NumElements)"
  },
  {
    "label": "CalcPackedArrayIndex()",
    "kind": "Method",
    "detail": "Function (} uint32)",
    "insertText": "CalcPackedArrayIndex(uint32 ElementIndex)"
  },
  {
    "label": "CalcPackedComponentIndex()",
    "kind": "Method",
    "detail": "Function (} uint32)",
    "insertText": "CalcPackedComponentIndex(uint32 ElementIndex)"
  }
]