[
  {
    "label": "msgpack_packer",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "msgpack_packer"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (# ifndef MSGPACK_PACK_H # define MSGPACK_PACK_H # include \" pack_define . h \" # include \" object . h \" # include<stdlib . h> # ifdef __cplusplus \" C \" { # endif typedef)",
    "insertText": "int(*msgpack_packer_write)(void* data, const char* buf, size_t len)"
  },
  {
    "label": "msgpack_packer_init()",
    "kind": "Method",
    "detail": "Function (typedef struct msgpack_packer { void* data ; msgpack_packer_write callback ; } msgpack_packer ; void)",
    "insertText": "msgpack_packer_init(msgpack_packer* pk, void* data, msgpack_packer_write callback)"
  },
  {
    "label": "msgpack_packer_new()",
    "kind": "Method",
    "detail": "Function (msgpack_packer*)",
    "insertText": "msgpack_packer_new(void* data, msgpack_packer_write callback)"
  },
  {
    "label": "msgpack_packer_free()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "msgpack_packer_free(msgpack_packer* pk)"
  },
  {
    "label": "msgpack_pack_char()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "msgpack_pack_char(msgpack_packer* pk, char d)"
  },
  {
    "label": "msgpack_pack_signed_char()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "msgpack_pack_signed_char(msgpack_packer* pk, signed char d)"
  },
  {
    "label": "msgpack_pack_short()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "msgpack_pack_short(msgpack_packer* pk, short d)"
  },
  {
    "label": "msgpack_pack_int()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "msgpack_pack_int(msgpack_packer* pk, int d)"
  },
  {
    "label": "msgpack_pack_long()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "msgpack_pack_long(msgpack_packer* pk, long d)"
  },
  {
    "label": "msgpack_pack_long_long()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "msgpack_pack_long_long(msgpack_packer* pk, long long d)"
  },
  {
    "label": "msgpack_pack_unsigned_char()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "msgpack_pack_unsigned_char(msgpack_packer* pk, unsigned char d)"
  },
  {
    "label": "msgpack_pack_unsigned_short()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "msgpack_pack_unsigned_short(msgpack_packer* pk, unsigned short d)"
  },
  {
    "label": "msgpack_pack_unsigned_int()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "msgpack_pack_unsigned_int(msgpack_packer* pk, unsigned int d)"
  },
  {
    "label": "msgpack_pack_unsigned_long()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "msgpack_pack_unsigned_long(msgpack_packer* pk, unsigned long d)"
  },
  {
    "label": "msgpack_pack_unsigned_long_long()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "msgpack_pack_unsigned_long_long(msgpack_packer* pk, unsigned long long d)"
  },
  {
    "label": "msgpack_pack_uint8()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "msgpack_pack_uint8(msgpack_packer* pk, uint8_t d)"
  },
  {
    "label": "msgpack_pack_uint16()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "msgpack_pack_uint16(msgpack_packer* pk, uint16_t d)"
  },
  {
    "label": "msgpack_pack_uint32()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "msgpack_pack_uint32(msgpack_packer* pk, uint32_t d)"
  },
  {
    "label": "msgpack_pack_uint64()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "msgpack_pack_uint64(msgpack_packer* pk, uint64_t d)"
  },
  {
    "label": "msgpack_pack_int8()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "msgpack_pack_int8(msgpack_packer* pk, int8_t d)"
  },
  {
    "label": "msgpack_pack_int16()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "msgpack_pack_int16(msgpack_packer* pk, int16_t d)"
  },
  {
    "label": "msgpack_pack_int32()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "msgpack_pack_int32(msgpack_packer* pk, int32_t d)"
  },
  {
    "label": "msgpack_pack_int64()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "msgpack_pack_int64(msgpack_packer* pk, int64_t d)"
  },
  {
    "label": "msgpack_pack_fix_uint8()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "msgpack_pack_fix_uint8(msgpack_packer* pk, uint8_t d)"
  },
  {
    "label": "msgpack_pack_fix_uint16()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "msgpack_pack_fix_uint16(msgpack_packer* pk, uint16_t d)"
  },
  {
    "label": "msgpack_pack_fix_uint32()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "msgpack_pack_fix_uint32(msgpack_packer* pk, uint32_t d)"
  },
  {
    "label": "msgpack_pack_fix_uint64()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "msgpack_pack_fix_uint64(msgpack_packer* pk, uint64_t d)"
  },
  {
    "label": "msgpack_pack_fix_int8()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "msgpack_pack_fix_int8(msgpack_packer* pk, int8_t d)"
  },
  {
    "label": "msgpack_pack_fix_int16()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "msgpack_pack_fix_int16(msgpack_packer* pk, int16_t d)"
  },
  {
    "label": "msgpack_pack_fix_int32()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "msgpack_pack_fix_int32(msgpack_packer* pk, int32_t d)"
  },
  {
    "label": "msgpack_pack_fix_int64()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "msgpack_pack_fix_int64(msgpack_packer* pk, int64_t d)"
  },
  {
    "label": "msgpack_pack_float()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "msgpack_pack_float(msgpack_packer* pk, float d)"
  },
  {
    "label": "msgpack_pack_double()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "msgpack_pack_double(msgpack_packer* pk, double d)"
  },
  {
    "label": "msgpack_pack_nil()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "msgpack_pack_nil(msgpack_packer* pk)"
  },
  {
    "label": "msgpack_pack_true()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "msgpack_pack_true(msgpack_packer* pk)"
  },
  {
    "label": "msgpack_pack_false()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "msgpack_pack_false(msgpack_packer* pk)"
  },
  {
    "label": "msgpack_pack_array()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "msgpack_pack_array(msgpack_packer* pk, size_t n)"
  },
  {
    "label": "msgpack_pack_map()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "msgpack_pack_map(msgpack_packer* pk, size_t n)"
  },
  {
    "label": "msgpack_pack_str()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "msgpack_pack_str(msgpack_packer* pk, size_t l)"
  },
  {
    "label": "msgpack_pack_str_body()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "msgpack_pack_str_body(msgpack_packer* pk, const void* b, size_t l)"
  },
  {
    "label": "msgpack_pack_v4raw()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "msgpack_pack_v4raw(msgpack_packer* pk, size_t l)"
  },
  {
    "label": "msgpack_pack_v4raw_body()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "msgpack_pack_v4raw_body(msgpack_packer* pk, const void* b, size_t l)"
  },
  {
    "label": "msgpack_pack_bin()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "msgpack_pack_bin(msgpack_packer* pk, size_t l)"
  },
  {
    "label": "msgpack_pack_bin_body()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "msgpack_pack_bin_body(msgpack_packer* pk, const void* b, size_t l)"
  },
  {
    "label": "msgpack_pack_ext()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "msgpack_pack_ext(msgpack_packer* pk, size_t l, int8_t type)"
  },
  {
    "label": "msgpack_pack_ext_body()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "msgpack_pack_ext_body(msgpack_packer* pk, const void* b, size_t l)"
  },
  {
    "label": "msgpack_pack_object()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "msgpack_pack_object(msgpack_packer* pk, msgpack_object d)"
  },
  {
    "label": "msgpack_pack_inline_func()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "msgpack_pack_inline_func(name) \\ inline int msgpack_pack ## name #define msgpack_pack_inline_func_cint(name) \\ inline int msgpack_pack ## name #define msgpack_pack_inline_func_fixint(name) \\ inline int msgpack_pack_fix ## name #define msgpack_pack_user msgpack_packer* #define msgpack_pack_append_buffer(user, buf, len) \\ return (*(user)->callback)((user)->data, (const char*)buf, len) #include \"pack_template.h\" inline void msgpack_packer_init(msgpack_packer* pk, void* data, msgpack_packer_write callback)"
  },
  {
    "label": "pk()",
    "kind": "Method",
    "detail": "Function (msgpack_packer*)",
    "insertText": "pk(msgpack_packer*)calloc(1, sizeof(msgpack_packer))"
  },
  {
    "label": "free()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "free(pk)"
  }
]