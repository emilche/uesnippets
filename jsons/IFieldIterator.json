[
  {
    "label": "FFieldVariant",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFieldVariant"
  },
  {
    "label": "FProperty",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FProperty"
  },
  {
    "label": "UFunction",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UFunction"
  },
  {
    "label": "UStruct",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UStruct"
  },
  {
    "label": "IFieldIterator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IFieldIterator"
  },
  {
    "label": "FFieldIterator_BlueprintVisible",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFieldIterator_BlueprintVisible"
  },
  {
    "label": "GetFields()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" CoreMinimal . h \" # include \" UObject / Field . h \" class FFieldVariant ; class FProperty ; class UFunction ; class UStruct ; namespace UE::PropertyViewer { class IFieldIterator { public : TArray<FFieldVariant>)",
    "insertText": "GetFields(const UStruct*)"
  },
  {
    "label": "IFieldIterator()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "IFieldIterator()"
  }
]