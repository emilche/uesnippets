[
  {
    "label": "FStaticMeshLODResources",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FStaticMeshLODResources"
  },
  {
    "label": "FStaticMeshLODResourcesToDynamicMesh",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStaticMeshLODResourcesToDynamicMesh"
  },
  {
    "label": "ConversionOptions",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ConversionOptions"
  },
  {
    "label": "One()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" DynamicMesh / DynamicMesh3 . h \" struct FStaticMeshLODResources ; namespace UE { namespace Geometry { class FStaticMeshLODResourcesToDynamicMesh { public : struct ConversionOptions { bool bWantNormals = true ; bool bWantTangents = true ; bool bWantUVs = true ; bool bWantVertexColors = true ; bool bWantMaterialIDs = true ; FVector3d BuildScale =)",
    "insertText": "One()"
  },
  {
    "label": "Convert()",
    "kind": "Method",
    "detail": "Function (} ; bool)",
    "insertText": "Convert(const FStaticMeshLODResources* StaticMeshResources, const ConversionOptions& Options, FDynamicMesh3& OutputMesh, bool bHasVertexColors, TFunctionRef<FColor(int32)> GetVertexColorFromLODVertexIndex)"
  },
  {
    "label": "Convert()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Convert(const FStaticMeshLODResources* StaticMeshResources, const ConversionOptions& Options, FDynamicMesh3& OutputMesh)"
  }
]