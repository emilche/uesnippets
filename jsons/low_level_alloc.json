[
  {
    "label": "LowLevelAlloc",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "LowLevelAlloc"
  },
  {
    "label": "Arena",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Arena"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# ifndef ABSL_BASE_INTERNAL_LOW_LEVEL_ALLOC_H_ # define ABSL_BASE_INTERNAL_LOW_LEVEL_ALLOC_H_ # include<sys / types . h> # include<cstdint> # include \" absl / base / attributes . h \" # include \" absl / base / config . h \" # ifdef ABSL_LOW_LEVEL_ALLOC_MISSING # error ABSL_LOW_LEVEL_ALLOC_MISSING cannot be directly set # elif !)",
    "insertText": "defined(ABSL_HAVE_MMAP) && !defined(_WIN32) #define ABSL_LOW_LEVEL_ALLOC_MISSING 1 #endif #ifdef ABSL_LOW_LEVEL_ALLOC_ASYNC_SIGNAL_SAFE_MISSING #error ABSL_LOW_LEVEL_ALLOC_ASYNC_SIGNAL_SAFE_MISSING cannot be directly set #elif defined(_WIN32) || defined(__asmjs__) || defined(__wasm__) || defined(ABSL_USE_LOW_LEVEL_ALLOC_ASYNC_SIGNAL_SAFE_MISSING)"
  },
  {
    "label": "Alloc()",
    "kind": "Method",
    "detail": "Function (ABSL_NAMESPACE_BEGIN namespace base_internal { class LowLevelAlloc { public : struct Arena ; void*)",
    "insertText": "Alloc(size_t request) ABSL_ATTRIBUTE_SECTION(malloc_hook)"
  },
  {
    "label": "AllocWithArena()",
    "kind": "Method",
    "detail": "Function (void*)",
    "insertText": "AllocWithArena(size_t request, Arena *arena) ABSL_ATTRIBUTE_SECTION(malloc_hook)"
  },
  {
    "label": "Free()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Free(void *s) ABSL_ATTRIBUTE_SECTION(malloc_hook)"
  },
  {
    "label": "NewArena()",
    "kind": "Method",
    "detail": "Function (enum { kCallMallocHook = 0 x0001,# ifndef ABSL_LOW_LEVEL_ALLOC_ASYNC_SIGNAL_SAFE_MISSING kAsyncSignalSafe = 0 x0002,# endif } ; Arena*)",
    "insertText": "NewArena(uint32_t flags)"
  },
  {
    "label": "DeleteArena()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DeleteArena(Arena *arena)"
  },
  {
    "label": "DefaultArena()",
    "kind": "Method",
    "detail": "Function (Arena*)",
    "insertText": "DefaultArena()"
  },
  {
    "label": "LowLevelAlloc()",
    "kind": "Method",
    "detail": "Function (private :)",
    "insertText": "LowLevelAlloc()"
  }
]