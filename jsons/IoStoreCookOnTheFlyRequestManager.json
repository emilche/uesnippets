[
  {
    "label": "IAssetRegistry",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IAssetRegistry"
  },
  {
    "label": "ICookOnTheFlyServer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ICookOnTheFlyServer"
  },
  {
    "label": "ICookOnTheFlyRequestManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ICookOnTheFlyRequestManager"
  },
  {
    "label": "ICookOnTheFlyNetworkServer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ICookOnTheFlyNetworkServer"
  },
  {
    "label": "MakeIoStoreCookOnTheFlyRequestManager()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Templates / SharedPointer . h \" # include \" Templates / UniquePtr . h \" class IAssetRegistry ; namespace UE::Cook { class ICookOnTheFlyServer ; class ICookOnTheFlyRequestManager ; class ICookOnTheFlyNetworkServer ; TUniquePtr<ICookOnTheFlyRequestManager>)",
    "insertText": "MakeIoStoreCookOnTheFlyRequestManager(ICookOnTheFlyServer& CookOnTheFlyServer, const IAssetRegistry* AssetRegistry, TSharedRef<ICookOnTheFlyNetworkServer> ConnectionServer)"
  }
]