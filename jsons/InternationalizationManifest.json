[
  {
    "label": "FLocMetadataObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLocMetadataObject"
  },
  {
    "label": "FManifestContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FManifestContext"
  },
  {
    "label": "FLocItem",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLocItem"
  },
  {
    "label": "FManifestEntry",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FManifestEntry"
  },
  {
    "label": "FInternationalizationManifest",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FInternationalizationManifest"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FManifestContext()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" Containers / ContainerAllocationPolicies . h \" # include \" Containers / Map . h \" # include \" Containers / Set . h \" # include \" Containers / UnrealString . h \" # include \" CoreTypes . h \" # include \" Internationalization / LocKeyFuncs . h \" # include \" Misc / Crc . h \" # include \" Templates / SharedPointer . h \" # include \" Templates / UnrealTemplate . h \" # include \" UObject / NameTypes . h \" class FLocMetadataObject ; struct FManifestContext { public :)",
    "insertText": "FManifestContext() : Key() , SourceLocation() , PlatformName() , bIsOptional(false)"
  },
  {
    "label": "FManifestContext()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FManifestContext(const FLocKey& InKey) : Key(InKey) , SourceLocation() , PlatformName() , bIsOptional(false)"
  },
  {
    "label": "FManifestContext()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FManifestContext(const FManifestContext& Other)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FManifestContext&)",
    "insertText": "operator(const FManifestContext& Other)"
  },
  {
    "label": "FLocItem()",
    "kind": "Method",
    "detail": "Function (public : FLocKey Key ; FString SourceLocation ; FName PlatformName ; bool bIsOptional ; TSharedPtr<FLocMetadataObject> InfoMetadataObj ; TSharedPtr<FLocMetadataObject> KeyMetadataObj ; } ; struct FLocItem { public :)",
    "insertText": "FLocItem() : Text() , MetadataObj(nullptr)"
  },
  {
    "label": "FLocItem()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FLocItem(FString InSourceText) : Text(MoveTemp(InSourceText)) , MetadataObj(nullptr)"
  },
  {
    "label": "FLocItem()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FLocItem(FString InSourceText, TSharedPtr<FLocMetadataObject> InMetadataObj) : Text(MoveTemp(InSourceText)) , MetadataObj(MoveTemp(InMetadataObj))"
  },
  {
    "label": "FLocItem()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FLocItem(const FLocItem& Other)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FLocItem&)",
    "insertText": "operator(const FLocItem& Other)"
  },
  {
    "label": "IsExactMatch()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsExactMatch(const FLocItem& Other)"
  },
  {
    "label": "FManifestEntry()",
    "kind": "Method",
    "detail": "Function (public : FString Text ; TSharedPtr<FLocMetadataObject> MetadataObj ; } ; class FManifestEntry { public :)",
    "insertText": "FManifestEntry(const FLocKey& InNamespace, const FLocItem& InSource) : Namespace(InNamespace) , Source(InSource) , Contexts()"
  },
  {
    "label": "FindContext()",
    "kind": "Method",
    "detail": "Function (} const FManifestContext*)",
    "insertText": "FindContext(const FLocKey& ContextKey, const TSharedPtr<FLocMetadataObject>& KeyMetadata = nullptr)"
  },
  {
    "label": "FindContextByKey()",
    "kind": "Method",
    "detail": "Function (const FManifestContext*)",
    "insertText": "FindContextByKey(const FLocKey& ContextKey)"
  },
  {
    "label": "MergeContextPlatformInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MergeContextPlatformInfo(const FManifestContext& InContext)"
  },
  {
    "label": "FInternationalizationManifest()",
    "kind": "Method",
    "detail": "Function (const FLocKey Namespace ; const FLocItem Source ; TArray<FManifestContext> Contexts ; } ; typedef TMultiMap<FLocKey,TSharedRef<FManifestEntry>> FManifestEntryByLocKeyContainer ; typedef TMultiMap<FString,TSharedRef<FManifestEntry>,FDefaultSetAllocator,FLocKeyMultiMapFuncs<TSharedRef<FManifestEntry>>> FManifestEntryByStringContainer ; class FInternationalizationManifest { public : enum class EFormatVersion : uint8 { Initial = 0,EscapeFixes,LatestPlusOne,Latest = LatestPlusOne - 1 } ;)",
    "insertText": "FInternationalizationManifest() : FormatVersion(EFormatVersion::Latest)"
  },
  {
    "label": "AddSource()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "AddSource(const FLocKey& Namespace, const FLocItem& Source, const FManifestContext& Context)"
  },
  {
    "label": "UpdateEntry()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateEntry(const TSharedRef<FManifestEntry>& OldEntry, TSharedRef<FManifestEntry>& NewEntry)"
  },
  {
    "label": "FindEntryBySource()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FManifestEntry>)",
    "insertText": "FindEntryBySource(const FLocKey& Namespace, const FLocItem& Source)"
  },
  {
    "label": "FindEntryByContext()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FManifestEntry>)",
    "insertText": "FindEntryByContext(const FLocKey& Namespace, const FManifestContext& Context)"
  },
  {
    "label": "FindEntryByKey()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FManifestEntry>)",
    "insertText": "FindEntryByKey(const FLocKey& Namespace, const FLocKey& Key, const FString* SourceText = nullptr)"
  },
  {
    "label": "GetEntriesByKeyIterator()",
    "kind": "Method",
    "detail": "Function (FManifestEntryByLocKeyContainer::TConstIterator)",
    "insertText": "GetEntriesByKeyIterator()"
  },
  {
    "label": "GetNumEntriesByKey()",
    "kind": "Method",
    "detail": "Function (} int32)",
    "insertText": "GetNumEntriesByKey()"
  },
  {
    "label": "GetEntriesBySourceTextIterator()",
    "kind": "Method",
    "detail": "Function (} FManifestEntryByStringContainer::TConstIterator)",
    "insertText": "GetEntriesBySourceTextIterator()"
  },
  {
    "label": "GetNumEntriesBySourceText()",
    "kind": "Method",
    "detail": "Function (} int32)",
    "insertText": "GetNumEntriesBySourceText()"
  },
  {
    "label": "SetFormatVersion()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetFormatVersion(const EFormatVersion Version)"
  }
]