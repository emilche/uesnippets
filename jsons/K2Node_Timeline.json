[
  {
    "label": "FBlueprintActionDatabaseRegistrar",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBlueprintActionDatabaseRegistrar"
  },
  {
    "label": "FKismetCompilerContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FKismetCompilerContext"
  },
  {
    "label": "INameValidatorInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "INameValidatorInterface"
  },
  {
    "label": "UEdGraph",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEdGraph"
  },
  {
    "label": "UEdGraphPin",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEdGraphPin"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "TKeyValuePair",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TKeyValuePair"
  },
  {
    "label": "UK2Node_Timeline",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UK2Node_Timeline"
  },
  {
    "label": "UEdGraphNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEdGraphNode"
  },
  {
    "label": "FDiffResults",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDiffResults"
  },
  {
    "label": "FNodeHandlingFunctor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNodeHandlingFunctor"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" Containers / UnrealString . h \" # include \" CoreMinimal . h \" # include \" EdGraph / EdGraphNode . h \" # include \" HAL / Platform . h \" # include \" Internationalization / Text . h \" # include \" K2Node . h \" # include \" KismetCompilerMisc . h \" # include \" Math / Color . h \" # include \" Misc / Guid . h \" # include \" Templates / SharedPointer . h \" # include \" Textures / SlateIcon . h \" # include \" UObject / NameTypes . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / UObjectGlobals . h \" # include \" K2Node_Timeline . generated . h \" class FBlueprintActionDatabaseRegistrar ; class FKismetCompilerContext ; class INameValidatorInterface ; class UEdGraph ; class UEdGraphPin ; class UObject ; template<KeyType,ValueType> struct TKeyValuePair ;)",
    "insertText": "UCLASS(MinimalAPI)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() UPROPERTY()"
  },
  {
    "label": "AllocateDefaultPins()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AllocateDefaultPins()"
  },
  {
    "label": "PreloadRequiredAssets()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PreloadRequiredAssets()"
  },
  {
    "label": "DestroyNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyNode()"
  },
  {
    "label": "PostPasteNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostPasteNode()"
  },
  {
    "label": "PrepareForCopying()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PrepareForCopying()"
  },
  {
    "label": "GetNodeTitleColor()",
    "kind": "Method",
    "detail": "Function (FLinearColor)",
    "insertText": "GetNodeTitleColor()"
  },
  {
    "label": "GetNodeTitle()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetNodeTitle(ENodeTitleType::Type TitleType)"
  },
  {
    "label": "IsCompatibleWithGraph()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsCompatibleWithGraph(const UEdGraph* TargetGraph)"
  },
  {
    "label": "FindDiffs()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FindDiffs(class UEdGraphNode* OtherNode, struct FDiffResults& Results)"
  },
  {
    "label": "OnRenameNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnRenameNode(const FString& NewName)"
  },
  {
    "label": "MakeNameValidator()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<class INameValidatorInterface>)",
    "insertText": "MakeNameValidator()"
  },
  {
    "label": "GetTooltipText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetTooltipText()"
  },
  {
    "label": "GetDocumentationExcerptName()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetDocumentationExcerptName()"
  },
  {
    "label": "GetCornerIcon()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetCornerIcon()"
  },
  {
    "label": "GetIconAndTint()",
    "kind": "Method",
    "detail": "Function (FSlateIcon)",
    "insertText": "GetIconAndTint(FLinearColor& OutColor)"
  },
  {
    "label": "ShouldShowNodeProperties()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldShowNodeProperties()"
  },
  {
    "label": "NodeCausesStructuralBlueprintChange()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "NodeCausesStructuralBlueprintChange()"
  },
  {
    "label": "ExpandNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExpandNode(class FKismetCompilerContext& CompilerContext, UEdGraph* SourceGraph)"
  },
  {
    "label": "GetNodeAttributes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetNodeAttributes(TArray<TKeyValuePair<FString, FString>>& OutNodeAttributes)"
  },
  {
    "label": "GetMenuActions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetMenuActions(FBlueprintActionDatabaseRegistrar& ActionRegistrar)"
  },
  {
    "label": "GetToolTipHeading()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetToolTipHeading()"
  },
  {
    "label": "GetPlayPin()",
    "kind": "Method",
    "detail": "Function (UEdGraphPin*)",
    "insertText": "GetPlayPin()"
  },
  {
    "label": "GetPlayFromStartPin()",
    "kind": "Method",
    "detail": "Function (UEdGraphPin*)",
    "insertText": "GetPlayFromStartPin()"
  },
  {
    "label": "GetStopPin()",
    "kind": "Method",
    "detail": "Function (UEdGraphPin*)",
    "insertText": "GetStopPin()"
  },
  {
    "label": "GetUpdatePin()",
    "kind": "Method",
    "detail": "Function (UEdGraphPin*)",
    "insertText": "GetUpdatePin()"
  },
  {
    "label": "GetReversePin()",
    "kind": "Method",
    "detail": "Function (UEdGraphPin*)",
    "insertText": "GetReversePin()"
  },
  {
    "label": "GetReverseFromEndPin()",
    "kind": "Method",
    "detail": "Function (UEdGraphPin*)",
    "insertText": "GetReverseFromEndPin()"
  },
  {
    "label": "GetFinishedPin()",
    "kind": "Method",
    "detail": "Function (UEdGraphPin*)",
    "insertText": "GetFinishedPin()"
  },
  {
    "label": "GetNewTimePin()",
    "kind": "Method",
    "detail": "Function (UEdGraphPin*)",
    "insertText": "GetNewTimePin()"
  },
  {
    "label": "GetSetNewTimePin()",
    "kind": "Method",
    "detail": "Function (UEdGraphPin*)",
    "insertText": "GetSetNewTimePin()"
  },
  {
    "label": "GetDirectionPin()",
    "kind": "Method",
    "detail": "Function (UEdGraphPin*)",
    "insertText": "GetDirectionPin()"
  },
  {
    "label": "GetTrackPin()",
    "kind": "Method",
    "detail": "Function (UEdGraphPin*)",
    "insertText": "GetTrackPin(const FName TrackName)"
  },
  {
    "label": "RenameTimeline()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RenameTimeline(const FString& NewName)"
  },
  {
    "label": "ExpandForPin()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "ExpandForPin(UEdGraphPin* TimelinePin, const FName PropertyName, FKismetCompilerContext& CompilerContext, UEdGraph* SourceGraph)"
  }
]