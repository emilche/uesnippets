[
  {
    "label": "SVerticalBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SVerticalBox"
  },
  {
    "label": "FTrackColorTracker",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTrackColorTracker"
  },
  {
    "label": "S2ColumnWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "S2ColumnWidget"
  },
  {
    "label": "EDefaultColumnWidth",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EDefaultColumnWidth"
  },
  {
    "label": "SAnimTrackPanel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SAnimTrackPanel"
  },
  {
    "label": "FTrackColorTracker()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" HAL / Platform . h \" # include \" HAL / PlatformCrt . h \" # include \" Math / Color . h \" # include \" Math / Vector2D . h \" # include \" Misc / Attribute . h \" # include \" SCurveEditor . h \" # include \" Templates / SharedPointer . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Widgets / SCompoundWidget . h \" class SVerticalBox ; class FTrackColorTracker { public :)",
    "insertText": "FTrackColorTracker() : CurrentColor(0)"
  },
  {
    "label": "AddColor()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "AddColor(FLinearColor NewColor)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (Colors .)",
    "insertText": "Add(NewColor)"
  },
  {
    "label": "GetNextColor()",
    "kind": "Method",
    "detail": "Function (} FLinearColor)",
    "insertText": "GetNextColor()"
  },
  {
    "label": "Num()",
    "kind": "Method",
    "detail": "Function (FLinearColor& Col = Colors [ CurrentColor + + ] ; CurrentColor % = Colors .)",
    "insertText": "Num()"
  },
  {
    "label": "SLATE_ARGUMENT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_ARGUMENT(float, WidgetWidth ) SLATE_END_ARGS() void Construct(const FArguments& InArgs)"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (} ; class SAnimTrackPanel : public SCompoundWidget { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SAnimTrackPanel ) : _ViewInputMin() , _ViewInputMax() , _InputMin() , _InputMax() , _OnSetInputViewRange()"
  },
  {
    "label": "SLATE_ARGUMENT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_ARGUMENT(float, WidgetWidth ) SLATE_ATTRIBUTE( float, ViewInputMin ) SLATE_ATTRIBUTE( float, ViewInputMax ) SLATE_ATTRIBUTE( float, InputMin ) SLATE_ATTRIBUTE( float, InputMax ) SLATE_EVENT( FOnSetInputViewRange, OnSetInputViewRange ) SLATE_END_ARGS() void Construct(const FArguments& InArgs)"
  },
  {
    "label": "PanInputViewRange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PanInputViewRange(int32 ScreenDelta, FVector2D ScreenViewSize)"
  },
  {
    "label": "GetSequenceLength()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetSequenceLength()"
  },
  {
    "label": "Create2ColumnWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<class S2ColumnWidget>)",
    "insertText": "Create2ColumnWidget(TSharedRef<SVerticalBox> Parent)"
  }
]