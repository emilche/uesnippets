[
  {
    "label": "SAutomationTestItemContextMenu",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SAutomationTestItemContextMenu"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" HAL / PlatformApplicationMisc . h \" # include \" HAL / PlatformMisc . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Widgets / SWidget . h \" # include \" Widgets / SCompoundWidget . h \" # include \" Widgets / Layout / SBorder . h \" # include \" Modules / ModuleManager . h \" # include \" Textures / SlateIcon . h \" # include \" Framework / Commands / UIAction . h \" # include \" Framework / MultiBox / MultiBoxBuilder . h \" # include \" Styling / AppStyle . h \" # include \" IAutomationControllerModule . h \" # if WITH_EDITOR # define LOCTEXT_NAMESPACE \" SAutomationTestItemContextMenu \" class SAutomationTestItemContextMenu : public SCompoundWidget { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SAutomationTestItemContextMenu)"
  },
  {
    "label": "SLATE_END_ARGS()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_END_ARGS() public: void Construct( const FArguments& InArgs, const TArray<FString>& InAssetNames, const TArray<FString>& InTestNames)"
  },
  {
    "label": "SNew()",
    "kind": "Method",
    "detail": "Function (AssetNames = InAssetNames ; TestNames = InTestNames ; ChildSlot [)",
    "insertText": "SNew(SBorder) .BorderImage(FAppStyle::GetBrush(\"ToolPanel.GroupBorder\")) .Content() [ MakeContextMenu()"
  },
  {
    "label": "MakeContextMenu()",
    "kind": "Method",
    "detail": "Function (} protected : TSharedRef<SWidget>)",
    "insertText": "MakeContextMenu()"
  },
  {
    "label": "MenuBuilder()",
    "kind": "Method",
    "detail": "Function (FMenuBuilder)",
    "insertText": "MenuBuilder(true, NULL)"
  },
  {
    "label": "BeginSection()",
    "kind": "Method",
    "detail": "Function (MenuBuilder .)",
    "insertText": "BeginSection(\"AutomationOptions\", LOCTEXT(\"MenuHeadingText\", \"Automation Options\"))"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function ({)",
    "insertText": "if(TestNames.Num())"
  },
  {
    "label": "AddMenuEntry()",
    "kind": "Method",
    "detail": "Function (MenuBuilder .)",
    "insertText": "AddMenuEntry(LOCTEXT(\"AutomationMenuEntryCopyTestNameText\", \"Copy test name(s)\"), FText::GetEmpty(), FSlateIcon(), FUIAction(FExecuteAction::CreateRaw(this, &SAutomationTestItemContextMenu::HandleContextItemCopyName)))"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "if(AssetNames.Num())"
  },
  {
    "label": "AddMenuEntry()",
    "kind": "Method",
    "detail": "Function (MenuBuilder .)",
    "insertText": "AddMenuEntry(LOCTEXT(\"AutomationMenuEntryLoadText\", \"Load the asset(s)\"), FText::GetEmpty(), FSlateIcon(), FUIAction(FExecuteAction::CreateRaw(this, &SAutomationTestItemContextMenu::HandleContextItemTerminate)))"
  },
  {
    "label": "EndSection()",
    "kind": "Method",
    "detail": "Function (} } MenuBuilder .)",
    "insertText": "EndSection()"
  },
  {
    "label": "HandleContextItemTerminate()",
    "kind": "Method",
    "detail": "Function (} private : void)",
    "insertText": "HandleContextItemTerminate()"
  },
  {
    "label": "IAutomationControllerModule()",
    "kind": "Method",
    "detail": "Function (FModuleManager::GetModuleChecked<)",
    "insertText": "IAutomationControllerModule(\"AutomationController\").GetAutomationController()->RequestLoadAsset(AssetNames[AssetIndex])"
  },
  {
    "label": "HandleContextItemCopyName()",
    "kind": "Method",
    "detail": "Function (} } void)",
    "insertText": "HandleContextItemCopyName()"
  },
  {
    "label": "ClipboardCopy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClipboardCopy(*FString::Join(TestNames, TEXT(\"\\n\")))"
  }
]