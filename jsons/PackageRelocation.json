[
  {
    "label": "FObjectImport",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FObjectImport"
  },
  {
    "label": "FPackageFileSummary",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPackageFileSummary"
  },
  {
    "label": "FPackageRelocationContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPackageRelocationContext"
  },
  {
    "label": "DECLARE_LOG_CATEGORY_EXTERN()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / StringFwd . h \" # include \" Containers / StringView . h \" # include \" Logging / LogMacros . h \" # include \" UObject / UnrealNames . h \" struct FObjectImport ; struct FPackageFileSummary ;)",
    "insertText": "DECLARE_LOG_CATEGORY_EXTERN(LogPackageRelocation, Log, All)"
  },
  {
    "label": "ShouldApplyRelocation()",
    "kind": "Method",
    "detail": "Function (namespace UE::Package::Relocation::Private { struct FPackageRelocationContext { FStringView OriginalPackagePath ; FStringView CurrentPackagePath ; FStringView OriginalPackageMount ; } ; bool)",
    "insertText": "ShouldApplyRelocation(const FPackageFileSummary& PackageSummary, FStringView LoadedPackageName, FPackageRelocationContext& OutPackageRelocationContext)"
  },
  {
    "label": "TryRelocateReference()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TryRelocateReference(const FPackageRelocationContext& InPackageRelocationContext, FStringView InPackageNameToRelocate, FStringBuilderBase& OutNewLocation)"
  },
  {
    "label": "ApplyRelocationToObjectImportMap()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyRelocationToObjectImportMap(const FPackageRelocationContext& InPackageRelocationContext, TArrayView<FObjectImport> ImportMapView)"
  },
  {
    "label": "ApplyRelocationToSoftObjectArray()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyRelocationToSoftObjectArray(const FPackageRelocationContext& InPackageRelocationContext, TArrayView<FSoftObjectPath> SoftObjectPaths)"
  },
  {
    "label": "ApplyRelocationToNameArray()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyRelocationToNameArray(const FPackageRelocationContext& InPackageRelocationContext, TArrayView<FName> PackageNames)"
  }
]