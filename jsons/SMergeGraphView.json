[
  {
    "label": "FSpawnTabArgs",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSpawnTabArgs"
  },
  {
    "label": "FTabManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTabManager"
  },
  {
    "label": "SMergeGraphView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SMergeGraphView"
  },
  {
    "label": "FMergeGraphRowEntry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMergeGraphRowEntry"
  },
  {
    "label": "FMergeGraphEntry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMergeGraphEntry"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Input / Reply . h \" # include \" Widgets / SCompoundWidget . h \" # include \" BlueprintMergeData . h \" # include \" SBlueprintDiff . h \" class FSpawnTabArgs ; class FTabManager ; class SMergeGraphView : public SCompoundWidget { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SMergeGraphView)"
  },
  {
    "label": "SLATE_END_ARGS()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_END_ARGS() void Construct( const FArguments InArgs , const FBlueprintMergeData& InData , FOnMergeNodeSelected SelectionCallback , TArray< TSharedPtr<FBlueprintDifferenceTreeEntry> >& OutTreeEntries , TArray< TSharedPtr<FBlueprintDifferenceTreeEntry> >& OutRealDifferences , TArray< TSharedPtr<FBlueprintDifferenceTreeEntry> >& OutConflicts)"
  },
  {
    "label": "FocusGraph()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "FocusGraph(const FString& GraphPath)"
  },
  {
    "label": "HighlightEntry()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HighlightEntry(const struct FMergeGraphRowEntry& Conflict)"
  },
  {
    "label": "HasNoDifferences()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasNoDifferences()"
  },
  {
    "label": "CreateGraphDiffViews()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SDockTab>)",
    "insertText": "CreateGraphDiffViews(const FSpawnTabArgs& Args)"
  },
  {
    "label": "CreateMyBlueprintsViews()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SDockTab>)",
    "insertText": "CreateMyBlueprintsViews(const FSpawnTabArgs& Args)"
  },
  {
    "label": "GetRemotePanel()",
    "kind": "Method",
    "detail": "Function (FDiffPanel&)",
    "insertText": "GetRemotePanel()"
  },
  {
    "label": "GetLockViewImage()",
    "kind": "Method",
    "detail": "Function (const FSlateBrush*)",
    "insertText": "GetLockViewImage()"
  }
]