[
  {
    "label": "RequestGlobalDumpForInProcessTesting()",
    "kind": "Method",
    "detail": "Function (# ifndef BASE_TRACE_EVENT_MEMORY_DUMP_MANAGER_TEST_UTILS_H_ # define BASE_TRACE_EVENT_MEMORY_DUMP_MANAGER_TEST_UTILS_H_ # include \" base / bind . h \" # include \" base / trace_event / memory_dump_manager . h \" # include \" base / trace_event / memory_dump_request_args . h \" namespace base { namespace trace_event { void)",
    "insertText": "RequestGlobalDumpForInProcessTesting(base::trace_event::MemoryDumpType dump_type, base::trace_event::MemoryDumpLevelOfDetail level_of_detail)"
  },
  {
    "label": "GetInstance()",
    "kind": "Method",
    "detail": "Function (MemoryDumpRequestArgs local_args = { 0,dump_type,level_of_detail } ;)",
    "insertText": "GetInstance()->CreateProcessDump( local_args, ProcessMemoryDumpCallback())"
  },
  {
    "label": "InitializeMemoryDumpManagerForInProcessTesting()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "InitializeMemoryDumpManagerForInProcessTesting(bool is_coordinator)"
  },
  {
    "label": "GetInstance()",
    "kind": "Method",
    "detail": "Function (MemoryDumpManager* instance =)",
    "insertText": "GetInstance()"
  },
  {
    "label": "set_dumper_registrations_ignored_for_testing()",
    "kind": "Method",
    "detail": "Function (instance ->)",
    "insertText": "set_dumper_registrations_ignored_for_testing(true)"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (instance ->)",
    "insertText": "Initialize(BindRepeating(&RequestGlobalDumpForInProcessTesting), is_coordinator)"
  }
]