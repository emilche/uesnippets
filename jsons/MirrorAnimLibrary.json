[
  {
    "label": "FAnimNode_MirrorBase",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimNode_MirrorBase"
  },
  {
    "label": "FMirrorAnimNodeReference",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMirrorAnimNodeReference"
  },
  {
    "label": "UMirrorAnimLibrary",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMirrorAnimLibrary"
  },
  {
    "label": "ConvertToMirrorNode()",
    "kind": "Method",
    "detail": "Function (FMirrorAnimNodeReference)",
    "insertText": "ConvertToMirrorNode(const FAnimNodeReference& Node, EAnimNodeReferenceConversionResult& Result)"
  },
  {
    "label": "SetMirror()",
    "kind": "Method",
    "detail": "Function (FMirrorAnimNodeReference)",
    "insertText": "SetMirror(const FMirrorAnimNodeReference& MirrorNode, bool bInMirror)"
  },
  {
    "label": "SetMirrorTransitionBlendTime()",
    "kind": "Method",
    "detail": "Function (FMirrorAnimNodeReference)",
    "insertText": "SetMirrorTransitionBlendTime(const FMirrorAnimNodeReference& MirrorNode, float InBlendTime)"
  },
  {
    "label": "GetMirror()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetMirror(const FMirrorAnimNodeReference& MirrorNode)"
  },
  {
    "label": "GetMirrorTransitionBlendTime()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetMirrorTransitionBlendTime(const FMirrorAnimNodeReference& MirrorNode)"
  }
]