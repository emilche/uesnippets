[
  {
    "label": "RTC_ALIGN",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RTC_ALIGN"
  },
  {
    "label": "RTCRayHit",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RTCRayHit"
  },
  {
    "label": "RTCRay",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RTCRay"
  },
  {
    "label": "RTCHit",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RTCHit"
  },
  {
    "label": "RTCRayHit4",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RTCRayHit4"
  },
  {
    "label": "RTCRay4",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RTCRay4"
  },
  {
    "label": "RTCHit4",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RTCHit4"
  },
  {
    "label": "RTCRayHit8",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RTCRayHit8"
  },
  {
    "label": "RTCRay8",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RTCRay8"
  },
  {
    "label": "RTCHit8",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RTCHit8"
  },
  {
    "label": "RTCRayHit16",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RTCRayHit16"
  },
  {
    "label": "RTCRay16",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RTCRay16"
  },
  {
    "label": "RTCHit16",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RTCHit16"
  },
  {
    "label": "RTCRayNp",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RTCRayNp"
  },
  {
    "label": "RTCHitNp",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RTCHitNp"
  },
  {
    "label": "RTCRayHitNp",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RTCRayHitNp"
  },
  {
    "label": "RTCRayN",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RTCRayN"
  },
  {
    "label": "RTCHitN",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RTCHitN"
  },
  {
    "label": "RTCRayHitN",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RTCRayHitN"
  },
  {
    "label": "RTCRayNt",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RTCRayNt"
  },
  {
    "label": "RTCHitNt",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RTCHitNt"
  },
  {
    "label": "RTCRayHitNt",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RTCRayHitNt"
  },
  {
    "label": "RTC_ALIGN()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" rtcore_common . h \" RTC_NAMESPACE_BEGIN struct)",
    "insertText": "RTC_ALIGN(16)"
  },
  {
    "label": "RTC_ALIGN()",
    "kind": "Method",
    "detail": "Function (float Ng_x [ 4 ] ; float Ng_y [ 4 ] ; float Ng_z [ 4 ] ; float u [ 4 ] ; float v [ 4 ] ; unsigned int primID [ 4 ] ; unsigned int geomID [ 4 ] ; unsigned int instID [ RTC_MAX_INSTANCE_LEVEL_COUNT ] [ 4 ] ; } ; struct RTCRayHit4 { struct RTCRay4 ray ; struct RTCHit4 hit ; } ; struct)",
    "insertText": "RTC_ALIGN(32)"
  },
  {
    "label": "RTC_ALIGN()",
    "kind": "Method",
    "detail": "Function (float Ng_x [ 8 ] ; float Ng_y [ 8 ] ; float Ng_z [ 8 ] ; float u [ 8 ] ; float v [ 8 ] ; unsigned int primID [ 8 ] ; unsigned int geomID [ 8 ] ; unsigned int instID [ RTC_MAX_INSTANCE_LEVEL_COUNT ] [ 8 ] ; } ; struct RTCRayHit8 { struct RTCRay8 ray ; struct RTCHit8 hit ; } ; struct)",
    "insertText": "RTC_ALIGN(64)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (float Ng_x [ 1 6 ] ; float Ng_y [ 1 6 ] ; float Ng_z [ 1 6 ] ; float u [ 1 6 ] ; float v [ 1 6 ] ; unsigned int primID [ 1 6 ] ; unsigned int geomID [ 1 6 ] ; unsigned int instID [ RTC_MAX_INSTANCE_LEVEL_COUNT ] [ 1 6 ] ; } ; struct RTCRayHit16 { struct RTCRay16 ray ; struct RTCHit16 hit ; } ; struct RTCRayNp { float* org_x ; float* org_y ; float* org_z ; float* tnear ; float* dir_x ; float* dir_y ; float* dir_z ; float* time ; float* tfar ; unsigned int* mask ; unsigned int* id ; unsigned int* flags ; } ; struct RTCHitNp { float* Ng_x ; float* Ng_y ; float* Ng_z ; float* u ; float* v ; unsigned int* primID ; unsigned int* geomID ; unsigned int* instID [ RTC_MAX_INSTANCE_LEVEL_COUNT ] ; } ; struct RTCRayHitNp { struct RTCRayNp ray ; struct RTCHitNp hit ; } ; struct RTCRayN ; struct RTCHitN ; struct RTCRayHitN ; # if)",
    "insertText": "defined(__cplusplus) RTC_FORCEINLINE float& RTCRayN_org_x(RTCRayN* ray, unsigned int N, unsigned int i)"
  },
  {
    "label": "RTCRayN_org_y()",
    "kind": "Method",
    "detail": "Function (} RTC_FORCEINLINE float&)",
    "insertText": "RTCRayN_org_y(RTCRayN* ray, unsigned int N, unsigned int i)"
  },
  {
    "label": "RTCRayN_org_z()",
    "kind": "Method",
    "detail": "Function (} RTC_FORCEINLINE float&)",
    "insertText": "RTCRayN_org_z(RTCRayN* ray, unsigned int N, unsigned int i)"
  },
  {
    "label": "RTCRayN_tnear()",
    "kind": "Method",
    "detail": "Function (} RTC_FORCEINLINE float&)",
    "insertText": "RTCRayN_tnear(RTCRayN* ray, unsigned int N, unsigned int i)"
  },
  {
    "label": "RTCRayN_dir_x()",
    "kind": "Method",
    "detail": "Function (} RTC_FORCEINLINE float&)",
    "insertText": "RTCRayN_dir_x(RTCRayN* ray, unsigned int N, unsigned int i)"
  },
  {
    "label": "RTCRayN_dir_y()",
    "kind": "Method",
    "detail": "Function (} RTC_FORCEINLINE float&)",
    "insertText": "RTCRayN_dir_y(RTCRayN* ray, unsigned int N, unsigned int i)"
  },
  {
    "label": "RTCRayN_dir_z()",
    "kind": "Method",
    "detail": "Function (} RTC_FORCEINLINE float&)",
    "insertText": "RTCRayN_dir_z(RTCRayN* ray, unsigned int N, unsigned int i)"
  },
  {
    "label": "RTCRayN_time()",
    "kind": "Method",
    "detail": "Function (} RTC_FORCEINLINE float&)",
    "insertText": "RTCRayN_time(RTCRayN* ray, unsigned int N, unsigned int i)"
  },
  {
    "label": "RTCRayN_tfar()",
    "kind": "Method",
    "detail": "Function (} RTC_FORCEINLINE float&)",
    "insertText": "RTCRayN_tfar(RTCRayN* ray, unsigned int N, unsigned int i)"
  },
  {
    "label": "RTCRayN_mask()",
    "kind": "Method",
    "detail": "Function (} RTC_FORCEINLINE unsigned int&)",
    "insertText": "RTCRayN_mask(RTCRayN* ray, unsigned int N, unsigned int i)"
  },
  {
    "label": "RTCRayN_id()",
    "kind": "Method",
    "detail": "Function (} RTC_FORCEINLINE unsigned int&)",
    "insertText": "RTCRayN_id(RTCRayN* ray, unsigned int N, unsigned int i)"
  },
  {
    "label": "RTCRayN_flags()",
    "kind": "Method",
    "detail": "Function (} RTC_FORCEINLINE unsigned int&)",
    "insertText": "RTCRayN_flags(RTCRayN* ray, unsigned int N, unsigned int i)"
  },
  {
    "label": "RTCHitN_Ng_x()",
    "kind": "Method",
    "detail": "Function (} RTC_FORCEINLINE float&)",
    "insertText": "RTCHitN_Ng_x(RTCHitN* hit, unsigned int N, unsigned int i)"
  },
  {
    "label": "RTCHitN_Ng_y()",
    "kind": "Method",
    "detail": "Function (} RTC_FORCEINLINE float&)",
    "insertText": "RTCHitN_Ng_y(RTCHitN* hit, unsigned int N, unsigned int i)"
  },
  {
    "label": "RTCHitN_Ng_z()",
    "kind": "Method",
    "detail": "Function (} RTC_FORCEINLINE float&)",
    "insertText": "RTCHitN_Ng_z(RTCHitN* hit, unsigned int N, unsigned int i)"
  },
  {
    "label": "RTCHitN_u()",
    "kind": "Method",
    "detail": "Function (} RTC_FORCEINLINE float&)",
    "insertText": "RTCHitN_u(RTCHitN* hit, unsigned int N, unsigned int i)"
  },
  {
    "label": "RTCHitN_v()",
    "kind": "Method",
    "detail": "Function (} RTC_FORCEINLINE float&)",
    "insertText": "RTCHitN_v(RTCHitN* hit, unsigned int N, unsigned int i)"
  },
  {
    "label": "RTCHitN_primID()",
    "kind": "Method",
    "detail": "Function (} RTC_FORCEINLINE unsigned int&)",
    "insertText": "RTCHitN_primID(RTCHitN* hit, unsigned int N, unsigned int i)"
  },
  {
    "label": "RTCHitN_geomID()",
    "kind": "Method",
    "detail": "Function (} RTC_FORCEINLINE unsigned int&)",
    "insertText": "RTCHitN_geomID(RTCHitN* hit, unsigned int N, unsigned int i)"
  },
  {
    "label": "RTCHitN_instID()",
    "kind": "Method",
    "detail": "Function (} RTC_FORCEINLINE unsigned int&)",
    "insertText": "RTCHitN_instID(RTCHitN* hit, unsigned int N, unsigned int i, unsigned int l)"
  },
  {
    "label": "RTCRayHitN_RayN()",
    "kind": "Method",
    "detail": "Function (} RTC_FORCEINLINE RTCRayN*)",
    "insertText": "RTCRayHitN_RayN(RTCRayHitN* rayhit, unsigned int N)"
  },
  {
    "label": "RTCRayHitN_HitN()",
    "kind": "Method",
    "detail": "Function (} RTC_FORCEINLINE RTCHitN*)",
    "insertText": "RTCRayHitN_HitN(RTCRayHitN* rayhit, unsigned int N)"
  },
  {
    "label": "rtcGetRayFromRayN()",
    "kind": "Method",
    "detail": "Function (} template<int N> struct RTCRayNt { float org_x [ N ] ; float org_y [ N ] ; float org_z [ N ] ; float tnear [ N ] ; float dir_x [ N ] ; float dir_y [ N ] ; float dir_z [ N ] ; float time [ N ] ; float tfar [ N ] ; unsigned int mask [ N ] ; unsigned int id [ N ] ; unsigned int flags [ N ] ; } ; template<int N> struct RTCHitNt { float Ng_x [ N ] ; float Ng_y [ N ] ; float Ng_z [ N ] ; float u [ N ] ; float v [ N ] ; unsigned int primID [ N ] ; unsigned int geomID [ N ] ; unsigned int instID [ RTC_MAX_INSTANCE_LEVEL_COUNT ] [ N ] ; } ; template<int N> struct RTCRayHitNt { RTCRayNt<N> ray ; RTCHitNt<N> hit ; } ; RTC_FORCEINLINE RTCRay)",
    "insertText": "rtcGetRayFromRayN(RTCRayN* rayN, unsigned int N, unsigned int i)"
  },
  {
    "label": "RTCRayN_org_x()",
    "kind": "Method",
    "detail": "Function (RTCRay ray ; ray . org_x =)",
    "insertText": "RTCRayN_org_x(rayN,N,i)"
  },
  {
    "label": "RTCRayN_org_y()",
    "kind": "Method",
    "detail": "Function (ray . org_y =)",
    "insertText": "RTCRayN_org_y(rayN,N,i)"
  },
  {
    "label": "RTCRayN_org_z()",
    "kind": "Method",
    "detail": "Function (ray . org_z =)",
    "insertText": "RTCRayN_org_z(rayN,N,i)"
  },
  {
    "label": "RTCRayN_tnear()",
    "kind": "Method",
    "detail": "Function (ray . tnear =)",
    "insertText": "RTCRayN_tnear(rayN,N,i)"
  },
  {
    "label": "RTCRayN_dir_x()",
    "kind": "Method",
    "detail": "Function (ray . dir_x =)",
    "insertText": "RTCRayN_dir_x(rayN,N,i)"
  },
  {
    "label": "RTCRayN_dir_y()",
    "kind": "Method",
    "detail": "Function (ray . dir_y =)",
    "insertText": "RTCRayN_dir_y(rayN,N,i)"
  },
  {
    "label": "RTCRayN_dir_z()",
    "kind": "Method",
    "detail": "Function (ray . dir_z =)",
    "insertText": "RTCRayN_dir_z(rayN,N,i)"
  },
  {
    "label": "RTCRayN_time()",
    "kind": "Method",
    "detail": "Function (ray . time =)",
    "insertText": "RTCRayN_time(rayN,N,i)"
  },
  {
    "label": "RTCRayN_tfar()",
    "kind": "Method",
    "detail": "Function (ray . tfar =)",
    "insertText": "RTCRayN_tfar(rayN,N,i)"
  },
  {
    "label": "RTCRayN_mask()",
    "kind": "Method",
    "detail": "Function (ray . mask =)",
    "insertText": "RTCRayN_mask(rayN,N,i)"
  },
  {
    "label": "RTCRayN_id()",
    "kind": "Method",
    "detail": "Function (ray . id =)",
    "insertText": "RTCRayN_id(rayN,N,i)"
  },
  {
    "label": "RTCRayN_flags()",
    "kind": "Method",
    "detail": "Function (ray . flags =)",
    "insertText": "RTCRayN_flags(rayN,N,i)"
  },
  {
    "label": "RTCHitN_Ng_x()",
    "kind": "Method",
    "detail": "Function (RTCHit hit ; hit . Ng_x =)",
    "insertText": "RTCHitN_Ng_x(hitN,N,i)"
  },
  {
    "label": "RTCHitN_Ng_y()",
    "kind": "Method",
    "detail": "Function (hit . Ng_y =)",
    "insertText": "RTCHitN_Ng_y(hitN,N,i)"
  },
  {
    "label": "RTCHitN_Ng_z()",
    "kind": "Method",
    "detail": "Function (hit . Ng_z =)",
    "insertText": "RTCHitN_Ng_z(hitN,N,i)"
  },
  {
    "label": "RTCHitN_u()",
    "kind": "Method",
    "detail": "Function (hit . u =)",
    "insertText": "RTCHitN_u(hitN,N,i)"
  },
  {
    "label": "RTCHitN_v()",
    "kind": "Method",
    "detail": "Function (hit . v =)",
    "insertText": "RTCHitN_v(hitN,N,i)"
  },
  {
    "label": "RTCHitN_primID()",
    "kind": "Method",
    "detail": "Function (hit . primID =)",
    "insertText": "RTCHitN_primID(hitN,N,i)"
  },
  {
    "label": "RTCHitN_geomID()",
    "kind": "Method",
    "detail": "Function (hit . geomID =)",
    "insertText": "RTCHitN_geomID(hitN,N,i)"
  },
  {
    "label": "rtcGetRayHitFromRayHitN()",
    "kind": "Method",
    "detail": "Function (} RTC_FORCEINLINE RTCRayHit)",
    "insertText": "rtcGetRayHitFromRayHitN(RTCRayHitN* rayhitN, unsigned int N, unsigned int i)"
  },
  {
    "label": "RTCRayHitN_RayN()",
    "kind": "Method",
    "detail": "Function (RTCRayHit rh ; RTCRayN* ray =)",
    "insertText": "RTCRayHitN_RayN(rayhitN,N)"
  },
  {
    "label": "RTCRayN_org_x()",
    "kind": "Method",
    "detail": "Function (rh . ray . org_x =)",
    "insertText": "RTCRayN_org_x(ray,N,i)"
  },
  {
    "label": "RTCRayN_org_y()",
    "kind": "Method",
    "detail": "Function (rh . ray . org_y =)",
    "insertText": "RTCRayN_org_y(ray,N,i)"
  },
  {
    "label": "RTCRayN_org_z()",
    "kind": "Method",
    "detail": "Function (rh . ray . org_z =)",
    "insertText": "RTCRayN_org_z(ray,N,i)"
  },
  {
    "label": "RTCRayN_tnear()",
    "kind": "Method",
    "detail": "Function (rh . ray . tnear =)",
    "insertText": "RTCRayN_tnear(ray,N,i)"
  },
  {
    "label": "RTCRayN_dir_x()",
    "kind": "Method",
    "detail": "Function (rh . ray . dir_x =)",
    "insertText": "RTCRayN_dir_x(ray,N,i)"
  },
  {
    "label": "RTCRayN_dir_y()",
    "kind": "Method",
    "detail": "Function (rh . ray . dir_y =)",
    "insertText": "RTCRayN_dir_y(ray,N,i)"
  },
  {
    "label": "RTCRayN_dir_z()",
    "kind": "Method",
    "detail": "Function (rh . ray . dir_z =)",
    "insertText": "RTCRayN_dir_z(ray,N,i)"
  },
  {
    "label": "RTCRayN_time()",
    "kind": "Method",
    "detail": "Function (rh . ray . time =)",
    "insertText": "RTCRayN_time(ray,N,i)"
  },
  {
    "label": "RTCRayN_tfar()",
    "kind": "Method",
    "detail": "Function (rh . ray . tfar =)",
    "insertText": "RTCRayN_tfar(ray,N,i)"
  },
  {
    "label": "RTCRayN_mask()",
    "kind": "Method",
    "detail": "Function (rh . ray . mask =)",
    "insertText": "RTCRayN_mask(ray,N,i)"
  },
  {
    "label": "RTCRayN_id()",
    "kind": "Method",
    "detail": "Function (rh . ray . id =)",
    "insertText": "RTCRayN_id(ray,N,i)"
  },
  {
    "label": "RTCRayN_flags()",
    "kind": "Method",
    "detail": "Function (rh . ray . flags =)",
    "insertText": "RTCRayN_flags(ray,N,i)"
  },
  {
    "label": "RTCRayHitN_HitN()",
    "kind": "Method",
    "detail": "Function (RTCHitN* hit =)",
    "insertText": "RTCRayHitN_HitN(rayhitN,N)"
  },
  {
    "label": "RTCHitN_Ng_x()",
    "kind": "Method",
    "detail": "Function (rh . hit . Ng_x =)",
    "insertText": "RTCHitN_Ng_x(hit,N,i)"
  },
  {
    "label": "RTCHitN_Ng_y()",
    "kind": "Method",
    "detail": "Function (rh . hit . Ng_y =)",
    "insertText": "RTCHitN_Ng_y(hit,N,i)"
  },
  {
    "label": "RTCHitN_Ng_z()",
    "kind": "Method",
    "detail": "Function (rh . hit . Ng_z =)",
    "insertText": "RTCHitN_Ng_z(hit,N,i)"
  },
  {
    "label": "RTCHitN_u()",
    "kind": "Method",
    "detail": "Function (rh . hit . u =)",
    "insertText": "RTCHitN_u(hit,N,i)"
  },
  {
    "label": "RTCHitN_v()",
    "kind": "Method",
    "detail": "Function (rh . hit . v =)",
    "insertText": "RTCHitN_v(hit,N,i)"
  },
  {
    "label": "RTCHitN_primID()",
    "kind": "Method",
    "detail": "Function (rh . hit . primID =)",
    "insertText": "RTCHitN_primID(hit,N,i)"
  },
  {
    "label": "RTCHitN_geomID()",
    "kind": "Method",
    "detail": "Function (rh . hit . geomID =)",
    "insertText": "RTCHitN_geomID(hit,N,i)"
  }
]