[
  {
    "label": "MockFrameDecryptor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MockFrameDecryptor"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (# ifndef API_TEST_MOCK_FRAME_DECRYPTOR_H_ # define API_TEST_MOCK_FRAME_DECRYPTOR_H_ # include<vector> # include \" api / crypto / frame_decryptor_interface . h \" # include \" test / gmock . h \" namespace webrtc { class MockFrameDecryptor : public FrameDecryptorInterface { public :)",
    "insertText": "MOCK_METHOD(Result, Decrypt, (cricket::MediaType, const std::vector<uint32_t>&, rtc::ArrayView<const uint8_t>, rtc::ArrayView<const uint8_t>, rtc::ArrayView<uint8_t>), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(size_t, GetMaxPlaintextByteSize, (cricket::MediaType, size_t encrypted_frame_size), (override))"
  }
]