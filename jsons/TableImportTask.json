[
  {
    "label": "FTokenizedMessage",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTokenizedMessage"
  },
  {
    "label": "FColumnValueContainer",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FColumnValueContainer"
  },
  {
    "label": "FImportTableRow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FImportTableRow"
  },
  {
    "label": "TImportTable",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TImportTable"
  },
  {
    "label": "FTableImportTask",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTableImportTask"
  },
  {
    "label": "FTableImportTask()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FTableImportTask(const FString& InFilePath, FName InTableId, FTableImportService::TableImportCallback InCallback)"
  },
  {
    "label": "ParseHeader()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ParseHeader(const FString& HeaderLine)"
  },
  {
    "label": "CreateLayout()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CreateLayout(const FString& Line)"
  },
  {
    "label": "ParseData()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ParseData(TArray<FString>& Lines)"
  },
  {
    "label": "ImportTable()",
    "kind": "Method",
    "detail": "Function (ETableImportResult)",
    "insertText": "ImportTable()"
  },
  {
    "label": "SplitLineIntoValues()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SplitLineIntoValues(const FString& InLine, TArray<FString>& OutValues)"
  },
  {
    "label": "LoadFileToStringArray()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "LoadFileToStringArray(const FString& InFilePath, TArray<FString>& Lines)"
  },
  {
    "label": "AddError()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddError(const FText& Msg)"
  }
]