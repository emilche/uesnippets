[
  {
    "label": "OpenH264DecoderTemplateAdapter",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "OpenH264DecoderTemplateAdapter"
  },
  {
    "label": "SupportedFormats()",
    "kind": "Method",
    "detail": "Function (# ifndef API_VIDEO_CODECS_VIDEO_DECODER_FACTORY_TEMPLATE_OPEN_H264_ADAPTER_H_ # define API_VIDEO_CODECS_VIDEO_DECODER_FACTORY_TEMPLATE_OPEN_H264_ADAPTER_H_ # include<memory> # include<vector> # include \" modules / video_coding / codecs / h264 / include / h264 . h \" namespace webrtc { struct OpenH264DecoderTemplateAdapter { std::vector<SdpVideoFormat>)",
    "insertText": "SupportedFormats()"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# if)",
    "insertText": "defined(WEBRTC_USE_H264) return SupportedH264DecoderCodecs()"
  },
  {
    "label": "CreateDecoder()",
    "kind": "Method",
    "detail": "Function (# else return { } ; # endif } std::unique_ptr<VideoDecoder>)",
    "insertText": "CreateDecoder(const SdpVideoFormat& format)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# if)",
    "insertText": "defined(WEBRTC_USE_H264) return H264Decoder::Create()"
  }
]