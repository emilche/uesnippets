[
  {
    "label": "_Compare",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_Compare"
  },
  {
    "label": "_InputIterator1",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_InputIterator1"
  },
  {
    "label": "_InputIterator2",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_InputIterator2"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# ifndef _LIBCPP___ALGORITHM_LEXICOGRAPHICAL_COMPARE_H # define _LIBCPP___ALGORITHM_LEXICOGRAPHICAL_COMPARE_H # include<__algorithm / comp . h> # include<__algorithm / comp_ref_type . h> # include<__config> # include<__iterator / iterator_traits . h> # if !)",
    "insertText": "defined(_LIBCPP_HAS_NO_PRAGMA_SYSTEM_HEADER) # pragma GCC system_header #endif _LIBCPP_BEGIN_NAMESPACE_STD template <class _Compare, class _InputIterator1, class _InputIterator2> _LIBCPP_CONSTEXPR_AFTER_CXX17 bool __lexicographical_compare(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2 __first2, _InputIterator2 __last2, _Compare __comp)"
  },
  {
    "label": "lexicographical_compare()",
    "kind": "Method",
    "detail": "Function (} return false ; } template<class _InputIterator1,class _InputIterator2,class _Compare> _LIBCPP_NODISCARD_EXT _LIBCPP_INLINE_VISIBILITY _LIBCPP_CONSTEXPR_AFTER_CXX17 bool)",
    "insertText": "lexicographical_compare(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2 __first2, _InputIterator2 __last2, _Compare __comp)"
  },
  {
    "label": "_Comp_ref()",
    "kind": "Method",
    "detail": "Function (typedef __comp_ref_type<_Compare>::type _Comp_ref ; return _VSTD::__lexicographical_compare<)",
    "insertText": "_Comp_ref(__first1, __last1, __first2, __last2, __comp)"
  },
  {
    "label": "lexicographical_compare()",
    "kind": "Method",
    "detail": "Function (} template<class _InputIterator1,class _InputIterator2> _LIBCPP_NODISCARD_EXT _LIBCPP_INLINE_VISIBILITY _LIBCPP_CONSTEXPR_AFTER_CXX17 bool)",
    "insertText": "lexicographical_compare(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2 __first2, _InputIterator2 __last2)"
  }
]