[
  {
    "label": "FActiveTimerHandle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FActiveTimerHandle"
  },
  {
    "label": "FPaintArgs",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPaintArgs"
  },
  {
    "label": "FSlateWindowElementList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateWindowElementList"
  },
  {
    "label": "FWidgetStyle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWidgetStyle"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "FGeometry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGeometry"
  },
  {
    "label": "FPointerEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPointerEvent"
  },
  {
    "label": "FSlateBrush",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSlateBrush"
  },
  {
    "label": "UMGEDITOR_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMGEDITOR_API"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct(const FArguments& InArgs)"
  },
  {
    "label": "ChangeZoomLevel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ChangeZoomLevel(int32 ZoomLevelDelta, const FVector2D& WidgetSpaceZoomOrigin, bool bOverrideZoomLimiting)"
  },
  {
    "label": "PostChangedZoom()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostChangedZoom()"
  },
  {
    "label": "ScrollToLocation()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ScrollToLocation(const FGeometry& MyGeometry, FVector2D DesiredCenterPosition, const float InDeltaTime)"
  },
  {
    "label": "ZoomToLocation()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ZoomToLocation(const FVector2D& CurrentSizeWithoutZoom, const FVector2D& DesiredSize, bool bDoneScrolling)"
  },
  {
    "label": "ZoomToFit()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ZoomToFit(bool bInstantZoom)"
  },
  {
    "label": "HandleZoomToFit()",
    "kind": "Method",
    "detail": "Function (EActiveTimerReturnType)",
    "insertText": "HandleZoomToFit(double InCurrentTime, float InDeltaTime)"
  }
]