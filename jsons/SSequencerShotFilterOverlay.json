[
  {
    "label": "FPaintArgs",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPaintArgs"
  },
  {
    "label": "FSlateWindowElementList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateWindowElementList"
  },
  {
    "label": "SSequencerShotFilterOverlay",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SSequencerShotFilterOverlay"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Misc / Attribute . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Widgets / SLeafWidget . h \" # include \" Sequencer . h \" class FPaintArgs ; class FSlateWindowElementList ; class SSequencerShotFilterOverlay : public SLeafWidget { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SSequencerShotFilterOverlay)"
  },
  {
    "label": "SLATE_ATTRIBUTE()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_ATTRIBUTE(TRange<double>, ViewRange) SLATE_END_ARGS() void Construct(const FArguments& InArgs, TSharedRef<FSequencer> InSequencer)"
  },
  {
    "label": "OnPaint()",
    "kind": "Method",
    "detail": "Function (public : int32)",
    "insertText": "OnPaint(const FPaintArgs& Args, const FGeometry& AllottedGeometry, const FSlateRect& MyCullingRect, FSlateWindowElementList& OutDrawElements, int32 LayerId, const FWidgetStyle& InWidgetStyle, bool bParentEnabled)"
  },
  {
    "label": "ComputeDesiredSize()",
    "kind": "Method",
    "detail": "Function (FVector2D)",
    "insertText": "ComputeDesiredSize(float)"
  },
  {
    "label": "ComputeOverlayRanges()",
    "kind": "Method",
    "detail": "Function (protected : TArray<TRange<float>>)",
    "insertText": "ComputeOverlayRanges(TRange<float> TimeBounds, TArray< TRange<float>> RangesToSubtract)"
  }
]