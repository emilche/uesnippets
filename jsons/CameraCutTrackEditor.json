[
  {
    "label": "AActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AActor"
  },
  {
    "label": "FMenuBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMenuBuilder"
  },
  {
    "label": "FTrackEditorThumbnailPool",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTrackEditorThumbnailPool"
  },
  {
    "label": "UFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UFactory"
  },
  {
    "label": "UMovieSceneCameraCutTrack",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieSceneCameraCutTrack"
  },
  {
    "label": "FCameraCutTrackEditor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCameraCutTrackEditor"
  },
  {
    "label": "FTrackEditorBindingIDPicker",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTrackEditorBindingIDPicker"
  },
  {
    "label": "FMovieSceneObjectBindingID",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneObjectBindingID"
  },
  {
    "label": "FCameraCutSection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCameraCutSection"
  },
  {
    "label": "FCameraCutTrackEditor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCameraCutTrackEditor"
  },
  {
    "label": "CreateTrackEditor()",
    "kind": "Method",
    "detail": "Function (TSharedRef<ISequencerTrackEditor>)",
    "insertText": "CreateTrackEditor(TSharedRef<ISequencer> OwningSequencer)"
  },
  {
    "label": "AddKeyInternal()",
    "kind": "Method",
    "detail": "Function (FKeyPropertyResult)",
    "insertText": "AddKeyInternal(FFrameNumber AutoKeyTime, const FGuid ObjectGuid)"
  },
  {
    "label": "HandleAddCameraCutTrackMenuEntryExecute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleAddCameraCutTrackMenuEntryExecute()"
  },
  {
    "label": "HandleAddCameraCutComboButtonGetMenuContent()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "HandleAddCameraCutComboButtonGetMenuContent()"
  },
  {
    "label": "IsCameraPickable()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsCameraPickable( const AActor* const PickableActor )"
  },
  {
    "label": "HandleAddCameraCutComboButtonMenuEntryExecute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleAddCameraCutComboButtonMenuEntryExecute(AActor* Camera)"
  },
  {
    "label": "CreateNewSectionFromBinding()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateNewSectionFromBinding(FMovieSceneObjectBindingID InBindingID)"
  },
  {
    "label": "HandleToggleCanBlendExecute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleToggleCanBlendExecute(UMovieSceneCameraCutTrack* CameraCutTrack)"
  },
  {
    "label": "HandleToggleAutoArrangeSectionsExecute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleToggleAutoArrangeSectionsExecute(UMovieSceneCameraCutTrack* CameraCutTrack)"
  },
  {
    "label": "OnLockCameraClicked()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnLockCameraClicked(ECheckBoxState CheckBoxState)"
  },
  {
    "label": "ToggleLockCamera()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ToggleLockCamera()"
  }
]