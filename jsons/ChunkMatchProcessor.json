[
  {
    "label": "FMatchEntry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMatchEntry"
  },
  {
    "label": "IChunkMatchProcessor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IChunkMatchProcessor"
  },
  {
    "label": "FChunkMatchProcessorFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FChunkMatchProcessorFactory"
  },
  {
    "label": "IChunkMatchProcessor()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" Containers / Array . h \" # include \" Templates / Tuple . h \" # include \" Core / BlockRange . h \" # include \" Core / BlockStructure . h \" # include \" Generation / DataScanner . h \" namespace BuildPatchServices { struct FMatchEntry { FChunkMatch ChunkMatch ; FBlockStructure BlockStructure ; } ; class IChunkMatchProcessor { public : ~)",
    "insertText": "IChunkMatchProcessor()"
  },
  {
    "label": "ProcessMatch()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "ProcessMatch(const int32 Layer, const FChunkMatch& Match, FBlockStructure BuildSpace)"
  },
  {
    "label": "FlushLayer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FlushLayer(const int32 Layer, const uint64 UpToByteOffset)"
  },
  {
    "label": "CollectLayer()",
    "kind": "Method",
    "detail": "Function (FBlockRange)",
    "insertText": "CollectLayer(const int32 Layer, TArray<FMatchEntry>& OutData)"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (} ; class FChunkMatchProcessorFactory { public : IChunkMatchProcessor*)",
    "insertText": "Create()"
  }
]