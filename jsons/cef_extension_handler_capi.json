[
  {
    "label": "_cef_client_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_client_t"
  },
  {
    "label": "_cef_get_extension_resource_callback_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_get_extension_resource_callback_t"
  },
  {
    "label": "_cef_stream_reader_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_stream_reader_t"
  },
  {
    "label": "_cef_extension_handler_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_extension_handler_t"
  },
  {
    "label": "_cef_extension_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_extension_t"
  },
  {
    "label": "_cef_browser_settings_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_browser_settings_t"
  },
  {
    "label": "_cef_browser_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_browser_t"
  },
  {
    "label": "_cef_window_info_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_window_info_t"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (# ifndef CEF_INCLUDE_CAPI_CEF_EXTENSION_HANDLER_CAPI_H_ # define CEF_INCLUDE_CAPI_CEF_EXTENSION_HANDLER_CAPI_H_ # pragma once # include \" include / capi / cef_base_capi . h \" # include \" include / capi / cef_browser_capi . h \" # include \" include / capi / cef_extension_capi . h \" # include \" include / capi / cef_stream_capi . h \" # ifdef __cplusplus \" C \" { # endif struct _cef_client_t ; typedef struct _cef_get_extension_resource_callback_t { cef_base_ref_counted_t base ;)",
    "insertText": "void(CEF_CALLBACK* cont)(struct _cef_get_extension_resource_callback_t* self, struct _cef_stream_reader_t* stream)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(CEF_CALLBACK* cancel)( struct _cef_get_extension_resource_callback_t* self)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (} cef_get_extension_resource_callback_t ; typedef struct _cef_extension_handler_t { cef_base_ref_counted_t base ;)",
    "insertText": "void(CEF_CALLBACK* on_extension_load_failed)( struct _cef_extension_handler_t* self, cef_errorcode_t result)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(CEF_CALLBACK* on_extension_loaded)(struct _cef_extension_handler_t* self, struct _cef_extension_t* extension)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(CEF_CALLBACK* on_extension_unloaded)( struct _cef_extension_handler_t* self, struct _cef_extension_t* extension)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(CEF_CALLBACK* on_before_background_browser)( struct _cef_extension_handler_t* self, struct _cef_extension_t* extension, const cef_string_t* url, struct _cef_client_t** client, struct _cef_browser_settings_t* settings)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(CEF_CALLBACK* on_before_browser)( struct _cef_extension_handler_t* self, struct _cef_extension_t* extension, struct _cef_browser_t* browser, struct _cef_browser_t* active_browser, int index, const cef_string_t* url, int active, struct _cef_window_info_t* windowInfo, struct _cef_client_t** client, struct _cef_browser_settings_t* settings)"
  },
  {
    "label": "_cef_browser_t()",
    "kind": "Method",
    "detail": "Function (struct)",
    "insertText": "_cef_browser_t(CEF_CALLBACK* get_active_browser)( struct _cef_extension_handler_t* self, struct _cef_extension_t* extension, struct _cef_browser_t* browser, int include_incognito)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(CEF_CALLBACK* can_access_browser)(struct _cef_extension_handler_t* self, struct _cef_extension_t* extension, struct _cef_browser_t* browser, int include_incognito, struct _cef_browser_t* target_browser)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(CEF_CALLBACK* get_extension_resource)( struct _cef_extension_handler_t* self, struct _cef_extension_t* extension, struct _cef_browser_t* browser, const cef_string_t* file, struct _cef_get_extension_resource_callback_t* callback)"
  }
]