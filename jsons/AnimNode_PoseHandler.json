[
  {
    "label": "FAnimNode_PoseHandler",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimNode_PoseHandler"
  },
  {
    "label": "FAnimInstanceProxy",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimInstanceProxy"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" Animation / AnimationAsset . h \" # include \" Animation / PoseAsset . h \" # include \" Animation / AnimNode_AssetPlayerBase . h \" # include \" AnimNode_PoseHandler . generated . h \")",
    "insertText": "USTRUCT(BlueprintInternalUseOnly)"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() public: UPROPERTY(EditAnywhere, BlueprintReadWrite, Category = Settings, meta = (PinHiddenByDefault))"
  },
  {
    "label": "FAnimNode_PoseHandler()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "FAnimNode_PoseHandler() :PoseAsset(nullptr)"
  },
  {
    "label": "GetCurrentAssetTime()",
    "kind": "Method",
    "detail": "Function (} float)",
    "insertText": "GetCurrentAssetTime()"
  },
  {
    "label": "CacheBones_AnyThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CacheBones_AnyThread(const FAnimationCacheBonesContext& Context)"
  },
  {
    "label": "UpdateAssetPlayer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateAssetPlayer(const FAnimationUpdateContext& Context)"
  },
  {
    "label": "GatherDebugData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GatherDebugData(FNodeDebugData& DebugData)"
  },
  {
    "label": "GetAccumulatedTime()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetAccumulatedTime()"
  },
  {
    "label": "GetAnimAsset()",
    "kind": "Method",
    "detail": "Function (} UAnimationAsset*)",
    "insertText": "GetAnimAsset()"
  },
  {
    "label": "OnPoseAssetChange()",
    "kind": "Method",
    "detail": "Function (# endif protected : void)",
    "insertText": "OnPoseAssetChange()"
  },
  {
    "label": "RebuildPoseList()",
    "kind": "Method",
    "detail": "Function (} TWeakObjectPtr<UPoseAsset> CurrentPoseAsset ; FAnimExtractContext PoseExtractContext ; TArray<float> BoneBlendWeights ; void)",
    "insertText": "RebuildPoseList(const FBoneContainer& InBoneContainer, const UPoseAsset* InPoseAsset)"
  },
  {
    "label": "CacheBoneBlendWeights()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CacheBoneBlendWeights(FAnimInstanceProxy* InstanceProxy)"
  },
  {
    "label": "UpdatePoseAssetProperty()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "UpdatePoseAssetProperty(struct FAnimInstanceProxy* InstanceProxy)"
  }
]