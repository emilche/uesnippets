[
  {
    "label": "FFbxAttributeInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFbxAttributeInfo"
  },
  {
    "label": "FFbxNodeInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFbxNodeInfo"
  },
  {
    "label": "FFbxSceneInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFbxSceneInfo"
  },
  {
    "label": "ITableRow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITableRow"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "SFbxSceneTreeView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SFbxSceneTreeView"
  },
  {
    "label": "SFbxSceneTreeView()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" Containers / BitArray . h \" # include \" Containers / Set . h \" # include \" Containers / SparseArray . h \" # include \" Delegates / Delegate . h \" # include \" HAL / PlatformCrt . h \" # include \" Input / Reply . h \" # include \" Misc / Optional . h \" # include \" Styling / SlateTypes . h \" # include \" Templates / SharedPointer . h \" # include \" Templates / TypeHash . h \" # include \" Types / SlateEnums . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Widgets / Views / STableViewBase . h \" # include \" Widgets / Views / STreeView . h \" class FFbxAttributeInfo ; class FFbxNodeInfo ; class FFbxSceneInfo ; class ITableRow ; class SWidget ; typedef TSharedPtr<FFbxNodeInfo> FbxNodeInfoPtr ; class SFbxSceneTreeView : public STreeView<FbxNodeInfoPtr> { public : ~)",
    "insertText": "SFbxSceneTreeView()"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SLATE_BEGIN_ARGS(SFbxSceneTreeView) : _SceneInfo(NULL)"
  },
  {
    "label": "SLATE_ARGUMENT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_ARGUMENT(TSharedPtr<FFbxSceneInfo>, SceneInfo) SLATE_END_ARGS() void Construct(const FArguments& InArgs)"
  },
  {
    "label": "OnGenerateRowFbxSceneTreeView()",
    "kind": "Method",
    "detail": "Function (TSharedRef<ITableRow>)",
    "insertText": "OnGenerateRowFbxSceneTreeView(FbxNodeInfoPtr Item, const TSharedRef< STableViewBase >& OwnerTable)"
  },
  {
    "label": "OnGetChildrenFbxSceneTreeView()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnGetChildrenFbxSceneTreeView(FbxNodeInfoPtr InParent, TArray< FbxNodeInfoPtr >& OutChildren)"
  },
  {
    "label": "OnToggleSelectAll()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnToggleSelectAll(ECheckBoxState CheckType)"
  },
  {
    "label": "OnExpandAll()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnExpandAll()"
  },
  {
    "label": "OnCollapseAll()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnCollapseAll()"
  },
  {
    "label": "OnOpenContextMenu()",
    "kind": "Method",
    "detail": "Function (protected : TSharedPtr<FFbxSceneInfo> SceneInfo ; TArray<FbxNodeInfoPtr> FbxRootNodeArray ; TSharedPtr<SWidget>)",
    "insertText": "OnOpenContextMenu()"
  },
  {
    "label": "AddSelectionToImport()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddSelectionToImport()"
  },
  {
    "label": "RemoveSelectionFromImport()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveSelectionFromImport()"
  },
  {
    "label": "SetSelectionImportState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSelectionImportState(bool MarkForImport)"
  },
  {
    "label": "OnSelectionChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSelectionChanged(FbxNodeInfoPtr Item, ESelectInfo::Type SelectionType)"
  },
  {
    "label": "GotoAsset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GotoAsset(TSharedPtr<FFbxAttributeInfo> AssetAttribute)"
  },
  {
    "label": "RecursiveSetImport()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RecursiveSetImport(FbxNodeInfoPtr NodeInfoPtr, bool ImportStatus)"
  }
]