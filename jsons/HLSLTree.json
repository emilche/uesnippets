[
  {
    "label": "FMaterial",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMaterial"
  },
  {
    "label": "FMaterialCompilationOutput",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMaterialCompilationOutput"
  },
  {
    "label": "FStaticParameterSet",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FStaticParameterSet"
  },
  {
    "label": "FPreshaderData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPreshaderData"
  },
  {
    "label": "FNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNode"
  },
  {
    "label": "FScope",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FScope"
  },
  {
    "label": "FStatement",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStatement"
  },
  {
    "label": "FExpression",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FExpression"
  },
  {
    "label": "FFunction",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFunction"
  },
  {
    "label": "FExpressionLocalPHI",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FExpressionLocalPHI"
  },
  {
    "label": "FRequestedType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRequestedType"
  },
  {
    "label": "FEmitContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEmitContext"
  },
  {
    "label": "FEmitScope",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEmitScope"
  },
  {
    "label": "FEmitShaderExpression",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEmitShaderExpression"
  },
  {
    "label": "FErrorHandlerInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FErrorHandlerInterface"
  },
  {
    "label": "FNullErrorHandler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNullErrorHandler"
  },
  {
    "label": "of",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "of"
  },
  {
    "label": "FNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNode"
  },
  {
    "label": "FTree",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTree"
  },
  {
    "label": "FOwnedNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FOwnedNode"
  },
  {
    "label": "FEmitPreshaderScope",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FEmitPreshaderScope"
  },
  {
    "label": "FStatement",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStatement"
  },
  {
    "label": "FTree",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTree"
  },
  {
    "label": "FEmitContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEmitContext"
  },
  {
    "label": "FExpressionLocalPHI",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FExpressionLocalPHI"
  },
  {
    "label": "types",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "types"
  },
  {
    "label": "type",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "type"
  },
  {
    "label": "FRequestedType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRequestedType"
  },
  {
    "label": "FPreparedComponent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPreparedComponent"
  },
  {
    "label": "FPreparedType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPreparedType"
  },
  {
    "label": "FPrepareValueResult",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPrepareValueResult"
  },
  {
    "label": "FExpression",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FExpression"
  },
  {
    "label": "FEmitContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEmitContext"
  },
  {
    "label": "FEmitValueShaderResult",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FEmitValueShaderResult"
  },
  {
    "label": "FEmitCustomHLSLParameterResult",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FEmitCustomHLSLParameterResult"
  },
  {
    "label": "FEmitValuePreshaderResult",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FEmitValuePreshaderResult"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FExpressionDerivatives",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FExpressionDerivatives"
  },
  {
    "label": "FExpression",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FExpression"
  },
  {
    "label": "FTree",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTree"
  },
  {
    "label": "FEmitContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEmitContext"
  },
  {
    "label": "FExpressionForward",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FExpressionForward"
  },
  {
    "label": "FExpressionPreviousFrameSwitch",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FExpressionPreviousFrameSwitch"
  },
  {
    "label": "FExpressionFunctionCall",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FExpressionFunctionCall"
  },
  {
    "label": "FExpressionOperation",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FExpressionOperation"
  },
  {
    "label": "FExpressionSetStructField",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FExpressionSetStructField"
  },
  {
    "label": "FFunction",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFunction"
  },
  {
    "label": "FScope",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FScope"
  },
  {
    "label": "FTree",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTree"
  },
  {
    "label": "FExpression",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FExpression"
  },
  {
    "label": "FEmitContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEmitContext"
  },
  {
    "label": "FTree",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTree"
  },
  {
    "label": "FExpressionLocalPHI",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FExpressionLocalPHI"
  },
  {
    "label": "FOwnerScope",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FOwnerScope"
  },
  {
    "label": "MakeArrayView()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "MakeArrayView(&Owner, 1)"
  },
  {
    "label": "FRequestedType()",
    "kind": "Method",
    "detail": "Function (ENGINE_API)",
    "insertText": "FRequestedType(const Shader::FType& InType, bool bDefaultRequest = true)"
  },
  {
    "label": "FRequestedType()",
    "kind": "Method",
    "detail": "Function (ENGINE_API)",
    "insertText": "FRequestedType(const FRequestedType& InType, bool bDefaultRequest)"
  },
  {
    "label": "SetComponentRequest()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetComponentRequest(int32 Index, bool bRequest = true)"
  },
  {
    "label": "SetFieldRequested()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFieldRequested(const Shader::FStructField* Field, bool bRequest = true)"
  },
  {
    "label": "SetFieldRequested()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFieldRequested(const Shader::FStructField* Field, const FRequestedType& InRequest)"
  },
  {
    "label": "IsRequestedEvaluation()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "IsRequestedEvaluation(Evaluation)"
  },
  {
    "label": "SetLoopEvaluation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetLoopEvaluation(FEmitScope& Scope)"
  },
  {
    "label": "CombineComponents()",
    "kind": "Method",
    "detail": "Function (FPreparedComponent)",
    "insertText": "CombineComponents(const FPreparedComponent& Lhs, const FPreparedComponent& Rhs)"
  },
  {
    "label": "SetEvaluation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetEvaluation(EExpressionEvaluation Evaluation)"
  },
  {
    "label": "MergeEvaluation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MergeEvaluation(EExpressionEvaluation Evaluation)"
  },
  {
    "label": "SetLoopEvaluation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetLoopEvaluation(FEmitScope& Scope, const FRequestedType& RequestedType)"
  },
  {
    "label": "SetField()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetField(const Shader::FStructField* Field, const FPreparedType& FieldType)"
  },
  {
    "label": "SetComponent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetComponent(int32 Index, const FPreparedComponent& InComponent)"
  },
  {
    "label": "SetComponentBounds()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetComponentBounds(int32 Index, const Shader::FComponentBounds Bounds)"
  },
  {
    "label": "MergeComponent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MergeComponent(int32 Index, const FPreparedComponent& InComponent)"
  },
  {
    "label": "EnsureNumComponents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnsureNumComponents(int32 NumComponents)"
  },
  {
    "label": "MergePreparedTypes()",
    "kind": "Method",
    "detail": "Function (FPreparedType)",
    "insertText": "MergePreparedTypes(const FPreparedType& Lhs, const FPreparedType& Rhs)"
  },
  {
    "label": "MakeNonLWCType()",
    "kind": "Method",
    "detail": "Function (FPreparedType)",
    "insertText": "MakeNonLWCType(const FPreparedType& Type)"
  },
  {
    "label": "SetTypeVoid()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetTypeVoid()"
  },
  {
    "label": "SetType()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetType(FEmitContext& Context, const FRequestedType& RequestedType, EExpressionEvaluation Evaluation, const Shader::FType& Type)"
  },
  {
    "label": "SetType()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetType(FEmitContext& Context, const FRequestedType& RequestedType, const FPreparedType& Type)"
  },
  {
    "label": "TryMergePreparedType()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TryMergePreparedType(FEmitContext& Context, const Shader::FType& Type)"
  },
  {
    "label": "AddPreviousScope()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddPreviousScope(FScope& Scope)"
  },
  {
    "label": "Destroy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Destroy(FTree* Tree)"
  },
  {
    "label": "Finalize()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Finalize()"
  },
  {
    "label": "PushOwner()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PushOwner(UObject* Owner)"
  },
  {
    "label": "AssignLocal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AssignLocal(FScope& Scope, const FName& LocalName, const FExpression* Value)"
  },
  {
    "label": "GetAnalyticDerivatives()",
    "kind": "Method",
    "detail": "Function (FExpressionDerivatives)",
    "insertText": "GetAnalyticDerivatives(const FExpression* InExpression)"
  },
  {
    "label": "NewUnaryOp()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "NewUnaryOp(EOperation::Abs, Input)"
  },
  {
    "label": "NewUnaryOp()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "NewUnaryOp(EOperation::Neg, Input)"
  },
  {
    "label": "NewUnaryOp()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "NewUnaryOp(EOperation::Saturate, Input)"
  },
  {
    "label": "NewUnaryOp()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "NewUnaryOp(EOperation::Sum, Input)"
  },
  {
    "label": "NewUnaryOp()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "NewUnaryOp(EOperation::Rcp, Input)"
  },
  {
    "label": "NewUnaryOp()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "NewUnaryOp(EOperation::Sqrt, Input)"
  },
  {
    "label": "NewUnaryOp()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "NewUnaryOp(EOperation::Rsqrt, Input)"
  },
  {
    "label": "NewUnaryOp()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "NewUnaryOp(EOperation::Log2, Input)"
  },
  {
    "label": "NewUnaryOp()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "NewUnaryOp(EOperation::Exp, Input)"
  },
  {
    "label": "NewUnaryOp()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "NewUnaryOp(EOperation::Exp2, Input)"
  },
  {
    "label": "NewUnaryOp()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "NewUnaryOp(EOperation::Frac, Input)"
  },
  {
    "label": "NewUnaryOp()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "NewUnaryOp(EOperation::Length, Input)"
  },
  {
    "label": "NewUnaryOp()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "NewUnaryOp(EOperation::Normalize, Input)"
  },
  {
    "label": "NewUnaryOp()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "NewUnaryOp(EOperation::Sin, Input)"
  },
  {
    "label": "NewUnaryOp()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "NewUnaryOp(EOperation::Cos, Input)"
  },
  {
    "label": "NewBinaryOp()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "NewBinaryOp(EOperation::Add, Lhs, Rhs)"
  },
  {
    "label": "NewBinaryOp()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "NewBinaryOp(EOperation::Sub, Lhs, Rhs)"
  },
  {
    "label": "NewBinaryOp()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "NewBinaryOp(EOperation::Mul, Lhs, Rhs)"
  },
  {
    "label": "NewBinaryOp()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "NewBinaryOp(EOperation::Div, Lhs, Rhs)"
  },
  {
    "label": "NewBinaryOp()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "NewBinaryOp(EOperation::Fmod, Lhs, Rhs)"
  },
  {
    "label": "NewBinaryOp()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "NewBinaryOp(EOperation::Modulo, Lhs, Rhs)"
  },
  {
    "label": "NewBinaryOp()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "NewBinaryOp(EOperation::Step, Lhs, Rhs)"
  },
  {
    "label": "NewBinaryOp()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "NewBinaryOp(EOperation::PowPositiveClamped, Lhs, Rhs)"
  },
  {
    "label": "NewBinaryOp()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "NewBinaryOp(EOperation::Min, Lhs, Rhs)"
  },
  {
    "label": "NewBinaryOp()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "NewBinaryOp(EOperation::Max, Lhs, Rhs)"
  },
  {
    "label": "NewBinaryOp()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "NewBinaryOp(EOperation::Less, Lhs, Rhs)"
  },
  {
    "label": "NewBinaryOp()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "NewBinaryOp(EOperation::Greater, Lhs, Rhs)"
  },
  {
    "label": "NewBinaryOp()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "NewBinaryOp(EOperation::LessEqual, Lhs, Rhs)"
  },
  {
    "label": "NewBinaryOp()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "NewBinaryOp(EOperation::GreaterEqual, Lhs, Rhs)"
  },
  {
    "label": "NewTernaryOp()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "NewTernaryOp(EOperation::SmoothStep, Input0,\tInput1, Input2)"
  },
  {
    "label": "NewMul()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "NewMul(Input, Input)"
  },
  {
    "label": "NewUnaryOp()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "NewUnaryOp(EOperation::TruncateLWC, Input)"
  },
  {
    "label": "RegisterNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterNode(FNode* Node)"
  },
  {
    "label": "RegisterExpression()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterExpression(FExpression* Expression, FXxHash64 Hash)"
  },
  {
    "label": "RegisterExpression()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterExpression(FExpressionLocalPHI* Expression, FXxHash64 Hash)"
  },
  {
    "label": "AddCurrentOwner()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddCurrentOwner(FExpression* Expression)"
  },
  {
    "label": "RegisterStatement()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterStatement(FScope& Scope, FStatement* Statement)"
  }
]