[
  {
    "label": "FRenderCommandFence",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRenderCommandFence"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "BeginFence()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Tasks / Task . h \" class FRenderCommandFence { public : enum class ESyncDepth { RenderThread,RHIThread,Swapchain } ; void)",
    "insertText": "BeginFence(ESyncDepth SyncDepth = ESyncDepth::RenderThread)"
  },
  {
    "label": "Wait()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Wait(bool bProcessGameThreadTasks = false)"
  },
  {
    "label": "IsFenceComplete()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsFenceComplete()"
  },
  {
    "label": "FRenderCommandFence()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FRenderCommandFence()"
  }
]