[
  {
    "label": "computeYw()",
    "kind": "Method",
    "detail": "Function (# ifndef INCLUDED_IMF_RGBA_YCA_H # define INCLUDED_IMF_RGBA_YCA_H # include \" ImfExport . h \" # include \" ImfNamespace . h \" # include \" ImfChromaticities . h \" # include \" ImfRgba . h \" OPENEXR_IMF_INTERNAL_NAMESPACE_HEADER_ENTER namespace RgbaYca { const int N = 2 7 ; const int N2 = N / 2 ; IMF_EXPORT IMATH_NAMESPACE::V3f)",
    "insertText": "computeYw(const Chromaticities& cr)"
  },
  {
    "label": "RGBAtoYCA()",
    "kind": "Method",
    "detail": "Function (IMF_EXPORT void)",
    "insertText": "RGBAtoYCA(const IMATH_NAMESPACE::V3f& yw, int n, bool aIsValid, const Rgba rgbaIn[ ], Rgba ycaOut[ ])"
  },
  {
    "label": "decimateChromaHoriz()",
    "kind": "Method",
    "detail": "Function (IMF_EXPORT void)",
    "insertText": "decimateChromaHoriz(int n, const Rgba ycaIn[ ], Rgba ycaOut[ ])"
  },
  {
    "label": "decimateChromaVert()",
    "kind": "Method",
    "detail": "Function (IMF_EXPORT void)",
    "insertText": "decimateChromaVert(int n, const Rgba* const ycaIn[N], Rgba ycaOut[ ])"
  },
  {
    "label": "roundYCA()",
    "kind": "Method",
    "detail": "Function (IMF_EXPORT void)",
    "insertText": "roundYCA(int n, unsigned int roundY, unsigned int roundC, const Rgba ycaIn[ ], Rgba ycaOut[ ])"
  },
  {
    "label": "reconstructChromaHoriz()",
    "kind": "Method",
    "detail": "Function (IMF_EXPORT void)",
    "insertText": "reconstructChromaHoriz(int n, const Rgba ycaIn[ ], Rgba ycaOut[ ])"
  },
  {
    "label": "reconstructChromaVert()",
    "kind": "Method",
    "detail": "Function (IMF_EXPORT void)",
    "insertText": "reconstructChromaVert(int n, const Rgba* const ycaIn[N], Rgba ycaOut[ ])"
  },
  {
    "label": "YCAtoRGBA()",
    "kind": "Method",
    "detail": "Function (IMF_EXPORT void)",
    "insertText": "YCAtoRGBA(const IMATH_NAMESPACE::V3f& yw, int n, const Rgba ycaIn[ ], Rgba rgbaOut[ ])"
  },
  {
    "label": "fixSaturation()",
    "kind": "Method",
    "detail": "Function (IMF_EXPORT void)",
    "insertText": "fixSaturation(const IMATH_NAMESPACE::V3f& yw, int n, const Rgba* const rgbaIn[3], Rgba rgbaOut[ ])"
  }
]