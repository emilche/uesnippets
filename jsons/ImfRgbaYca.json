[
  {
    "label": "computeYw()",
    "kind": "Method",
    "detail": "Function (IMATH_NAMESPACE::V3f)",
    "insertText": "computeYw(const Chromaticities& cr)"
  },
  {
    "label": "RGBAtoYCA()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RGBAtoYCA(\n    const IMATH_NAMESPACE::V3f& yw,\n    int                         n,\n    bool                        aIsValid,\n    const Rgba                  rgbaIn[/*n*/],\n    Rgba                        ycaOut[/*n*/])"
  },
  {
    "label": "decimateChromaHoriz()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "decimateChromaHoriz(int n, const Rgba ycaIn[/*n+N-1*/], Rgba ycaOut[/*n*/])"
  },
  {
    "label": "decimateChromaVert()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "decimateChromaVert(int n, const Rgba* const ycaIn[N], Rgba ycaOut[/*n*/])"
  },
  {
    "label": "roundYCA()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "roundYCA(\n    int          n,\n    unsigned int roundY,\n    unsigned int roundC,\n    const Rgba   ycaIn[/*n*/],\n    Rgba         ycaOut[/*n*/])"
  },
  {
    "label": "reconstructChromaHoriz()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "reconstructChromaHoriz(int n, const Rgba ycaIn[/*n+N-1*/], Rgba ycaOut[/*n*/])"
  },
  {
    "label": "reconstructChromaVert()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "reconstructChromaVert(int n, const Rgba* const ycaIn[N], Rgba ycaOut[/*n*/])"
  },
  {
    "label": "YCAtoRGBA()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "YCAtoRGBA(\n    const IMATH_NAMESPACE::V3f& yw,\n    int                         n,\n    const Rgba                  ycaIn[/*n*/],\n    Rgba                        rgbaOut[/*n*/])"
  },
  {
    "label": "fixSaturation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "fixSaturation(\n    const IMATH_NAMESPACE::V3f& yw,\n    int                         n,\n    const Rgba* const           rgbaIn[3],\n    Rgba                        rgbaOut[/*n*/])"
  }
]