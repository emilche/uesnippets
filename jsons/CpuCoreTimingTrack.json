[
  {
    "label": "FThreadTrackEvent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FThreadTrackEvent"
  },
  {
    "label": "FTimingEventsTrackDrawState",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTimingEventsTrackDrawState"
  },
  {
    "label": "FCpuCoreEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCpuCoreEvent"
  },
  {
    "label": "FContextSwitchesSharedState",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FContextSwitchesSharedState"
  },
  {
    "label": "FCpuCoreTimingTrack",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCpuCoreTimingTrack"
  },
  {
    "label": "INSIGHTS_DECLARE_RTTI()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" Insights / ViewModels / TimingEventsTrack . h \" class FThreadTrackEvent ; struct FTimingEventsTrackDrawState ; namespace TraceServices { struct FCpuCoreEvent ; } ; namespace UE::Insights::ContextSwitches { class FContextSwitchesSharedState ; class FCpuCoreTimingTrack : public FTimingEventsTrack {)",
    "insertText": "INSIGHTS_DECLARE_RTTI(FCpuCoreTimingTrack, FTimingEventsTrack) public: explicit FCpuCoreTimingTrack(FContextSwitchesSharedState& InSharedState, const FString& InName, uint32 InCoreNumber)"
  },
  {
    "label": "FCpuCoreTimingTrack()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FCpuCoreTimingTrack()"
  },
  {
    "label": "GetCoreNumber()",
    "kind": "Method",
    "detail": "Function (} uint32)",
    "insertText": "GetCoreNumber()"
  },
  {
    "label": "BuildDrawState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildDrawState(ITimingEventsTrackDrawStateBuilder& Builder, const ITimingTrackUpdateContext& Context)"
  },
  {
    "label": "BuildFilteredDrawState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildFilteredDrawState(ITimingEventsTrackDrawStateBuilder& Builder, const ITimingTrackUpdateContext& Context)"
  },
  {
    "label": "Draw()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Draw(const ITimingTrackDrawContext& Context)"
  },
  {
    "label": "PostDraw()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostDraw(const ITimingTrackDrawContext& Context)"
  },
  {
    "label": "InitTooltip()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitTooltip(FTooltipDrawState& InOutTooltip, const ITimingEvent& InTooltipEvent)"
  },
  {
    "label": "BuildContextMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildContextMenu(FMenuBuilder& MenuBuilder)"
  },
  {
    "label": "SearchEvent()",
    "kind": "Method",
    "detail": "Function (const TSharedPtr<const ITimingEvent>)",
    "insertText": "SearchEvent(const FTimingEventSearchParameters& InSearchParameters)"
  },
  {
    "label": "GetEvent()",
    "kind": "Method",
    "detail": "Function (protected : const TSharedPtr<const ITimingEvent>)",
    "insertText": "GetEvent(double InTime, double SecondsPerPixel, int32 Depth)"
  },
  {
    "label": "HasCustomFilter()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasCustomFilter()"
  },
  {
    "label": "AddCoreTimingEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddCoreTimingEvent(ITimingEventsTrackDrawStateBuilder& Builder, const TraceServices::FCpuCoreEvent& CpuCoreEvent)"
  },
  {
    "label": "GetThreadName()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetThreadName(uint32 InSystemThreadId)"
  },
  {
    "label": "GetMaxDepth()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetMaxDepth()"
  }
]