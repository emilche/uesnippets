[
  {
    "label": "Event",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Event"
  },
  {
    "label": "Type",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Type"
  },
  {
    "label": "Enum",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Enum"
  },
  {
    "label": "Event()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" Windows / MinimalWindowsApi . h \" class Event { public : struct Type { enum Enum { MANUAL_RESET,AUTO_RESET } ; } ;)",
    "insertText": "Event(const wchar_t* name, Type::Enum type)"
  },
  {
    "label": "Event()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "Event(void)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset(void)"
  },
  {
    "label": "Signal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Signal(void)"
  },
  {
    "label": "Wait()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Wait(void)"
  },
  {
    "label": "WaitTimeout()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "WaitTimeout(unsigned int milliSeconds)"
  },
  {
    "label": "TryWait()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TryWait(void)"
  }
]