[
  {
    "label": "IsacSamplingRate",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "IsacSamplingRate"
  },
  {
    "label": "ISACBandwidth",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ISACBandwidth"
  },
  {
    "label": "INIT_HDR_RATE_WB()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_AUDIO_CODING_CODECS_ISAC_MAIN_SOURCE_BANDWIDTH_ESTIMATOR_H_ # define MODULES_AUDIO_CODING_CODECS_ISAC_MAIN_SOURCE_BANDWIDTH_ESTIMATOR_H_ # include<stddef . h> # include \" modules / audio_coding / codecs / isac / main / source / settings . h \" # include \" modules / audio_coding / codecs / isac / main / source / structs . h \" # define MIN_ISAC_BW 1 0 0 0 0 # define MIN_ISAC_BW_LB 1 0 0 0 0 # define MIN_ISAC_BW_UB 2 5 0 0 0 # define MAX_ISAC_BW 5 6 0 0 0 # define MAX_ISAC_BW_UB 3 2 0 0 0 # define MAX_ISAC_BW_LB 3 2 0 0 0 # define MIN_ISAC_MD 5 # define MAX_ISAC_MD 2 5 # define HEADER_SIZE 3 5 # define INIT_FRAME_LEN_WB 6 0 # define INIT_FRAME_LEN_SWB 3 0 # define INIT_BN_EST_WB 2 0 e3f # define INIT_BN_EST_SWB 5 6 e3f # define)",
    "insertText": "INIT_HDR_RATE_WB((float)HEADER_SIZE * 8.0f * 1000.0f / (float)INIT_FRAME_LEN_WB) #define INIT_HDR_RATE_SWB \\ ((float)HEADER_SIZE * 8.0f * 1000.0f / (float)INIT_FRAME_LEN_SWB) #define BURST_LEN 3 #define BURST_INTERVAL 500 #define INIT_BURST_LEN 5 #define INIT_RATE_WB INIT_BN_EST_WB #define INIT_RATE_SWB INIT_BN_EST_SWB #if defined(__cplusplus)"
  },
  {
    "label": "WebRtcIsac_InitBandwidthEstimator()",
    "kind": "Method",
    "detail": "Function (# endif int32_t)",
    "insertText": "WebRtcIsac_InitBandwidthEstimator(BwEstimatorstr* bwest_str, enum IsacSamplingRate encoderSampRate, enum IsacSamplingRate decoderSampRate)"
  },
  {
    "label": "WebRtcIsac_UpdateBandwidthEstimator()",
    "kind": "Method",
    "detail": "Function (int16_t)",
    "insertText": "WebRtcIsac_UpdateBandwidthEstimator(BwEstimatorstr* bwest_str, uint16_t rtp_number, int32_t frame_length, uint32_t send_ts, uint32_t arr_ts, size_t pksize)"
  },
  {
    "label": "WebRtcIsac_UpdateUplinkBwImpl()",
    "kind": "Method",
    "detail": "Function (int16_t)",
    "insertText": "WebRtcIsac_UpdateUplinkBwImpl(BwEstimatorstr* bwest_str, int16_t Index, enum IsacSamplingRate encoderSamplingFreq)"
  },
  {
    "label": "WebRtcIsac_GetDownlinkBwJitIndexImpl()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WebRtcIsac_GetDownlinkBwJitIndexImpl(BwEstimatorstr* bwest_str, int16_t* bottleneckIndex, int16_t* jitterInfo, enum IsacSamplingRate decoderSamplingFreq)"
  },
  {
    "label": "WebRtcIsac_GetDownlinkBandwidth()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "WebRtcIsac_GetDownlinkBandwidth(const BwEstimatorstr* bwest_str)"
  },
  {
    "label": "WebRtcIsac_GetDownlinkMaxDelay()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "WebRtcIsac_GetDownlinkMaxDelay(const BwEstimatorstr* bwest_str)"
  },
  {
    "label": "WebRtcIsac_GetUplinkBandwidth()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "WebRtcIsac_GetUplinkBandwidth(const BwEstimatorstr* bwest_str)"
  },
  {
    "label": "WebRtcIsac_GetUplinkMaxDelay()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "WebRtcIsac_GetUplinkMaxDelay(const BwEstimatorstr* bwest_str)"
  },
  {
    "label": "WebRtcIsac_GetMinBytes()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "WebRtcIsac_GetMinBytes(RateModel* State, int StreamSize, int FrameLen, double BottleNeck, double DelayBuildUp, enum ISACBandwidth bandwidth)"
  },
  {
    "label": "WebRtcIsac_UpdateRateModel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WebRtcIsac_UpdateRateModel(RateModel* State, int StreamSize, int FrameSamples, double BottleNeck)"
  },
  {
    "label": "WebRtcIsac_InitRateModel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WebRtcIsac_InitRateModel(RateModel* State)"
  },
  {
    "label": "WebRtcIsac_GetNewFrameLength()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "WebRtcIsac_GetNewFrameLength(double bottle_neck, int current_framelength)"
  },
  {
    "label": "WebRtcIsac_UpdateUplinkJitter()",
    "kind": "Method",
    "detail": "Function (int16_t)",
    "insertText": "WebRtcIsac_UpdateUplinkJitter(BwEstimatorstr* bwest_str, int32_t index)"
  }
]