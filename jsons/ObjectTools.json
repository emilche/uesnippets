[
  {
    "label": "FNamePermissionList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNamePermissionList"
  },
  {
    "label": "FTextureRenderTargetResource",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTextureRenderTargetResource"
  },
  {
    "label": "SWindow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWindow"
  },
  {
    "label": "UExporter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UExporter"
  },
  {
    "label": "UFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UFactory"
  },
  {
    "label": "USoundWave",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USoundWave"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "to"
  },
  {
    "label": "FPackageGroupName",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPackageGroupName"
  },
  {
    "label": "FArchiveTopLevelReferenceCollector",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FArchiveTopLevelReferenceCollector"
  },
  {
    "label": "default",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "default"
  },
  {
    "label": "FMoveInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMoveInfo"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "to"
  },
  {
    "label": "FConsolidationResults",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FConsolidationResults"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "for"
  },
  {
    "label": "FReplaceRequest",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FReplaceRequest"
  },
  {
    "label": "FMoveDialogInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMoveDialogInfo"
  },
  {
    "label": "EInUseSearchOption",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EInUseSearchOption"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "can",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "can"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "IsObjectBrowsable()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsObjectBrowsable( UObject* Obj )"
  },
  {
    "label": "FArchiveTopLevelReferenceCollector()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FArchiveTopLevelReferenceCollector(\n\t\t\tTArray<UObject*>* InObjectArray,\n\t\t\tconst TArray<UObject*>& InIgnoreOuters,\n\t\t\tconst TArray<UClass*>& InIgnoreClasses )"
  },
  {
    "label": "Set()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Set(const TCHAR* InFullPackageName, const TCHAR* InNewObjName)"
  },
  {
    "label": "HandleFullyLoadingPackages()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HandleFullyLoadingPackages( const TArray<UObject*>& Objects, const FText& OperationText )"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT(\"ObjectTools::FConsolidationResults\")"
  },
  {
    "label": "ConsolidateObjects()",
    "kind": "Method",
    "detail": "Function (FConsolidationResults)",
    "insertText": "ConsolidateObjects(UObject* ObjectToConsolidateTo, TArray<UObject*>& ObjectsToConsolidate, bool bShowDeleteConfirmation = true )"
  },
  {
    "label": "ConsolidateObjects()",
    "kind": "Method",
    "detail": "Function (FConsolidationResults)",
    "insertText": "ConsolidateObjects(UObject* ObjectToConsolidateTo, TArray<UObject*>& ObjectsToConsolidate, TSet<UObject*>& ObjectsToConsolidateWithin, TSet<UObject*>& ObjectsToNotConsolidateWithin, bool bShouldDeleteAfterConsolidate, bool bWarnAboutRootSet = true)"
  },
  {
    "label": "ConsolidateObjects()",
    "kind": "Method",
    "detail": "Function (FConsolidationResults)",
    "insertText": "ConsolidateObjects(TArrayView<FReplaceRequest> Requests, TSet<UObject*>& ObjectsToConsolidateWithin, TSet<UObject*>& ObjectsToNotConsolidateWithin, bool bShouldDeleteAfterConsolidate, bool bWarnAboutRootSet = true)"
  },
  {
    "label": "CompileBlueprintsAfterRefUpdate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CompileBlueprintsAfterRefUpdate(const TArray<UObject*>& ObjectsConsolidatedWithin)"
  },
  {
    "label": "CopyReferences()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CopyReferences( const TArray< UObject* >& SelectedObjects )"
  },
  {
    "label": "ShowReferencers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ShowReferencers( const TArray< UObject* >& SelectedObjects )"
  },
  {
    "label": "ShowReferenceGraph()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ShowReferenceGraph( UObject* ObjectToGraph )"
  },
  {
    "label": "SelectActorsInLevelDirectlyReferencingObject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SelectActorsInLevelDirectlyReferencingObject( UObject* RefObj )"
  },
  {
    "label": "SelectObjectAndExternalReferencersInLevel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SelectObjectAndExternalReferencersInLevel( UObject* Object, const bool bRecurseMaterial )"
  },
  {
    "label": "AccumulateObjectReferencersForObjectRecursive()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AccumulateObjectReferencersForObjectRecursive( UObject* Object, TArray<UObject*>& Referencers, const bool bRecurseMaterial )"
  },
  {
    "label": "ShowDeleteConfirmationDialog()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShowDeleteConfirmationDialog( const TArray<UObject*>& ObjectsToDelete )"
  },
  {
    "label": "CleanupAfterSuccessfulDelete()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CleanupAfterSuccessfulDelete( const TArray<UPackage*>& ObjectsDeletedSuccessfully, bool bPerformReferenceCheck = true )"
  },
  {
    "label": "DeleteObjects()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "DeleteObjects( const TArray< UObject* >& ObjectsToDelete, bool bShowConfirmation = true, EAllowCancelDuringDelete AllowCancelDuringDelete = EAllowCancelDuringDelete::AllowCancel)"
  },
  {
    "label": "PrivatizeObjects()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "PrivatizeObjects(const TArray<UObject*>& InObjectsToPrivatize, bool bShowConfirmation = true, EAllowCancelDuringPrivatize AllowCancelDuringPrivatize = EAllowCancelDuringPrivatize::AllowCancel)"
  },
  {
    "label": "DeleteObjectsUnchecked()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "DeleteObjectsUnchecked( const TArray< UObject* >& ObjectsToDelete )"
  },
  {
    "label": "DeleteAssets()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "DeleteAssets( const TArray<FAssetData>& AssetsToDelete, bool bShowConfirmation = true )"
  },
  {
    "label": "PrivatizeAssets()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "PrivatizeAssets(const TArray<FAssetData>& AssetsToPrivatize, bool bShowConfirmation = true)"
  },
  {
    "label": "DeleteSingleObject()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DeleteSingleObject( UObject* ObjectToDelete, bool bPerformReferenceCheck = true )"
  },
  {
    "label": "ForceDeleteObjects()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "ForceDeleteObjects( const TArray< UObject* >& ObjectsToDelete, bool ShowConfirmation = true )"
  },
  {
    "label": "ForceReplaceReferences()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ForceReplaceReferences(UObject* ObjectToReplaceWith, TArray<UObject*>& ObjectsToReplace)"
  },
  {
    "label": "ForceReplaceReferences()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ForceReplaceReferences(UObject* ObjectToReplaceWith, TArray<UObject*>& ObjectsToReplace, TSet<UObject*>& ObjectsToReplaceWithin)"
  },
  {
    "label": "ForceReplaceReferences()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ForceReplaceReferences(TArrayView<FReplaceRequest> Requests, TSet<UObject*>& ObjectsToReplaceWithin)"
  },
  {
    "label": "AddExtraObjectsToDelete()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddExtraObjectsToDelete(TArray< UObject* >& ObjectsToDelete)"
  },
  {
    "label": "ComposeStringOfReferencingObjects()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ComposeStringOfReferencingObjects( TArray<FReferencerInformation>& References, FString& RefObjNames, FString& DefObjNames )"
  },
  {
    "label": "DeleteRedirector()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeleteRedirector(UObjectRedirector* Redirector)"
  },
  {
    "label": "GetMoveDialogInfo()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetMoveDialogInfo(const FText& DialogTitle, UObject* Object, bool bUniqueDefaultName, const FString& SourcePath, const FString& DestinationPath, FMoveDialogInfo& InOutInfo)"
  },
  {
    "label": "RenameObjectsInternal()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RenameObjectsInternal( const TArray<UObject*>& Objects, bool bLocPackages, const TMap< UObject*, FString >* ObjectToLanguageExtMap, const FString& SourcePath, const FString& DestinationPath, bool bOpenDialog )"
  },
  {
    "label": "RenameSingleObject()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RenameSingleObject(UObject* Object, FPackageGroupName& PGN, TSet<UPackage*>& InOutPackagesUserRefusedToFullyLoad, FText& InOutErrorMessage, const TMap< UObject*, FString >* ObjectToLanguageExtMap = NULL, bool bLeaveRedirector = true)"
  },
  {
    "label": "AddLanguageVariants()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddLanguageVariants( TArray<UObject*>& OutObjects, TMap< UObject*, FString >& OutObjectToLanguageExtMap, USoundWave* Wave )"
  },
  {
    "label": "SanitizeObjectName()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "SanitizeObjectName(const FString& InObjectName)"
  },
  {
    "label": "SanitizeObjectPath()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "SanitizeObjectPath(const FString& InObjectPath)"
  },
  {
    "label": "SanitizeInvalidChars()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "SanitizeInvalidChars(const FString& InText, const FString& InvalidChars)"
  },
  {
    "label": "SanitizeInvalidChars()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "SanitizeInvalidChars(const FString& InText, const TCHAR* InvalidChars)"
  },
  {
    "label": "SanitizeInvalidCharsInline()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SanitizeInvalidCharsInline(FString& InText, const TCHAR* InvalidChars)"
  },
  {
    "label": "GenerateFactoryFileExtensions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GenerateFactoryFileExtensions( const UFactory* InFactory\n\t\t, FString& out_Filetypes\n\t\t, FString& out_Extensions\n\t\t, TMultiMap<uint32, UFactory*>& out_FilterIndexToFactory)"
  },
  {
    "label": "GenerateFactoryFileExtensions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GenerateFactoryFileExtensions( const TArray<UFactory*>& InFactories\n\t\t, FString& out_Filetypes\n\t\t, FString& out_Extensions\n\t\t, TMultiMap<uint32, UFactory*>& out_FilterIndexToFactory)"
  },
  {
    "label": "AppendFactoryFileExtensions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AppendFactoryFileExtensions( UFactory* InFactory\n\t\t, FString& out_Filetypes\n\t\t, FString& out_Extensions)"
  },
  {
    "label": "AppendFormatsFileExtensions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AppendFormatsFileExtensions(const TArray<FString>& InFormats\n\t\t, FString& out_FileTypes\n\t\t, FString& out_Extensions)"
  },
  {
    "label": "AppendFormatsFileExtensions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AppendFormatsFileExtensions(const TArray<FString>& InFormats\n\t\t, FString& out_FileTypes\n\t\t, FString& out_Extensions\n\t\t, TMultiMap<uint32, UFactory*>& out_FilterIndexToFactory)"
  },
  {
    "label": "AssembleListOfExporters()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AssembleListOfExporters(TArray<UExporter*>& OutExporters)"
  },
  {
    "label": "GetDirectoryFromObjectPath()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetDirectoryFromObjectPath(const UObject* Obj, FString& OutResult)"
  },
  {
    "label": "TagInUseObjects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TagInUseObjects( EInUseSearchOption SearchOption, EInUseSearchFlags InUseSearchFlags = EInUseSearchFlags::None)"
  },
  {
    "label": "OpenPropertiesForSelectedObjects()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<SWindow>)",
    "insertText": "OpenPropertiesForSelectedObjects( const TArray<UObject*>& SelectedObjects )"
  },
  {
    "label": "RemoveDeletedObjectsFromPropertyWindows()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveDeletedObjectsFromPropertyWindows( TArray<UObject*>& DeletedObjects )"
  },
  {
    "label": "IsAssetValidForPlacing()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsAssetValidForPlacing(UWorld* InWorld, const FString& ObjectPath)"
  },
  {
    "label": "IsClassValidForPlacing()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsClassValidForPlacing(const UClass* InClass)"
  },
  {
    "label": "IsClassRedirector()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsClassRedirector( const UClass* Class )"
  },
  {
    "label": "AreObjectsOfEquivalantType()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AreObjectsOfEquivalantType( const TArray<UObject*>& InProposedObjects )"
  },
  {
    "label": "AreClassesInterchangeable()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AreClassesInterchangeable( const UClass* ClassA, const UClass* ClassB )"
  },
  {
    "label": "GatherObjectReferencersForDeletion()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GatherObjectReferencersForDeletion(UObject* InObject, bool& bOutIsReferenced, bool& bOutIsReferencedByUndo, FReferencerInformationList* OutMemoryReferences = nullptr, bool bInRequireReferencingProperties = false)"
  },
  {
    "label": "GatherSubObjectsForReferenceReplacement()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GatherSubObjectsForReferenceReplacement(TSet<UObject*>& InObjects, TSet<UObject*>& ObjectsToExclude, TSet<UObject*>& OutObjectsAndSubObjects)"
  },
  {
    "label": "GatherPropertyChainsToObject()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GatherPropertyChainsToObject(const UObject* SourceObject, const UObject* ObjectToSearchFor, TArray<FString>& OutFoundPropertyChains)"
  },
  {
    "label": "BatchGetArchetypeInstances()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BatchGetArchetypeInstances(TArrayView<UObject*> InObjects, TArray<TArray<UObject*>>& OutInstances)"
  },
  {
    "label": "GetUserFacingFunctionName()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetUserFacingFunctionName(const UFunction* Function, bool bAllowFriendlyNames = false)"
  },
  {
    "label": "GetDefaultTooltipForFunction()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetDefaultTooltipForFunction(const UFunction* Function)"
  },
  {
    "label": "QueryPackageFileNameForObject()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "QueryPackageFileNameForObject( const FString& InFullName, FString& OutPackageFileName )"
  },
  {
    "label": "RenderThumbnail()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenderThumbnail( UObject* InObject, const uint32 InImageWidth, const uint32 InImageHeight, EThumbnailTextureFlushMode::Type InFlushMode, FTextureRenderTargetResource* InRenderTargetResource = NULL, FObjectThumbnail* OutThumbnail = NULL )"
  },
  {
    "label": "CacheEmptyThumbnail()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CacheEmptyThumbnail( const FString& ObjectFullName, UPackage* DestPackage )"
  },
  {
    "label": "LoadThumbnailFromPackage()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "LoadThumbnailFromPackage(const FAssetData& AssetData, FObjectThumbnail& OutThumbnail)"
  },
  {
    "label": "LoadThumbnailsFromPackage()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "LoadThumbnailsFromPackage( const FString& InPackageFileName, const TSet<FName>& InObjectFullNames, FThumbnailMap& InOutThumbnails )"
  },
  {
    "label": "ConditionallyLoadThumbnailsFromPackage()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ConditionallyLoadThumbnailsFromPackage( const FString& InPackageFileName, const TSet< FName >& InObjectFullNames, FThumbnailMap& InOutThumbnails )"
  },
  {
    "label": "ConditionallyLoadThumbnailsForObjects()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ConditionallyLoadThumbnailsForObjects( const TArray< FName >& InObjectFullNames, FThumbnailMap& InOutThumbnails )"
  },
  {
    "label": "AssetHasCustomThumbnail()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AssetHasCustomThumbnail(const FString& InAssetDataFullName)"
  },
  {
    "label": "AssetHasCustomThumbnail()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AssetHasCustomThumbnail(const FString& InAssetDataFullName, FObjectThumbnail& OutThumbnail)"
  },
  {
    "label": "AssetHasCustomCreatedThumbnail()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AssetHasCustomCreatedThumbnail(const FString& InAssetDataFullName)"
  }
]