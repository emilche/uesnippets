[
  {
    "label": "UInteractiveTool",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UInteractiveTool"
  },
  {
    "label": "UInteractiveToolManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UInteractiveToolManager"
  },
  {
    "label": "UEdMode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEdMode"
  },
  {
    "label": "IDetailsView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDetailsView"
  },
  {
    "label": "FDetailsViewArgs",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDetailsViewArgs"
  },
  {
    "label": "FAssetEditorModeUILayer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAssetEditorModeUILayer"
  },
  {
    "label": "SBorder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SBorder"
  },
  {
    "label": "UToolMenu",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UToolMenu"
  },
  {
    "label": "FBaseToolkit",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBaseToolkit"
  },
  {
    "label": "FModeToolkit",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FModeToolkit"
  },
  {
    "label": "FToolBarBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FToolBarBuilder"
  },
  {
    "label": "FEdModeToolbarRow",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FEdModeToolbarRow"
  },
  {
    "label": "FBaseToolkit()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" ToolkitBuilder . h \" # include \" Framework / Docking / WorkspaceItem . h \" # include \" Framework / Docking / TabManager . h \" # include \" Toolkits / IToolkit . h \" # include \" Framework / Commands / UICommandList . h \" # include \" Toolkits / IToolkitHost . h \" # include \" Tools / Modes . h \" class UInteractiveTool ; class UInteractiveToolManager ; class UEdMode ; class IDetailsView ; struct FDetailsViewArgs ; class FAssetEditorModeUILayer ; class SBorder ; class UToolMenu ; class FBaseToolkit : public IToolkit { public :)",
    "insertText": "FBaseToolkit()"
  },
  {
    "label": "GetToolkitContextFName()",
    "kind": "Method",
    "detail": "Function (public : FName)",
    "insertText": "GetToolkitContextFName()"
  },
  {
    "label": "GetTabSuffix()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetTabSuffix()"
  },
  {
    "label": "ProcessCommandBindings()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "ProcessCommandBindings(const FKeyEvent& InKeyEvent)"
  },
  {
    "label": "IsHosted()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsHosted()"
  },
  {
    "label": "GetToolkitHost()",
    "kind": "Method",
    "detail": "Function (const TSharedRef<IToolkitHost>)",
    "insertText": "GetToolkitHost()"
  },
  {
    "label": "BringToolkitToFront()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BringToolkitToFront()"
  },
  {
    "label": "GetInlineContent()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<SWidget>)",
    "insertText": "GetInlineContent()"
  },
  {
    "label": "IsBlueprintEditor()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsBlueprintEditor()"
  },
  {
    "label": "GetWorkspaceMenuCategory()",
    "kind": "Method",
    "detail": "Function (TSharedRef<FWorkspaceItem>)",
    "insertText": "GetWorkspaceMenuCategory()"
  },
  {
    "label": "GetEditorModeManager()",
    "kind": "Method",
    "detail": "Function (} FEditorModeTools&)",
    "insertText": "GetEditorModeManager()"
  },
  {
    "label": "IsWorldCentricAssetEditor()",
    "kind": "Method",
    "detail": "Function (public : bool)",
    "insertText": "IsWorldCentricAssetEditor()"
  },
  {
    "label": "GetToolkitCommands()",
    "kind": "Method",
    "detail": "Function (const TSharedRef<FUICommandList>)",
    "insertText": "GetToolkitCommands()"
  },
  {
    "label": "GetTabColorScale()",
    "kind": "Method",
    "detail": "Function (FLinearColor)",
    "insertText": "GetTabColorScale()"
  },
  {
    "label": "CreateEditorModeManager()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateEditorModeManager()"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (protected : EToolkitMode::Type ToolkitMode ; TSharedRef<FUICommandList> ToolkitCommands ; TWeakPtr<IToolkitHost> ToolkitHost ; TSharedPtr<FWorkspaceItem> WorkspaceMenuCategory ; } ; class FModeToolkit : public FBaseToolkit,public TSharedFromThis<FModeToolkit> { public : void)",
    "insertText": "Init(const TSharedPtr<IToolkitHost>& InitToolkitHost)"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Init(const TSharedPtr<IToolkitHost>& InitToolkitHost, TWeakObjectPtr<UEdMode> InOwningMode)"
  },
  {
    "label": "FModeToolkit()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FModeToolkit()"
  },
  {
    "label": "SetModeUILayer()",
    "kind": "Method",
    "detail": "Function (public : void)",
    "insertText": "SetModeUILayer(const TSharedPtr<FAssetEditorModeUILayer> InLayer)"
  },
  {
    "label": "RegisterTabSpawners()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterTabSpawners(const TSharedRef<FTabManager>& TabManager)"
  },
  {
    "label": "UnregisterTabSpawners()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterTabSpawners(const TSharedRef<FTabManager>& TabManager)"
  },
  {
    "label": "GetToolkitFName()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetToolkitFName()"
  },
  {
    "label": "GetBaseToolkitName()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetBaseToolkitName()"
  },
  {
    "label": "GetToolkitName()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetToolkitName()"
  },
  {
    "label": "GetToolkitToolTipText()",
    "kind": "Method",
    "detail": "Function (} FText)",
    "insertText": "GetToolkitToolTipText()"
  },
  {
    "label": "GetWorldCentricTabPrefix()",
    "kind": "Method",
    "detail": "Function (} FString)",
    "insertText": "GetWorldCentricTabPrefix()"
  },
  {
    "label": "IsAssetEditor()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsAssetEditor()"
  },
  {
    "label": "GetObjectsCurrentlyBeingEdited()",
    "kind": "Method",
    "detail": "Function (const TArray<UObject*>*)",
    "insertText": "GetObjectsCurrentlyBeingEdited()"
  },
  {
    "label": "GetWorldCentricTabColorScale()",
    "kind": "Method",
    "detail": "Function (FLinearColor)",
    "insertText": "GetWorldCentricTabColorScale()"
  },
  {
    "label": "GetScriptableEditorMode()",
    "kind": "Method",
    "detail": "Function (TWeakObjectPtr<UEdMode>)",
    "insertText": "GetScriptableEditorMode()"
  },
  {
    "label": "GetEditorMode()",
    "kind": "Method",
    "detail": "Function (FEdMode*)",
    "insertText": "GetEditorMode()"
  },
  {
    "label": "GetEditorModeDisplayName()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetEditorModeDisplayName()"
  },
  {
    "label": "GetEditorModeIcon()",
    "kind": "Method",
    "detail": "Function (FSlateIcon)",
    "insertText": "GetEditorModeIcon()"
  },
  {
    "label": "GetToolPaletteNames()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetToolPaletteNames(TArray<FName>& PaletteNames)"
  },
  {
    "label": "GetToolPaletteDisplayName()",
    "kind": "Method",
    "detail": "Function (} FText)",
    "insertText": "GetToolPaletteDisplayName(FName Palette)"
  },
  {
    "label": "HasExclusiveToolPalettes()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "HasExclusiveToolPalettes()"
  },
  {
    "label": "GetActiveToolDisplayName()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetActiveToolDisplayName()"
  },
  {
    "label": "GetActiveToolMessage()",
    "kind": "Method",
    "detail": "Function (} FText)",
    "insertText": "GetActiveToolMessage()"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "DECLARE_MULTICAST_DELEGATE_OneParam(FOnPaletteChanged, FName)"
  },
  {
    "label": "OnPaletteChanged()",
    "kind": "Method",
    "detail": "Function (FOnPaletteChanged&)",
    "insertText": "OnPaletteChanged()"
  },
  {
    "label": "SetCurrentPalette()",
    "kind": "Method",
    "detail": "Function (} ; void)",
    "insertText": "SetCurrentPalette(FName InName)"
  },
  {
    "label": "GetCurrentPalette()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetCurrentPalette()"
  },
  {
    "label": "SetModeSettingsObject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetModeSettingsObject(UObject* InSettingsObject)"
  },
  {
    "label": "InvokeUI()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InvokeUI()"
  },
  {
    "label": "ExtendSecondaryModeToolbar()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExtendSecondaryModeToolbar(UToolMenu *InModeToolbarMenu)"
  },
  {
    "label": "RebuildModeToolPalette()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "RebuildModeToolPalette()"
  },
  {
    "label": "OnToolStarted()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "OnToolStarted(UInteractiveToolManager* Manager, UInteractiveTool* Tool)"
  },
  {
    "label": "OnToolEnded()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnToolEnded(UInteractiveToolManager* Manager, UInteractiveTool* Tool)"
  },
  {
    "label": "CustomizeModeDetailsViewArgs()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CustomizeModeDetailsViewArgs(FDetailsViewArgs& ArgsInOut)"
  },
  {
    "label": "CustomizeDetailsViewArgs()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "CustomizeDetailsViewArgs(FDetailsViewArgs& ArgsInOut)"
  },
  {
    "label": "RequestModeUITabs()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "RequestModeUITabs()"
  },
  {
    "label": "OnModeIDChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnModeIDChanged(const FEditorModeID& InID, bool bIsEntering)"
  },
  {
    "label": "GetEditorModeInfo()",
    "kind": "Method",
    "detail": "Function (const FEditorModeInfo*)",
    "insertText": "GetEditorModeInfo()"
  },
  {
    "label": "ShouldShowModeToolbar()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldShowModeToolbar()"
  },
  {
    "label": "CreatePrimaryModePanel()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SDockTab>)",
    "insertText": "CreatePrimaryModePanel(const FSpawnTabArgs& Args)"
  },
  {
    "label": "UpdatePrimaryModePanel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdatePrimaryModePanel()"
  },
  {
    "label": "GetInlineContentHolderVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "GetInlineContentHolderVisibility()"
  },
  {
    "label": "GetNoToolSelectedTextVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "GetNoToolSelectedTextVisibility()"
  },
  {
    "label": "MakeModeToolbarTab()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SDockTab>)",
    "insertText": "MakeModeToolbarTab(const FSpawnTabArgs& Args)"
  },
  {
    "label": "CreatePaletteWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "CreatePaletteWidget(TSharedPtr<FUICommandList> InCommandList, FName InToolbarCustomizationName, FName InPaletteName)"
  },
  {
    "label": "SpawnOrUpdateModeToolbar()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SpawnOrUpdateModeToolbar()"
  },
  {
    "label": "RebuildModeToolBar()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RebuildModeToolBar()"
  },
  {
    "label": "FEdModeToolbarRow()",
    "kind": "Method",
    "detail": "Function (protected : TSharedPtr<SWidget> ToolkitWidget ; TSharedPtr<IDetailsView> ModeDetailsView ; TSharedPtr<IDetailsView> DetailsView ; TWeakObjectPtr<UEdMode> OwningEditorMode ; FName CurrentPaletteName ; FOnPaletteChanged OnPaletteChangedDelegate ; TSharedPtr<SBorder> InlineContentHolder ; TSharedPtr<SBorder> ModeToolBarContainer ; TSharedPtr<SBorder> ModeToolHeader ; TWeakPtr<SDockTab> PrimaryTab ; TWeakPtr<SDockTab> ModeToolbarTab ; FMinorTabConfig PrimaryTabInfo ; FMinorTabConfig ToolbarInfo ; TWeakPtr<SVerticalBox> ModeToolbarBox ; TWeakPtr<SWidgetSwitcher> ModeToolbarPaletteSwitcher ; TWeakPtr<FAssetEditorModeUILayer> ModeUILayer ; TArray<TSharedPtr<SDockTab>> CreatedTabs ; struct FEdModeToolbarRow {)",
    "insertText": "FEdModeToolbarRow(FName InModeID, FName InPaletteName, FText InDisplayName, TSharedRef<SWidget> InToolbarWidget) : ModeID(InModeID) , PaletteName(InPaletteName) , DisplayName(InDisplayName) , ToolbarWidget(InToolbarWidget)"
  },
  {
    "label": "HasToolkitBuilder()",
    "kind": "Method",
    "detail": "Function (} FName ModeID ; FName PaletteName ; FText DisplayName ; TSharedPtr<SWidget> ToolbarWidget ; } ; TArray<FEdModeToolbarRow> ActiveToolBarRows ; bool bUsesToolkitBuilder = false ; TSharedPtr<FToolkitBuilder> ToolkitBuilder ; bool)",
    "insertText": "HasToolkitBuilder()"
  }
]