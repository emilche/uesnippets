[
  {
    "label": "FbxObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FbxObject"
  },
  {
    "label": "FbxAnimStack",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FbxAnimStack"
  },
  {
    "label": "FbxAnimLayer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FbxAnimLayer"
  },
  {
    "label": "FbxAnimCurveNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FbxAnimCurveNode"
  },
  {
    "label": "FbxAnimCurve",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FbxAnimCurve"
  },
  {
    "label": "FbxAnimEvaluator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FbxAnimEvaluator"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "FBXSDK_DLL",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBXSDK_DLL"
  },
  {
    "label": "FbxPropertyNameCache",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FbxPropertyNameCache"
  },
  {
    "label": "FbxIOSettings",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FbxIOSettings"
  },
  {
    "label": "FbxBindingOperator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FbxBindingOperator"
  },
  {
    "label": "FbxAnimEvalClassic",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FbxAnimEvalClassic"
  },
  {
    "label": "FbxPropertyT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FbxPropertyT"
  },
  {
    "label": "EvaluatePropertyValue()",
    "kind": "Method",
    "detail": "Function (# ifndef _FBXSDK_CORE_PROPERTY_H_ # define _FBXSDK_CORE_PROPERTY_H_ # include<fbxsdk / fbxsdk_def . h> # include<fbxsdk / core / fbxquery . h> # include<fbxsdk / core / fbxpropertydef . h> # include<fbxsdk / core / fbxpropertytypes . h> # include<fbxsdk / core / fbxdatatypes . h> # include<fbxsdk / core / base / fbxmap . h> # include<fbxsdk / core / base / fbxset . h> # include<fbxsdk / fbxsdk_nsbegin . h> class FbxObject ; class FbxAnimStack ; class FbxAnimLayer ; class FbxAnimCurveNode ; class FbxAnimCurve ; class FbxAnimEvaluator ; template<class T> T)",
    "insertText": "EvaluatePropertyValue(FbxProperty& pProperty, const FbxTime& pTime, bool pForceEval = false)"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (class FBXSDK_DLL FbxProperty { public : FbxProperty)",
    "insertText": "Create(const FbxProperty& pCompoundProperty, const FbxDataType& pDataType, const char* pName, const char* pLabel=\"\", bool pCheckForDup=true, bool* pWasFound=NULL)"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (FbxProperty)",
    "insertText": "Create(FbxObject* pObject, const FbxDataType& pDataType, const char* pName, const char* pLabel=\"\", bool pCheckForDup=true, bool* pWasFound=NULL)"
  },
  {
    "label": "CreateFrom()",
    "kind": "Method",
    "detail": "Function (FbxProperty)",
    "insertText": "CreateFrom(const FbxProperty& pCompoundProperty, FbxProperty& pFromProperty, bool pCheckForDup=true)"
  },
  {
    "label": "CreateFrom()",
    "kind": "Method",
    "detail": "Function (FbxProperty)",
    "insertText": "CreateFrom(FbxObject* pObject, FbxProperty& pFromProperty, bool pCheckForDup=true)"
  },
  {
    "label": "Destroy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Destroy()"
  },
  {
    "label": "DestroyRecursively()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyRecursively()"
  },
  {
    "label": "DestroyChildren()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyChildren()"
  },
  {
    "label": "FbxProperty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FbxProperty()"
  },
  {
    "label": "FbxProperty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FbxProperty(const FbxProperty& pProperty)"
  },
  {
    "label": "FbxProperty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FbxProperty(const FbxPropertyHandle& pPropertyHandle)"
  },
  {
    "label": "GetPropertyDataType()",
    "kind": "Method",
    "detail": "Function (FbxDataType)",
    "insertText": "GetPropertyDataType()"
  },
  {
    "label": "GetName()",
    "kind": "Method",
    "detail": "Function (FbxString)",
    "insertText": "GetName()"
  },
  {
    "label": "GetNameAsCStr()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "GetNameAsCStr()"
  },
  {
    "label": "GetHierarchicalName()",
    "kind": "Method",
    "detail": "Function (FbxString)",
    "insertText": "GetHierarchicalName()"
  },
  {
    "label": "GetLabel()",
    "kind": "Method",
    "detail": "Function (FbxString)",
    "insertText": "GetLabel(bool pReturnNameIfEmpty=true)"
  },
  {
    "label": "SetLabel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetLabel(const FbxString& pLabel)"
  },
  {
    "label": "GetFbxObject()",
    "kind": "Method",
    "detail": "Function (FbxObject*)",
    "insertText": "GetFbxObject()"
  },
  {
    "label": "SetUserTag()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetUserTag(int pTag)"
  },
  {
    "label": "GetUserTag()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "GetUserTag()"
  },
  {
    "label": "SetUserDataPtr()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetUserDataPtr(void* pUserData)"
  },
  {
    "label": "GetUserDataPtr()",
    "kind": "Method",
    "detail": "Function (void*)",
    "insertText": "GetUserDataPtr()"
  },
  {
    "label": "ModifyFlag()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ModifyFlag(FbxPropertyFlags::EFlags pFlag, bool pValue)"
  },
  {
    "label": "GetFlag()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetFlag(FbxPropertyFlags::EFlags pFlag)"
  },
  {
    "label": "GetFlags()",
    "kind": "Method",
    "detail": "Function (FbxPropertyFlags::EFlags)",
    "insertText": "GetFlags()"
  },
  {
    "label": "GetFlagInheritType()",
    "kind": "Method",
    "detail": "Function (FbxPropertyFlags::EInheritType)",
    "insertText": "GetFlagInheritType(FbxPropertyFlags::EFlags pFlag)"
  },
  {
    "label": "SetFlagInheritType()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetFlagInheritType(FbxPropertyFlags::EFlags pFlag, FbxPropertyFlags::EInheritType pType)"
  },
  {
    "label": "ModifiedFlag()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ModifiedFlag(FbxPropertyFlags::EFlags pFlag)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FbxProperty&)",
    "insertText": "operator(const FbxProperty& pProperty)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "operator(int pValue)"
  },
  {
    "label": "CompareValue()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "CompareValue(const FbxProperty& pProperty)"
  },
  {
    "label": "CopyValue()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CopyValue(const FbxProperty& pProperty)"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (template<class T> T)",
    "insertText": "Get()"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (T lValue ;)",
    "insertText": "Get(&lValue, FbxTypeOf(lValue))"
  },
  {
    "label": "IsValid()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsValid()"
  },
  {
    "label": "HasDefaultValue()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasDefaultValue(FbxProperty& pProperty)"
  },
  {
    "label": "GetValueInheritType()",
    "kind": "Method",
    "detail": "Function (FbxPropertyFlags::EInheritType)",
    "insertText": "GetValueInheritType()"
  },
  {
    "label": "SetValueInheritType()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetValueInheritType(FbxPropertyFlags::EInheritType pType)"
  },
  {
    "label": "Modified()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Modified()"
  },
  {
    "label": "SupportSetLimitAsDouble()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SupportSetLimitAsDouble()"
  },
  {
    "label": "SetMinLimit()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetMinLimit(double pMin)"
  },
  {
    "label": "HasMinLimit()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasMinLimit()"
  },
  {
    "label": "HasMaxLimit()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasMaxLimit()"
  },
  {
    "label": "SetMaxLimit()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetMaxLimit(double pMax)"
  },
  {
    "label": "SetLimits()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetLimits(double pMin, double pMax)"
  },
  {
    "label": "AddEnumValue()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "AddEnumValue(const char* pStringValue)"
  },
  {
    "label": "InsertEnumValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InsertEnumValue(int pIndex, const char* pStringValue)"
  },
  {
    "label": "GetEnumCount()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "GetEnumCount()"
  },
  {
    "label": "SetEnumValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetEnumValue(int pIndex, const char* pStringValue)"
  },
  {
    "label": "RemoveEnumValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveEnumValue(int pIndex)"
  },
  {
    "label": "GetEnumValue()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "GetEnumValue(int pIndex)"
  },
  {
    "label": "IsRoot()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsRoot()"
  },
  {
    "label": "IsChildOf()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsChildOf(const FbxProperty& pParent)"
  },
  {
    "label": "IsDescendentOf()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsDescendentOf(const FbxProperty& pAncestor)"
  },
  {
    "label": "GetParent()",
    "kind": "Method",
    "detail": "Function (} FbxProperty)",
    "insertText": "GetParent()"
  },
  {
    "label": "GetChild()",
    "kind": "Method",
    "detail": "Function (} FbxProperty)",
    "insertText": "GetChild()"
  },
  {
    "label": "GetSibling()",
    "kind": "Method",
    "detail": "Function (} FbxProperty)",
    "insertText": "GetSibling()"
  },
  {
    "label": "GetFirstDescendent()",
    "kind": "Method",
    "detail": "Function (} FbxProperty)",
    "insertText": "GetFirstDescendent()"
  },
  {
    "label": "GetNextDescendent()",
    "kind": "Method",
    "detail": "Function (} FbxProperty)",
    "insertText": "GetNextDescendent(const FbxProperty& pProperty)"
  },
  {
    "label": "Find()",
    "kind": "Method",
    "detail": "Function (} FbxProperty)",
    "insertText": "Find(const char* pName, bool pCaseSensitive = true)"
  },
  {
    "label": "Find()",
    "kind": "Method",
    "detail": "Function (} FbxProperty)",
    "insertText": "Find(const char* pName, const FbxDataType& pDataType, bool pCaseSensitive = true)"
  },
  {
    "label": "FindHierarchical()",
    "kind": "Method",
    "detail": "Function (} FbxProperty)",
    "insertText": "FindHierarchical(const char* pName, bool pCaseSensitive = true)"
  },
  {
    "label": "FindHierarchical()",
    "kind": "Method",
    "detail": "Function (} FbxProperty)",
    "insertText": "FindHierarchical(const char* pName, const FbxDataType& pDataType, bool pCaseSensitive = true)"
  },
  {
    "label": "BeginCreateOrFindProperty()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "BeginCreateOrFindProperty()"
  },
  {
    "label": "EndCreateOrFindProperty()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "EndCreateOrFindProperty()"
  },
  {
    "label": "FbxPropertyNameCache()",
    "kind": "Method",
    "detail": "Function (} class FbxPropertyNameCache { public :)",
    "insertText": "FbxPropertyNameCache(const FbxProperty& prop) : mProp(const_cast<FbxProperty&>(prop))"
  },
  {
    "label": "FbxPropertyNameCache()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "FbxPropertyNameCache()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} private : FbxProperty& mProp ; FbxPropertyNameCache&)",
    "insertText": "operator(const FbxPropertyNameCache& pOther)"
  },
  {
    "label": "IsAnimated()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsAnimated(FbxAnimLayer* pAnimLayer=NULL)"
  },
  {
    "label": "EvaluateValue()",
    "kind": "Method",
    "detail": "Function (template<class T> T)",
    "insertText": "EvaluateValue(const FbxTime& pTime=FBXSDK_TIME_INFINITE, bool pForceEval=false)"
  },
  {
    "label": "CreateCurveNode()",
    "kind": "Method",
    "detail": "Function (FbxAnimCurveNode*)",
    "insertText": "CreateCurveNode(FbxAnimLayer* pAnimLayer)"
  },
  {
    "label": "GetCurveNode()",
    "kind": "Method",
    "detail": "Function (FbxAnimCurveNode*)",
    "insertText": "GetCurveNode(bool pCreate=false)"
  },
  {
    "label": "GetCurveNode()",
    "kind": "Method",
    "detail": "Function (FbxAnimCurveNode*)",
    "insertText": "GetCurveNode(FbxAnimStack* pAnimStack, bool pCreate=false)"
  },
  {
    "label": "GetCurveNode()",
    "kind": "Method",
    "detail": "Function (FbxAnimCurveNode*)",
    "insertText": "GetCurveNode(FbxAnimLayer* pAnimLayer, bool pCreate=false)"
  },
  {
    "label": "GetCurve()",
    "kind": "Method",
    "detail": "Function (FbxAnimCurve*)",
    "insertText": "GetCurve(FbxAnimLayer* pAnimLayer, bool pCreate=false)"
  },
  {
    "label": "GetCurve()",
    "kind": "Method",
    "detail": "Function (} FbxAnimCurve*)",
    "insertText": "GetCurve(FbxAnimLayer* pAnimLayer, const char* pChannel, bool pCreate=false)"
  },
  {
    "label": "GetCurve()",
    "kind": "Method",
    "detail": "Function (} FbxAnimCurve*)",
    "insertText": "GetCurve(FbxAnimLayer* pAnimLayer, const char* pName, const char* pChannel, bool pCreate)"
  },
  {
    "label": "ConnectSrcObject()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ConnectSrcObject(FbxObject* pObject, FbxConnection::EType pType=FbxConnection::eNone)"
  },
  {
    "label": "IsConnectedSrcObject()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsConnectedSrcObject(const FbxObject* pObject)"
  },
  {
    "label": "DisconnectSrcObject()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DisconnectSrcObject(FbxObject* pObject)"
  },
  {
    "label": "DisconnectAllSrcObject()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DisconnectAllSrcObject()"
  },
  {
    "label": "DisconnectAllSrcObject()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DisconnectAllSrcObject(const FbxCriteria& pCriteria)"
  },
  {
    "label": "GetSrcObjectCount()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "GetSrcObjectCount()"
  },
  {
    "label": "GetSrcObjectCount()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "GetSrcObjectCount(const FbxCriteria& pCriteria)"
  },
  {
    "label": "GetSrcObject()",
    "kind": "Method",
    "detail": "Function (FbxObject*)",
    "insertText": "GetSrcObject(const int pIndex=0)"
  },
  {
    "label": "GetSrcObject()",
    "kind": "Method",
    "detail": "Function (FbxObject*)",
    "insertText": "GetSrcObject(const FbxCriteria& pCriteria, const int pIndex=0)"
  },
  {
    "label": "FindSrcObject()",
    "kind": "Method",
    "detail": "Function (FbxObject*)",
    "insertText": "FindSrcObject(const char* pName, const int pStartIndex=0)"
  },
  {
    "label": "FindSrcObject()",
    "kind": "Method",
    "detail": "Function (FbxObject*)",
    "insertText": "FindSrcObject(const FbxCriteria& pCriteria, const char* pName, const int pStartIndex=0)"
  },
  {
    "label": "ConnectDstObject()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "ConnectDstObject(FbxObject* pObject, FbxConnection::EType pType=FbxConnection::eNone)"
  },
  {
    "label": "IsConnectedDstObject()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsConnectedDstObject(const FbxObject* pObject)"
  },
  {
    "label": "DisconnectDstObject()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DisconnectDstObject(FbxObject* pObject)"
  },
  {
    "label": "DisconnectAllDstObject()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DisconnectAllDstObject()"
  },
  {
    "label": "DisconnectAllDstObject()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DisconnectAllDstObject(const FbxCriteria& pCriteria)"
  },
  {
    "label": "GetDstObjectCount()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "GetDstObjectCount()"
  },
  {
    "label": "GetDstObjectCount()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "GetDstObjectCount(const FbxCriteria& pCriteria)"
  },
  {
    "label": "GetDstObject()",
    "kind": "Method",
    "detail": "Function (FbxObject*)",
    "insertText": "GetDstObject(const int pIndex=0)"
  },
  {
    "label": "GetDstObject()",
    "kind": "Method",
    "detail": "Function (FbxObject*)",
    "insertText": "GetDstObject(const FbxCriteria& pCriteria, const int pIndex=0)"
  },
  {
    "label": "FindDstObject()",
    "kind": "Method",
    "detail": "Function (FbxObject*)",
    "insertText": "FindDstObject(const char* pName, const int pStartIndex=0)"
  },
  {
    "label": "FindDstObject()",
    "kind": "Method",
    "detail": "Function (FbxObject*)",
    "insertText": "FindDstObject(const FbxCriteria& pCriteria, const char* pName, const int pStartIndex=0)"
  },
  {
    "label": "ConnectSrcProperty()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "ConnectSrcProperty(const FbxProperty& pProperty)"
  },
  {
    "label": "IsConnectedSrcProperty()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsConnectedSrcProperty(const FbxProperty& pProperty)"
  },
  {
    "label": "DisconnectSrcProperty()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DisconnectSrcProperty(const FbxProperty& pProperty)"
  },
  {
    "label": "GetSrcPropertyCount()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "GetSrcPropertyCount()"
  },
  {
    "label": "ConnectDstProperty()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ConnectDstProperty(const FbxProperty& pProperty)"
  },
  {
    "label": "IsConnectedDstProperty()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsConnectedDstProperty(const FbxProperty& pProperty)"
  },
  {
    "label": "DisconnectDstProperty()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DisconnectDstProperty(const FbxProperty& pProperty)"
  },
  {
    "label": "GetDstPropertyCount()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "GetDstPropertyCount()"
  },
  {
    "label": "ClearConnectCache()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearConnectCache()"
  },
  {
    "label": "GetSrcProperty()",
    "kind": "Method",
    "detail": "Function (FbxProperty)",
    "insertText": "GetSrcProperty(const int pIndex=0)"
  },
  {
    "label": "FindSrcProperty()",
    "kind": "Method",
    "detail": "Function (FbxProperty)",
    "insertText": "FindSrcProperty(const char* pName, const int pStartIndex=0)"
  },
  {
    "label": "GetDstProperty()",
    "kind": "Method",
    "detail": "Function (FbxProperty)",
    "insertText": "GetDstProperty(const int pIndex=0)"
  },
  {
    "label": "FindDstProperty()",
    "kind": "Method",
    "detail": "Function (FbxProperty)",
    "insertText": "FindDstProperty(const char* pName, const int pStartIndex=0)"
  },
  {
    "label": "FbxProperty()",
    "kind": "Method",
    "detail": "Function (const char* sHierarchicalSeparator ; # ifndef DOXYGEN_SHOULD_SKIP_THIS protected :)",
    "insertText": "FbxProperty(FbxObject* pObject, const char* pName, const FbxDataType& pDataType=FbxDataType(), const char* pLabel=\"\")"
  },
  {
    "label": "FbxProperty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FbxProperty(const FbxProperty& pParent, const char* pName, const FbxDataType& pDataType, const char* pLabel)"
  },
  {
    "label": "Set()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Set(const void* pValue, const EFbxType& pValueType, bool pCheckForValueEquality=true)"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Get(void* pValue, const EFbxType& pValueType)"
  },
  {
    "label": "NotifySetRequest()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "NotifySetRequest()"
  },
  {
    "label": "NotifySet()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "NotifySet()"
  },
  {
    "label": "NotifyGet()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "NotifyGet()"
  },
  {
    "label": "FBX_ASSERT_NOW()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FBX_ASSERT_NOW(\"Cannot get property value as void!\")"
  },
  {
    "label": "FBX_ASSERT_NOW()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FBX_ASSERT_NOW(\"Cannot set property value as void!\")"
  },
  {
    "label": "DisconnectSrc()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DisconnectSrc(const FbxProperty& pProperty)"
  },
  {
    "label": "DisconnectAllSrc()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DisconnectAllSrc()"
  },
  {
    "label": "DisconnectAllSrc()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DisconnectAllSrc(const FbxCriteria& pCriteria)"
  },
  {
    "label": "IsConnectedSrc()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsConnectedSrc(const FbxProperty& pProperty)"
  },
  {
    "label": "GetSrcCount()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "GetSrcCount()"
  },
  {
    "label": "GetSrcCount()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "GetSrcCount(const FbxCriteria& pCriteria)"
  },
  {
    "label": "GetSrc()",
    "kind": "Method",
    "detail": "Function (FbxProperty)",
    "insertText": "GetSrc(int pIndex=0)"
  },
  {
    "label": "GetSrc()",
    "kind": "Method",
    "detail": "Function (FbxProperty)",
    "insertText": "GetSrc(const FbxCriteria& pCriteria, int pIndex=0)"
  },
  {
    "label": "FindSrc()",
    "kind": "Method",
    "detail": "Function (FbxProperty)",
    "insertText": "FindSrc(const FbxCriteria& pCriteria, const char* pName, int pStartIndex=0)"
  },
  {
    "label": "ConnectDst()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ConnectDst(const FbxProperty& pProperty, FbxConnection::EType pType=FbxConnection::eNone)"
  },
  {
    "label": "DisconnectDst()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DisconnectDst(const FbxProperty& pProperty)"
  },
  {
    "label": "DisconnectAllDst()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DisconnectAllDst()"
  },
  {
    "label": "DisconnectAllDst()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DisconnectAllDst(const FbxCriteria& pCriteria)"
  },
  {
    "label": "IsConnectedDst()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsConnectedDst(const FbxProperty& pProperty)"
  },
  {
    "label": "GetDstCount()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "GetDstCount()"
  },
  {
    "label": "GetDstCount()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "GetDstCount(const FbxCriteria& pCriteria)"
  },
  {
    "label": "GetDst()",
    "kind": "Method",
    "detail": "Function (FbxProperty)",
    "insertText": "GetDst(int pIndex=0)"
  },
  {
    "label": "GetDst()",
    "kind": "Method",
    "detail": "Function (FbxProperty)",
    "insertText": "GetDst(const FbxCriteria& pCriteria, int pIndex=0)"
  },
  {
    "label": "FindDst()",
    "kind": "Method",
    "detail": "Function (FbxProperty)",
    "insertText": "FindDst(const FbxCriteria& pCriteria, const char* pName, int pStartIndex=0)"
  },
  {
    "label": "FbxMarkObject()",
    "kind": "Method",
    "detail": "Function (FbxPropertyHandle mPropertyHandle ; class FbxObject ; class FbxIOSettings ; class FbxBindingOperator ; class FbxAnimEvalClassic ; void)",
    "insertText": "FbxMarkObject(FbxObject* pObject, FbxMap<FbxObject*, int>& pObjectDstDisconnectCount, FbxSet<FbxObject*>& pObjectsToDeleted, FbxArray<FbxObject*>& pObjectToDeletedInSequence)"
  },
  {
    "label": "FbxCleanUpConnectionsAtDestructionBoundary()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FbxCleanUpConnectionsAtDestructionBoundary(FbxScene* pObject, FbxArray<FbxObject*>& pObjectToDeletedInSequence)"
  },
  {
    "label": "StaticInit()",
    "kind": "Method",
    "detail": "Function (# endif } ; template<class T> class FbxPropertyT : public FbxProperty { public : typedef T ValueType ; FbxProperty&)",
    "insertText": "StaticInit(FbxObject* pObject, const char* pName, const T& pValue, bool pForceSet, FbxPropertyFlags::EFlags pFlags=FbxPropertyFlags::eNone)"
  },
  {
    "label": "StaticInit()",
    "kind": "Method",
    "detail": "Function (} FbxProperty&)",
    "insertText": "StaticInit(FbxObject* pObject, const char* pName, const FbxDataType& pDataType, const T& pValue, bool pForceSet, FbxPropertyFlags::EFlags pFlags=FbxPropertyFlags::eNone)"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (bool lWasFound = false ;* this =)",
    "insertText": "Create(pObject, pDataType, pName, \"\", true, &lWasFound)"
  },
  {
    "label": "ModifyFlag()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ModifyFlag(pFlags, true)"
  },
  {
    "label": "Set()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Set(&pValue, FbxTypeOf(pValue), false)"
  },
  {
    "label": "ModifyFlag()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "ModifyFlag(FbxPropertyFlags::eStatic, true)"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (bool lWasFound = false ;* this =)",
    "insertText": "Create(pCompound, pDataType, pName, \"\", true, &lWasFound)"
  },
  {
    "label": "Set()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Set(&pValue, FbxTypeOf(pValue))"
  },
  {
    "label": "T()",
    "kind": "Method",
    "detail": "Function (} operator)",
    "insertText": "T()"
  },
  {
    "label": "FbxPropertyT()",
    "kind": "Method",
    "detail": "Function (} # ifndef DOXYGEN_SHOULD_SKIP_THIS)",
    "insertText": "FbxPropertyT() : FbxProperty()"
  },
  {
    "label": "FbxPropertyT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FbxPropertyT(const FbxProperty& pProperty) : FbxProperty(pProperty)"
  },
  {
    "label": "FbxPropertyT()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "FbxPropertyT()"
  },
  {
    "label": "StaticInit()",
    "kind": "Method",
    "detail": "Function (} const FbxProperty&)",
    "insertText": "StaticInit(FbxObject* pObject, const char* pName, const FbxReference& pValue, bool pForceSet, FbxPropertyFlags::EFlags pFlags=FbxPropertyFlags::eNone)"
  },
  {
    "label": "StaticInit()",
    "kind": "Method",
    "detail": "Function (} const FbxProperty&)",
    "insertText": "StaticInit(FbxObject* pObject, const char* pName, const FbxDataType& pDataType, const FbxReference& pValue, bool pForceSet, FbxPropertyFlags::EFlags pFlags=FbxPropertyFlags::eNone)"
  },
  {
    "label": "Set()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Set(pValue)"
  },
  {
    "label": "Set()",
    "kind": "Method",
    "detail": "Function (} FbxPropertyT&)",
    "insertText": "Set(const FbxReference& pValue)"
  },
  {
    "label": "SetValueInheritType()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetValueInheritType(FbxPropertyFlags::eOverride)"
  },
  {
    "label": "FbxReference()",
    "kind": "Method",
    "detail": "Function (} } return* this ; } operator)",
    "insertText": "FbxReference()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} FbxPropertyT&)",
    "insertText": "operator(const FbxReference& pValue)"
  }
]