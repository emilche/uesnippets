[
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FMockDownloadConnectionCount",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMockDownloadConnectionCount"
  },
  {
    "label": "FMockDownloadConnectionCount()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Installer / DownloadConnectionCount . h \" enum class EBuildPatchDownloadHealth ; # if WITH_DEV_AUTOMATION_TESTS namespace BuildPatchServices { class FMockDownloadConnectionCount : public IDownloadConnectionCount { public :)",
    "insertText": "FMockDownloadConnectionCount(uint32 InCount) :Count(InCount)"
  },
  {
    "label": "FMockDownloadConnectionCount()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FMockDownloadConnectionCount() :Count(8)"
  },
  {
    "label": "GetAdjustedCount()",
    "kind": "Method",
    "detail": "Function (} uint32)",
    "insertText": "GetAdjustedCount(uint32 NumProcessing, EBuildPatchDownloadHealth CurrentHealth)"
  }
]