[
  {
    "label": "FSteamEndpoint",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSteamEndpoint"
  },
  {
    "label": "FSteamEndpoint()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / UnrealString . h \" # include \" CoreMinimal . h \" # include \" HAL / Platform . h \" # include \" Serialization / Archive . h \" # include \" Templates / TypeHash . h \" class FSteamEndpoint { public :)",
    "insertText": "FSteamEndpoint()"
  },
  {
    "label": "FSteamEndpoint()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FSteamEndpoint(uint64 InUniqueNetId, int32 InSteamChannel) : SteamChannel(InSteamChannel) , UniqueNetId(InUniqueNetId)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} public : bool)",
    "insertText": "operator(const FSteamEndpoint& Other)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} FArchive&)",
    "insertText": "operator(FArchive& Ar, FSteamEndpoint& SteamEndpoint)"
  },
  {
    "label": "GetTypeHash()",
    "kind": "Method",
    "detail": "Function (public : uint32)",
    "insertText": "GetTypeHash(const FSteamEndpoint& Address)"
  }
]