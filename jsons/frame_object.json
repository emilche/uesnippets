[
  {
    "label": "RtpFrameObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RtpFrameObject"
  },
  {
    "label": "RtpFrameObject()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_VIDEO_CODING_FRAME_OBJECT_H_ # define MODULES_VIDEO_CODING_FRAME_OBJECT_H_ # include \" absl / types / optional . h \" # include \" api / video / encoded_frame . h \" namespace webrtc { class RtpFrameObject : public EncodedFrame { public :)",
    "insertText": "RtpFrameObject(uint16_t first_seq_num, uint16_t last_seq_num, bool markerBit, int times_nacked, int64_t first_packet_received_time, int64_t last_packet_received_time, uint32_t rtp_timestamp, int64_t ntp_time_ms, const VideoSendTiming& timing, uint8_t payload_type, VideoCodecType codec, VideoRotation rotation, VideoContentType content_type, const RTPVideoHeader& video_header, const absl::optional<webrtc::ColorSpace>& color_space, RtpPacketInfos packet_infos, rtc::scoped_refptr<EncodedImageBuffer> image_buffer)"
  },
  {
    "label": "RtpFrameObject()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "RtpFrameObject()"
  },
  {
    "label": "first_seq_num()",
    "kind": "Method",
    "detail": "Function (uint16_t)",
    "insertText": "first_seq_num()"
  },
  {
    "label": "last_seq_num()",
    "kind": "Method",
    "detail": "Function (uint16_t)",
    "insertText": "last_seq_num()"
  },
  {
    "label": "times_nacked()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "times_nacked()"
  },
  {
    "label": "frame_type()",
    "kind": "Method",
    "detail": "Function (VideoFrameType)",
    "insertText": "frame_type()"
  },
  {
    "label": "codec_type()",
    "kind": "Method",
    "detail": "Function (VideoCodecType)",
    "insertText": "codec_type()"
  },
  {
    "label": "ReceivedTime()",
    "kind": "Method",
    "detail": "Function (int64_t)",
    "insertText": "ReceivedTime()"
  },
  {
    "label": "RenderTime()",
    "kind": "Method",
    "detail": "Function (int64_t)",
    "insertText": "RenderTime()"
  },
  {
    "label": "delayed_by_retransmission()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "delayed_by_retransmission()"
  },
  {
    "label": "GetRtpVideoHeader()",
    "kind": "Method",
    "detail": "Function (const RTPVideoHeader&)",
    "insertText": "GetRtpVideoHeader()"
  },
  {
    "label": "mutable_data()",
    "kind": "Method",
    "detail": "Function (uint8_t*)",
    "insertText": "mutable_data()"
  }
]