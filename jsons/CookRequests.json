[
  {
    "label": "FEvent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEvent"
  },
  {
    "label": "ITargetPlatform",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITargetPlatform"
  },
  {
    "label": "FFreeFEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFreeFEvent"
  },
  {
    "label": "FFilePlatformRequest",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFilePlatformRequest"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "FExternalRequests",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FExternalRequests"
  },
  {
    "label": "SetFilename()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFilename(FString InFilename)"
  },
  {
    "label": "RemovePlatform()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemovePlatform(const ITargetPlatform* Platform)"
  },
  {
    "label": "AddPlatform()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddPlatform(const ITargetPlatform* Platform)"
  },
  {
    "label": "Clear()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Clear()"
  },
  {
    "label": "RemapTargetPlatforms()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemapTargetPlatforms(const TMap<ITargetPlatform*, ITargetPlatform*>& Remap)"
  },
  {
    "label": "AddCallback()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddCallback(FSchedulerCallback&& Callback)"
  },
  {
    "label": "EnqueueUnique()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnqueueUnique(FFilePlatformRequest&& FileRequest, bool bForceFrontOfQueue = false)"
  },
  {
    "label": "DequeueNextCluster()",
    "kind": "Method",
    "detail": "Function (EExternalRequestType)",
    "insertText": "DequeueNextCluster(TArray<FSchedulerCallback>& OutCallbacks, TArray<FFilePlatformRequest>& OutBuildRequests)"
  },
  {
    "label": "DequeueCallbacks()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DequeueCallbacks(TArray<FSchedulerCallback>& OutCallbacks)"
  },
  {
    "label": "EmptyRequests()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EmptyRequests()"
  },
  {
    "label": "DequeueAll()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DequeueAll(TArray<FSchedulerCallback>& OutCallbacks, TArray<FFilePlatformRequest>& OutCookRequests)"
  },
  {
    "label": "OnRemoveSessionPlatform()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnRemoveSessionPlatform(const ITargetPlatform* TargetPlatform)"
  },
  {
    "label": "RemapTargetPlatforms()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemapTargetPlatforms(const TMap<ITargetPlatform*, ITargetPlatform*>& Remap)"
  },
  {
    "label": "LogAllRequestedFiles()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LogAllRequestedFiles()"
  },
  {
    "label": "ThreadUnsafeDequeueCallbacks()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ThreadUnsafeDequeueCallbacks(TArray<FSchedulerCallback>& OutCallbacks)"
  }
]