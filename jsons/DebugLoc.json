[
  {
    "label": "LLVMContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "LLVMContext"
  },
  {
    "label": "raw_ostream",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "raw_ostream"
  },
  {
    "label": "DILocation",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DILocation"
  },
  {
    "label": "DebugLoc",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DebugLoc"
  },
  {
    "label": "DebugLoc()",
    "kind": "Method",
    "detail": "Function (# ifndef LLVM_IR_DEBUGLOC_H # define LLVM_IR_DEBUGLOC_H # include \" llvm / IR / TrackingMDRef . h \" # include \" llvm / Support / DataTypes . h \" namespace llvm { class LLVMContext ; class raw_ostream ; class DILocation ; class DebugLoc { TrackingMDNodeRef Loc ; public :)",
    "insertText": "DebugLoc()"
  },
  {
    "label": "DebugLoc()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "DebugLoc(DebugLoc &&X) : Loc(std::move(X.Loc))"
  },
  {
    "label": "DebugLoc()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "DebugLoc(const DebugLoc &X) : Loc(X.Loc)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} DebugLoc&)",
    "insertText": "operator(DebugLoc &&X)"
  },
  {
    "label": "move()",
    "kind": "Method",
    "detail": "Function (Loc =)",
    "insertText": "move(X.Loc)"
  },
  {
    "label": "DebugLoc()",
    "kind": "Method",
    "detail": "Function (Loc = X . Loc ; return* this ; })",
    "insertText": "DebugLoc(const DILocation *L)"
  },
  {
    "label": "DebugLoc()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DebugLoc(const MDNode *N)"
  },
  {
    "label": "get()",
    "kind": "Method",
    "detail": "Function (DILocation*)",
    "insertText": "get()"
  },
  {
    "label": "DILocation()",
    "kind": "Method",
    "detail": "Function (operator)",
    "insertText": "DILocation()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} DILocation*)",
    "insertText": "operator()"
  },
  {
    "label": "bool()",
    "kind": "Method",
    "detail": "Function (} operator)",
    "insertText": "bool()"
  },
  {
    "label": "get()",
    "kind": "Method",
    "detail": "Function (} DebugLoc)",
    "insertText": "get(unsigned Line, unsigned Col, const MDNode *Scope, const MDNode *InlinedAt = nullptr)"
  },
  {
    "label": "getLine()",
    "kind": "Method",
    "detail": "Function (unsigned)",
    "insertText": "getLine()"
  },
  {
    "label": "getCol()",
    "kind": "Method",
    "detail": "Function (unsigned)",
    "insertText": "getCol()"
  },
  {
    "label": "getScope()",
    "kind": "Method",
    "detail": "Function (MDNode*)",
    "insertText": "getScope()"
  },
  {
    "label": "getInlinedAt()",
    "kind": "Method",
    "detail": "Function (DILocation*)",
    "insertText": "getInlinedAt()"
  },
  {
    "label": "getInlinedAtScope()",
    "kind": "Method",
    "detail": "Function (MDNode*)",
    "insertText": "getInlinedAtScope()"
  },
  {
    "label": "getFnDebugLoc()",
    "kind": "Method",
    "detail": "Function (DebugLoc)",
    "insertText": "getFnDebugLoc()"
  },
  {
    "label": "getAsMDNode()",
    "kind": "Method",
    "detail": "Function (MDNode*)",
    "insertText": "getAsMDNode()"
  },
  {
    "label": "print()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "print(raw_ostream &OS)"
  }
]