[
  {
    "label": "AActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AActor"
  },
  {
    "label": "FExternalSpatialAccelerationPayload",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FExternalSpatialAccelerationPayload"
  },
  {
    "label": "FPhysScene_Chaos",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPhysScene_Chaos"
  },
  {
    "label": "UClusterUnionReplicatedProxyComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UClusterUnionReplicatedProxyComponent"
  },
  {
    "label": "FPBDRigidsSolver",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPBDRigidsSolver"
  },
  {
    "label": "ISpatialAccelerationCollection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISpatialAccelerationCollection"
  },
  {
    "label": "FClusterUnionBoneData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FClusterUnionBoneData"
  },
  {
    "label": "FClusteredComponentData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FClusteredComponentData"
  },
  {
    "label": "FClusteredActorData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FClusteredActorData"
  },
  {
    "label": "FClusterUnionReplicatedData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FClusterUnionReplicatedData"
  },
  {
    "label": "FClusterUnionPendingAddData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FClusterUnionPendingAddData"
  },
  {
    "label": "FClusterUnionInitializationData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FClusterUnionInitializationData"
  },
  {
    "label": "UClusterUnionComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UClusterUnionComponent"
  },
  {
    "label": "FMappedComponentKey",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMappedComponentKey"
  },
  {
    "label": "FMappedBoneData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMappedBoneData"
  },
  {
    "label": "FCollisionQueryParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCollisionQueryParams"
  },
  {
    "label": "FCollisionResponseParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCollisionResponseParams"
  },
  {
    "label": "FCollisionObjectQueryParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCollisionObjectQueryParams"
  },
  {
    "label": "UModularVehicleBaseComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UModularVehicleBaseComponent"
  },
  {
    "label": "UPrimitiveComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPrimitiveComponent"
  },
  {
    "label": "DECLARE_LOG_CATEGORY_EXTERN()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Chaos / PhysicsObject . h \" # include \" Components / PrimitiveComponent . h \" # include \" Containers / Array . h \" # include \" Containers / Map . h \" # include \" Containers / Set . h \" # include \" Engine / EngineTypes . h \" # include \" Logging / LogMacros . h \" # include \" PhysicsEngine / ExternalSpatialAccelerationPayload . h \" # include \" PhysicsEngine / SafePhysicsObjectHandle . h \" # include \" PhysicsInterfaceTypesCore . h \" # include \" PhysicsProxy / ClusterUnionPhysicsProxy . h \" # include \" UObject / ObjectKey . h \" # include \" ClusterUnionComponent . generated . h \" class AActor ; struct FExternalSpatialAccelerationPayload ; class FPhysScene_Chaos ; class UClusterUnionReplicatedProxyComponent ;)",
    "insertText": "DECLARE_LOG_CATEGORY_EXTERN(LogClusterUnion, Log, All)"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (namespace Chaos { class FPBDRigidsSolver ; template<TPayload,T,int d> class ISpatialAccelerationCollection ; })",
    "insertText": "USTRUCT()"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() FClusterUnionBoneData()"
  },
  {
    "label": "FClusterUnionBoneData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FClusterUnionBoneData(int32 InBoneId) : ID(InBoneId)"
  },
  {
    "label": "FClusterUnionBoneData()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FClusterUnionBoneData(int32 InBoneId, Chaos::FUniqueIdx InParticleID) : ID(InBoneId), ParticleID(InParticleID)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} int32 ID = INDEX_NONE ; Chaos::FUniqueIdx ParticleID ; bool)",
    "insertText": "operator(const FClusterUnionBoneData& Other)"
  },
  {
    "label": "GetTypeHash()",
    "kind": "Method",
    "detail": "Function (} uint32)",
    "insertText": "GetTypeHash(const FClusterUnionBoneData& Data)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() FClusteredComponentData()"
  },
  {
    "label": "FClusteredComponentData()",
    "kind": "Method",
    "detail": "Function (PRAGMA_DISABLE_DEPRECATION_WARNINGS)",
    "insertText": "FClusteredComponentData(const FClusteredComponentData& Other)"
  },
  {
    "label": "FClusteredComponentData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FClusteredComponentData(FClusteredComponentData&& Other)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FClusteredComponentData&)",
    "insertText": "operator(const FClusteredComponentData& Other)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FClusteredComponentData&)",
    "insertText": "operator(FClusteredComponentData&& Other)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY()"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() UPROPERTY()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FClusterUnionReplicatedData&)",
    "insertText": "operator(const FClusterUnionReplicatedData&)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() FClusterUnionPendingAddData()"
  },
  {
    "label": "FClusterUnionPendingAddData()",
    "kind": "Method",
    "detail": "Function (PRAGMA_DISABLE_DEPRECATION_WARNINGS)",
    "insertText": "FClusterUnionPendingAddData(const FClusterUnionPendingAddData& Other)"
  },
  {
    "label": "FClusterUnionPendingAddData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FClusterUnionPendingAddData(FClusterUnionPendingAddData&& Other)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FClusterUnionPendingAddData&)",
    "insertText": "operator(const FClusterUnionPendingAddData& Other)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FClusterUnionPendingAddData&)",
    "insertText": "operator(FClusterUnionPendingAddData&& Other)"
  },
  {
    "label": "DECLARE_DYNAMIC_MULTICAST_DELEGATE_ThreeParams()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "DECLARE_DYNAMIC_MULTICAST_DELEGATE_ThreeParams(FOnClusterUnionAddedComponent, UPrimitiveComponent*, Component, const TSet<int32>&, BoneIds, bool, bIsNew)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_FourParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_FourParams(FOnClusterUnionAddedComponentNative, UPrimitiveComponent*, const TArray<FClusterUnionBoneData>& , const TArray<FClusterUnionBoneData>& , bool)"
  },
  {
    "label": "DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FOnClusterUnionRemovedComponent, UPrimitiveComponent*, Component)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_TwoParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_TwoParams(FOnClusterUnionRemovedComponentNative, UPrimitiveComponent*, const TArray<FClusterUnionBoneData>&)"
  },
  {
    "label": "DECLARE_DYNAMIC_MULTICAST_DELEGATE_TwoParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DYNAMIC_MULTICAST_DELEGATE_TwoParams(FOnClusterUnionBoundsChanged, UClusterUnionComponent*, Component, const FBoxSphereBounds&, Bounds)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_OneParam(FOnClusterUnionPostSyncBodies, const FClusterUnionInitializationData&)"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UCLASS(MinimalAPI)"
  },
  {
    "label": "UClusterUnionComponent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UClusterUnionComponent(const FObjectInitializer& ObjectInitializer)"
  },
  {
    "label": "IsAnchored()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsAnchored()"
  },
  {
    "label": "FMappedComponentKey()",
    "kind": "Method",
    "detail": "Function (struct FMappedComponentKey {)",
    "insertText": "FMappedComponentKey() : ComponentPtr(nullptr)"
  },
  {
    "label": "FMappedComponentKey()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FMappedComponentKey(TObjectKey<UPrimitiveComponent> InComponentKey, UPrimitiveComponent* InComponent)"
  },
  {
    "label": "FMappedComponentKey()",
    "kind": "Method",
    "detail": "Function (ComponentKey = InComponentKey ; ComponentPtr = InComponent ; })",
    "insertText": "FMappedComponentKey(UPrimitiveComponent* InComponent)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (ComponentKey = InComponent ; ComponentPtr = InComponent ; } bool)",
    "insertText": "operator(const FMappedComponentKey& Other)"
  },
  {
    "label": "FMappedBoneData()",
    "kind": "Method",
    "detail": "Function (} TObjectKey<UPrimitiveComponent> ComponentKey ; UPrimitiveComponent* ComponentPtr ; } ; struct FMappedBoneData {)",
    "insertText": "FMappedBoneData()"
  },
  {
    "label": "FMappedBoneData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FMappedBoneData(Chaos::FPhysicsObjectHandle PhysicsObjectHande, Chaos::FPBDRigidParticle* RigidParticle, const Chaos::FUniqueIdx& ParticleID, const FTransform& ChildToParentTransform) : PhysicsObjectHandle(PhysicsObjectHande) , RigidParticle(RigidParticle) , ParticleID(ParticleID) , ChildToParentTransform(ChildToParentTransform)"
  },
  {
    "label": "SyncClusterUnionFromProxy()",
    "kind": "Method",
    "detail": "Function (} Chaos::FPhysicsObjectHandle PhysicsObjectHandle = nullptr ; Chaos::FPBDRigidParticle* RigidParticle = nullptr ; Chaos::FUniqueIdx ParticleID ; FTransform ChildToParentTransform ; } ; using FLocalBonesToTransformMap = TSortedMap<int32,FMappedBoneData,TInlineAllocator<1>> ; void)",
    "insertText": "SyncClusterUnionFromProxy(const FTransform& NewTransform, TArray<TTuple<UPrimitiveComponent*, FTransform>>* OutNewComponents)"
  },
  {
    "label": "WakeAllRigidBodies()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "WakeAllRigidBodies()"
  },
  {
    "label": "IsAnyRigidBodyAwake()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsAnyRigidBodyAwake()"
  },
  {
    "label": "SetMassOverrideInKg()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetMassOverrideInKg(FName BoneName, float MassInKg, bool bOverrideMass)"
  },
  {
    "label": "LineTraceComponent()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "LineTraceComponent(TArray<FHitResult>& OutHit, const FVector Start, const FVector End, ECollisionChannel TraceChannel, const struct FCollisionQueryParams& Params, const struct FCollisionResponseParams& ResponseParams, const struct FCollisionObjectQueryParams& ObjectParams)"
  },
  {
    "label": "SweepComponent()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SweepComponent(TArray<FHitResult>& OutHit, const FVector Start, const FVector End, const FQuat& ShapeWorldRotation, const FPhysicsGeometry& Geometry, ECollisionChannel TraceChannel, const struct FCollisionQueryParams& Params, const struct FCollisionResponseParams& ResponseParams, const struct FCollisionObjectQueryParams& ObjectParams)"
  },
  {
    "label": "VisitAllCurrentChildComponents()",
    "kind": "Method",
    "detail": "Function (FOnClusterUnionAddedComponentNative OnComponentAddedNativeEvent ; FOnClusterUnionRemovedComponentNative OnComponentRemovedNativeEvent ; FOnClusterUnionPostSyncBodies OnClusterUnionPostSyncBodiesEvent ; void)",
    "insertText": "VisitAllCurrentChildComponents(const TFunction<bool(UPrimitiveComponent*)>& Lambda)"
  },
  {
    "label": "VisitAllCurrentActors()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "VisitAllCurrentActors(const TFunction<bool(AActor*)>& Lambda)"
  },
  {
    "label": "NumChildClusterComponents()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "NumChildClusterComponents()"
  },
  {
    "label": "GetSpatialAcceleration()",
    "kind": "Method",
    "detail": "Function (const FSpatialAcceleration*)",
    "insertText": "GetSpatialAcceleration()"
  },
  {
    "label": "GetAddedBoneIdsForComponent()",
    "kind": "Method",
    "detail": "Function (TArray<int32>)",
    "insertText": "GetAddedBoneIdsForComponent(UPrimitiveComponent* Component)"
  },
  {
    "label": "ChangeIfComponentBonesAreMainParticle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ChangeIfComponentBonesAreMainParticle(UPrimitiveComponent* Component, const TArray<int32>& BoneIds, bool bIsMain)"
  },
  {
    "label": "FindChildPhysicsObjectByShapeIndex()",
    "kind": "Method",
    "detail": "Function (Chaos::FPhysicsObjectHandle)",
    "insertText": "FindChildPhysicsObjectByShapeIndex(int32 Index)"
  },
  {
    "label": "OnChildToParentUpdated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnChildToParentUpdated(UPrimitiveComponent* ChangedComponent, const FLocalBonesToTransformMap& PerBoneChildToParent, const FTransform& NewTransform, TArray<TTuple<UPrimitiveComponent*, FTransform>>* OutNewComponents)"
  },
  {
    "label": "BroadcastComponentAddedEvents()",
    "kind": "Method",
    "detail": "Function (} protected : void)",
    "insertText": "BroadcastComponentAddedEvents(UPrimitiveComponent* ChangedComponent, const TArray<FClusterUnionBoneData>& BoneIds, bool bIsNew, const TArray<FClusterUnionBoneData>& RemovedBoneIDs)"
  },
  {
    "label": "BroadcastComponentRemovedEvents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BroadcastComponentRemovedEvents(UPrimitiveComponent* ChangedComponent, const TArray<FClusterUnionBoneData>& InRemovedBonesData)"
  },
  {
    "label": "GetPhysicsProxy()",
    "kind": "Method",
    "detail": "Function (Chaos::FClusterUnionPhysicsProxy*)",
    "insertText": "GetPhysicsProxy()"
  },
  {
    "label": "GetReplicatedRigidState()",
    "kind": "Method",
    "detail": "Function (const FClusterUnionReplicatedData&)",
    "insertText": "GetReplicatedRigidState()"
  },
  {
    "label": "GetChaosScene()",
    "kind": "Method",
    "detail": "Function (private : FPhysScene_Chaos*)",
    "insertText": "GetChaosScene()"
  },
  {
    "label": "GetBoneIDsFromComponentData()",
    "kind": "Method",
    "detail": "Function (Chaos::FClusterUnionPhysicsProxy* PhysicsProxy ; FChaosUserData PhysicsUserData ; TUniquePtr<FSpatialAcceleration> AccelerationStructure ; template<TContainer,TSourceData> void)",
    "insertText": "GetBoneIDsFromComponentData(TContainer& OutBoneIDs, const TSourceData& InSourceData)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (OutBoneIDs .)",
    "insertText": "Reset()"
  },
  {
    "label": "Reserve()",
    "kind": "Method",
    "detail": "Function (OutBoneIDs .)",
    "insertText": "Reserve(InSourceData.BonesData.Num())"
  },
  {
    "label": "Transform()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Transform(InSourceData.BonesData, OutBoneIDs, &FClusterUnionBoneData::ID)"
  },
  {
    "label": "HandleAddOrModifiedClusteredComponent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleAddOrModifiedClusteredComponent(const FMappedComponentKey& ChangedComponentData, const FLocalBonesToTransformMap& PerBoneChildToParent, const FTransform& NewTransform, TArray<TTuple<UPrimitiveComponent*, FTransform>>* OutNewComponents)"
  },
  {
    "label": "HandleRemovedClusteredComponent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleRemovedClusteredComponent(TObjectKey<UPrimitiveComponent> RemovedComponent, const FClusteredComponentData& ComponentData)"
  },
  {
    "label": "GetAllCurrentChildComponents()",
    "kind": "Method",
    "detail": "Function (TArray<UPrimitiveComponent*>)",
    "insertText": "GetAllCurrentChildComponents()"
  },
  {
    "label": "GetAllCurrentActors()",
    "kind": "Method",
    "detail": "Function (TArray<AActor*>)",
    "insertText": "GetAllCurrentActors()"
  },
  {
    "label": "VisitAllCurrentChildComponentsForCollision()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "VisitAllCurrentChildComponentsForCollision(ECollisionChannel TraceChannel, const struct FCollisionQueryParams& Params, const struct FCollisionResponseParams& ResponseParams, const struct FCollisionObjectQueryParams& ObjectParams, const TFunction<bool(UPrimitiveComponent*)>& Lambda)"
  },
  {
    "label": "AddGTParticleGeometry()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddGTParticleGeometry(const TArray<Chaos::FPhysicsObjectHandle>& PhysicsObjects)"
  },
  {
    "label": "RemoveGTParticleGeometry()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveGTParticleGeometry(const TSet<Chaos::FPhysicsObjectHandle>& PhysicsObjects)"
  },
  {
    "label": "OnCreatePhysicsState()",
    "kind": "Method",
    "detail": "Function (public : void)",
    "insertText": "OnCreatePhysicsState()"
  },
  {
    "label": "OnDestroyPhysicsState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDestroyPhysicsState()"
  },
  {
    "label": "ShouldCreatePhysicsState()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldCreatePhysicsState()"
  },
  {
    "label": "HasValidPhysicsState()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasValidPhysicsState()"
  },
  {
    "label": "GetLifetimeReplicatedProps()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetLifetimeReplicatedProps(TArray<FLifetimeProperty>& OutLifetimeProps)"
  },
  {
    "label": "GetBodyInstance()",
    "kind": "Method",
    "detail": "Function (public : using UPrimitiveComponent::LineTraceComponent ; using UPrimitiveComponent::SweepComponent ; using UPrimitiveComponent::OverlapComponentWithResult ; FBodyInstance*)",
    "insertText": "GetBodyInstance(FName BoneName, bool bGetWelded, int32 Index)"
  },
  {
    "label": "CanEditSimulatePhysics()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanEditSimulatePhysics()"
  },
  {
    "label": "SweepComponent()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SweepComponent(FHitResult& OutHit, const FVector Start, const FVector End, const FQuat& ShapeWorldRotation, const FPhysicsGeometry& Geometry, ECollisionChannel TraceChannel, const struct FCollisionQueryParams& Params, const struct FCollisionResponseParams& ResponseParams, const struct FCollisionObjectQueryParams& ObjectParams)"
  },
  {
    "label": "OverlapComponentWithResult()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "OverlapComponentWithResult(const FVector& Pos, const FQuat& Rot, const FPhysicsGeometry& Geometry, ECollisionChannel TraceChannel, const struct FCollisionQueryParams& Params, const struct FCollisionResponseParams& ResponseParams, const struct FCollisionObjectQueryParams& ObjectParams, TArray<FOverlapResult>& OutOverlap)"
  },
  {
    "label": "ComponentOverlapComponentWithResultImpl()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ComponentOverlapComponentWithResultImpl(const class UPrimitiveComponent* const PrimComp, const FVector& Pos, const FQuat& Rot, const FCollisionQueryParams& Params, TArray<FOverlapResult>& OutOverlap)"
  },
  {
    "label": "ShouldDispatchWakeEvents()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldDispatchWakeEvents(FName BoneName)"
  },
  {
    "label": "OnReceiveReplicatedState()",
    "kind": "Method",
    "detail": "Function (public : void)",
    "insertText": "OnReceiveReplicatedState(const FVector X, const FQuat R, const FVector V, const FVector W)"
  },
  {
    "label": "OnUpdateTransform()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnUpdateTransform(EUpdateTransformFlags UpdateTransformFlags, ETeleportType Teleport)"
  },
  {
    "label": "CalcBounds()",
    "kind": "Method",
    "detail": "Function (FBoxSphereBounds)",
    "insertText": "CalcBounds(const FTransform& LocalToWorld)"
  },
  {
    "label": "GetComponentVelocity()",
    "kind": "Method",
    "detail": "Function (FVector)",
    "insertText": "GetComponentVelocity()"
  },
  {
    "label": "GetPhysicsObjectById()",
    "kind": "Method",
    "detail": "Function (public : Chaos::FPhysicsObject*)",
    "insertText": "GetPhysicsObjectById(Chaos::FPhysicsObjectId Id)"
  },
  {
    "label": "GetPhysicsObjectByName()",
    "kind": "Method",
    "detail": "Function (Chaos::FPhysicsObject*)",
    "insertText": "GetPhysicsObjectByName(const FName& Name)"
  },
  {
    "label": "GetAllPhysicsObjects()",
    "kind": "Method",
    "detail": "Function (TArray<Chaos::FPhysicsObject*>)",
    "insertText": "GetAllPhysicsObjects()"
  },
  {
    "label": "GetIdFromGTParticle()",
    "kind": "Method",
    "detail": "Function (Chaos::FPhysicsObjectId)",
    "insertText": "GetIdFromGTParticle(Chaos::FGeometryParticle* Particle)"
  },
  {
    "label": "AddReferencedObjects()",
    "kind": "Method",
    "detail": "Function (public : void)",
    "insertText": "AddReferencedObjects(UObject* InThis, FReferenceCollector& Collector)"
  }
]