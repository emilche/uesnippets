[
  {
    "label": "_LIBCPP_TEMPLATE_VIS",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_LIBCPP_TEMPLATE_VIS"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# ifndef _LIBCPP___FORMAT_FORMATTER_BOOL_H # define _LIBCPP___FORMAT_FORMATTER_BOOL_H # include<__algorithm / copy . h> # include<__availability> # include<__config> # include<__debug> # include<__format / format_error . h> # include<__format / format_fwd . h> # include<__format / format_parse_context . h> # include<__format / formatter . h> # include<__format / formatter_integral . h> # include<__format / parser_std_format_spec . h> # include<__utility / unreachable . h> # include<string_view> # ifndef _LIBCPP_HAS_NO_LOCALIZATION # include<locale> # endif # if !)",
    "insertText": "defined(_LIBCPP_HAS_NO_PRAGMA_SYSTEM_HEADER)"
  },
  {
    "label": "parse()",
    "kind": "Method",
    "detail": "Function (public : _LIBCPP_HIDE_FROM_ABI auto)",
    "insertText": "parse(basic_format_parse_context<_CharT>& __parse_ctx) -> decltype(__parse_ctx.begin())"
  },
  {
    "label": "__parse()",
    "kind": "Method",
    "detail": "Function (auto __result = __parser_ .)",
    "insertText": "__parse(__parse_ctx, __format_spec::__fields_integral)"
  },
  {
    "label": "__process_parsed_bool()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "__process_parsed_bool(__parser_)"
  },
  {
    "label": "_LIBCPP_ASSERT()",
    "kind": "Method",
    "detail": "Function (default :)",
    "insertText": "_LIBCPP_ASSERT(false, \"The parse function should have validated the type\")"
  },
  {
    "label": "__libcpp_unreachable()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "__libcpp_unreachable()"
  }
]