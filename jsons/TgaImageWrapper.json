[
  {
    "label": "FTgaImageWrapper",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTgaImageWrapper"
  },
  {
    "label": "LoadTGAHeader()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" ImageWrapperBase . h \" class FTgaImageWrapper : public FImageWrapperBase { public : bool)",
    "insertText": "LoadTGAHeader()"
  },
  {
    "label": "IsTGAHeader()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsTGAHeader(const void * CompressedData,int64 CompressedDataLength)"
  },
  {
    "label": "Compress()",
    "kind": "Method",
    "detail": "Function (public : void)",
    "insertText": "Compress(int32 Quality)"
  },
  {
    "label": "SetCompressed()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetCompressed(const void* InCompressedData, int64 InCompressedSize)"
  },
  {
    "label": "Uncompress()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Uncompress(const ERGBFormat InFormat, int32 InBitDepth)"
  },
  {
    "label": "CanSetRawFormat()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanSetRawFormat(const ERGBFormat InFormat, const int32 InBitDepth)"
  },
  {
    "label": "GetSupportedRawFormat()",
    "kind": "Method",
    "detail": "Function (ERawImageFormat::Type)",
    "insertText": "GetSupportedRawFormat(const ERawImageFormat::Type InFormat)"
  }
]