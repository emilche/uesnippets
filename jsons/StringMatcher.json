[
  {
    "label": "raw_ostream",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "raw_ostream"
  },
  {
    "label": "StringMatcher",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "StringMatcher"
  },
  {
    "label": "StringMatcher()",
    "kind": "Method",
    "detail": "Function (# ifndef LLVM_TABLEGEN_STRINGMATCHER_H # define LLVM_TABLEGEN_STRINGMATCHER_H # include \" llvm / ADT / StringRef . h \" # include<string> # include<utility> # include<vector> namespace llvm { class raw_ostream ; class StringMatcher { public : typedef std::pair<std::string,std::string> StringPair ; private : StringRef StrVariableName ; const std::vector<StringPair>& Matches ; raw_ostream& OS ; public :)",
    "insertText": "StringMatcher(StringRef strVariableName, const std::vector<StringPair> &matches, raw_ostream &os) : StrVariableName(strVariableName), Matches(matches), OS(os)"
  },
  {
    "label": "Emit()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Emit(unsigned Indent = 0)"
  },
  {
    "label": "EmitStringMatcherForChar()",
    "kind": "Method",
    "detail": "Function (private : bool)",
    "insertText": "EmitStringMatcherForChar(const std::vector<const StringPair*> &Matches, unsigned CharNo, unsigned IndentCount)"
  }
]