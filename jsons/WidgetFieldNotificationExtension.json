[
  {
    "label": "UVisual",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UVisual"
  },
  {
    "label": "UWidgetFieldNotificationExtension",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UWidgetFieldNotificationExtension"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Components / Visual . h \" # include \" Extensions / UserWidgetExtension . h \" # include \" FieldNotificationDelegate . h \" # include \" WidgetFieldNotificationExtension . generated . h \" class UVisual ;)",
    "insertText": "UCLASS(MinimalAPI, Transient, NotBlueprintType)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY()"
  },
  {
    "label": "AddFieldValueChangedDelegate()",
    "kind": "Method",
    "detail": "Function (using FFieldId = UE::FieldNotification::FFieldId ; using FRemoveFromResult = UE::FieldNotification::FFieldMulticastDelegate::FRemoveFromResult ; using FRemoveAllResult = UE::FieldNotification::FFieldMulticastDelegate::FRemoveAllResult ; public : FDelegateHandle)",
    "insertText": "AddFieldValueChangedDelegate(const UVisual* InObject, FFieldId InFieldId, FDelegate InNewDelegate)"
  },
  {
    "label": "AddFieldValueChangedDelegate()",
    "kind": "Method",
    "detail": "Function (} FDelegateHandle)",
    "insertText": "AddFieldValueChangedDelegate(const UVisual* InObject, FFieldId InFieldId, const FFieldValueChangedDynamicDelegate& InDelegate)"
  },
  {
    "label": "RemoveFieldValueChangedDelegate()",
    "kind": "Method",
    "detail": "Function (} FRemoveFromResult)",
    "insertText": "RemoveFieldValueChangedDelegate(const UVisual* InObject, FFieldId InFieldId, FDelegateHandle InDelegateHandle)"
  },
  {
    "label": "RemoveFieldValueChangedDelegate()",
    "kind": "Method",
    "detail": "Function (} FRemoveFromResult)",
    "insertText": "RemoveFieldValueChangedDelegate(const UVisual* InObject, FFieldId InFieldId, const FFieldValueChangedDynamicDelegate& InDelegate)"
  },
  {
    "label": "RemoveAllFieldValueChangedDelegates()",
    "kind": "Method",
    "detail": "Function (} FRemoveAllResult)",
    "insertText": "RemoveAllFieldValueChangedDelegates(const UVisual* InObject, const void* InUserObject)"
  },
  {
    "label": "RemoveAllFieldValueChangedDelegates()",
    "kind": "Method",
    "detail": "Function (} FRemoveAllResult)",
    "insertText": "RemoveAllFieldValueChangedDelegates(const UVisual* InObject, FFieldId InFieldId, const void* InUserObject)"
  },
  {
    "label": "BroadcastFieldValueChanged()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "BroadcastFieldValueChanged(UVisual* InObject, UE::FieldNotification::FFieldId InFieldId)"
  },
  {
    "label": "Broadcast()",
    "kind": "Method",
    "detail": "Function (Delegates .)",
    "insertText": "Broadcast(InObject, InFieldId)"
  }
]