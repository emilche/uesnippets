[
  {
    "label": "AActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AActor"
  },
  {
    "label": "FLevelEditorViewportClient",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLevelEditorViewportClient"
  },
  {
    "label": "UCameraComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UCameraComponent"
  },
  {
    "label": "FEditorViewportViewModifierParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FEditorViewportViewModifierParams"
  },
  {
    "label": "FMovieSceneCameraCutParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneCameraCutParams"
  },
  {
    "label": "FCameraCutPlaybackCapability",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCameraCutPlaybackCapability"
  },
  {
    "label": "FPreAnimatedCameraCutEditorStorage",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPreAnimatedCameraCutEditorStorage"
  },
  {
    "label": "FCameraCutViewportPreviewerTarget",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCameraCutViewportPreviewerTarget"
  },
  {
    "label": "FCameraCutViewportPreviewer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCameraCutViewportPreviewer"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (# pragma once # if WITH_EDITOR # include \" CoreMinimal . h \" # include \" UObject / WeakObjectPtr . h \" class AActor ; class FLevelEditorViewportClient ; class UCameraComponent ; struct FEditorViewportViewModifierParams ; struct FMovieSceneCameraCutParams ; namespace UE::MovieScene { struct FCameraCutPlaybackCapability ; struct FPreAnimatedCameraCutEditorStorage ; struct FCameraCutViewportPreviewerTarget { AActor* CameraActor = nullptr ; UCameraComponent* CameraComponent = nullptr ; TSharedPtr<FPreAnimatedCameraCutEditorStorage> PreAnimatedStorage ; void)",
    "insertText": "Get(FLevelEditorViewportClient* InClient, FVector& OutLocation, FRotator& OutRotation, float& OutFOV)"
  },
  {
    "label": "FCameraCutViewportPreviewer()",
    "kind": "Method",
    "detail": "Function (} ; class FCameraCutViewportPreviewer { public :)",
    "insertText": "FCameraCutViewportPreviewer()"
  },
  {
    "label": "ToggleViewportPreviewModifiers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ToggleViewportPreviewModifiers(bool bEnable)"
  },
  {
    "label": "SetupBlend()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetupBlend(const FCameraCutViewportPreviewerTarget& From, const FCameraCutViewportPreviewerTarget& To, float InBlendFactor)"
  },
  {
    "label": "TeardownBlend()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TeardownBlend()"
  },
  {
    "label": "UpdatePreviewLevelViewportClientFromCameraCut()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "UpdatePreviewLevelViewportClientFromCameraCut(FLevelEditorViewportClient& InViewportClient, UObject* InCameraObject, const FMovieSceneCameraCutParams& CameraCutParams)"
  },
  {
    "label": "ModifyViewportClientView()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ModifyViewportClientView(FEditorViewportViewModifierParams& Params)"
  },
  {
    "label": "OnLevelViewportClientListChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnLevelViewportClientListChanged()"
  }
]