[
  {
    "label": "UTexture2D",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UTexture2D"
  },
  {
    "label": "UTexture2DArray",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UTexture2DArray"
  },
  {
    "label": "UTextureCube",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UTextureCube"
  },
  {
    "label": "UTextureCubeArray",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UTextureCubeArray"
  },
  {
    "label": "UVolumeTexture",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UVolumeTexture"
  },
  {
    "label": "UTextureRenderTarget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UTextureRenderTarget"
  },
  {
    "label": "UTextureRenderTarget2D",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UTextureRenderTarget2D"
  },
  {
    "label": "UTextureRenderTargetCube",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UTextureRenderTargetCube"
  },
  {
    "label": "IImageWrapperModule",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IImageWrapperModule"
  },
  {
    "label": "FCreateTexture2DParameters",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCreateTexture2DParameters"
  },
  {
    "label": "FImageUtils",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FImageUtils"
  },
  {
    "label": "FCreateTexture2DParameters()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Misc / Guid . h \" # include \" ImageCore . h \" # include \" Engine / Texture . h \" class UTexture2D ; class UTexture2DArray ; class UTextureCube ; class UTextureCubeArray ; class UVolumeTexture ; class UTextureRenderTarget ; class UTextureRenderTarget2D ; class UTextureRenderTargetCube ; class IImageWrapperModule ; struct FCreateTexture2DParameters { bool bUseAlpha ; TextureCompressionSettings CompressionSettings ; bool bDeferCompression ; bool bSRGB ; bool bVirtualTexture ; TextureMipGenSettings MipGenSettings ; TextureGroup TextureGroup ; FGuid SourceGuidHash ;)",
    "insertText": "FCreateTexture2DParameters() : bUseAlpha(false), CompressionSettings(TC_Default), bDeferCompression(false), bSRGB(true), bVirtualTexture(false), MipGenSettings(TMGS_FromTextureGroup), TextureGroup(TEXTUREGROUP_MAX)"
  },
  {
    "label": "LoadImage()",
    "kind": "Method",
    "detail": "Function (} } ; class FImageUtils { public : bool)",
    "insertText": "LoadImage(const TCHAR * Filename, FImage & OutImage)"
  },
  {
    "label": "SaveImageByExtension()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SaveImageByExtension(const TCHAR * Filename, const FImageView & InImage, int32 Quality=0)"
  },
  {
    "label": "SaveImageAutoFormat()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SaveImageAutoFormat(const TCHAR * Filename, const FImageView & InImage, int32 Quality=0)"
  },
  {
    "label": "CompressImage()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CompressImage(TArray64<uint8> & OutData, const TCHAR * ToFormatExtension, const FImageView & InImage, int32 Quality = 0)"
  },
  {
    "label": "DecompressImage()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DecompressImage(const void* InCompressedData, int64 InCompressedSize, FImage & OutImage)"
  },
  {
    "label": "ExportTextureSourceToDDS()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ExportTextureSourceToDDS(TArray64<uint8> & OutData, UTexture * Texture, int BlockIndex=0, int LayerIndex=0)"
  },
  {
    "label": "ExportRenderTargetToDDS()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ExportRenderTargetToDDS(TArray64<uint8> & OutData, UTextureRenderTarget * TexRT)"
  },
  {
    "label": "GetTexture2DSourceImage()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetTexture2DSourceImage(UTexture2D* Texture, FImage & OutImage)"
  },
  {
    "label": "ImageResize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ImageResize(int32 SrcWidth, int32 SrcHeight, const TArray<FColor> &SrcData, int32 DstWidth, int32 DstHeight, TArray<FColor> &DstData, bool bLinearSpace, bool bForceOpaqueOutput=true)"
  },
  {
    "label": "ImageResize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ImageResize(int32 SrcWidth, int32 SrcHeight, const TArrayView<const FColor> &SrcData, int32 DstWidth, int32 DstHeight, const TArrayView<FColor> &DstData, bool bLinearSpace, bool bForceOpaqueOutput=true)"
  },
  {
    "label": "ImageResize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ImageResize(int32 SrcWidth, int32 SrcHeight, const TArray64<FLinearColor>& SrcData, int32 DstWidth, int32 DstHeight, TArray64<FLinearColor>& DstData)"
  },
  {
    "label": "ImageResize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ImageResize(int32 SrcWidth, int32 SrcHeight, const TArrayView64<const FLinearColor>& SrcData, int32 DstWidth, int32 DstHeight, const TArrayView64<FLinearColor>& DstData)"
  },
  {
    "label": "CreateTexture2D()",
    "kind": "Method",
    "detail": "Function (UTexture2D*)",
    "insertText": "CreateTexture2D(int32 SrcWidth, int32 SrcHeight, const TArray<FColor> &SrcData, UObject* Outer, const FString& Name, const EObjectFlags &Flags, const FCreateTexture2DParameters& InParams)"
  },
  {
    "label": "CreateTexture()",
    "kind": "Method",
    "detail": "Function (UTexture*)",
    "insertText": "CreateTexture(ETextureClass TextureClass, const FImageView & Image, UObject* Outer, const FString& Name, EObjectFlags Flags = RF_NoFlags, bool DoPostEditChange = true)"
  },
  {
    "label": "CreateTexture2DFromImage()",
    "kind": "Method",
    "detail": "Function (UTexture2D*)",
    "insertText": "CreateTexture2DFromImage(const FImageView & Image)"
  },
  {
    "label": "CropAndScaleImage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CropAndScaleImage(int32 SrcWidth, int32 SrcHeight, int32 DesiredWidth, int32 DesiredHeight, const TArray<FColor> &SrcData, TArray<FColor> &DstData)"
  },
  {
    "label": "ThumbnailCompressImageArray()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ThumbnailCompressImageArray(int32 ImageWidth, int32 ImageHeight, const TArray<FColor> &SrcData, TArray<uint8> &DstData)"
  },
  {
    "label": "ThumbnailCompressImageArray()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ThumbnailCompressImageArray(ImageWidth,ImageHeight,SrcData,DstData)"
  },
  {
    "label": "PNGCompressImageArray()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "PNGCompressImageArray(int32 ImageWidth, int32 ImageHeight, const TArrayView64<const FColor>& SrcData, TArray64<uint8>& DstData)"
  },
  {
    "label": "CreateCheckerboardTexture()",
    "kind": "Method",
    "detail": "Function (UTexture2D*)",
    "insertText": "CreateCheckerboardTexture(FColor ColorOne = FColor(64, 64, 64), FColor ColorTwo = FColor(128, 128, 128), int32 CheckerSize = 32)"
  },
  {
    "label": "CreateCheckerboardTexture2DArray()",
    "kind": "Method",
    "detail": "Function (UTexture2DArray*)",
    "insertText": "CreateCheckerboardTexture2DArray(FColor ColorOne = FColor(64, 64, 64), FColor ColorTwo = FColor(128, 128, 128), int32 CheckerSize = 32, int32 ArraySize = 1)"
  },
  {
    "label": "CreateCheckerboardCubeTexture()",
    "kind": "Method",
    "detail": "Function (UTextureCube*)",
    "insertText": "CreateCheckerboardCubeTexture(FColor ColorOne = FColor(64, 64, 64), FColor ColorTwo = FColor(128, 128, 128), int32 CheckerSize = 32)"
  },
  {
    "label": "CreateCheckerboardTextureCubeArray()",
    "kind": "Method",
    "detail": "Function (UTextureCubeArray*)",
    "insertText": "CreateCheckerboardTextureCubeArray(FColor ColorOne = FColor(64, 64, 64), FColor ColorTwo = FColor(128, 128, 128), int32 CheckerSize = 32, int32 ArraySize = 1)"
  },
  {
    "label": "CreateCheckerboardVolumeTexture()",
    "kind": "Method",
    "detail": "Function (UVolumeTexture*)",
    "insertText": "CreateCheckerboardVolumeTexture(FColor ColorOne = FColor(64, 64, 64), FColor ColorTwo = FColor(128, 128, 128), int32 CheckerSize = 16)"
  },
  {
    "label": "ExportRenderTarget2DAsHDR()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ExportRenderTarget2DAsHDR(UTextureRenderTarget2D* TexRT, FArchive& Ar)"
  },
  {
    "label": "ExportRenderTarget2DAsEXR()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ExportRenderTarget2DAsEXR(UTextureRenderTarget2D* TexRT, FArchive& Ar)"
  },
  {
    "label": "ExportRenderTarget2DAsPNG()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ExportRenderTarget2DAsPNG(UTextureRenderTarget2D* TexRT, FArchive& Ar)"
  },
  {
    "label": "ExportTexture2DAsHDR()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ExportTexture2DAsHDR(UTexture2D* TexRT, FArchive& Ar)"
  },
  {
    "label": "ImportFileAsTexture2D()",
    "kind": "Method",
    "detail": "Function (UTexture2D*)",
    "insertText": "ImportFileAsTexture2D(const FString& Filename)"
  },
  {
    "label": "ImportBufferAsTexture2D()",
    "kind": "Method",
    "detail": "Function (UTexture2D*)",
    "insertText": "ImportBufferAsTexture2D(TArrayView64<const uint8> Buffer)"
  },
  {
    "label": "ImportBufferAsTexture2D()",
    "kind": "Method",
    "detail": "Function (UTexture2D*)",
    "insertText": "ImportBufferAsTexture2D(const TArray<uint8>& Buffer)"
  },
  {
    "label": "ExportRenderTargetCubeAsHDR()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ExportRenderTargetCubeAsHDR(UTextureRenderTargetCube* TexRT, FArchive& Ar)"
  },
  {
    "label": "ExportTextureCubeAsHDR()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ExportTextureCubeAsHDR(UTextureCube* TexRT, FArchive& Ar)"
  },
  {
    "label": "GetRenderTargetImage()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetRenderTargetImage(UTextureRenderTarget* TexRT, FImage & OutImage)"
  },
  {
    "label": "GetRenderTargetImage()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetRenderTargetImage(UTextureRenderTarget* TexRT, FImage & OutImage, const FIntRect & Rect)"
  }
]