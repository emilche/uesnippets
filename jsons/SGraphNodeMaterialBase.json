[
  {
    "label": "FMaterialRenderProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMaterialRenderProxy"
  },
  {
    "label": "FRHICommandListImmediate",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRHICommandListImmediate"
  },
  {
    "label": "FSlateRect",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateRect"
  },
  {
    "label": "FWidgetStyle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWidgetStyle"
  },
  {
    "label": "SGraphPin",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SGraphPin"
  },
  {
    "label": "SOverlay",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SOverlay"
  },
  {
    "label": "SVerticalBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SVerticalBox"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "UMaterialGraphNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialGraphNode"
  },
  {
    "label": "FGeometry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGeometry"
  },
  {
    "label": "FSlateBrush",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSlateBrush"
  },
  {
    "label": "FPreviewElement",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPreviewElement"
  },
  {
    "label": "FPreviewViewport",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPreviewViewport"
  },
  {
    "label": "UMaterialGraphNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialGraphNode"
  },
  {
    "label": "FSlateWindowElementList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateWindowElementList"
  },
  {
    "label": "FSlateShaderResource",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateShaderResource"
  },
  {
    "label": "FPreviewElement",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPreviewElement"
  },
  {
    "label": "FSlateMaterialPreviewRenderTarget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateMaterialPreviewRenderTarget"
  },
  {
    "label": "GRAPHEDITOR_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "GRAPHEDITOR_API"
  },
  {
    "label": "UMaterialGraphNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialGraphNode"
  },
  {
    "label": "FGraphNodeMetaData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGraphNodeMetaData"
  },
  {
    "label": "FPreviewViewport()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FPreviewViewport(class UMaterialGraphNode* InNode)"
  },
  {
    "label": "UpdatePreviewNodeRenderProxy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdatePreviewNodeRenderProxy()"
  },
  {
    "label": "FPreviewElement()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FPreviewElement()"
  },
  {
    "label": "BeginRenderingCanvas()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "BeginRenderingCanvas( const FIntRect& InCanvasRect, const FIntRect& InClippingRect, UMaterialGraphNode* InGraphNode, bool bInIsRealtime )"
  },
  {
    "label": "UpdateExpressionPreview()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateExpressionPreview(UMaterialGraphNode* PreviewNode)"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct(const FArguments& InArgs, class UMaterialGraphNode* InNode)"
  },
  {
    "label": "CreatePreviewWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "CreatePreviewWidget()"
  },
  {
    "label": "OnExpressionPreviewChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnExpressionPreviewChanged( const ECheckBoxState NewCheckedState )"
  }
]