[
  {
    "label": "_cef_urlparts_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_urlparts_t"
  },
  {
    "label": "_cef_binary_value_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_binary_value_t"
  },
  {
    "label": "_cef_value_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_value_t"
  },
  {
    "label": "cef_parse_url()",
    "kind": "Method",
    "detail": "Function (# ifndef CEF_INCLUDE_CAPI_CEF_PARSER_CAPI_H_ # define CEF_INCLUDE_CAPI_CEF_PARSER_CAPI_H_ # pragma once # include \" include / capi / cef_base_capi . h \" # ifdef __cplusplus \" C \" { # endif CEF_EXPORT int)",
    "insertText": "cef_parse_url(const cef_string_t* url, struct _cef_urlparts_t* parts)"
  },
  {
    "label": "cef_create_url()",
    "kind": "Method",
    "detail": "Function (CEF_EXPORT int)",
    "insertText": "cef_create_url(const struct _cef_urlparts_t* parts, cef_string_t* url)"
  },
  {
    "label": "cef_format_url_for_security_display()",
    "kind": "Method",
    "detail": "Function (CEF_EXPORT cef_string_userfree_t)",
    "insertText": "cef_format_url_for_security_display(const cef_string_t* origin_url)"
  },
  {
    "label": "cef_get_mime_type()",
    "kind": "Method",
    "detail": "Function (CEF_EXPORT cef_string_userfree_t)",
    "insertText": "cef_get_mime_type(const cef_string_t* extension)"
  },
  {
    "label": "cef_get_extensions_for_mime_type()",
    "kind": "Method",
    "detail": "Function (CEF_EXPORT void)",
    "insertText": "cef_get_extensions_for_mime_type(const cef_string_t* mime_type, cef_string_list_t extensions)"
  },
  {
    "label": "cef_base64encode()",
    "kind": "Method",
    "detail": "Function (CEF_EXPORT cef_string_userfree_t)",
    "insertText": "cef_base64encode(const void* data, size_t data_size)"
  },
  {
    "label": "cef_base64decode()",
    "kind": "Method",
    "detail": "Function (CEF_EXPORT struct _cef_binary_value_t*)",
    "insertText": "cef_base64decode(const cef_string_t* data)"
  },
  {
    "label": "cef_uriencode()",
    "kind": "Method",
    "detail": "Function (CEF_EXPORT cef_string_userfree_t)",
    "insertText": "cef_uriencode(const cef_string_t* text, int use_plus)"
  },
  {
    "label": "cef_uridecode()",
    "kind": "Method",
    "detail": "Function (CEF_EXPORT cef_string_userfree_t)",
    "insertText": "cef_uridecode(const cef_string_t* text, int convert_to_utf8, cef_uri_unescape_rule_t unescape_rule)"
  },
  {
    "label": "cef_parse_json()",
    "kind": "Method",
    "detail": "Function (CEF_EXPORT struct _cef_value_t*)",
    "insertText": "cef_parse_json(const cef_string_t* json_string, cef_json_parser_options_t options)"
  },
  {
    "label": "cef_parse_json_buffer()",
    "kind": "Method",
    "detail": "Function (CEF_EXPORT struct _cef_value_t*)",
    "insertText": "cef_parse_json_buffer(const void* json, size_t json_size, cef_json_parser_options_t options)"
  },
  {
    "label": "cef_parse_jsonand_return_error()",
    "kind": "Method",
    "detail": "Function (CEF_EXPORT struct _cef_value_t*)",
    "insertText": "cef_parse_jsonand_return_error(const cef_string_t* json_string, cef_json_parser_options_t options, cef_string_t* error_msg_out)"
  },
  {
    "label": "cef_write_json()",
    "kind": "Method",
    "detail": "Function (CEF_EXPORT cef_string_userfree_t)",
    "insertText": "cef_write_json(struct _cef_value_t* node, cef_json_writer_options_t options)"
  }
]