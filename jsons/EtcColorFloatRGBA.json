[
  {
    "label": "ColorFloatRGBA",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ColorFloatRGBA"
  },
  {
    "label": "ColorFloatRGBA()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" EtcConfig . h \" # include \" EtcColor . h \" # include<math . h> namespace Etc { class ColorFloatRGBA { public :)",
    "insertText": "ColorFloatRGBA(void)"
  },
  {
    "label": "ColorFloatRGBA()",
    "kind": "Method",
    "detail": "Function (fR = fG = fB = fA = 0 . 0 f ; })",
    "insertText": "ColorFloatRGBA(float a_fR, float a_fG, float a_fB, float a_fA)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (fR = a_fR ; fG = a_fG ; fB = a_fB ; fA = a_fA ; } ColorFloatRGBA)",
    "insertText": "operator(ColorFloatRGBA& a_rfrgba)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (ColorFloatRGBA frgba ; frgba . fR = fR + a_rfrgba . fR ; frgba . fG = fG + a_rfrgba . fG ; frgba . fB = fB + a_rfrgba . fB ; frgba . fA = fA + a_rfrgba . fA ; return frgba ; } ColorFloatRGBA)",
    "insertText": "operator(float a_f)"
  },
  {
    "label": "ScaleRGB()",
    "kind": "Method",
    "detail": "Function (ColorFloatRGBA frgba ; frgba . fR = fR* a_f ; frgba . fG = fG* a_f ; frgba . fB = fB* a_f ; frgba . fA = fA ; return frgba ; } ColorFloatRGBA)",
    "insertText": "ScaleRGB(float a_f)"
  },
  {
    "label": "RoundRGB()",
    "kind": "Method",
    "detail": "Function (ColorFloatRGBA frgba ; frgba . fR = a_f* fR ; frgba . fG = a_f* fG ; frgba . fB = a_f* fB ; frgba . fA = fA ; return frgba ; } ColorFloatRGBA)",
    "insertText": "RoundRGB(void)"
  },
  {
    "label": "roundf()",
    "kind": "Method",
    "detail": "Function (ColorFloatRGBA frgba ; frgba . fR =)",
    "insertText": "roundf(fR)"
  },
  {
    "label": "roundf()",
    "kind": "Method",
    "detail": "Function (frgba . fG =)",
    "insertText": "roundf(fG)"
  },
  {
    "label": "roundf()",
    "kind": "Method",
    "detail": "Function (frgba . fB =)",
    "insertText": "roundf(fB)"
  },
  {
    "label": "LogToLinear()",
    "kind": "Method",
    "detail": "Function (ColorFloatRGBA frgbaLinear ; frgbaLinear . fR =)",
    "insertText": "LogToLinear(fR)"
  },
  {
    "label": "LogToLinear()",
    "kind": "Method",
    "detail": "Function (frgbaLinear . fG =)",
    "insertText": "LogToLinear(fG)"
  },
  {
    "label": "LogToLinear()",
    "kind": "Method",
    "detail": "Function (frgbaLinear . fB =)",
    "insertText": "LogToLinear(fB)"
  },
  {
    "label": "ToLog()",
    "kind": "Method",
    "detail": "Function (frgbaLinear . fA = fA ; return frgbaLinear ; } ColorFloatRGBA)",
    "insertText": "ToLog(void)"
  },
  {
    "label": "LinearToLog()",
    "kind": "Method",
    "detail": "Function (ColorFloatRGBA frgbaLog ; frgbaLog . fR =)",
    "insertText": "LinearToLog(fR)"
  },
  {
    "label": "LinearToLog()",
    "kind": "Method",
    "detail": "Function (frgbaLog . fG =)",
    "insertText": "LinearToLog(fG)"
  },
  {
    "label": "LinearToLog()",
    "kind": "Method",
    "detail": "Function (frgbaLog . fB =)",
    "insertText": "LinearToLog(fB)"
  },
  {
    "label": "ConvertFromRGBA8()",
    "kind": "Method",
    "detail": "Function (frgbaLog . fA = fA ; return frgbaLog ; } ColorFloatRGBA)",
    "insertText": "ConvertFromRGBA8(unsigned char a_ucR, unsigned char a_ucG, unsigned char a_ucB, unsigned char a_ucA)"
  },
  {
    "label": "fR()",
    "kind": "Method",
    "detail": "Function (ColorFloatRGBA frgba ; frgba .)",
    "insertText": "fR(float)"
  },
  {
    "label": "fG()",
    "kind": "Method",
    "detail": "Function (frgba .)",
    "insertText": "fG(float)"
  },
  {
    "label": "fB()",
    "kind": "Method",
    "detail": "Function (frgba .)",
    "insertText": "fB(float)"
  },
  {
    "label": "fA()",
    "kind": "Method",
    "detail": "Function (frgba .)",
    "insertText": "fA(float)"
  },
  {
    "label": "ucR8()",
    "kind": "Method",
    "detail": "Function (ColorFloatRGBA frgba ; unsigned char)",
    "insertText": "ucR8(unsigned char)((a_ucR4 << 4) + a_ucR4)"
  },
  {
    "label": "ucG8()",
    "kind": "Method",
    "detail": "Function (unsigned char)",
    "insertText": "ucG8(unsigned char)((a_ucG4 << 4) + a_ucG4)"
  },
  {
    "label": "ucB8()",
    "kind": "Method",
    "detail": "Function (unsigned char)",
    "insertText": "ucB8(unsigned char)((a_ucB4 << 4) + a_ucB4)"
  },
  {
    "label": "ConvertFromRGB5()",
    "kind": "Method",
    "detail": "Function (frgba . fA = 1 . 0 f ; return frgba ; } ColorFloatRGBA)",
    "insertText": "ConvertFromRGB5(unsigned char a_ucR5, unsigned char a_ucG5, unsigned char a_ucB5)"
  },
  {
    "label": "ucR8()",
    "kind": "Method",
    "detail": "Function (ColorFloatRGBA frgba ; unsigned char)",
    "insertText": "ucR8(unsigned char)((a_ucR5 << 3) + (a_ucR5 >> 2))"
  },
  {
    "label": "ucG8()",
    "kind": "Method",
    "detail": "Function (unsigned char)",
    "insertText": "ucG8(unsigned char)((a_ucG5 << 3) + (a_ucG5 >> 2))"
  },
  {
    "label": "ucB8()",
    "kind": "Method",
    "detail": "Function (unsigned char)",
    "insertText": "ucB8(unsigned char)((a_ucB5 << 3) + (a_ucB5 >> 2))"
  },
  {
    "label": "ConvertFromR6G7B6()",
    "kind": "Method",
    "detail": "Function (frgba . fA = 1 . 0 f ; return frgba ; } ColorFloatRGBA)",
    "insertText": "ConvertFromR6G7B6(unsigned char a_ucR6, unsigned char a_ucG7, unsigned char a_ucB6)"
  },
  {
    "label": "ucR8()",
    "kind": "Method",
    "detail": "Function (ColorFloatRGBA frgba ; unsigned char)",
    "insertText": "ucR8(unsigned char)((a_ucR6 << 2) + (a_ucR6 >> 4))"
  },
  {
    "label": "ucG8()",
    "kind": "Method",
    "detail": "Function (unsigned char)",
    "insertText": "ucG8(unsigned char)((a_ucG7 << 1) + (a_ucG7 >> 6))"
  },
  {
    "label": "ucB8()",
    "kind": "Method",
    "detail": "Function (unsigned char)",
    "insertText": "ucB8(unsigned char)((a_ucB6 << 2) + (a_ucB6 >> 4))"
  },
  {
    "label": "QuantizeR4G4B4()",
    "kind": "Method",
    "detail": "Function (frgba . fA = 1 . 0 f ; return frgba ; } ColorFloatRGBA)",
    "insertText": "QuantizeR4G4B4(void)"
  },
  {
    "label": "ClampRGB()",
    "kind": "Method",
    "detail": "Function (ColorFloatRGBA frgba =* this ; frgba = frgba .)",
    "insertText": "ClampRGB().ScaleRGB(15.0f).RoundRGB()"
  },
  {
    "label": "uiR4()",
    "kind": "Method",
    "detail": "Function (unsigned int)",
    "insertText": "uiR4(unsigned int)"
  },
  {
    "label": "uiG4()",
    "kind": "Method",
    "detail": "Function (unsigned int)",
    "insertText": "uiG4(unsigned int)"
  },
  {
    "label": "uiB4()",
    "kind": "Method",
    "detail": "Function (unsigned int)",
    "insertText": "uiB4(unsigned int)"
  },
  {
    "label": "fR()",
    "kind": "Method",
    "detail": "Function (frgba .)",
    "insertText": "fR(float) ((uiR4 << 4) + uiR4)"
  },
  {
    "label": "fG()",
    "kind": "Method",
    "detail": "Function (frgba .)",
    "insertText": "fG(float) ((uiG4 << 4) + uiG4)"
  },
  {
    "label": "fB()",
    "kind": "Method",
    "detail": "Function (frgba .)",
    "insertText": "fB(float) ((uiB4 << 4) + uiB4)"
  },
  {
    "label": "ScaleRGB()",
    "kind": "Method",
    "detail": "Function (frgba = frgba .)",
    "insertText": "ScaleRGB(1.0f/255.0f)"
  },
  {
    "label": "ClampRGB()",
    "kind": "Method",
    "detail": "Function (ColorFloatRGBA frgba =* this ; frgba = frgba .)",
    "insertText": "ClampRGB().ScaleRGB(31.0f).RoundRGB()"
  },
  {
    "label": "uiR5()",
    "kind": "Method",
    "detail": "Function (unsigned int)",
    "insertText": "uiR5(unsigned int)"
  },
  {
    "label": "uiG5()",
    "kind": "Method",
    "detail": "Function (unsigned int)",
    "insertText": "uiG5(unsigned int)"
  },
  {
    "label": "uiB5()",
    "kind": "Method",
    "detail": "Function (unsigned int)",
    "insertText": "uiB5(unsigned int)"
  },
  {
    "label": "fR()",
    "kind": "Method",
    "detail": "Function (frgba .)",
    "insertText": "fR(float)((uiR5 << 3) + (uiR5 >> 2))"
  },
  {
    "label": "fG()",
    "kind": "Method",
    "detail": "Function (frgba .)",
    "insertText": "fG(float)((uiG5 << 3) + (uiG5 >> 2))"
  },
  {
    "label": "fB()",
    "kind": "Method",
    "detail": "Function (frgba .)",
    "insertText": "fB(float)((uiB5 << 3) + (uiB5 >> 2))"
  },
  {
    "label": "ScaleRGB()",
    "kind": "Method",
    "detail": "Function (frgba = frgba .)",
    "insertText": "ScaleRGB(1.0f / 255.0f)"
  },
  {
    "label": "ClampRGB()",
    "kind": "Method",
    "detail": "Function (ColorFloatRGBA frgba =* this ; ColorFloatRGBA frgba6 = frgba .)",
    "insertText": "ClampRGB().ScaleRGB(63.0f).RoundRGB()"
  },
  {
    "label": "ClampRGB()",
    "kind": "Method",
    "detail": "Function (ColorFloatRGBA frgba7 = frgba .)",
    "insertText": "ClampRGB().ScaleRGB(127.0f).RoundRGB()"
  },
  {
    "label": "uiR6()",
    "kind": "Method",
    "detail": "Function (unsigned int)",
    "insertText": "uiR6(unsigned int)"
  },
  {
    "label": "uiG7()",
    "kind": "Method",
    "detail": "Function (unsigned int)",
    "insertText": "uiG7(unsigned int)"
  },
  {
    "label": "uiB6()",
    "kind": "Method",
    "detail": "Function (unsigned int)",
    "insertText": "uiB6(unsigned int)"
  },
  {
    "label": "fR()",
    "kind": "Method",
    "detail": "Function (frgba .)",
    "insertText": "fR(float)((uiR6 << 2) + (uiR6 >> 4))"
  },
  {
    "label": "fG()",
    "kind": "Method",
    "detail": "Function (frgba .)",
    "insertText": "fG(float)((uiG7 << 1) + (uiG7 >> 6))"
  },
  {
    "label": "fB()",
    "kind": "Method",
    "detail": "Function (frgba .)",
    "insertText": "fB(float)((uiB6 << 2) + (uiB6 >> 4))"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (ColorFloatRGBA frgba =* this ;)",
    "insertText": "if(frgba.fR < 0.0f)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (frgba . fR = 0 . 0 f ; })",
    "insertText": "if(frgba.fR > 1.0f)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (frgba . fR = 1 . 0 f ; })",
    "insertText": "if(frgba.fG < 0.0f)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (frgba . fG = 0 . 0 f ; })",
    "insertText": "if(frgba.fG > 1.0f)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (frgba . fG = 1 . 0 f ; })",
    "insertText": "if(frgba.fB < 0.0f)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (frgba . fB = 0 . 0 f ; })",
    "insertText": "if(frgba.fB > 1.0f)"
  },
  {
    "label": "ClampRGBA()",
    "kind": "Method",
    "detail": "Function (frgba . fB = 1 . 0 f ; } return frgba ; } ColorFloatRGBA)",
    "insertText": "ClampRGBA(void)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (frgba . fB = 1 . 0 f ; })",
    "insertText": "if(frgba.fA < 0.0f)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (frgba . fA = 0 . 0 f ; })",
    "insertText": "if(frgba.fA > 1.0f)"
  },
  {
    "label": "IntRed()",
    "kind": "Method",
    "detail": "Function (frgba . fA = 1 . 0 f ; } return frgba ; } int)",
    "insertText": "IntRed(float a_fScale)"
  },
  {
    "label": "IntGreen()",
    "kind": "Method",
    "detail": "Function (} int)",
    "insertText": "IntGreen(float a_fScale)"
  },
  {
    "label": "IntBlue()",
    "kind": "Method",
    "detail": "Function (} int)",
    "insertText": "IntBlue(float a_fScale)"
  },
  {
    "label": "IntAlpha()",
    "kind": "Method",
    "detail": "Function (} int)",
    "insertText": "IntAlpha(float a_fScale)"
  }
]