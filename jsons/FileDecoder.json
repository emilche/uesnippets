[
  {
    "label": "FAudioFileReader",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAudioFileReader"
  },
  {
    "label": "FAudioFileReader()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" DSP / Dsp . h \" # include \" SampleBuffer . h \" # include \" AudioDecompress . h \" # include \" GenericPlatform / GenericPlatformFile . h \" # include \" Interfaces / IAudioFormat . h \" class FAudioFileReader { public :)",
    "insertText": "FAudioFileReader(const FString& InPath)"
  },
  {
    "label": "GetFileInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetFileInfo(FSoundQualityInfo& OutInfo)"
  },
  {
    "label": "PopAudio()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PopAudio(float* OutAudio, int32 NumSamples)"
  },
  {
    "label": "FAudioFileReader()",
    "kind": "Method",
    "detail": "Function (private :)",
    "insertText": "FAudioFileReader()"
  },
  {
    "label": "GetNewDecompressorForFile()",
    "kind": "Method",
    "detail": "Function (TUniquePtr<IFileHandle> FileHandle ; TUniquePtr<ICompressedAudioInfo> Decompressor ; TArray<uint8> CompressedFile ; TArray<Audio::DefaultUSoundWaveSampleType> DecompressionBuffer ; FSoundQualityInfo QualityInfo ; ICompressedAudioInfo*)",
    "insertText": "GetNewDecompressorForFile(const FString& InPath)"
  }
]