[
  {
    "label": "FAssetCompileData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAssetCompileData"
  },
  {
    "label": "FAsyncCompilationNotification",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAsyncCompilationNotification"
  },
  {
    "label": "FDistanceFieldVolumeData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDistanceFieldVolumeData"
  },
  {
    "label": "UStaticMesh",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UStaticMesh"
  },
  {
    "label": "UTexture2D",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UTexture2D"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "TLockFreePointerListLIFO",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TLockFreePointerListLIFO"
  },
  {
    "label": "FLandscapeTextureAtlas",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLandscapeTextureAtlas"
  },
  {
    "label": "ESubAllocType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ESubAllocType"
  },
  {
    "label": "FSubAllocator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSubAllocator"
  },
  {
    "label": "FSubAllocInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSubAllocInfo"
  },
  {
    "label": "FAllocation",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAllocation"
  },
  {
    "label": "FPendingUpload",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPendingUpload"
  },
  {
    "label": "FSparseDistanceFieldMip",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSparseDistanceFieldMip"
  },
  {
    "label": "FStaticMeshRenderData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStaticMeshRenderData"
  },
  {
    "label": "FAsyncDistanceFieldTask",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAsyncDistanceFieldTask"
  },
  {
    "label": "FAsyncDistanceFieldTaskWorker",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAsyncDistanceFieldTaskWorker"
  },
  {
    "label": "FDistanceFieldAsyncQueue",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDistanceFieldAsyncQueue"
  },
  {
    "label": "FQueuedThreadPool",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FQueuedThreadPool"
  },
  {
    "label": "IMeshUtilities",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IMeshUtilities"
  },
  {
    "label": "FLandscapeTextureAtlas()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / LockFreeList . h \" # include \" ProfilingDebugging / ResourceSize . h \" # include \" Engine / EngineTypes . h \" # include \" UObject / GCObject . h \" # include \" RenderResource . h \" # include \" RenderDeferredCleanup . h \" # include \" TextureLayout3d . h \" # include \" IAssetCompilingManager . h \" # include \" Templates / UniquePtr . h \" # include \" DerivedMeshDataTaskUtils . h \" # include \" Async / AsyncWork . h \" # if WITH_EDITOR # include \" MeshUtilities . h \" # endif struct FAssetCompileData ; class FAsyncCompilationNotification ; class FDistanceFieldVolumeData ; class UStaticMesh ; class UTexture2D ; template<class T> class TLockFreePointerListLIFO ; namespace DistanceField { int32 MeshDistanceFieldObjectBorder = 1 ; int32 UniqueDataBrickSize = 7 ; int32 BrickSize = 8 ; int32 BandSizeInVoxels = 4 ; int32 NumMips = 3 ; uint32 InvalidBrickIndex = 0 xFFFFFFFF ; EPixelFormat DistanceFieldFormat = PF_G8 ; uint32 MaxIndirectionDimension = 1 0 2 4 ; } ; class FLandscapeTextureAtlas : public FRenderResource { public : enum ESubAllocType { SAT_Height,SAT_Visibility,SAT_Num } ;)",
    "insertText": "FLandscapeTextureAtlas(ESubAllocType InSubAllocType)"
  },
  {
    "label": "InitializeIfNeeded()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeIfNeeded()"
  },
  {
    "label": "AddAllocation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddAllocation(UTexture2D* Texture, uint32 VisibilityChannel = 0)"
  },
  {
    "label": "RemoveAllocation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveAllocation(UTexture2D* Texture)"
  },
  {
    "label": "UpdateAllocations()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateAllocations(FRDGBuilder& GraphBuilder, ERHIFeatureLevel::Type InFeatureLevel)"
  },
  {
    "label": "GetAllocationHandle()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetAllocationHandle(UTexture2D* Texture)"
  },
  {
    "label": "GetAllocationScaleBias()",
    "kind": "Method",
    "detail": "Function (FVector4f)",
    "insertText": "GetAllocationScaleBias(uint32 Handle)"
  },
  {
    "label": "HasAtlasTexture()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasAtlasTexture()"
  },
  {
    "label": "GetAtlasTexture()",
    "kind": "Method",
    "detail": "Function (} FRDGTexture*)",
    "insertText": "GetAtlasTexture(FRDGBuilder& GraphBuilder)"
  },
  {
    "label": "GetSizeX()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetSizeX()"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (class FSubAllocator { public : void)",
    "insertText": "Init(uint32 InTileSize, uint32 InBorderSize, uint32 InDimInTiles)"
  },
  {
    "label": "Alloc()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "Alloc(uint32 SizeX, uint32 SizeY)"
  },
  {
    "label": "Free()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Free(uint32 Handle)"
  },
  {
    "label": "GetScaleBias()",
    "kind": "Method",
    "detail": "Function (FVector4f)",
    "insertText": "GetScaleBias(uint32 Handle)"
  },
  {
    "label": "GetStartOffset()",
    "kind": "Method",
    "detail": "Function (FIntPoint)",
    "insertText": "GetStartOffset(uint32 Handle)"
  },
  {
    "label": "FAllocation()",
    "kind": "Method",
    "detail": "Function (private : struct FSubAllocInfo { uint32 Level ; uint32 QuadIdx ; FVector4f UVScaleBias ; } ; uint32 TileSize ; uint32 BorderSize ; uint32 TileSizeWithBorder ; uint32 DimInTiles ; uint32 DimInTilesShift ; uint32 DimInTilesMask ; uint32 DimInTexels ; uint32 MaxNumTiles ; float TexelSize ; float TileScale ; TBitArray<> MarkerQuadTree ; TArray<uint32,TInlineAllocator<8>> LevelOffsets ; TSparseArray<FSubAllocInfo> SubAllocInfos ; class FLandscapeTextureAtlas ; } ; struct FAllocation { UTexture2D* SourceTexture ; uint32 Handle ; uint32 VisibilityChannel : 2 ; uint32 RefCount : 3 0 ;)",
    "insertText": "FAllocation()"
  },
  {
    "label": "FAllocation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FAllocation(UTexture2D* InTexture, uint32 InVisibilityChannel = 0)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "operator(const FAllocation& Other)"
  },
  {
    "label": "FPendingUpload()",
    "kind": "Method",
    "detail": "Function (} } ; struct FPendingUpload { FRHITexture* SourceTexture ; FIntVector SizesAndMipBias ; uint32 VisibilityChannel : 2 ; uint32 Handle : 3 0 ;)",
    "insertText": "FPendingUpload(UTexture2D* Texture, uint32 SizeX, uint32 SizeY, uint32 MipBias, uint32 InHandle, uint32 Channel)"
  },
  {
    "label": "SetShaderParameters()",
    "kind": "Method",
    "detail": "Function (FIntPoint)",
    "insertText": "SetShaderParameters(void* ParamsPtr, const FLandscapeTextureAtlas& Atlas, FRDGTextureUAV* AtlasUAV)"
  },
  {
    "label": "SetCommonShaderParameters()",
    "kind": "Method",
    "detail": "Function (private : FIntPoint)",
    "insertText": "SetCommonShaderParameters(void* ParamsPtr, const FLandscapeTextureAtlas& Atlas)"
  },
  {
    "label": "FSparseDistanceFieldMip()",
    "kind": "Method",
    "detail": "Function (} ; FSubAllocator AddrSpaceAllocator ; TSet<FAllocation> PendingAllocations ; TSet<FAllocation> FailedAllocations ; TSet<FAllocation> CurrentAllocations ; TArray<UTexture2D*> PendingStreamingTextures ; TRefCountPtr<IPooledRenderTarget> AtlasTextureRHI ; uint32 MaxDownSampleLevel ; uint32 Generation ; const ESubAllocType SubAllocType ; } ; TGlobalResource<FLandscapeTextureAtlas> GHeightFieldTextureAtlas ; TGlobalResource<FLandscapeTextureAtlas> GHFVisibilityTextureAtlas ; class FSparseDistanceFieldMip { public :)",
    "insertText": "FSparseDistanceFieldMip() : IndirectionDimensions(FInt32Vector::ZeroValue), NumDistanceFieldBricks(0), VolumeToVirtualUVScale(FVector3f::ZeroVector), VolumeToVirtualUVAdd(FVector3f::ZeroVector), DistanceFieldToVolumeScaleBias(FVector2f::ZeroVector), BulkOffset(0), BulkSize(0)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} FInt32Vector IndirectionDimensions ; int32 NumDistanceFieldBricks ; FVector3f VolumeToVirtualUVScale ; FVector3f VolumeToVirtualUVAdd ; FVector2f DistanceFieldToVolumeScaleBias ; uint32 BulkOffset ; uint32 BulkSize ; FArchive&)",
    "insertText": "operator(FArchive& Ar,FSparseDistanceFieldMip& Mip)"
  },
  {
    "label": "GetResourceSizeBytes()",
    "kind": "Method",
    "detail": "Function (Ar<<Mip . IndirectionDimensions<<Mip . NumDistanceFieldBricks<<Mip . VolumeToVirtualUVScale<<Mip . VolumeToVirtualUVAdd<<Mip . DistanceFieldToVolumeScaleBias<<Mip . BulkOffset<<Mip . BulkSize ; return Ar ; } SIZE_T)",
    "insertText": "GetResourceSizeBytes()"
  },
  {
    "label": "GetResourceSizeEx()",
    "kind": "Method",
    "detail": "Function (FResourceSizeEx ResSize ;)",
    "insertText": "GetResourceSizeEx(ResSize)"
  },
  {
    "label": "GetResourceSizeEx()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "GetResourceSizeEx(FResourceSizeEx& CumulativeResourceSize)"
  },
  {
    "label": "AddDedicatedSystemMemoryBytes()",
    "kind": "Method",
    "detail": "Function (CumulativeResourceSize .)",
    "insertText": "AddDedicatedSystemMemoryBytes(sizeof(*this))"
  },
  {
    "label": "FDistanceFieldVolumeData()",
    "kind": "Method",
    "detail": "Function (} } ; class FDistanceFieldVolumeData : public FDeferredCleanupInterface { public : FBox3f LocalSpaceMeshBounds ; bool bMostlyTwoSided ; bool bAsyncBuilding ; TStaticArray<FSparseDistanceFieldMip,DistanceField::NumMips> Mips ; TArray<uint8> AlwaysLoadedMip ; FByteBulkData StreamableMips ; uint64 Id ; FName AssetName ;)",
    "insertText": "FDistanceFieldVolumeData()"
  },
  {
    "label": "GetResourceSizeEx()",
    "kind": "Method",
    "detail": "Function (Mip .)",
    "insertText": "GetResourceSizeEx(CumulativeResourceSize)"
  },
  {
    "label": "AddDedicatedSystemMemoryBytes()",
    "kind": "Method",
    "detail": "Function (} CumulativeResourceSize .)",
    "insertText": "AddDedicatedSystemMemoryBytes(AlwaysLoadedMip.GetAllocatedSize())"
  },
  {
    "label": "IsValid()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsValid()"
  },
  {
    "label": "CacheDerivedData()",
    "kind": "Method",
    "detail": "Function (} # if WITH_EDITORONLY_DATA void)",
    "insertText": "CacheDerivedData(const FString& InStaticMeshDerivedDataKey, const ITargetPlatform* TargetPlatform, UStaticMesh* Mesh, class FStaticMeshRenderData& RenderData, UStaticMesh* GenerateSource, float DistanceFieldResolutionScale, bool bGenerateDistanceFieldAsIfTwoSided)"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (# endif void)",
    "insertText": "Serialize(FArchive& Ar, UObject* Owner)"
  },
  {
    "label": "GetId()",
    "kind": "Method",
    "detail": "Function (uint64)",
    "insertText": "GetId()"
  },
  {
    "label": "GetStatId()",
    "kind": "Method",
    "detail": "Function (} TStatId)",
    "insertText": "GetStatId()"
  },
  {
    "label": "DoWork()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "DoWork()"
  },
  {
    "label": "FAsyncDistanceFieldTask()",
    "kind": "Method",
    "detail": "Function (private : FAsyncDistanceFieldTask& Task ; } ; class FAsyncDistanceFieldTask { public :)",
    "insertText": "FAsyncDistanceFieldTask()"
  },
  {
    "label": "FDistanceFieldAsyncQueue()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR TArray<FSignedDistanceFieldBuildSectionData> SectionData ; # endif FSourceMeshDataForDerivedDataTask SourceMeshData ; UStaticMesh* StaticMesh ; UStaticMesh* GenerateSource ; float DistanceFieldResolutionScale ; bool bGenerateDistanceFieldAsIfTwoSided ; const ITargetPlatform* TargetPlatform ; FString DDCKey ; FDistanceFieldVolumeData* GeneratedVolumeData ; TUniquePtr<FAsyncTask<FAsyncDistanceFieldTaskWorker>> AsyncTask = nullptr ; } ; class FDistanceFieldAsyncQueue : IAssetCompilingManager { public :)",
    "insertText": "FDistanceFieldAsyncQueue()"
  },
  {
    "label": "AddTask()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddTask(FAsyncDistanceFieldTask* Task)"
  },
  {
    "label": "CancelBuild()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CancelBuild(UStaticMesh* StaticMesh)"
  },
  {
    "label": "CancelBuilds()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CancelBuilds(const TSet<UStaticMesh*>& InStaticMeshes)"
  },
  {
    "label": "CancelAllOutstandingBuilds()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CancelAllOutstandingBuilds()"
  },
  {
    "label": "BlockUntilBuildComplete()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BlockUntilBuildComplete(UStaticMesh* StaticMesh, bool bWarnIfBlocked)"
  },
  {
    "label": "BlockUntilAllBuildsComplete()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BlockUntilAllBuildsComplete()"
  },
  {
    "label": "ProcessAsyncTasks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessAsyncTasks(bool bLimitExecutionTime = false)"
  },
  {
    "label": "Shutdown()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Shutdown()"
  },
  {
    "label": "GetNumOutstandingTasks()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetNumOutstandingTasks()"
  },
  {
    "label": "Lock()",
    "kind": "Method",
    "detail": "Function (FScopeLock)",
    "insertText": "Lock(&CriticalSection)"
  },
  {
    "label": "GetStaticAssetTypeName()",
    "kind": "Method",
    "detail": "Function (} FName)",
    "insertText": "GetStaticAssetTypeName()"
  },
  {
    "label": "GetAssetTypeName()",
    "kind": "Method",
    "detail": "Function (private : FName)",
    "insertText": "GetAssetTypeName()"
  },
  {
    "label": "GetAssetNameFormat()",
    "kind": "Method",
    "detail": "Function (FTextFormat)",
    "insertText": "GetAssetNameFormat()"
  },
  {
    "label": "GetDependentTypeNames()",
    "kind": "Method",
    "detail": "Function (TArrayView<FName>)",
    "insertText": "GetDependentTypeNames()"
  },
  {
    "label": "GetNumRemainingAssets()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetNumRemainingAssets()"
  },
  {
    "label": "FinishAllCompilation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FinishAllCompilation()"
  },
  {
    "label": "ProcessPendingTasks()",
    "kind": "Method",
    "detail": "Function (FAsyncDistanceFieldTaskWorker ; void)",
    "insertText": "ProcessPendingTasks()"
  },
  {
    "label": "Build()",
    "kind": "Method",
    "detail": "Function (TUniquePtr<FQueuedThreadPool> ThreadPool ; void)",
    "insertText": "Build(FAsyncDistanceFieldTask* Task, class FQueuedThreadPool& ThreadPool)"
  },
  {
    "label": "RescheduleBackgroundTask()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RescheduleBackgroundTask(FAsyncDistanceFieldTask* InTask, EQueuedWorkPriority InPriority)"
  },
  {
    "label": "StartBackgroundTask()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StartBackgroundTask(FAsyncDistanceFieldTask* Task)"
  },
  {
    "label": "CancelAndDeleteTaskByPredicate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CancelAndDeleteTaskByPredicate(TFunctionRef<bool(FAsyncDistanceFieldTask*)> ShouldCancelPredicate)"
  },
  {
    "label": "CancelAndDeleteTask()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CancelAndDeleteTask(const TSet<FAsyncDistanceFieldTask*>& Tasks)"
  },
  {
    "label": "FinishCompilationForObjects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FinishCompilationForObjects(TArrayView<UObject* const> InObjects)"
  },
  {
    "label": "IsTaskInvalid()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsTaskInvalid(FAsyncDistanceFieldTask* Task)"
  },
  {
    "label": "OnPostReachabilityAnalysis()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPostReachabilityAnalysis()"
  },
  {
    "label": "OnAssetPostCompile()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAssetPostCompile(const TArray<FAssetCompileData>& CompiledAssets)"
  },
  {
    "label": "BuildDistanceFieldDerivedDataKey()",
    "kind": "Method",
    "detail": "Function (TSet<FAsyncDistanceFieldTask*> ReferencedTasks ; TSet<FAsyncDistanceFieldTask*> PendingTasks ; TSet<FAsyncDistanceFieldTask*> CompletedTasks ; FDelegateHandle PostReachabilityAnalysisHandle ; std::atomic<class IMeshUtilities*> MeshUtilities ; FCriticalSection CriticalSection ; TUniquePtr<FAsyncCompilationNotification> Notification ; } ; FDistanceFieldAsyncQueue* GDistanceFieldAsyncQueue ; FString)",
    "insertText": "BuildDistanceFieldDerivedDataKey(const FString& InMeshKey)"
  }
]