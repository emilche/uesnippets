[
  {
    "label": "UTextureRenderTarget2D",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UTextureRenderTarget2D"
  },
  {
    "label": "FLandscapeBrushParameters",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLandscapeBrushParameters"
  },
  {
    "label": "ALandscapeBlueprintBrushBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ALandscapeBlueprintBrushBase"
  },
  {
    "label": "ALandscape",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ALandscape"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" GameFramework / Actor . h \" # include \" LandscapeEditTypes . h \" # include \" LandscapeEditLayerRenderer . h \" # include \" LandscapeBlueprintBrushBase . generated . h \" class UTextureRenderTarget2D ;)",
    "insertText": "USTRUCT(BlueprintType)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() FLandscapeBrushParameters()"
  },
  {
    "label": "FLandscapeBrushParameters()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FLandscapeBrushParameters(bool bInIsHeightmapMerge, const FTransform& InRenderAreaWorldTransform, const FIntPoint& InRenderAreaSize, UTextureRenderTarget2D* InCombinedResult, const FName& InWeightmapLayerName = FName())"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "UCLASS(Abstract, NotBlueprintable, MinimalAPI)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() protected: UPROPERTY(Category = \"Settings\", EditAnywhere, BlueprintReadWrite)"
  },
  {
    "label": "FIntPoint()",
    "kind": "Method",
    "detail": "Function (uint32 LastRequestLayersContentUpdateFrameNumber ; FTransform CurrentRenderAreaWorldTransform ; FIntPoint CurrentRenderAreaSize =)",
    "insertText": "FIntPoint(MAX_int32, MAX_int32)"
  },
  {
    "label": "RenderLayer_Native()",
    "kind": "Method",
    "detail": "Function (UTextureRenderTarget2D*)",
    "insertText": "RenderLayer_Native(const FLandscapeBrushParameters& InParameters)"
  },
  {
    "label": "Initialize_Native()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Initialize_Native(const FTransform& InLandscapeTransform, const FIntPoint& InLandscapeSize, const FIntPoint& InLandscapeRenderTargetSize)"
  },
  {
    "label": "SetCanAffectHeightmap()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCanAffectHeightmap(bool bInCanAffectHeightmap)"
  },
  {
    "label": "SetCanAffectWeightmap()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCanAffectWeightmap(bool bInCanAffectWeightmap)"
  },
  {
    "label": "SetCanAffectVisibilityLayer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCanAffectVisibilityLayer(bool bInCanAffectVisibilityLayer)"
  },
  {
    "label": "GetRendererStateInfo()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR LANDSCAPE_EDIT_LAYERS_BATCHED_MERGE_EXPERIMENTAL void)",
    "insertText": "GetRendererStateInfo(const ULandscapeInfo* InLandscapeInfo, UE::Landscape::EditLayers::FEditLayerTargetTypeState& OutSupportedTargetTypeState, UE::Landscape::EditLayers::FEditLayerTargetTypeState& OutEnabledTargetTypeState, TArray<TSet<FName>>& OutRenderGroups)"
  },
  {
    "label": "GetRenderItems()",
    "kind": "Method",
    "detail": "Function (LANDSCAPE_EDIT_LAYERS_BATCHED_MERGE_EXPERIMENTAL TArray<UE::Landscape::EditLayers::FEditLayerRenderItem>)",
    "insertText": "GetRenderItems(const ULandscapeInfo* InLandscapeInfo)"
  },
  {
    "label": "RenderLayer()",
    "kind": "Method",
    "detail": "Function (LANDSCAPE_EDIT_LAYERS_BATCHED_MERGE_EXPERIMENTAL void)",
    "insertText": "RenderLayer(ILandscapeEditLayerRenderer::FRenderParams& InRenderParams)"
  },
  {
    "label": "GetEditLayerRendererDebugName()",
    "kind": "Method",
    "detail": "Function (LANDSCAPE_EDIT_LAYERS_BATCHED_MERGE_EXPERIMENTAL FString)",
    "insertText": "GetEditLayerRendererDebugName()"
  },
  {
    "label": "GetEditLayerRendererStates()",
    "kind": "Method",
    "detail": "Function (TArray<UE::Landscape::EditLayers::FEditLayerRendererState>)",
    "insertText": "GetEditLayerRendererStates(const ULandscapeInfo* InLandscapeInfo, bool bInSkipBrush)"
  },
  {
    "label": "Execute()",
    "kind": "Method",
    "detail": "Function (UTextureRenderTarget2D*)",
    "insertText": "Execute(const FLandscapeBrushParameters& InParameters)"
  },
  {
    "label": "CheckForErrors()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CheckForErrors()"
  },
  {
    "label": "GetRenderDependencies()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetRenderDependencies(TSet<UObject*>& OutDependencies)"
  },
  {
    "label": "SetOwningLandscape()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetOwningLandscape(class ALandscape* InOwningLandscape)"
  },
  {
    "label": "GetOwningLandscape()",
    "kind": "Method",
    "detail": "Function (class ALandscape*)",
    "insertText": "GetOwningLandscape()"
  },
  {
    "label": "CanAffectHeightmap()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanAffectHeightmap()"
  },
  {
    "label": "AffectsHeightmap()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AffectsHeightmap()"
  },
  {
    "label": "AffectsWeightmap()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "AffectsWeightmap()"
  },
  {
    "label": "AffectsWeightmapLayer()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "AffectsWeightmapLayer(const FName& InLayerName)"
  },
  {
    "label": "AffectsVisibilityLayer()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AffectsVisibilityLayer()"
  },
  {
    "label": "IsVisible()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsVisible()"
  },
  {
    "label": "SetIsVisible()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetIsVisible(bool bInIsVisible)"
  },
  {
    "label": "ShouldTickIfViewportsOnly()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldTickIfViewportsOnly()"
  },
  {
    "label": "Tick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Tick(float DeltaSeconds)"
  },
  {
    "label": "PostEditMove()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostEditMove(bool bFinished)"
  },
  {
    "label": "PostEditChangeProperty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostEditChangeProperty(FPropertyChangedEvent& PropertyChangedEvent)"
  },
  {
    "label": "Destroyed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Destroyed()"
  },
  {
    "label": "PushDeferredLayersContentUpdate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PushDeferredLayersContentUpdate()"
  },
  {
    "label": "CanChangeIsSpatiallyLoadedFlag()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanChangeIsSpatiallyLoadedFlag()"
  }
]