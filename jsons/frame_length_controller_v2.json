[
  {
    "label": "FrameLengthControllerV2",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FrameLengthControllerV2"
  },
  {
    "label": "FrameLengthControllerV2()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_AUDIO_CODING_AUDIO_NETWORK_ADAPTOR_FRAME_LENGTH_CONTROLLER_V2_H_ # define MODULES_AUDIO_CODING_AUDIO_NETWORK_ADAPTOR_FRAME_LENGTH_CONTROLLER_V2_H_ # include<vector> # include \" absl / types / optional . h \" # include \" modules / audio_coding / audio_network_adaptor / controller . h \" # include \" modules / audio_coding / audio_network_adaptor / include / audio_network_adaptor . h \" namespace webrtc { class FrameLengthControllerV2 final : public Controller { public :)",
    "insertText": "FrameLengthControllerV2(rtc::ArrayView<const int> encoder_frame_lengths_ms, int min_payload_bitrate_bps, bool use_slow_adaptation)"
  },
  {
    "label": "UpdateNetworkMetrics()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateNetworkMetrics(const NetworkMetrics& network_metrics)"
  },
  {
    "label": "MakeDecision()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MakeDecision(AudioEncoderRuntimeConfig* config)"
  }
]