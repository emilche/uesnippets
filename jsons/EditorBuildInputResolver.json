[
  {
    "label": "FEditorBuildInputResolver",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEditorBuildInputResolver"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" DerivedDataBuildInputResolver . h \" # if WITH_EDITOR namespace UE::DerivedData { class FEditorBuildInputResolver : public IBuildInputResolver { public : FEditorBuildInputResolver&)",
    "insertText": "Get()"
  },
  {
    "label": "ResolveInputMeta()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResolveInputMeta(const FBuildDefinition& Definition, IRequestOwner& Owner, FOnBuildInputMetaResolved&& OnResolved)"
  },
  {
    "label": "ResolveInputData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResolveInputData(const FBuildDefinition& Definition, IRequestOwner& Owner, FOnBuildInputDataResolved&& OnResolved, FBuildInputFilter&& Filter = FBuildInputFilter())"
  },
  {
    "label": "ResolveInputData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResolveInputData(const FBuildAction& Action, IRequestOwner& Owner, FOnBuildInputDataResolved&& OnResolved, FBuildInputFilter&& Filter = FBuildInputFilter())"
  }
]