[
  {
    "label": "SUndoHistoryTableRow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SUndoHistoryTableRow"
  },
  {
    "label": "DECLARE_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Editor . h \" # include \" Misc / Attribute . h \" # include \" Widgets / SNullWidget . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Styling / SlateColor . h \" # include \" Widgets / SWidget . h \" # include \" Layout / Margin . h \" # include \" Widgets / Views / STableViewBase . h \" # include \" Widgets / Layout / SBox . h \" # include \" Widgets / Views / STableRow . h \" # include \" SlateOptMacros . h \" # include \" Widgets / Text / STextBlock . h \" # include \" Editor / Transactor . h \" # include \" Widgets / Views / SListView . h \" # include \" Widgets / Views / SExpanderArrow . h \" # include \" Widgets / Layout / SExpandableArea . h \" # include \" Styling / AppStyle . h \" # include \" SPositiveActionButton . h \" # include \" Widgets / Views / STreeView . h \" # include \" Widgets / Input / SButton . h \" # include \" SNegativeActionButton . h \" # define LOCTEXT_NAMESPACE \" SUndoHistoryTableRow \")",
    "insertText": "DECLARE_DELEGATE_OneParam(FOnGotoTransactionClicked, const FGuid&) DECLARE_DELEGATE_OneParam(FOnUndoBarrierButtonClicked, int32)"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "SLATE_BEGIN_ARGS(SUndoHistoryTableRow)"
  },
  {
    "label": "SLATE_ATTRIBUTE()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_ATTRIBUTE(bool, IsApplied) SLATE_ATTRIBUTE(bool, IsCurrentUndoBarrier) SLATE_ATTRIBUTE(bool, IsLastTransactionIndex) SLATE_ARGUMENT(int32, QueueIndex) SLATE_ARGUMENT(const FTransaction*, Transaction) SLATE_EVENT(FOnGotoTransactionClicked, OnGotoTransactionClicked) SLATE_EVENT(FOnUndoBarrierButtonClicked, OnUndoBarrierButtonClicked) SLATE_END_ARGS() public: void Construct( const FArguments& InArgs, const TSharedRef<STableViewBase>& InOwnerTableView)"
  },
  {
    "label": "FArguments()",
    "kind": "Method",
    "detail": "Function (IsApplied = InArgs . _IsApplied ; IsCurrentUndoBarrier = InArgs . _IsCurrentUndoBarrier ; IsLastTransactionIndex = InArgs . _IsLastTransactionIndex ; QueueIndex = InArgs . _QueueIndex ; OnGotoTransactionClicked = InArgs . _OnGotoTransactionClicked ; OnUndoBarrierButtonClicked = InArgs . _OnUndoBarrierButtonClicked ; FSuperRowType::FArguments Args =)",
    "insertText": "FArguments() .Style(&FAppStyle::Get().GetWidgetStyle<FTableRowStyle>(\"SceneOutliner.TableViewRow\"))"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (UObject* ContextObject = nullptr ;)",
    "insertText": "if(InArgs._Transaction)"
  },
  {
    "label": "GetId()",
    "kind": "Method",
    "detail": "Function (TransactionId = InArgs . _Transaction ->)",
    "insertText": "GetId()"
  },
  {
    "label": "GetContext()",
    "kind": "Method",
    "detail": "Function (ContextObject = InArgs . _Transaction ->)",
    "insertText": "GetContext()"
  },
  {
    "label": "GetTitle()",
    "kind": "Method",
    "detail": "Function (Title = InArgs . _Transaction ->)",
    "insertText": "GetTitle()"
  },
  {
    "label": "GetDescription()",
    "kind": "Method",
    "detail": "Function (Description = InArgs . _Transaction ->)",
    "insertText": "GetDescription()"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "if(ContextObject != nullptr)"
  },
  {
    "label": "Format()",
    "kind": "Method",
    "detail": "Function (Title =)",
    "insertText": "Format(LOCTEXT(\"UndoHistoryTableRowTitleF\", \"{0} [{1}]\"), InArgs._Transaction->GetTitle(), FText::FromString(ContextObject->GetFName().ToString()))"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (} SMultiColumnTableRow<TSharedPtr<int32>)",
    "insertText": "Construct(Args, InOwnerTableView)"
  },
  {
    "label": "GenerateWidgetForColumn()",
    "kind": "Method",
    "detail": "Function (} public : BEGIN_SLATE_FUNCTION_BUILD_OPTIMIZATION TSharedRef<SWidget>)",
    "insertText": "GenerateWidgetForColumn(const FName& ColumnName)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (} else)",
    "insertText": "if(ColumnName == \"Title\")"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (} else)",
    "insertText": "if(ColumnName == \"UndoBarrierButton\")"
  },
  {
    "label": "HandleTitleTextColorAndOpacity()",
    "kind": "Method",
    "detail": "Function (} return SNullWidget::NullWidget ; } END_SLATE_FUNCTION_BUILD_OPTIMIZATION private : FSlateColor)",
    "insertText": "HandleTitleTextColorAndOpacity()"
  },
  {
    "label": "UseSubduedForeground()",
    "kind": "Method",
    "detail": "Function (} return)",
    "insertText": "UseSubduedForeground()"
  }
]