[
  {
    "label": "UMaterialInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialInterface"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "does",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "does"
  },
  {
    "label": "UGizmoElementBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UGizmoElementBase"
  },
  {
    "label": "FRenderTraversalState",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRenderTraversalState"
  },
  {
    "label": "FLineTraceTraversalState",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLineTraceTraversalState"
  },
  {
    "label": "FInputRayHit()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FInputRayHit()"
  },
  {
    "label": "SetVisibleState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetVisibleState(bool bVisible)"
  },
  {
    "label": "SetHittableState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetHittableState(bool bHittable)"
  },
  {
    "label": "SetEnabled()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetEnabled(bool bInEnabled)"
  },
  {
    "label": "SetEnabledForPerspectiveProjection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetEnabledForPerspectiveProjection(bool bInEnabledForPerspectiveProjection)"
  },
  {
    "label": "GetEnabledForPerspectiveProjection()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetEnabledForPerspectiveProjection()"
  },
  {
    "label": "SetEnabledInOrthographicProjection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetEnabledInOrthographicProjection(bool bInEnabledForOrthographicProjection)"
  },
  {
    "label": "GetEnabledInOrthographicProjection()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetEnabledInOrthographicProjection()"
  },
  {
    "label": "SetEnabledForDefaultState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetEnabledForDefaultState(bool bInEnabledForDefaultState)"
  },
  {
    "label": "GetEnabledForDefaultState()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetEnabledForDefaultState()"
  },
  {
    "label": "SetEnabledForHoveringState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetEnabledForHoveringState(bool bInEnabledForHoveringState)"
  },
  {
    "label": "GetEnabledForHoveringState()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetEnabledForHoveringState()"
  },
  {
    "label": "SetEnabledForInteractingState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetEnabledForInteractingState(bool bInEnabledForInteractingState)"
  },
  {
    "label": "GetEnabledForInteractingState()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetEnabledForInteractingState()"
  },
  {
    "label": "SetPartIdentifier()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPartIdentifier(uint32 InPartId)"
  },
  {
    "label": "GetPartIdentifier()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetPartIdentifier()"
  },
  {
    "label": "SetElementState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetElementState(EGizmoElementState InElementState)"
  },
  {
    "label": "SetElementInteractionState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetElementInteractionState(EGizmoElementInteractionState InInteractionState)"
  },
  {
    "label": "UpdatePartVisibleState()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UpdatePartVisibleState(bool bVisible, uint32 InPartIdentifier)"
  },
  {
    "label": "UpdatePartHittableState()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UpdatePartHittableState(bool bHittable, uint32 InPartIdentifier)"
  },
  {
    "label": "UpdatePartInteractionState()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UpdatePartInteractionState(EGizmoElementInteractionState InInteractionState, uint32 InPartIdentifier)"
  },
  {
    "label": "SetViewDependentType()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetViewDependentType(EGizmoElementViewDependentType ViewDependentType)"
  },
  {
    "label": "SetViewDependentAngleTol()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetViewDependentAngleTol(float InMaxAngleTol)"
  },
  {
    "label": "SetViewDependentAxis()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetViewDependentAxis(FVector InAxis)"
  },
  {
    "label": "SetViewAlignType()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetViewAlignType(EGizmoElementViewAlignType InViewAlignType)"
  },
  {
    "label": "SetViewAlignAxis()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetViewAlignAxis(FVector InAxis)"
  },
  {
    "label": "SetViewAlignNormal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetViewAlignNormal(FVector InAxis)"
  },
  {
    "label": "SetViewAlignAxialAngleTol()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetViewAlignAxialAngleTol(float InMaxAngleTol)"
  },
  {
    "label": "SetPixelHitDistanceThreshold()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPixelHitDistanceThreshold(float InPixelHitDistanceThreshold)"
  },
  {
    "label": "SetMaterial()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetMaterial(TWeakObjectPtr<UMaterialInterface> InMaterial, bool InOverridesChildState = false)"
  },
  {
    "label": "ClearMaterial()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearMaterial()"
  },
  {
    "label": "SetHoverMaterial()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetHoverMaterial(TWeakObjectPtr<UMaterialInterface> InHoverMaterial, bool InOverridesChildState = false)"
  },
  {
    "label": "ClearHoverMaterial()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearHoverMaterial()"
  },
  {
    "label": "SetInteractMaterial()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetInteractMaterial(TWeakObjectPtr<UMaterialInterface> InInteractMaterial, bool InOverridesChildState = false)"
  },
  {
    "label": "ClearInteractMaterial()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearInteractMaterial()"
  },
  {
    "label": "SetVertexColor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetVertexColor(FLinearColor InVertexColor, bool InOverridesChildState = false)"
  },
  {
    "label": "ClearVertexColor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearVertexColor()"
  },
  {
    "label": "SetHoverVertexColor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetHoverVertexColor(FLinearColor InVertexColor, bool InOverridesChildState = false)"
  },
  {
    "label": "ClearHoverVertexColor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearHoverVertexColor()"
  },
  {
    "label": "SetInteractVertexColor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetInteractVertexColor(FLinearColor InVertexColor, bool InOverridesChildState = false)"
  },
  {
    "label": "ClearInteractVertexColor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearInteractVertexColor()"
  },
  {
    "label": "UpdateRenderState()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UpdateRenderState(IToolsContextRenderAPI* RenderAPI, const FVector& InLocalCenter, FRenderTraversalState& InOutRenderState)"
  },
  {
    "label": "UpdateRenderState()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UpdateRenderState(IToolsContextRenderAPI* RenderAPI, const FVector& InLocalCenter, FRenderTraversalState& InOutRenderState, bool& bOutHasAlignRot, FQuat& OutAlignRot)"
  },
  {
    "label": "UpdateLineTraceState()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UpdateLineTraceState(const UGizmoViewContext* ViewContext, const FVector& InLocalCenter, FLineTraceTraversalState& InOutLineTraceState)"
  },
  {
    "label": "UpdateLineTraceState()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UpdateLineTraceState(const UGizmoViewContext* ViewContext, const FVector& InLocalCenter, FLineTraceTraversalState& InOutRenderState, bool& bOutHasAlignRot, FQuat& OutAlignRot)"
  }
]