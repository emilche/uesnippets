[
  {
    "label": "ISaveGameSystem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISaveGameSystem"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FGenericSaveGameSystem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGenericSaveGameSystem"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "FBaseAsyncSaveGameSystem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBaseAsyncSaveGameSystem"
  },
  {
    "label": "ISaveGameSystemModule",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISaveGameSystemModule"
  },
  {
    "label": "DoesSaveGameExistAsync()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DoesSaveGameExistAsync(const TCHAR* Name, FPlatformUserId PlatformUserId, FSaveGameAsyncExistsCallback Callback)"
  },
  {
    "label": "SaveGameAsync()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SaveGameAsync(bool bAttemptToUseUI, const TCHAR* Name, FPlatformUserId PlatformUserId, TSharedRef<const TArray<uint8>> Data, FSaveGameAsyncOpCompleteCallback Callback)"
  },
  {
    "label": "LoadGameAsync()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LoadGameAsync(bool bAttemptToUseUI, const TCHAR* Name, FPlatformUserId PlatformUserId, FSaveGameAsyncLoadCompleteCallback Callback)"
  },
  {
    "label": "DeleteGameAsync()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeleteGameAsync(bool bAttemptToUseUI, const TCHAR* Name, FPlatformUserId PlatformUserId, FSaveGameAsyncOpCompleteCallback Callback)"
  },
  {
    "label": "GetSaveGameNamesAsync()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetSaveGameNamesAsync(FPlatformUserId PlatformUserId, FSaveGameAsyncGetNamesCallback Callback)"
  },
  {
    "label": "InitAsync()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitAsync(bool bAttemptToUseUI, FPlatformUserId PlatformUserId, FSaveGameAsyncInitCompleteCallback Callback)"
  },
  {
    "label": "WaitForAsyncTask()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WaitForAsyncTask(UE::Tasks::FTask AsyncSaveTask)"
  }
]