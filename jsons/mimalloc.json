[
  {
    "label": "mi_heap_s",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "mi_heap_s"
  },
  {
    "label": "mi_heap_s",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "mi_heap_s"
  },
  {
    "label": "mi_heap_area_s",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "mi_heap_area_s"
  },
  {
    "label": "mi_option_e",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "mi_option_e"
  },
  {
    "label": "mi_ext_win32_allocators_s",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "mi_ext_win32_allocators_s"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "mi_stl_allocator",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "mi_stl_allocator"
  },
  {
    "label": "U",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "U"
  },
  {
    "label": "rebind",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "rebind"
  },
  {
    "label": "U",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "U"
  },
  {
    "label": "U",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "U"
  },
  {
    "label": "U",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "U"
  },
  {
    "label": "T1",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T1"
  },
  {
    "label": "T2",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T2"
  },
  {
    "label": "T1",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T1"
  },
  {
    "label": "T2",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T2"
  },
  {
    "label": "mi_attr_alloc_size()",
    "kind": "Method",
    "detail": "Function (mi_attr_malloc)",
    "insertText": "mi_attr_alloc_size(1)"
  },
  {
    "label": "mi_attr_alloc_size2()",
    "kind": "Method",
    "detail": "Function (mi_attr_malloc)",
    "insertText": "mi_attr_alloc_size2(1,2)"
  },
  {
    "label": "mi_attr_alloc_size()",
    "kind": "Method",
    "detail": "Function (mi_attr_noexcept)",
    "insertText": "mi_attr_alloc_size(2)"
  },
  {
    "label": "mi_attr_alloc_size()",
    "kind": "Method",
    "detail": "Function (mi_attr_noexcept)",
    "insertText": "mi_attr_alloc_size(2)"
  },
  {
    "label": "mi_attr_alloc_size()",
    "kind": "Method",
    "detail": "Function (mi_attr_malloc)",
    "insertText": "mi_attr_alloc_size(1)"
  },
  {
    "label": "mi_attr_alloc_size()",
    "kind": "Method",
    "detail": "Function (mi_attr_malloc)",
    "insertText": "mi_attr_alloc_size(1)"
  },
  {
    "label": "mi_attr_alloc_size()",
    "kind": "Method",
    "detail": "Function (mi_attr_malloc)",
    "insertText": "mi_attr_alloc_size(1)"
  },
  {
    "label": "mi_attr_alloc_size2()",
    "kind": "Method",
    "detail": "Function (mi_attr_malloc)",
    "insertText": "mi_attr_alloc_size2(1,2)"
  },
  {
    "label": "mi_attr_alloc_size2()",
    "kind": "Method",
    "detail": "Function (mi_attr_noexcept)",
    "insertText": "mi_attr_alloc_size2(2,3)"
  },
  {
    "label": "mi_attr_alloc_size()",
    "kind": "Method",
    "detail": "Function (mi_attr_noexcept)",
    "insertText": "mi_attr_alloc_size(2)"
  },
  {
    "label": "mi_register_error()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "mi_register_error(mi_error_fun* fun, void* arg)"
  },
  {
    "label": "mi_attr_alloc_size()",
    "kind": "Method",
    "detail": "Function (mi_attr_malloc)",
    "insertText": "mi_attr_alloc_size(1)"
  },
  {
    "label": "mi_attr_alloc_size()",
    "kind": "Method",
    "detail": "Function (mi_attr_malloc)",
    "insertText": "mi_attr_alloc_size(1)"
  },
  {
    "label": "mi_attr_alloc_size2()",
    "kind": "Method",
    "detail": "Function (mi_attr_malloc)",
    "insertText": "mi_attr_alloc_size2(1,2)"
  },
  {
    "label": "mi_attr_alloc_size()",
    "kind": "Method",
    "detail": "Function (mi_attr_noexcept)",
    "insertText": "mi_attr_alloc_size(2)"
  },
  {
    "label": "mi_heap_delete()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "mi_heap_delete(mi_heap_t* heap)"
  },
  {
    "label": "mi_heap_destroy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "mi_heap_destroy(mi_heap_t* heap)"
  },
  {
    "label": "mi_attr_alloc_size()",
    "kind": "Method",
    "detail": "Function (mi_attr_malloc)",
    "insertText": "mi_attr_alloc_size(2)"
  },
  {
    "label": "mi_attr_alloc_size()",
    "kind": "Method",
    "detail": "Function (mi_attr_malloc)",
    "insertText": "mi_attr_alloc_size(2)"
  },
  {
    "label": "mi_attr_alloc_size2()",
    "kind": "Method",
    "detail": "Function (mi_attr_malloc)",
    "insertText": "mi_attr_alloc_size2(2, 3)"
  },
  {
    "label": "mi_attr_alloc_size2()",
    "kind": "Method",
    "detail": "Function (mi_attr_malloc)",
    "insertText": "mi_attr_alloc_size2(2, 3)"
  },
  {
    "label": "mi_attr_alloc_size()",
    "kind": "Method",
    "detail": "Function (mi_attr_malloc)",
    "insertText": "mi_attr_alloc_size(2)"
  },
  {
    "label": "mi_attr_alloc_size()",
    "kind": "Method",
    "detail": "Function (mi_attr_noexcept)",
    "insertText": "mi_attr_alloc_size(3)"
  },
  {
    "label": "mi_attr_alloc_size2()",
    "kind": "Method",
    "detail": "Function (mi_attr_noexcept)",
    "insertText": "mi_attr_alloc_size2(3,4)"
  },
  {
    "label": "mi_attr_alloc_size()",
    "kind": "Method",
    "detail": "Function (mi_attr_noexcept)",
    "insertText": "mi_attr_alloc_size(3)"
  },
  {
    "label": "mi_attr_alloc_size()",
    "kind": "Method",
    "detail": "Function (mi_attr_malloc)",
    "insertText": "mi_attr_alloc_size(2)"
  },
  {
    "label": "mi_attr_alloc_size()",
    "kind": "Method",
    "detail": "Function (mi_attr_malloc)",
    "insertText": "mi_attr_alloc_size(2)"
  },
  {
    "label": "mi_attr_alloc_size2()",
    "kind": "Method",
    "detail": "Function (mi_attr_malloc)",
    "insertText": "mi_attr_alloc_size2(2, 3)"
  },
  {
    "label": "mi_attr_alloc_size()",
    "kind": "Method",
    "detail": "Function (mi_attr_noexcept)",
    "insertText": "mi_attr_alloc_size(3)"
  },
  {
    "label": "mi_attr_alloc_size()",
    "kind": "Method",
    "detail": "Function (mi_attr_noexcept)",
    "insertText": "mi_attr_alloc_size(2)"
  },
  {
    "label": "mi_attr_alloc_size2()",
    "kind": "Method",
    "detail": "Function (mi_attr_noexcept)",
    "insertText": "mi_attr_alloc_size2(2,3)"
  },
  {
    "label": "mi_attr_alloc_size()",
    "kind": "Method",
    "detail": "Function (mi_attr_noexcept)",
    "insertText": "mi_attr_alloc_size(2)"
  },
  {
    "label": "mi_attr_alloc_size2()",
    "kind": "Method",
    "detail": "Function (mi_attr_noexcept)",
    "insertText": "mi_attr_alloc_size2(2,3)"
  },
  {
    "label": "mi_attr_alloc_size()",
    "kind": "Method",
    "detail": "Function (mi_attr_noexcept)",
    "insertText": "mi_attr_alloc_size(3)"
  },
  {
    "label": "mi_attr_alloc_size2()",
    "kind": "Method",
    "detail": "Function (mi_attr_noexcept)",
    "insertText": "mi_attr_alloc_size2(3,4)"
  },
  {
    "label": "mi_attr_alloc_size()",
    "kind": "Method",
    "detail": "Function (mi_attr_noexcept)",
    "insertText": "mi_attr_alloc_size(3)"
  },
  {
    "label": "mi_attr_alloc_size2()",
    "kind": "Method",
    "detail": "Function (mi_attr_noexcept)",
    "insertText": "mi_attr_alloc_size2(3,4)"
  },
  {
    "label": "mi_heap_contains_block()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "mi_heap_contains_block(mi_heap_t* heap, const void* p)"
  },
  {
    "label": "mi_heap_check_owned()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "mi_heap_check_owned(mi_heap_t* heap, const void* p)"
  },
  {
    "label": "mi_check_owned()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "mi_check_owned(const void* p)"
  },
  {
    "label": "mi_heap_visit_blocks()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "mi_heap_visit_blocks(const mi_heap_t* heap, bool visit_all_blocks, mi_block_visit_fun* visitor, void* arg)"
  },
  {
    "label": "mi_option_is_enabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "mi_option_is_enabled(mi_option_t option)"
  },
  {
    "label": "mi_option_enable()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "mi_option_enable(mi_option_t option)"
  },
  {
    "label": "mi_option_disable()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "mi_option_disable(mi_option_t option)"
  },
  {
    "label": "mi_option_set_enabled()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "mi_option_set_enabled(mi_option_t option, bool enable)"
  },
  {
    "label": "mi_option_set_enabled_default()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "mi_option_set_enabled_default(mi_option_t option, bool enable)"
  },
  {
    "label": "mi_option_get()",
    "kind": "Method",
    "detail": "Function (long)",
    "insertText": "mi_option_get(mi_option_t option)"
  },
  {
    "label": "mi_option_set()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "mi_option_set(mi_option_t option, long value)"
  },
  {
    "label": "mi_option_set_default()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "mi_option_set_default(mi_option_t option, long value)"
  },
  {
    "label": "mi_ext_set_win32_allocators()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "mi_ext_set_win32_allocators(const mi_ext_win32_allocators_t* allocators)"
  },
  {
    "label": "mi_attr_alloc_size()",
    "kind": "Method",
    "detail": "Function (mi_attr_malloc)",
    "insertText": "mi_attr_alloc_size(1)"
  },
  {
    "label": "mi_attr_alloc_size()",
    "kind": "Method",
    "detail": "Function (mi_attr_malloc)",
    "insertText": "mi_attr_alloc_size(1)"
  },
  {
    "label": "mi_attr_alloc_size2()",
    "kind": "Method",
    "detail": "Function (mi_attr_noexcept)",
    "insertText": "mi_attr_alloc_size2(2,3)"
  },
  {
    "label": "mi_attr_alloc_size()",
    "kind": "Method",
    "detail": "Function (mi_attr_malloc)",
    "insertText": "mi_attr_alloc_size(1)"
  },
  {
    "label": "mi_attr_alloc_size()",
    "kind": "Method",
    "detail": "Function (mi_attr_malloc)",
    "insertText": "mi_attr_alloc_size(1)"
  },
  {
    "label": "mi_attr_alloc_size2()",
    "kind": "Method",
    "detail": "Function (mi_attr_malloc)",
    "insertText": "mi_attr_alloc_size2(1, 2)"
  },
  {
    "label": "allocate()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "allocate(count)"
  }
]