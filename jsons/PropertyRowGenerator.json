[
  {
    "label": "FDetailCategoryImpl",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDetailCategoryImpl"
  },
  {
    "label": "FDetailLayoutBuilderImpl",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDetailLayoutBuilderImpl"
  },
  {
    "label": "FPropertyNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPropertyNode"
  },
  {
    "label": "IDetailCustomization",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDetailCustomization"
  },
  {
    "label": "IDetailNodeTree",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDetailNodeTree"
  },
  {
    "label": "FComplexPropertyNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FComplexPropertyNode"
  },
  {
    "label": "FDetailTreeNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDetailTreeNode"
  },
  {
    "label": "IPropertyGenerationUtilities",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPropertyGenerationUtilities"
  },
  {
    "label": "FStructOnScope",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStructOnScope"
  },
  {
    "label": "IStructureDataProvider",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IStructureDataProvider"
  },
  {
    "label": "FPropertyNodeMap",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPropertyNodeMap"
  },
  {
    "label": "FDetailLayoutData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDetailLayoutData"
  },
  {
    "label": "FPropertyRowGenerator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPropertyRowGenerator"
  },
  {
    "label": "FNotifyHook",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNotifyHook"
  },
  {
    "label": "FAssetThumbnailPool",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAssetThumbnailPool"
  },
  {
    "label": "IClassViewerFilter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IClassViewerFilter"
  },
  {
    "label": "FPropertyNodeMap()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" DetailFilter . h \" # include \" UObject / WeakObjectPtr . h \" # include \" PropertyPath . h \" # include \" TickableEditorObject . h \" # include \" IPropertyUtilities . h \" # include \" PropertyEditorModule . h \" # include \" IPropertyRowGenerator . h \" class FDetailCategoryImpl ; class FDetailLayoutBuilderImpl ; class FPropertyNode ; class IDetailCustomization ; class IDetailNodeTree ; class FComplexPropertyNode ; class FDetailTreeNode ; class IPropertyGenerationUtilities ; class FStructOnScope ; class IStructureDataProvider ; struct FPropertyNodeMap {)",
    "insertText": "FPropertyNodeMap() : ParentProperty(NULL)"
  },
  {
    "label": "Contains()",
    "kind": "Method",
    "detail": "Function (} FPropertyNode* ParentProperty ; TMap<FName,TSharedPtr<FPropertyNode>> PropertyNameToNode ; bool)",
    "insertText": "Contains(FName PropertyName)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Add(FName PropertyName, TSharedPtr<FPropertyNode>& PropertyNode)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (PropertyNameToNode .)",
    "insertText": "Add(PropertyName, PropertyNode)"
  },
  {
    "label": "FPropertyRowGenerator()",
    "kind": "Method",
    "detail": "Function (} } ; typedef TMap<FName,TSharedPtr<FDetailCategoryImpl>> FCategoryMap ; typedef TMap<FName,FPropertyNodeMap> FClassInstanceToPropertyMap ; typedef TMap<FName,FClassInstanceToPropertyMap> FClassToPropertyMap ; struct FDetailLayoutData { TSharedPtr<FDetailLayoutBuilderImpl> DetailLayout ; FClassToPropertyMap ClassToPropertyMap ; TSet<TWeakObjectPtr<UStruct>> ClassesWithProperties ; TArray<TSharedPtr<IDetailCustomization>> CustomizationClassInstances ; } ; class FPropertyRowGenerator : public IPropertyRowGenerator,public FTickableEditorObject,public TSharedFromThis<FPropertyRowGenerator> { public :)",
    "insertText": "FPropertyRowGenerator(const FPropertyRowGeneratorArgs& InArgs)"
  },
  {
    "label": "FPropertyRowGenerator()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FPropertyRowGenerator()"
  },
  {
    "label": "DECLARE_DERIVED_EVENT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DERIVED_EVENT(FPropertyRowGenerator, IPropertyRowGenerator::FOnRowsRefreshed, FOnRowsRefreshed)"
  },
  {
    "label": "SetObjects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetObjects(const TArray<UObject*>& InObjects)"
  },
  {
    "label": "SetStructure()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetStructure(const TSharedPtr<FStructOnScope>& InStruct)"
  },
  {
    "label": "SetStructure()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetStructure(const TSharedPtr<IStructureDataProvider>& InStructProvider)"
  },
  {
    "label": "GetSelectedObjects()",
    "kind": "Method",
    "detail": "Function (const TArray<TWeakObjectPtr<UObject>>&)",
    "insertText": "GetSelectedObjects()"
  },
  {
    "label": "FindTreeNode()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<IDetailTreeNode>)",
    "insertText": "FindTreeNode(TSharedPtr<IPropertyHandle> PropertyHandle)"
  },
  {
    "label": "FindTreeNodes()",
    "kind": "Method",
    "detail": "Function (TArray<TSharedPtr<IDetailTreeNode>>)",
    "insertText": "FindTreeNodes(const TArray<TSharedPtr<IPropertyHandle>>& PropertyHandles)"
  },
  {
    "label": "OnRowsRefreshed()",
    "kind": "Method",
    "detail": "Function (FOnRowsRefreshed&)",
    "insertText": "OnRowsRefreshed()"
  },
  {
    "label": "RegisterInstancedCustomPropertyTypeLayout()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterInstancedCustomPropertyTypeLayout(FName PropertyTypeName, FOnGetPropertyTypeCustomizationInstance PropertyTypeLayoutDelegate, TSharedPtr<IPropertyTypeIdentifier> Identifier = nullptr)"
  },
  {
    "label": "UnregisterInstancedCustomPropertyLayout()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterInstancedCustomPropertyLayout(UStruct* Class)"
  },
  {
    "label": "UnregisterInstancedCustomPropertyTypeLayout()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterInstancedCustomPropertyTypeLayout(FName PropertyTypeName, TSharedPtr<IPropertyTypeIdentifier> Identifier = nullptr)"
  },
  {
    "label": "SetCustomValidatePropertyNodesFunction()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCustomValidatePropertyNodesFunction(FOnValidatePropertyRowGeneratorNodes InCustomValidatePropertyNodesFunction)"
  },
  {
    "label": "MoveTemp()",
    "kind": "Method",
    "detail": "Function (CustomValidatePropertyNodesFunction =)",
    "insertText": "MoveTemp(InCustomValidatePropertyNodesFunction)"
  },
  {
    "label": "SetPropertyGenerationAllowListPaths()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetPropertyGenerationAllowListPaths(const TSet<FString>& InPropertyGenerationAllowListPaths)"
  },
  {
    "label": "InvalidateCachedState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InvalidateCachedState()"
  },
  {
    "label": "FilterNodes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FilterNodes(const TArray<FString>& InFilterStrings)"
  },
  {
    "label": "GetTickableTickType()",
    "kind": "Method",
    "detail": "Function (ETickableTickType)",
    "insertText": "GetTickableTickType()"
  },
  {
    "label": "GetStatId()",
    "kind": "Method",
    "detail": "Function (TStatId)",
    "insertText": "GetStatId()"
  },
  {
    "label": "GetNotifyHook()",
    "kind": "Method",
    "detail": "Function (class FNotifyHook*)",
    "insertText": "GetNotifyHook()"
  },
  {
    "label": "IsPropertyEditingEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsPropertyEditingEnabled()"
  },
  {
    "label": "ForceRefresh()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ForceRefresh()"
  },
  {
    "label": "RequestRefresh()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RequestRefresh()"
  },
  {
    "label": "GetThumbnailPool()",
    "kind": "Method",
    "detail": "Function (bRefreshPending = true ; } TSharedPtr<class FAssetThumbnailPool>)",
    "insertText": "GetThumbnailPool()"
  },
  {
    "label": "HasClassDefaultObject()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasClassDefaultObject()"
  },
  {
    "label": "GetInstancedPropertyTypeLayoutMap()",
    "kind": "Method",
    "detail": "Function (const FCustomPropertyTypeLayoutMap&)",
    "insertText": "GetInstancedPropertyTypeLayoutMap()"
  },
  {
    "label": "UpdateDetailRows()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateDetailRows()"
  },
  {
    "label": "OnFinishedChangingProperties()",
    "kind": "Method",
    "detail": "Function (FOnFinishedChangingProperties&)",
    "insertText": "OnFinishedChangingProperties()"
  },
  {
    "label": "PostSetObject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostSetObject()"
  },
  {
    "label": "UpdatePropertyMaps()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdatePropertyMaps()"
  },
  {
    "label": "UpdateSinglePropertyMap()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateSinglePropertyMap(TSharedPtr<FComplexPropertyNode> InRootPropertyNode, FDetailLayoutData& LayoutData)"
  },
  {
    "label": "ValidatePropertyNodes()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ValidatePropertyNodes(const FRootPropertyNodeList& PropertyNodeList)"
  },
  {
    "label": "FindTreeNodeRecursive()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<IDetailTreeNode>)",
    "insertText": "FindTreeNodeRecursive(const TSharedPtr<IDetailTreeNode>& StartNode, TSharedPtr<IPropertyHandle> PropertyHandle)"
  },
  {
    "label": "LayoutNodeVisibilityChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LayoutNodeVisibilityChanged()"
  }
]