[
  {
    "label": "scalar_bessel_i0_op",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "scalar_bessel_i0_op"
  },
  {
    "label": "functor_traits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "functor_traits"
  },
  {
    "label": "scalar_bessel_i0e_op",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "scalar_bessel_i0e_op"
  },
  {
    "label": "scalar_bessel_i1_op",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "scalar_bessel_i1_op"
  },
  {
    "label": "scalar_bessel_i1e_op",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "scalar_bessel_i1e_op"
  },
  {
    "label": "scalar_bessel_j0_op",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "scalar_bessel_j0_op"
  },
  {
    "label": "scalar_bessel_y0_op",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "scalar_bessel_y0_op"
  },
  {
    "label": "scalar_bessel_j1_op",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "scalar_bessel_j1_op"
  },
  {
    "label": "scalar_bessel_y1_op",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "scalar_bessel_y1_op"
  },
  {
    "label": "scalar_bessel_k0_op",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "scalar_bessel_k0_op"
  },
  {
    "label": "scalar_bessel_k0e_op",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "scalar_bessel_k0e_op"
  },
  {
    "label": "scalar_bessel_k1_op",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "scalar_bessel_k1_op"
  },
  {
    "label": "scalar_bessel_k1e_op",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "scalar_bessel_k1e_op"
  },
  {
    "label": "EIGEN_EMPTY_STRUCT_CTOR()",
    "kind": "Method",
    "detail": "Function (# ifndef EIGEN_BESSELFUNCTIONS_FUNCTORS_H # define EIGEN_BESSELFUNCTIONS_FUNCTORS_H namespace Eigen { namespace internal { template<Scalar> struct scalar_bessel_i0_op {)",
    "insertText": "EIGEN_EMPTY_STRUCT_CTOR(scalar_bessel_i0_op) EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const Scalar operator()(const Scalar& x)"
  },
  {
    "label": "bessel_i0()",
    "kind": "Method",
    "detail": "Function (using numext::bessel_i0 ; return)",
    "insertText": "bessel_i0(x)"
  },
  {
    "label": "packetOp()",
    "kind": "Method",
    "detail": "Function (} typedef packet_traits<Scalar>::type Packet ; EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Packet)",
    "insertText": "packetOp(const Packet& x)"
  },
  {
    "label": "EIGEN_EMPTY_STRUCT_CTOR()",
    "kind": "Method",
    "detail": "Function (} } ; template<Scalar> struct functor_traits<scalar_bessel_i0_op<Scalar>> { enum { Cost = 2 8* NumTraits<Scalar>::MulCost + 4 8* NumTraits<Scalar>::AddCost,PacketAccess = packet_traits<Scalar>::HasBessel } ; } ; template<Scalar> struct scalar_bessel_i0e_op {)",
    "insertText": "EIGEN_EMPTY_STRUCT_CTOR(scalar_bessel_i0e_op) EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const Scalar operator()(const Scalar& x)"
  },
  {
    "label": "bessel_i0e()",
    "kind": "Method",
    "detail": "Function (using numext::bessel_i0e ; return)",
    "insertText": "bessel_i0e(x)"
  },
  {
    "label": "EIGEN_EMPTY_STRUCT_CTOR()",
    "kind": "Method",
    "detail": "Function (} } ; template<Scalar> struct functor_traits<scalar_bessel_i0e_op<Scalar>> { enum { Cost = 2 0* NumTraits<Scalar>::MulCost + 4 0* NumTraits<Scalar>::AddCost,PacketAccess = packet_traits<Scalar>::HasBessel } ; } ; template<Scalar> struct scalar_bessel_i1_op {)",
    "insertText": "EIGEN_EMPTY_STRUCT_CTOR(scalar_bessel_i1_op) EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const Scalar operator()(const Scalar& x)"
  },
  {
    "label": "bessel_i1()",
    "kind": "Method",
    "detail": "Function (using numext::bessel_i1 ; return)",
    "insertText": "bessel_i1(x)"
  },
  {
    "label": "EIGEN_EMPTY_STRUCT_CTOR()",
    "kind": "Method",
    "detail": "Function (} } ; template<Scalar> struct functor_traits<scalar_bessel_i1_op<Scalar>> { enum { Cost = 2 8* NumTraits<Scalar>::MulCost + 4 8* NumTraits<Scalar>::AddCost,PacketAccess = packet_traits<Scalar>::HasBessel } ; } ; template<Scalar> struct scalar_bessel_i1e_op {)",
    "insertText": "EIGEN_EMPTY_STRUCT_CTOR(scalar_bessel_i1e_op) EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const Scalar operator()(const Scalar& x)"
  },
  {
    "label": "bessel_i1e()",
    "kind": "Method",
    "detail": "Function (using numext::bessel_i1e ; return)",
    "insertText": "bessel_i1e(x)"
  },
  {
    "label": "EIGEN_EMPTY_STRUCT_CTOR()",
    "kind": "Method",
    "detail": "Function (} } ; template<Scalar> struct functor_traits<scalar_bessel_i1e_op<Scalar>> { enum { Cost = 2 0* NumTraits<Scalar>::MulCost + 4 0* NumTraits<Scalar>::AddCost,PacketAccess = packet_traits<Scalar>::HasBessel } ; } ; template<Scalar> struct scalar_bessel_j0_op {)",
    "insertText": "EIGEN_EMPTY_STRUCT_CTOR(scalar_bessel_j0_op) EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const Scalar operator()(const Scalar& x)"
  },
  {
    "label": "bessel_j0()",
    "kind": "Method",
    "detail": "Function (using numext::bessel_j0 ; return)",
    "insertText": "bessel_j0(x)"
  },
  {
    "label": "EIGEN_EMPTY_STRUCT_CTOR()",
    "kind": "Method",
    "detail": "Function (} } ; template<Scalar> struct functor_traits<scalar_bessel_j0_op<Scalar>> { enum { Cost = 6 3* NumTraits<Scalar>::MulCost + 4 8* NumTraits<Scalar>::AddCost,PacketAccess = packet_traits<Scalar>::HasBessel } ; } ; template<Scalar> struct scalar_bessel_y0_op {)",
    "insertText": "EIGEN_EMPTY_STRUCT_CTOR(scalar_bessel_y0_op) EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const Scalar operator()(const Scalar& x)"
  },
  {
    "label": "bessel_y0()",
    "kind": "Method",
    "detail": "Function (using numext::bessel_y0 ; return)",
    "insertText": "bessel_y0(x)"
  },
  {
    "label": "EIGEN_EMPTY_STRUCT_CTOR()",
    "kind": "Method",
    "detail": "Function (} } ; template<Scalar> struct functor_traits<scalar_bessel_y0_op<Scalar>> { enum { Cost = 1 2 6* NumTraits<Scalar>::MulCost + 9 6* NumTraits<Scalar>::AddCost,PacketAccess = packet_traits<Scalar>::HasBessel } ; } ; template<Scalar> struct scalar_bessel_j1_op {)",
    "insertText": "EIGEN_EMPTY_STRUCT_CTOR(scalar_bessel_j1_op) EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const Scalar operator()(const Scalar& x)"
  },
  {
    "label": "bessel_j1()",
    "kind": "Method",
    "detail": "Function (using numext::bessel_j1 ; return)",
    "insertText": "bessel_j1(x)"
  },
  {
    "label": "EIGEN_EMPTY_STRUCT_CTOR()",
    "kind": "Method",
    "detail": "Function (} } ; template<Scalar> struct functor_traits<scalar_bessel_j1_op<Scalar>> { enum { Cost = 6 3* NumTraits<Scalar>::MulCost + 4 8* NumTraits<Scalar>::AddCost,PacketAccess = packet_traits<Scalar>::HasBessel } ; } ; template<Scalar> struct scalar_bessel_y1_op {)",
    "insertText": "EIGEN_EMPTY_STRUCT_CTOR(scalar_bessel_y1_op) EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const Scalar operator()(const Scalar& x)"
  },
  {
    "label": "bessel_y1()",
    "kind": "Method",
    "detail": "Function (using numext::bessel_y1 ; return)",
    "insertText": "bessel_y1(x)"
  },
  {
    "label": "EIGEN_EMPTY_STRUCT_CTOR()",
    "kind": "Method",
    "detail": "Function (} } ; template<Scalar> struct functor_traits<scalar_bessel_y1_op<Scalar>> { enum { Cost = 1 2 6* NumTraits<Scalar>::MulCost + 9 6* NumTraits<Scalar>::AddCost,PacketAccess = packet_traits<Scalar>::HasBessel } ; } ; template<Scalar> struct scalar_bessel_k0_op {)",
    "insertText": "EIGEN_EMPTY_STRUCT_CTOR(scalar_bessel_k0_op) EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const Scalar operator()(const Scalar& x)"
  },
  {
    "label": "bessel_k0()",
    "kind": "Method",
    "detail": "Function (using numext::bessel_k0 ; return)",
    "insertText": "bessel_k0(x)"
  },
  {
    "label": "EIGEN_EMPTY_STRUCT_CTOR()",
    "kind": "Method",
    "detail": "Function (} } ; template<Scalar> struct functor_traits<scalar_bessel_k0_op<Scalar>> { enum { Cost = 6 8* NumTraits<Scalar>::MulCost + 8 8* NumTraits<Scalar>::AddCost,PacketAccess = packet_traits<Scalar>::HasBessel } ; } ; template<Scalar> struct scalar_bessel_k0e_op {)",
    "insertText": "EIGEN_EMPTY_STRUCT_CTOR(scalar_bessel_k0e_op) EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const Scalar operator()(const Scalar& x)"
  },
  {
    "label": "bessel_k0e()",
    "kind": "Method",
    "detail": "Function (using numext::bessel_k0e ; return)",
    "insertText": "bessel_k0e(x)"
  },
  {
    "label": "EIGEN_EMPTY_STRUCT_CTOR()",
    "kind": "Method",
    "detail": "Function (} } ; template<Scalar> struct functor_traits<scalar_bessel_k0e_op<Scalar>> { enum { Cost = 6 8* NumTraits<Scalar>::MulCost + 8 8* NumTraits<Scalar>::AddCost,PacketAccess = packet_traits<Scalar>::HasBessel } ; } ; template<Scalar> struct scalar_bessel_k1_op {)",
    "insertText": "EIGEN_EMPTY_STRUCT_CTOR(scalar_bessel_k1_op) EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const Scalar operator()(const Scalar& x)"
  },
  {
    "label": "bessel_k1()",
    "kind": "Method",
    "detail": "Function (using numext::bessel_k1 ; return)",
    "insertText": "bessel_k1(x)"
  },
  {
    "label": "EIGEN_EMPTY_STRUCT_CTOR()",
    "kind": "Method",
    "detail": "Function (} } ; template<Scalar> struct functor_traits<scalar_bessel_k1_op<Scalar>> { enum { Cost = 6 8* NumTraits<Scalar>::MulCost + 8 8* NumTraits<Scalar>::AddCost,PacketAccess = packet_traits<Scalar>::HasBessel } ; } ; template<Scalar> struct scalar_bessel_k1e_op {)",
    "insertText": "EIGEN_EMPTY_STRUCT_CTOR(scalar_bessel_k1e_op) EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const Scalar operator()(const Scalar& x)"
  },
  {
    "label": "bessel_k1e()",
    "kind": "Method",
    "detail": "Function (using numext::bessel_k1e ; return)",
    "insertText": "bessel_k1e(x)"
  }
]