[
  {
    "label": "astcenc_context",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "astcenc_context"
  },
  {
    "label": "astcenc_error",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "astcenc_error"
  },
  {
    "label": "astcenc_profile",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "astcenc_profile"
  },
  {
    "label": "astcenc_swz",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "astcenc_swz"
  },
  {
    "label": "astcenc_swizzle",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "astcenc_swizzle"
  },
  {
    "label": "astcenc_type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "astcenc_type"
  },
  {
    "label": "astcenc_config",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "astcenc_config"
  },
  {
    "label": "astcenc_image",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "astcenc_image"
  },
  {
    "label": "astcenc_block_info",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "astcenc_block_info"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# ifndef ASTCENC_INCLUDED # define ASTCENC_INCLUDED # include<cstddef> # include<cstdint> # if)",
    "insertText": "defined(ASTCENC_DYNAMIC_LIBRARY) #if defined(_MSC_VER) #define ASTCENC_PUBLIC extern \"C\" __declspec(dllexport) #else #define ASTCENC_PUBLIC extern \"C\" __attribute__ ((visibility (\"default\")))"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (enum astcenc_error { ASTCENC_SUCCESS = 0,ASTCENC_ERR_OUT_OF_MEM,ASTCENC_ERR_BAD_CPU_FLOAT,ASTCENC_ERR_BAD_CPU_ISA,ASTCENC_ERR_BAD_PARAM,ASTCENC_ERR_BAD_BLOCK_SIZE,ASTCENC_ERR_BAD_PROFILE,ASTCENC_ERR_BAD_QUALITY,ASTCENC_ERR_BAD_SWIZZLE,ASTCENC_ERR_BAD_FLAGS,ASTCENC_ERR_BAD_CONTEXT,ASTCENC_ERR_NOT_IMPLEMENTED,# if)",
    "insertText": "defined(ASTCENC_DIAGNOSTICS)"
  },
  {
    "label": "astcenc_config_init()",
    "kind": "Method",
    "detail": "Function (# endif } ; struct astcenc_image { unsigned int dim_x ; unsigned int dim_y ; unsigned int dim_z ; astcenc_type data_type ; void** data ; } ; struct astcenc_block_info { astcenc_profile profile ; unsigned int block_x ; unsigned int block_y ; unsigned int block_z ; unsigned int texel_count ; bool is_error_block ; bool is_constant_block ; bool is_hdr_block ; bool is_dual_plane_block ; unsigned int partition_count ; unsigned int partition_index ; unsigned int dual_plane_component ; unsigned int color_endpoint_modes [ 4 ] ; unsigned int color_level_count ; unsigned int weight_level_count ; unsigned int weight_x ; unsigned int weight_y ; unsigned int weight_z ; float color_endpoints [ 4 ] [ 2 ] [ 4 ] ; float weight_values_plane1 [ 2 1 6 ] ; float weight_values_plane2 [ 2 1 6 ] ; uint8_t partition_assignment [ 2 1 6 ] ; } ; ASTCENC_PUBLIC astcenc_error)",
    "insertText": "astcenc_config_init(astcenc_profile profile, unsigned int block_x, unsigned int block_y, unsigned int block_z, float quality, unsigned int flags, astcenc_config* config)"
  },
  {
    "label": "astcenc_context_alloc()",
    "kind": "Method",
    "detail": "Function (ASTCENC_PUBLIC astcenc_error)",
    "insertText": "astcenc_context_alloc(const astcenc_config* config, unsigned int thread_count, astcenc_context** context)"
  },
  {
    "label": "astcenc_compress_image()",
    "kind": "Method",
    "detail": "Function (ASTCENC_PUBLIC astcenc_error)",
    "insertText": "astcenc_compress_image(astcenc_context* context, astcenc_image* image, const astcenc_swizzle* swizzle, uint8_t* data_out, size_t data_len, unsigned int thread_index)"
  },
  {
    "label": "astcenc_compress_reset()",
    "kind": "Method",
    "detail": "Function (ASTCENC_PUBLIC astcenc_error)",
    "insertText": "astcenc_compress_reset(astcenc_context* context)"
  },
  {
    "label": "astcenc_decompress_image()",
    "kind": "Method",
    "detail": "Function (ASTCENC_PUBLIC astcenc_error)",
    "insertText": "astcenc_decompress_image(astcenc_context* context, const uint8_t* data, size_t data_len, astcenc_image* image_out, const astcenc_swizzle* swizzle, unsigned int thread_index)"
  },
  {
    "label": "astcenc_decompress_reset()",
    "kind": "Method",
    "detail": "Function (ASTCENC_PUBLIC astcenc_error)",
    "insertText": "astcenc_decompress_reset(astcenc_context* context)"
  },
  {
    "label": "astcenc_context_free()",
    "kind": "Method",
    "detail": "Function (ASTCENC_PUBLIC void)",
    "insertText": "astcenc_context_free(astcenc_context* context)"
  },
  {
    "label": "astcenc_get_block_info()",
    "kind": "Method",
    "detail": "Function (ASTCENC_PUBLIC astcenc_error)",
    "insertText": "astcenc_get_block_info(astcenc_context* context, const uint8_t data[16], astcenc_block_info* info)"
  },
  {
    "label": "astcenc_get_error_string()",
    "kind": "Method",
    "detail": "Function (ASTCENC_PUBLIC const char*)",
    "insertText": "astcenc_get_error_string(astcenc_error status)"
  }
]