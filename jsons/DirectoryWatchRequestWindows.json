[
  {
    "label": "FDirectoryWatchRequestWindows",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDirectoryWatchRequestWindows"
  },
  {
    "label": "FDeleterFree",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDeleterFree"
  },
  {
    "label": "FDirectoryWatchRequestWindows()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Delegates / Delegate . h \" # include \" IDirectoryWatcher . h \" # include \" HAL / UnrealMemory . h \" # include \" Templates / UniquePtr . h \" # include \" Windows / WindowsHWrapper . h \" class FDirectoryWatchRequestWindows { public :)",
    "insertText": "FDirectoryWatchRequestWindows(uint32 Flags)"
  },
  {
    "label": "FDirectoryWatchRequestWindows()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FDirectoryWatchRequestWindows()"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Init(const FString& InDirectory)"
  },
  {
    "label": "AddDelegate()",
    "kind": "Method",
    "detail": "Function (FDelegateHandle)",
    "insertText": "AddDelegate(const IDirectoryWatcher::FDirectoryChanged& InDelegate)"
  },
  {
    "label": "RemoveDelegate()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RemoveDelegate(FDelegateHandle InHandle)"
  },
  {
    "label": "HasDelegates()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasDelegates()"
  },
  {
    "label": "GetDirectoryHandle()",
    "kind": "Method",
    "detail": "Function (HANDLE)",
    "insertText": "GetDirectoryHandle()"
  },
  {
    "label": "EndWatchRequest()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EndWatchRequest()"
  },
  {
    "label": "IsPendingDelete()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsPendingDelete()"
  },
  {
    "label": "ProcessChange()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "ProcessChange(uint32 Error, uint32 NumBytes)"
  },
  {
    "label": "SetBufferByChangeCount()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetBufferByChangeCount(int32 MaxChanges)"
  },
  {
    "label": "SetBufferBySize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetBufferBySize(int32 BufferSize)"
  },
  {
    "label": "ChangeNotification()",
    "kind": "Method",
    "detail": "Function (void CALLBACK)",
    "insertText": "ChangeNotification(::DWORD Error, ::DWORD NumBytes, LPOVERLAPPED InOverlapped)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FString Directory ; HANDLE DirectoryHandle ; int64 WatchStartedTimeStampHistory [ 2 ] ; uint32 NotifyFilter ; uint32 BufferLength = 0 ; struct FDeleterFree { void)",
    "insertText": "operator()(uint8* Ptr)"
  },
  {
    "label": "Free()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Free(Ptr)"
  }
]