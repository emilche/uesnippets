[
  {
    "label": "SButton",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SButton"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "UEdGraphPin",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEdGraphPin"
  },
  {
    "label": "GRAPHEDITOR_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "GRAPHEDITOR_API"
  },
  {
    "label": "FAssetData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAssetData"
  },
  {
    "label": "SMenuAnchor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SMenuAnchor"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" AssetRegistry / AssetData . h \" # include \" Containers / Array . h \" # include \" Containers / UnrealString . h \" # include \" CoreMinimal . h \" # include \" Framework / SlateDelegates . h \" # include \" Input / Reply . h \" # include \" Internationalization / Text . h \" # include \" SGraphPin . h \" # include \" Styling / SlateColor . h \" # include \" Templates / SharedPointer . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Widgets / Input / SMenuAnchor . h \" # include \" Widgets / SWidget . h \" class SButton ; class SWidget ; class UEdGraphPin ; class SGraphPinObject : public SGraphPin { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SGraphPinObject)"
  },
  {
    "label": "SLATE_END_ARGS()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_END_ARGS() void Construct(const FArguments& InArgs, UEdGraphPin* InGraphPinObj)"
  },
  {
    "label": "GetDefaultValueWidget()",
    "kind": "Method",
    "detail": "Function (protected : TSharedRef<SWidget>)",
    "insertText": "GetDefaultValueWidget()"
  },
  {
    "label": "DoesWidgetHandleSettingEditingEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DoesWidgetHandleSettingEditingEnabled()"
  },
  {
    "label": "GetOnBrowseButtonDelegate()",
    "kind": "Method",
    "detail": "Function (FOnClicked)",
    "insertText": "GetOnBrowseButtonDelegate()"
  },
  {
    "label": "OnClickUse()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnClickUse()"
  },
  {
    "label": "OnClickBrowse()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnClickBrowse()"
  },
  {
    "label": "GetObjectToolTip()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetObjectToolTip()"
  },
  {
    "label": "GetObjectToolTipAsString()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetObjectToolTipAsString()"
  },
  {
    "label": "GetValue()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetValue()"
  },
  {
    "label": "GetObjectName()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetObjectName()"
  },
  {
    "label": "GetDefaultComboText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetDefaultComboText()"
  },
  {
    "label": "AllowSelfPinWidget()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AllowSelfPinWidget()"
  },
  {
    "label": "GenerateAssetPicker()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "GenerateAssetPicker()"
  },
  {
    "label": "OnAssetSelectedFromPicker()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAssetSelectedFromPicker(const struct FAssetData& AssetData)"
  },
  {
    "label": "OnAssetEnterPressedInPicker()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAssetEnterPressedInPicker(const TArray<FAssetData>& InSelectedAssets)"
  },
  {
    "label": "OnGetComboTextValue()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "OnGetComboTextValue()"
  },
  {
    "label": "OnGetComboForeground()",
    "kind": "Method",
    "detail": "Function (FSlateColor)",
    "insertText": "OnGetComboForeground()"
  },
  {
    "label": "OnGetWidgetForeground()",
    "kind": "Method",
    "detail": "Function (FSlateColor)",
    "insertText": "OnGetWidgetForeground()"
  },
  {
    "label": "OnGetWidgetBackground()",
    "kind": "Method",
    "detail": "Function (FSlateColor)",
    "insertText": "OnGetWidgetBackground()"
  },
  {
    "label": "GetAssetData()",
    "kind": "Method",
    "detail": "Function (const FAssetData&)",
    "insertText": "GetAssetData(bool bRuntimePath)"
  }
]