[
  {
    "label": "UMovieSceneCapture",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieSceneCapture"
  },
  {
    "label": "SNotificationItem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SNotificationItem"
  },
  {
    "label": "FMovieSceneCaptureBase",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneCaptureBase"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "IMovieSceneCaptureDialogModule",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IMovieSceneCaptureDialogModule"
  },
  {
    "label": "FTabManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTabManager"
  },
  {
    "label": "FCaptureState",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCaptureState"
  },
  {
    "label": "MOVIESCENECAPTUREDIALOG_API",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "MOVIESCENECAPTUREDIALOG_API"
  },
  {
    "label": "ULevelEditorPlaySettings",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULevelEditorPlaySettings"
  },
  {
    "label": "FEngineShowFlags",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FEngineShowFlags"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Modules / ModuleInterface . h \" # include \" Modules / ModuleManager . h \" # include \" GameFramework / GameModeBase . h \" # include \" Widgets / Input / NumericTypeInterface . h \" class UMovieSceneCapture ; class SNotificationItem ; struct FMovieSceneCaptureBase ; enum class ECaptureStatus { Pending,Success,Failure,Unknown } ; class IMovieSceneCaptureDialogModule : public IModuleInterface { public : IMovieSceneCaptureDialogModule&)",
    "insertText": "Get()"
  },
  {
    "label": "ModuleName()",
    "kind": "Method",
    "detail": "Function (const FName)",
    "insertText": "ModuleName(TEXT(\"MovieSceneCaptureDialog\"))"
  },
  {
    "label": "OpenDialog()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "OpenDialog(const TSharedRef<class FTabManager>& TabManager, UMovieSceneCapture* CaptureObject, TSharedPtr<INumericTypeInterface<double>> InNumericTypeInterface)"
  },
  {
    "label": "GetCurrentlyRecordingWorld()",
    "kind": "Method",
    "detail": "Function (UWorld*)",
    "insertText": "GetCurrentlyRecordingWorld()"
  },
  {
    "label": "GetCurrentCapture()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FMovieSceneCaptureBase>)",
    "insertText": "GetCurrentCapture()"
  },
  {
    "label": "StartCapture()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StartCapture(UMovieSceneCapture* InCaptureSettings)"
  },
  {
    "label": "FCaptureState()",
    "kind": "Method",
    "detail": "Function (} ; struct FCaptureState {)",
    "insertText": "FCaptureState(ECaptureStatus InState = ECaptureStatus::Unknown) : Status(InState) , Code(0)"
  },
  {
    "label": "FCaptureState()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FCaptureState(int32 InCode) : Status(InCode == 0 ? ECaptureStatus::Success : ECaptureStatus::Failure) , Code(InCode)"
  },
  {
    "label": "GetDetailText()",
    "kind": "Method",
    "detail": "Function (} FText)",
    "insertText": "GetDetailText()"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (ECaptureStatus Status ; int32 Code ; } ; struct FMovieSceneCaptureBase : TSharedFromThis<FMovieSceneCaptureBase> { public :)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_OneParam(FCaptureStateStopped, bool)"
  },
  {
    "label": "FMovieSceneCaptureBase()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FMovieSceneCaptureBase()"
  },
  {
    "label": "OnCaptureStarted()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "OnCaptureStarted()"
  },
  {
    "label": "OnCaptureFinished()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "OnCaptureFinished(bool bSuccess)"
  },
  {
    "label": "GetWorld()",
    "kind": "Method",
    "detail": "Function (UWorld*)",
    "insertText": "GetWorld()"
  },
  {
    "label": "Cancel()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Cancel()"
  },
  {
    "label": "GetCaptureState()",
    "kind": "Method",
    "detail": "Function (} FCaptureState)",
    "insertText": "GetCaptureState()"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (} public : FCaptureStateStopped CaptureStoppedDelegate ; protected : TSharedPtr<SNotificationItem> InProgressCaptureNotification ; UMovieSceneCapture* CaptureObject ; TFunction<)",
    "insertText": "void(bool)"
  },
  {
    "label": "FInEditorCapture()",
    "kind": "Method",
    "detail": "Function (} ; struct FInEditorCapture : FMovieSceneCaptureBase {)",
    "insertText": "FInEditorCapture(UMovieSceneCapture* InCaptureObject, const TFunction<void(bool)>& InOnFinishedCallback)"
  },
  {
    "label": "Start()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Start()"
  },
  {
    "label": "OverridePlaySettings()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "OverridePlaySettings(class ULevelEditorPlaySettings* PlayInEditorSettings)"
  },
  {
    "label": "OnPIEViewportStarted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPIEViewportStarted()"
  },
  {
    "label": "Shutdown()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Shutdown()"
  },
  {
    "label": "OnEndPIE()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnEndPIE(bool bIsSimulating)"
  },
  {
    "label": "OnLevelSequenceFinished()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnLevelSequenceFinished()"
  },
  {
    "label": "FNewProcessCapture()",
    "kind": "Method",
    "detail": "Function (private : UWorld* CapturingFromWorld ; bool bScreenMessagesWereEnabled ; float TransientPrimaryVolume ; int32 BackedUpStreamingPoolSize ; int32 BackedUpUseFixedPoolSize ; int32 BackedUpTextureStreaming ; TArray<uint8> BackedUpPlaySettings ; bool CachedPathTracingMode = false ; struct FEngineShowFlags* CachedEngineShowFlags = nullptr ; TSubclassOf<AGameModeBase> CachedGameMode ; } ; struct FNewProcessCapture : FMovieSceneCaptureBase {)",
    "insertText": "FNewProcessCapture(UMovieSceneCapture* InCaptureObject, const FString& InMapNameToLoad, const TFunction<void(bool)>& InOnFinishedCallback)"
  }
]