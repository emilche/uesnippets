[
  {
    "label": "FSceneTextures",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSceneTextures"
  },
  {
    "label": "FViewInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FViewInfo"
  },
  {
    "label": "FViewFamilyInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FViewFamilyInfo"
  },
  {
    "label": "FTransientUserSceneTexture",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTransientUserSceneTexture"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FUserSceneTextureEventData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FUserSceneTextureEventData"
  },
  {
    "label": "FMinimalSceneTextures",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMinimalSceneTextures"
  },
  {
    "label": "InitializeSceneTexturesConfig()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" SceneView . h \" # include \" RenderGraphUtils . h \" # include \" CustomDepthRendering . h \" # include \" SceneRenderTargetParameters . h \" # include \" GBufferInfo . h \" # include \" ScreenPass . h \" struct FSceneTextures ; class FViewInfo ; class FViewFamilyInfo ; void)",
    "insertText": "InitializeSceneTexturesConfig(FSceneTexturesConfig& Config, const FSceneViewFamily& ViewFamily, FIntPoint ExtentOverride = FIntPoint(0,0))"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (struct FTransientUserSceneTexture { FRDGTextureRef Texture { } ; FIntPoint ResolutionDivisor ; uint16 AllocationOrder ; bool bUsed ; uint32 ViewMask ; } ; #)",
    "insertText": "if(UE_BUILD_SHIPPING)"
  },
  {
    "label": "InitializeViewFamily()",
    "kind": "Method",
    "detail": "Function (MissingInput,CollidingInput,FoundInput,Output,Pass,CustomRenderPass } ; struct FUserSceneTextureEventData { EUserSceneTextureEvent Event ; FName Name ; uint16 AllocationOrder ; uint16 ViewIndex ; const UMaterialInterface* MaterialInterface ; FIntPoint RectSize ; } ; # endif struct FMinimalSceneTextures { void)",
    "insertText": "InitializeViewFamily(FRDGBuilder& GraphBuilder, FViewFamilyInfo& ViewFamily)"
  },
  {
    "label": "GetSceneTextureShaderParameters()",
    "kind": "Method",
    "detail": "Function (# endif FSceneTextureShaderParameters)",
    "insertText": "GetSceneTextureShaderParameters(ERHIFeatureLevel::Type FeatureLevel)"
  },
  {
    "label": "FindOrAddUserSceneTexture()",
    "kind": "Method",
    "detail": "Function (FRDGTextureRef)",
    "insertText": "FindOrAddUserSceneTexture(FRDGBuilder& GraphBuilder, int32 ViewIndex, FName Name, FIntPoint ResolutionDivisor, bool& bOutFirstRender, const UMaterialInterface* MaterialInterface, const FIntRect& OutputRect)"
  },
  {
    "label": "GetUserSceneTexture()",
    "kind": "Method",
    "detail": "Function (FScreenPassTextureSlice)",
    "insertText": "GetUserSceneTexture(FRDGBuilder& GraphBuilder, const FViewInfo& View, int32 ViewIndex, FName Name, const UMaterialInterface* MaterialInterface)"
  },
  {
    "label": "GetUserSceneTextureDivisor()",
    "kind": "Method",
    "detail": "Function (FIntPoint)",
    "insertText": "GetUserSceneTextureDivisor(FName Name)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (#)",
    "insertText": "if(UE_BUILD_SHIPPING) const FTransientUserSceneTexture* FindUserSceneTextureByEvent(const FUserSceneTextureEventData& Event)"
  },
  {
    "label": "InitializeViewFamily()",
    "kind": "Method",
    "detail": "Function (# endif } ; struct FSceneTextures : public FMinimalSceneTextures { void)",
    "insertText": "InitializeViewFamily(FRDGBuilder& GraphBuilder, FViewFamilyInfo& ViewFamily, FIntPoint FamilySize)"
  },
  {
    "label": "GetGBufferFFormatAndCreateFlags()",
    "kind": "Method",
    "detail": "Function (EPixelFormat)",
    "insertText": "GetGBufferFFormatAndCreateFlags(ETextureCreateFlags& OutCreateFlags)"
  },
  {
    "label": "GetGBufferRenderTargets()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetGBufferRenderTargets(TArrayView<FTextureRenderTargetBinding> RenderTargets, EGBufferLayout Layout = GBL_Default)"
  },
  {
    "label": "GetGBufferRenderTargets()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetGBufferRenderTargets(ERenderTargetLoadAction LoadAction, FRenderTargetBindingSlots& RenderTargets, EGBufferLayout Layout = GBL_Default)"
  },
  {
    "label": "EnumerateSceneTextures()",
    "kind": "Method",
    "detail": "Function (TArray<FRDGTextureRef>)",
    "insertText": "EnumerateSceneTextures()"
  },
  {
    "label": "QueueSceneTextureExtractions()",
    "kind": "Method",
    "detail": "Function (FRDGTextureRef SmallDepth { } ; FRDGTextureRef GBufferA { } ; FRDGTextureRef GBufferB { } ; FRDGTextureRef GBufferC { } ; FRDGTextureRef GBufferD { } ; FRDGTextureRef GBufferE { } ; FRDGTextureRef GBufferF { } ; FRDGTextureMSAA DepthAux { } ; FRDGTextureRef Velocity { } ; FRDGTextureRef MobileLocalLightTextureA { } ; FRDGTextureRef MobileLocalLightTextureB { } ; FRDGTextureRef ScreenSpaceAO { } ; FRDGTextureRef QuadOverdraw { } ; FRDGTextureRef PixelProjectedReflection { } ; # if WITH_EDITOR FRDGTextureRef EditorPrimitiveColor { } ; FRDGTextureRef EditorPrimitiveDepth { } ; # endif } ; void)",
    "insertText": "QueueSceneTextureExtractions(FRDGBuilder& GraphBuilder, const FSceneTextures& SceneTextures)"
  }
]