[
  {
    "label": "ConfigurableFrameSizeEncoder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ConfigurableFrameSizeEncoder"
  },
  {
    "label": "ConfigurableFrameSizeEncoder()",
    "kind": "Method",
    "detail": "Function (# ifndef TEST_CONFIGURABLE_FRAME_SIZE_ENCODER_H_ # define TEST_CONFIGURABLE_FRAME_SIZE_ENCODER_H_ # include<stddef . h> # include<stdint . h> # include<functional> # include<memory> # include<vector> # include \" absl / types / optional . h \" # include \" api / video / video_bitrate_allocation . h \" # include \" api / video / video_frame . h \" # include \" api / video_codecs / video_codec . h \" # include \" api / video_codecs / video_encoder . h \" # include \" modules / video_coding / include / video_codec_interface . h \" namespace webrtc { namespace test { class ConfigurableFrameSizeEncoder : public VideoEncoder { public :)",
    "insertText": "ConfigurableFrameSizeEncoder(size_t max_frame_size)"
  },
  {
    "label": "ConfigurableFrameSizeEncoder()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "ConfigurableFrameSizeEncoder()"
  },
  {
    "label": "SetFecControllerOverride()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFecControllerOverride(FecControllerOverride* fec_controller_override)"
  },
  {
    "label": "InitEncode()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "InitEncode(const VideoCodec* codec_settings, const Settings& settings)"
  },
  {
    "label": "Encode()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "Encode(const VideoFrame& input_image, const std::vector<VideoFrameType>* frame_types)"
  },
  {
    "label": "RegisterEncodeCompleteCallback()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "RegisterEncodeCompleteCallback(EncodedImageCallback* callback)"
  },
  {
    "label": "Release()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "Release()"
  },
  {
    "label": "SetRates()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRates(const RateControlParameters& parameters)"
  },
  {
    "label": "SetFrameSize()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "SetFrameSize(size_t size)"
  },
  {
    "label": "SetCodecType()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCodecType(VideoCodecType codec_type_)"
  },
  {
    "label": "RegisterPostEncodeCallback()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterPostEncodeCallback(std::function<void(void)> post_encode_callback)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (private : EncodedImageCallback* callback_ ; absl::optional<std::function<)",
    "insertText": "void(void)"
  }
]