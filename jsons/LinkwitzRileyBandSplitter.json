[
  {
    "label": "FLinkwitzRileyBandFilter",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLinkwitzRileyBandFilter"
  },
  {
    "label": "FMultibandBuffer",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMultibandBuffer"
  },
  {
    "label": "FLinkwitzRileyBandSplitter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLinkwitzRileyBandSplitter"
  },
  {
    "label": "FCrossoverBandwidthPair",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCrossoverBandwidthPair"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Init(const int32 InChannels,\n\t\t\t\t  const float InSampleRate,\n\t\t\t\t  const EFilterOrder FilterOrder, \n\t\t\t\t  const bool bInPhaseCompensate,\n\t\t\t\t  const TArray<float>& InCrossovers)"
  },
  {
    "label": "ProcessAudioFrame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessAudioFrame(const float* InBuffer, FMultibandBuffer& OutBuffer)"
  },
  {
    "label": "ProcessAudioBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessAudioBuffer(const float* InBuffer, FMultibandBuffer& OutBuffer, const int32 NumFrames)"
  },
  {
    "label": "SetCrossovers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCrossovers(const TArray<float>& InCrossoverFrequencies)"
  },
  {
    "label": "CopyToBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CopyToBuffer(float* Destination, const float* Origin, const int32 NumSamples)"
  },
  {
    "label": "InvertBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InvertBuffer(float* Buffer, const int32 NumSamples)"
  },
  {
    "label": "GetQ()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetQ(EFilterOrder InFilterOrder)"
  }
]