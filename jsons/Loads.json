[
  {
    "label": "AliasAnalysis",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AliasAnalysis"
  },
  {
    "label": "DataLayout",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DataLayout"
  },
  {
    "label": "MDNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MDNode"
  },
  {
    "label": "isSafeToLoadUnconditionally()",
    "kind": "Method",
    "detail": "Function (# ifndef LLVM_ANALYSIS_LOADS_H # define LLVM_ANALYSIS_LOADS_H # include \" llvm / IR / BasicBlock . h \" namespace llvm { class AliasAnalysis ; class DataLayout ; class MDNode ; bool)",
    "insertText": "isSafeToLoadUnconditionally(Value *V, Instruction *ScanFrom, unsigned Align)"
  },
  {
    "label": "FindAvailableLoadedValue()",
    "kind": "Method",
    "detail": "Function (Value*)",
    "insertText": "FindAvailableLoadedValue(Value *Ptr, BasicBlock *ScanBB, BasicBlock::iterator &ScanFrom, unsigned MaxInstsToScan = 6, AliasAnalysis *AA = nullptr, AAMDNodes *AATags = nullptr)"
  }
]