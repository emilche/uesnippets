[
  {
    "label": "isApprox_selector",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "isApprox_selector"
  },
  {
    "label": "isMuchSmallerThan_object_selector",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "isMuchSmallerThan_object_selector"
  },
  {
    "label": "isMuchSmallerThan_scalar_selector",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "isMuchSmallerThan_scalar_selector"
  },
  {
    "label": "run()",
    "kind": "Method",
    "detail": "Function (# ifndef EIGEN_FUZZY_H # define EIGEN_FUZZY_H namespace Eigen { namespace internal { template<Derived,OtherDerived,bool is_integer = NumTraits<Derived::Scalar>::IsInteger> struct isApprox_selector { EIGEN_DEVICE_FUNC bool)",
    "insertText": "run(const Derived& x, const OtherDerived& y, const typename Derived::RealScalar& prec)"
  },
  {
    "label": "nested()",
    "kind": "Method",
    "detail": "Function (internal::nested_eval<Derived,2>::type)",
    "insertText": "nested(x)"
  },
  {
    "label": "otherNested()",
    "kind": "Method",
    "detail": "Function (internal::nested_eval<OtherDerived,2>::type)",
    "insertText": "otherNested(y)"
  },
  {
    "label": "run()",
    "kind": "Method",
    "detail": "Function (} } ; template<Derived,OtherDerived> struct isApprox_selector<Derived,OtherDerived,true> { EIGEN_DEVICE_FUNC bool)",
    "insertText": "run(const Derived& x, const OtherDerived& y, const typename Derived::RealScalar&)"
  },
  {
    "label": "run()",
    "kind": "Method",
    "detail": "Function (} } ; template<Derived,OtherDerived> struct isMuchSmallerThan_object_selector<Derived,OtherDerived,true> { EIGEN_DEVICE_FUNC bool)",
    "insertText": "run(const Derived& x, const OtherDerived&, const typename Derived::RealScalar&)"
  },
  {
    "label": "run()",
    "kind": "Method",
    "detail": "Function (} } ; template<Derived,bool is_integer = NumTraits<Derived::Scalar>::IsInteger> struct isMuchSmallerThan_scalar_selector { EIGEN_DEVICE_FUNC bool)",
    "insertText": "run(const Derived& x, const typename Derived::RealScalar& y, const typename Derived::RealScalar& prec)"
  },
  {
    "label": "run()",
    "kind": "Method",
    "detail": "Function (} } ; template<Derived> struct isMuchSmallerThan_scalar_selector<Derived,true> { EIGEN_DEVICE_FUNC bool)",
    "insertText": "run(const Derived& x, const typename Derived::RealScalar&, const typename Derived::RealScalar&)"
  },
  {
    "label": "isApprox()",
    "kind": "Method",
    "detail": "Function (} } ; } template<Derived> template<OtherDerived> EIGEN_DEVICE_FUNC bool DenseBase<Derived)",
    "insertText": "isApprox(const DenseBase<OtherDerived>& other, const RealScalar& prec)"
  },
  {
    "label": "isMuchSmallerThan()",
    "kind": "Method",
    "detail": "Function (} template<Derived> EIGEN_DEVICE_FUNC bool DenseBase<Derived)",
    "insertText": "isMuchSmallerThan(const typename NumTraits<Scalar>::Real& other, const RealScalar& prec)"
  },
  {
    "label": "isMuchSmallerThan()",
    "kind": "Method",
    "detail": "Function (} template<Derived> template<OtherDerived> EIGEN_DEVICE_FUNC bool DenseBase<Derived)",
    "insertText": "isMuchSmallerThan(const DenseBase<OtherDerived>& other, const RealScalar& prec)"
  }
]