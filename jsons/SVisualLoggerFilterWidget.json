[
  {
    "label": "SVisualLoggerFilterWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SVisualLoggerFilterWidget"
  },
  {
    "label": "DECLARE_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Styling / SlateColor . h \" # include \" Input / Reply . h \" # include \" Widgets / SWidget . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Layout / Margin . h \" # include \" Styling / SlateTypes . h \" # include \" Widgets / SCompoundWidget . h \" # include \" SVisualLoggerFilterCheckBox . h \" class SVisualLoggerFilterWidget : public SCompoundWidget { public :)",
    "insertText": "DECLARE_DELEGATE_OneParam(FOnFilterRequest, const TSharedRef<SVisualLoggerFilterWidget>&)"
  },
  {
    "label": "DECLARE_DELEGATE()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DELEGATE(FOnSimpleRequest)"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SLATE_BEGIN_ARGS(SVisualLoggerFilterWidget)"
  },
  {
    "label": "SLATE_ARGUMENT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_ARGUMENT(FName, FilterName) SLATE_ARGUMENT(FLinearColor, ColorCategory) SLATE_EVENT(FOnSimpleRequest, OnFilterChanged) SLATE_EVENT(FOnFilterRequest, OnRequestRemove) SLATE_EVENT(FOnFilterRequest, OnRequestEnableOnly) SLATE_EVENT(FOnSimpleRequest, OnRequestDisableAll) SLATE_EVENT(FOnSimpleRequest, OnRequestRemoveAll) SLATE_END_ARGS() void Construct(const FArguments& InArgs)"
  },
  {
    "label": "GetCaptionString()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetCaptionString()"
  },
  {
    "label": "GetTooltipString()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetTooltipString()"
  },
  {
    "label": "SetEnabled()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetEnabled(bool InEnabled)"
  },
  {
    "label": "IsEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsEnabled()"
  },
  {
    "label": "UnknownFilter()",
    "kind": "Method",
    "detail": "Function (const FString)",
    "insertText": "UnknownFilter(TEXT(\"UnknownFilter\"))"
  },
  {
    "label": "SetBorderBackgroundColor()",
    "kind": "Method",
    "detail": "Function (} return UnknownFilter ; } void)",
    "insertText": "SetBorderBackgroundColor(FLinearColor InColor)"
  },
  {
    "label": "FilterToggled()",
    "kind": "Method",
    "detail": "Function (BorderBackgroundColor = InColor ; } private : void)",
    "insertText": "FilterToggled(ECheckBoxState NewState)"
  },
  {
    "label": "FilterDoubleClicked()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "FilterDoubleClicked()"
  },
  {
    "label": "ExecuteIfBound()",
    "kind": "Method",
    "detail": "Function (OnRequestDisableAll .)",
    "insertText": "ExecuteIfBound()"
  },
  {
    "label": "SetEnabled()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetEnabled(true)"
  },
  {
    "label": "FilterMiddleButtonClicked()",
    "kind": "Method",
    "detail": "Function (} FReply)",
    "insertText": "FilterMiddleButtonClicked()"
  },
  {
    "label": "RemoveFilter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveFilter()"
  },
  {
    "label": "GetRightClickMenuContent()",
    "kind": "Method",
    "detail": "Function (} TSharedRef<SWidget>)",
    "insertText": "GetRightClickMenuContent()"
  },
  {
    "label": "SetVerbosityFilter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetVerbosityFilter(int32 SelectedVerbosityIndex)"
  },
  {
    "label": "DisableAllButThis()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DisableAllButThis()"
  },
  {
    "label": "EnableAllCategories()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnableAllCategories()"
  },
  {
    "label": "SharedThis()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SVisualLoggerFilterWidget> Self =)",
    "insertText": "SharedThis(this)"
  },
  {
    "label": "ExecuteIfBound()",
    "kind": "Method",
    "detail": "Function (OnRequestRemove .)",
    "insertText": "ExecuteIfBound(Self)"
  },
  {
    "label": "EnableOnly()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "EnableOnly()"
  },
  {
    "label": "DisableAllFilters()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "DisableAllFilters()"
  },
  {
    "label": "RemoveAllFilters()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "RemoveAllFilters()"
  },
  {
    "label": "IsChecked()",
    "kind": "Method",
    "detail": "Function (} ECheckBoxState)",
    "insertText": "IsChecked()"
  },
  {
    "label": "GetFilterForegroundColor()",
    "kind": "Method",
    "detail": "Function (} FSlateColor)",
    "insertText": "GetFilterForegroundColor()"
  },
  {
    "label": "GetFilterNamePadding()",
    "kind": "Method",
    "detail": "Function (} FMargin)",
    "insertText": "GetFilterNamePadding()"
  },
  {
    "label": "GetFilterNameColorAndOpacity()",
    "kind": "Method",
    "detail": "Function (} FSlateColor)",
    "insertText": "GetFilterNameColorAndOpacity()"
  },
  {
    "label": "IsChecked()",
    "kind": "Method",
    "detail": "Function (const float DimFactor = 0 . 7 5 f ; return)",
    "insertText": "IsChecked() == ECheckBoxState::Checked ? (IsHovered() ? ColorCategory * DimFactor : ColorCategory) : (IsHovered() ? FLinearColor::White : FLinearColor::White * DimFactor)"
  },
  {
    "label": "GetBorderBackgroundColor()",
    "kind": "Method",
    "detail": "Function (} FSlateColor)",
    "insertText": "GetBorderBackgroundColor()"
  }
]