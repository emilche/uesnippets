[
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "UE_DEPRECATED",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UE_DEPRECATED"
  },
  {
    "label": "UDEPRECATED_DataLayer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UDEPRECATED_DataLayer"
  },
  {
    "label": "UDeprecatedDataLayerInstance",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UDeprecatedDataLayerInstance"
  },
  {
    "label": "UENUM()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / UObjectGlobals . h \" # include \" UObject / Object . h \" # include \" ActorDataLayer . h \" # include \" Math / Color . h \" # include \" WorldPartition / DataLayer / DataLayerInstance . h \" # include \" DataLayer . generated . h \")",
    "insertText": "UENUM(BlueprintType, meta = (ScriptName = \"DataLayerStateType\")) enum class UE_DEPRECATED(5.0, \"Use EDataLayerRuntimeState instead.\")"
  },
  {
    "label": "GetDataLayerRuntimeStateFromName()",
    "kind": "Method",
    "detail": "Function (Unloaded,Loaded,Activated } ; bool)",
    "insertText": "GetDataLayerRuntimeStateFromName(const FString& InStateName, EDataLayerRuntimeState& OutState)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (OutState = EDataLayerRuntimeState::Unloaded ; return true ; } else)",
    "insertText": "if(InStateName.Equals(GetDataLayerRuntimeStateName(EDataLayerRuntimeState::Loaded), ESearchCase::IgnoreCase))"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (OutState = EDataLayerRuntimeState::Loaded ; return true ; } else)",
    "insertText": "if(InStateName.Equals(GetDataLayerRuntimeStateName(EDataLayerRuntimeState::Activated), ESearchCase::IgnoreCase))"
  },
  {
    "label": "static_assert()",
    "kind": "Method",
    "detail": "Function (OutState = EDataLayerRuntimeState::Activated ; return true ; } return false ; })",
    "insertText": "static_assert(EDataLayerRuntimeState::Unloaded < EDataLayerRuntimeState::Loaded && EDataLayerRuntimeState::Loaded < EDataLayerRuntimeState::Activated, \"Streaming Query code is dependent on this being true\")"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UCLASS(Config = Engine, PerObjectConfig, Within = WorldDataLayers, BlueprintType, Deprecated, MinimalAPI)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY()"
  },
  {
    "label": "CanEditChange()",
    "kind": "Method",
    "detail": "Function (public : # if WITH_EDITOR bool)",
    "insertText": "CanEditChange(const FProperty* Property)"
  },
  {
    "label": "PostEditChangeProperty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostEditChangeProperty(FPropertyChangedEvent& PropertyChangedEvent)"
  },
  {
    "label": "SetVisible()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetVisible(bool bIsVisible)"
  },
  {
    "label": "SetIsInitiallyVisible()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetIsInitiallyVisible(bool bIsInitiallyVisible)"
  },
  {
    "label": "SetIsRuntime()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetIsRuntime(bool bIsRuntime)"
  },
  {
    "label": "SetIsLoadedInEditor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetIsLoadedInEditor(bool bIsLoadedInEditor, bool bFromUserChange)"
  },
  {
    "label": "SetIsLocked()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetIsLocked(bool bInIsLocked)"
  },
  {
    "label": "IsLocked()",
    "kind": "Method",
    "detail": "Function (bIsLocked = bInIsLocked ; } bool)",
    "insertText": "IsLocked()"
  },
  {
    "label": "IsInitiallyLoadedInEditor()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsInitiallyLoadedInEditor()"
  },
  {
    "label": "IsLoadedInEditorChangedByUserOperation()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsLoadedInEditorChangedByUserOperation()"
  },
  {
    "label": "CanParent()",
    "kind": "Method",
    "detail": "Function (bIsLoadedInEditorChangedByUserOperation = false ; } bool)",
    "insertText": "CanParent(const UDEPRECATED_DataLayer* InParent)"
  },
  {
    "label": "SetParent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetParent(UDEPRECATED_DataLayer* InParent)"
  },
  {
    "label": "SetChildParent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetChildParent(UDEPRECATED_DataLayer* InParent)"
  },
  {
    "label": "GetDataLayerText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetDataLayerText(const UDEPRECATED_DataLayer* InDataLayer)"
  },
  {
    "label": "GetDataLayerIconName()",
    "kind": "Method",
    "detail": "Function (const TCHAR*)",
    "insertText": "GetDataLayerIconName()"
  },
  {
    "label": "GetChildren()",
    "kind": "Method",
    "detail": "Function (# endif const TArray<TObjectPtr<UDEPRECATED_DataLayer>>&)",
    "insertText": "GetChildren()"
  },
  {
    "label": "GetParent()",
    "kind": "Method",
    "detail": "Function (const UDEPRECATED_DataLayer*)",
    "insertText": "GetParent()"
  },
  {
    "label": "AddChild()",
    "kind": "Method",
    "detail": "Function (} PRAGMA_ENABLE_DEPRECATION_WARNINGS private : void)",
    "insertText": "AddChild(UDEPRECATED_DataLayer* DataLayer)"
  },
  {
    "label": "RemoveChild()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR void)",
    "insertText": "RemoveChild(UDEPRECATED_DataLayer* DataLayer)"
  },
  {
    "label": "PropagateIsRuntime()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PropagateIsRuntime()"
  }
]