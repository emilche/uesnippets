[
  {
    "label": "IMF_EXPORT_TYPE",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IMF_EXPORT_TYPE"
  },
  {
    "label": "DeepScanLineOutputFile",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DeepScanLineOutputFile"
  },
  {
    "label": "DeepScanLineInputPart()",
    "kind": "Method",
    "detail": "Function (# ifndef IMFDEEPSCANLINEINPUTPART_H_ # define IMFDEEPSCANLINEINPUTPART_H_ # include \" ImfForward . h \" # include<cstdint> OPENEXR_IMF_INTERNAL_NAMESPACE_HEADER_ENTER class IMF_EXPORT_TYPE DeepScanLineInputPart { public : IMF_EXPORT)",
    "insertText": "DeepScanLineInputPart(MultiPartInputFile& file, int partNumber)"
  },
  {
    "label": "fileName()",
    "kind": "Method",
    "detail": "Function (IMF_EXPORT const char*)",
    "insertText": "fileName()"
  },
  {
    "label": "header()",
    "kind": "Method",
    "detail": "Function (IMF_EXPORT const Header&)",
    "insertText": "header()"
  },
  {
    "label": "version()",
    "kind": "Method",
    "detail": "Function (IMF_EXPORT int)",
    "insertText": "version()"
  },
  {
    "label": "setFrameBuffer()",
    "kind": "Method",
    "detail": "Function (IMF_EXPORT void)",
    "insertText": "setFrameBuffer(const DeepFrameBuffer& frameBuffer)"
  },
  {
    "label": "frameBuffer()",
    "kind": "Method",
    "detail": "Function (IMF_EXPORT const DeepFrameBuffer&)",
    "insertText": "frameBuffer()"
  },
  {
    "label": "isComplete()",
    "kind": "Method",
    "detail": "Function (IMF_EXPORT bool)",
    "insertText": "isComplete()"
  },
  {
    "label": "readPixels()",
    "kind": "Method",
    "detail": "Function (IMF_EXPORT void)",
    "insertText": "readPixels(int scanLine1, int scanLine2)"
  },
  {
    "label": "readPixels()",
    "kind": "Method",
    "detail": "Function (IMF_EXPORT void)",
    "insertText": "readPixels(int scanLine)"
  },
  {
    "label": "readPixels()",
    "kind": "Method",
    "detail": "Function (IMF_EXPORT void)",
    "insertText": "readPixels(const char* rawPixelData, const DeepFrameBuffer& frameBuffer, int scanLine1, int scanLine2)"
  },
  {
    "label": "rawPixelData()",
    "kind": "Method",
    "detail": "Function (IMF_EXPORT void)",
    "insertText": "rawPixelData(int firstScanLine, char* pixelData, uint64_t& pixelDataSize)"
  },
  {
    "label": "readPixelSampleCounts()",
    "kind": "Method",
    "detail": "Function (IMF_EXPORT void)",
    "insertText": "readPixelSampleCounts(int scanline1, int scanline2)"
  },
  {
    "label": "readPixelSampleCounts()",
    "kind": "Method",
    "detail": "Function (IMF_EXPORT void)",
    "insertText": "readPixelSampleCounts(int scanline)"
  },
  {
    "label": "readPixelSampleCounts()",
    "kind": "Method",
    "detail": "Function (IMF_EXPORT void)",
    "insertText": "readPixelSampleCounts(const char* rawdata, const DeepFrameBuffer& frameBuffer, int scanLine1, int scanLine2)"
  },
  {
    "label": "firstScanLineInChunk()",
    "kind": "Method",
    "detail": "Function (IMF_EXPORT int)",
    "insertText": "firstScanLineInChunk(int y)"
  },
  {
    "label": "lastScanLineInChunk()",
    "kind": "Method",
    "detail": "Function (IMF_EXPORT int)",
    "insertText": "lastScanLineInChunk(int y)"
  }
]