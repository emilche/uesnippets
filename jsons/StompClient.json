[
  {
    "label": "Error",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Error"
  },
  {
    "label": "FStompClient",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStompClient"
  },
  {
    "label": "FStompFrame",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStompFrame"
  },
  {
    "label": "FOutstantdingRequestInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FOutstantdingRequestInfo"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FStompModule",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStompModule"
  },
  {
    "label": "FStompMessage",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStompMessage"
  },
  {
    "label": "FStompClient()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" IStompClient . h \" # include \" Containers / Ticker . h \" # if WITH_STOMP # include \" IStompClient . h \" # include \" IWebSocket . h \" class Error ; class FStompClient : public IStompClient,public FTSTickerObjectBase,public TSharedFromThis<FStompClient> { public : ~)",
    "insertText": "FStompClient()"
  },
  {
    "label": "Tick()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Tick(float DeltaTime)"
  },
  {
    "label": "Connect()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Connect(const FStompHeader& Header=FStompHeader())"
  },
  {
    "label": "Disconnect()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Disconnect(const FStompHeader& Header=FStompHeader())"
  },
  {
    "label": "IsConnected()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsConnected()"
  },
  {
    "label": "Subscribe()",
    "kind": "Method",
    "detail": "Function (FStompSubscriptionId)",
    "insertText": "Subscribe(const FString& Destination, const FStompSubscriptionEvent& EventCallback, const FStompRequestCompleted& CompletionCallback = FStompRequestCompleted())"
  },
  {
    "label": "Unsubscribe()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Unsubscribe(FStompSubscriptionId Subscription, const FStompRequestCompleted& CompletionCallback = FStompRequestCompleted())"
  },
  {
    "label": "Send()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Send(const FString& Destination, const FStompBuffer& Body, const FStompHeader& Header=FStompHeader(), const FStompRequestCompleted& CompletionCallback = FStompRequestCompleted())"
  },
  {
    "label": "DECLARE_DERIVED_EVENT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DERIVED_EVENT(FStompClient, IStompClient::FStompClientConnectedEvent, FStompClientConnectedEvent)"
  },
  {
    "label": "OnConnected()",
    "kind": "Method",
    "detail": "Function (FStompClientConnectedEvent&)",
    "insertText": "OnConnected()"
  },
  {
    "label": "OnConnectionError()",
    "kind": "Method",
    "detail": "Function (FStompClientConnectionErrorEvent&)",
    "insertText": "OnConnectionError()"
  },
  {
    "label": "OnError()",
    "kind": "Method",
    "detail": "Function (FStompClientErrorEvent&)",
    "insertText": "OnError()"
  },
  {
    "label": "OnClosed()",
    "kind": "Method",
    "detail": "Function (FStompClientClosedEvent&)",
    "insertText": "OnClosed()"
  },
  {
    "label": "MakeId()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "MakeId(const class FStompFrame& Frame)"
  },
  {
    "label": "WriteFrame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WriteFrame(class FStompFrame& Frame, const FStompRequestCompleted& CompletionCallback=FStompRequestCompleted())"
  },
  {
    "label": "PingServer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PingServer()"
  },
  {
    "label": "HandleWebSocketConnected()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleWebSocketConnected()"
  },
  {
    "label": "HandleWebSocketConnectionError()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleWebSocketConnectionError(const FString& Error)"
  },
  {
    "label": "HandleWebSocketConnectionClosed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleWebSocketConnectionClosed(int32 Status, const FString& Reason, bool bWasClean)"
  },
  {
    "label": "HandleWebSocketData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleWebSocketData(const void* Data, SIZE_T Length, SIZE_T BytesRemaining)"
  },
  {
    "label": "HandleIncomingFrame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleIncomingFrame(const uint8* Data, SIZE_T Length)"
  },
  {
    "label": "HandleDisconnectCompleted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleDisconnectCompleted(bool bSuccess, const FString& Error)"
  }
]