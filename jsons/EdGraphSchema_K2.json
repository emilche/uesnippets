[
  {
    "label": "AActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AActor"
  },
  {
    "label": "FKismetCompilerContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FKismetCompilerContext"
  },
  {
    "label": "FMenuBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMenuBuilder"
  },
  {
    "label": "FProperty",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FProperty"
  },
  {
    "label": "UBlueprint",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBlueprint"
  },
  {
    "label": "UClass",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UClass"
  },
  {
    "label": "UEnum",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEnum"
  },
  {
    "label": "UK2Node",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UK2Node"
  },
  {
    "label": "UScriptStruct",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UScriptStruct"
  },
  {
    "label": "UToolMenu",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UToolMenu"
  },
  {
    "label": "FAssetData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAssetData"
  },
  {
    "label": "FToolMenuSection",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FToolMenuSection"
  },
  {
    "label": "TObjectPtr",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TObjectPtr"
  },
  {
    "label": "BLUEPRINTGRAPH_API",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "BLUEPRINTGRAPH_API"
  },
  {
    "label": "BLUEPRINTGRAPH_API",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "BLUEPRINTGRAPH_API"
  },
  {
    "label": "is",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "is"
  },
  {
    "label": "is",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "is"
  },
  {
    "label": "can",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "can"
  },
  {
    "label": "will",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "will"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "cannot",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "cannot"
  },
  {
    "label": "cannot",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "cannot"
  },
  {
    "label": "ignore",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ignore"
  },
  {
    "label": "implements",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "implements"
  },
  {
    "label": "metadata",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "metadata"
  },
  {
    "label": "param",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "param"
  },
  {
    "label": "types",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "types"
  },
  {
    "label": "as",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "as"
  },
  {
    "label": "values",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "values"
  },
  {
    "label": "marked",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "marked"
  },
  {
    "label": "should",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "should"
  },
  {
    "label": "param",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "param"
  },
  {
    "label": "FBlueprintCallableFunctionRedirect",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBlueprintCallableFunctionRedirect"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "BLUEPRINTGRAPH_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BLUEPRINTGRAPH_API"
  },
  {
    "label": "passed",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "passed"
  },
  {
    "label": "being",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "being"
  },
  {
    "label": "metadata",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "metadata"
  },
  {
    "label": "BLUEPRINTGRAPH_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BLUEPRINTGRAPH_API"
  },
  {
    "label": "EEdGraphPinDirection",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EEdGraphPinDirection"
  },
  {
    "label": "UToolMenu",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UToolMenu"
  },
  {
    "label": "UGraphNodeContextMenuContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UGraphNodeContextMenuContext"
  },
  {
    "label": "UK2Node_Variable",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UK2Node_Variable"
  },
  {
    "label": "UK2Node_VariableGet",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UK2Node_VariableGet"
  },
  {
    "label": "UEdGraph",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEdGraph"
  },
  {
    "label": "UK2Node_VariableSet",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UK2Node_VariableSet"
  },
  {
    "label": "UEdGraph",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEdGraph"
  },
  {
    "label": "bool",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "bool"
  },
  {
    "label": "FCreateSplitPinNodeParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCreateSplitPinNodeParams"
  },
  {
    "label": "FKismetCompilerContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FKismetCompilerContext"
  },
  {
    "label": "has",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "has"
  },
  {
    "label": "EFunctionType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EFunctionType"
  },
  {
    "label": "EDelegateFilterMode",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EDelegateFilterMode"
  },
  {
    "label": "is",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "is"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "is"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "is"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "FSearchForAutocastFunctionResults",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSearchForAutocastFunctionResults"
  },
  {
    "label": "UK2Node",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UK2Node"
  },
  {
    "label": "UK2Node",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UK2Node"
  },
  {
    "label": "FFindSpecializedConversionNodeResults",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFindSpecializedConversionNodeResults"
  },
  {
    "label": "UK2Node",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UK2Node"
  },
  {
    "label": "FKismetCompilerContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FKismetCompilerContext"
  },
  {
    "label": "UK2Node_Variable",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UK2Node_Variable"
  },
  {
    "label": "UK2Node_Variable",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UK2Node_Variable"
  },
  {
    "label": "UK2Node_Variable",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UK2Node_Variable"
  },
  {
    "label": "UK2Node_Variable",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UK2Node_Variable"
  },
  {
    "label": "Type()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "Type(\"FEdGraphSchemaAction_K2Struct\")"
  },
  {
    "label": "StaticGetTypeId()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "StaticGetTypeId()"
  },
  {
    "label": "GenerateDescription()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GenerateDescription()"
  },
  {
    "label": "SelectAllNodesInDirection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SelectAllNodesInDirection(TEnumAsByte<enum EEdGraphPinDirection> InDirection, UEdGraph* Graph, UEdGraphPin* InGraphPin)"
  },
  {
    "label": "ConfigureVarNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConfigureVarNode(class UK2Node_Variable* InVarNode, FName InVariableName, UStruct* InVariableSource, UBlueprint* InTargetBlueprint)"
  },
  {
    "label": "IsAutoCreateRefTerm()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsAutoCreateRefTerm(const UEdGraphPin* Pin)"
  },
  {
    "label": "IsConstructionScript()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsConstructionScript(const UEdGraph* TestEdGraph)"
  },
  {
    "label": "GetPropertyCategoryInfo()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetPropertyCategoryInfo(const FProperty* TestProperty, FName& OutCategory, FName& OutSubCategory, UObject*& OutSubCategoryObject, bool& bOutIsWeakPointer)"
  },
  {
    "label": "HasWildcardParams()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasWildcardParams(const UFunction* Function)"
  },
  {
    "label": "IsWildcardProperty()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsWildcardProperty(const FProperty* ParamProperty)"
  },
  {
    "label": "ReplaceSelectedNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReplaceSelectedNode(UEdGraphNode* SourceNode, AActor* TargetActor)"
  },
  {
    "label": "FunctionCanBePlacedAsEvent()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "FunctionCanBePlacedAsEvent(const UFunction* InFunction)"
  },
  {
    "label": "FunctionCanBeUsedInDelegate()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "FunctionCanBeUsedInDelegate(const UFunction* InFunction)"
  },
  {
    "label": "CanUserKismetCallFunction()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanUserKismetCallFunction(const UFunction* Function)"
  },
  {
    "label": "HasFunctionAnyOutputParameter()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasFunctionAnyOutputParameter(const UFunction* Function)"
  },
  {
    "label": "CanUserKismetAccessVariable()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanUserKismetAccessVariable(const FProperty* Property, const UClass* InClass, EDelegateFilterMode FilterMode)"
  },
  {
    "label": "CanKismetOverrideFunction()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanKismetOverrideFunction(const UFunction* Function)"
  },
  {
    "label": "GetFriendlySignatureName()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetFriendlySignatureName(const UFunction* Function)"
  },
  {
    "label": "IsAllowableBlueprintVariableType()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsAllowableBlueprintVariableType(const UEnum* InEnum)"
  },
  {
    "label": "IsAllowableBlueprintVariableType()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsAllowableBlueprintVariableType(const UClass* InClass, bool bAssumeBlueprintType = false)"
  },
  {
    "label": "IsAllowableBlueprintVariableType()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsAllowableBlueprintVariableType(const UScriptStruct *InStruct, bool bForInternalUse = false)"
  },
  {
    "label": "IsPropertyExposedOnSpawn()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsPropertyExposedOnSpawn(const FProperty* Property)"
  },
  {
    "label": "GetAutoEmitTermParameters()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetAutoEmitTermParameters(const UFunction* Function, TArray<FString>& AutoEmitParameterNames)"
  },
  {
    "label": "TypeToText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "TypeToText(const FProperty* const Property)"
  },
  {
    "label": "TerminalTypeToText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "TerminalTypeToText(const FName Category, const FName SubCategory, UObject* SubCategoryObject, bool bIsWeakPtr)"
  },
  {
    "label": "TypeToText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "TypeToText(const FEdGraphPinType& Type)"
  },
  {
    "label": "GetCategoryText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetCategoryText(const FName Category, const bool bForMenu = false)"
  },
  {
    "label": "GetCategoryText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetCategoryText(FName Category, FName SubCategory, bool bForMenu = false)"
  },
  {
    "label": "FindFunctionParameterDefaultValue()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "FindFunctionParameterDefaultValue(const UFunction* Function, const FProperty* Param, FString& OutString)"
  },
  {
    "label": "ValidateExistingConnections()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ValidateExistingConnections(UEdGraphPin* Pin)"
  },
  {
    "label": "CalculateAveragePositionBetweenNodes()",
    "kind": "Method",
    "detail": "Function (FVector2D)",
    "insertText": "CalculateAveragePositionBetweenNodes(UEdGraphPin* InputPin, UEdGraphPin* OutputPin)"
  },
  {
    "label": "EstimateNodeHeight()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "EstimateNodeHeight( UEdGraphNode* Node )"
  },
  {
    "label": "OnCreateNonExistentVariable()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnCreateNonExistentVariable(class UK2Node_Variable* Variable, UBlueprint* OwnerBlueprint)"
  },
  {
    "label": "OnCreateNonExistentLocalVariable()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnCreateNonExistentLocalVariable(class UK2Node_Variable* Variable, UBlueprint* OwnerBlueprint)"
  },
  {
    "label": "OnReplaceVariableForVariableNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnReplaceVariableForVariableNode(class UK2Node_Variable* Variable, UBlueprint* OwnerBlueprint, FName VariableName, bool bIsSelfMember)"
  },
  {
    "label": "GetReplaceVariableMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetReplaceVariableMenu(UToolMenu* Menu, class UK2Node_Variable* Variable, UBlueprint* OwnerBlueprint, bool bReplaceExistingVariable = false)"
  },
  {
    "label": "Shutdown()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Shutdown()"
  }
]