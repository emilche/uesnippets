[
  {
    "label": "UWorld",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UWorld"
  },
  {
    "label": "UAudioWidgetSubsystem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAudioWidgetSubsystem"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" AssetRegistry / AssetData . h \" # include \" Audio / SoundEffectPresetWidgetInterface . h \" # include \" Audio / SoundSubmixWidgetInterface . h \" # include \" Blueprint / UserWidget . h \" # include \" Sound / SoundEffectPreset . h \" # include \" Sound / SoundSubmix . h \" # include \" Subsystems / EngineSubsystem . h \" # include \" Templates / Function . h \" # include \" UObject / Class . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / UObjectGlobals . h \" # include \" AudioWidgetSubsystem . generated . h \" class UWorld ;)",
    "insertText": "UCLASS(MinimalAPI)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() private: static const TArray<FAssetData> GetBlueprintAssetData(UClass* InInterfaceClass)"
  },
  {
    "label": "ImplementsInterface()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ImplementsInterface(const FAssetData& InAssetData, UClass* InInterfaceClass)"
  },
  {
    "label": "CreateUserWidgets()",
    "kind": "Method",
    "detail": "Function (public : TArray<UUserWidget*>)",
    "insertText": "CreateUserWidgets(UWorld& InWorld, TSubclassOf<UInterface> InWidgetInterface, TFunction<bool(UUserWidget*)> FilterFunction = TFunction<bool(UUserWidget*)>())"
  }
]