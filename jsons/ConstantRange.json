[
  {
    "label": "ConstantRange",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ConstantRange"
  },
  {
    "label": "ConstantRange()",
    "kind": "Method",
    "detail": "Function (# ifndef LLVM_IR_CONSTANTRANGE_H # define LLVM_IR_CONSTANTRANGE_H # include \" llvm / ADT / APInt . h \" # include \" llvm / IR / InstrTypes . h \" # include \" llvm / Support / DataTypes . h \" namespace llvm { class ConstantRange { APInt Lower,Upper ; typedef APInt APIntMoveTy ; public :)",
    "insertText": "ConstantRange(uint32_t BitWidth, bool isFullSet = true)"
  },
  {
    "label": "ConstantRange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConstantRange(APIntMoveTy Value)"
  },
  {
    "label": "ConstantRange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConstantRange(APIntMoveTy Lower, APIntMoveTy Upper)"
  },
  {
    "label": "makeAllowedICmpRegion()",
    "kind": "Method",
    "detail": "Function (ConstantRange)",
    "insertText": "makeAllowedICmpRegion(CmpInst::Predicate Pred, const ConstantRange &Other)"
  },
  {
    "label": "makeSatisfyingICmpRegion()",
    "kind": "Method",
    "detail": "Function (ConstantRange)",
    "insertText": "makeSatisfyingICmpRegion(CmpInst::Predicate Pred, const ConstantRange &Other)"
  },
  {
    "label": "getLower()",
    "kind": "Method",
    "detail": "Function (const APInt&)",
    "insertText": "getLower()"
  },
  {
    "label": "isFullSet()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "isFullSet()"
  },
  {
    "label": "isEmptySet()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "isEmptySet()"
  },
  {
    "label": "isWrappedSet()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "isWrappedSet()"
  },
  {
    "label": "isSignWrappedSet()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "isSignWrappedSet()"
  },
  {
    "label": "contains()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "contains(const APInt &Val)"
  },
  {
    "label": "contains()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "contains(const ConstantRange &CR)"
  },
  {
    "label": "getSingleElement()",
    "kind": "Method",
    "detail": "Function (const APInt*)",
    "insertText": "getSingleElement()"
  },
  {
    "label": "getSetSize()",
    "kind": "Method",
    "detail": "Function (} APInt)",
    "insertText": "getSetSize()"
  },
  {
    "label": "getUnsignedMax()",
    "kind": "Method",
    "detail": "Function (APInt)",
    "insertText": "getUnsignedMax()"
  },
  {
    "label": "getUnsignedMin()",
    "kind": "Method",
    "detail": "Function (APInt)",
    "insertText": "getUnsignedMin()"
  },
  {
    "label": "getSignedMax()",
    "kind": "Method",
    "detail": "Function (APInt)",
    "insertText": "getSignedMax()"
  },
  {
    "label": "getSignedMin()",
    "kind": "Method",
    "detail": "Function (APInt)",
    "insertText": "getSignedMin()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "operator(const ConstantRange &CR)"
  },
  {
    "label": "subtract()",
    "kind": "Method",
    "detail": "Function (} ConstantRange)",
    "insertText": "subtract(const APInt &CI)"
  },
  {
    "label": "difference()",
    "kind": "Method",
    "detail": "Function (ConstantRange)",
    "insertText": "difference(const ConstantRange &CR)"
  },
  {
    "label": "intersectWith()",
    "kind": "Method",
    "detail": "Function (ConstantRange)",
    "insertText": "intersectWith(const ConstantRange &CR)"
  },
  {
    "label": "unionWith()",
    "kind": "Method",
    "detail": "Function (ConstantRange)",
    "insertText": "unionWith(const ConstantRange &CR)"
  },
  {
    "label": "zeroExtend()",
    "kind": "Method",
    "detail": "Function (ConstantRange)",
    "insertText": "zeroExtend(uint32_t BitWidth)"
  },
  {
    "label": "signExtend()",
    "kind": "Method",
    "detail": "Function (ConstantRange)",
    "insertText": "signExtend(uint32_t BitWidth)"
  },
  {
    "label": "truncate()",
    "kind": "Method",
    "detail": "Function (ConstantRange)",
    "insertText": "truncate(uint32_t BitWidth)"
  },
  {
    "label": "zextOrTrunc()",
    "kind": "Method",
    "detail": "Function (ConstantRange)",
    "insertText": "zextOrTrunc(uint32_t BitWidth)"
  },
  {
    "label": "sextOrTrunc()",
    "kind": "Method",
    "detail": "Function (ConstantRange)",
    "insertText": "sextOrTrunc(uint32_t BitWidth)"
  },
  {
    "label": "add()",
    "kind": "Method",
    "detail": "Function (ConstantRange)",
    "insertText": "add(const ConstantRange &Other)"
  },
  {
    "label": "sub()",
    "kind": "Method",
    "detail": "Function (ConstantRange)",
    "insertText": "sub(const ConstantRange &Other)"
  },
  {
    "label": "multiply()",
    "kind": "Method",
    "detail": "Function (ConstantRange)",
    "insertText": "multiply(const ConstantRange &Other)"
  },
  {
    "label": "smax()",
    "kind": "Method",
    "detail": "Function (ConstantRange)",
    "insertText": "smax(const ConstantRange &Other)"
  },
  {
    "label": "umax()",
    "kind": "Method",
    "detail": "Function (ConstantRange)",
    "insertText": "umax(const ConstantRange &Other)"
  },
  {
    "label": "udiv()",
    "kind": "Method",
    "detail": "Function (ConstantRange)",
    "insertText": "udiv(const ConstantRange &Other)"
  },
  {
    "label": "binaryAnd()",
    "kind": "Method",
    "detail": "Function (ConstantRange)",
    "insertText": "binaryAnd(const ConstantRange &Other)"
  },
  {
    "label": "binaryOr()",
    "kind": "Method",
    "detail": "Function (ConstantRange)",
    "insertText": "binaryOr(const ConstantRange &Other)"
  },
  {
    "label": "shl()",
    "kind": "Method",
    "detail": "Function (ConstantRange)",
    "insertText": "shl(const ConstantRange &Other)"
  },
  {
    "label": "lshr()",
    "kind": "Method",
    "detail": "Function (ConstantRange)",
    "insertText": "lshr(const ConstantRange &Other)"
  },
  {
    "label": "inverse()",
    "kind": "Method",
    "detail": "Function (ConstantRange)",
    "insertText": "inverse()"
  },
  {
    "label": "print()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "print(raw_ostream &OS)"
  },
  {
    "label": "dump()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "dump()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} ; raw_ostream&)",
    "insertText": "operator(raw_ostream &OS, const ConstantRange &CR)"
  },
  {
    "label": "print()",
    "kind": "Method",
    "detail": "Function (CR .)",
    "insertText": "print(OS)"
  }
]