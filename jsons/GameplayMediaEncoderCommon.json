[
  {
    "label": "FMemoryCheckpoint",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMemoryCheckpoint"
  },
  {
    "label": "WMFMEDIA_SUPPORTED_PLATFORM()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Stats / Stats . h \" # include \" Logging / LogMacros . h \" # include \" RHIStaticStates . h \" # include \" HAL / ThreadSafeBool . h \" # include \" HAL / ThreadSafeCounter . h \" # include \" HAL / Thread . h \" # include \" HAL / Event . h \" # include \" Misc / ScopeExit . h \" # include \" ShaderCore . h \" # include \" ProfilingDebugging / CsvProfiler . h \" # include \" RHI . h \" # include \" RHIResources . h \" # define LIVESTREAMING 0 # if PLATFORM_WINDOWS # include \" Templates / RefCounting . h \" # endif # ifndef WMFMEDIA_SUPPORTED_PLATFORM # define)",
    "insertText": "WMFMEDIA_SUPPORTED_PLATFORM(PLATFORM_WINDOWS && (WINVER >= 0x0600 ) && !UE_SERVER) #endif DECLARE_LOG_CATEGORY_EXTERN(GameplayMediaEncoder, Log, VeryVerbose)"
  },
  {
    "label": "MemoryCheckpoint()",
    "kind": "Method",
    "detail": "Function (struct FMemoryCheckpoint { FString Name ; float UsedPhysicalMB ; float DeltaMB ; float AccumulatedMB ; } ; TArray<FMemoryCheckpoint> gMemoryCheckpoints ; uint64)",
    "insertText": "MemoryCheckpoint(const FString& Name)"
  },
  {
    "label": "LogMemoryCheckpoints()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LogMemoryCheckpoints(const FString& Name)"
  }
]