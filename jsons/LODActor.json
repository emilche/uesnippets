[
  {
    "label": "UStaticMesh",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UStaticMesh"
  },
  {
    "label": "UHLODProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UHLODProxy"
  },
  {
    "label": "UHLODProxyDesc",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UHLODProxyDesc"
  },
  {
    "label": "FHLODInstancingKey",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FHLODInstancingKey"
  },
  {
    "label": "ALODActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ALODActor"
  },
  {
    "label": "UHLODProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UHLODProxy"
  },
  {
    "label": "UHLODProxyDesc",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UHLODProxyDesc"
  },
  {
    "label": "PauseDitherTransition()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PauseDitherTransition()"
  },
  {
    "label": "StartDitherTransition()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StartDitherTransition()"
  },
  {
    "label": "SetStaticMesh()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetStaticMesh(UStaticMesh* InStaticMesh)"
  },
  {
    "label": "AddInstances()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddInstances(const UStaticMesh* InStaticMesh, const UMaterialInterface* InMaterial, const TArray<FTransform>& InTransforms)"
  },
  {
    "label": "AddInstances()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddInstances(const UStaticMesh* InStaticMesh, const UMaterialInterface* InMaterial, const TArray<FTransform>& InTransforms, const TArray<FCustomPrimitiveData>& InCustomPrimitiveData)"
  },
  {
    "label": "ClearInstances()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearInstances()"
  },
  {
    "label": "SetDrawDistance()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDrawDistance(float InDistance)"
  },
  {
    "label": "SetLODParent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetLODParent(UPrimitiveComponent* InLODParent, float InParentDrawDistance, bool bInApplyToImposters)"
  },
  {
    "label": "ForceUnbuilt()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ForceUnbuilt()"
  },
  {
    "label": "AddSubActor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddSubActor(AActor* InActor)"
  },
  {
    "label": "AddSubActors()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddSubActors(const TArray<AActor*>& InActors)"
  },
  {
    "label": "RemoveSubActor()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RemoveSubActor(AActor* InActor)"
  },
  {
    "label": "ToggleForceView()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ToggleForceView()"
  },
  {
    "label": "SetForcedView()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetForcedView(const bool InState)"
  },
  {
    "label": "SetHiddenFromEditorView()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetHiddenFromEditorView(const bool InState, const int32 ForceLODLevel)"
  },
  {
    "label": "GetNumTrianglesInSubActors()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetNumTrianglesInSubActors()"
  },
  {
    "label": "GetNumTrianglesInMergedMesh()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetNumTrianglesInMergedMesh()"
  },
  {
    "label": "UpdateSubActorLODParents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateSubActorLODParents()"
  },
  {
    "label": "DetermineShadowingFlags()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DetermineShadowingFlags()"
  },
  {
    "label": "CleanSubActorArray()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CleanSubActorArray()"
  },
  {
    "label": "RecalculateDrawingDistance()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RecalculateDrawingDistance(const float TransitionScreenSize)"
  },
  {
    "label": "UpdateProxyDesc()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UpdateProxyDesc()"
  },
  {
    "label": "OnCVarsChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnCVarsChanged()"
  },
  {
    "label": "ParseOverrideDistancesCVar()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ParseOverrideDistancesCVar()"
  },
  {
    "label": "UpdateOverrideTransitionDistance()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateOverrideTransitionDistance()"
  },
  {
    "label": "UpdateRegistrationToMatchMaximumLODLevel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateRegistrationToMatchMaximumLODLevel()"
  },
  {
    "label": "SetupComponent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetupComponent(UStaticMeshComponent* InComponent)"
  },
  {
    "label": "SetComponentsMinDrawDistance()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetComponentsMinDrawDistance(float InMinDrawDistance, bool bInMarkRenderStateDirty)"
  },
  {
    "label": "RegisterMeshComponents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterMeshComponents()"
  },
  {
    "label": "UnregisterMeshComponents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterMeshComponents()"
  },
  {
    "label": "OnSubActorEndPlay()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSubActorEndPlay(AActor* Actor, EEndPlayReason::Type Reason)"
  },
  {
    "label": "ShouldUseInstancing()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldUseInstancing(const UStaticMeshComponent* InComponent)"
  }
]