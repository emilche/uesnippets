[
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FJsonStringifyOptions",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FJsonStringifyOptions"
  },
  {
    "label": "UENUM()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Utf8String . h \" # include \" UObject / ObjectMacros . h \" # include \" Stringify . generated . h \" class UObject ;)",
    "insertText": "UENUM(BlueprintType, Flags, meta = (Bitflags, UseEnumValuesAsMaskValuesInEditor = \"true\"))"
  },
  {
    "label": "ENUM_CLASS_FLAGS()",
    "kind": "Method",
    "detail": "Function (Default = 0,FilterEditorOnlyData = 1<<1,} ;)",
    "insertText": "ENUM_CLASS_FLAGS(EJsonStringifyFlags)"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "USTRUCT(BlueprintType)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() FJsonStringifyOptions(EJsonStringifyFlags InFlags) : Flags(InFlags)"
  },
  {
    "label": "FJsonStringifyOptions()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FJsonStringifyOptions()"
  },
  {
    "label": "FJsonStringifyOptions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FJsonStringifyOptions(const FJsonStringifyOptions&)"
  },
  {
    "label": "FJsonStringifyOptions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FJsonStringifyOptions(FJsonStringifyOptions&&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FJsonStringifyOptions&)",
    "insertText": "operator(const FJsonStringifyOptions&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FJsonStringifyOptions&)",
    "insertText": "operator(FJsonStringifyOptions&&)"
  },
  {
    "label": "Stringify()",
    "kind": "Method",
    "detail": "Function (} ; namespace UE::JsonObjectGraph { FUtf8String)",
    "insertText": "Stringify(TConstArrayView<const UObject*> RootObjects, const FJsonStringifyOptions& Options = FJsonStringifyOptions())"
  }
]