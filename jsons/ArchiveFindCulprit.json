[
  {
    "label": "FArchive",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FArchive"
  },
  {
    "label": "FProperty",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FProperty"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "FArchiveFindCulprit",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FArchiveFindCulprit"
  },
  {
    "label": "TArray",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TArray"
  },
  {
    "label": "FArchiveFindCulprit()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" Containers / UnrealString . h \" # include \" CoreMinimal . h \" # include \" HAL / Platform . h \" # include \" Serialization / ArchiveUObject . h \" class FArchive ; class FProperty ; class UObject ; class FArchiveFindCulprit : public FArchiveUObject { public :)",
    "insertText": "FArchiveFindCulprit(UObject* InFind, UObject* Src, bool InPretendSaving)"
  },
  {
    "label": "GetCount()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetCount()"
  },
  {
    "label": "GetArchiveName()",
    "kind": "Method",
    "detail": "Function (Properties = Referencers ; return Count ; } FString)",
    "insertText": "GetArchiveName()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} protected : UObject* Find ; int32 Count ; bool PretendSaving ; class TArray<const FProperty*> Referencers ; private : FArchive&)",
    "insertText": "operator(class UObject*& Obj)"
  }
]