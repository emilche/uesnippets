[
  {
    "label": "FrameRateEstimator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FrameRateEstimator"
  },
  {
    "label": "FrameRateEstimator()",
    "kind": "Method",
    "detail": "Function (# ifndef COMMON_VIDEO_FRAME_RATE_ESTIMATOR_H_ # define COMMON_VIDEO_FRAME_RATE_ESTIMATOR_H_ # include<deque> # include \" absl / types / optional . h \" # include \" api / units / time_delta . h \" # include \" api / units / timestamp . h \" namespace webrtc { class FrameRateEstimator { public :)",
    "insertText": "FrameRateEstimator(TimeDelta averaging_window)"
  },
  {
    "label": "OnFrame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnFrame(Timestamp time)"
  },
  {
    "label": "GetAverageFps()",
    "kind": "Method",
    "detail": "Function (absl::optional<double>)",
    "insertText": "GetAverageFps()"
  },
  {
    "label": "GetAverageFps()",
    "kind": "Method",
    "detail": "Function (absl::optional<double>)",
    "insertText": "GetAverageFps(Timestamp now)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "CullOld()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "CullOld(Timestamp now)"
  }
]