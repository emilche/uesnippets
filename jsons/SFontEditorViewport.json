[
  {
    "label": "FFontEditorViewportClient",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFontEditorViewportClient"
  },
  {
    "label": "FSceneViewport",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSceneViewport"
  },
  {
    "label": "FText",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FText"
  },
  {
    "label": "IFontEditor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IFontEditor"
  },
  {
    "label": "SScrollBar",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SScrollBar"
  },
  {
    "label": "SViewport",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SViewport"
  },
  {
    "label": "FColor",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FColor"
  },
  {
    "label": "SFontEditorViewport",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SFontEditorViewport"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" HAL / Platform . h \" # include \" Layout / Visibility . h \" # include \" Templates / SharedPointer . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Widgets / SCompoundWidget . h \" class FFontEditorViewportClient ; class FSceneViewport ; class FText ; class IFontEditor ; class SScrollBar ; class SViewport ; struct FColor ; class SFontEditorViewport : public SCompoundWidget { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SFontEditorViewport ) : _IsPreview(false)"
  },
  {
    "label": "SLATE_ARGUMENT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_ARGUMENT(TWeakPtr<IFontEditor>, FontEditor) SLATE_ARGUMENT(bool, IsPreview) SLATE_END_ARGS() ~SFontEditorViewport()"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct(const FArguments& InArgs)"
  },
  {
    "label": "RefreshViewport()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RefreshViewport()"
  },
  {
    "label": "GetCurrentSelectedPage()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetCurrentSelectedPage()"
  },
  {
    "label": "SetPreviewText()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPreviewText(const FText& PreviewText)"
  },
  {
    "label": "SetPreviewBackgroundColor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPreviewBackgroundColor(const FColor& BackgroundColor)"
  },
  {
    "label": "GetPreviewBackgroundColor()",
    "kind": "Method",
    "detail": "Function (const FColor&)",
    "insertText": "GetPreviewBackgroundColor()"
  },
  {
    "label": "SetPreviewForegroundColor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPreviewForegroundColor(const FColor& ForgroundColor)"
  },
  {
    "label": "GetPreviewForegroundColor()",
    "kind": "Method",
    "detail": "Function (const FColor&)",
    "insertText": "GetPreviewForegroundColor()"
  },
  {
    "label": "SetPreviewFontScale()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPreviewFontScale(float InScale)"
  },
  {
    "label": "GetPreviewFontScale()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetPreviewFontScale()"
  },
  {
    "label": "SetPreviewFontMetrics()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPreviewFontMetrics(const bool InDrawFontMetrics)"
  },
  {
    "label": "GetPreviewFontMetrics()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetPreviewFontMetrics()"
  },
  {
    "label": "GetFontEditor()",
    "kind": "Method",
    "detail": "Function (TWeakPtr<IFontEditor>)",
    "insertText": "GetFontEditor()"
  },
  {
    "label": "IsPreviewViewport()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsPreviewViewport()"
  },
  {
    "label": "GetViewport()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FSceneViewport>)",
    "insertText": "GetViewport()"
  },
  {
    "label": "GetViewportWidget()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<SViewport>)",
    "insertText": "GetViewportWidget()"
  },
  {
    "label": "GetVerticalScrollBar()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<SScrollBar>)",
    "insertText": "GetVerticalScrollBar()"
  },
  {
    "label": "GetHorizontalScrollBar()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<SScrollBar>)",
    "insertText": "GetHorizontalScrollBar()"
  },
  {
    "label": "GetViewportVerticalScrollBarVisibility()",
    "kind": "Method",
    "detail": "Function (protected : EVisibility)",
    "insertText": "GetViewportVerticalScrollBarVisibility()"
  },
  {
    "label": "GetViewportHorizontalScrollBarVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "GetViewportHorizontalScrollBarVisibility()"
  },
  {
    "label": "OnViewportVerticalScrollBarScrolled()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnViewportVerticalScrollBarScrolled(float InScrollOffsetFraction)"
  },
  {
    "label": "OnViewportHorizontalScrollBarScrolled()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnViewportHorizontalScrollBarScrolled(float InScrollOffsetFraction)"
  }
]