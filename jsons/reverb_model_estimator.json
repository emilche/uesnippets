[
  {
    "label": "ApmDataDumper",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ApmDataDumper"
  },
  {
    "label": "ReverbModelEstimator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ReverbModelEstimator"
  },
  {
    "label": "ReverbModelEstimator()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_AUDIO_PROCESSING_AEC3_REVERB_MODEL_ESTIMATOR_H_ # define MODULES_AUDIO_PROCESSING_AEC3_REVERB_MODEL_ESTIMATOR_H_ # include<array> # include<memory> # include<vector> # include \" absl / types / optional . h \" # include \" api / array_view . h \" # include \" api / audio / echo_canceller3_config . h \" # include \" modules / audio_processing / aec3 / aec3_common . h \" # include \" modules / audio_processing / aec3 / reverb_decay_estimator . h \" # include \" modules / audio_processing / aec3 / reverb_frequency_response . h \" namespace webrtc { class ApmDataDumper ; class ReverbModelEstimator { public :)",
    "insertText": "ReverbModelEstimator(const EchoCanceller3Config& config, size_t num_capture_channels)"
  },
  {
    "label": "ReverbModelEstimator()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "ReverbModelEstimator()"
  },
  {
    "label": "Update()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Update(rtc::ArrayView<const std::vector<float>> impulse_responses, rtc::ArrayView<const std::vector<std::array<float, kFftLengthBy2Plus1>>> frequency_responses, rtc::ArrayView<const absl::optional<float>> linear_filter_qualities, rtc::ArrayView<const int> filter_delays_blocks, const std::vector<bool>& usable_linear_estimates, bool stationary_block)"
  },
  {
    "label": "ReverbDecay()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "ReverbDecay(bool mild)"
  },
  {
    "label": "GetReverbFrequencyResponse()",
    "kind": "Method",
    "detail": "Function (} rtc::ArrayView<const float>)",
    "insertText": "GetReverbFrequencyResponse()"
  },
  {
    "label": "Dump()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Dump(ApmDataDumper* data_dumper)"
  },
  {
    "label": "Dump()",
    "kind": "Method",
    "detail": "Function (reverb_decay_estimators_ [ 0 ] ->)",
    "insertText": "Dump(data_dumper)"
  }
]