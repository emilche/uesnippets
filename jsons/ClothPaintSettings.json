[
  {
    "label": "UClothingAssetCommon",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UClothingAssetCommon"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "UClothPainterSettings",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UClothPainterSettings"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_ThreeParams()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" MeshPaintSettings . h \" # include \" Delegates / Delegate . h \" # include \" ClothPaintSettings . generated . h \" class UClothingAssetCommon ;)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_ThreeParams(FOnClothingAssetSelectionChangedMulticaster, UClothingAssetCommon*, int32, int32)"
  },
  {
    "label": "UENUM()",
    "kind": "Method",
    "detail": "Function (typedef FOnClothingAssetSelectionChangedMulticaster::FDelegate FOnClothingAssetSelectionChanged ;)",
    "insertText": "UENUM()"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (MaxDistances,BackstopDistances,BackstopRadius } ;)",
    "insertText": "UCLASS()"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: UClothPainterSettings() : UMeshPaintSettings() , ViewMin(0.0f) , ViewMax(100.0f) , bAutoViewRange(false) , AutoCalculatedViewMin(0.0f) , AutoCalculatedViewMax(0.0f) , bFlipNormal(false) , bCullBackface(false) , Opacity(0.8f)"
  },
  {
    "label": "GetViewMin()",
    "kind": "Method",
    "detail": "Function (} float)",
    "insertText": "GetViewMin()"
  },
  {
    "label": "Clamp()",
    "kind": "Method",
    "detail": "Function (float TempViewMin = bAutoViewRange ? AutoCalculatedViewMin : ViewMin ; return)",
    "insertText": "Clamp(TempViewMin, SMALL_NUMBER, MAX_flt)"
  },
  {
    "label": "GetViewMax()",
    "kind": "Method",
    "detail": "Function (} float)",
    "insertText": "GetViewMax()"
  }
]