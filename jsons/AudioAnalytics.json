[
  {
    "label": "RecordEvent_Usage()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" Containers / UnrealString . h \" # include \" EngineAnalytics . h \" # include \" HAL / Platform . h \" # include \" UObject / TopLevelAssetPath . h \" # define UE_AUDIO_ENABLE_ANALYTICS 1 namespace Audio { namespace Analytics { void)",
    "insertText": "RecordEvent_Usage(FString&& InEventName, const TArray<FAnalyticsEventAttribute>& InEventAttributes = TArray<FAnalyticsEventAttribute>())"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (# ifdef UE_AUDIO_ENABLE_ANALYTICS)",
    "insertText": "if(FEngineAnalytics::IsAvailable())"
  },
  {
    "label": "GetProvider()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetProvider().RecordEvent(TEXT(\"Audio.Usage.\") + MoveTemp(InEventName), InEventAttributes)"
  }
]