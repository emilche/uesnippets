[
  {
    "label": "IEditableSkeleton",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IEditableSkeleton"
  },
  {
    "label": "IPersonaToolkit",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPersonaToolkit"
  },
  {
    "label": "ISkeletonTree",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISkeletonTree"
  },
  {
    "label": "SPersonaDetails",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SPersonaDetails"
  },
  {
    "label": "SToolTip",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SToolTip"
  },
  {
    "label": "FPersonaModes",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPersonaModes"
  },
  {
    "label": "FPersonaModeSharedData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPersonaModeSharedData"
  },
  {
    "label": "FPersonaAppMode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPersonaAppMode"
  },
  {
    "label": "FPersona",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPersona"
  },
  {
    "label": "FMorphTargetTabSummoner",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMorphTargetTabSummoner"
  },
  {
    "label": "FAssetEditorToolkit",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAssetEditorToolkit"
  },
  {
    "label": "IPersonaPreviewScene",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPersonaPreviewScene"
  },
  {
    "label": "FAnimCurveViewerTabSummoner",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimCurveViewerTabSummoner"
  },
  {
    "label": "FAnimCurveMetadataEditorTabSummoner",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimCurveMetadataEditorTabSummoner"
  },
  {
    "label": "FAnimationAssetBrowserSummoner",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimationAssetBrowserSummoner"
  },
  {
    "label": "FPreviewViewportSummoner",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPreviewViewportSummoner"
  },
  {
    "label": "FRetargetSourcesTabSummoner",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRetargetSourcesTabSummoner"
  },
  {
    "label": "SPersonaPreviewPropertyEditor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SPersonaPreviewPropertyEditor"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "FAnimBlueprintPreviewEditorSummoner",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimBlueprintPreviewEditorSummoner"
  },
  {
    "label": "FBlueprintEditor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBlueprintEditor"
  },
  {
    "label": "FAnimBlueprintParentPlayerEditorSummoner",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAnimBlueprintParentPlayerEditorSummoner"
  },
  {
    "label": "FPoseWatchManagerSummoner",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPoseWatchManagerSummoner"
  },
  {
    "label": "FAdvancedPreviewSceneTabSummoner",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAdvancedPreviewSceneTabSummoner"
  },
  {
    "label": "IDetailCustomization",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDetailCustomization"
  },
  {
    "label": "IPropertyTypeCustomization",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPropertyTypeCustomization"
  },
  {
    "label": "FPersonaDetailsTabSummoner",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPersonaDetailsTabSummoner"
  },
  {
    "label": "FAssetPropertiesSummoner",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAssetPropertiesSummoner"
  },
  {
    "label": "GetLocalizedMode()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Input / Reply . h \" # include \" Layout / Visibility . h \" # include \" Widgets / SWidget . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" IPersonaViewport . h \" # include \" Toolkits / AssetEditorToolkit . h \" # include \" WorkflowOrientedApp / WorkflowTabFactory . h \" # include \" WorkflowOrientedApp / WorkflowTabManager . h \" # include \" BlueprintEditor . h \" # include \" WorkflowOrientedApp / ApplicationMode . h \" # include \" IDocumentation . h \" # include \" PersonaModule . h \" # include \" IPersonaPreviewScene . h \" # include \" AnimationEditorViewportClient . h \" # include \" SSingleObjectDetailsPanel . h \" # include \" PersonaTabs . h \" # define LOCTEXT_NAMESPACE \" PersonaMode \" class IEditableSkeleton ; class IPersonaToolkit ; class ISkeletonTree ; class SPersonaDetails ; class SToolTip ; struct FPersonaModes { const FName SkeletonDisplayMode ; const FName MeshEditMode ; const FName PhysicsEditMode ; const FName AnimationEditMode ; const FName AnimBlueprintEditMode ; FText)",
    "insertText": "GetLocalizedMode(const FName InMode)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (TMap<FName,FText> LocModes ;)",
    "insertText": "if(LocModes.Num() == 0)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (LocModes .)",
    "insertText": "Add(SkeletonDisplayMode, NSLOCTEXT(\"PersonaModes\", \"SkeletonDisplayMode\", \"Skeleton\"))"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (LocModes .)",
    "insertText": "Add(MeshEditMode, NSLOCTEXT(\"PersonaModes\", \"MeshEditMode\", \"Mesh\"))"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (LocModes .)",
    "insertText": "Add(PhysicsEditMode, NSLOCTEXT(\"PersonaModes\", \"PhysicsEditMode\", \"Physics\"))"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (LocModes .)",
    "insertText": "Add(AnimationEditMode, NSLOCTEXT(\"PersonaModes\", \"AnimationEditMode\", \"Animation\"))"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (LocModes .)",
    "insertText": "Add(AnimBlueprintEditMode, NSLOCTEXT(\"PersonaModes\", \"AnimBlueprintEditMode\", \"Graph\"))"
  },
  {
    "label": "check()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "check(InMode != NAME_None)"
  },
  {
    "label": "Find()",
    "kind": "Method",
    "detail": "Function (const FText* OutDesc = LocModes .)",
    "insertText": "Find(InMode)"
  },
  {
    "label": "FPersonaModeSharedData()",
    "kind": "Method",
    "detail": "Function (} } ; struct FPersonaModeSharedData : public IPersonaViewportState {)",
    "insertText": "FPersonaModeSharedData()"
  },
  {
    "label": "Save()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Save(const TSharedRef<FAnimationViewportClient>& InFromViewport)"
  },
  {
    "label": "Restore()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Restore(const TSharedRef<FAnimationViewportClient>& InToViewport)"
  },
  {
    "label": "FPersonaAppMode()",
    "kind": "Method",
    "detail": "Function (FVector ViewLocation ; FRotator ViewRotation ; float OrthoZoom ; FVector OrbitZoom ; FVector LookAtLocation ; bool bCameraLock ; EAnimationViewportCameraFollowMode CameraFollowMode ; FName CameraFollowBoneName ; bool bShowReferencePose ; bool bShowBones ; bool bShowBoneNames ; bool bShowSockets ; bool bShowBound ; int32 ViewportType ; EAnimationPlaybackSpeeds::Type PlaybackSpeedMode ; int32 LocalAxesMode ; } ; class FPersonaAppMode : public FApplicationMode { protected :)",
    "insertText": "FPersonaAppMode(TSharedPtr<class FPersona> InPersona, FName InModeName)"
  },
  {
    "label": "RegisterTabFactories()",
    "kind": "Method",
    "detail": "Function (public : void)",
    "insertText": "RegisterTabFactories(TSharedPtr<FTabManager> InTabManager)"
  },
  {
    "label": "PostActivateMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostActivateMode()"
  },
  {
    "label": "FMorphTargetTabSummoner()",
    "kind": "Method",
    "detail": "Function (protected : TWeakPtr<class FPersona> MyPersona ; FWorkflowAllowedTabSet PersonaTabFactories ; } ; struct FMorphTargetTabSummoner : public FWorkflowTabFactory { public :)",
    "insertText": "FMorphTargetTabSummoner(TSharedPtr<class FAssetEditorToolkit> InHostingApp, const TSharedRef<IPersonaPreviewScene>& InPreviewScene, FSimpleMulticastDelegate& InOnPostUndo)"
  },
  {
    "label": "CreateTabBody()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "CreateTabBody(const FWorkflowTabSpawnInfo& Info)"
  },
  {
    "label": "CreateTabToolTipWidget()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<SToolTip>)",
    "insertText": "CreateTabToolTipWidget(const FWorkflowTabSpawnInfo& Info)"
  },
  {
    "label": "FAnimCurveViewerTabSummoner()",
    "kind": "Method",
    "detail": "Function (} private : TWeakPtr<class IPersonaPreviewScene> PreviewScene ; FSimpleMulticastDelegate& OnPostUndo ; } ; struct FAnimCurveViewerTabSummoner : public FWorkflowTabFactory { public :)",
    "insertText": "FAnimCurveViewerTabSummoner(TSharedPtr<class FAssetEditorToolkit> InHostingApp, const TSharedPtr<IEditableSkeleton>& InEditableSkeleton, const TSharedRef<IPersonaPreviewScene>& InPreviewScene, FOnObjectsSelected InOnObjectsSelected)"
  },
  {
    "label": "FAnimCurveMetadataEditorTabSummoner()",
    "kind": "Method",
    "detail": "Function (} private : TWeakPtr<class IEditableSkeleton> EditableSkeleton ; TWeakPtr<class IPersonaPreviewScene> PreviewScene ; FOnObjectsSelected OnObjectsSelected ; } ; struct FAnimCurveMetadataEditorTabSummoner : public FWorkflowTabFactory { public :)",
    "insertText": "FAnimCurveMetadataEditorTabSummoner(TSharedPtr<class FAssetEditorToolkit> InHostingApp, UObject* InMetadataHost, const TSharedRef<IPersonaPreviewScene>& InPreviewScene, FOnObjectsSelected InOnObjectsSelected)"
  },
  {
    "label": "GetTabToolTipText()",
    "kind": "Method",
    "detail": "Function (} FText)",
    "insertText": "GetTabToolTipText(const FWorkflowTabSpawnInfo& Info)"
  },
  {
    "label": "FAnimationAssetBrowserSummoner()",
    "kind": "Method",
    "detail": "Function (} private : TWeakObjectPtr<UObject> MetadataHost ; TWeakPtr<class IPersonaPreviewScene> PreviewScene ; FOnObjectsSelected OnObjectsSelected ; } ; struct FAnimationAssetBrowserSummoner : public FWorkflowTabFactory {)",
    "insertText": "FAnimationAssetBrowserSummoner(TSharedPtr<class FAssetEditorToolkit> InHostingApp, const TSharedRef<IPersonaToolkit>& InPersonaToolkit, FOnOpenNewAsset InOnOpenNewAsset, FOnAnimationSequenceBrowserCreated InOnAnimationSequenceBrowserCreated, bool bInShowHistory)"
  },
  {
    "label": "FPreviewViewportSummoner()",
    "kind": "Method",
    "detail": "Function (} private : TWeakPtr<class IPersonaToolkit> PersonaToolkit ; FOnOpenNewAsset OnOpenNewAsset ; FOnAnimationSequenceBrowserCreated OnAnimationSequenceBrowserCreated ; bool bShowHistory ; } ; struct FPreviewViewportSummoner : public FWorkflowTabFactory {)",
    "insertText": "FPreviewViewportSummoner(TSharedPtr<class FAssetEditorToolkit> InHostingApp, const FPersonaViewportArgs& InArgs, int32 InViewportIndex)"
  },
  {
    "label": "RegisterTabSpawner()",
    "kind": "Method",
    "detail": "Function (FTabSpawnerEntry&)",
    "insertText": "RegisterTabSpawner(TSharedRef<FTabManager> TabManager, const FApplicationMode* CurrentApplicationMode)"
  },
  {
    "label": "FRetargetSourcesTabSummoner()",
    "kind": "Method",
    "detail": "Function (TWeakPtr<ISkeletonTree> SkeletonTree ; TWeakPtr<IPersonaPreviewScene> PreviewScene ; TWeakPtr<FBlueprintEditor> BlueprintEditor ; FOnViewportCreated OnViewportCreated ; FOnGetViewportText OnGetViewportText ; TArray<TSharedPtr<FExtender>> Extenders ; FName ContextName ; int32 ViewportIndex ; bool bShowShowMenu ; bool bShowLODMenu ; bool bShowPlaySpeedMenu ; bool bShowTimeline ; bool bShowStats ; bool bAlwaysShowTransformToolbar ; bool bShowFloorOptions ; bool bShowTurnTable ; bool bShowPhysicsMenu ; } ; struct FRetargetSourcesTabSummoner : public FWorkflowTabFactory { public :)",
    "insertText": "FRetargetSourcesTabSummoner(TSharedPtr<class FAssetEditorToolkit> InHostingApp, const TSharedRef<IEditableSkeleton>& InEditableSkeleton, FSimpleMulticastDelegate& InOnPostUndo)"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (} private : TWeakPtr<class IEditableSkeleton> EditableSkeleton ; FSimpleMulticastDelegate& OnPostUndo ; } ; class SPersonaPreviewPropertyEditor : public SSingleObjectDetailsPanel { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SPersonaPreviewPropertyEditor)"
  },
  {
    "label": "SLATE_END_ARGS()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_END_ARGS()"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (TWeakPtr<FBlueprintEditor> BPEditor ; public : void)",
    "insertText": "Construct(const FArguments& InArgs, TSharedRef<IPersonaPreviewScene> InPreviewScene, TSharedRef<FBlueprintEditor> InBPEditor)"
  },
  {
    "label": "GetObjectToObserve()",
    "kind": "Method",
    "detail": "Function (UObject*)",
    "insertText": "GetObjectToObserve()"
  },
  {
    "label": "PopulateSlot()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "PopulateSlot(TSharedRef<SWidget> PropertyEditorWidget)"
  },
  {
    "label": "HandlePropertyChanged()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "HandlePropertyChanged(const FPropertyChangedEvent& InPropertyChangedEvent)"
  },
  {
    "label": "HandleApplyChanges()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "HandleApplyChanges()"
  },
  {
    "label": "FAnimBlueprintPreviewEditorSummoner()",
    "kind": "Method",
    "detail": "Function (private : bool bPropertyEdited ; } ; namespace EAnimBlueprintEditorMode { enum Type { PreviewMode,DefaultsMode } ; } struct FAnimBlueprintPreviewEditorSummoner : public FWorkflowTabFactory { public :)",
    "insertText": "FAnimBlueprintPreviewEditorSummoner(TSharedPtr<class FBlueprintEditor> InBlueprintEditor, const TSharedRef<class IPersonaPreviewScene>& InPreviewScene)"
  },
  {
    "label": "IsEditorVisible()",
    "kind": "Method",
    "detail": "Function (private : EVisibility)",
    "insertText": "IsEditorVisible(EAnimBlueprintEditorMode::Type Mode)"
  },
  {
    "label": "IsChecked()",
    "kind": "Method",
    "detail": "Function (ECheckBoxState)",
    "insertText": "IsChecked(EAnimBlueprintEditorMode::Type Mode)"
  },
  {
    "label": "OnCheckedChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnCheckedChanged(ECheckBoxState NewType, EAnimBlueprintEditorMode::Type Mode)"
  },
  {
    "label": "FAnimBlueprintParentPlayerEditorSummoner()",
    "kind": "Method",
    "detail": "Function (EAnimBlueprintEditorMode::Type CurrentMode ; TWeakPtr<class FBlueprintEditor> BlueprintEditor ; TWeakPtr<class IPersonaPreviewScene> PreviewScene ; } ; class FAnimBlueprintParentPlayerEditorSummoner : public FWorkflowTabFactory { public :)",
    "insertText": "FAnimBlueprintParentPlayerEditorSummoner(TSharedPtr<class FBlueprintEditor> InBlueprintEditor, FSimpleMulticastDelegate& InOnPostUndo)"
  },
  {
    "label": "FPoseWatchManagerSummoner()",
    "kind": "Method",
    "detail": "Function (private : TWeakPtr<class FBlueprintEditor> BlueprintEditor ; FSimpleMulticastDelegate& OnPostUndo ; } ; class FPoseWatchManagerSummoner : public FWorkflowTabFactory { public :)",
    "insertText": "FPoseWatchManagerSummoner(TSharedPtr<class FBlueprintEditor> InBlueprintEditor)"
  },
  {
    "label": "FAdvancedPreviewSceneTabSummoner()",
    "kind": "Method",
    "detail": "Function (private : TWeakPtr<class FBlueprintEditor> BlueprintEditor ; } ; struct FAdvancedPreviewSceneTabSummoner : public FWorkflowTabFactory { public :)",
    "insertText": "FAdvancedPreviewSceneTabSummoner(TSharedPtr<class FAssetEditorToolkit> InHostingApp, const TSharedRef<class IPersonaPreviewScene>& InPreviewScene)"
  },
  {
    "label": "CustomizePreviewSceneDescription()",
    "kind": "Method",
    "detail": "Function (private : TSharedRef<class IDetailCustomization>)",
    "insertText": "CustomizePreviewSceneDescription()"
  },
  {
    "label": "CustomizePreviewMeshCollectionEntry()",
    "kind": "Method",
    "detail": "Function (TSharedRef<class IPropertyTypeCustomization>)",
    "insertText": "CustomizePreviewMeshCollectionEntry()"
  },
  {
    "label": "FPersonaDetailsTabSummoner()",
    "kind": "Method",
    "detail": "Function (private : TWeakPtr<class IPersonaPreviewScene> PreviewScene ; } ; struct FPersonaDetailsTabSummoner : public FWorkflowTabFactory { public :)",
    "insertText": "FPersonaDetailsTabSummoner(TSharedPtr<class FAssetEditorToolkit> InHostingApp, FOnDetailsCreated InOnDetailsCreated)"
  },
  {
    "label": "FAssetPropertiesSummoner()",
    "kind": "Method",
    "detail": "Function (private : FOnDetailsCreated OnDetailsCreated ; TSharedPtr<class SPersonaDetails> PersonaDetails ; } ; struct FAssetPropertiesSummoner : public FWorkflowTabFactory {)",
    "insertText": "FAssetPropertiesSummoner(TSharedPtr<class FAssetEditorToolkit> InHostingApp, FOnGetAsset InOnGetAsset, FOnDetailsCreated InOnDetailsCreated)"
  }
]