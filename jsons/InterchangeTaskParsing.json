[
  {
    "label": "FTaskParsing",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTaskParsing"
  },
  {
    "label": "FTaskParsing()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" InterchangeManager . h \" # include \" InterchangeTaskSystem . h \" # include \" Stats / Stats . h \" # include \" UObject / WeakObjectPtrTemplates . h \" namespace UE { namespace Interchange { class FTaskParsing : public FInterchangeTaskBase { private : UInterchangeManager* InterchangeManager ; TWeakPtr<FImportAsyncHelper,ESPMode::ThreadSafe> WeakAsyncHelper ; public :)",
    "insertText": "FTaskParsing(UInterchangeManager* InInterchangeManager, TWeakPtr<FImportAsyncHelper, ESPMode::ThreadSafe> InAsyncHelper) : InterchangeManager(InInterchangeManager) , WeakAsyncHelper(InAsyncHelper)"
  },
  {
    "label": "GetTaskThread()",
    "kind": "Method",
    "detail": "Function (} EInterchangeTaskThread)",
    "insertText": "GetTaskThread()"
  },
  {
    "label": "Pin()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FImportAsyncHelper,ESPMode::ThreadSafe> AsyncHelper = WeakAsyncHelper .)",
    "insertText": "Pin()"
  }
]