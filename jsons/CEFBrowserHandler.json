[
  {
    "label": "IWebBrowserWindow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IWebBrowserWindow"
  },
  {
    "label": "Rect",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Rect"
  },
  {
    "label": "FCEFWebBrowserWindow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCEFWebBrowserWindow"
  },
  {
    "label": "FCEFBrowserPopupFeatures",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCEFBrowserPopupFeatures"
  },
  {
    "label": "FCEFBrowserHandler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCEFBrowserHandler"
  },
  {
    "label": "FCEFBrowserHandler()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # if WITH_CEF3 # include \" CEFLibCefIncludes . h \" # include \" IWebBrowserWindow . h \" # endif class IWebBrowserWindow ; struct Rect ; class FCEFWebBrowserWindow ; class FCEFBrowserPopupFeatures ; # if WITH_CEF3 class FCEFBrowserHandler : public CefClient,public CefDisplayHandler,public CefLifeSpanHandler,public CefLoadHandler,public CefRenderHandler,public CefRequestHandler,public CefKeyboardHandler,public CefJSDialogHandler,public CefContextMenuHandler,public CefDragHandler,public CefResourceRequestHandler,public CefRequestContextHandler,public CefCookieAccessFilter,public CefDialogHandler { public :)",
    "insertText": "FCEFBrowserHandler(bool InUseTransparency, bool InInterceptLoadRequests, const TArray<FString>& AltRetryDomains = TArray<FString>(), const TArray<FString>& AuthorizationHeaderAllowListURLS = TArray<FString>())"
  },
  {
    "label": "SetBrowserWindow()",
    "kind": "Method",
    "detail": "Function (public : void)",
    "insertText": "SetBrowserWindow(TSharedPtr<FCEFWebBrowserWindow> InBrowserWindow)"
  },
  {
    "label": "SetPopupFeatures()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPopupFeatures(const TSharedPtr<FCEFBrowserPopupFeatures>& InPopupFeatures)"
  },
  {
    "label": "GetDisplayHandler()",
    "kind": "Method",
    "detail": "Function (BrowserPopupFeatures = InPopupFeatures ; } public : CefRefPtr<CefDisplayHandler>)",
    "insertText": "GetDisplayHandler()"
  },
  {
    "label": "OnProcessMessageReceived()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "OnProcessMessageReceived(CefRefPtr<CefBrowser> Browser, CefRefPtr<CefFrame> frame, CefProcessId SourceProcess, CefRefPtr<CefProcessMessage> Message)"
  },
  {
    "label": "OnTitleChange()",
    "kind": "Method",
    "detail": "Function (public : void)",
    "insertText": "OnTitleChange(CefRefPtr<CefBrowser> Browser, const CefString& Title)"
  },
  {
    "label": "OnAddressChange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAddressChange(CefRefPtr<CefBrowser> Browser, CefRefPtr<CefFrame> Frame, const CefString& Url)"
  },
  {
    "label": "OnTooltip()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "OnTooltip(CefRefPtr<CefBrowser> Browser, CefString& Text)"
  },
  {
    "label": "OnConsoleMessage()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "OnConsoleMessage(CefRefPtr<CefBrowser> Browser, cef_log_severity_t level, const CefString& Message, const CefString& Source, int Line)"
  },
  {
    "label": "OnAfterCreated()",
    "kind": "Method",
    "detail": "Function (public : void)",
    "insertText": "OnAfterCreated(CefRefPtr<CefBrowser> Browser)"
  },
  {
    "label": "DoClose()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DoClose(CefRefPtr<CefBrowser> Browser)"
  },
  {
    "label": "OnBeforeClose()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnBeforeClose(CefRefPtr<CefBrowser> Browser)"
  },
  {
    "label": "OnBeforePopup()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "OnBeforePopup(CefRefPtr<CefBrowser> Browser, CefRefPtr<CefFrame> Frame, const CefString& Target_Url, const CefString& Target_Frame_Name, CefLifeSpanHandler::WindowOpenDisposition , bool , const CefPopupFeatures& PopupFeatures, CefWindowInfo& WindowInfo, CefRefPtr<CefClient>& Client, CefBrowserSettings& Settings, CefRefPtr<CefDictionaryValue>& extra_info, bool* no_javascript_access)"
  },
  {
    "label": "OnBeforePopup()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "OnBeforePopup(CefRefPtr<CefBrowser> Browser, CefRefPtr<CefFrame> Frame, const CefString& Target_Url, const CefString& Target_Frame_Name, const CefPopupFeatures& PopupFeatures, CefWindowInfo& WindowInfo, CefRefPtr<CefClient>& Client, CefBrowserSettings& Settings, bool* no_javascript_access)"
  },
  {
    "label": "OnLoadError()",
    "kind": "Method",
    "detail": "Function (public : void)",
    "insertText": "OnLoadError(CefRefPtr<CefBrowser> Browser, CefRefPtr<CefFrame> Frame, CefLoadHandler::ErrorCode InErrorCode, const CefString& ErrorText, const CefString& FailedUrl)"
  },
  {
    "label": "OnLoadingStateChange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnLoadingStateChange(CefRefPtr<CefBrowser> browser, bool isLoading, bool canGoBack, bool canGoForward)"
  },
  {
    "label": "OnLoadStart()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnLoadStart(CefRefPtr<CefBrowser> Browser, CefRefPtr<CefFrame> Frame, TransitionType CefTransitionType)"
  },
  {
    "label": "GetRootScreenRect()",
    "kind": "Method",
    "detail": "Function (public : bool)",
    "insertText": "GetRootScreenRect(CefRefPtr<CefBrowser> Browser, CefRect& Rect)"
  },
  {
    "label": "GetViewRect()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetViewRect(CefRefPtr<CefBrowser> Browser, CefRect& Rect)"
  },
  {
    "label": "OnPaint()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPaint(CefRefPtr<CefBrowser> Browser, PaintElementType Type, const RectList& DirtyRects, const void* Buffer, int Width, int Height)"
  },
  {
    "label": "OnAcceleratedPaint()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAcceleratedPaint(CefRefPtr<CefBrowser> Browser, PaintElementType Type, const RectList& DirtyRects, void* SharedHandle)"
  },
  {
    "label": "OnPopupShow()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPopupShow(CefRefPtr<CefBrowser> Browser, bool bShow)"
  },
  {
    "label": "OnPopupSize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPopupSize(CefRefPtr<CefBrowser> Browser, const CefRect& Rect)"
  },
  {
    "label": "GetScreenInfo()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetScreenInfo(CefRefPtr<CefBrowser> Browser, CefScreenInfo& ScreenInfo)"
  },
  {
    "label": "OnCursorChange()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "OnCursorChange(CefRefPtr<CefBrowser> browser, CefCursorHandle cursor, cef_cursor_type_t type, const CefCursorInfo& custom_cursor_info)"
  },
  {
    "label": "OnImeCompositionRangeChanged()",
    "kind": "Method",
    "detail": "Function (# if ! PLATFORM_LINUX void)",
    "insertText": "OnImeCompositionRangeChanged(CefRefPtr<CefBrowser> Browser, const CefRange& SelectionRange, const CefRenderHandler::RectList& CharacterBounds)"
  },
  {
    "label": "OnBeforeResourceLoad()",
    "kind": "Method",
    "detail": "Function (# endif public : CefResourceRequestHandler::ReturnValue)",
    "insertText": "OnBeforeResourceLoad(CefRefPtr<CefBrowser> Browser, CefRefPtr<CefFrame> Frame, CefRefPtr<CefRequest> Request, CefRefPtr<CefRequestCallback> Callback)"
  },
  {
    "label": "OnResourceLoadComplete()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnResourceLoadComplete(CefRefPtr<CefBrowser> Browser, CefRefPtr<CefFrame> Frame, CefRefPtr<CefRequest> Request, CefRefPtr<CefResponse> Response, URLRequestStatus Status, int64 Received_content_length)"
  },
  {
    "label": "OnResourceRedirect()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnResourceRedirect(CefRefPtr<CefBrowser> browser, CefRefPtr<CefFrame> frame, CefRefPtr<CefRequest> request, CefRefPtr<CefResponse> response, CefString& new_url)"
  },
  {
    "label": "OnRenderProcessTerminated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnRenderProcessTerminated(CefRefPtr<CefBrowser> Browser, TerminationStatus Status)"
  },
  {
    "label": "OnBeforeBrowse()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "OnBeforeBrowse(CefRefPtr<CefBrowser> Browser, CefRefPtr<CefFrame> Frame, CefRefPtr<CefRequest> Request, bool user_gesture, bool IsRedirect)"
  },
  {
    "label": "GetResourceHandler()",
    "kind": "Method",
    "detail": "Function (CefRefPtr<CefResourceHandler>)",
    "insertText": "GetResourceHandler(CefRefPtr<CefBrowser> Browser, CefRefPtr<CefFrame> Frame, CefRefPtr<CefRequest> Request)"
  },
  {
    "label": "OnCertificateError()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "OnCertificateError(CefRefPtr<CefBrowser> Browser, cef_errorcode_t CertError, const CefString& RequestUrl, CefRefPtr<CefSSLInfo> SslInfo, CefRefPtr<CefRequestCallback> Callback)"
  },
  {
    "label": "GetResourceRequestHandler()",
    "kind": "Method",
    "detail": "Function (CefRefPtr<CefResourceRequestHandler>)",
    "insertText": "GetResourceRequestHandler(CefRefPtr<CefBrowser> browser, CefRefPtr<CefFrame> frame, CefRefPtr<CefRequest> request, bool is_navigation, bool is_download, const CefString& request_initiator, bool& disable_default_handling)"
  },
  {
    "label": "OnKeyEvent()",
    "kind": "Method",
    "detail": "Function (public : bool)",
    "insertText": "OnKeyEvent(CefRefPtr<CefBrowser> Browser, const CefKeyEvent& Event, CefEventHandle OsEvent)"
  },
  {
    "label": "CanSaveCookie()",
    "kind": "Method",
    "detail": "Function (public : bool)",
    "insertText": "CanSaveCookie(CefRefPtr<CefBrowser> Browser, CefRefPtr<CefFrame> Frame, CefRefPtr<CefRequest> Request, CefRefPtr<CefResponse> Response, const CefCookie& Cookie)"
  },
  {
    "label": "CanSendCookie()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanSendCookie(CefRefPtr<CefBrowser> Browser, CefRefPtr<CefFrame> Frame, CefRefPtr<CefRequest> Request, const CefCookie& Cookie)"
  },
  {
    "label": "OnJSDialog()",
    "kind": "Method",
    "detail": "Function (public : bool)",
    "insertText": "OnJSDialog(CefRefPtr<CefBrowser> Browser, const CefString& OriginUrl, JSDialogType DialogType, const CefString& MessageText, const CefString& DefaultPromptText, CefRefPtr<CefJSDialogCallback> Callback, bool& OutSuppressMessage)"
  },
  {
    "label": "OnBeforeUnloadDialog()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "OnBeforeUnloadDialog(CefRefPtr<CefBrowser> Browser, const CefString& MessageText, bool IsReload, CefRefPtr<CefJSDialogCallback> Callback)"
  },
  {
    "label": "OnResetDialogState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnResetDialogState(CefRefPtr<CefBrowser> Browser)"
  },
  {
    "label": "OnBeforeContextMenu()",
    "kind": "Method",
    "detail": "Function (public : void)",
    "insertText": "OnBeforeContextMenu(CefRefPtr<CefBrowser> Browser, CefRefPtr<CefFrame> Frame, CefRefPtr<CefContextMenuParams> Params, CefRefPtr<CefMenuModel> Model)"
  },
  {
    "label": "OnDraggableRegionsChanged()",
    "kind": "Method",
    "detail": "Function (public : void)",
    "insertText": "OnDraggableRegionsChanged(CefRefPtr<CefBrowser> Browser, CefRefPtr<CefFrame> frame, const std::vector<CefDraggableRegion>& Regions)"
  },
  {
    "label": "OnFileDialog()",
    "kind": "Method",
    "detail": "Function (public : bool)",
    "insertText": "OnFileDialog(CefRefPtr<CefBrowser> Browser, FileDialogMode Mode, const CefString& Title, const CefString& DefaultFilePath, const std::vector<CefString>& AcceptFilters, int SelectedAcceptFilter, CefRefPtr<CefFileDialogCallback> Callback)"
  },
  {
    "label": "OnBeforePopup()",
    "kind": "Method",
    "detail": "Function (public : IWebBrowserWindow::FOnBeforePopupDelegate&)",
    "insertText": "OnBeforePopup()"
  },
  {
    "label": "OnBeforeResourceLoad()",
    "kind": "Method",
    "detail": "Function (FOnBeforeResourceLoadDelegate&)",
    "insertText": "OnBeforeResourceLoad()"
  },
  {
    "label": "OnResourceLoadComplete()",
    "kind": "Method",
    "detail": "Function (FOnResourceLoadCompleteDelegate&)",
    "insertText": "OnResourceLoadComplete()"
  },
  {
    "label": "OnConsoleMessage()",
    "kind": "Method",
    "detail": "Function (FOnConsoleMessageDelegate&)",
    "insertText": "OnConsoleMessage()"
  },
  {
    "label": "ShowDevTools()",
    "kind": "Method",
    "detail": "Function (private : bool)",
    "insertText": "ShowDevTools(const CefRefPtr<CefBrowser>& Browser)"
  },
  {
    "label": "IMPLEMENT_REFCOUNTING()",
    "kind": "Method",
    "detail": "Function (bool bUseTransparency ; bool bAllowAllCookies ; bool bInterceptLoadRequests ; TArray<FString> AltRetryDomains ; uint32 AltRetryDomainIdx = 0 ; TArray<FString> AuthorizationHeaderAllowListURLS ; TMap<FString,CefRequest::ResourceType> MainFrameLoadTypes ; IWebBrowserWindow::FOnBeforePopupDelegate BeforePopupDelegate ; IWebBrowserWindow::FOnCreateWindow CreateWindowDelegate ; FOnBeforeResourceLoadDelegate BeforeResourceLoadDelegate ; FOnResourceLoadCompleteDelegate ResourceLoadCompleteDelegate ; FOnConsoleMessageDelegate ConsoleMessageDelegate ; TWeakPtr<FCEFWebBrowserWindow> BrowserWindowPtr ; CefRefPtr<FCEFBrowserHandler> ParentHandler ; TSharedPtr<FCEFBrowserPopupFeatures> BrowserPopupFeatures ;)",
    "insertText": "IMPLEMENT_REFCOUNTING(FCEFBrowserHandler)"
  }
]