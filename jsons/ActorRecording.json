[
  {
    "label": "UAnimSequence",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimSequence"
  },
  {
    "label": "ULevelSequence",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULevelSequence"
  },
  {
    "label": "UMovieScene",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieScene"
  },
  {
    "label": "USceneComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USceneComponent"
  },
  {
    "label": "FMovieSceneAnimationSectionRecorder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMovieSceneAnimationSectionRecorder"
  },
  {
    "label": "UActorRecording",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UActorRecording"
  },
  {
    "label": "FPropertyChangedEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPropertyChangedEvent"
  },
  {
    "label": "IMovieSceneSectionRecorder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IMovieSceneSectionRecorder"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" SequenceRecordingBase . h \" # include \" Misc / Guid . h \" # include \" Animation / AnimationRecordingSettings . h \" # include \" IMovieSceneSectionRecorder . h \" # include \" ActorRecordingSettings . h \" # include \" UObject / ObjectKey . h \" # include \" UObject / SoftObjectPath . h \" # include \" GameFramework / Actor . h \" # include \" ActorRecording . generated . h \" class UAnimSequence ; class ULevelSequence ; class UMovieScene ; class USceneComponent ; class FMovieSceneAnimationSectionRecorder ;)",
    "insertText": "UCLASS(MinimalAPI)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() public: static bool IsRelevantForRecording(AActor* Actor)"
  },
  {
    "label": "StartRecording()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "StartRecording(class ULevelSequence* CurrentSequence = nullptr, float CurrentSequenceTime = 0.0f, const FString& BaseAssetPath = FString(), const FString& SessionName = FString())"
  },
  {
    "label": "StopRecording()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "StopRecording(class ULevelSequence* CurrentSequence = nullptr, float CurrentSequenceTime = 0.0f)"
  },
  {
    "label": "Tick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Tick(ULevelSequence* CurrentSequence = nullptr, float CurrentSequenceTime = 0.0f)"
  },
  {
    "label": "IsRecording()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsRecording()"
  },
  {
    "label": "GetObjectToRecord()",
    "kind": "Method",
    "detail": "Function (UObject*)",
    "insertText": "GetObjectToRecord()"
  },
  {
    "label": "IsActive()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsActive()"
  },
  {
    "label": "GetSpawnableGuid()",
    "kind": "Method",
    "detail": "Function (const FGuid&)",
    "insertText": "GetSpawnableGuid()"
  },
  {
    "label": "SetActorToRecord()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetActorToRecord(AActor* InActor)"
  },
  {
    "label": "GetActiveLevelSequence()",
    "kind": "Method",
    "detail": "Function (ULevelSequence*)",
    "insertText": "GetActiveLevelSequence(ULevelSequence* InLevelSequence)"
  },
  {
    "label": "GetTargetName()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetTargetName(AActor* InActor)"
  },
  {
    "label": "GetActorInSequence()",
    "kind": "Method",
    "detail": "Function (FGuid)",
    "insertText": "GetActorInSequence(AActor* InActor, ULevelSequence* CurrentSequence)"
  },
  {
    "label": "ShouldDuplicateLevelSequence()",
    "kind": "Method",
    "detail": "Function (private : bool)",
    "insertText": "ShouldDuplicateLevelSequence()"
  },
  {
    "label": "ValidComponent()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ValidComponent(UActorComponent* ActorComponent)"
  },
  {
    "label": "FindOrAddFolder()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FindOrAddFolder(UMovieScene* MovieScene)"
  },
  {
    "label": "StartRecordingActorProperties()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StartRecordingActorProperties(ULevelSequence* CurrentSequence, float CurrentSequenceTime)"
  },
  {
    "label": "StartRecordingComponentProperties()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<class FMovieSceneAnimationSectionRecorder>)",
    "insertText": "StartRecordingComponentProperties(const FName& BindingName, UActorComponent* ActorComponent, UObject* BindingContext, ULevelSequence* CurrentSequence, float CurrentSequenceTime, const FAnimationRecordingSettings& InAnimationSettings, UAnimSequence* InTargetSequence)"
  },
  {
    "label": "StartRecordingNewComponents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StartRecordingNewComponents(ULevelSequence* CurrentSequence, float CurrentSequenceTime)"
  },
  {
    "label": "GetAllComponents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetAllComponents(TArray<UActorComponent*>& OutArray, bool bIncludeNonCDO = true)"
  },
  {
    "label": "GetSceneComponents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetSceneComponents(TArray<UActorComponent*>& OutArray, bool bIncludeNonCDO = true)"
  },
  {
    "label": "GetNonSceneActorComponents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetNonSceneActorComponents(TArray<UActorComponent*>& OutArray)"
  },
  {
    "label": "SyncTrackedComponents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SyncTrackedComponents(bool bIncludeNonCDO = true)"
  },
  {
    "label": "ProcessNewComponentArray()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessNewComponentArray(TInlineComponentArray<UActorComponent*>& ProspectiveComponents)"
  },
  {
    "label": "PostEditChangeProperty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostEditChangeProperty(struct FPropertyChangedEvent& PropertyChangedEvent)"
  }
]