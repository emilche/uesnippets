[
  {
    "label": "VP8_COMP",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VP8_COMP"
  },
  {
    "label": "vp8_pack_tokens()",
    "kind": "Method",
    "detail": "Function (# ifndef VPX_VP8_ENCODER_BITSTREAM_H_ # define VPX_VP8_ENCODER_BITSTREAM_H_ # ifdef __cplusplus \" C \" { # endif # include \" vp8 / encoder / treewriter . h \" # include \" vp8 / encoder / tokenize . h \" void)",
    "insertText": "vp8_pack_tokens(vp8_writer *w, const TOKENEXTRA *p, int xcount)"
  },
  {
    "label": "vp8_convert_rfct_to_prob()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vp8_convert_rfct_to_prob(struct VP8_COMP *const cpi)"
  },
  {
    "label": "vp8_calc_ref_frame_costs()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vp8_calc_ref_frame_costs(int *ref_frame_cost, int prob_intra, int prob_last, int prob_garf)"
  },
  {
    "label": "vp8_estimate_entropy_savings()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "vp8_estimate_entropy_savings(struct VP8_COMP *cpi)"
  },
  {
    "label": "vp8_update_coef_probs()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vp8_update_coef_probs(struct VP8_COMP *cpi)"
  }
]