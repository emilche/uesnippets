[
  {
    "label": "FThreadSafeBool",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FThreadSafeBool"
  },
  {
    "label": "FThreadSafeBool()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" HAL / ThreadSafeCounter . h \" class FThreadSafeBool : private FThreadSafeCounter { public :)",
    "insertText": "FThreadSafeBool(bool bValue = false) : FThreadSafeCounter(bValue ? 1 : 0)"
  },
  {
    "label": "bool()",
    "kind": "Method",
    "detail": "Function (} operator)",
    "insertText": "bool()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "operator(bool bNewValue)"
  },
  {
    "label": "Set()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Set(bNewValue ? 1 : 0)"
  }
]