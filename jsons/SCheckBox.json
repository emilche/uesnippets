[
  {
    "label": "SBorder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SBorder"
  },
  {
    "label": "SCheckBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SCheckBox"
  },
  {
    "label": "DECLARE_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Misc / Attribute . h \" # include \" Layout / Margin . h \" # include \" Sound / SlateSound . h \" # include \" Styling / SlateColor . h \" # include \" Input / Reply . h \" # include \" Styling / SlateWidgetStyleAsset . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Widgets / SWidget . h \" # include \" Widgets / SCompoundWidget . h \" # include \" Styling / SlateTypes . h \" # include \" Styling / CoreStyle . h \" # include \" Framework / SlateDelegates . h \" class SBorder ;)",
    "insertText": "DECLARE_DELEGATE_OneParam(FOnCheckStateChanged, ECheckBoxState)"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (class SCheckBox : public SCompoundWidget { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SCheckBox ) : _Content() , _Style( &FCoreStyle::Get().GetWidgetStyle< FCheckBoxStyle >(\"Checkbox\") ) , _Type() , _OnCheckStateChanged() , _IsChecked( ECheckBoxState::Unchecked ) , _HAlign( HAlign_Fill ) , _CheckBoxImageVAlign( VAlign_Center ) , _CheckBoxContentUsesAutoWidth(true) , _Padding() , _ClickMethod( EButtonClickMethod::DownAndUp ) , _TouchMethod(EButtonTouchMethod::DownAndUp) , _PressMethod(EButtonPressMethod::DownAndUp) , _ForegroundColor(FSlateColor::UseStyle()) , _BorderBackgroundColor () , _IsFocusable( true ) , _UncheckedImage( nullptr ) , _UncheckedHoveredImage( nullptr ) , _UncheckedPressedImage( nullptr ) , _CheckedImage( nullptr ) , _CheckedHoveredImage( nullptr ) , _CheckedPressedImage( nullptr ) , _UndeterminedImage( nullptr ) , _UndeterminedHoveredImage( nullptr ) , _UndeterminedPressedImage( nullptr ) , _BackgroundImage( nullptr ) , _BackgroundHoveredImage( nullptr ) , _BackgroundPressedImage( nullptr)"
  },
  {
    "label": "SLATE_DEFAULT_SLOT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_DEFAULT_SLOT(FArguments, Content ) SLATE_STYLE_ARGUMENT( FCheckBoxStyle, Style ) SLATE_ARGUMENT( TOptional<ESlateCheckBoxType::Type>, Type ) SLATE_EVENT( FOnCheckStateChanged, OnCheckStateChanged ) SLATE_ATTRIBUTE( ECheckBoxState, IsChecked ) SLATE_ARGUMENT( EHorizontalAlignment, HAlign ) SLATE_ARGUMENT( EVerticalAlignment, CheckBoxImageVAlign ) SLATE_ARGUMENT(bool, CheckBoxContentUsesAutoWidth) SLATE_ATTRIBUTE( FMargin, Padding ) SLATE_ARGUMENT( EButtonClickMethod::Type, ClickMethod ) SLATE_ARGUMENT(EButtonTouchMethod::Type, TouchMethod) SLATE_ARGUMENT(EButtonPressMethod::Type, PressMethod) SLATE_ATTRIBUTE( FSlateColor, ForegroundColor ) SLATE_ATTRIBUTE( FSlateColor, BorderBackgroundColor ) SLATE_ARGUMENT( bool, IsFocusable ) SLATE_EVENT( FOnGetContent, OnGetMenuContent ) SLATE_ARGUMENT( TOptional<FSlateSound>, CheckedSoundOverride ) SLATE_ARGUMENT( TOptional<FSlateSound>, UncheckedSoundOverride ) SLATE_ARGUMENT( TOptional<FSlateSound>, HoveredSoundOverride ) SLATE_ARGUMENT(const FSlateBrush*, UncheckedImage) SLATE_ARGUMENT(const FSlateBrush*, UncheckedHoveredImage) SLATE_ARGUMENT(const FSlateBrush*, UncheckedPressedImage) SLATE_ARGUMENT(const FSlateBrush*, CheckedImage) SLATE_ARGUMENT(const FSlateBrush*, CheckedHoveredImage) SLATE_ARGUMENT(const FSlateBrush*, CheckedPressedImage) SLATE_ARGUMENT(const FSlateBrush*, UndeterminedImage) SLATE_ARGUMENT(const FSlateBrush*, UndeterminedHoveredImage) SLATE_ARGUMENT(const FSlateBrush*, UndeterminedPressedImage) SLATE_ARGUMENT(const FSlateBrush*, BackgroundImage) SLATE_ARGUMENT(const FSlateBrush*, BackgroundHoveredImage) SLATE_ARGUMENT(const FSlateBrush*, BackgroundPressedImage) SLATE_END_ARGS() SLATE_API SCheckBox()"
  },
  {
    "label": "SCheckBox()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "SCheckBox()"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct(const FArguments& InArgs)"
  },
  {
    "label": "SupportsKeyboardFocus()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SupportsKeyboardFocus()"
  },
  {
    "label": "OnKeyDown()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnKeyDown(const FGeometry& MyGeometry, const FKeyEvent& InKeyEvent)"
  },
  {
    "label": "OnKeyUp()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnKeyUp(const FGeometry& MyGeometry, const FKeyEvent& InKeyEvent)"
  },
  {
    "label": "OnMouseButtonDown()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnMouseButtonDown(const FGeometry& MyGeometry, const FPointerEvent& MouseEvent)"
  },
  {
    "label": "OnMouseButtonDoubleClick()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnMouseButtonDoubleClick(const FGeometry& InMyGeometry, const FPointerEvent& InMouseEvent)"
  },
  {
    "label": "OnMouseButtonUp()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnMouseButtonUp(const FGeometry& MyGeometry, const FPointerEvent& MouseEvent)"
  },
  {
    "label": "OnMouseEnter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnMouseEnter(const FGeometry& MyGeometry, const FPointerEvent& MouseEvent)"
  },
  {
    "label": "OnMouseLeave()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnMouseLeave(const FPointerEvent& MouseEvent)"
  },
  {
    "label": "IsInteractable()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsInteractable()"
  },
  {
    "label": "GetForegroundColor()",
    "kind": "Method",
    "detail": "Function (FSlateColor)",
    "insertText": "GetForegroundColor()"
  },
  {
    "label": "CreateAccessibleWidget()",
    "kind": "Method",
    "detail": "Function (# if WITH_ACCESSIBILITY TSharedRef<FSlateAccessibleWidget>)",
    "insertText": "CreateAccessibleWidget()"
  },
  {
    "label": "IsChecked()",
    "kind": "Method",
    "detail": "Function (# endif bool)",
    "insertText": "IsChecked()"
  },
  {
    "label": "GetCheckedState()",
    "kind": "Method",
    "detail": "Function (} ECheckBoxState)",
    "insertText": "GetCheckedState()"
  },
  {
    "label": "IsPressed()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsPressed()"
  },
  {
    "label": "SetIsChecked()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetIsChecked(TAttribute<ECheckBoxState> InIsChecked)"
  },
  {
    "label": "SetContent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetContent(const TSharedRef< SWidget >& InContent)"
  },
  {
    "label": "SetStyle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetStyle(const FCheckBoxStyle* InStyle)"
  },
  {
    "label": "SetUncheckedImage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetUncheckedImage(const FSlateBrush* Brush)"
  },
  {
    "label": "SetUncheckedHoveredImage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetUncheckedHoveredImage(const FSlateBrush* Brush)"
  },
  {
    "label": "SetUncheckedPressedImage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetUncheckedPressedImage(const FSlateBrush* Brush)"
  },
  {
    "label": "SetCheckedImage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCheckedImage(const FSlateBrush* Brush)"
  },
  {
    "label": "SetCheckedHoveredImage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCheckedHoveredImage(const FSlateBrush* Brush)"
  },
  {
    "label": "SetCheckedPressedImage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCheckedPressedImage(const FSlateBrush* Brush)"
  },
  {
    "label": "SetUndeterminedImage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetUndeterminedImage(const FSlateBrush* Brush)"
  },
  {
    "label": "SetUndeterminedHoveredImage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetUndeterminedHoveredImage(const FSlateBrush* Brush)"
  },
  {
    "label": "SetUndeterminedPressedImage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetUndeterminedPressedImage(const FSlateBrush* Brush)"
  },
  {
    "label": "SetClickMethod()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetClickMethod(EButtonClickMethod::Type InClickMethod)"
  },
  {
    "label": "SetTouchMethod()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTouchMethod(EButtonTouchMethod::Type InTouchMethod)"
  },
  {
    "label": "SetPressMethod()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPressMethod(EButtonPressMethod::Type InPressMethod)"
  },
  {
    "label": "BuildCheckBox()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "BuildCheckBox(TSharedRef<SWidget> InContent)"
  },
  {
    "label": "OnGetPadding()",
    "kind": "Method",
    "detail": "Function (FMargin)",
    "insertText": "OnGetPadding()"
  },
  {
    "label": "OnGetBorderBackgroundColor()",
    "kind": "Method",
    "detail": "Function (FSlateColor)",
    "insertText": "OnGetBorderBackgroundColor()"
  },
  {
    "label": "OnGetCheckBoxType()",
    "kind": "Method",
    "detail": "Function (ESlateCheckBoxType::Type)",
    "insertText": "OnGetCheckBoxType()"
  },
  {
    "label": "OnGetCheckImage()",
    "kind": "Method",
    "detail": "Function (const FSlateBrush*)",
    "insertText": "OnGetCheckImage()"
  },
  {
    "label": "GetUncheckedImage()",
    "kind": "Method",
    "detail": "Function (const FSlateBrush*)",
    "insertText": "GetUncheckedImage()"
  },
  {
    "label": "GetUncheckedHoveredImage()",
    "kind": "Method",
    "detail": "Function (const FSlateBrush*)",
    "insertText": "GetUncheckedHoveredImage()"
  },
  {
    "label": "GetUncheckedPressedImage()",
    "kind": "Method",
    "detail": "Function (const FSlateBrush*)",
    "insertText": "GetUncheckedPressedImage()"
  },
  {
    "label": "GetCheckedImage()",
    "kind": "Method",
    "detail": "Function (const FSlateBrush*)",
    "insertText": "GetCheckedImage()"
  },
  {
    "label": "GetCheckedHoveredImage()",
    "kind": "Method",
    "detail": "Function (const FSlateBrush*)",
    "insertText": "GetCheckedHoveredImage()"
  },
  {
    "label": "GetCheckedPressedImage()",
    "kind": "Method",
    "detail": "Function (const FSlateBrush*)",
    "insertText": "GetCheckedPressedImage()"
  },
  {
    "label": "GetUndeterminedImage()",
    "kind": "Method",
    "detail": "Function (const FSlateBrush*)",
    "insertText": "GetUndeterminedImage()"
  },
  {
    "label": "GetUndeterminedHoveredImage()",
    "kind": "Method",
    "detail": "Function (const FSlateBrush*)",
    "insertText": "GetUndeterminedHoveredImage()"
  },
  {
    "label": "GetUndeterminedPressedImage()",
    "kind": "Method",
    "detail": "Function (const FSlateBrush*)",
    "insertText": "GetUndeterminedPressedImage()"
  },
  {
    "label": "OnGetBackgroundImage()",
    "kind": "Method",
    "detail": "Function (const FSlateBrush*)",
    "insertText": "OnGetBackgroundImage()"
  },
  {
    "label": "GetBackgroundImage()",
    "kind": "Method",
    "detail": "Function (const FSlateBrush*)",
    "insertText": "GetBackgroundImage()"
  },
  {
    "label": "GetBackgroundHoveredImage()",
    "kind": "Method",
    "detail": "Function (const FSlateBrush*)",
    "insertText": "GetBackgroundHoveredImage()"
  },
  {
    "label": "GetBackgroundPressedImage()",
    "kind": "Method",
    "detail": "Function (const FSlateBrush*)",
    "insertText": "GetBackgroundPressedImage()"
  },
  {
    "label": "PlayCheckedSound()",
    "kind": "Method",
    "detail": "Function (protected : const FCheckBoxStyle* Style ; bool bIsPressed ; TAttribute<ECheckBoxState> IsCheckboxChecked ; FOnCheckStateChanged OnCheckStateChanged ; const FSlateBrush* UncheckedImage ; const FSlateBrush* UncheckedHoveredImage ; const FSlateBrush* UncheckedPressedImage ; const FSlateBrush* CheckedImage ; const FSlateBrush* CheckedHoveredImage ; const FSlateBrush* CheckedPressedImage ; const FSlateBrush* UndeterminedImage ; const FSlateBrush* UndeterminedHoveredImage ; const FSlateBrush* UndeterminedPressedImage ; const FSlateBrush* BackgroundImage ; const FSlateBrush* BackgroundHoveredImage ; const FSlateBrush* BackgroundPressedImage ; TAttribute<FMargin> PaddingOverride ; TAttribute<FSlateColor> ForegroundColorOverride ; TAttribute<FSlateColor> BorderBackgroundColorOverride ; TOptional<ESlateCheckBoxType::Type> CheckBoxTypeOverride ; EHorizontalAlignment HorizontalAlignment ; EVerticalAlignment CheckBoxImageVAlign ; bool bCheckBoxContentUsesAutoWidth ; EButtonClickMethod::Type ClickMethod ; TEnumAsByte<EButtonTouchMethod::Type> TouchMethod ; TEnumAsByte<EButtonPressMethod::Type> PressMethod ; bool bIsFocusable ; FOnGetContent OnGetMenuContent ; void)",
    "insertText": "PlayCheckedSound()"
  },
  {
    "label": "PlayUncheckedSound()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PlayUncheckedSound()"
  },
  {
    "label": "PlayHoverSound()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PlayHoverSound()"
  },
  {
    "label": "GetClickMethodFromInputType()",
    "kind": "Method",
    "detail": "Function (TEnumAsByte<EButtonClickMethod::Type>)",
    "insertText": "GetClickMethodFromInputType(const FPointerEvent& MouseEvent)"
  },
  {
    "label": "IsPreciseTapOrClick()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsPreciseTapOrClick(const FPointerEvent& MouseEvent)"
  }
]