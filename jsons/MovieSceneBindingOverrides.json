[
  {
    "label": "FMovieSceneSequenceID",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneSequenceID"
  },
  {
    "label": "FPropertyChangedEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPropertyChangedEvent"
  },
  {
    "label": "FMovieSceneBindingOverrideData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneBindingOverrideData"
  },
  {
    "label": "UMovieSceneBindingOverrides",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieSceneBindingOverrides"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" Containers / ContainerAllocationPolicies . h \" # include \" Containers / Map . h \" # include \" HAL / Platform . h \" # include \" Misc / Guid . h \" # include \" MovieScene . h \" # include \" MovieSceneObjectBindingID . h \" # include \" UObject / Object . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / ScriptMacros . h \" # include \" UObject / SoftObjectPtr . h \" # include \" UObject / UObjectGlobals . h \" # include \" MovieSceneBindingOverrides . generated . h \" struct FMovieSceneSequenceID ; struct FPropertyChangedEvent ;)",
    "insertText": "USTRUCT()"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() FMovieSceneBindingOverrideData() : bOverridesDefault(true)"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "UCLASS(DefaultToInstanced, EditInlineNew, MinimalAPI)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "GENERATED_BODY() MOVIESCENE_API UMovieSceneBindingOverrides(const FObjectInitializer& Init)"
  },
  {
    "label": "LocateBoundObjects()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "LocateBoundObjects(const FGuid& InBindingId, FMovieSceneSequenceID InSequenceID, TArray<UObject*, TInlineAllocator<1>>& OutObjects)"
  },
  {
    "label": "SetBinding()",
    "kind": "Method",
    "detail": "Function (public : void)",
    "insertText": "SetBinding(FMovieSceneObjectBindingID Binding, const TArray<UObject*>& Objects, bool bAllowBindingsFromAsset = false)"
  },
  {
    "label": "AddBinding()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddBinding(FMovieSceneObjectBindingID Binding, UObject* Object, bool bAllowBindingsFromAsset = false)"
  },
  {
    "label": "RemoveBinding()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveBinding(FMovieSceneObjectBindingID Binding, UObject* Object)"
  },
  {
    "label": "ResetBinding()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetBinding(FMovieSceneObjectBindingID Binding)"
  },
  {
    "label": "ResetBindings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetBindings()"
  },
  {
    "label": "RebuildLookupMap()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "RebuildLookupMap()"
  },
  {
    "label": "PostEditChangeProperty()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR void)",
    "insertText": "PostEditChangeProperty(FPropertyChangedEvent& PropertyChangedEvent)"
  }
]