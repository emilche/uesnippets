[
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "UClass",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UClass"
  },
  {
    "label": "FSlateBrush",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSlateBrush"
  },
  {
    "label": "IPoseWatchManagerTreeItem",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IPoseWatchManagerTreeItem"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FPoseWatchManagerDragDropPayload",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPoseWatchManagerDragDropPayload"
  },
  {
    "label": "FPoseWatchManagerDragValidationInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPoseWatchManagerDragValidationInfo"
  },
  {
    "label": "PERSONA_API",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "PERSONA_API"
  },
  {
    "label": "FPoseWatchDragDropOp",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPoseWatchDragDropOp"
  },
  {
    "label": "FPoseWatchFolderDragDropOp",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPoseWatchFolderDragDropOp"
  },
  {
    "label": "FPoseWatchManagerDragDropPayload()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / UnrealString . h \" # include \" DragAndDrop / CompositeDragDropOp . h \" # include \" DragAndDrop / DecoratedDragDropOp . h \" # include \" Engine / PoseWatch . h \" # include \" HAL / PlatformMath . h \" # include \" Input / DragAndDrop . h \" # include \" Internationalization / Text . h \" # include \" Layout / Visibility . h \" # include \" Styling / AppStyle . h \" # include \" Styling / ISlateStyle . h \" # include \" Templates / SharedPointer . h \" # include \" Templates / TypeHash . h \" # include \" UObject / WeakObjectPtr . h \" # include \" UObject / WeakObjectPtrTemplates . h \" class SWidget ; class UClass ; struct FSlateBrush ; struct IPoseWatchManagerTreeItem ; enum class EPoseWatchManagerDropCompatibility : uint8 { Compatible,Incompatible } ; struct FPoseWatchManagerDragDropPayload {)",
    "insertText": "FPoseWatchManagerDragDropPayload(const FDragDropOperation& InOperation = FDragDropOperation()) : SourceOperation(InOperation)"
  },
  {
    "label": "FPoseWatchManagerDragDropPayload()",
    "kind": "Method",
    "detail": "Function (} template<TreeType>)",
    "insertText": "FPoseWatchManagerDragDropPayload(const TreeType& InDraggedItem, const FDragDropOperation& InOperation = FDragDropOperation()) : SourceOperation(InOperation)"
  },
  {
    "label": "FPoseWatchManagerDragValidationInfo()",
    "kind": "Method",
    "detail": "Function (DraggedItem = InDraggedItem ; } TWeakPtr<IPoseWatchManagerTreeItem> DraggedItem ; const FDragDropOperation& SourceOperation ; } ; struct FPoseWatchManagerDragValidationInfo { EPoseWatchManagerDropCompatibility CompatibilityType ; FText ValidationText ;)",
    "insertText": "FPoseWatchManagerDragValidationInfo(const EPoseWatchManagerDropCompatibility InCompatibilityType, const FText InValidationText) : CompatibilityType(InCompatibilityType) , ValidationText(InValidationText)"
  },
  {
    "label": "Invalid()",
    "kind": "Method",
    "detail": "Function (} FPoseWatchManagerDragValidationInfo)",
    "insertText": "Invalid()"
  },
  {
    "label": "IsValid()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsValid()"
  },
  {
    "label": "FPoseWatchManagerDragDropOp()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FPoseWatchManagerDragDropOp()"
  },
  {
    "label": "ResetTooltip()",
    "kind": "Method",
    "detail": "Function (using FDragDropOperation::Construct ; void)",
    "insertText": "ResetTooltip()"
  },
  {
    "label": "FText()",
    "kind": "Method",
    "detail": "Function (OverrideText =)",
    "insertText": "FText()"
  },
  {
    "label": "SetTooltip()",
    "kind": "Method",
    "detail": "Function (OverrideIcon = nullptr ; } void)",
    "insertText": "SetTooltip(FText InOverrideText, const FSlateBrush* InOverrideIcon)"
  },
  {
    "label": "GetDefaultDecorator()",
    "kind": "Method",
    "detail": "Function (OverrideText = InOverrideText ; OverrideIcon = InOverrideIcon ; } TSharedPtr<SWidget>)",
    "insertText": "GetDefaultDecorator()"
  },
  {
    "label": "GetOverrideVisibility()",
    "kind": "Method",
    "detail": "Function (private : EVisibility)",
    "insertText": "GetOverrideVisibility()"
  },
  {
    "label": "GetDefaultVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "GetDefaultVisibility()"
  },
  {
    "label": "GetOverrideText()",
    "kind": "Method",
    "detail": "Function (FText OverrideText ; FText)",
    "insertText": "GetOverrideText()"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Init(const TWeakObjectPtr<UPoseWatch>& InPoseWatch)"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (PoseWatch = InPoseWatch ; UClass* CommonSelClass = NULL ; CurrentIconBrush =)",
    "insertText": "Get().GetBrush(TEXT(\"ClassIcon.PoseAsset\"))"
  },
  {
    "label": "GetLabel()",
    "kind": "Method",
    "detail": "Function (CurrentHoverText = PoseWatch ->)",
    "insertText": "GetLabel()"
  },
  {
    "label": "SetupDefaults()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetupDefaults()"
  },
  {
    "label": "DRAG_DROP_OPERATOR_TYPE()",
    "kind": "Method",
    "detail": "Function (} } ; class FPoseWatchFolderDragDropOp : public FDecoratedDragDropOp { public :)",
    "insertText": "DRAG_DROP_OPERATOR_TYPE(FPoseWatchFolderDragDropOp, FDecoratedDragDropOp)"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Init(const TWeakObjectPtr<UPoseWatchFolder>& InPoseWatchFolder)"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (PoseWatchFolder = InPoseWatchFolder ; CurrentIconBrush =)",
    "insertText": "Get().GetBrush(TEXT(\"SceneOutliner.FolderClosed\"))"
  }
]