[
  {
    "label": "SDL_ComposeCustomBlendMode()",
    "kind": "Method",
    "detail": "Function (# ifndef SDL_blendmode_h_ # define SDL_blendmode_h_ # include \" begin_code . h \" # ifdef __cplusplus \" C \" { # endif typedef enum { SDL_BLENDMODE_NONE = 0 x00000000,SDL_BLENDMODE_BLEND = 0 x00000001,SDL_BLENDMODE_ADD = 0 x00000002,SDL_BLENDMODE_MOD = 0 x00000004,SDL_BLENDMODE_MUL = 0 x00000008,SDL_BLENDMODE_INVALID = 0 x7FFFFFFF } SDL_BlendMode ; typedef enum { SDL_BLENDOPERATION_ADD = 0 x1,SDL_BLENDOPERATION_SUBTRACT = 0 x2,SDL_BLENDOPERATION_REV_SUBTRACT = 0 x3,SDL_BLENDOPERATION_MINIMUM = 0 x4,SDL_BLENDOPERATION_MAXIMUM = 0 x5 } SDL_BlendOperation ; typedef enum { SDL_BLENDFACTOR_ZERO = 0 x1,SDL_BLENDFACTOR_ONE = 0 x2,SDL_BLENDFACTOR_SRC_COLOR = 0 x3,SDL_BLENDFACTOR_ONE_MINUS_SRC_COLOR = 0 x4,SDL_BLENDFACTOR_SRC_ALPHA = 0 x5,SDL_BLENDFACTOR_ONE_MINUS_SRC_ALPHA = 0 x6,SDL_BLENDFACTOR_DST_COLOR = 0 x7,SDL_BLENDFACTOR_ONE_MINUS_DST_COLOR = 0 x8,SDL_BLENDFACTOR_DST_ALPHA = 0 x9,SDL_BLENDFACTOR_ONE_MINUS_DST_ALPHA = 0 xA } SDL_BlendFactor ; DECLSPEC SDL_BlendMode SDLCALL)",
    "insertText": "SDL_ComposeCustomBlendMode(SDL_BlendFactor srcColorFactor, SDL_BlendFactor dstColorFactor, SDL_BlendOperation colorOperation, SDL_BlendFactor srcAlphaFactor, SDL_BlendFactor dstAlphaFactor, SDL_BlendOperation alphaOperation)"
  }
]