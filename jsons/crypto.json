[
  {
    "label": "crypto_ex_data_st",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "crypto_ex_data_st"
  },
  {
    "label": "callbacks",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "callbacks"
  },
  {
    "label": "type",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "type"
  },
  {
    "label": "crypto_threadid_st",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "crypto_threadid_st"
  },
  {
    "label": "tm",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "tm"
  },
  {
    "label": "tm",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "tm"
  },
  {
    "label": "tm",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "tm"
  },
  {
    "label": "tm",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "tm"
  },
  {
    "label": "tm",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "tm"
  },
  {
    "label": "CRYPTO_THREAD_read_lock()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "CRYPTO_THREAD_read_lock(CRYPTO_RWLOCK *lock)"
  },
  {
    "label": "CRYPTO_THREAD_write_lock()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "CRYPTO_THREAD_write_lock(CRYPTO_RWLOCK *lock)"
  },
  {
    "label": "CRYPTO_THREAD_unlock()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "CRYPTO_THREAD_unlock(CRYPTO_RWLOCK *lock)"
  },
  {
    "label": "CRYPTO_THREAD_lock_free()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CRYPTO_THREAD_lock_free(CRYPTO_RWLOCK *lock)"
  },
  {
    "label": "CRYPTO_atomic_add()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "CRYPTO_atomic_add(int *val, int amount, int *ret, CRYPTO_RWLOCK *lock)"
  },
  {
    "label": "CRYPTO_mem_ctrl()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "CRYPTO_mem_ctrl(int mode)"
  },
  {
    "label": "OPENSSL_strlcpy()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "OPENSSL_strlcpy(char *dst, const char *src, size_t siz)"
  },
  {
    "label": "OPENSSL_strlcat()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "OPENSSL_strlcat(char *dst, const char *src, size_t siz)"
  },
  {
    "label": "OPENSSL_strnlen()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "OPENSSL_strnlen(const char *str, size_t maxlen)"
  },
  {
    "label": "OPENSSL_hexchar2int()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "OPENSSL_hexchar2int(unsigned char c)"
  },
  {
    "label": "OpenSSL_version_num()",
    "kind": "Method",
    "detail": "Function (long)",
    "insertText": "OpenSSL_version_num(void)"
  },
  {
    "label": "OPENSSL_issetugid()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "OPENSSL_issetugid(void)"
  },
  {
    "label": "CRYPTO_EX_new()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CRYPTO_EX_new(void *parent, void *ptr, CRYPTO_EX_DATA *ad,\n                           int idx, long argl, void *argp)"
  },
  {
    "label": "CRYPTO_EX_free()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CRYPTO_EX_free(void *parent, void *ptr, CRYPTO_EX_DATA *ad,\n                             int idx, long argl, void *argp)"
  },
  {
    "label": "CRYPTO_EX_dup()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "CRYPTO_EX_dup(CRYPTO_EX_DATA *to, const CRYPTO_EX_DATA *from,\n                           void *from_d, int idx, long argl, void *argp)"
  },
  {
    "label": "CRYPTO_get_ex_new_index()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "CRYPTO_get_ex_new_index(int class_index, long argl, void *argp,\n                            CRYPTO_EX_new *new_func, CRYPTO_EX_dup *dup_func,\n                            CRYPTO_EX_free *free_func)"
  },
  {
    "label": "CRYPTO_free_ex_index()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "CRYPTO_free_ex_index(int class_index, int idx)"
  },
  {
    "label": "CRYPTO_new_ex_data()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "CRYPTO_new_ex_data(int class_index, void *obj, CRYPTO_EX_DATA *ad)"
  },
  {
    "label": "CRYPTO_dup_ex_data()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "CRYPTO_dup_ex_data(int class_index, CRYPTO_EX_DATA *to,\n                       const CRYPTO_EX_DATA *from)"
  },
  {
    "label": "CRYPTO_free_ex_data()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CRYPTO_free_ex_data(int class_index, void *obj, CRYPTO_EX_DATA *ad)"
  },
  {
    "label": "CRYPTO_set_ex_data()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "CRYPTO_set_ex_data(CRYPTO_EX_DATA *ad, int idx, void *val)"
  },
  {
    "label": "CRYPTO_set_mem_debug()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "CRYPTO_set_mem_debug(int flag)"
  },
  {
    "label": "CRYPTO_free()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CRYPTO_free(void *ptr, const char *file, int line)"
  },
  {
    "label": "CRYPTO_clear_free()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CRYPTO_clear_free(void *ptr, size_t num, const char *file, int line)"
  },
  {
    "label": "CRYPTO_secure_malloc_init()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "CRYPTO_secure_malloc_init(size_t sz, int minsize)"
  },
  {
    "label": "CRYPTO_secure_malloc_done()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "CRYPTO_secure_malloc_done(void)"
  },
  {
    "label": "CRYPTO_secure_free()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CRYPTO_secure_free(void *ptr, const char *file, int line)"
  },
  {
    "label": "CRYPTO_secure_clear_free()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CRYPTO_secure_clear_free(void *ptr, size_t num,\n                              const char *file, int line)"
  },
  {
    "label": "CRYPTO_secure_allocated()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "CRYPTO_secure_allocated(const void *ptr)"
  },
  {
    "label": "CRYPTO_secure_malloc_initialized()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "CRYPTO_secure_malloc_initialized(void)"
  },
  {
    "label": "CRYPTO_secure_actual_size()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "CRYPTO_secure_actual_size(void *ptr)"
  },
  {
    "label": "CRYPTO_secure_used()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "CRYPTO_secure_used(void)"
  },
  {
    "label": "OPENSSL_cleanse()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OPENSSL_cleanse(void *ptr, size_t len)"
  },
  {
    "label": "CRYPTO_mem_debug_push()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "CRYPTO_mem_debug_push(const char *info, const char *file, int line)"
  },
  {
    "label": "CRYPTO_mem_debug_pop()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "CRYPTO_mem_debug_pop(void)"
  },
  {
    "label": "CRYPTO_get_alloc_counts()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CRYPTO_get_alloc_counts(int *mcount, int *rcount, int *fcount)"
  },
  {
    "label": "CRYPTO_mem_debug_malloc()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CRYPTO_mem_debug_malloc(void *addr, size_t num, int flag,\n        const char *file, int line)"
  },
  {
    "label": "CRYPTO_mem_debug_realloc()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CRYPTO_mem_debug_realloc(void *addr1, void *addr2, size_t num, int flag,\n        const char *file, int line)"
  },
  {
    "label": "CRYPTO_mem_debug_free()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CRYPTO_mem_debug_free(void *addr, int flag,\n        const char *file, int line)"
  },
  {
    "label": "CRYPTO_mem_leaks_fp()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "CRYPTO_mem_leaks_fp(FILE *)"
  },
  {
    "label": "CRYPTO_mem_leaks()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "CRYPTO_mem_leaks(BIO *bio)"
  },
  {
    "label": "OPENSSL_die()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OPENSSL_die(const char *assertion, const char *file, int line)"
  },
  {
    "label": "OPENSSL_isservice()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "OPENSSL_isservice(void)"
  },
  {
    "label": "FIPS_mode()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "FIPS_mode(void)"
  },
  {
    "label": "FIPS_mode_set()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "FIPS_mode_set(int r)"
  },
  {
    "label": "OPENSSL_init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OPENSSL_init(void)"
  },
  {
    "label": "OPENSSL_fork_prepare()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OPENSSL_fork_prepare(void)"
  },
  {
    "label": "OPENSSL_fork_parent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OPENSSL_fork_parent(void)"
  },
  {
    "label": "OPENSSL_fork_child()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OPENSSL_fork_child(void)"
  },
  {
    "label": "OPENSSL_gmtime_adj()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "OPENSSL_gmtime_adj(struct tm *tm, int offset_day, long offset_sec)"
  },
  {
    "label": "OPENSSL_gmtime_diff()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "OPENSSL_gmtime_diff(int *pday, int *psec,\n                        const struct tm *from, const struct tm *to)"
  },
  {
    "label": "CRYPTO_memcmp()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "CRYPTO_memcmp(const void * in_a, const void * in_b, size_t len)"
  },
  {
    "label": "OPENSSL_cleanup()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OPENSSL_cleanup(void)"
  },
  {
    "label": "OPENSSL_init_crypto()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "OPENSSL_init_crypto(uint64_t opts, const OPENSSL_INIT_SETTINGS *settings)"
  },
  {
    "label": "OPENSSL_thread_stop()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OPENSSL_thread_stop(void)"
  },
  {
    "label": "OPENSSL_INIT_set_config_filename()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "OPENSSL_INIT_set_config_filename(OPENSSL_INIT_SETTINGS *settings,\n                                     const char *config_filename)"
  },
  {
    "label": "OPENSSL_INIT_set_config_file_flags()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OPENSSL_INIT_set_config_file_flags(OPENSSL_INIT_SETTINGS *settings,\n                                        unsigned long flags)"
  },
  {
    "label": "OPENSSL_INIT_set_config_appname()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "OPENSSL_INIT_set_config_appname(OPENSSL_INIT_SETTINGS *settings,\n                                    const char *config_appname)"
  },
  {
    "label": "OPENSSL_INIT_free()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OPENSSL_INIT_free(OPENSSL_INIT_SETTINGS *settings)"
  },
  {
    "label": "CRYPTO_THREAD_set_local()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "CRYPTO_THREAD_set_local(CRYPTO_THREAD_LOCAL *key, void *val)"
  },
  {
    "label": "CRYPTO_THREAD_cleanup_local()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "CRYPTO_THREAD_cleanup_local(CRYPTO_THREAD_LOCAL *key)"
  },
  {
    "label": "CRYPTO_THREAD_get_current_id()",
    "kind": "Method",
    "detail": "Function (CRYPTO_THREAD_ID)",
    "insertText": "CRYPTO_THREAD_get_current_id(void)"
  },
  {
    "label": "CRYPTO_THREAD_compare_id()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "CRYPTO_THREAD_compare_id(CRYPTO_THREAD_ID a, CRYPTO_THREAD_ID b)"
  }
]