[
  {
    "label": "FCompilerResultsLog",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCompilerResultsLog"
  },
  {
    "label": "UAnimGraphNode_Base",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimGraphNode_Base"
  },
  {
    "label": "UEdGraphNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEdGraphNode"
  },
  {
    "label": "UK2Node_CustomEvent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UK2Node_CustomEvent"
  },
  {
    "label": "IAnimBlueprintCompilationContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IAnimBlueprintCompilationContext"
  },
  {
    "label": "IAnimBlueprintGeneratedClassCompiledData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IAnimBlueprintGeneratedClassCompiledData"
  },
  {
    "label": "IAnimBlueprintCompilerCreationContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IAnimBlueprintCompilerCreationContext"
  },
  {
    "label": "IAnimBlueprintCompilationBracketContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IAnimBlueprintCompilationBracketContext"
  },
  {
    "label": "IAnimBlueprintPostExpansionStepContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IAnimBlueprintPostExpansionStepContext"
  },
  {
    "label": "IAnimBlueprintCopyTermDefaultsContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IAnimBlueprintCopyTermDefaultsContext"
  },
  {
    "label": "FAnimGraphNodePropertyBinding",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimGraphNodePropertyBinding"
  },
  {
    "label": "UAnimBlueprintExtension_Base",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimBlueprintExtension_Base"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FPropertyCopyRecord",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPropertyCopyRecord"
  },
  {
    "label": "FCopyRecordGraphCheckContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCopyRecordGraphCheckContext"
  },
  {
    "label": "FAnimNodeSinglePropertyHandler",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimNodeSinglePropertyHandler"
  },
  {
    "label": "FEvaluationHandlerRecord",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FEvaluationHandlerRecord"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" AnimBlueprintExtension . h \" # include \" AnimBlueprintExtension_PropertyAccess . h \" # include \" Animation / AnimNodeBase . h \" # include \" IPropertyAccessCompiler . h \" # include \" Animation / AnimSubsystem_Base . h \" # include \" AnimBlueprintExtension_Base . generated . h \" class FCompilerResultsLog ; class UAnimGraphNode_Base ; class UEdGraphNode ; class UK2Node_CustomEvent ; class IAnimBlueprintCompilationContext ; class IAnimBlueprintGeneratedClassCompiledData ; class IAnimBlueprintCompilerCreationContext ; class IAnimBlueprintCompilationBracketContext ; class IAnimBlueprintPostExpansionStepContext ; class IAnimBlueprintCopyTermDefaultsContext ; struct FAnimGraphNodePropertyBinding ;)",
    "insertText": "UCLASS(MinimalAPI)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: void ProcessPosePins(UAnimGraphNode_Base* InNode, IAnimBlueprintCompilationContext& InCompilationContext, IAnimBlueprintGeneratedClassCompiledData& OutCompiledData)"
  },
  {
    "label": "Constants()",
    "kind": "Method",
    "detail": "Function (enum class EPinProcessingFlags : int32 {)",
    "insertText": "Constants(1 << 0), BlueprintHandlers = (1 << 1), PropertyAccessBindings = (1 << 3), PropertyAccessFastPath = (1 << 4)"
  },
  {
    "label": "FRIEND_ENUM_CLASS_FLAGS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FRIEND_ENUM_CLASS_FLAGS(EPinProcessingFlags)"
  },
  {
    "label": "ProcessNonPosePins()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessNonPosePins(UAnimGraphNode_Base* InNode, IAnimBlueprintCompilationContext& InCompilationContext, IAnimBlueprintGeneratedClassCompiledData& OutCompiledData, EPinProcessingFlags InFlags)"
  },
  {
    "label": "CreateEvaluationHandlerForNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateEvaluationHandlerForNode(IAnimBlueprintCompilationContext& InCompilationContext, UAnimGraphNode_Base* InNode)"
  },
  {
    "label": "HandleStartCompilingClass()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "HandleStartCompilingClass(const UClass* InClass, IAnimBlueprintCompilationBracketContext& InCompilationContext, IAnimBlueprintGeneratedClassCompiledData& OutCompiledData)"
  },
  {
    "label": "HandleFinishCompilingClass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleFinishCompilingClass(const UClass* InClass, IAnimBlueprintCompilationBracketContext& InCompilationContext, IAnimBlueprintGeneratedClassCompiledData& OutCompiledData)"
  },
  {
    "label": "HandlePostExpansionStep()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandlePostExpansionStep(const UEdGraph* InGraph, IAnimBlueprintPostExpansionStepContext& InCompilationContext, IAnimBlueprintGeneratedClassCompiledData& OutCompiledData)"
  },
  {
    "label": "HandleCopyTermDefaultsToDefaultObject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleCopyTermDefaultsToDefaultObject(UObject* InDefaultObject, IAnimBlueprintCopyTermDefaultsContext& InCompilationContext, IAnimBlueprintExtensionCopyTermDefaultsContext& InPerExtensionContext)"
  },
  {
    "label": "PatchEvaluationHandlers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PatchEvaluationHandlers(const UClass* InClass, IAnimBlueprintCompilationBracketContext& InCompilationContext, IAnimBlueprintGeneratedClassCompiledData& OutCompiledData)"
  },
  {
    "label": "FPropertyCopyRecord()",
    "kind": "Method",
    "detail": "Function (private : struct FPropertyCopyRecord {)",
    "insertText": "FPropertyCopyRecord(UEdGraphPin* InDestPin, FProperty* InDestProperty, int32 InDestArrayIndex, TArray<FString>&& InDestPropertyPath) : DestPin(InDestPin) , DestProperty(InDestProperty) , DestArrayIndex(InDestArrayIndex) , DestPropertyPath(MoveTemp(InDestPropertyPath)) , BindingContextId(NAME_None) , Operation(EPostCopyOperation::None) , bIsFastPath(true) , bOnlyUpdateWhenActive(false)"
  },
  {
    "label": "FPropertyCopyRecord()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FPropertyCopyRecord(const TArray<FString>& InSourcePropertyPath, const TArray<FString>& InDestPropertyPath) : DestPin(nullptr) , DestProperty(nullptr) , DestArrayIndex(INDEX_NONE) , SourcePropertyPath(InSourcePropertyPath) , DestPropertyPath(InDestPropertyPath) , BindingContextId(NAME_None) , Operation(EPostCopyOperation::None) , bIsFastPath(true) , bOnlyUpdateWhenActive(false)"
  },
  {
    "label": "IsFastPath()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsFastPath()"
  },
  {
    "label": "InvalidateFastPath()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "InvalidateFastPath()"
  },
  {
    "label": "FCopyRecordGraphCheckContext()",
    "kind": "Method",
    "detail": "Function (bIsFastPath = false ; } UEdGraphPin* DestPin ; FProperty* DestProperty ; int32 DestArrayIndex ; TArray<FString> SourcePropertyPath ; TArray<FString> DestPropertyPath ; FPropertyAccessHandle LibraryHandle ; FCompiledPropertyAccessHandle LibraryCompiledHandle ; FName BindingContextId ; EPostCopyOperation Operation ; bool bIsFastPath ; bool bOnlyUpdateWhenActive ; } ; struct FCopyRecordGraphCheckContext {)",
    "insertText": "FCopyRecordGraphCheckContext(FPropertyCopyRecord& InCopyRecord, TArray<FPropertyCopyRecord>& InAdditionalCopyRecords, FCompilerResultsLog& InMessageLog) : CopyRecord(&InCopyRecord) , AdditionalCopyRecords(InAdditionalCopyRecords) , MessageLog(InMessageLog)"
  },
  {
    "label": "FAnimNodeSinglePropertyHandler()",
    "kind": "Method",
    "detail": "Function (} FPropertyCopyRecord* CopyRecord ; TArray<FPropertyCopyRecord>& AdditionalCopyRecords ; FCompilerResultsLog& MessageLog ; } ; struct FAnimNodeSinglePropertyHandler { TArray<FPropertyCopyRecord> CopyRecords ; bool bInstanceIsTarget ;)",
    "insertText": "FAnimNodeSinglePropertyHandler() : bInstanceIsTarget(false)"
  },
  {
    "label": "FEvaluationHandlerRecord()",
    "kind": "Method",
    "detail": "Function (} } ; struct FEvaluationHandlerRecord { public : UAnimGraphNode_Base* AnimGraphNode ; FStructProperty* NodeVariableProperty ; int32 EvaluationHandlerIdx ; bool bServicesNodeProperties ; bool bServicesInstanceProperties ; bool bHasProperties ; TMap<FName,FAnimNodeSinglePropertyHandler> ServicedProperties ; TArray<UEdGraphNode*> CustomEventNodes ; FName HandlerFunctionName ; public :)",
    "insertText": "FEvaluationHandlerRecord() : AnimGraphNode(nullptr) , NodeVariableProperty(nullptr) , EvaluationHandlerIdx(INDEX_NONE) , bServicesNodeProperties(false) , bServicesInstanceProperties(false) , bHasProperties(false) , HandlerFunctionName(NAME_None)"
  },
  {
    "label": "Value()",
    "kind": "Method",
    "detail": "Function (const FAnimNodeSinglePropertyHandler& AnimNodeSinglePropertyHandler = It .)",
    "insertText": "Value()"
  },
  {
    "label": "RegisterPin()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterPin(UEdGraphPin* DestPin, FProperty* AssociatedProperty, int32 AssociatedPropertyArrayIndex, bool bAllowFastPath)"
  },
  {
    "label": "RegisterPropertyBinding()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterPropertyBinding(FProperty* InProperty, const FAnimGraphNodePropertyBinding& InBinding)"
  },
  {
    "label": "GetHandlerNodeProperty()",
    "kind": "Method",
    "detail": "Function (FStructProperty*)",
    "insertText": "GetHandlerNodeProperty()"
  },
  {
    "label": "CheckForVariableGet()",
    "kind": "Method",
    "detail": "Function (private : bool)",
    "insertText": "CheckForVariableGet(FCopyRecordGraphCheckContext& Context, UEdGraphPin* DestPin)"
  },
  {
    "label": "CheckForLogicalNot()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CheckForLogicalNot(FCopyRecordGraphCheckContext& Context, UEdGraphPin* DestPin)"
  },
  {
    "label": "CheckForStructMemberAccess()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CheckForStructMemberAccess(FCopyRecordGraphCheckContext& Context, UEdGraphPin* DestPin)"
  },
  {
    "label": "CheckForMemberOnlyAccess()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CheckForMemberOnlyAccess(FPropertyCopyRecord& Context, UEdGraphPin* DestPin)"
  },
  {
    "label": "CheckForSplitPinAccess()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CheckForSplitPinAccess(FCopyRecordGraphCheckContext& Context, UEdGraphPin* DestPin)"
  },
  {
    "label": "CheckForArrayAccess()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CheckForArrayAccess(FCopyRecordGraphCheckContext& Context, UEdGraphPin* DestPin)"
  },
  {
    "label": "CreateEvaluationHandler()",
    "kind": "Method",
    "detail": "Function (} ; void)",
    "insertText": "CreateEvaluationHandler(IAnimBlueprintCompilationContext& InCompilationContext, UAnimGraphNode_Base* InNode, FEvaluationHandlerRecord& Record)"
  },
  {
    "label": "RedirectPropertyAccesses()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RedirectPropertyAccesses(IAnimBlueprintCompilationContext& InCompilationContext, UAnimGraphNode_Base* InNode, FEvaluationHandlerRecord& InRecord)"
  },
  {
    "label": "ENUM_CLASS_FLAGS()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "ENUM_CLASS_FLAGS(UAnimBlueprintExtension_Base::EPinProcessingFlags)"
  }
]