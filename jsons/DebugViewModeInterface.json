[
  {
    "label": "FDebugViewModePS",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDebugViewModePS"
  },
  {
    "label": "FMaterial",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMaterial"
  },
  {
    "label": "FMaterialRenderProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMaterialRenderProxy"
  },
  {
    "label": "FMeshDrawSingleShaderBindings",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMeshDrawSingleShaderBindings"
  },
  {
    "label": "FPrimitiveSceneProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPrimitiveSceneProxy"
  },
  {
    "label": "FVertexFactoryType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVertexFactoryType"
  },
  {
    "label": "FMeshPassProcessorRenderState",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMeshPassProcessorRenderState"
  },
  {
    "label": "FMaterialShaderTypes",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMaterialShaderTypes"
  },
  {
    "label": "FDebugViewModeInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDebugViewModeInterface"
  },
  {
    "label": "FRenderState",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRenderState"
  },
  {
    "label": "FRenderState()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" DebugViewModeHelpers . h \" # include \" Engine / EngineTypes . h \" # include \" RHI . h \" # include \" Shader . h \" # include \" DrawDebugHelpers . h \" # if ENABLE_DRAW_DEBUG class FDebugViewModePS ; class FMaterial ; class FMaterialRenderProxy ; class FMeshDrawSingleShaderBindings ; class FPrimitiveSceneProxy ; class FVertexFactoryType ; struct FMeshPassProcessorRenderState ; struct FMaterialShaderTypes ; class FDebugViewModeInterface { public : struct FRenderState {)",
    "insertText": "FRenderState() : BlendState(nullptr) , DepthStencilState(nullptr)"
  },
  {
    "label": "FDebugViewModeInterface()",
    "kind": "Method",
    "detail": "Function (} FRHIBlendState* BlendState ; FRHIDepthStencilState* DepthStencilState ; } ;)",
    "insertText": "FDebugViewModeInterface()"
  },
  {
    "label": "AddShaderTypes()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "AddShaderTypes(ERHIFeatureLevel::Type InFeatureLevel, const FVertexFactoryType* InVertexFactoryType, FMaterialShaderTypes& OutShaderTypes)"
  },
  {
    "label": "SetDrawRenderState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDrawRenderState(EDebugViewShaderMode DebugViewMode, EBlendMode BlendMode, FRenderState& DrawRenderState, bool bHasDepthPrepassForMaskedMaterial)"
  },
  {
    "label": "GetDebugViewModeShaderBindings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetDebugViewModeShaderBindings(const FDebugViewModePS& Shader, const FPrimitiveSceneProxy* PrimitiveSceneProxy, const FMaterialRenderProxy& MaterialRenderProxy, const FMaterial& Material, EDebugViewShaderMode DebugViewMode, const FVector& ViewOrigin, int32 VisualizeLODIndex, const FColor& SkinCacheDebugColor, int32 VisualizeElementIndex, int32 NumVSInstructions, int32 NumPSInstructions, int32 LWCComplexityVS, int32 LWCComplexityPS, int32 ViewModeParam, FName ViewModeParamName, FMeshDrawSingleShaderBindings& ShaderBindings)"
  },
  {
    "label": "GetInterface()",
    "kind": "Method",
    "detail": "Function (} const FDebugViewModeInterface*)",
    "insertText": "GetInterface(EDebugViewShaderMode InDebugViewMode)"
  },
  {
    "label": "SetInterface()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetInterface(FDebugViewModeInterface* Interface)"
  },
  {
    "label": "AllowFallbackToDefaultMaterial()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AllowFallbackToDefaultMaterial(const FMaterial* InMaterial)"
  },
  {
    "label": "AllowFallbackToDefaultMaterial()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AllowFallbackToDefaultMaterial(bool bHasVertexPositionOffsetConnected, bool bHasPixelDepthOffsetConnected)"
  }
]