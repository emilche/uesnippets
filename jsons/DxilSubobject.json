[
  {
    "label": "DxilSubobjects",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DxilSubobjects"
  },
  {
    "label": "DxilRuntimeData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DxilRuntimeData"
  },
  {
    "label": "DxilSubobject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DxilSubobject"
  },
  {
    "label": "StateObjectConfig_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "StateObjectConfig_t"
  },
  {
    "label": "RootSignature_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RootSignature_t"
  },
  {
    "label": "SubobjectToExportsAssociation_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SubobjectToExportsAssociation_t"
  },
  {
    "label": "RaytracingShaderConfig_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RaytracingShaderConfig_t"
  },
  {
    "label": "RaytracingPipelineConfig_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RaytracingPipelineConfig_t"
  },
  {
    "label": "RaytracingPipelineConfig1_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RaytracingPipelineConfig1_t"
  },
  {
    "label": "HitGroup_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "HitGroup_t"
  },
  {
    "label": "DxilSubobject()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" DxilConstants . h \" # include \" llvm / ADT / MapVector . h \" # include \" llvm / ADT / StringRef . h \" # include<map> # include<memory> # include<unordered_map> # include<vector> namespace hlsl { class DxilSubobjects ; namespace RDAT { class DxilRuntimeData ; } class DxilSubobject { public : using Kind = DXIL::SubobjectKind ;)",
    "insertText": "DxilSubobject()"
  },
  {
    "label": "DxilSubobject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DxilSubobject(const DxilSubobject &other)"
  },
  {
    "label": "DxilSubobject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DxilSubobject(DxilSubobject &&other)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (DxilSubobject&)",
    "insertText": "operator(const DxilSubobject &other)"
  },
  {
    "label": "GetKind()",
    "kind": "Method",
    "detail": "Function (Kind)",
    "insertText": "GetKind()"
  },
  {
    "label": "GetRootSignature()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetRootSignature(bool local, const void *&Data, uint32_t &Size, const char **pText = nullptr)"
  },
  {
    "label": "GetSubobjectToExportsAssociation()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetSubobjectToExportsAssociation(llvm::StringRef &Subobject, const char *const *&Exports, uint32_t &NumExports)"
  },
  {
    "label": "GetRaytracingShaderConfig()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetRaytracingShaderConfig(uint32_t &MaxPayloadSizeInBytes, uint32_t &MaxAttributeSizeInBytes)"
  },
  {
    "label": "GetRaytracingPipelineConfig()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetRaytracingPipelineConfig(uint32_t &MaxTraceRecursionDepth)"
  },
  {
    "label": "GetRaytracingPipelineConfig1()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetRaytracingPipelineConfig1(uint32_t &MaxTraceRecursionDepth, uint32_t &Flags)"
  },
  {
    "label": "GetHitGroup()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetHitGroup(DXIL::HitGroupType &hitGroupType, llvm::StringRef &AnyHit, llvm::StringRef &ClosestHit, llvm::StringRef &Intersection)"
  },
  {
    "label": "DxilSubobject()",
    "kind": "Method",
    "detail": "Function (private :)",
    "insertText": "DxilSubobject(DxilSubobjects &owner, Kind kind, llvm::StringRef name)"
  },
  {
    "label": "DxilSubobject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DxilSubobject(DxilSubobjects &owner, const DxilSubobject &other, llvm::StringRef name)"
  },
  {
    "label": "CopyUnionedContents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CopyUnionedContents(const DxilSubobject &other)"
  },
  {
    "label": "InternStrings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InternStrings()"
  },
  {
    "label": "DxilSubobjects()",
    "kind": "Method",
    "detail": "Function (DxilSubobjects& m_Owner ; Kind m_Kind ; llvm::StringRef m_Name ; std::vector<const char*> m_Exports ; struct StateObjectConfig_t { uint32_t Flags ; } ; struct RootSignature_t { uint32_t Size ; const void* Data ; const char* Text ; } ; struct SubobjectToExportsAssociation_t { const char* Subobject ; } ; struct RaytracingShaderConfig_t { uint32_t MaxPayloadSizeInBytes ; uint32_t MaxAttributeSizeInBytes ; } ; struct RaytracingPipelineConfig_t { uint32_t MaxTraceRecursionDepth ; } ; struct RaytracingPipelineConfig1_t { uint32_t MaxTraceRecursionDepth ; uint32_t Flags ; } ; struct HitGroup_t { DXIL::HitGroupType Type ; const char* AnyHit ; const char* ClosestHit ; const char* Intersection ; } ; union { StateObjectConfig_t StateObjectConfig ; RootSignature_t RootSignature ; SubobjectToExportsAssociation_t SubobjectToExportsAssociation ; RaytracingShaderConfig_t RaytracingShaderConfig ; RaytracingPipelineConfig_t RaytracingPipelineConfig ; HitGroup_t HitGroup ; RaytracingPipelineConfig1_t RaytracingPipelineConfig1 ; } ; class DxilSubobjects ; } ; class DxilSubobjects { public : typedef std::pair<std::unique_ptr<char [ ]>,size_t> StoredBytes ; typedef llvm::MapVector<llvm::StringRef,StoredBytes> BytesStorage ; typedef llvm::MapVector<llvm::StringRef,std::unique_ptr<DxilSubobject>> SubobjectStorage ; using Kind = DXIL::SubobjectKind ;)",
    "insertText": "DxilSubobjects()"
  },
  {
    "label": "DxilSubobjects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DxilSubobjects(const DxilSubobjects &other)"
  },
  {
    "label": "DxilSubobjects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DxilSubobjects(DxilSubobjects &&other)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (DxilSubobjects&)",
    "insertText": "operator(const DxilSubobjects &other)"
  },
  {
    "label": "InternString()",
    "kind": "Method",
    "detail": "Function (llvm::StringRef)",
    "insertText": "InternString(llvm::StringRef value)"
  },
  {
    "label": "InternRawBytes()",
    "kind": "Method",
    "detail": "Function (const void*)",
    "insertText": "InternRawBytes(const void *ptr, size_t size)"
  },
  {
    "label": "FindSubobject()",
    "kind": "Method",
    "detail": "Function (DxilSubobject*)",
    "insertText": "FindSubobject(llvm::StringRef name)"
  },
  {
    "label": "RemoveSubobject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveSubobject(llvm::StringRef name)"
  },
  {
    "label": "CloneSubobject()",
    "kind": "Method",
    "detail": "Function (DxilSubobject&)",
    "insertText": "CloneSubobject(const DxilSubobject &Subobject, llvm::StringRef Name)"
  },
  {
    "label": "GetSubobjects()",
    "kind": "Method",
    "detail": "Function (const SubobjectStorage&)",
    "insertText": "GetSubobjects()"
  },
  {
    "label": "CreateRootSignature()",
    "kind": "Method",
    "detail": "Function (DxilSubobject&)",
    "insertText": "CreateRootSignature(llvm::StringRef Name, bool local, const void *Data, uint32_t Size, llvm::StringRef *pText = nullptr)"
  },
  {
    "label": "CreateSubobjectToExportsAssociation()",
    "kind": "Method",
    "detail": "Function (DxilSubobject&)",
    "insertText": "CreateSubobjectToExportsAssociation(llvm::StringRef Name, llvm::StringRef Subobject, llvm::StringRef *Exports, uint32_t NumExports)"
  },
  {
    "label": "CreateRaytracingShaderConfig()",
    "kind": "Method",
    "detail": "Function (DxilSubobject&)",
    "insertText": "CreateRaytracingShaderConfig(llvm::StringRef Name, uint32_t MaxPayloadSizeInBytes, uint32_t MaxAttributeSizeInBytes)"
  },
  {
    "label": "CreateRaytracingPipelineConfig()",
    "kind": "Method",
    "detail": "Function (DxilSubobject&)",
    "insertText": "CreateRaytracingPipelineConfig(llvm::StringRef Name, uint32_t MaxTraceRecursionDepth)"
  },
  {
    "label": "CreateRaytracingPipelineConfig1()",
    "kind": "Method",
    "detail": "Function (DxilSubobject&)",
    "insertText": "CreateRaytracingPipelineConfig1(llvm::StringRef Name, uint32_t MaxTraceRecursionDepth, uint32_t Flags)"
  },
  {
    "label": "CreateHitGroup()",
    "kind": "Method",
    "detail": "Function (DxilSubobject&)",
    "insertText": "CreateHitGroup(llvm::StringRef Name, DXIL::HitGroupType hitGroupType, llvm::StringRef AnyHit, llvm::StringRef ClosestHit, llvm::StringRef Intersection)"
  },
  {
    "label": "CreateSubobject()",
    "kind": "Method",
    "detail": "Function (private : DxilSubobject&)",
    "insertText": "CreateSubobject(Kind kind, llvm::StringRef Name)"
  },
  {
    "label": "LoadSubobjectsFromRDAT()",
    "kind": "Method",
    "detail": "Function (BytesStorage m_BytesStorage ; SubobjectStorage m_Subobjects ; } ; bool)",
    "insertText": "LoadSubobjectsFromRDAT(DxilSubobjects &subobjects, const RDAT::DxilRuntimeData &rdat)"
  }
]