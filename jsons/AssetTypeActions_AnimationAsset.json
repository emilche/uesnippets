[
  {
    "label": "ASSETTOOLS_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ASSETTOOLS_API"
  },
  {
    "label": "IToolkitHost",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IToolkitHost"
  },
  {
    "label": "UThumbnailInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UThumbnailInfo"
  },
  {
    "label": "GetName()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Toolkits / IToolkitHost . h \" # include \" AssetTypeActions_Base . h \" # include \" Animation / AnimationAsset . h \" # include \" EditorAnimUtils . h \" # include \" SSkeletonWidget . h \" class FAssetTypeActions_AnimationAsset : public FAssetTypeActions_Base { public : FText)",
    "insertText": "GetName()"
  },
  {
    "label": "GetTypeColor()",
    "kind": "Method",
    "detail": "Function (} FColor)",
    "insertText": "GetTypeColor()"
  },
  {
    "label": "GetSupportedClass()",
    "kind": "Method",
    "detail": "Function (} UClass*)",
    "insertText": "GetSupportedClass()"
  },
  {
    "label": "OpenAssetEditor()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "OpenAssetEditor(const TArray<UObject*>& InObjects, TSharedPtr<class IToolkitHost> EditWithinLevelEditor = TSharedPtr<IToolkitHost>())"
  },
  {
    "label": "CanFilter()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanFilter()"
  },
  {
    "label": "ExecuteFindSkeleton()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "ExecuteFindSkeleton(TArray<TWeakObjectPtr<UAnimationAsset>> Objects)"
  },
  {
    "label": "ExecuteReplaceSkeleton()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExecuteReplaceSkeleton(TArray<TWeakObjectPtr<UAnimationAsset>> Objects)"
  },
  {
    "label": "ExecuteOpenInNewWindow()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExecuteOpenInNewWindow(TArray<TWeakObjectPtr<UAnimationAsset>> Objects)"
  },
  {
    "label": "OpenAnimAssetEditor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OpenAnimAssetEditor(const TArray<UObject*>& InObjects, bool bForceNewEditor, TSharedPtr<IToolkitHost> EditWithinLevelEditor)"
  },
  {
    "label": "ReplaceMissingSkeleton()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ReplaceMissingSkeleton(TArray<TObjectPtr<UObject>> InAnimationAssets)"
  }
]