[
  {
    "label": "Thread",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Thread"
  },
  {
    "label": "FakeAudioCaptureModule",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FakeAudioCaptureModule"
  },
  {
    "label": "sizeof()",
    "kind": "Method",
    "detail": "Function (# ifndef PC_TEST_FAKE_AUDIO_CAPTURE_MODULE_H_ # define PC_TEST_FAKE_AUDIO_CAPTURE_MODULE_H_ # include<stddef . h> # include<stdint . h> # include<memory> # include \" api / scoped_refptr . h \" # include \" api / sequence_checker . h \" # include \" modules / audio_device / include / audio_device . h \" # include \" modules / audio_device / include / audio_device_defines . h \" # include \" rtc_base / synchronization / mutex . h \" # include \" rtc_base / thread_annotations . h \" namespace rtc { class Thread ; } class FakeAudioCaptureModule : public webrtc::AudioDeviceModule { public : typedef uint16_t Sample ; const size_t kNumberSamples = 4 4 0 ; const size_t kNumberBytesPerSample =)",
    "insertText": "sizeof(Sample)"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (rtc::scoped_refptr<FakeAudioCaptureModule>)",
    "insertText": "Create()"
  },
  {
    "label": "frames_received()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "frames_received() const RTC_LOCKS_EXCLUDED(mutex_)"
  },
  {
    "label": "ActiveAudioLayer()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "ActiveAudioLayer(AudioLayer* audio_layer)"
  },
  {
    "label": "RegisterAudioCallback()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "RegisterAudioCallback(webrtc::AudioTransport* audio_callback) override RTC_LOCKS_EXCLUDED(mutex_)"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "Init()"
  },
  {
    "label": "Terminate()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "Terminate()"
  },
  {
    "label": "Initialized()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Initialized()"
  },
  {
    "label": "PlayoutDevices()",
    "kind": "Method",
    "detail": "Function (int16_t)",
    "insertText": "PlayoutDevices()"
  },
  {
    "label": "RecordingDevices()",
    "kind": "Method",
    "detail": "Function (int16_t)",
    "insertText": "RecordingDevices()"
  },
  {
    "label": "PlayoutDeviceName()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "PlayoutDeviceName(uint16_t index, char name[webrtc::kAdmMaxDeviceNameSize], char guid[webrtc::kAdmMaxGuidSize])"
  },
  {
    "label": "RecordingDeviceName()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "RecordingDeviceName(uint16_t index, char name[webrtc::kAdmMaxDeviceNameSize], char guid[webrtc::kAdmMaxGuidSize])"
  },
  {
    "label": "SetPlayoutDevice()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "SetPlayoutDevice(uint16_t index)"
  },
  {
    "label": "SetPlayoutDevice()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "SetPlayoutDevice(WindowsDeviceType device)"
  },
  {
    "label": "SetRecordingDevice()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "SetRecordingDevice(uint16_t index)"
  },
  {
    "label": "SetRecordingDevice()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "SetRecordingDevice(WindowsDeviceType device)"
  },
  {
    "label": "PlayoutIsAvailable()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "PlayoutIsAvailable(bool* available)"
  },
  {
    "label": "InitPlayout()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "InitPlayout()"
  },
  {
    "label": "PlayoutIsInitialized()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PlayoutIsInitialized()"
  },
  {
    "label": "RecordingIsAvailable()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "RecordingIsAvailable(bool* available)"
  },
  {
    "label": "InitRecording()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "InitRecording()"
  },
  {
    "label": "RecordingIsInitialized()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RecordingIsInitialized()"
  },
  {
    "label": "StartPlayout()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "StartPlayout() RTC_LOCKS_EXCLUDED(mutex_)"
  },
  {
    "label": "StopPlayout()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "StopPlayout() RTC_LOCKS_EXCLUDED(mutex_)"
  },
  {
    "label": "Playing()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Playing() const RTC_LOCKS_EXCLUDED(mutex_)"
  },
  {
    "label": "StartRecording()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "StartRecording() RTC_LOCKS_EXCLUDED(mutex_)"
  },
  {
    "label": "StopRecording()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "StopRecording() RTC_LOCKS_EXCLUDED(mutex_)"
  },
  {
    "label": "Recording()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Recording() const RTC_LOCKS_EXCLUDED(mutex_)"
  },
  {
    "label": "InitSpeaker()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "InitSpeaker()"
  },
  {
    "label": "SpeakerIsInitialized()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SpeakerIsInitialized()"
  },
  {
    "label": "InitMicrophone()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "InitMicrophone()"
  },
  {
    "label": "MicrophoneIsInitialized()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "MicrophoneIsInitialized()"
  },
  {
    "label": "SpeakerVolumeIsAvailable()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "SpeakerVolumeIsAvailable(bool* available)"
  },
  {
    "label": "SetSpeakerVolume()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "SetSpeakerVolume(uint32_t volume)"
  },
  {
    "label": "SpeakerVolume()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "SpeakerVolume(uint32_t* volume)"
  },
  {
    "label": "MaxSpeakerVolume()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "MaxSpeakerVolume(uint32_t* max_volume)"
  },
  {
    "label": "MinSpeakerVolume()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "MinSpeakerVolume(uint32_t* min_volume)"
  },
  {
    "label": "MicrophoneVolumeIsAvailable()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "MicrophoneVolumeIsAvailable(bool* available)"
  },
  {
    "label": "SetMicrophoneVolume()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "SetMicrophoneVolume(uint32_t volume) RTC_LOCKS_EXCLUDED(mutex_)"
  },
  {
    "label": "MicrophoneVolume()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "MicrophoneVolume(uint32_t* volume) const RTC_LOCKS_EXCLUDED(mutex_)"
  },
  {
    "label": "MaxMicrophoneVolume()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "MaxMicrophoneVolume(uint32_t* max_volume)"
  },
  {
    "label": "MinMicrophoneVolume()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "MinMicrophoneVolume(uint32_t* min_volume)"
  },
  {
    "label": "SpeakerMuteIsAvailable()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "SpeakerMuteIsAvailable(bool* available)"
  },
  {
    "label": "SetSpeakerMute()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "SetSpeakerMute(bool enable)"
  },
  {
    "label": "SpeakerMute()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "SpeakerMute(bool* enabled)"
  },
  {
    "label": "MicrophoneMuteIsAvailable()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "MicrophoneMuteIsAvailable(bool* available)"
  },
  {
    "label": "SetMicrophoneMute()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "SetMicrophoneMute(bool enable)"
  },
  {
    "label": "MicrophoneMute()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "MicrophoneMute(bool* enabled)"
  },
  {
    "label": "StereoPlayoutIsAvailable()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "StereoPlayoutIsAvailable(bool* available)"
  },
  {
    "label": "SetStereoPlayout()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "SetStereoPlayout(bool enable)"
  },
  {
    "label": "StereoPlayout()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "StereoPlayout(bool* enabled)"
  },
  {
    "label": "StereoRecordingIsAvailable()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "StereoRecordingIsAvailable(bool* available)"
  },
  {
    "label": "SetStereoRecording()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "SetStereoRecording(bool enable)"
  },
  {
    "label": "StereoRecording()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "StereoRecording(bool* enabled)"
  },
  {
    "label": "PlayoutDelay()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "PlayoutDelay(uint16_t* delay_ms)"
  },
  {
    "label": "BuiltInAECIsAvailable()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "BuiltInAECIsAvailable()"
  },
  {
    "label": "FakeAudioCaptureModule()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FakeAudioCaptureModule()"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (private : bool)",
    "insertText": "Initialize()"
  },
  {
    "label": "SetSendBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSendBuffer(int value)"
  },
  {
    "label": "ResetRecBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetRecBuffer()"
  },
  {
    "label": "CheckRecBuffer()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CheckRecBuffer(int value)"
  },
  {
    "label": "ShouldStartProcessing()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldStartProcessing() RTC_EXCLUSIVE_LOCKS_REQUIRED(mutex_)"
  },
  {
    "label": "UpdateProcessing()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateProcessing(bool start) RTC_LOCKS_EXCLUDED(mutex_)"
  },
  {
    "label": "StartProcessP()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StartProcessP()"
  },
  {
    "label": "ProcessFrameP()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessFrameP() RTC_LOCKS_EXCLUDED(mutex_)"
  },
  {
    "label": "ReceiveFrameP()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReceiveFrameP() RTC_EXCLUSIVE_LOCKS_REQUIRED(mutex_)"
  },
  {
    "label": "SendFrameP()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SendFrameP() RTC_EXCLUSIVE_LOCKS_REQUIRED(mutex_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (webrtc::AudioTransport* audio_callback_)",
    "insertText": "RTC_GUARDED_BY(mutex_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (int64_t next_frame_time_)",
    "insertText": "RTC_GUARDED_BY(process_thread_checker_)"
  }
]