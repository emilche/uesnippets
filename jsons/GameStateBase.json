[
  {
    "label": "APlayerState",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "APlayerState"
  },
  {
    "label": "ASpectatorPawn",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ASpectatorPawn"
  },
  {
    "label": "AGameModeBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AGameModeBase"
  },
  {
    "label": "AController",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AController"
  },
  {
    "label": "AGameStateBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AGameStateBase"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "UDemoNetDriver",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UDemoNetDriver"
  },
  {
    "label": "FReplayHelper",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FReplayHelper"
  },
  {
    "label": "DECLARE_LOG_CATEGORY_EXTERN()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" Templates / SubclassOf . h \" # include \" Engine / EngineTypes . h \" # include \" GameFramework / Actor . h \" # include \" GameFramework / Info . h \" # include \" GameFramework / GameModeBase . h \" # include \" Stats / Stats . h \" # include \" GameStateBase . generated . h \" class APlayerState ; class ASpectatorPawn ;)",
    "insertText": "DECLARE_LOG_CATEGORY_EXTERN(LogGameState, Log, All)"
  },
  {
    "label": "DECLARE_CYCLE_STAT_EXTERN()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_CYCLE_STAT_EXTERN(TEXT( \"GetPlayerStateFromUniqueId\" ), STAT_GetPlayerStateFromUniqueId, STATGROUP_Game , ENGINE_API)"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (class AGameModeBase ; class ASpectatorPawn ; class APlayerState ; class AController ;)",
    "insertText": "UCLASS(config=Game, notplaceable, BlueprintType, Blueprintable, MinimalAPI)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() public: UPROPERTY(Transient, BlueprintReadOnly, Category=GameState, ReplicatedUsing=OnRep_GameModeClass)"
  },
  {
    "label": "AsyncPackageLoaded()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AsyncPackageLoaded(UObject* Package)"
  },
  {
    "label": "GetDefaultGameMode()",
    "kind": "Method",
    "detail": "Function (} const AGameModeBase*)",
    "insertText": "GetDefaultGameMode()"
  },
  {
    "label": "GetLifetimeReplicatedProps()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetLifetimeReplicatedProps(TArray< FLifetimeProperty > &OutLifetimeProps)"
  },
  {
    "label": "GetPlayerStateFromUniqueNetId()",
    "kind": "Method",
    "detail": "Function (APlayerState*)",
    "insertText": "GetPlayerStateFromUniqueNetId(const FUniqueNetIdWrapper& InPlayerId)"
  },
  {
    "label": "ReceivedGameModeClass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReceivedGameModeClass()"
  },
  {
    "label": "ReceivedSpectatorClass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReceivedSpectatorClass()"
  },
  {
    "label": "SeamlessTravelTransitionCheckpoint()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SeamlessTravelTransitionCheckpoint(bool bToTransitionMap)"
  },
  {
    "label": "AddPlayerState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddPlayerState(APlayerState* PlayerState)"
  },
  {
    "label": "RemovePlayerState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemovePlayerState(APlayerState* PlayerState)"
  },
  {
    "label": "HandleBeginPlay()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleBeginPlay()"
  },
  {
    "label": "PostInitializeComponents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostInitializeComponents()"
  },
  {
    "label": "UpdateServerTimeSeconds()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateServerTimeSeconds()"
  },
  {
    "label": "HIDE_ACTOR_TRANSFORM_FUNCTIONS()",
    "kind": "Method",
    "detail": "Function (FTimerHandle TimerHandle_UpdateServerTimeSeconds ; double SumServerWorldTimeSecondsDelta ; uint32 NumServerWorldTimeSecondsDeltas ; private :)",
    "insertText": "HIDE_ACTOR_TRANSFORM_FUNCTIONS()"
  }
]