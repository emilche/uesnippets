[
  {
    "label": "FCanvas",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCanvas"
  },
  {
    "label": "FPreviewScene",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPreviewScene"
  },
  {
    "label": "SAutoRefreshViewport",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SAutoRefreshViewport"
  },
  {
    "label": "FUMGViewportCameraTransform",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FUMGViewportCameraTransform"
  },
  {
    "label": "FUMGViewportClient",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FUMGViewportClient"
  },
  {
    "label": "UViewport",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UViewport"
  },
  {
    "label": "SAutoRefreshViewport",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SAutoRefreshViewport"
  },
  {
    "label": "FUMGViewportCameraTransform()",
    "kind": "Method",
    "detail": "Function (UMG_API)",
    "insertText": "FUMGViewportCameraTransform()"
  },
  {
    "label": "SetLocation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetLocation(const FVector& Position)"
  },
  {
    "label": "TransitionToLocation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TransitionToLocation(const FVector& InDesiredLocation, bool bInstant)"
  },
  {
    "label": "UpdateTransition()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UpdateTransition()"
  },
  {
    "label": "FUMGViewportClient()",
    "kind": "Method",
    "detail": "Function (UMG_API)",
    "insertText": "FUMGViewportClient(FPreviewScene* InPreviewScene = nullptr)"
  },
  {
    "label": "Tick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Tick(float InDeltaTime)"
  },
  {
    "label": "SetBackgroundColor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetBackgroundColor(FLinearColor InBackgroundColor)"
  },
  {
    "label": "check()",
    "kind": "Method",
    "detail": "Function (errors)",
    "insertText": "check(InOrthoZoom != 0)"
  },
  {
    "label": "SetViewLocation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetViewLocation(FVector Location)"
  },
  {
    "label": "SetViewRotation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetViewRotation(FRotator Rotation)"
  },
  {
    "label": "SetBackgroundColor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetBackgroundColor(const FLinearColor& InColor)"
  },
  {
    "label": "SetEnableAdvancedFeatures()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetEnableAdvancedFeatures(bool InEnableAdvancedFeatures)"
  },
  {
    "label": "SetLightIntensity()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetLightIntensity(float LightIntensity)"
  },
  {
    "label": "SetSkyIntensity()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSkyIntensity(float LightIntensity)"
  },
  {
    "label": "SetShowFlag()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetShowFlag(FString InShowFlagName, bool InValue)"
  }
]