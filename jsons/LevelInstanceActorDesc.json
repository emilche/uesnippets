[
  {
    "label": "ULevelInstanceSubsystem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULevelInstanceSubsystem"
  },
  {
    "label": "FWorldPartitionActorDescInstance",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWorldPartitionActorDescInstance"
  },
  {
    "label": "IStreamingGenerationErrorHandler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IStreamingGenerationErrorHandler"
  },
  {
    "label": "IWorldPartitionActorDescInstanceView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IWorldPartitionActorDescInstanceView"
  },
  {
    "label": "UActorDescContainerInstance",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UActorDescContainerInstance"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FLevelInstanceActorDesc",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLevelInstanceActorDesc"
  },
  {
    "label": "FLevelInstanceActorDesc()",
    "kind": "Method",
    "detail": "Function (# pragma once # if WITH_EDITOR # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / GCObject . h \" # include \" UObject / ObjectPtr . h \" # include \" Containers / Map . h \" # include \" WorldPartition / WorldPartitionActorDesc . h \" # include \" WorldPartition / LevelInstance / LevelInstancePropertyOverrideDesc . h \" # include \" WorldPartition / Filter / WorldPartitionActorFilter . h \" class ULevelInstanceSubsystem ; class FWorldPartitionActorDescInstance ; class IStreamingGenerationErrorHandler ; class IWorldPartitionActorDescInstanceView ; class UActorDescContainerInstance ; enum class ELevelInstanceRuntimeBehavior : uint8 ; class FLevelInstanceActorDesc : public FWorldPartitionActorDesc { public :)",
    "insertText": "FLevelInstanceActorDesc()"
  },
  {
    "label": "IsChildContainerInstance()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsChildContainerInstance()"
  },
  {
    "label": "GetChildContainerFilterType()",
    "kind": "Method",
    "detail": "Function (EWorldPartitionActorFilterType)",
    "insertText": "GetChildContainerFilterType()"
  },
  {
    "label": "GetChildContainerPackage()",
    "kind": "Method",
    "detail": "Function (} FName)",
    "insertText": "GetChildContainerPackage()"
  },
  {
    "label": "GetChildContainerName()",
    "kind": "Method",
    "detail": "Function (} FString)",
    "insertText": "GetChildContainerName()"
  },
  {
    "label": "GetChildContainerFilter()",
    "kind": "Method",
    "detail": "Function (const FWorldPartitionActorFilter*)",
    "insertText": "GetChildContainerFilter()"
  },
  {
    "label": "GetChildContainer()",
    "kind": "Method",
    "detail": "Function (UActorDescContainer*)",
    "insertText": "GetChildContainer()"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (} protected : void)",
    "insertText": "Init(const AActor* InActor)"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Init(const FWorldPartitionActorDescInitData& DescData)"
  },
  {
    "label": "Equals()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Equals(const FWorldPartitionActorDesc* Other)"
  },
  {
    "label": "TransferFrom()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TransferFrom(const FWorldPartitionActorDesc* From)"
  },
  {
    "label": "GetSizeOf()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetSizeOf()"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Serialize(FArchive& Ar)"
  },
  {
    "label": "SetContainer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetContainer(UActorDescContainer* InContainer)"
  },
  {
    "label": "CreateChildContainerInstance()",
    "kind": "Method",
    "detail": "Function (UActorDescContainerInstance*)",
    "insertText": "CreateChildContainerInstance(const FWorldPartitionActorDescInstance* InActorDescInstance)"
  },
  {
    "label": "GetChildContainerInstance()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetChildContainerInstance(const FWorldPartitionActorDescInstance* InActorDescInstance, FContainerInstance& OutContainerInstance)"
  },
  {
    "label": "GetLoadedChildWorldPartition()",
    "kind": "Method",
    "detail": "Function (UWorldPartition*)",
    "insertText": "GetLoadedChildWorldPartition(const FWorldPartitionActorDescInstance* InActorDescInstance)"
  },
  {
    "label": "GetChildContainerTransform()",
    "kind": "Method",
    "detail": "Function (FTransform)",
    "insertText": "GetChildContainerTransform()"
  },
  {
    "label": "GetOverrideDesc()",
    "kind": "Method",
    "detail": "Function (FLevelInstancePropertyOverrideDesc*)",
    "insertText": "GetOverrideDesc()"
  },
  {
    "label": "ValidateCircularReference()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "ValidateCircularReference(const UActorDescContainerInstance* InParentContainer, FName InChildContainerPackage)"
  },
  {
    "label": "IsChildContainerInstanceInternal()",
    "kind": "Method",
    "detail": "Function (FSoftObjectPath WorldAsset ; ELevelInstanceRuntimeBehavior DesiredRuntimeBehavior ; TWeakObjectPtr<UActorDescContainer> ChildContainer ; FWorldPartitionActorFilter Filter ; bool bIsChildContainerInstance ; FSoftObjectPath PropertyOverrideAsset ; TSharedPtr<FLevelInstancePropertyOverrideDesc> PropertyOverrideDesc ; private : bool)",
    "insertText": "IsChildContainerInstanceInternal()"
  },
  {
    "label": "RegisterChildContainer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterChildContainer()"
  },
  {
    "label": "UnregisterChildContainer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterChildContainer()"
  },
  {
    "label": "UpdateBounds()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateBounds()"
  }
]