[
  {
    "label": "ITableRow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITableRow"
  },
  {
    "label": "SSearchBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SSearchBox"
  },
  {
    "label": "STableViewBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "STableViewBase"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "KISMET_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "KISMET_API"
  },
  {
    "label": "FListRow",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FListRow"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" Containers / BitArray . h \" # include \" Containers / Map . h \" # include \" Containers / Set . h \" # include \" Containers / SparseArray . h \" # include \" Containers / UnrealString . h \" # include \" CoreMinimal . h \" # include \" Delegates / Delegate . h \" # include \" Framework / SlateDelegates . h \" # include \" HAL / PlatformCrt . h \" # include \" Input / Reply . h \" # include \" Internationalization / Text . h \" # include \" Layout / Visibility . h \" # include \" Misc / Optional . h \" # include \" SlateFwd . h \" # include \" Templates / SharedPointer . h \" # include \" Templates / TypeHash . h \" # include \" UObject / Object . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Widgets / SCompoundWidget . h \" # include \" Widgets / SWidget . h \" # include \" Widgets / Views / SListView . h \" # include \" Widgets / Views / STableRow . h \" # include \" Widgets / Views / STableViewBase . h \" class ITableRow ; class SSearchBox ; class STableViewBase ; class SWidget ; class SFilterableObjectList : public SCompoundWidget { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SFilterableObjectList)"
  },
  {
    "label": "SLATE_END_ARGS()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_END_ARGS() public: void Construct(const FArguments& InArgs)"
  },
  {
    "label": "InternalConstruct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InternalConstruct()"
  },
  {
    "label": "RebuildObjectList()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "RebuildObjectList()"
  },
  {
    "label": "GetSearchableText()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetSearchableText(UObject* Object)"
  },
  {
    "label": "FListRow()",
    "kind": "Method",
    "detail": "Function (struct FListRow {)",
    "insertText": "FListRow(const TSharedRef<SWidget>& InWidget, const FOnDragDetected& OnDragDetected ) : Widget(InWidget) , OnDragDetected_Handler( OnDragDetected)"
  },
  {
    "label": "GenerateRowForObject()",
    "kind": "Method",
    "detail": "Function (} TSharedRef<SWidget> Widget ; FOnDragDetected OnDragDetected_Handler ; } ; FListRow)",
    "insertText": "GenerateRowForObject(UObject* Object)"
  },
  {
    "label": "RefilterObjectList()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "RefilterObjectList()"
  },
  {
    "label": "OnGenerateTableRow()",
    "kind": "Method",
    "detail": "Function (TSharedRef<ITableRow>)",
    "insertText": "OnGenerateTableRow(UObject* InData, const TSharedRef<STableViewBase>& OwnerTable)"
  },
  {
    "label": "OnRefreshButtonClicked()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnRefreshButtonClicked()"
  },
  {
    "label": "OnFilterTextChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnFilterTextChanged(const FText& InFilterText)"
  },
  {
    "label": "GetFilterStatusVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "GetFilterStatusVisibility()"
  },
  {
    "label": "GetFilterStatusText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetFilterStatusText()"
  },
  {
    "label": "IsFilterActive()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsFilterActive()"
  },
  {
    "label": "ReapplyFilter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReapplyFilter()"
  }
]