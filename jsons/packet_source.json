[
  {
    "label": "PacketSource",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PacketSource"
  },
  {
    "label": "PacketSource()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_AUDIO_CODING_NETEQ_TOOLS_PACKET_SOURCE_H_ # define MODULES_AUDIO_CODING_NETEQ_TOOLS_PACKET_SOURCE_H_ # include<bitset> # include<memory> # include \" modules / audio_coding / neteq / tools / packet . h \" namespace webrtc { namespace test { class PacketSource { public :)",
    "insertText": "PacketSource()"
  },
  {
    "label": "PacketSource()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PacketSource(const PacketSource&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (PacketSource&)",
    "insertText": "operator(const PacketSource&)"
  },
  {
    "label": "NextPacket()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<Packet>)",
    "insertText": "NextPacket()"
  },
  {
    "label": "FilterOutPayloadType()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FilterOutPayloadType(uint8_t payload_type)"
  }
]