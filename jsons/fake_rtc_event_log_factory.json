[
  {
    "label": "FakeRtcEventLogFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FakeRtcEventLogFactory"
  },
  {
    "label": "FakeRtcEventLogFactory()",
    "kind": "Method",
    "detail": "Function (# ifndef LOGGING_RTC_EVENT_LOG_FAKE_RTC_EVENT_LOG_FACTORY_H_ # define LOGGING_RTC_EVENT_LOG_FAKE_RTC_EVENT_LOG_FACTORY_H_ # include<memory> # include \" api / rtc_event_log / rtc_event_log_factory_interface . h \" # include \" logging / rtc_event_log / fake_rtc_event_log . h \" namespace webrtc { class FakeRtcEventLogFactory : public RtcEventLogFactoryInterface { public :)",
    "insertText": "FakeRtcEventLogFactory()"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<RtcEventLog>)",
    "insertText": "Create(RtcEventLog::EncodingType encoding_type)"
  },
  {
    "label": "CreateRtcEventLog()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<RtcEventLog>)",
    "insertText": "CreateRtcEventLog(RtcEventLog::EncodingType encoding_type)"
  },
  {
    "label": "last_log_created()",
    "kind": "Method",
    "detail": "Function (webrtc::FakeRtcEventLog*)",
    "insertText": "last_log_created()"
  }
]