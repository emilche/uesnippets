[
  {
    "label": "FCategoryPropertyNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCategoryPropertyNode"
  },
  {
    "label": "FCategoryPropertyNode()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" PropertyNode . h \" class FCategoryPropertyNode : public FPropertyNode { public :)",
    "insertText": "FCategoryPropertyNode()"
  },
  {
    "label": "AsCategoryNode()",
    "kind": "Method",
    "detail": "Function (FCategoryPropertyNode*)",
    "insertText": "AsCategoryNode()"
  },
  {
    "label": "GetCategoryName()",
    "kind": "Method",
    "detail": "Function (CategoryName = InCategoryName ; } const FName&)",
    "insertText": "GetCategoryName(void)"
  },
  {
    "label": "GetDisplayName()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetDisplayName()"
  },
  {
    "label": "InitBeforeNodeFlags()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "InitBeforeNodeFlags()"
  },
  {
    "label": "InitChildNodes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitChildNodes()"
  },
  {
    "label": "GetQualifiedName()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetQualifiedName(FString& PathPlusIndex, const bool bWithArrayIndex, const FPropertyNode* StopParent = nullptr, bool bIgnoreCategories = false)"
  },
  {
    "label": "GetSubcategoryName()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetSubcategoryName()"
  }
]