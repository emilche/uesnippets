[
  {
    "label": "OnceCallback",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "OnceCallback"
  },
  {
    "label": "RepeatingCallback",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RepeatingCallback"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# ifndef CEF_INCLUDE_BASE_CEF_CALLBACK_H_ # define CEF_INCLUDE_BASE_CEF_CALLBACK_H_ # pragma once # if)",
    "insertText": "defined(USING_CHROMIUM_INCLUDES)"
  },
  {
    "label": "R()",
    "kind": "Method",
    "detail": "Function (template<R,. . . Args> class OnceCallback<)",
    "insertText": "R(Args...)"
  },
  {
    "label": "R()",
    "kind": "Method",
    "detail": "Function (using PolymorphicInvoke =)",
    "insertText": "R(*)(internal::BindStateBase*, internal::PassingType<Args>...)"
  },
  {
    "label": "OnceCallback()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnceCallback()"
  },
  {
    "label": "OnceCallback()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnceCallback(std::nullptr_t)"
  },
  {
    "label": "OnceCallback()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnceCallback(internal::BindStateBase* bind_state) : internal::CallbackBase(bind_state)"
  },
  {
    "label": "OnceCallback()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "OnceCallback(const OnceCallback&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (OnceCallback&)",
    "insertText": "operator(const OnceCallback&)"
  },
  {
    "label": "OnceCallback()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnceCallback(OnceCallback&&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (OnceCallback&)",
    "insertText": "operator(OnceCallback&&)"
  },
  {
    "label": "OnceCallback()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnceCallback(RepeatingCallback<RunType> other) : internal::CallbackBase(std::move(other))"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} OnceCallback&)",
    "insertText": "operator(RepeatingCallback<RunType> other)"
  },
  {
    "label": "CallbackBase()",
    "kind": "Method",
    "detail": "Function (static_cast<)",
    "insertText": "CallbackBase(*this) = std::move(other)"
  },
  {
    "label": "NOTREACHED()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NOTREACHED()"
  },
  {
    "label": "Run()",
    "kind": "Method",
    "detail": "Function (} R)",
    "insertText": "Run(Args... args)"
  },
  {
    "label": "move()",
    "kind": "Method",
    "detail": "Function (OnceCallback cb =)",
    "insertText": "move(*this)"
  },
  {
    "label": "PolymorphicInvoke()",
    "kind": "Method",
    "detail": "Function (PolymorphicInvoke f = reinterpret_cast<)",
    "insertText": "PolymorphicInvoke(cb.polymorphic_invoke())"
  },
  {
    "label": "ThenR()",
    "kind": "Method",
    "detail": "Function (} template<ThenR,. . . ThenArgs> OnceCallback<)",
    "insertText": "ThenR(Args...)> Then(OnceCallback<ThenR(ThenArgs...)> then)"
  },
  {
    "label": "ThenR()",
    "kind": "Method",
    "detail": "Function (} template<ThenR,. . . ThenArgs> OnceCallback<)",
    "insertText": "ThenR(Args...)> Then( RepeatingCallback<ThenR(ThenArgs...)> then)"
  },
  {
    "label": "RepeatingCallback()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RepeatingCallback()"
  },
  {
    "label": "RepeatingCallback()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RepeatingCallback(std::nullptr_t)"
  },
  {
    "label": "RepeatingCallback()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RepeatingCallback(internal::BindStateBase* bind_state) : internal::CallbackBaseCopyable(bind_state)"
  },
  {
    "label": "RepeatingCallback()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "RepeatingCallback(const RepeatingCallback&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (RepeatingCallback&)",
    "insertText": "operator(const RepeatingCallback&)"
  },
  {
    "label": "RepeatingCallback()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RepeatingCallback(RepeatingCallback&&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (RepeatingCallback&)",
    "insertText": "operator(RepeatingCallback&&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "operator(const RepeatingCallback& other)"
  },
  {
    "label": "PolymorphicInvoke()",
    "kind": "Method",
    "detail": "Function (PolymorphicInvoke f = reinterpret_cast<)",
    "insertText": "PolymorphicInvoke(this->polymorphic_invoke())"
  }
]