[
  {
    "label": "DiyFp",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DiyFp"
  },
  {
    "label": "License()",
    "kind": "Method",
    "detail": "Function (MIT)",
    "insertText": "License(the \"License\")"
  },
  {
    "label": "DiyFp()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "DiyFp(f - rhs.f, e)"
  },
  {
    "label": "DiyFp()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "DiyFp(h, e + rhs.e + 64)"
  },
  {
    "label": "DiyFp()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "DiyFp(h, e + rhs.e + 64)"
  },
  {
    "label": "DiyFp()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "DiyFp(f << s, e - s)"
  },
  {
    "label": "DiyFp()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "DiyFp(kCachedPowers_F[index], kCachedPowers_E[index])"
  },
  {
    "label": "GetCachedPowerByIndex()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetCachedPowerByIndex(index)"
  },
  {
    "label": "GetCachedPowerByIndex()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetCachedPowerByIndex(index)"
  }
]