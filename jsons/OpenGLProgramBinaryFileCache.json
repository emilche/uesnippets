[
  {
    "label": "FOpenGLLinkedProgram",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FOpenGLLinkedProgram"
  },
  {
    "label": "FOpenGLProgramBinary",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FOpenGLProgramBinary"
  },
  {
    "label": "FOpenGLProgramBinaryMapping",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FOpenGLProgramBinaryMapping"
  },
  {
    "label": "FGLProgramBinaryFileCacheEntry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGLProgramBinaryFileCacheEntry"
  },
  {
    "label": "FOpenGLProgramBinaryCache",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FOpenGLProgramBinaryCache"
  },
  {
    "label": "FPendingShaderCode",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPendingShaderCode"
  },
  {
    "label": "FCurrentShaderPipelineProperties",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCurrentShaderPipelineProperties"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Initialize()"
  },
  {
    "label": "Shutdown()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Shutdown()"
  },
  {
    "label": "IsEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsEnabled()"
  },
  {
    "label": "RequiresCaching()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RequiresCaching(const FOpenGLProgramKey& ProgramKey)"
  },
  {
    "label": "CacheProgramBinary()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CacheProgramBinary(const FOpenGLProgramKey& ProgramKey, TUniqueObj<FOpenGLProgramBinary>&& ProgramBinary)"
  },
  {
    "label": "TickBinaryCache()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TickBinaryCache()"
  },
  {
    "label": "CheckSinglePendingGLProgramCreateRequest()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CheckSinglePendingGLProgramCreateRequest(const FOpenGLProgramKey& ProgramKey)"
  },
  {
    "label": "IsBuildingCache()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsBuildingCache()"
  },
  {
    "label": "EnqueueBinaryForGLProgramContainer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnqueueBinaryForGLProgramContainer(const FOpenGLProgramKey& ProgramKey, TUniqueObj<FOpenGLProgramBinary>&& ProgramBinary)"
  },
  {
    "label": "FOpenGLProgramBinaryCache()",
    "kind": "Method",
    "detail": "Function (private:)",
    "insertText": "FOpenGLProgramBinaryCache(const FString& InCachePath)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "ScanProgramCacheFile()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ScanProgramCacheFile()"
  },
  {
    "label": "OpenCacheWriteHandle()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "OpenCacheWriteHandle(const FString& ProgramCacheFilenameToWrite, bool bAppendToExisting)"
  },
  {
    "label": "MarkValidContent()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "MarkValidContent(int32 NumPrograms)"
  },
  {
    "label": "CloseCacheWriteHandle()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CloseCacheWriteHandle(int32 NumProgramsAdded)"
  },
  {
    "label": "RequiresCaching_Internal()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RequiresCaching_Internal(const FOpenGLProgramKey& ProgramKey)"
  },
  {
    "label": "AddProgramBinaryDataToBinaryCache()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddProgramBinaryDataToBinaryCache(const FOpenGLProgramKey& ProgramKey, const FOpenGLProgramBinary& BinaryProgramData)"
  },
  {
    "label": "CheckPendingGLProgramCreateRequests_internal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CheckPendingGLProgramCreateRequests_internal()"
  },
  {
    "label": "CheckSinglePendingGLProgramCreateRequest_internal()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CheckSinglePendingGLProgramCreateRequest_internal(const FOpenGLProgramKey& ProgramKey)"
  },
  {
    "label": "OnShaderPipelineCacheOpened()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnShaderPipelineCacheOpened(FString const& Name, EShaderPlatform Platform, uint32 Count, const FGuid& VersionGuid, FShaderPipelineCache::FShaderCachePrecompileContext& ShaderCachePrecompileContext)"
  },
  {
    "label": "OnShaderPipelineCachePrecompilationComplete()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnShaderPipelineCachePrecompilationComplete(uint32 Count, double Seconds, const FShaderPipelineCache::FShaderCachePrecompileContext& ShaderCachePrecompileContext)"
  },
  {
    "label": "InitPrecaching()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitPrecaching()"
  },
  {
    "label": "UpdatePrecacheMapping()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdatePrecacheMapping()"
  },
  {
    "label": "GetOrAddFileMapping()",
    "kind": "Method",
    "detail": "Function (TRefCountPtr<FOpenGLProgramBinaryMapping>)",
    "insertText": "GetOrAddFileMapping(const FString& ProgramCacheFilename, int32 ProgramCount, int64 Offset, int64 Size)"
  },
  {
    "label": "ReadProgramFile_Internal()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ReadProgramFile_Internal(uint32 ProgramsToRead, int64 EndOffset, const FString& ProgramCacheFilename, FArchive& Ar)"
  }
]