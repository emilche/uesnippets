[
  {
    "label": "AIGRAPH_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AIGRAPH_API"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "FAIGraphEditor()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" EditorUndoClient . h \" # include \" GraphEditor . h \" class FAIGraphEditor : public FEditorUndoClient { public :)",
    "insertText": "FAIGraphEditor()"
  },
  {
    "label": "GetSelectedNodes()",
    "kind": "Method",
    "detail": "Function (FGraphPanelSelectionSet)",
    "insertText": "GetSelectedNodes()"
  },
  {
    "label": "OnSelectedNodesChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSelectedNodesChanged(const TSet<class UObject*>& NewSelection)"
  },
  {
    "label": "PostUndo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostUndo(bool bSuccess)"
  },
  {
    "label": "PostRedo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostRedo(bool bSuccess)"
  },
  {
    "label": "CreateCommandList()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateCommandList()"
  },
  {
    "label": "SelectAllNodes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SelectAllNodes()"
  },
  {
    "label": "CanSelectAllNodes()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanSelectAllNodes()"
  },
  {
    "label": "DeleteSelectedNodes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeleteSelectedNodes()"
  },
  {
    "label": "CanDeleteNodes()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanDeleteNodes()"
  },
  {
    "label": "DeleteSelectedDuplicatableNodes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeleteSelectedDuplicatableNodes()"
  },
  {
    "label": "CutSelectedNodes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CutSelectedNodes()"
  },
  {
    "label": "CanCutNodes()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanCutNodes()"
  },
  {
    "label": "CopySelectedNodes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CopySelectedNodes()"
  },
  {
    "label": "CanCopyNodes()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanCopyNodes()"
  },
  {
    "label": "PasteNodes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PasteNodes()"
  },
  {
    "label": "PasteNodesHere()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PasteNodesHere(const FVector2D& Location)"
  },
  {
    "label": "CanPasteNodes()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanPasteNodes()"
  },
  {
    "label": "DuplicateNodes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DuplicateNodes()"
  },
  {
    "label": "CanDuplicateNodes()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanDuplicateNodes()"
  },
  {
    "label": "CanCreateComment()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanCreateComment()"
  },
  {
    "label": "OnCreateComment()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnCreateComment()"
  },
  {
    "label": "OnClassListUpdated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnClassListUpdated()"
  },
  {
    "label": "FixupPastedNodes()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "FixupPastedNodes(const TSet<UEdGraphNode*>& NewPastedGraphNodes, const TMap<FGuid , FGuid >& NewToOldNodeMapping)"
  }
]