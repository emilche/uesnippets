[
  {
    "label": "FMockHttpManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMockHttpManager"
  },
  {
    "label": "FMockHttpManager()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Common / HttpManager . h \" # include \" Tests / TestHelpers . h \" # include \" Tests / Mock / HttpRequest . mock . h \" # include \" Common / StatsCollector . h \" # if WITH_DEV_AUTOMATION_TESTS namespace BuildPatchServices { class FMockHttpManager : public IHttpManager { public :)",
    "insertText": "FMockHttpManager() : RxCreateRequest(0)"
  },
  {
    "label": "CreateRequest()",
    "kind": "Method",
    "detail": "Function (} TSharedRef<IHttpRequest,ESPMode::ThreadSafe>)",
    "insertText": "CreateRequest()"
  },
  {
    "label": "ThreadSafe()",
    "kind": "Method",
    "detail": "Function (+ + RxCreateRequest ; return TSharedRef<IHttpRequest,)",
    "insertText": "ThreadSafe(new FMockHttpRequest())"
  }
]