[
  {
    "label": "EUGCMatchingUGCType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EUGCMatchingUGCType"
  },
  {
    "label": "EUserUGCList",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EUserUGCList"
  },
  {
    "label": "EUserUGCListSortOrder",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EUserUGCListSortOrder"
  },
  {
    "label": "EUGCQuery",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EUGCQuery"
  },
  {
    "label": "EItemUpdateStatus",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EItemUpdateStatus"
  },
  {
    "label": "EItemState",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EItemState"
  },
  {
    "label": "EItemStatistic",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EItemStatistic"
  },
  {
    "label": "EItemPreviewType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EItemPreviewType"
  },
  {
    "label": "EUGCContentDescriptorID",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EUGCContentDescriptorID"
  },
  {
    "label": "SteamUGCDetails_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SteamUGCDetails_t"
  },
  {
    "label": "ISteamUGC",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISteamUGC"
  },
  {
    "label": "SteamUGCQueryCompleted_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SteamUGCQueryCompleted_t"
  },
  {
    "label": "SteamUGCRequestUGCDetailsResult_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SteamUGCRequestUGCDetailsResult_t"
  },
  {
    "label": "CreateItemResult_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "CreateItemResult_t"
  },
  {
    "label": "SubmitItemUpdateResult_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SubmitItemUpdateResult_t"
  },
  {
    "label": "ItemInstalled_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ItemInstalled_t"
  },
  {
    "label": "DownloadItemResult_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DownloadItemResult_t"
  },
  {
    "label": "UserFavoriteItemsListChanged_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "UserFavoriteItemsListChanged_t"
  },
  {
    "label": "SetUserItemVoteResult_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SetUserItemVoteResult_t"
  },
  {
    "label": "GetUserItemVoteResult_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "GetUserItemVoteResult_t"
  },
  {
    "label": "StartPlaytimeTrackingResult_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "StartPlaytimeTrackingResult_t"
  },
  {
    "label": "StopPlaytimeTrackingResult_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "StopPlaytimeTrackingResult_t"
  },
  {
    "label": "AddUGCDependencyResult_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "AddUGCDependencyResult_t"
  },
  {
    "label": "RemoveUGCDependencyResult_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RemoveUGCDependencyResult_t"
  },
  {
    "label": "AddAppDependencyResult_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "AddAppDependencyResult_t"
  },
  {
    "label": "RemoveAppDependencyResult_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RemoveAppDependencyResult_t"
  },
  {
    "label": "GetAppDependenciesResult_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "GetAppDependenciesResult_t"
  },
  {
    "label": "DeleteItemResult_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DeleteItemResult_t"
  },
  {
    "label": "UserSubscribedItemsListChanged_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "UserSubscribedItemsListChanged_t"
  },
  {
    "label": "WorkshopEULAStatus_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "WorkshopEULAStatus_t"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# ifndef ISTEAMUGC_H # define ISTEAMUGC_H # ifdef _WIN32 # pragma once # endif # include \" steam_api_common . h \" # include \" isteamremotestorage . h \" # if)",
    "insertText": "defined(VALVE_CALLBACK_PACK_SMALL ) #pragma pack( push, 4 ) #elif defined( VALVE_CALLBACK_PACK_LARGE ) #pragma pack( push, 8)"
  },
  {
    "label": "CreateQueryUserUGCRequest()",
    "kind": "Method",
    "detail": "Function (typedef uint64 UGCUpdateHandle_t ; const UGCQueryHandle_t k_UGCQueryHandleInvalid = 0 xffffffffffffffffull ; const UGCUpdateHandle_t k_UGCUpdateHandleInvalid = 0 xffffffffffffffffull ; enum EUGCMatchingUGCType { k_EUGCMatchingUGCType_Items = 0,k_EUGCMatchingUGCType_Items_Mtx = 1,k_EUGCMatchingUGCType_Items_ReadyToUse = 2,k_EUGCMatchingUGCType_Collections = 3,k_EUGCMatchingUGCType_Artwork = 4,k_EUGCMatchingUGCType_Videos = 5,k_EUGCMatchingUGCType_Screenshots = 6,k_EUGCMatchingUGCType_AllGuides = 7,k_EUGCMatchingUGCType_WebGuides = 8,k_EUGCMatchingUGCType_IntegratedGuides = 9,k_EUGCMatchingUGCType_UsableInGame = 1 0,k_EUGCMatchingUGCType_ControllerBindings = 1 1,k_EUGCMatchingUGCType_GameManagedItems = 1 2,k_EUGCMatchingUGCType_All = ~ 0,} ; enum EUserUGCList { k_EUserUGCList_Published,k_EUserUGCList_VotedOn,k_EUserUGCList_VotedUp,k_EUserUGCList_VotedDown,k_EUserUGCList_WillVoteLater,k_EUserUGCList_Favorited,k_EUserUGCList_Subscribed,k_EUserUGCList_UsedOrPlayed,k_EUserUGCList_Followed,} ; enum EUserUGCListSortOrder { k_EUserUGCListSortOrder_CreationOrderDesc,k_EUserUGCListSortOrder_CreationOrderAsc,k_EUserUGCListSortOrder_TitleAsc,k_EUserUGCListSortOrder_LastUpdatedDesc,k_EUserUGCListSortOrder_SubscriptionDateDesc,k_EUserUGCListSortOrder_VoteScoreDesc,k_EUserUGCListSortOrder_ForModeration,} ; enum EUGCQuery { k_EUGCQuery_RankedByVote = 0,k_EUGCQuery_RankedByPublicationDate = 1,k_EUGCQuery_AcceptedForGameRankedByAcceptanceDate = 2,k_EUGCQuery_RankedByTrend = 3,k_EUGCQuery_FavoritedByFriendsRankedByPublicationDate = 4,k_EUGCQuery_CreatedByFriendsRankedByPublicationDate = 5,k_EUGCQuery_RankedByNumTimesReported = 6,k_EUGCQuery_CreatedByFollowedUsersRankedByPublicationDate = 7,k_EUGCQuery_NotYetRated = 8,k_EUGCQuery_RankedByTotalVotesAsc = 9,k_EUGCQuery_RankedByVotesUp = 1 0,k_EUGCQuery_RankedByTextSearch = 1 1,k_EUGCQuery_RankedByTotalUniqueSubscriptions = 1 2,k_EUGCQuery_RankedByPlaytimeTrend = 1 3,k_EUGCQuery_RankedByTotalPlaytime = 1 4,k_EUGCQuery_RankedByAveragePlaytimeTrend = 1 5,k_EUGCQuery_RankedByLifetimeAveragePlaytime = 1 6,k_EUGCQuery_RankedByPlaytimeSessionsTrend = 1 7,k_EUGCQuery_RankedByLifetimePlaytimeSessions = 1 8,k_EUGCQuery_RankedByLastUpdatedDate = 1 9,} ; enum EItemUpdateStatus { k_EItemUpdateStatusInvalid = 0,k_EItemUpdateStatusPreparingConfig = 1,k_EItemUpdateStatusPreparingContent = 2,k_EItemUpdateStatusUploadingContent = 3,k_EItemUpdateStatusUploadingPreviewFile = 4,k_EItemUpdateStatusCommittingChanges = 5 } ; enum EItemState { k_EItemStateNone = 0,k_EItemStateSubscribed = 1,k_EItemStateLegacyItem = 2,k_EItemStateInstalled = 4,k_EItemStateNeedsUpdate = 8,k_EItemStateDownloading = 1 6,k_EItemStateDownloadPending = 3 2,} ; enum EItemStatistic { k_EItemStatistic_NumSubscriptions = 0,k_EItemStatistic_NumFavorites = 1,k_EItemStatistic_NumFollowers = 2,k_EItemStatistic_NumUniqueSubscriptions = 3,k_EItemStatistic_NumUniqueFavorites = 4,k_EItemStatistic_NumUniqueFollowers = 5,k_EItemStatistic_NumUniqueWebsiteViews = 6,k_EItemStatistic_ReportScore = 7,k_EItemStatistic_NumSecondsPlayed = 8,k_EItemStatistic_NumPlaytimeSessions = 9,k_EItemStatistic_NumComments = 1 0,k_EItemStatistic_NumSecondsPlayedDuringTimePeriod = 1 1,k_EItemStatistic_NumPlaytimeSessionsDuringTimePeriod = 1 2,} ; enum EItemPreviewType { k_EItemPreviewType_Image = 0,k_EItemPreviewType_YouTubeVideo = 1,k_EItemPreviewType_Sketchfab = 2,k_EItemPreviewType_EnvironmentMap_HorizontalCross = 3,k_EItemPreviewType_EnvironmentMap_LatLong = 4,k_EItemPreviewType_ReservedMax = 2 5 5,} ; enum EUGCContentDescriptorID { k_EUGCContentDescriptor_NudityOrSexualContent = 1,k_EUGCContentDescriptor_FrequentViolenceOrGore = 2,k_EUGCContentDescriptor_AdultOnlySexualContent = 3,k_EUGCContentDescriptor_GratuitousSexualContent = 4,k_EUGCContentDescriptor_AnyMatureContent = 5,} ; const uint32 kNumUGCResultsPerPage = 5 0 ; const uint32 k_cchDeveloperMetadataMax = 5 0 0 0 ; struct SteamUGCDetails_t { PublishedFileId_t m_nPublishedFileId ; EResult m_eResult ; EWorkshopFileType m_eFileType ; AppId_t m_nCreatorAppID ; AppId_t m_nConsumerAppID ; char m_rgchTitle [ k_cchPublishedDocumentTitleMax ] ; char m_rgchDescription [ k_cchPublishedDocumentDescriptionMax ] ; uint64 m_ulSteamIDOwner ; uint32 m_rtimeCreated ; uint32 m_rtimeUpdated ; uint32 m_rtimeAddedToUserList ; ERemoteStoragePublishedFileVisibility m_eVisibility ; bool m_bBanned ; bool m_bAcceptedForUse ; bool m_bTagsTruncated ; char m_rgchTags [ k_cchTagListMax ] ; UGCHandle_t m_hFile ; UGCHandle_t m_hPreviewFile ; char m_pchFileName [ k_cchFilenameMax ] ; int32 m_nFileSize ; int32 m_nPreviewFileSize ; char m_rgchURL [ k_cchPublishedFileURLMax ] ; uint32 m_unVotesUp ; uint32 m_unVotesDown ; float m_flScore ; uint32 m_unNumChildren ; } ; class ISteamUGC { public : UGCQueryHandle_t)",
    "insertText": "CreateQueryUserUGCRequest(AccountID_t unAccountID, EUserUGCList eListType, EUGCMatchingUGCType eMatchingUGCType, EUserUGCListSortOrder eSortOrder, AppId_t nCreatorAppID, AppId_t nConsumerAppID, uint32 unPage)"
  },
  {
    "label": "STEAM_FLAT_NAME()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STEAM_FLAT_NAME(CreateQueryAllUGCRequestPage ) virtual UGCQueryHandle_t CreateQueryAllUGCRequest( EUGCQuery eQueryType, EUGCMatchingUGCType eMatchingeMatchingUGCTypeFileType, AppId_t nCreatorAppID, AppId_t nConsumerAppID, uint32 unPage)"
  },
  {
    "label": "STEAM_FLAT_NAME()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STEAM_FLAT_NAME(CreateQueryAllUGCRequestCursor ) virtual UGCQueryHandle_t CreateQueryAllUGCRequest( EUGCQuery eQueryType, EUGCMatchingUGCType eMatchingeMatchingUGCTypeFileType, AppId_t nCreatorAppID, AppId_t nConsumerAppID, const char *pchCursor = NULL)"
  },
  {
    "label": "CreateQueryUGCDetailsRequest()",
    "kind": "Method",
    "detail": "Function (UGCQueryHandle_t)",
    "insertText": "CreateQueryUGCDetailsRequest(PublishedFileId_t *pvecPublishedFileID, uint32 unNumPublishedFileIDs)"
  },
  {
    "label": "STEAM_CALL_RESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STEAM_CALL_RESULT(SteamUGCQueryCompleted_t ) virtual SteamAPICall_t SendQueryUGCRequest( UGCQueryHandle_t handle)"
  },
  {
    "label": "GetQueryUGCResult()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetQueryUGCResult(UGCQueryHandle_t handle, uint32 index, SteamUGCDetails_t *pDetails)"
  },
  {
    "label": "GetQueryUGCNumTags()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetQueryUGCNumTags(UGCQueryHandle_t handle, uint32 index)"
  },
  {
    "label": "GetQueryUGCTag()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetQueryUGCTag(UGCQueryHandle_t handle, uint32 index, uint32 indexTag, STEAM_OUT_STRING_COUNT( cchValueSize ) char* pchValue, uint32 cchValueSize)"
  },
  {
    "label": "GetQueryUGCTagDisplayName()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetQueryUGCTagDisplayName(UGCQueryHandle_t handle, uint32 index, uint32 indexTag, STEAM_OUT_STRING_COUNT( cchValueSize ) char* pchValue, uint32 cchValueSize)"
  },
  {
    "label": "GetQueryUGCPreviewURL()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetQueryUGCPreviewURL(UGCQueryHandle_t handle, uint32 index, STEAM_OUT_STRING_COUNT(cchURLSize) char *pchURL, uint32 cchURLSize)"
  },
  {
    "label": "GetQueryUGCMetadata()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetQueryUGCMetadata(UGCQueryHandle_t handle, uint32 index, STEAM_OUT_STRING_COUNT(cchMetadatasize) char *pchMetadata, uint32 cchMetadatasize)"
  },
  {
    "label": "GetQueryUGCChildren()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetQueryUGCChildren(UGCQueryHandle_t handle, uint32 index, PublishedFileId_t* pvecPublishedFileID, uint32 cMaxEntries)"
  },
  {
    "label": "GetQueryUGCStatistic()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetQueryUGCStatistic(UGCQueryHandle_t handle, uint32 index, EItemStatistic eStatType, uint64 *pStatValue)"
  },
  {
    "label": "GetQueryUGCNumAdditionalPreviews()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetQueryUGCNumAdditionalPreviews(UGCQueryHandle_t handle, uint32 index)"
  },
  {
    "label": "GetQueryUGCAdditionalPreview()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetQueryUGCAdditionalPreview(UGCQueryHandle_t handle, uint32 index, uint32 previewIndex, STEAM_OUT_STRING_COUNT(cchURLSize) char *pchURLOrVideoID, uint32 cchURLSize, STEAM_OUT_STRING_COUNT(cchURLSize) char *pchOriginalFileName, uint32 cchOriginalFileNameSize, EItemPreviewType *pPreviewType)"
  },
  {
    "label": "GetQueryUGCNumKeyValueTags()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetQueryUGCNumKeyValueTags(UGCQueryHandle_t handle, uint32 index)"
  },
  {
    "label": "GetQueryUGCKeyValueTag()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetQueryUGCKeyValueTag(UGCQueryHandle_t handle, uint32 index, uint32 keyValueTagIndex, STEAM_OUT_STRING_COUNT(cchKeySize) char *pchKey, uint32 cchKeySize, STEAM_OUT_STRING_COUNT(cchValueSize) char *pchValue, uint32 cchValueSize)"
  },
  {
    "label": "STEAM_FLAT_NAME()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STEAM_FLAT_NAME(GetQueryFirstUGCKeyValueTag ) virtual bool GetQueryUGCKeyValueTag( UGCQueryHandle_t handle, uint32 index, const char *pchKey, STEAM_OUT_STRING_COUNT(cchValueSize) char *pchValue, uint32 cchValueSize)"
  },
  {
    "label": "GetQueryUGCContentDescriptors()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetQueryUGCContentDescriptors(UGCQueryHandle_t handle, uint32 index, EUGCContentDescriptorID *pvecDescriptors, uint32 cMaxEntries)"
  },
  {
    "label": "ReleaseQueryUGCRequest()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ReleaseQueryUGCRequest(UGCQueryHandle_t handle)"
  },
  {
    "label": "AddRequiredTag()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AddRequiredTag(UGCQueryHandle_t handle, const char *pTagName)"
  },
  {
    "label": "AddRequiredTagGroup()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AddRequiredTagGroup(UGCQueryHandle_t handle, const SteamParamStringArray_t *pTagGroups)"
  },
  {
    "label": "AddExcludedTag()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AddExcludedTag(UGCQueryHandle_t handle, const char *pTagName)"
  },
  {
    "label": "SetReturnOnlyIDs()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetReturnOnlyIDs(UGCQueryHandle_t handle, bool bReturnOnlyIDs)"
  },
  {
    "label": "SetReturnKeyValueTags()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetReturnKeyValueTags(UGCQueryHandle_t handle, bool bReturnKeyValueTags)"
  },
  {
    "label": "SetReturnLongDescription()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetReturnLongDescription(UGCQueryHandle_t handle, bool bReturnLongDescription)"
  },
  {
    "label": "SetReturnMetadata()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetReturnMetadata(UGCQueryHandle_t handle, bool bReturnMetadata)"
  },
  {
    "label": "SetReturnChildren()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetReturnChildren(UGCQueryHandle_t handle, bool bReturnChildren)"
  },
  {
    "label": "SetReturnAdditionalPreviews()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetReturnAdditionalPreviews(UGCQueryHandle_t handle, bool bReturnAdditionalPreviews)"
  },
  {
    "label": "SetReturnTotalOnly()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetReturnTotalOnly(UGCQueryHandle_t handle, bool bReturnTotalOnly)"
  },
  {
    "label": "SetReturnPlaytimeStats()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetReturnPlaytimeStats(UGCQueryHandle_t handle, uint32 unDays)"
  },
  {
    "label": "SetLanguage()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetLanguage(UGCQueryHandle_t handle, const char *pchLanguage)"
  },
  {
    "label": "SetAllowCachedResponse()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetAllowCachedResponse(UGCQueryHandle_t handle, uint32 unMaxAgeSeconds)"
  },
  {
    "label": "SetCloudFileNameFilter()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetCloudFileNameFilter(UGCQueryHandle_t handle, const char *pMatchCloudFileName)"
  },
  {
    "label": "SetMatchAnyTag()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetMatchAnyTag(UGCQueryHandle_t handle, bool bMatchAnyTag)"
  },
  {
    "label": "SetSearchText()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetSearchText(UGCQueryHandle_t handle, const char *pSearchText)"
  },
  {
    "label": "SetRankedByTrendDays()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetRankedByTrendDays(UGCQueryHandle_t handle, uint32 unDays)"
  },
  {
    "label": "SetTimeCreatedDateRange()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetTimeCreatedDateRange(UGCQueryHandle_t handle, RTime32 rtStart, RTime32 rtEnd)"
  },
  {
    "label": "SetTimeUpdatedDateRange()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetTimeUpdatedDateRange(UGCQueryHandle_t handle, RTime32 rtStart, RTime32 rtEnd)"
  },
  {
    "label": "AddRequiredKeyValueTag()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AddRequiredKeyValueTag(UGCQueryHandle_t handle, const char *pKey, const char *pValue)"
  },
  {
    "label": "STEAM_CALL_RESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STEAM_CALL_RESULT(SteamUGCRequestUGCDetailsResult_t ) virtual SteamAPICall_t RequestUGCDetails( PublishedFileId_t nPublishedFileID, uint32 unMaxAgeSeconds)"
  },
  {
    "label": "STEAM_CALL_RESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STEAM_CALL_RESULT(CreateItemResult_t ) virtual SteamAPICall_t CreateItem( AppId_t nConsumerAppId, EWorkshopFileType eFileType)"
  },
  {
    "label": "StartItemUpdate()",
    "kind": "Method",
    "detail": "Function (UGCUpdateHandle_t)",
    "insertText": "StartItemUpdate(AppId_t nConsumerAppId, PublishedFileId_t nPublishedFileID)"
  },
  {
    "label": "SetItemTitle()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetItemTitle(UGCUpdateHandle_t handle, const char *pchTitle)"
  },
  {
    "label": "SetItemDescription()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetItemDescription(UGCUpdateHandle_t handle, const char *pchDescription)"
  },
  {
    "label": "SetItemUpdateLanguage()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetItemUpdateLanguage(UGCUpdateHandle_t handle, const char *pchLanguage)"
  },
  {
    "label": "SetItemMetadata()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetItemMetadata(UGCUpdateHandle_t handle, const char *pchMetaData)"
  },
  {
    "label": "SetItemVisibility()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetItemVisibility(UGCUpdateHandle_t handle, ERemoteStoragePublishedFileVisibility eVisibility)"
  },
  {
    "label": "SetItemTags()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetItemTags(UGCUpdateHandle_t updateHandle, const SteamParamStringArray_t *pTags)"
  },
  {
    "label": "SetItemContent()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetItemContent(UGCUpdateHandle_t handle, const char *pszContentFolder)"
  },
  {
    "label": "SetItemPreview()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetItemPreview(UGCUpdateHandle_t handle, const char *pszPreviewFile)"
  },
  {
    "label": "SetAllowLegacyUpload()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetAllowLegacyUpload(UGCUpdateHandle_t handle, bool bAllowLegacyUpload)"
  },
  {
    "label": "RemoveAllItemKeyValueTags()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RemoveAllItemKeyValueTags(UGCUpdateHandle_t handle)"
  },
  {
    "label": "RemoveItemKeyValueTags()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RemoveItemKeyValueTags(UGCUpdateHandle_t handle, const char *pchKey)"
  },
  {
    "label": "AddItemKeyValueTag()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AddItemKeyValueTag(UGCUpdateHandle_t handle, const char *pchKey, const char *pchValue)"
  },
  {
    "label": "AddItemPreviewFile()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AddItemPreviewFile(UGCUpdateHandle_t handle, const char *pszPreviewFile, EItemPreviewType type)"
  },
  {
    "label": "AddItemPreviewVideo()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AddItemPreviewVideo(UGCUpdateHandle_t handle, const char *pszVideoID)"
  },
  {
    "label": "UpdateItemPreviewFile()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UpdateItemPreviewFile(UGCUpdateHandle_t handle, uint32 index, const char *pszPreviewFile)"
  },
  {
    "label": "UpdateItemPreviewVideo()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UpdateItemPreviewVideo(UGCUpdateHandle_t handle, uint32 index, const char *pszVideoID)"
  },
  {
    "label": "RemoveItemPreview()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RemoveItemPreview(UGCUpdateHandle_t handle, uint32 index)"
  },
  {
    "label": "AddContentDescriptor()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AddContentDescriptor(UGCUpdateHandle_t handle, EUGCContentDescriptorID descid)"
  },
  {
    "label": "RemoveContentDescriptor()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RemoveContentDescriptor(UGCUpdateHandle_t handle, EUGCContentDescriptorID descid)"
  },
  {
    "label": "STEAM_CALL_RESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STEAM_CALL_RESULT(SubmitItemUpdateResult_t ) virtual SteamAPICall_t SubmitItemUpdate( UGCUpdateHandle_t handle, const char *pchChangeNote)"
  },
  {
    "label": "GetItemUpdateProgress()",
    "kind": "Method",
    "detail": "Function (EItemUpdateStatus)",
    "insertText": "GetItemUpdateProgress(UGCUpdateHandle_t handle, uint64 *punBytesProcessed, uint64* punBytesTotal)"
  },
  {
    "label": "STEAM_CALL_RESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STEAM_CALL_RESULT(SetUserItemVoteResult_t ) virtual SteamAPICall_t SetUserItemVote( PublishedFileId_t nPublishedFileID, bool bVoteUp)"
  },
  {
    "label": "STEAM_CALL_RESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STEAM_CALL_RESULT(GetUserItemVoteResult_t ) virtual SteamAPICall_t GetUserItemVote( PublishedFileId_t nPublishedFileID)"
  },
  {
    "label": "STEAM_CALL_RESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STEAM_CALL_RESULT(UserFavoriteItemsListChanged_t ) virtual SteamAPICall_t AddItemToFavorites( AppId_t nAppId, PublishedFileId_t nPublishedFileID)"
  },
  {
    "label": "STEAM_CALL_RESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STEAM_CALL_RESULT(UserFavoriteItemsListChanged_t ) virtual SteamAPICall_t RemoveItemFromFavorites( AppId_t nAppId, PublishedFileId_t nPublishedFileID)"
  },
  {
    "label": "STEAM_CALL_RESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STEAM_CALL_RESULT(RemoteStorageSubscribePublishedFileResult_t ) virtual SteamAPICall_t SubscribeItem( PublishedFileId_t nPublishedFileID)"
  },
  {
    "label": "STEAM_CALL_RESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STEAM_CALL_RESULT(RemoteStorageUnsubscribePublishedFileResult_t ) virtual SteamAPICall_t UnsubscribeItem( PublishedFileId_t nPublishedFileID)"
  },
  {
    "label": "GetNumSubscribedItems()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetNumSubscribedItems()"
  },
  {
    "label": "GetSubscribedItems()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetSubscribedItems(PublishedFileId_t* pvecPublishedFileID, uint32 cMaxEntries)"
  },
  {
    "label": "GetItemState()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetItemState(PublishedFileId_t nPublishedFileID)"
  },
  {
    "label": "GetItemInstallInfo()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetItemInstallInfo(PublishedFileId_t nPublishedFileID, uint64 *punSizeOnDisk, STEAM_OUT_STRING_COUNT( cchFolderSize ) char *pchFolder, uint32 cchFolderSize, uint32 *punTimeStamp)"
  },
  {
    "label": "GetItemDownloadInfo()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetItemDownloadInfo(PublishedFileId_t nPublishedFileID, uint64 *punBytesDownloaded, uint64 *punBytesTotal)"
  },
  {
    "label": "DownloadItem()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DownloadItem(PublishedFileId_t nPublishedFileID, bool bHighPriority)"
  },
  {
    "label": "BInitWorkshopForGameServer()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "BInitWorkshopForGameServer(DepotId_t unWorkshopDepotID, const char *pszFolder)"
  },
  {
    "label": "SuspendDownloads()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SuspendDownloads(bool bSuspend)"
  },
  {
    "label": "STEAM_CALL_RESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STEAM_CALL_RESULT(StartPlaytimeTrackingResult_t ) virtual SteamAPICall_t StartPlaytimeTracking( PublishedFileId_t *pvecPublishedFileID, uint32 unNumPublishedFileIDs)"
  },
  {
    "label": "STEAM_CALL_RESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STEAM_CALL_RESULT(StopPlaytimeTrackingResult_t ) virtual SteamAPICall_t StopPlaytimeTracking( PublishedFileId_t *pvecPublishedFileID, uint32 unNumPublishedFileIDs)"
  },
  {
    "label": "STEAM_CALL_RESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STEAM_CALL_RESULT(StopPlaytimeTrackingResult_t ) virtual SteamAPICall_t StopPlaytimeTrackingForAllItems()"
  },
  {
    "label": "STEAM_CALL_RESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STEAM_CALL_RESULT(AddUGCDependencyResult_t ) virtual SteamAPICall_t AddDependency( PublishedFileId_t nParentPublishedFileID, PublishedFileId_t nChildPublishedFileID)"
  },
  {
    "label": "STEAM_CALL_RESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STEAM_CALL_RESULT(RemoveUGCDependencyResult_t ) virtual SteamAPICall_t RemoveDependency( PublishedFileId_t nParentPublishedFileID, PublishedFileId_t nChildPublishedFileID)"
  },
  {
    "label": "STEAM_CALL_RESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STEAM_CALL_RESULT(AddAppDependencyResult_t ) virtual SteamAPICall_t AddAppDependency( PublishedFileId_t nPublishedFileID, AppId_t nAppID)"
  },
  {
    "label": "STEAM_CALL_RESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STEAM_CALL_RESULT(RemoveAppDependencyResult_t ) virtual SteamAPICall_t RemoveAppDependency( PublishedFileId_t nPublishedFileID, AppId_t nAppID)"
  },
  {
    "label": "STEAM_CALL_RESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STEAM_CALL_RESULT(GetAppDependenciesResult_t ) virtual SteamAPICall_t GetAppDependencies( PublishedFileId_t nPublishedFileID)"
  },
  {
    "label": "STEAM_CALL_RESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STEAM_CALL_RESULT(DeleteItemResult_t ) virtual SteamAPICall_t DeleteItem( PublishedFileId_t nPublishedFileID)"
  },
  {
    "label": "ShowWorkshopEULA()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShowWorkshopEULA()"
  },
  {
    "label": "STEAM_CALL_RESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STEAM_CALL_RESULT(WorkshopEULAStatus_t ) virtual SteamAPICall_t GetWorkshopEULAStatus()"
  },
  {
    "label": "SteamUGC()",
    "kind": "Method",
    "detail": "Function (} ; # define STEAMUGC_INTERFACE_VERSION \" STEAMUGC_INTERFACE_VERSION017 \" ISteamUGC*)",
    "insertText": "SteamUGC()"
  },
  {
    "label": "STEAM_DEFINE_USER_INTERFACE_ACCESSOR()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STEAM_DEFINE_USER_INTERFACE_ACCESSOR(ISteamUGC *, SteamUGC, STEAMUGC_INTERFACE_VERSION)"
  },
  {
    "label": "SteamGameServerUGC()",
    "kind": "Method",
    "detail": "Function (ISteamUGC*)",
    "insertText": "SteamGameServerUGC()"
  },
  {
    "label": "STEAM_DEFINE_GAMESERVER_INTERFACE_ACCESSOR()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STEAM_DEFINE_GAMESERVER_INTERFACE_ACCESSOR(ISteamUGC *, SteamGameServerUGC, STEAMUGC_INTERFACE_VERSION)"
  }
]