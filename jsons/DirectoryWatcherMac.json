[
  {
    "label": "FDirectoryWatchRequestMac",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDirectoryWatchRequestMac"
  },
  {
    "label": "FDirectoryWatcherMac",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDirectoryWatcherMac"
  },
  {
    "label": "FDirectoryWatcherMac()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" IDirectoryWatcher . h \" # include \" Containers / Map . h \" # include \" Containers / Array . h \" # include \" Containers / UnrealString . h \" # include \" Delegates / Delegate . h \" class FDirectoryWatchRequestMac ; class FDirectoryWatcherMac : public IDirectoryWatcher { public :)",
    "insertText": "FDirectoryWatcherMac()"
  },
  {
    "label": "RegisterDirectoryChangedCallback_Handle()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RegisterDirectoryChangedCallback_Handle(const FString& Directory, const FDirectoryChanged& InDelegate, FDelegateHandle& OutHandle, uint32 Flags)"
  },
  {
    "label": "UnregisterDirectoryChangedCallback_Handle()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UnregisterDirectoryChangedCallback_Handle(const FString& Directory, FDelegateHandle InHandle)"
  },
  {
    "label": "Tick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Tick(float DeltaSeconds)"
  }
]