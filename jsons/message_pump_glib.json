[
  {
    "label": "implements",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "implements"
  },
  {
    "label": "BASE_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BASE_EXPORT"
  },
  {
    "label": "FdWatchController",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FdWatchController"
  },
  {
    "label": "MessagePumpGlib",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MessagePumpGlib"
  },
  {
    "label": "MessagePumpGLibFdWatchTest",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MessagePumpGLibFdWatchTest"
  },
  {
    "label": "GMainContextDeleter",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "GMainContextDeleter"
  },
  {
    "label": "GSourceDeleter",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "GSourceDeleter"
  },
  {
    "label": "RunState",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RunState"
  },
  {
    "label": "FdWatchController()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "FdWatchController(const Location& from_here)"
  },
  {
    "label": "InitOrUpdate()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "InitOrUpdate(int fd, int mode, FdWatcher* watcher)"
  },
  {
    "label": "Attach()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Attach(MessagePumpGlib* pump)"
  },
  {
    "label": "NotifyCanRead()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyCanRead()"
  },
  {
    "label": "NotifyCanWrite()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyCanWrite()"
  },
  {
    "label": "WatchFileDescriptor()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "WatchFileDescriptor(int fd,\n                           bool persistent,\n                           int mode,\n                           FdWatchController* controller,\n                           FdWatcher* delegate)"
  },
  {
    "label": "HandlePrepare()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "HandlePrepare()"
  },
  {
    "label": "HandleCheck()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HandleCheck()"
  },
  {
    "label": "HandleDispatch()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleDispatch()"
  },
  {
    "label": "HandleFdWatchCheck()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HandleFdWatchCheck(FdWatchController* controller)"
  },
  {
    "label": "HandleFdWatchDispatch()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleFdWatchDispatch(FdWatchController* controller)"
  }
]