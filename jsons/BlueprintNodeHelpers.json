[
  {
    "label": "AActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AActor"
  },
  {
    "label": "UActorComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UActorComponent"
  },
  {
    "label": "UBehaviorTreeComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBehaviorTreeComponent"
  },
  {
    "label": "UBlackboardData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBlackboardData"
  },
  {
    "label": "UBTNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBTNode"
  },
  {
    "label": "CollectPropertyDescription()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "CollectPropertyDescription(const UObject* Ob, const UClass* StopAtClass, const TArray<FProperty*>& InPropertiesToSkip)"
  },
  {
    "label": "CollectPropertyData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CollectPropertyData(const UObject* Ob, const UClass* StopAtClass, TArray<FProperty*>& PropertyData)"
  },
  {
    "label": "GetPropertiesMemorySize()",
    "kind": "Method",
    "detail": "Function (uint16)",
    "insertText": "GetPropertiesMemorySize(const TArray<FProperty*>& PropertyData)"
  },
  {
    "label": "CollectBlackboardSelectors()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CollectBlackboardSelectors(const UObject* Ob, const UClass* StopAtClass, TArray<FName>& KeyNames)"
  },
  {
    "label": "ResolveBlackboardSelectors()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResolveBlackboardSelectors(UObject& Ob, const UClass& StopAtClass, const UBlackboardData& BlackboardAsset)"
  },
  {
    "label": "HasAnyBlackboardSelectors()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasAnyBlackboardSelectors(const UObject* Ob, const UClass* StopAtClass)"
  },
  {
    "label": "DescribeProperty()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "DescribeProperty(const FProperty* Prop, const uint8* PropertyAddr)"
  },
  {
    "label": "DescribeRuntimeValues()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DescribeRuntimeValues(const UObject* Ob, const TArray<FProperty*>& PropertyData, TArray<FString>& RuntimeValues)"
  },
  {
    "label": "CopyPropertiesToContext()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CopyPropertiesToContext(const TArray<FProperty*>& PropertyData, uint8* ObjectMemory, uint8* ContextMemory)"
  },
  {
    "label": "CopyPropertiesFromContext()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CopyPropertiesFromContext(const TArray<FProperty*>& PropertyData, uint8* ObjectMemory, uint8* ContextMemory)"
  },
  {
    "label": "FindNodeOwner()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "FindNodeOwner(AActor* OwningActor, UBTNode* Node, UBehaviorTreeComponent*& OwningComp, int32& OwningInstanceIdx)"
  },
  {
    "label": "AbortLatentActions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AbortLatentActions(UActorComponent& OwnerOb, const UObject& Ob)"
  }
]