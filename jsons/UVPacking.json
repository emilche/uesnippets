[
  {
    "label": "TFunctionRef",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TFunctionRef"
  },
  {
    "label": "FUVPacker",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FUVPacker"
  },
  {
    "label": "IUVMeshView",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IUVMeshView"
  },
  {
    "label": "IUVMeshView()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" BoxTypes . h \" # include \" Containers / Array . h \" # include \" IndexTypes . h \" # include \" Math / UnrealMathSSE . h \" # include \" Math / Vector2D . h \" # include \" VectorTypes . h \" template<FuncType> class TFunctionRef ; namespace UE { namespace Geometry { class FUVPacker { public : struct IUVMeshView { ~)",
    "insertText": "IUVMeshView()"
  },
  {
    "label": "GetTriangle()",
    "kind": "Method",
    "detail": "Function (} FIndex3i)",
    "insertText": "GetTriangle(int32 TID)"
  },
  {
    "label": "GetUVTriangle()",
    "kind": "Method",
    "detail": "Function (FIndex3i)",
    "insertText": "GetUVTriangle(int32 TID)"
  },
  {
    "label": "GetVertex()",
    "kind": "Method",
    "detail": "Function (FVector3d)",
    "insertText": "GetVertex(int32 VID)"
  },
  {
    "label": "GetUV()",
    "kind": "Method",
    "detail": "Function (FVector2f)",
    "insertText": "GetUV(int32 EID)"
  },
  {
    "label": "SetUV()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetUV(int32 EID, FVector2f UV)"
  },
  {
    "label": "StandardPack()",
    "kind": "Method",
    "detail": "Function (} ; int32 TextureResolution = 5 1 2 ; float GutterSize = 1 . 0 ; bool bPreserveScale = false ; bool bPreserveRotation = false ; bool bAllowFlips = false ; bool bScaleIslandsByWorldSpaceTexelRatio = false ; bool)",
    "insertText": "StandardPack(IUVMeshView* Mesh, int NumIslands, TFunctionRef<void(int, TArray<int32>&)> CopyIsland)"
  },
  {
    "label": "StandardPack()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "StandardPack(IUVMeshView* Mesh, const TArray<TArray<int>>& UVIslands)"
  },
  {
    "label": "StackPack()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "StackPack(IUVMeshView* Mesh, int NumIslands, TFunctionRef<void(int, TArray<int32>&)> CopyIsland)"
  },
  {
    "label": "StackPack()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "StackPack(IUVMeshView* Mesh, const TArray<TArray<int>>& UVIslands)"
  },
  {
    "label": "GetIslandStats()",
    "kind": "Method",
    "detail": "Function (} protected : void)",
    "insertText": "GetIslandStats(IUVMeshView* Mesh, const TArray<int32>& Island, FAxisAlignedBox2d& IslandBoundsOut, double& IslandScaleFactorOut, double& UVAreaOut)"
  }
]