[
  {
    "label": "INetworkFileServer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "INetworkFileServer"
  },
  {
    "label": "ICookOnTheFlyNetworkServer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ICookOnTheFlyNetworkServer"
  },
  {
    "label": "FNetworkFileDelegateContainer",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FNetworkFileDelegateContainer"
  },
  {
    "label": "ENetworkFileServerProtocol",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ENetworkFileServerProtocol"
  },
  {
    "label": "FNetworkFileServerOptions",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FNetworkFileServerOptions"
  },
  {
    "label": "INetworkFileSystemModule",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "INetworkFileSystemModule"
  },
  {
    "label": "DECLARE_DELEGATE_ThreeParams()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Modules / ModuleInterface . h \" # include \" ShaderCompiler . h \" class INetworkFileServer ; namespace UE::Cook { class ICookOnTheFlyNetworkServer ; })",
    "insertText": "DECLARE_DELEGATE_ThreeParams(FFileRequestDelegate, FString&, const FString&, TArray<FString>&)"
  },
  {
    "label": "DECLARE_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DELEGATE_OneParam(FRecompileShadersDelegate, const FShaderRecompileData&)"
  },
  {
    "label": "DECLARE_DELEGATE_RetVal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DELEGATE_RetVal(FString, FSandboxPathDelegate)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_OneParam(FOnFileModifiedDelegate, const FString&)"
  },
  {
    "label": "DECLARE_DELEGATE_RetVal_TwoParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DELEGATE_RetVal_TwoParams(bool, FNewConnectionDelegate, const FString&, const FString&)"
  },
  {
    "label": "FNetworkFileDelegateContainer()",
    "kind": "Method",
    "detail": "Function (struct FNetworkFileDelegateContainer { public :)",
    "insertText": "FNetworkFileDelegateContainer() : NewConnectionDelegate(nullptr), SandboxPathOverrideDelegate(nullptr), FileRequestDelegate(nullptr), RecompileShadersDelegate(nullptr), OnFileModifiedCallback(nullptr)"
  },
  {
    "label": "CreateNetworkFileServer()",
    "kind": "Method",
    "detail": "Function (} FNewConnectionDelegate NewConnectionDelegate ; FSandboxPathDelegate SandboxPathOverrideDelegate ; FFileRequestDelegate FileRequestDelegate ; FRecompileShadersDelegate RecompileShadersDelegate ; FOnFileModifiedDelegate* OnFileModifiedCallback ; } ; enum ENetworkFileServerProtocol { NFSP_Tcp,NFSP_Http,NFSP_Platform,} ; struct FNetworkFileServerOptions { ENetworkFileServerProtocol Protocol = NFSP_Tcp ; int32 Port = INDEX_NONE ; FNetworkFileDelegateContainer Delegates ; TArray<ITargetPlatform*> TargetPlatforms ; bool bRestrictPackageAssetsToSandbox = false ; } ; class INetworkFileSystemModule : public IModuleInterface { public : INetworkFileServer*)",
    "insertText": "CreateNetworkFileServer(bool bLoadTargetPlatforms, int32 Port = -1, FNetworkFileDelegateContainer InNetworkFileDelegateContainer = FNetworkFileDelegateContainer(), const ENetworkFileServerProtocol Protocol = NFSP_Tcp)"
  },
  {
    "label": "CreateNetworkFileServer()",
    "kind": "Method",
    "detail": "Function (INetworkFileServer*)",
    "insertText": "CreateNetworkFileServer(FNetworkFileServerOptions FileServerOptions, bool bLoadTargetPlatforms)"
  },
  {
    "label": "CreateNetworkFileServer()",
    "kind": "Method",
    "detail": "Function (INetworkFileServer*)",
    "insertText": "CreateNetworkFileServer(TSharedRef<UE::Cook::ICookOnTheFlyNetworkServer> CookOnTheFlyNetworkServer, FNetworkFileDelegateContainer Delegates)"
  }
]