[
  {
    "label": "vp9_token",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "vp9_token"
  },
  {
    "label": "vp9_tree_probs_from_distribution()",
    "kind": "Method",
    "detail": "Function (# ifndef VPX_VP9_ENCODER_VP9_TREEWRITER_H_ # define VPX_VP9_ENCODER_VP9_TREEWRITER_H_ # include \" vpx_dsp / bitwriter . h \" # ifdef __cplusplus \" C \" { # endif void)",
    "insertText": "vp9_tree_probs_from_distribution(vpx_tree tree, unsigned int branch_ct[ ][2], const unsigned int num_events[ ])"
  },
  {
    "label": "vp9_tokens_from_tree()",
    "kind": "Method",
    "detail": "Function (struct vp9_token { int value ; int len ; } ; void)",
    "insertText": "vp9_tokens_from_tree(struct vp9_token *, const vpx_tree_index *)"
  },
  {
    "label": "vp9_write_tree()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vp9_write_tree(vpx_writer *w, const vpx_tree_index *tree, const vpx_prob *probs, int bits, int len, vpx_tree_index i)"
  },
  {
    "label": "vpx_write()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vpx_write(w, bit, probs[i >> 1])"
  },
  {
    "label": "while()",
    "kind": "Method",
    "detail": "Function (i = tree [ i + bit ] ; })",
    "insertText": "while(len)"
  },
  {
    "label": "vp9_write_token()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "vp9_write_token(vpx_writer *w, const vpx_tree_index *tree, const vpx_prob *probs, const struct vp9_token *token)"
  },
  {
    "label": "vp9_write_tree()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vp9_write_tree(w, tree, probs, token->value, token->len, 0)"
  }
]