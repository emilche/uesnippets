[
  {
    "label": "HapTextureFormat",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "HapTextureFormat"
  },
  {
    "label": "HapCompressor",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "HapCompressor"
  },
  {
    "label": "HapResult",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "HapResult"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (# ifndef hap_h # define hap_h # ifdef __cplusplus \" C \" { # endif enum HapTextureFormat { HapTextureFormat_RGB_DXT1 = 0 x83F0,HapTextureFormat_RGBA_DXT5 = 0 x83F3,HapTextureFormat_YCoCg_DXT5 = 0 x01,HapTextureFormat_A_RGTC1 = 0 x8DBB,HapTextureFormat_RGBA_BPTC_UNORM = 0 x8E8C,HapTextureFormat_RGB_BPTC_UNSIGNED_FLOAT = 0 x8E8F,HapTextureFormat_RGB_BPTC_SIGNED_FLOAT = 0 x8E8E,} ; enum HapCompressor { HapCompressorNone,HapCompressorSnappy } ; enum HapResult { HapResult_No_Error = 0,HapResult_Bad_Arguments,HapResult_Buffer_Too_Small,HapResult_Bad_Frame,HapResult_Internal_Error } ; typedef)",
    "insertText": "void(*HapDecodeWorkFunction)(void *p, unsigned int index)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "void(*HapDecodeCallback)(HapDecodeWorkFunction function, void *p, unsigned int count, void *info)"
  },
  {
    "label": "HapMaxEncodedLength()",
    "kind": "Method",
    "detail": "Function (unsigned long)",
    "insertText": "HapMaxEncodedLength(unsigned int count, unsigned long *lengths, unsigned int *textureFormats, unsigned int *chunkCounts)"
  },
  {
    "label": "HapEncode()",
    "kind": "Method",
    "detail": "Function (unsigned int)",
    "insertText": "HapEncode(unsigned int count, const void **inputBuffers, unsigned long *inputBuffersBytes, unsigned int *textureFormats, unsigned int *compressors, unsigned int *chunkCounts, void *outputBuffer, unsigned long outputBufferBytes, unsigned long *outputBufferBytesUsed)"
  },
  {
    "label": "HapDecode()",
    "kind": "Method",
    "detail": "Function (unsigned int)",
    "insertText": "HapDecode(const void *inputBuffer, unsigned long inputBufferBytes, unsigned int index, HapDecodeCallback callback, void *info, void *outputBuffer, unsigned long outputBufferBytes, unsigned long *outputBufferBytesUsed, unsigned int *outputBufferTextureFormat)"
  },
  {
    "label": "HapGetFrameTextureCount()",
    "kind": "Method",
    "detail": "Function (unsigned int)",
    "insertText": "HapGetFrameTextureCount(const void *inputBuffer, unsigned long inputBufferBytes, unsigned int *outputTextureCount)"
  },
  {
    "label": "HapGetFrameTextureFormat()",
    "kind": "Method",
    "detail": "Function (unsigned int)",
    "insertText": "HapGetFrameTextureFormat(const void *inputBuffer, unsigned long inputBufferBytes, unsigned int index, unsigned int *outputBufferTextureFormat)"
  },
  {
    "label": "HapGetFrameTextureChunkCount()",
    "kind": "Method",
    "detail": "Function (unsigned int)",
    "insertText": "HapGetFrameTextureChunkCount(const void *inputBuffer, unsigned long inputBufferBytes, unsigned int index, int *chunk_count)"
  }
]