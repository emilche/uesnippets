[
  {
    "label": "UMaterialExpressionNamedRerouteDeclaration",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialExpressionNamedRerouteDeclaration"
  },
  {
    "label": "UMaterialExpressionNamedRerouteBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialExpressionNamedRerouteBase"
  },
  {
    "label": "FMaterialCompiler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMaterialCompiler"
  },
  {
    "label": "UMaterialExpressionNamedRerouteUsage",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialExpressionNamedRerouteUsage"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Materials / MaterialExpressionRerouteBase . h \" # include \" MaterialExpressionNamedReroute . generated . h \" class UMaterialExpressionNamedRerouteDeclaration ;)",
    "insertText": "UCLASS(abstract, MinimalAPI)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() protected: template<typename ExpressionsArrayType> UMaterialExpressionNamedRerouteDeclaration* FindDeclarationInArray(const FGuid& VariableGuid, const ExpressionsArrayType& Expressions)"
  },
  {
    "label": "FindDeclarationInMaterial()",
    "kind": "Method",
    "detail": "Function (UMaterialExpressionNamedRerouteDeclaration*)",
    "insertText": "FindDeclarationInMaterial(const FGuid& VariableGuid)"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "UCLASS(collapsecategories, hidecategories=Object, DisplayName = \"Named Reroute Declaration\", MinimalAPI)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() public: UPROPERTY()"
  },
  {
    "label": "PostInitProperties()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostInitProperties()"
  },
  {
    "label": "PostLoad()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostLoad()"
  },
  {
    "label": "PostDuplicate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostDuplicate(bool bDuplicateForPIE)"
  },
  {
    "label": "PostEditChangeProperty()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR void)",
    "insertText": "PostEditChangeProperty(FPropertyChangedEvent& PropertyChangedEvent)"
  },
  {
    "label": "Compile()",
    "kind": "Method",
    "detail": "Function (# endif # if WITH_EDITOR int32)",
    "insertText": "Compile(class FMaterialCompiler* Compiler, int32 OutputIndex)"
  },
  {
    "label": "CompilePreview()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "CompilePreview(FMaterialCompiler* Compiler, int32 OutputIndex)"
  },
  {
    "label": "GetCaption()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetCaption(TArray<FString>& OutCaptions)"
  },
  {
    "label": "GetCreationDescription()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetCreationDescription()"
  },
  {
    "label": "GetCreationName()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetCreationName()"
  },
  {
    "label": "MatchesSearchQuery()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "MatchesSearchQuery(const TCHAR* SearchQuery)"
  },
  {
    "label": "CanRenameNode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanRenameNode()"
  },
  {
    "label": "GetEditableName()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetEditableName()"
  },
  {
    "label": "SetEditableName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetEditableName(const FString& NewName)"
  },
  {
    "label": "PostCopyNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostCopyNode(const TArray<UMaterialExpression*>& CopiedExpressions)"
  },
  {
    "label": "GenerateHLSLExpression()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GenerateHLSLExpression(FMaterialHLSLGenerator& Generator, UE::HLSLTree::FScope& Scope, int32 OutputIndex, UE::HLSLTree::FExpression const*& OutExpression)"
  },
  {
    "label": "GetRerouteInput()",
    "kind": "Method",
    "detail": "Function (# endif protected : bool)",
    "insertText": "GetRerouteInput(FExpressionInput& OutInput)"
  },
  {
    "label": "UpdateVariableGuid()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "UpdateVariableGuid(bool bForceGeneration, bool bAllowMarkingPackageDirty)"
  },
  {
    "label": "MakeNameUnique()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MakeNameUnique()"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "UCLASS(collapsecategories, hidecategories=Object, DisplayName = \"Named Reroute Usage\", MinimalAPI)"
  },
  {
    "label": "GetOutputType()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetOutputType(int32 OutputIndex)"
  },
  {
    "label": "IsDeclarationValid()",
    "kind": "Method",
    "detail": "Function (private : bool)",
    "insertText": "IsDeclarationValid()"
  },
  {
    "label": "FindDeclarationInArray()",
    "kind": "Method",
    "detail": "Function (} ; template<ExpressionsArrayType> UMaterialExpressionNamedRerouteDeclaration*)",
    "insertText": "FindDeclarationInArray(const FGuid& VariableGuid, const ExpressionsArrayType& Expressions)"
  },
  {
    "label": "UMaterialExpressionNamedRerouteDeclaration()",
    "kind": "Method",
    "detail": "Function (auto* Declaration = Cast<)",
    "insertText": "UMaterialExpressionNamedRerouteDeclaration(Expression)"
  }
]