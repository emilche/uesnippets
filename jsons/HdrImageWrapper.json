[
  {
    "label": "FHdrImageWrapper",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FHdrImageWrapper"
  },
  {
    "label": "SetCompressedFromView()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / ContainersFwd . h \" # include \" CoreMinimal . h \" # include \" CoreTypes . h \" # include \" IImageWrapper . h \" # include \" ImageCore . h \" # include \" Internationalization / Text . h \" class FHdrImageWrapper : public IImageWrapper { public : bool)",
    "insertText": "SetCompressedFromView(TArrayView64<const uint8> Data)"
  },
  {
    "label": "SetCompressed()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetCompressed(const void* InCompressedData, int64 InCompressedSize)"
  },
  {
    "label": "SetRaw()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetRaw(const void* InRawData, int64 InRawSize, const int32 InWidth, const int32 InHeight, const ERGBFormat InFormat, const int32 InBitDepth, const int32 InBytesPerRow)"
  },
  {
    "label": "GetCompressed()",
    "kind": "Method",
    "detail": "Function (TArray64<uint8>)",
    "insertText": "GetCompressed(int32 Quality = 0)"
  },
  {
    "label": "GetRaw()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetRaw(const ERGBFormat InFormat, int32 InBitDepth, TArray64<uint8>& OutRawData)"
  },
  {
    "label": "GetRaw()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetRaw(const ERGBFormat InFormat, int32 InBitDepth, FDecompressedImageOutput& OutDecompressedImage)"
  },
  {
    "label": "CanSetRawFormat()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanSetRawFormat(const ERGBFormat InFormat, const int32 InBitDepth)"
  },
  {
    "label": "GetSupportedRawFormat()",
    "kind": "Method",
    "detail": "Function (ERawImageFormat::Type)",
    "insertText": "GetSupportedRawFormat(const ERawImageFormat::Type InFormat)"
  },
  {
    "label": "GetWidth()",
    "kind": "Method",
    "detail": "Function (int64)",
    "insertText": "GetWidth()"
  },
  {
    "label": "GetHeight()",
    "kind": "Method",
    "detail": "Function (int64)",
    "insertText": "GetHeight()"
  },
  {
    "label": "GetBitDepth()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetBitDepth()"
  },
  {
    "label": "GetFormat()",
    "kind": "Method",
    "detail": "Function (ERGBFormat)",
    "insertText": "GetFormat()"
  },
  {
    "label": "GetErrorMessage()",
    "kind": "Method",
    "detail": "Function (const FText&)",
    "insertText": "GetErrorMessage()"
  },
  {
    "label": "FreeCompressedData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FreeCompressedData()"
  },
  {
    "label": "SetAndLogError()",
    "kind": "Method",
    "detail": "Function (using IImageWrapper::GetRaw ; private : void)",
    "insertText": "SetAndLogError(const FText& InText)"
  },
  {
    "label": "FailHeaderParsing()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "FailHeaderParsing()"
  },
  {
    "label": "FailUnexpectedEOB()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "FailUnexpectedEOB()"
  },
  {
    "label": "FailMalformedScanline()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "FailMalformedScanline()"
  },
  {
    "label": "GetHeaderLine()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetHeaderLine(const uint8*& BufferPos, char Line[256])"
  },
  {
    "label": "ParseMatchString()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ParseMatchString(const char*& InOutCursor, const char* InExpected)"
  },
  {
    "label": "ParsePositiveInt()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ParsePositiveInt(const char*& InOutCursor, int* OutValue)"
  },
  {
    "label": "ParseImageSize()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ParseImageSize(const char* InLine, int* OutWidth, int* OutHeight)"
  },
  {
    "label": "HaveBytes()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HaveBytes(const uint8* InCursor, const uint8* InEnd, int InAmount)"
  },
  {
    "label": "DecompressScanline()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DecompressScanline(uint8* Out, const uint8*& In, const uint8* InEnd)"
  },
  {
    "label": "OldDecompressScanline()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "OldDecompressScanline(uint8* Out, const uint8*& In, const uint8* InEnd, int32 Length, bool bInitialRunAllowed)"
  },
  {
    "label": "IsCompressedImageValid()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsCompressedImageValid()"
  }
]