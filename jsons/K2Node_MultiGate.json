[
  {
    "label": "FBlueprintActionDatabaseRegistrar",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBlueprintActionDatabaseRegistrar"
  },
  {
    "label": "UClass",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UClass"
  },
  {
    "label": "UEdGraph",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEdGraph"
  },
  {
    "label": "UEdGraphPin",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEdGraphPin"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "UK2Node_MultiGate",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UK2Node_MultiGate"
  },
  {
    "label": "UK2Node_TemporaryVariable",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UK2Node_TemporaryVariable"
  },
  {
    "label": "FNodeHandlingFunctor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNodeHandlingFunctor"
  },
  {
    "label": "FKismetCompilerContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FKismetCompilerContext"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" CoreMinimal . h \" # include \" EdGraph / EdGraphNode . h \" # include \" HAL / Platform . h \" # include \" Internationalization / Text . h \" # include \" K2Node_ExecutionSequence . h \" # include \" Math / Color . h \" # include \" UObject / NameTypes . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / ObjectPtr . h \" # include \" UObject / UObjectGlobals . h \" # include \" K2Node_MultiGate . generated . h \" class FBlueprintActionDatabaseRegistrar ; class UClass ; class UEdGraph ; class UEdGraphPin ; class UObject ;)",
    "insertText": "UCLASS(MinimalAPI)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() UPROPERTY(transient)"
  },
  {
    "label": "AllocateDefaultPins()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AllocateDefaultPins()"
  },
  {
    "label": "GetTooltipText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetTooltipText()"
  },
  {
    "label": "GetNodeTitleColor()",
    "kind": "Method",
    "detail": "Function (FLinearColor)",
    "insertText": "GetNodeTitleColor()"
  },
  {
    "label": "GetNodeTitle()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetNodeTitle(ENodeTitleType::Type TitleType)"
  },
  {
    "label": "ReallocatePinsDuringReconstruction()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReallocatePinsDuringReconstruction(TArray<UEdGraphPin*>& OldPins)"
  },
  {
    "label": "CreateNodeHandler()",
    "kind": "Method",
    "detail": "Function (class FNodeHandlingFunctor*)",
    "insertText": "CreateNodeHandler(class FKismetCompilerContext& CompilerContext)"
  },
  {
    "label": "ExpandNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExpandNode(class FKismetCompilerContext& CompilerContext, UEdGraph* SourceGraph)"
  },
  {
    "label": "GetMenuActions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetMenuActions(FBlueprintActionDatabaseRegistrar& ActionRegistrar)"
  },
  {
    "label": "CanAddPin()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanAddPin()"
  },
  {
    "label": "GetResetPin()",
    "kind": "Method",
    "detail": "Function (UEdGraphPin*)",
    "insertText": "GetResetPin()"
  },
  {
    "label": "GetIsRandomPin()",
    "kind": "Method",
    "detail": "Function (UEdGraphPin*)",
    "insertText": "GetIsRandomPin()"
  },
  {
    "label": "GetLoopPin()",
    "kind": "Method",
    "detail": "Function (UEdGraphPin*)",
    "insertText": "GetLoopPin()"
  },
  {
    "label": "GetStartIndexPin()",
    "kind": "Method",
    "detail": "Function (UEdGraphPin*)",
    "insertText": "GetStartIndexPin()"
  },
  {
    "label": "GetOutPins()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetOutPins(TArray<UEdGraphPin*>& OutPins)"
  },
  {
    "label": "GetNumOutPins()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetNumOutPins()"
  },
  {
    "label": "GetMarkBitFunction()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetMarkBitFunction(FName& FunctionName, UClass** FunctionClass)"
  },
  {
    "label": "GetHasUnmarkedBitFunction()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetHasUnmarkedBitFunction(FName& FunctionName, UClass** FunctionClass)"
  },
  {
    "label": "GetUnmarkedBitFunction()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetUnmarkedBitFunction(FName& FunctionName, UClass** FunctionClass)"
  },
  {
    "label": "GetConditionalFunction()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetConditionalFunction(FName& FunctionName, UClass** FunctionClass)"
  },
  {
    "label": "GetEqualityFunction()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetEqualityFunction(FName& FunctionName, UClass** FunctionClass)"
  },
  {
    "label": "GetBoolNotEqualFunction()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetBoolNotEqualFunction(FName& FunctionName, UClass** FunctionClass)"
  },
  {
    "label": "GetPrintStringFunction()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetPrintStringFunction(FName& FunctionName, UClass** FunctionClass)"
  },
  {
    "label": "GetClearAllBitsFunction()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetClearAllBitsFunction(FName& FunctionName, UClass** FunctionClass)"
  },
  {
    "label": "GetPinNameGivenIndex()",
    "kind": "Method",
    "detail": "Function (private : FName)",
    "insertText": "GetPinNameGivenIndex(int32 Index)"
  }
]