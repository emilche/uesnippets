[
  {
    "label": "IKeyArea",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IKeyArea"
  },
  {
    "label": "FMovieSceneChannelHandle",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneChannelHandle"
  },
  {
    "label": "FCategoryModel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCategoryModel"
  },
  {
    "label": "FChannelModel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FChannelModel"
  },
  {
    "label": "FSectionModel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSectionModel"
  },
  {
    "label": "ISectionLayoutBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISectionLayoutBuilder"
  },
  {
    "label": "ISectionLayoutBuilder()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Templates / Function . h \" # include \" Channels / MovieSceneChannelEditorData . h \" class IKeyArea ; struct FMovieSceneChannelHandle ; namespace UE::Sequencer { class FCategoryModel ; class FChannelModel ; class FSectionModel ; } class ISectionLayoutBuilder { public : ~)",
    "insertText": "ISectionLayoutBuilder()"
  },
  {
    "label": "PushCategory()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "PushCategory(FName CategoryName, const FText& DisplayLabel, FGetMovieSceneTooltipText GetGroupTooltipTextDelegate, TFunction<TSharedPtr<UE::Sequencer::FCategoryModel>(FName, const FText&)> OptionalFactory)"
  },
  {
    "label": "SetTopLevelChannel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTopLevelChannel(const FMovieSceneChannelHandle& Channel, TFunction<TSharedPtr<UE::Sequencer::FChannelModel>(FName, const UE::Sequencer::FSectionModel&, const FMovieSceneChannelHandle&)> OptionalFactory)"
  },
  {
    "label": "AddChannel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddChannel(const FMovieSceneChannelHandle& Channel, TFunction<TSharedPtr<UE::Sequencer::FChannelModel>(FName, const UE::Sequencer::FSectionModel&, const FMovieSceneChannelHandle&)> OptionalFactory)"
  },
  {
    "label": "PopCategory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PopCategory()"
  }
]