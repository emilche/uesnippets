[
  {
    "label": "FLandscapeAsyncTextureReadback",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLandscapeAsyncTextureReadback"
  },
  {
    "label": "FLandscapeAsyncTextureReadback()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" RHIGPUReadback . h \" # include \" RenderGraphFwd . h \" # include<atomic> class FLandscapeAsyncTextureReadback { private : bool bFinishQueuedFromGameThread = false ; bool bCancel = false ; std::atomic_bool bStartedOnRenderThread = false ; std::atomic_bool bFinishedOnRenderThread = false ; TUniquePtr<FRHIGPUTextureReadback> AsyncReadback ; int32 TextureWidth = 0 ; int32 TextureHeight = 0 ; TArray<FColor> ReadbackResults ; public :)",
    "insertText": "FLandscapeAsyncTextureReadback()"
  },
  {
    "label": "StartReadback_RenderThread()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "StartReadback_RenderThread(FRDGBuilder& GraphBuilder, FRDGTextureRef RDGTexture)"
  },
  {
    "label": "FinishReadback_RenderThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FinishReadback_RenderThread()"
  },
  {
    "label": "CheckAndUpdate()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CheckAndUpdate(bool& bOutFinishCommandQueued, const bool bInForceFinish)"
  },
  {
    "label": "CancelAndSelfDestruct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CancelAndSelfDestruct()"
  },
  {
    "label": "IsComplete()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsComplete()"
  },
  {
    "label": "FIntPoint()",
    "kind": "Method",
    "detail": "Function (* OutSize =)",
    "insertText": "FIntPoint(TextureWidth, TextureHeight)"
  },
  {
    "label": "MoveTemp()",
    "kind": "Method",
    "detail": "Function (} return)",
    "insertText": "MoveTemp(ReadbackResults)"
  },
  {
    "label": "ToString()",
    "kind": "Method",
    "detail": "Function (} FString)",
    "insertText": "ToString()"
  },
  {
    "label": "Appendf()",
    "kind": "Method",
    "detail": "Function (FString Result ; Result .)",
    "insertText": "Appendf(TEXT(\"FLandscapeAsyncTextureReadback { RTStart: %d RTComplete: %d Queued: %d Cancel: %d AsyncReadback: %p }\"), bStartedOnRenderThread.load(), bFinishedOnRenderThread.load(), bFinishQueuedFromGameThread, bCancel, AsyncReadback.Get())"
  }
]