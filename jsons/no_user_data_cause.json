[
  {
    "label": "NoUserDataCauseConfig",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "NoUserDataCauseConfig"
  },
  {
    "label": "NoUserDataCause",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "NoUserDataCause"
  },
  {
    "label": "NoUserDataCause()",
    "kind": "Method",
    "detail": "Function (# ifndef NET_DCSCTP_PACKET_ERROR_CAUSE_NO_USER_DATA_CAUSE_H_ # define NET_DCSCTP_PACKET_ERROR_CAUSE_NO_USER_DATA_CAUSE_H_ # include<stddef . h> # include<stdint . h> # include<string> # include<vector> # include \" absl / strings / string_view . h \" # include \" api / array_view . h \" # include \" net / dcsctp / common / internal_types . h \" # include \" net / dcsctp / packet / error_cause / error_cause . h \" # include \" net / dcsctp / packet / tlv_trait . h \" namespace dcsctp { struct NoUserDataCauseConfig : public ParameterConfig { int kType = 9 ; size_t kHeaderSize = 8 ; size_t kVariableLengthAlignment = 0 ; } ; class NoUserDataCause : public Parameter,public TLVTrait<NoUserDataCauseConfig> { public : int kType = NoUserDataCauseConfig::kType ;)",
    "insertText": "NoUserDataCause(TSN tsn) : tsn_(tsn)"
  },
  {
    "label": "Parse()",
    "kind": "Method",
    "detail": "Function (} absl::optional<NoUserDataCause>)",
    "insertText": "Parse(rtc::ArrayView<const uint8_t> data)"
  },
  {
    "label": "SerializeTo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SerializeTo(std::vector<uint8_t>& out)"
  },
  {
    "label": "ToString()",
    "kind": "Method",
    "detail": "Function (std::string)",
    "insertText": "ToString()"
  },
  {
    "label": "tsn()",
    "kind": "Method",
    "detail": "Function (TSN)",
    "insertText": "tsn()"
  }
]