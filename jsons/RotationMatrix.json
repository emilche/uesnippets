[
  {
    "label": "TRotationMatrix",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TRotationMatrix"
  },
  {
    "label": "TIsUECoreVariant",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TIsUECoreVariant"
  },
  {
    "label": "TIsUECoreVariant",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TIsUECoreVariant"
  },
  {
    "label": "TRotationMatrix()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TRotationMatrix(Rot)"
  },
  {
    "label": "Make()",
    "kind": "Method",
    "detail": "Function (TMatrix<T>)",
    "insertText": "Make(TQuat<T> const& Rot)"
  },
  {
    "label": "MakeFromX()",
    "kind": "Method",
    "detail": "Function (TMatrix<T>)",
    "insertText": "MakeFromX(TVector<T> const& XAxis)"
  },
  {
    "label": "MakeFromY()",
    "kind": "Method",
    "detail": "Function (TMatrix<T>)",
    "insertText": "MakeFromY(TVector<T> const& YAxis)"
  },
  {
    "label": "MakeFromZ()",
    "kind": "Method",
    "detail": "Function (TMatrix<T>)",
    "insertText": "MakeFromZ(TVector<T> const& ZAxis)"
  },
  {
    "label": "MakeFromXY()",
    "kind": "Method",
    "detail": "Function (TMatrix<T>)",
    "insertText": "MakeFromXY(TVector<T> const& XAxis, TVector<T> const& YAxis)"
  },
  {
    "label": "MakeFromXZ()",
    "kind": "Method",
    "detail": "Function (TMatrix<T>)",
    "insertText": "MakeFromXZ(TVector<T> const& XAxis, TVector<T> const& ZAxis)"
  },
  {
    "label": "MakeFromYX()",
    "kind": "Method",
    "detail": "Function (TMatrix<T>)",
    "insertText": "MakeFromYX(TVector<T> const& YAxis, TVector<T> const& XAxis)"
  },
  {
    "label": "MakeFromYZ()",
    "kind": "Method",
    "detail": "Function (TMatrix<T>)",
    "insertText": "MakeFromYZ(TVector<T> const& YAxis, TVector<T> const& ZAxis)"
  },
  {
    "label": "MakeFromZX()",
    "kind": "Method",
    "detail": "Function (TMatrix<T>)",
    "insertText": "MakeFromZX(TVector<T> const& ZAxis, TVector<T> const& XAxis)"
  },
  {
    "label": "MakeFromZY()",
    "kind": "Method",
    "detail": "Function (TMatrix<T>)",
    "insertText": "MakeFromZY(TVector<T> const& ZAxis, TVector<T> const& YAxis)"
  },
  {
    "label": "UE_DECLARE_LWC_TYPE()",
    "kind": "Method",
    "detail": "Function (UE)",
    "insertText": "UE_DECLARE_LWC_TYPE(RotationMatrix, 44)"
  }
]