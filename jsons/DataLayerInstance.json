[
  {
    "label": "AWorldDataLayers",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AWorldDataLayers"
  },
  {
    "label": "FText",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FText"
  },
  {
    "label": "IStreamingGenerationErrorHandler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IStreamingGenerationErrorHandler"
  },
  {
    "label": "UWorld",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UWorld"
  },
  {
    "label": "UDataLayerAsset",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UDataLayerAsset"
  },
  {
    "label": "UExternalDataLayerInstance",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UExternalDataLayerInstance"
  },
  {
    "label": "FDataLayerInstanceDesc",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDataLayerInstanceDesc"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "UDataLayerInstance",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UDataLayerInstance"
  },
  {
    "label": "UDataLayerConversionInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UDataLayerConversionInfo"
  },
  {
    "label": "FDataLayerInstanceDetails",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDataLayerInstanceDetails"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "UDataLayerManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UDataLayerManager"
  },
  {
    "label": "FDataLayerUtils",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDataLayerUtils"
  },
  {
    "label": "UENUM()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / UObjectGlobals . h \" # include \" UObject / Object . h \" # include \" WorldPartition / DataLayer / DataLayerType . h \" # include \" WorldPartition / ErrorHandling / WorldPartitionStreamingGenerationErrorHandler . h \" # include \" DataLayerInstance . generated . h \" # define DATALAYER_TO_INSTANCE_RUNTIME_CONVERSION_ENABLED 1 class AWorldDataLayers ; class FText ; class IStreamingGenerationErrorHandler ; class UWorld ; class UDataLayerAsset ; class UExternalDataLayerInstance ; class FDataLayerInstanceDesc ;)",
    "insertText": "UENUM(BlueprintType)"
  },
  {
    "label": "GetDataLayerRuntimeStateName()",
    "kind": "Method",
    "detail": "Function (NoOverride,Blocking,NotBlocking } ; const TCHAR*)",
    "insertText": "GetDataLayerRuntimeStateName(EDataLayerRuntimeState State)"
  },
  {
    "label": "check()",
    "kind": "Method",
    "detail": "Function (default :)",
    "insertText": "check(0)"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (} return)",
    "insertText": "TEXT(\"Invalid\")"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "UCLASS(Config = Engine, PerObjectConfig, BlueprintType, AutoCollapseCategories = (\"Data Layer|Advanced\"), AutoExpandCategories = (\"Data Layer|Editor\", \"Data Layer|Advanced|Runtime\"), MinimalAPI)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY()"
  },
  {
    "label": "PostLoad()",
    "kind": "Method",
    "detail": "Function (class FDataLayerInstanceDetails ; public : void)",
    "insertText": "PostLoad()"
  },
  {
    "label": "GetTypedOuter()",
    "kind": "Method",
    "detail": "Function (template<class T> T*)",
    "insertText": "GetTypedOuter()"
  },
  {
    "label": "GetOuterWorld()",
    "kind": "Method",
    "detail": "Function (} UWorld*)",
    "insertText": "GetOuterWorld()"
  },
  {
    "label": "GetOuterWorldDataLayers()",
    "kind": "Method",
    "detail": "Function (AWorldDataLayers*)",
    "insertText": "GetOuterWorldDataLayers()"
  },
  {
    "label": "GetDirectOuterWorldDataLayers()",
    "kind": "Method",
    "detail": "Function (AWorldDataLayers*)",
    "insertText": "GetDirectOuterWorldDataLayers()"
  },
  {
    "label": "IsAsset()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR bool)",
    "insertText": "IsAsset()"
  },
  {
    "label": "GetAssetRegistryTags()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetAssetRegistryTags(FAssetRegistryTagsContext Context)"
  },
  {
    "label": "PreEditUndo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PreEditUndo()"
  },
  {
    "label": "PostEditUndo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostEditUndo()"
  },
  {
    "label": "CanEditChange()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanEditChange(const FProperty* InProperty)"
  },
  {
    "label": "SetParent()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetParent(UDataLayerInstance* InParent)"
  },
  {
    "label": "SetVisible()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetVisible(bool bIsVisible)"
  },
  {
    "label": "SetIsInitiallyVisible()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetIsInitiallyVisible(bool bIsInitiallyVisible)"
  },
  {
    "label": "SetIsLoadedInEditor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetIsLoadedInEditor(bool bIsLoadedInEditor, bool bFromUserChange)"
  },
  {
    "label": "SetIsLocked()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetIsLocked(bool bInIsLocked)"
  },
  {
    "label": "IsEffectiveLoadedInEditor()",
    "kind": "Method",
    "detail": "Function (bIsLocked = bInIsLocked ; } bool)",
    "insertText": "IsEffectiveLoadedInEditor()"
  },
  {
    "label": "IsInitiallyLoadedInEditor()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsInitiallyLoadedInEditor()"
  },
  {
    "label": "IsIncludedInActorFilterDefault()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsIncludedInActorFilterDefault()"
  },
  {
    "label": "CanUserAddActors()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanUserAddActors(FText* OutReason = nullptr)"
  },
  {
    "label": "CanUserRemoveActors()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanUserRemoveActors(FText* OutReason = nullptr)"
  },
  {
    "label": "CanAddActor()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanAddActor(AActor* Actor, FText* OutReason = nullptr)"
  },
  {
    "label": "CanRemoveActor()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanRemoveActor(AActor* Actor, FText* OutReason = nullptr)"
  },
  {
    "label": "CanBeInActorEditorContext()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanBeInActorEditorContext()"
  },
  {
    "label": "CanBeRemoved()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanBeRemoved()"
  },
  {
    "label": "RemoveActor()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RemoveActor(AActor* Actor)"
  },
  {
    "label": "IsActorEditorContextCurrentColorized()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsActorEditorContextCurrentColorized()"
  },
  {
    "label": "IsInActorEditorContext()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsInActorEditorContext()"
  },
  {
    "label": "AddToActorEditorContext()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AddToActorEditorContext()"
  },
  {
    "label": "RemoveFromActorEditorContext()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RemoveFromActorEditorContext()"
  },
  {
    "label": "Validate()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Validate(IStreamingGenerationErrorHandler* ErrorHandler)"
  },
  {
    "label": "GetDataLayerIconName()",
    "kind": "Method",
    "detail": "Function (const TCHAR*)",
    "insertText": "GetDataLayerIconName()"
  },
  {
    "label": "GetDataLayerText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetDataLayerText(const UDataLayerInstance* InDataLayer)"
  },
  {
    "label": "GetAssetRegistryInfoFromPackage()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetAssetRegistryInfoFromPackage(FName InDataLayerInstancePackageName, FDataLayerInstanceDesc& OutDataLayerInstanceDesc)"
  },
  {
    "label": "GetAssetRegistryInfoFromPackage()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetAssetRegistryInfoFromPackage(const FAssetData& InAsset, FDataLayerInstanceDesc& OutDataLayerInstanceDesc)"
  },
  {
    "label": "IsLocked()",
    "kind": "Method",
    "detail": "Function (FText Reason ; return)",
    "insertText": "IsLocked(&Reason)"
  },
  {
    "label": "CanHaveChildDataLayerInstance()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "CanHaveChildDataLayerInstance(const UDataLayerInstance* InChildDataLayerInstance)"
  },
  {
    "label": "GetRuntimeState()",
    "kind": "Method",
    "detail": "Function (} EDataLayerRuntimeState)",
    "insertText": "GetRuntimeState()"
  },
  {
    "label": "GetEffectiveRuntimeState()",
    "kind": "Method",
    "detail": "Function (EDataLayerRuntimeState)",
    "insertText": "GetEffectiveRuntimeState()"
  },
  {
    "label": "GetDataLayerFName()",
    "kind": "Method",
    "detail": "Function (# if DATALAYER_TO_INSTANCE_RUNTIME_CONVERSION_ENABLED public : FName)",
    "insertText": "GetDataLayerFName()"
  },
  {
    "label": "GetFName()",
    "kind": "Method",
    "detail": "Function (} private : FName)",
    "insertText": "GetFName()"
  },
  {
    "label": "GetName()",
    "kind": "Method",
    "detail": "Function (} FString)",
    "insertText": "GetName()"
  },
  {
    "label": "IsLocked()",
    "kind": "Method",
    "detail": "Function (} # endif protected : # if WITH_EDITOR bool)",
    "insertText": "IsLocked(FText* OutReason)"
  },
  {
    "label": "IsParentDataLayerTypeCompatible()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsParentDataLayerTypeCompatible(const UDataLayerInstance* InParent, FText* OutReasonText = nullptr, IStreamingGenerationErrorHandler::EDataLayerHierarchyInvalidReason* OutReason = nullptr)"
  },
  {
    "label": "PerformAddActor()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PerformAddActor(AActor* InActor)"
  },
  {
    "label": "OnRemovedFromWorldDataLayers()",
    "kind": "Method",
    "detail": "Function (private : # if WITH_EDITOR void)",
    "insertText": "OnRemovedFromWorldDataLayers()"
  },
  {
    "label": "ClearLoadedInEditorChangedByUserOperation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearLoadedInEditorChangedByUserOperation()"
  },
  {
    "label": "RemoveChild()",
    "kind": "Method",
    "detail": "Function (bIsLoadedInEditorChangedByUserOperation = false ; } void)",
    "insertText": "RemoveChild(UDataLayerInstance* DataLayer)"
  },
  {
    "label": "AddChild()",
    "kind": "Method",
    "detail": "Function (# endif void)",
    "insertText": "AddChild(UDataLayerInstance* DataLayer)"
  }
]