[
  {
    "label": "BASE_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BASE_EXPORT"
  },
  {
    "label": "ServiceThread()",
    "kind": "Method",
    "detail": "Function (# ifndef BASE_TASK_THREAD_POOL_SERVICE_THREAD_H_ # define BASE_TASK_THREAD_POOL_SERVICE_THREAD_H_ # include \" base / base_export . h \" # include \" base / threading / thread . h \" namespace base { namespace internal { class BASE_EXPORT ServiceThread : public Thread { public :)",
    "insertText": "ServiceThread()"
  },
  {
    "label": "ServiceThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ServiceThread(const ServiceThread&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (ServiceThread&)",
    "insertText": "operator(const ServiceThread&)"
  },
  {
    "label": "Run()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "Run(RunLoop* run_loop)"
  }
]