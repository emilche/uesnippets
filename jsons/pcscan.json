[
  {
    "label": "StatsReporter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "StatsReporter"
  },
  {
    "label": "encapsulates",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "encapsulates"
  },
  {
    "label": "PA_COMPONENT_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PA_COMPONENT_EXPORT"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "InitConfig",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "InitConfig"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "PCScanThread",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PCScanThread"
  },
  {
    "label": "PCScanTask",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PCScanTask"
  },
  {
    "label": "PartitionAllocPCScanTestBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PartitionAllocPCScanTestBase"
  },
  {
    "label": "PCScanInternal",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PCScanInternal"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "DoubleFreeAttempt()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DoubleFreeAttempt()"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Initialize(InitConfig)"
  },
  {
    "label": "IsInitialized()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsInitialized()"
  },
  {
    "label": "Disable()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Disable()"
  },
  {
    "label": "Reenable()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reenable()"
  },
  {
    "label": "IsEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsEnabled()"
  },
  {
    "label": "RegisterScannableRoot()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterScannableRoot(Root* root)"
  },
  {
    "label": "RegisterNonScannableRoot()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterNonScannableRoot(Root* root)"
  },
  {
    "label": "RegisterNewSuperPage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterNewSuperPage(Root* root, uintptr_t super_page_base)"
  },
  {
    "label": "MoveToQuarantine()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MoveToQuarantine(void* object,\n                                                size_t usable_size,\n                                                uintptr_t slot_start,\n                                                size_t slot_size)"
  },
  {
    "label": "PerformScan()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PerformScan(InvocationMode invocation_mode)"
  },
  {
    "label": "PerformScanIfNeeded()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PerformScanIfNeeded(InvocationMode invocation_mode)"
  },
  {
    "label": "PerformDelayedScan()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PerformDelayedScan(int64_t delay_in_microseconds)"
  },
  {
    "label": "EnableSafepoints()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnableSafepoints()"
  },
  {
    "label": "JoinScanIfNeeded()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "JoinScanIfNeeded()"
  },
  {
    "label": "IsInProgress()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsInProgress()"
  },
  {
    "label": "SetProcessName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetProcessName(const char* name)"
  },
  {
    "label": "EnableStackScanning()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnableStackScanning()"
  },
  {
    "label": "DisableStackScanning()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DisableStackScanning()"
  },
  {
    "label": "IsStackScanningEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsStackScanningEnabled()"
  },
  {
    "label": "EnableImmediateFreeing()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnableImmediateFreeing()"
  },
  {
    "label": "NotifyThreadCreated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyThreadCreated(void* stack_top)"
  },
  {
    "label": "NotifyThreadDestroyed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyThreadDestroyed()"
  },
  {
    "label": "SetClearType()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetClearType(ClearType)"
  },
  {
    "label": "UninitForTesting()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UninitForTesting()"
  },
  {
    "label": "RegisterStatsReporter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterStatsReporter(partition_alloc::StatsReporter* reporter)"
  },
  {
    "label": "SetJoinableIfSafepointEnabled()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetJoinableIfSafepointEnabled(bool)"
  },
  {
    "label": "PCScan()",
    "kind": "Method",
    "detail": "Function (constexpr)",
    "insertText": "PCScan()"
  },
  {
    "label": "JoinScan()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "JoinScan()"
  },
  {
    "label": "FinishScanForTesting()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FinishScanForTesting()"
  },
  {
    "label": "ReinitForTesting()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReinitForTesting(InitConfig)"
  }
]