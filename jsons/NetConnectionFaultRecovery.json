[
  {
    "label": "UNetConnection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UNetConnection"
  },
  {
    "label": "UNetFaultConfig",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UNetFaultConfig"
  },
  {
    "label": "FNetConnectionFaultRecovery",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNetConnectionFaultRecovery"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Net / Core / Connection / NetConnectionFaultRecoveryBase . h \" # include \" Net / DefaultFaultHandler . h \" # include \" NetConnectionFaultRecovery . generated . h \" class UNetConnection ;)",
    "insertText": "UCLASS(config=Engine, PerObjectConfig)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() private: virtual void InitConfigDefaultsInternal()"
  },
  {
    "label": "InitDefaults()",
    "kind": "Method",
    "detail": "Function (} ; namespace UE { namespace Net { class FNetConnectionFaultRecovery final : public FNetConnectionFaultRecoveryBase { UNetConnection ; private : void)",
    "insertText": "InitDefaults(FString InConfigContext, UNetConnection* InConnection)"
  },
  {
    "label": "TickRealtime()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TickRealtime(double TimeSeconds)"
  },
  {
    "label": "DoesRequireTick()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DoesRequireTick()"
  },
  {
    "label": "InitEscalationManager()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitEscalationManager()"
  },
  {
    "label": "NotifySeverityUpdate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifySeverityUpdate(const FEscalationState& OldState, const FEscalationState& NewState, ESeverityUpdate UpdateType)"
  }
]