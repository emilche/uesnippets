[
  {
    "label": "UGameplayTask_ClaimResource",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UGameplayTask_ClaimResource"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / UObjectGlobals . h \" # include \" Templates / SubclassOf . h \" # include \" UObject / ScriptInterface . h \" # include \" GameplayTaskOwnerInterface . h \" # include \" GameplayTask . h \" # include \" GameplayTaskResource . h \" # include \" GameplayTask_ClaimResource . generated . h \")",
    "insertText": "UCLASS(BlueprintType, MinimalAPI)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: GAMEPLAYTASKS_API UGameplayTask_ClaimResource(const FObjectInitializer& ObjectInitializer = FObjectInitializer::Get())"
  },
  {
    "label": "ClaimResource()",
    "kind": "Method",
    "detail": "Function (UGameplayTask_ClaimResource*)",
    "insertText": "ClaimResource(IGameplayTaskOwnerInterface& InTaskOwner, const TSubclassOf<UGameplayTaskResource> ResourceClass, const uint8 Priority = FGameplayTasks::DefaultPriority, const FName TaskInstanceName = NAME_None)"
  },
  {
    "label": "ClaimResources()",
    "kind": "Method",
    "detail": "Function (UGameplayTask_ClaimResource*)",
    "insertText": "ClaimResources(IGameplayTaskOwnerInterface& InTaskOwner, const TArray<TSubclassOf<UGameplayTaskResource> >& ResourceClasses, const uint8 Priority = FGameplayTasks::DefaultPriority, const FName TaskInstanceName = NAME_None)"
  }
]