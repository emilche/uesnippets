[
  {
    "label": "DAGDeltaAlgorithm",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DAGDeltaAlgorithm"
  },
  {
    "label": "anchor()",
    "kind": "Method",
    "detail": "Function (# ifndef LLVM_ADT_DAGDELTAALGORITHM_H # define LLVM_ADT_DAGDELTAALGORITHM_H # include<set> # include<vector> namespace llvm { class DAGDeltaAlgorithm { void)",
    "insertText": "anchor()"
  },
  {
    "label": "DAGDeltaAlgorithm()",
    "kind": "Method",
    "detail": "Function (public : typedef unsigned change_ty ; typedef std::pair<change_ty,change_ty> edge_ty ; typedef std::set<change_ty> changeset_ty ; typedef std::vector<changeset_ty> changesetlist_ty ; public : ~)",
    "insertText": "DAGDeltaAlgorithm()"
  },
  {
    "label": "Run()",
    "kind": "Method",
    "detail": "Function (} changeset_ty)",
    "insertText": "Run(const changeset_ty &Changes, const std::vector<edge_ty> &Dependencies)"
  },
  {
    "label": "UpdatedSearchState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdatedSearchState(const changeset_ty &Changes, const changesetlist_ty &Sets, const changeset_ty &Required)"
  },
  {
    "label": "ExecuteOneTest()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "ExecuteOneTest(const changeset_ty &S)"
  }
]