[
  {
    "label": "FWhiteNoise",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWhiteNoise"
  },
  {
    "label": "FPinkNoise",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPinkNoise"
  },
  {
    "label": "FWhiteNoise()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Math / RandomStream . h \" namespace Audio { class FWhiteNoise { public :)",
    "insertText": "FWhiteNoise()"
  },
  {
    "label": "FWhiteNoise()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FWhiteNoise(int32 InRandomSeed)"
  },
  {
    "label": "Generate()",
    "kind": "Method",
    "detail": "Function (} float)",
    "insertText": "Generate(float InScale, float InAdd)"
  },
  {
    "label": "FPinkNoise()",
    "kind": "Method",
    "detail": "Function (} private : FRandomStream RandomStream ; } ; class FPinkNoise { public :)",
    "insertText": "FPinkNoise()"
  },
  {
    "label": "FPinkNoise()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FPinkNoise(int32 InRandomSeed)"
  },
  {
    "label": "Generate()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "Generate()"
  },
  {
    "label": "SetFilterGain()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFilterGain(float InFilterGain)"
  }
]