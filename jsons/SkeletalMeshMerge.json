[
  {
    "label": "UMaterialInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialInterface"
  },
  {
    "label": "USkeletalMesh",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USkeletalMesh"
  },
  {
    "label": "USkeletalMeshSocket",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USkeletalMeshSocket"
  },
  {
    "label": "USkeleton",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USkeleton"
  },
  {
    "label": "FSkeletalMeshLODRenderData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSkeletalMeshLODRenderData"
  },
  {
    "label": "FSkelMeshRenderSection",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSkelMeshRenderSection"
  },
  {
    "label": "FRefPoseOverride",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRefPoseOverride"
  },
  {
    "label": "EBoneOverrideMode",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EBoneOverrideMode"
  },
  {
    "label": "FBoneOverrideInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBoneOverrideInfo"
  },
  {
    "label": "FSkeletalMeshMerge",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSkeletalMeshMerge"
  },
  {
    "label": "FSkelMeshMergeSectionMapping",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSkelMeshMergeSectionMapping"
  },
  {
    "label": "FSkelMeshMergeMeshUVTransforms",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSkelMeshMergeMeshUVTransforms"
  },
  {
    "label": "UE_DEPRECATED",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "UE_DEPRECATED"
  },
  {
    "label": "FSkelMeshMergeUVTransformMapping",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSkelMeshMergeUVTransformMapping"
  },
  {
    "label": "FMergeMeshInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMergeMeshInfo"
  },
  {
    "label": "FMergeSectionInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMergeSectionInfo"
  },
  {
    "label": "FNewSectionInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FNewSectionInfo"
  },
  {
    "label": "FRefPoseOverride()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Engine / EngineTypes . h \" # include \" ReferenceSkeleton . h \" # include \" Components . h \" # include \" SkeletalMeshMerge . generated . h \" class UMaterialInterface ; class USkeletalMesh ; class USkeletalMeshSocket ; class USkeleton ; class FSkeletalMeshLODRenderData ; struct FSkelMeshRenderSection ; struct FRefPoseOverride { public : enum EBoneOverrideMode { BoneOnly,ChildrenOnly,BoneAndChildren,MAX,} ;)",
    "insertText": "FRefPoseOverride(const USkeletalMesh* ReferenceMesh)"
  },
  {
    "label": "AddOverride()",
    "kind": "Method",
    "detail": "Function (this -> SkeletalMesh = ReferenceMesh ; } void)",
    "insertText": "AddOverride(FName BoneName, EBoneOverrideMode OverrideMode = BoneOnly)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (FBoneOverrideInfo OverrideInfo ; OverrideInfo . BoneName = BoneName ; OverrideInfo . OverrideMode = OverrideMode ; Overrides .)",
    "insertText": "Add(OverrideInfo)"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (} private : struct FBoneOverrideInfo { FName BoneName ; EBoneOverrideMode OverrideMode ; } ; const USkeletalMesh* SkeletalMesh ; TArray<FBoneOverrideInfo> Overrides ; class FSkeletalMeshMerge ; } ;)",
    "insertText": "USTRUCT(BlueprintType)"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() UPROPERTY(EditAnywhere, BlueprintReadWrite, Category = \"Mesh Merge Parameters\")"
  },
  {
    "label": "FSkeletalMeshMerge()",
    "kind": "Method",
    "detail": "Function (} ; class FSkeletalMeshMerge { public :)",
    "insertText": "FSkeletalMeshMerge(USkeletalMesh* InMergeMesh, const TArray<USkeletalMesh*>& InSrcMeshList, const TArray<FSkelMeshMergeSectionMapping>& InForceSectionMapping, int32 StripTopLODs, EMeshBufferAccess MeshBufferAccess=EMeshBufferAccess::Default, const FSkelMeshMergeUVTransformMapping* InSectionUVTransforms = nullptr)"
  },
  {
    "label": "FSkeletalMeshMerge()",
    "kind": "Method",
    "detail": "Function (PRAGMA_DISABLE_DEPRECATION_WARNINGS)",
    "insertText": "FSkeletalMeshMerge(const FSkeletalMeshMerge&)"
  },
  {
    "label": "DoMerge()",
    "kind": "Method",
    "detail": "Function (PRAGMA_ENABLE_DEPRECATION_WARNINGS bool)",
    "insertText": "DoMerge(TArray<FRefPoseOverride>* RefPoseOverrides = nullptr)"
  },
  {
    "label": "MergeSkeleton()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MergeSkeleton(const TArray<FRefPoseOverride>* RefPoseOverrides = nullptr)"
  },
  {
    "label": "FinalizeMesh()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "FinalizeMesh()"
  },
  {
    "label": "FMergeSectionInfo()",
    "kind": "Method",
    "detail": "Function (TArray<int32> MaterialIds ; struct FMergeSectionInfo { const USkeletalMesh* SkelMesh ; const FSkelMeshRenderSection* Section ; TArray<FBoneIndexType> BoneMapToMergedBoneMap ; TArray<FTransform> UVTransforms ;)",
    "insertText": "FMergeSectionInfo(const USkeletalMesh* InSkelMesh,const FSkelMeshRenderSection* InSection, TArray<FTransform> & InUVTransforms ) : SkelMesh(InSkelMesh) , Section(InSection) , UVTransforms(InUVTransforms)"
  },
  {
    "label": "FNewSectionInfo()",
    "kind": "Method",
    "detail": "Function (} } ; struct FNewSectionInfo { TArray<FMergeSectionInfo> MergeSections ; TArray<FBoneIndexType> MergedBoneMap ; UMaterialInterface* Material ; int32 MaterialId ; FName SlotName ; FMeshUVChannelInfo UVChannelData ;)",
    "insertText": "FNewSectionInfo(UMaterialInterface* InMaterial, int32 InMaterialId, FName InSlotName, const FMeshUVChannelInfo& InUVChannelData ) : Material(InMaterial) , MaterialId(InMaterialId) , SlotName(InSlotName) , UVChannelData(InUVChannelData)"
  },
  {
    "label": "MergeBoneMap()",
    "kind": "Method",
    "detail": "Function (} } ; void)",
    "insertText": "MergeBoneMap(TArray<FBoneIndexType>& MergedBoneMap, TArray<FBoneIndexType>& BoneMapToMergedBoneMap, const TArray<FBoneIndexType>& BoneMap)"
  },
  {
    "label": "GenerateLODModel()",
    "kind": "Method",
    "detail": "Function (template<VertexDataType> void)",
    "insertText": "GenerateLODModel(int32 LODIdx)"
  },
  {
    "label": "GenerateNewSectionArray()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GenerateNewSectionArray(TArray<FNewSectionInfo>& NewSectionArray, int32 LODIdx)"
  },
  {
    "label": "ProcessMergeMesh()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ProcessMergeMesh()"
  },
  {
    "label": "CalculateLodCount()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "CalculateLodCount(const TArray<USkeletalMesh*>& SourceMeshList)"
  },
  {
    "label": "BuildReferenceSkeleton()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildReferenceSkeleton(const TArray<USkeletalMesh*>& SourceMeshList, FReferenceSkeleton& RefSkeleton, const USkeleton* SkeletonAsset)"
  },
  {
    "label": "OverrideReferenceSkeletonPose()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OverrideReferenceSkeletonPose(const TArray<FRefPoseOverride>& PoseOverrides, FReferenceSkeleton& TargetSkeleton, const USkeleton* SkeletonAsset)"
  },
  {
    "label": "OverrideReferenceBonePose()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "OverrideReferenceBonePose(int32 SourceBoneIndex, const FReferenceSkeleton& SourceSkeleton, FReferenceSkeletonModifier& TargetSkeleton)"
  },
  {
    "label": "ReleaseResources()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseResources(int32 Slack = 0)"
  },
  {
    "label": "AddSocket()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AddSocket(const USkeletalMeshSocket* NewSocket, bool bIsSkeletonSocket)"
  },
  {
    "label": "AddSockets()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddSockets(const TArray<USkeletalMeshSocket*>& NewSockets, bool bAreSkeletonSockets)"
  },
  {
    "label": "BuildSockets()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildSockets(const TArray<USkeletalMesh*>& SourceMeshList)"
  },
  {
    "label": "OverrideSocket()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OverrideSocket(const USkeletalMeshSocket* SourceSocket)"
  },
  {
    "label": "OverrideBoneSockets()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OverrideBoneSockets(const FName& BoneName, const TArray<USkeletalMeshSocket*>& SourceSocketList)"
  },
  {
    "label": "OverrideMergedSockets()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OverrideMergedSockets(const TArray<FRefPoseOverride>& PoseOverrides)"
  },
  {
    "label": "CopyVertexFromSource()",
    "kind": "Method",
    "detail": "Function (template<VertexDataType> void)",
    "insertText": "CopyVertexFromSource(VertexDataType& DestVert, const FSkeletalMeshLODRenderData& SrcLODData, int32 SourceVertIdx, const FMergeSectionInfo& MergeSectionInfo)"
  }
]