[
  {
    "label": "Twine",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Twine"
  },
  {
    "label": "MCAsmParserExtension",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MCAsmParserExtension"
  },
  {
    "label": "MCAsmParserExtension()",
    "kind": "Method",
    "detail": "Function (# ifndef LLVM_MC_MCPARSER_MCASMPARSEREXTENSION_H # define LLVM_MC_MCPARSER_MCASMPARSEREXTENSION_H # include \" llvm / ADT / StringRef . h \" # include \" llvm / MC / MCParser / MCAsmParser . h \" # include \" llvm / Support / SMLoc . h \" namespace llvm { class Twine ; class MCAsmParserExtension {)",
    "insertText": "MCAsmParserExtension(const MCAsmParserExtension &)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "operator(const MCAsmParserExtension &)"
  },
  {
    "label": "MCAsmParserExtension()",
    "kind": "Method",
    "detail": "Function (MCAsmParser* Parser ; protected :)",
    "insertText": "MCAsmParserExtension()"
  },
  {
    "label": "bool()",
    "kind": "Method",
    "detail": "Function (template<T,)",
    "insertText": "bool(T::*Handler)(StringRef, SMLoc)> static bool HandleDirective(MCAsmParserExtension *Target, StringRef Directive, SMLoc DirectiveLoc)"
  },
  {
    "label": "T()",
    "kind": "Method",
    "detail": "Function (T* Obj = static_cast<)",
    "insertText": "T(Target)"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Initialize(MCAsmParser &Parser)"
  },
  {
    "label": "getContext()",
    "kind": "Method",
    "detail": "Function (MCContext&)",
    "insertText": "getContext()"
  },
  {
    "label": "getLexer()",
    "kind": "Method",
    "detail": "Function (} MCAsmLexer&)",
    "insertText": "getLexer()"
  },
  {
    "label": "getParser()",
    "kind": "Method",
    "detail": "Function (} MCAsmParser&)",
    "insertText": "getParser()"
  },
  {
    "label": "getSourceManager()",
    "kind": "Method",
    "detail": "Function (} SourceMgr&)",
    "insertText": "getSourceManager()"
  },
  {
    "label": "getStreamer()",
    "kind": "Method",
    "detail": "Function (} MCStreamer&)",
    "insertText": "getStreamer()"
  },
  {
    "label": "Warning()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "Warning(SMLoc L, const Twine &Msg)"
  },
  {
    "label": "Error()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "Error(SMLoc L, const Twine &Msg)"
  },
  {
    "label": "TokError()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "TokError(const Twine &Msg)"
  },
  {
    "label": "Lex()",
    "kind": "Method",
    "detail": "Function (} const AsmToken&)",
    "insertText": "Lex()"
  },
  {
    "label": "getTok()",
    "kind": "Method",
    "detail": "Function (} const AsmToken&)",
    "insertText": "getTok()"
  },
  {
    "label": "HasBracketExpressions()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "HasBracketExpressions()"
  }
]