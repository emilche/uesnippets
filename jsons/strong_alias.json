[
  {
    "label": "StrongAlias",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "StrongAlias"
  },
  {
    "label": "StrongAlias()",
    "kind": "Method",
    "detail": "Function (# ifndef RTC_BASE_STRONG_ALIAS_H_ # define RTC_BASE_STRONG_ALIAS_H_ # include<type_traits> # include<utility> namespace webrtc { template<TagType,TheUnderlyingType> class StrongAlias { public : using UnderlyingType = TheUnderlyingType ;)",
    "insertText": "StrongAlias()"
  },
  {
    "label": "StrongAlias()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StrongAlias(const UnderlyingType& v) : value_(v)"
  },
  {
    "label": "StrongAlias()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "StrongAlias(UnderlyingType&& v) noexcept : value_(std::move(v))"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} UnderlyingType*)",
    "insertText": "operator()"
  },
  {
    "label": "value()",
    "kind": "Method",
    "detail": "Function (} UnderlyingType&)",
    "insertText": "value()"
  },
  {
    "label": "UnderlyingType()",
    "kind": "Method",
    "detail": "Function (} operator const)",
    "insertText": "UnderlyingType()"
  }
]