[
  {
    "label": "CallStats",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CallStats"
  },
  {
    "label": "RttTime",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RttTime"
  },
  {
    "label": "RtcpRttStatsImpl",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RtcpRttStatsImpl"
  },
  {
    "label": "Millis()",
    "kind": "Method",
    "detail": "Function (# ifndef VIDEO_CALL_STATS2_H_ # define VIDEO_CALL_STATS2_H_ # include<list> # include<memory> # include \" api / task_queue / pending_task_safety_flag . h \" # include \" api / task_queue / task_queue_base . h \" # include \" api / units / timestamp . h \" # include \" modules / include / module_common_types . h \" # include \" modules / rtp_rtcp / include / rtp_rtcp_defines . h \" # include \" rtc_base / task_utils / repeating_task . h \" # include \" system_wrappers / include / clock . h \" namespace webrtc { namespace internal { class CallStats { public : TimeDelta kUpdateInterval =)",
    "insertText": "Millis(1000)"
  },
  {
    "label": "CallStats()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CallStats(Clock* clock, TaskQueueBase* task_queue)"
  },
  {
    "label": "CallStats()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "CallStats()"
  },
  {
    "label": "CallStats()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CallStats(const CallStats&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (CallStats&)",
    "insertText": "operator(const CallStats&)"
  },
  {
    "label": "EnsureStarted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnsureStarted()"
  },
  {
    "label": "AsRtcpRttStats()",
    "kind": "Method",
    "detail": "Function (RtcpRttStats*)",
    "insertText": "AsRtcpRttStats()"
  },
  {
    "label": "DeregisterStatsObserver()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeregisterStatsObserver(CallStatsObserver* observer)"
  },
  {
    "label": "LastProcessedRtt()",
    "kind": "Method",
    "detail": "Function (int64_t)",
    "insertText": "LastProcessedRtt()"
  },
  {
    "label": "UpdateHistogramsForTest()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateHistogramsForTest()"
  },
  {
    "label": "UpdateHistograms()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateHistograms()"
  },
  {
    "label": "RttTime()",
    "kind": "Method",
    "detail": "Function (} struct RttTime {)",
    "insertText": "RttTime(int64_t new_rtt, int64_t rtt_time) : rtt(new_rtt), time(rtt_time)"
  },
  {
    "label": "OnRttUpdate()",
    "kind": "Method",
    "detail": "Function (} const int64_t rtt ; const int64_t time ; } ; private : void)",
    "insertText": "OnRttUpdate(int64_t rtt)"
  },
  {
    "label": "UpdateAndReport()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateAndReport()"
  },
  {
    "label": "RtcpRttStatsImpl()",
    "kind": "Method",
    "detail": "Function (class RtcpRttStatsImpl : public RtcpRttStats { public :)",
    "insertText": "RtcpRttStatsImpl(CallStats* owner) : owner_(owner)"
  },
  {
    "label": "RtcpRttStatsImpl()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "RtcpRttStatsImpl()"
  },
  {
    "label": "OnRttUpdate()",
    "kind": "Method",
    "detail": "Function (owner_ ->)",
    "insertText": "OnRttUpdate(rtt)"
  },
  {
    "label": "RTC_DCHECK_NOTREACHED()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RTC_DCHECK_NOTREACHED()"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (int64_t max_rtt_ms_)",
    "insertText": "RTC_GUARDED_BY(task_queue_)"
  }
]