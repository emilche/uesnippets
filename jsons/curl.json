[
  {
    "label": "Curl_easy",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Curl_easy"
  },
  {
    "label": "Curl_share",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Curl_share"
  },
  {
    "label": "for",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "for"
  },
  {
    "label": "curl_httppost",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "curl_httppost"
  },
  {
    "label": "curl_httppost",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "curl_httppost"
  },
  {
    "label": "curl_slist",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "curl_slist"
  },
  {
    "label": "curl_httppost",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "curl_httppost"
  },
  {
    "label": "curl_fileinfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "curl_fileinfo"
  },
  {
    "label": "fields",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "fields"
  },
  {
    "label": "curl_slist",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "curl_slist"
  },
  {
    "label": "curl_sockaddr",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "curl_sockaddr"
  },
  {
    "label": "sockaddr",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "sockaddr"
  },
  {
    "label": "curl_sockaddr",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "curl_sockaddr"
  },
  {
    "label": "existed",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "existed"
  },
  {
    "label": "was",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "was"
  },
  {
    "label": "curl_khtype",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "curl_khtype"
  },
  {
    "label": "curl_khkey",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "curl_khkey"
  },
  {
    "label": "curl_khtype",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "curl_khtype"
  },
  {
    "label": "curl_khstat",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "curl_khstat"
  },
  {
    "label": "curl_khmatch",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "curl_khmatch"
  },
  {
    "label": "curl_khkey",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "curl_khkey"
  },
  {
    "label": "curl_khkey",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "curl_khkey"
  },
  {
    "label": "curl_khmatch",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "curl_khmatch"
  },
  {
    "label": "curl_hstsentry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "curl_hstsentry"
  },
  {
    "label": "curl_index",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "curl_index"
  },
  {
    "label": "curl_hstsentry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "curl_hstsentry"
  },
  {
    "label": "curl_hstsentry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "curl_hstsentry"
  },
  {
    "label": "curl_index",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "curl_index"
  },
  {
    "label": "curl_slist",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "curl_slist"
  },
  {
    "label": "curl_slist",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "curl_slist"
  },
  {
    "label": "curl_httppost",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "curl_httppost"
  },
  {
    "label": "curl_slist",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "curl_slist"
  },
  {
    "label": "name",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "name"
  },
  {
    "label": "CURL_NETRC_OPTION",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "CURL_NETRC_OPTION"
  },
  {
    "label": "CURL_TLSAUTH",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "CURL_TLSAUTH"
  },
  {
    "label": "curl_mime",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "curl_mime"
  },
  {
    "label": "curl_mimepart",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "curl_mimepart"
  },
  {
    "label": "curl_slist",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "curl_slist"
  },
  {
    "label": "curl_forms",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "curl_forms"
  },
  {
    "label": "failed",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "failed"
  },
  {
    "label": "cannot",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "cannot"
  },
  {
    "label": "curl_httppost",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "curl_httppost"
  },
  {
    "label": "curl_httppost",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "curl_httppost"
  },
  {
    "label": "built",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "built"
  },
  {
    "label": "curl_httppost",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "curl_httppost"
  },
  {
    "label": "curl_httppost",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "curl_httppost"
  },
  {
    "label": "curl_slist",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "curl_slist"
  },
  {
    "label": "curl_slist",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "curl_slist"
  },
  {
    "label": "curl_ssl_backend",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "curl_ssl_backend"
  },
  {
    "label": "curl_ssl_backend",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "curl_ssl_backend"
  },
  {
    "label": "curl_slist",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "curl_slist"
  },
  {
    "label": "curl_slist",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "curl_slist"
  },
  {
    "label": "curl_slist",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "curl_slist"
  },
  {
    "label": "curl_certinfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "curl_certinfo"
  },
  {
    "label": "curl_slist",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "curl_slist"
  },
  {
    "label": "curl_tlssessioninfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "curl_tlssessioninfo"
  },
  {
    "label": "the",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "the"
  },
  {
    "label": "ever",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ever"
  },
  {
    "label": "from",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "from"
  },
  {
    "label": "curl_version_info_data",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "curl_version_info_data"
  },
  {
    "label": "curl_version_info_data",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "curl_version_info_data"
  },
  {
    "label": "client()",
    "kind": "Method",
    "detail": "Function (TLS)",
    "insertText": "client(RFC 8422, 5.1)"
  },
  {
    "label": "curl_strequal()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "curl_strequal(const char *s1, const char *s2)"
  },
  {
    "label": "curl_strnequal()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "curl_strnequal(const char *s1, const char *s2, size_t n)"
  },
  {
    "label": "curl_mime_free()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "curl_mime_free(curl_mime *mime)"
  },
  {
    "label": "curl_mime_name()",
    "kind": "Method",
    "detail": "Function (CURLcode)",
    "insertText": "curl_mime_name(curl_mimepart *part, const char *name)"
  },
  {
    "label": "curl_mime_filename()",
    "kind": "Method",
    "detail": "Function (CURLcode)",
    "insertText": "curl_mime_filename(curl_mimepart *part,\n                                        const char *filename)"
  },
  {
    "label": "curl_mime_type()",
    "kind": "Method",
    "detail": "Function (CURLcode)",
    "insertText": "curl_mime_type(curl_mimepart *part, const char *mimetype)"
  },
  {
    "label": "curl_mime_encoder()",
    "kind": "Method",
    "detail": "Function (CURLcode)",
    "insertText": "curl_mime_encoder(curl_mimepart *part,\n                                       const char *encoding)"
  },
  {
    "label": "curl_mime_data()",
    "kind": "Method",
    "detail": "Function (CURLcode)",
    "insertText": "curl_mime_data(curl_mimepart *part,\n                                    const char *data, size_t datasize)"
  },
  {
    "label": "curl_mime_filedata()",
    "kind": "Method",
    "detail": "Function (CURLcode)",
    "insertText": "curl_mime_filedata(curl_mimepart *part,\n                                        const char *filename)"
  },
  {
    "label": "curl_mime_data_cb()",
    "kind": "Method",
    "detail": "Function (CURLcode)",
    "insertText": "curl_mime_data_cb(curl_mimepart *part,\n                                       curl_off_t datasize,\n                                       curl_read_callback readfunc,\n                                       curl_seek_callback seekfunc,\n                                       curl_free_callback freefunc,\n                                       void *arg)"
  },
  {
    "label": "curl_mime_subparts()",
    "kind": "Method",
    "detail": "Function (CURLcode)",
    "insertText": "curl_mime_subparts(curl_mimepart *part,\n                                        curl_mime *subparts)"
  },
  {
    "label": "curl_mime_headers()",
    "kind": "Method",
    "detail": "Function (CURLcode)",
    "insertText": "curl_mime_headers(curl_mimepart *part,\n                                       struct curl_slist *headers,\n                                       int take_ownership)"
  },
  {
    "label": "curl_free()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "curl_free(void *p)"
  },
  {
    "label": "curl_global_init()",
    "kind": "Method",
    "detail": "Function (CURLcode)",
    "insertText": "curl_global_init(long flags)"
  },
  {
    "label": "curl_global_init_mem()",
    "kind": "Method",
    "detail": "Function (CURLcode)",
    "insertText": "curl_global_init_mem(long flags,\n                                          curl_malloc_callback m,\n                                          curl_free_callback f,\n                                          curl_realloc_callback r,\n                                          curl_strdup_callback s,\n                                          curl_calloc_callback c)"
  },
  {
    "label": "curl_global_cleanup()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "curl_global_cleanup(void)"
  },
  {
    "label": "curl_global_trace()",
    "kind": "Method",
    "detail": "Function (CURLcode)",
    "insertText": "curl_global_trace(const char *config)"
  },
  {
    "label": "curl_global_sslset()",
    "kind": "Method",
    "detail": "Function (CURLsslset)",
    "insertText": "curl_global_sslset(curl_sslbackend id, const char *name,\n                                          const curl_ssl_backend ***avail)"
  },
  {
    "label": "curl_slist_free_all()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "curl_slist_free_all(struct curl_slist *list)"
  },
  {
    "label": "curl_getdate()",
    "kind": "Method",
    "detail": "Function (time_t)",
    "insertText": "curl_getdate(const char *p, const time_t *unused)"
  },
  {
    "label": "curl_share_setopt()",
    "kind": "Method",
    "detail": "Function (CURLSHcode)",
    "insertText": "curl_share_setopt(CURLSH *share, CURLSHoption option,\n                                         ...)"
  },
  {
    "label": "curl_share_cleanup()",
    "kind": "Method",
    "detail": "Function (CURLSHcode)",
    "insertText": "curl_share_cleanup(CURLSH *share)"
  },
  {
    "label": "curl_easy_pause()",
    "kind": "Method",
    "detail": "Function (CURLcode)",
    "insertText": "curl_easy_pause(CURL *handle, int bitmask)"
  }
]