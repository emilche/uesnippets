[
  {
    "label": "FQueuedThreadPool",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FQueuedThreadPool"
  },
  {
    "label": "EnumType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "EnumType"
  },
  {
    "label": "EnumType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "EnumType"
  },
  {
    "label": "EnumType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "EnumType"
  },
  {
    "label": "FInstallBundleManagerKeepAwake",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FInstallBundleManagerKeepAwake"
  },
  {
    "label": "FInstallBundleManagerScreenSaverControl",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FInstallBundleManagerScreenSaverControl"
  },
  {
    "label": "FInstallBundleSuppressAnalytics",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInstallBundleSuppressAnalytics"
  },
  {
    "label": "FInstallBundleWork",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FInstallBundleWork"
  },
  {
    "label": "FContentRequestStateStats",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FContentRequestStateStats"
  },
  {
    "label": "FContentRequestStats",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FContentRequestStats"
  },
  {
    "label": "FContentRequestStatsMap",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FContentRequestStatsMap"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FPersistentTimerData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPersistentTimerData"
  },
  {
    "label": "FPersistentStatsBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPersistentStatsBase"
  },
  {
    "label": "FPersistentStatsBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPersistentStatsBase"
  },
  {
    "label": "FBundlePersistentStats",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBundlePersistentStats"
  },
  {
    "label": "FSessionPersistentStats",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSessionPersistentStats"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "FPersistentStatContainerBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPersistentStatContainerBase"
  },
  {
    "label": "IBundleSourceContentRequestSharedContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IBundleSourceContentRequestSharedContext"
  },
  {
    "label": "FContentRequestSharedContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FContentRequestSharedContext"
  },
  {
    "label": "GetAppVersion()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetAppVersion()"
  },
  {
    "label": "HasInternetConnection()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasInternetConnection(ENetworkConnectionType ConnectionType)"
  },
  {
    "label": "GetConfiguredBundleSources()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetConfiguredBundleSources(TArray<FString>& OutSources, TMap<FString, FString>& OutFallbackSources)"
  },
  {
    "label": "HasInstallBundleInConfig()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasInstallBundleInConfig(const FString& BundleName)"
  },
  {
    "label": "AllInstallBundlePredicate()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AllInstallBundlePredicate(const FConfigFile& InstallBundleConfig, const FString& Section)"
  },
  {
    "label": "IsPlatformInstallBundlePredicate()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsPlatformInstallBundlePredicate(const FConfigFile& InstallBundleConfig, const FString& Section)"
  },
  {
    "label": "MatchBundleRegex()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "MatchBundleRegex(\n\t\tconst TArray<TPair<FString, TArray<FRegexPattern>>>& BundleRegexList,\n\t\tconst FString& Path,\n\t\tFString& OutBundleName)"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT(\"\")"
  },
  {
    "label": "IncDisable()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "IncDisable()"
  },
  {
    "label": "DecDisable()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DecDisable()"
  },
  {
    "label": "FInstallBundleSuppressAnalytics()",
    "kind": "Method",
    "detail": "Function (INSTALLBUNDLEMANAGER_API)",
    "insertText": "FInstallBundleSuppressAnalytics()"
  },
  {
    "label": "Enable()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Enable()"
  },
  {
    "label": "Disable()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Disable()"
  },
  {
    "label": "IsEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsEnabled()"
  },
  {
    "label": "FinishInstallBundleAsyncIOTasks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FinishInstallBundleAsyncIOTasks(TArray<TUniquePtr<FInstallBundleTask>>& Tasks)"
  },
  {
    "label": "CleanupInstallBundleAsyncIOTasks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CleanupInstallBundleAsyncIOTasks(TArray<TUniquePtr<FInstallBundleTask>>& Tasks)"
  },
  {
    "label": "StatsBegin()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StatsBegin(FName BundleName)"
  },
  {
    "label": "StatsEnd()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StatsEnd(FName BundleName)"
  },
  {
    "label": "StatsBegin()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StatsBegin(FName BundleName, const TCHAR* State)"
  },
  {
    "label": "StatsEnd()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StatsEnd(FName BundleName, const TCHAR* State, uint64 DataSize = 0)"
  },
  {
    "label": "StatsReset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StatsReset(FName BundleName)"
  },
  {
    "label": "IsTimerReal()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsTimerReal(ETimingStatNames InTimer)"
  },
  {
    "label": "IsTimerFG()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsTimerFG(ETimingStatNames InTimer)"
  },
  {
    "label": "IsTimerBG()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsTimerBG(ETimingStatNames InTimer)"
  },
  {
    "label": "GetAssociatedRealTimerName()",
    "kind": "Method",
    "detail": "Function (ETimingStatNames)",
    "insertText": "GetAssociatedRealTimerName(ETimingStatNames InTimerType)"
  },
  {
    "label": "GetAssociatedFGTimerName()",
    "kind": "Method",
    "detail": "Function (ETimingStatNames)",
    "insertText": "GetAssociatedFGTimerName(ETimingStatNames InTimerType)"
  },
  {
    "label": "GetAssociatedBGTimerName()",
    "kind": "Method",
    "detail": "Function (ETimingStatNames)",
    "insertText": "GetAssociatedBGTimerName(ETimingStatNames InTimerType)"
  },
  {
    "label": "JSON_SERIALIZE()",
    "kind": "Method",
    "detail": "Function (BEGIN_JSON_SERIALIZER)",
    "insertText": "JSON_SERIALIZE(\"LastUpdateTime\", LastUpdateTime)"
  },
  {
    "label": "JSON_SERIALIZE()",
    "kind": "Method",
    "detail": "Function (BEGIN_JSON_SERIALIZER)",
    "insertText": "JSON_SERIALIZE(\"AnalyticsSessionID\", AnalyticsSessionID)"
  },
  {
    "label": "StatsBegin()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StatsBegin(const FString& ExpectedAnalyticsID, bool bForceResetData = false)"
  },
  {
    "label": "StatsEnd()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StatsEnd(bool bStopAllActiveTimers = true)"
  },
  {
    "label": "StartTimingStat()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StartTimingStat(ETimingStatNames StatToUpdate)"
  },
  {
    "label": "StopTimingStat()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StopTimingStat(ETimingStatNames StatToUpdate, bool UpdateTimerOnStop = true)"
  },
  {
    "label": "UpdateTimingStat()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateTimingStat(ETimingStatNames StatToUpdate)"
  },
  {
    "label": "UpdateAllActiveTimers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateAllActiveTimers()"
  },
  {
    "label": "StopAllActiveTimers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StopAllActiveTimers()"
  },
  {
    "label": "IncrementCountStat()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "IncrementCountStat(PersistentStats::ECountStatNames StatToUpdate)"
  },
  {
    "label": "SaveStatsToDisk()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SaveStatsToDisk()"
  },
  {
    "label": "LoadStatsFromDisk()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "LoadStatsFromDisk()"
  },
  {
    "label": "ResetStats()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetStats(const FString& NewAnalyticsSessionID)"
  },
  {
    "label": "OnLoadingDataFromDisk()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnLoadingDataFromDisk()"
  },
  {
    "label": "HandleTimerStatsAfterDataLoad()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleTimerStatsAfterDataLoad()"
  },
  {
    "label": "GetBaseExpectedAnalyticsID()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetBaseExpectedAnalyticsID()"
  },
  {
    "label": "JSON_SERIALIZE()",
    "kind": "Method",
    "detail": "Function (BEGIN_JSON_SERIALIZER)",
    "insertText": "JSON_SERIALIZE(\"BundleName\", BundleName)"
  },
  {
    "label": "JSON_SERIALIZE()",
    "kind": "Method",
    "detail": "Function (BEGIN_JSON_SERIALIZER)",
    "insertText": "JSON_SERIALIZE(\"SessionName\", SessionName)"
  },
  {
    "label": "AddRequiredBundles()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddRequiredBundles(const TArray<FString>& RequiredBundlesToAdd)"
  },
  {
    "label": "AddRequiredBundles()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddRequiredBundles(const TArray<FName>& RequiredBundlesToAdd)"
  },
  {
    "label": "FPersistentStatContainerBase()",
    "kind": "Method",
    "detail": "Function (INSTALLBUNDLEMANAGER_API)",
    "insertText": "FPersistentStatContainerBase()"
  },
  {
    "label": "InitializeBase()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeBase()"
  },
  {
    "label": "ShutdownBase()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ShutdownBase()"
  },
  {
    "label": "StopBundlePersistentStatTracking()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StopBundlePersistentStatTracking(FName BundleName, bool bStopAllActiveTimers = true)"
  },
  {
    "label": "StopSessionPersistentStatTracking()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StopSessionPersistentStatTracking(const FString& SessionName, bool bStopAllActiveTimers = true)"
  },
  {
    "label": "StartBundlePersistentStatTimer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StartBundlePersistentStatTimer(FName BundleName, ETimingStatNames TimerToStart)"
  },
  {
    "label": "StartSessionPersistentStatTimer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StartSessionPersistentStatTimer(const FString& SessionName, ETimingStatNames TimerToStart)"
  },
  {
    "label": "StopBundlePersistentStatTimer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StopBundlePersistentStatTimer(FName BundleName, ETimingStatNames TimerToStop)"
  },
  {
    "label": "StopSessionPersistentStatTimer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StopSessionPersistentStatTimer(const FString& SessionName, ETimingStatNames TimerToStop)"
  },
  {
    "label": "UpdateBundlePersistentStatTimer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateBundlePersistentStatTimer(FName BundleName, ETimingStatNames TimerToUpdate)"
  },
  {
    "label": "UpdateSessionPersistentStatTimer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateSessionPersistentStatTimer(const FString& SessionName, ETimingStatNames TimerToUpdate)"
  },
  {
    "label": "IncrementBundlePersistentCounter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "IncrementBundlePersistentCounter(FName BundleName, ECountStatNames CounterToUpdate)"
  },
  {
    "label": "IncrementSessionPersistentCounter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "IncrementSessionPersistentCounter(const FString& SessionName, ECountStatNames CounterToUpdate)"
  },
  {
    "label": "SaveAllDirtyStatsToDisk()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SaveAllDirtyStatsToDisk()"
  },
  {
    "label": "RemoveSessionStats()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveSessionStats(const FString& SessionName)"
  },
  {
    "label": "RemoveBundleStats()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveBundleStats(FName BundleName)"
  },
  {
    "label": "Tick()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Tick(float dt)"
  },
  {
    "label": "ResetTimerUpdate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetTimerUpdate()"
  },
  {
    "label": "ResetDirtyStatUpdate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetDirtyStatUpdate()"
  },
  {
    "label": "UpdateAllBundlesActiveTimers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateAllBundlesActiveTimers()"
  },
  {
    "label": "UpdateAllSessionActiveTimers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateAllSessionActiveTimers()"
  },
  {
    "label": "OnApp_EnteringBackground()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnApp_EnteringBackground()"
  },
  {
    "label": "OnApp_EnteringForeground()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnApp_EnteringForeground()"
  },
  {
    "label": "OnBackground_HandleBundleStats()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnBackground_HandleBundleStats()"
  },
  {
    "label": "OnForeground_HandleBundleStats()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnForeground_HandleBundleStats()"
  },
  {
    "label": "OnBackground_HandleSessionStats()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnBackground_HandleSessionStats()"
  },
  {
    "label": "OnForeground_HandleSessionStats()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnForeground_HandleSessionStats()"
  },
  {
    "label": "OnTimerStartedForStat()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnTimerStartedForStat(FPersistentStatsBase& BundleStatForTimer, ETimingStatNames TimerStarted)"
  },
  {
    "label": "OnTimerStoppedForStat()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnTimerStoppedForStat(FPersistentStatsBase& BundleStatForTimer, ETimingStatNames TimerStarted)"
  },
  {
    "label": "UpdateStatsForBackground()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateStatsForBackground(FPersistentStatsBase& StatToUpdate)"
  },
  {
    "label": "UpdateStatsForForeground()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateStatsForForeground(FPersistentStatsBase& StatToUpdate)"
  },
  {
    "label": "LoadRequiredBundleDataFromDiskForSession()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LoadRequiredBundleDataFromDiskForSession(const FString& SessionName)"
  }
]