[
  {
    "label": "FTableColumn",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTableColumn"
  },
  {
    "label": "FMemAllocTableColumns",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMemAllocTableColumns"
  },
  {
    "label": "FMemAllocTable",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMemAllocTable"
  },
  {
    "label": "FMemAllocTable()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" Containers / Array . h \" # include \" UObject / NameTypes . h \" # include \" InsightsCore / Table / ViewModels / Table . h \" # include \" Insights / MemoryProfiler / ViewModels / MemoryAlloc . h \" namespace UE::Insights { class FTableColumn ; } namespace UE::Insights::MemoryProfiler { struct FMemAllocTableColumns { const FName StartEventIndexColumnId ; const FName EndEventIndexColumnId ; const FName EventDistanceColumnId ; const FName StartTimeColumnId ; const FName EndTimeColumnId ; const FName DurationColumnId ; const FName AllocThreadColumnId ; const FName FreeThreadColumnId ; const FName AddressColumnId ; const FName MemoryPageColumnId ; const FName CountColumnId ; const FName CompressedSwapSizeColumnId ; const FName SwapSizeColumnId ; const FName SizeColumnId ; const FName LLMSizeColumnId ; const FName LLMDeltaSizeColumnId ; const FName TagColumnId ; const FName AssetColumnId ; const FName PackageColumnId ; const FName ClassNameColumnId ; const FName AllocFunctionColumnId ; const FName AllocSourceFileColumnId ; const FName AllocCallstackIdColumnId ; const FName AllocCallstackSizeColumnId ; const FName FreeFunctionColumnId ; const FName FreeSourceFileColumnId ; const FName FreeCallstackIdColumnId ; const FName FreeCallstackSizeColumnId ; } ; class FMemAllocTable : public FTable { public :)",
    "insertText": "FMemAllocTable()"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "GetAllocs()",
    "kind": "Method",
    "detail": "Function (TArray<FMemoryAlloc>&)",
    "insertText": "GetAllocs()"
  },
  {
    "label": "GetMemAlloc()",
    "kind": "Method",
    "detail": "Function (} const FMemoryAlloc*)",
    "insertText": "GetMemAlloc(int32 InIndex)"
  },
  {
    "label": "GetMemAllocChecked()",
    "kind": "Method",
    "detail": "Function (} const FMemoryAlloc&)",
    "insertText": "GetMemAllocChecked(int32 InIndex)"
  },
  {
    "label": "GetAddressPage()",
    "kind": "Method",
    "detail": "Function (TimeA = InTime ; } uint64)",
    "insertText": "GetAddressPage(uint64 Address)"
  },
  {
    "label": "SetPlatformPageSize()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetPlatformPageSize(uint64 InPlatformPageSize)"
  },
  {
    "label": "GetPlatformPageSize()",
    "kind": "Method",
    "detail": "Function (PlatformPageSize = InPlatformPageSize ; } uint64)",
    "insertText": "GetPlatformPageSize()"
  }
]