[
  {
    "label": "IterationController",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IterationController"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (# include \" . . / . . / . . / . . / Eigen / src / Core / util / NonMPL2 . h \" # ifndef EIGEN_ITERATION_CONTROLLER_H # define EIGEN_ITERATION_CONTROLLER_H namespace Eigen { class IterationController { protected : double m_rhsn ; size_t m_maxiter ; int m_noise ; double m_resmax ; double m_resminreach,m_resadd ; size_t m_nit ; double m_res ; bool m_written ;)",
    "insertText": "void(*m_callback)(const IterationController&)"
  },
  {
    "label": "init()",
    "kind": "Method",
    "detail": "Function (public : void)",
    "insertText": "init()"
  },
  {
    "label": "IterationController()",
    "kind": "Method",
    "detail": "Function (m_nit = 0 ; m_res = 0 . 0 ; m_written = false ; m_resminreach = 1 E50 ; m_resadd = 0 . 0 ; m_callback = 0 ; })",
    "insertText": "IterationController(double r = 1.0E-8, int noi = 0, size_t mit = size_t(-1)) : m_rhsn(1.0), m_maxiter(mit), m_noise(noi), m_resmax(r)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "operator(int)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (m_nit + + ; m_written = false ; m_resadd + = m_res ; } void)",
    "insertText": "operator()"
  },
  {
    "label": "first()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "first()"
  },
  {
    "label": "reduceNoiseLevel()",
    "kind": "Method",
    "detail": "Function (m_noise = n ; } void)",
    "insertText": "reduceNoiseLevel()"
  },
  {
    "label": "maxResidual()",
    "kind": "Method",
    "detail": "Function (} double)",
    "insertText": "maxResidual()"
  },
  {
    "label": "residual()",
    "kind": "Method",
    "detail": "Function (m_resmax = r ; } double)",
    "insertText": "residual()"
  },
  {
    "label": "iteration()",
    "kind": "Method",
    "detail": "Function (m_callback = t ; } size_t)",
    "insertText": "iteration()"
  },
  {
    "label": "maxIterarions()",
    "kind": "Method",
    "detail": "Function (m_nit = i ; } size_t)",
    "insertText": "maxIterarions()"
  },
  {
    "label": "rhsNorm()",
    "kind": "Method",
    "detail": "Function (m_maxiter = i ; } double)",
    "insertText": "rhsNorm()"
  },
  {
    "label": "converged()",
    "kind": "Method",
    "detail": "Function (m_rhsn = r ; } bool)",
    "insertText": "converged()"
  },
  {
    "label": "abs()",
    "kind": "Method",
    "detail": "Function (using std::abs ; m_res =)",
    "insertText": "abs(nr)"
  },
  {
    "label": "m_resminreach()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "m_resminreach(std::min)(m_resminreach, m_res)"
  },
  {
    "label": "converged()",
    "kind": "Method",
    "detail": "Function (} template<VectorType> bool)",
    "insertText": "converged(const VectorType &v)"
  },
  {
    "label": "finished()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "finished(double nr)"
  },
  {
    "label": "converged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "converged(nr)"
  },
  {
    "label": "return()",
    "kind": "Method",
    "detail": "Function (m_written = true ; })",
    "insertText": "return(m_nit >= m_maxiter || converged(nr))"
  },
  {
    "label": "finished()",
    "kind": "Method",
    "detail": "Function (} template<VectorType> bool)",
    "insertText": "finished(const MatrixBase<VectorType> &v)"
  }
]