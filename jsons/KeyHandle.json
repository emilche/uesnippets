[
  {
    "label": "FKeyHandle",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FKeyHandle"
  },
  {
    "label": "FKeyHandleMap",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FKeyHandleMap"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "is"
  },
  {
    "label": "TStructOpsTypeTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TStructOpsTypeTraits"
  },
  {
    "label": "FKeyHandleLookupTable",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FKeyHandleLookupTable"
  },
  {
    "label": "TStructOpsTypeTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TStructOpsTypeTraits"
  },
  {
    "label": "FKeyHandle()",
    "kind": "Method",
    "detail": "Function (ENGINE_API)",
    "insertText": "FKeyHandle()"
  },
  {
    "label": "Invalid()",
    "kind": "Method",
    "detail": "Function (FKeyHandle)",
    "insertText": "Invalid()"
  },
  {
    "label": "GetTypeHash()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetTypeHash(Handle.Index)"
  },
  {
    "label": "FKeyHandle()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "FKeyHandle(uint32 SpecificIndex)"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Initialize(TArrayView<const FKeyHandle> InKeyHandles)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Add( const FKeyHandle& InHandle, int32 InIndex )"
  },
  {
    "label": "Empty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Empty(int32 ExpectedNumElements = 0)"
  },
  {
    "label": "Remove()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Remove( const FKeyHandle& InHandle )"
  },
  {
    "label": "Reserve()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reserve(int32 NumElements)"
  },
  {
    "label": "SetKeyHandles()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetKeyHandles(int32 Num)"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Serialize(FArchive& Ar)"
  },
  {
    "label": "EnsureAllIndicesHaveHandles()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnsureAllIndicesHaveHandles(int32 NumIndices)"
  },
  {
    "label": "EnsureIndexHasAHandle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnsureIndexHasAHandle(int32 KeyIndex)"
  },
  {
    "label": "GetIndex()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetIndex(FKeyHandle KeyHandle)"
  },
  {
    "label": "FindOrAddKeyHandle()",
    "kind": "Method",
    "detail": "Function (FKeyHandle)",
    "insertText": "FindOrAddKeyHandle(int32 Index)"
  },
  {
    "label": "MoveHandle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MoveHandle(int32 OldIndex, int32 NewIndex)"
  },
  {
    "label": "AllocateHandle()",
    "kind": "Method",
    "detail": "Function (FKeyHandle)",
    "insertText": "AllocateHandle(int32 Index)"
  },
  {
    "label": "DeallocateHandle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeallocateHandle(int32 Index)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Serialize(FArchive& Ar)"
  },
  {
    "label": "RelocateKeyHandles()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RelocateKeyHandles(int32 StartAtIndex, int32 DeltaIndex)"
  }
]