[
  {
    "label": "ITableRow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITableRow"
  },
  {
    "label": "SSearchBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SSearchBox"
  },
  {
    "label": "STableViewBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "STableViewBase"
  },
  {
    "label": "STreeView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "STreeView"
  },
  {
    "label": "TreeFilterHandler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TreeFilterHandler"
  },
  {
    "label": "TTextFilter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TTextFilter"
  },
  {
    "label": "IFieldIterator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IFieldIterator"
  },
  {
    "label": "IFieldExpander",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IFieldExpander"
  },
  {
    "label": "SFieldName",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SFieldName"
  },
  {
    "label": "FContainer",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FContainer"
  },
  {
    "label": "FTreeNode",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTreeNode"
  },
  {
    "label": "FNodeReference",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FNodeReference"
  },
  {
    "label": "FPropertyViewerImpl",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPropertyViewerImpl"
  },
  {
    "label": "MakeContainer()",
    "kind": "Method",
    "detail": "Function (TSharedRef<FTreeNode>)",
    "insertText": "MakeContainer(const TSharedPtr<FContainer>& InContainer, TOptional<FText> InDisplayName)"
  },
  {
    "label": "MakeField()",
    "kind": "Method",
    "detail": "Function (TSharedRef<FTreeNode>)",
    "insertText": "MakeField(TSharedPtr<FTreeNode> InParent, const FProperty* Property, TOptional<FText> InDisplayName)"
  },
  {
    "label": "MakeField()",
    "kind": "Method",
    "detail": "Function (TSharedRef<FTreeNode>)",
    "insertText": "MakeField(TSharedPtr<FTreeNode> InParent, const UFunction* Function, TOptional<FText> InDisplayName)"
  },
  {
    "label": "BuildChildNodes()",
    "kind": "Method",
    "detail": "Function (TArray<FNodeReference>)",
    "insertText": "BuildChildNodes(IFieldIterator& FieldIterator, IFieldExpander& FieldExpander, bool bSortChildNode)"
  },
  {
    "label": "BuildChildNodesRecursive()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildChildNodesRecursive(IFieldIterator& FieldIterator, IFieldExpander& FieldExpander, bool bSortChildNode, int32 RecursiveCount, TArray<FNodeReference>& OutTickReference)"
  },
  {
    "label": "Sort()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Sort(const TSharedPtr<FTreeNode>& NodeA, const TSharedPtr<FTreeNode>& NodeB)"
  },
  {
    "label": "FPropertyViewerImpl()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FPropertyViewerImpl(const SPropertyViewer::FArguments& InArgs)"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "Construct(const SPropertyViewer::FArguments& InArgs)"
  },
  {
    "label": "Tick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Tick()"
  },
  {
    "label": "AddContainer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddContainer(SPropertyViewer::FHandle Identifier, TOptional<FText> DisplayName, const UStruct* Struct)"
  },
  {
    "label": "AddContainerInstance()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddContainerInstance(SPropertyViewer::FHandle Identifier, TOptional<FText> DisplayName, UObject* Object)"
  },
  {
    "label": "AddContainerInstance()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddContainerInstance(SPropertyViewer::FHandle Identifier, TOptional<FText> DisplayName, const UScriptStruct* Struct, void* Data)"
  },
  {
    "label": "Remove()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Remove(SPropertyViewer::FHandle Identifier)"
  },
  {
    "label": "RemoveAll()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveAll()"
  },
  {
    "label": "SetRawFilterText()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRawFilterText(const FText& InFilterText)"
  },
  {
    "label": "SetSelection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSelection(SPropertyViewer::FHandle Identifier, TArrayView<const FFieldVariant> FieldPath)"
  },
  {
    "label": "AddContainerInternal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddContainerInternal(SPropertyViewer::FHandle Identifier, TSharedPtr<FContainer>& NewContainer)"
  },
  {
    "label": "CreateSearch()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "CreateSearch()"
  },
  {
    "label": "CreateTree()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "CreateTree(bool bHasPreWidget, bool bShowPropertyValue, bool bHasPostWidget, ESelectionMode::Type SelectionMode)"
  },
  {
    "label": "HandleSearchChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleSearchChanged(const FText& InFilterText)"
  },
  {
    "label": "SetRawFilterTextInternal()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "SetRawFilterTextInternal(const FText& InFilterText)"
  },
  {
    "label": "SetHighlightTextRecursive()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetHighlightTextRecursive(const TSharedPtr<FTreeNode>& OwnerNode, const FText& HighlightText)"
  },
  {
    "label": "HandleGetFilterStrings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleGetFilterStrings(TSharedPtr<FTreeNode> Item, TArray<FString>& OutStrings)"
  },
  {
    "label": "HandleGenerateRow()",
    "kind": "Method",
    "detail": "Function (TSharedRef<ITableRow>)",
    "insertText": "HandleGenerateRow(TSharedPtr<FTreeNode> Item, const TSharedRef<STableViewBase>& OwnerTable)"
  },
  {
    "label": "HandleGetChildren()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleGetChildren(TSharedPtr<FTreeNode> InParent, TArray<TSharedPtr<FTreeNode>>& OutChildren)"
  },
  {
    "label": "HandleContextMenuOpening()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<SWidget>)",
    "insertText": "HandleContextMenuOpening()"
  },
  {
    "label": "HandleSelectionChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleSelectionChanged(TSharedPtr<FTreeNode> Item, ESelectInfo::Type SelectionType)"
  },
  {
    "label": "HandleDoubleClick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleDoubleClick(TSharedPtr<FTreeNode> Item)"
  },
  {
    "label": "HandleDragDetected()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "HandleDragDetected(const FGeometry& MyGeometry, const FPointerEvent& MouseEvent, const TSharedPtr<FTreeNode> Item)"
  },
  {
    "label": "HandleBlueprintCompiled()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleBlueprintCompiled()"
  },
  {
    "label": "HandleReplaceViewedObjects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleReplaceViewedObjects(const TMap<UObject*, UObject*>& OldToNewObjectMap)"
  }
]