[
  {
    "label": "EsslShaderGenerator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "EsslShaderGenerator"
  },
  {
    "label": "MX_GENGLSL_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MX_GENGLSL_API"
  },
  {
    "label": "EsslShaderGenerator()",
    "kind": "Method",
    "detail": "Function (# ifndef MATERIALX_ESSLSHADERGENERATOR_H # define MATERIALX_ESSLSHADERGENERATOR_H # include<MaterialXGenGlsl / GlslShaderGenerator . h> MATERIALX_NAMESPACE_BEGIN using EsslShaderGeneratorPtr = shared_ptr<class EsslShaderGenerator> ; class EsslShaderGenerator : public GlslShaderGenerator { public :)",
    "insertText": "EsslShaderGenerator()"
  },
  {
    "label": "create()",
    "kind": "Method",
    "detail": "Function (ShaderGeneratorPtr)",
    "insertText": "create()"
  },
  {
    "label": "getTarget()",
    "kind": "Method",
    "detail": "Function (} const string&)",
    "insertText": "getTarget()"
  },
  {
    "label": "emitDirectives()",
    "kind": "Method",
    "detail": "Function (const string TARGET ; const string VERSION ; protected : void)",
    "insertText": "emitDirectives(GenContext& context, ShaderStage& stage)"
  },
  {
    "label": "emitUniforms()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "emitUniforms(GenContext& context, ShaderStage& stage)"
  },
  {
    "label": "emitInputs()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "emitInputs(GenContext& context, ShaderStage& stage)"
  },
  {
    "label": "emitOutputs()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "emitOutputs(GenContext& context, ShaderStage& stage)"
  },
  {
    "label": "getResourceBindingContext()",
    "kind": "Method",
    "detail": "Function (HwResourceBindingContextPtr)",
    "insertText": "getResourceBindingContext(GenContext& context)"
  }
]