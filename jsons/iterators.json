[
  {
    "label": "counting_iterator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "counting_iterator"
  },
  {
    "label": "tuple_util",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "tuple_util"
  },
  {
    "label": "tuple_util",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "tuple_util"
  },
  {
    "label": "make_references",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "make_references"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "tuplewrapper",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "tuplewrapper"
  },
  {
    "label": "zip_iterator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "zip_iterator"
  },
  {
    "label": "transform_iterator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "transform_iterator"
  },
  {
    "label": "it()",
    "kind": "Method",
    "detail": "Function (counting_iterator)",
    "insertText": "it(*this)"
  },
  {
    "label": "it()",
    "kind": "Method",
    "detail": "Function (counting_iterator)",
    "insertText": "it(*this)"
  },
  {
    "label": "counting_iterator()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "counting_iterator(my_counter - backward)"
  },
  {
    "label": "counting_iterator()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "counting_iterator(my_counter + forward)"
  },
  {
    "label": "base_type()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "base_type(*this)"
  },
  {
    "label": "swap()",
    "kind": "Method",
    "detail": "Function (tuples:)",
    "insertText": "swap(*it1,*it2)"
  },
  {
    "label": "it()",
    "kind": "Method",
    "detail": "Function (zip_iterator)",
    "insertText": "it(*this)"
  },
  {
    "label": "it()",
    "kind": "Method",
    "detail": "Function (zip_iterator)",
    "insertText": "it(*this)"
  },
  {
    "label": "it()",
    "kind": "Method",
    "detail": "Function (zip_iterator)",
    "insertText": "it(*this)"
  },
  {
    "label": "it()",
    "kind": "Method",
    "detail": "Function (zip_iterator)",
    "insertText": "it(*this)"
  },
  {
    "label": "my_unary_func()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "my_unary_func(*my_it)"
  },
  {
    "label": "it()",
    "kind": "Method",
    "detail": "Function (transform_iterator)",
    "insertText": "it(*this)"
  },
  {
    "label": "it()",
    "kind": "Method",
    "detail": "Function (transform_iterator)",
    "insertText": "it(*this)"
  }
]