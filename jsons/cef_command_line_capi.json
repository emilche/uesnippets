[
  {
    "label": "_cef_command_line_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_command_line_t"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (# ifndef CEF_INCLUDE_CAPI_CEF_COMMAND_LINE_CAPI_H_ # define CEF_INCLUDE_CAPI_CEF_COMMAND_LINE_CAPI_H_ # pragma once # include \" include / capi / cef_base_capi . h \" # ifdef __cplusplus \" C \" { # endif typedef struct _cef_command_line_t { cef_base_ref_counted_t base ;)",
    "insertText": "int(CEF_CALLBACK* is_valid)(struct _cef_command_line_t* self)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(CEF_CALLBACK* is_read_only)(struct _cef_command_line_t* self)"
  },
  {
    "label": "_cef_command_line_t()",
    "kind": "Method",
    "detail": "Function (struct)",
    "insertText": "_cef_command_line_t(CEF_CALLBACK* copy)( struct _cef_command_line_t* self)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(CEF_CALLBACK* init_from_argv)(struct _cef_command_line_t* self, int argc, const char* const* argv)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(CEF_CALLBACK* init_from_string)(struct _cef_command_line_t* self, const cef_string_t* command_line)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(CEF_CALLBACK* reset)(struct _cef_command_line_t* self)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(CEF_CALLBACK* get_argv)(struct _cef_command_line_t* self, cef_string_list_t argv)"
  },
  {
    "label": "cef_string_userfree_t()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "cef_string_userfree_t(CEF_CALLBACK* get_command_line_string)( struct _cef_command_line_t* self)"
  },
  {
    "label": "cef_string_userfree_t()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "cef_string_userfree_t(CEF_CALLBACK* get_program)( struct _cef_command_line_t* self)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(CEF_CALLBACK* set_program)(struct _cef_command_line_t* self, const cef_string_t* program)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(CEF_CALLBACK* has_switches)(struct _cef_command_line_t* self)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(CEF_CALLBACK* has_switch)(struct _cef_command_line_t* self, const cef_string_t* name)"
  },
  {
    "label": "cef_string_userfree_t()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "cef_string_userfree_t(CEF_CALLBACK* get_switch_value)( struct _cef_command_line_t* self, const cef_string_t* name)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(CEF_CALLBACK* get_switches)(struct _cef_command_line_t* self, cef_string_map_t switches)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(CEF_CALLBACK* append_switch)(struct _cef_command_line_t* self, const cef_string_t* name)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(CEF_CALLBACK* append_switch_with_value)(struct _cef_command_line_t* self, const cef_string_t* name, const cef_string_t* value)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(CEF_CALLBACK* has_arguments)(struct _cef_command_line_t* self)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(CEF_CALLBACK* get_arguments)(struct _cef_command_line_t* self, cef_string_list_t arguments)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(CEF_CALLBACK* append_argument)(struct _cef_command_line_t* self, const cef_string_t* argument)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(CEF_CALLBACK* prepend_wrapper)(struct _cef_command_line_t* self, const cef_string_t* wrapper)"
  },
  {
    "label": "cef_command_line_create()",
    "kind": "Method",
    "detail": "Function (} cef_command_line_t ; CEF_EXPORT cef_command_line_t*)",
    "insertText": "cef_command_line_create()"
  },
  {
    "label": "cef_command_line_get_global()",
    "kind": "Method",
    "detail": "Function (CEF_EXPORT cef_command_line_t*)",
    "insertText": "cef_command_line_get_global()"
  }
]