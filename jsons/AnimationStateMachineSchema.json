[
  {
    "label": "FMenuBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMenuBuilder"
  },
  {
    "label": "UEdGraph",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEdGraph"
  },
  {
    "label": "ANIMGRAPH_API",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ANIMGRAPH_API"
  },
  {
    "label": "UAnimationStateMachineSchema",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimationStateMachineSchema"
  },
  {
    "label": "UToolMenu",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UToolMenu"
  },
  {
    "label": "UGraphNodeContextMenuContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UGraphNodeContextMenuContext"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" AssetRegistry / AssetData . h \" # include \" EdGraph / EdGraphSchema . h \" # include \" AnimationStateMachineSchema . generated . h \" class FMenuBuilder ; class UEdGraph ;)",
    "insertText": "USTRUCT()"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY()"
  },
  {
    "label": "FEdGraphSchemaAction_NewStateNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FEdGraphSchemaAction_NewStateNode() : FEdGraphSchemaAction() , NodeTemplate(nullptr)"
  },
  {
    "label": "FEdGraphSchemaAction_NewStateNode()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FEdGraphSchemaAction_NewStateNode(FText InNodeCategory, FText InMenuDesc, FText InToolTip, const int32 InGrouping) : FEdGraphSchemaAction(MoveTemp(InNodeCategory), MoveTemp(InMenuDesc), MoveTemp(InToolTip), InGrouping) , NodeTemplate(nullptr)"
  },
  {
    "label": "PerformAction()",
    "kind": "Method",
    "detail": "Function (} UEdGraphNode*)",
    "insertText": "PerformAction(class UEdGraph* ParentGraph, UEdGraphPin* FromPin, const FVector2D Location, bool bSelectNewNode = true)"
  },
  {
    "label": "AddReferencedObjects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddReferencedObjects(FReferenceCollector& Collector)"
  },
  {
    "label": "SpawnNodeFromTemplate()",
    "kind": "Method",
    "detail": "Function (template<NodeType> NodeType*)",
    "insertText": "SpawnNodeFromTemplate(class UEdGraph* ParentGraph, NodeType* InTemplateNode, const FVector2D Location = FVector2D(0.0f, 0.0f), bool bSelectNewNode = true)"
  },
  {
    "label": "NodeType()",
    "kind": "Method",
    "detail": "Function (FEdGraphSchemaAction_NewStateNode Action ; Action . NodeTemplate = InTemplateNode ; return Cast<)",
    "insertText": "NodeType(Action.PerformAction(ParentGraph, NULL, Location, bSelectNewNode))"
  },
  {
    "label": "FEdGraphSchemaAction_NewStateComment()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FEdGraphSchemaAction_NewStateComment() : FEdGraphSchemaAction()"
  },
  {
    "label": "FEdGraphSchemaAction_NewStateComment()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FEdGraphSchemaAction_NewStateComment(FText InNodeCategory, FText InMenuDesc, FText InToolTip, const int32 InGrouping) : FEdGraphSchemaAction(MoveTemp(InNodeCategory), MoveTemp(InMenuDesc), MoveTemp(InToolTip), InGrouping)"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "UCLASS(MinimalAPI)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY()"
  },
  {
    "label": "CreateDefaultNodesForGraph()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateDefaultNodesForGraph(UEdGraph& Graph)"
  },
  {
    "label": "CanCreateConnection()",
    "kind": "Method",
    "detail": "Function (const FPinConnectionResponse)",
    "insertText": "CanCreateConnection(const UEdGraphPin* A, const UEdGraphPin* B)"
  },
  {
    "label": "TryCreateConnection()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TryCreateConnection(UEdGraphPin* A, UEdGraphPin* B)"
  },
  {
    "label": "CreateAutomaticConversionNodeAndConnections()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CreateAutomaticConversionNodeAndConnections(UEdGraphPin* PinA, UEdGraphPin* PinB)"
  },
  {
    "label": "TryRelinkConnectionTarget()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TryRelinkConnectionTarget(UEdGraphPin* SourcePin, UEdGraphPin* OldTargetPin, UEdGraphPin* NewTargetPin, const TArray<UEdGraphNode*>& InSelectedGraphNodes)"
  },
  {
    "label": "IsConnectionRelinkingAllowed()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsConnectionRelinkingAllowed(UEdGraphPin* InPin)"
  },
  {
    "label": "CanRelinkConnectionToPin()",
    "kind": "Method",
    "detail": "Function (const FPinConnectionResponse)",
    "insertText": "CanRelinkConnectionToPin(const UEdGraphPin* OldSourcePin, const UEdGraphPin* TargetPinCandidate)"
  },
  {
    "label": "GetGraphContextActions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetGraphContextActions(FGraphContextMenuBuilder& ContextMenuBuilder)"
  },
  {
    "label": "GetGraphType()",
    "kind": "Method",
    "detail": "Function (EGraphType)",
    "insertText": "GetGraphType(const UEdGraph* TestEdGraph)"
  },
  {
    "label": "GetContextMenuActions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetContextMenuActions(class UToolMenu* Menu, class UGraphNodeContextMenuContext* Context)"
  },
  {
    "label": "GetPinTypeColor()",
    "kind": "Method",
    "detail": "Function (FLinearColor)",
    "insertText": "GetPinTypeColor(const FEdGraphPinType& PinType)"
  },
  {
    "label": "GetGraphDisplayInformation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetGraphDisplayInformation(const UEdGraph& Graph, FGraphDisplayInfo& DisplayInfo)"
  },
  {
    "label": "DroppedAssetsOnGraph()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DroppedAssetsOnGraph(const TArray<FAssetData>& Assets, const FVector2D& GraphPosition, UEdGraph* Graph)"
  },
  {
    "label": "DroppedAssetsOnNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DroppedAssetsOnNode(const TArray<FAssetData>& Assets, const FVector2D& GraphPosition, UEdGraphNode* Node)"
  },
  {
    "label": "DroppedAssetsOnPin()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DroppedAssetsOnPin(const TArray<FAssetData>& Assets, const FVector2D& GraphPosition, UEdGraphPin* Pin)"
  },
  {
    "label": "GetAssetsNodeHoverMessage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetAssetsNodeHoverMessage(const TArray<FAssetData>& Assets, const UEdGraphNode* HoverNode, FString& OutTooltipText, bool& OutOkIcon)"
  },
  {
    "label": "GetAssetsPinHoverMessage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetAssetsPinHoverMessage(const TArray<FAssetData>& Assets, const UEdGraphPin* HoverPin, FString& OutTooltipText, bool& OutOkIcon)"
  },
  {
    "label": "BreakNodeLinks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BreakNodeLinks(UEdGraphNode& TargetNode)"
  },
  {
    "label": "BreakPinLinks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BreakPinLinks(UEdGraphPin& TargetPin, bool bSendsNodeNotification)"
  },
  {
    "label": "BreakSinglePinLink()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BreakSinglePinLink(UEdGraphPin* SourcePin, UEdGraphPin* TargetPin)"
  }
]