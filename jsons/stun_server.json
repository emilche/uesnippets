[
  {
    "label": "StunServer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "StunServer"
  },
  {
    "label": "StunServer()",
    "kind": "Method",
    "detail": "Function (# ifndef P2P_BASE_STUN_SERVER_H_ # define P2P_BASE_STUN_SERVER_H_ # include<stddef . h> # include<stdint . h> # include<memory> # include \" absl / strings / string_view . h \" # include \" api / transport / stun . h \" # include \" rtc_base / async_packet_socket . h \" # include \" rtc_base / async_udp_socket . h \" # include \" rtc_base / socket_address . h \" # include \" rtc_base / third_party / sigslot / sigslot . h \" namespace cricket { const int STUN_SERVER_PORT = 3 4 7 8 ; class StunServer : public sigslot::has_slots<> { public :)",
    "insertText": "StunServer(rtc::AsyncUDPSocket* socket)"
  },
  {
    "label": "StunServer()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "StunServer()"
  },
  {
    "label": "OnPacket()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "OnPacket(rtc::AsyncPacketSocket* socket, const char* buf, size_t size, const rtc::SocketAddress& remote_addr, const int64_t& packet_time_us)"
  },
  {
    "label": "OnBindingRequest()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnBindingRequest(StunMessage* msg, const rtc::SocketAddress& addr)"
  },
  {
    "label": "OnAllocateRequest()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAllocateRequest(StunMessage* msg, const rtc::SocketAddress& addr)"
  },
  {
    "label": "OnSharedSecretRequest()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSharedSecretRequest(StunMessage* msg, const rtc::SocketAddress& addr)"
  },
  {
    "label": "OnSendRequest()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSendRequest(StunMessage* msg, const rtc::SocketAddress& addr)"
  },
  {
    "label": "SendErrorResponse()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SendErrorResponse(const StunMessage& msg, const rtc::SocketAddress& addr, int error_code, absl::string_view error_desc)"
  },
  {
    "label": "SendResponse()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SendResponse(const StunMessage& msg, const rtc::SocketAddress& addr)"
  },
  {
    "label": "GetStunBindResponse()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetStunBindResponse(StunMessage* message, const rtc::SocketAddress& remote_addr, StunMessage* response)"
  }
]