[
  {
    "label": "CefWaitableEvent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CefWaitableEvent"
  },
  {
    "label": "CreateWaitableEvent()",
    "kind": "Method",
    "detail": "Function (# ifndef CEF_INCLUDE_CEF_WAITABLE_EVENT_H_ # define CEF_INCLUDE_CEF_WAITABLE_EVENT_H_ # pragma once # include \" include / cef_base . h \" class CefWaitableEvent : public CefBaseRefCounted { public : CefRefPtr<CefWaitableEvent>)",
    "insertText": "CreateWaitableEvent(bool automatic_reset, bool initially_signaled)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "Signal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Signal()"
  },
  {
    "label": "IsSignaled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsSignaled()"
  },
  {
    "label": "Wait()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Wait()"
  },
  {
    "label": "TimedWait()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TimedWait(int64 max_ms)"
  }
]