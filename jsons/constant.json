[
  {
    "label": "APInt",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "APInt"
  },
  {
    "label": "SmallVectorImpl",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SmallVectorImpl"
  },
  {
    "label": "Constant",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Constant"
  },
  {
    "label": "PossibleRelocationsTy",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "PossibleRelocationsTy"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (# ifndef LLVM_IR_CONSTANT_H # define LLVM_IR_CONSTANT_H # include \" llvm / IR / User . h \" namespace llvm { class APInt ; template<T> class SmallVectorImpl ; class Constant : public User { void)",
    "insertText": "operator(const Constant &)"
  },
  {
    "label": "Constant()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Constant(const Constant &)"
  },
  {
    "label": "anchor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "anchor()"
  },
  {
    "label": "Constant()",
    "kind": "Method",
    "detail": "Function (protected :)",
    "insertText": "Constant(Type *ty, ValueTy vty, Use *Ops, unsigned NumOps) : User(ty, vty, Ops, NumOps)"
  },
  {
    "label": "isNullValue()",
    "kind": "Method",
    "detail": "Function (} public : bool)",
    "insertText": "isNullValue()"
  },
  {
    "label": "isOneValue()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "isOneValue()"
  },
  {
    "label": "isAllOnesValue()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "isAllOnesValue()"
  },
  {
    "label": "isNegativeZeroValue()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "isNegativeZeroValue()"
  },
  {
    "label": "isZeroValue()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "isZeroValue()"
  },
  {
    "label": "isNotMinSignedValue()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "isNotMinSignedValue()"
  },
  {
    "label": "isMinSignedValue()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "isMinSignedValue()"
  },
  {
    "label": "canTrap()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "canTrap()"
  },
  {
    "label": "isThreadDependent()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "isThreadDependent()"
  },
  {
    "label": "isDLLImportDependent()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "isDLLImportDependent()"
  },
  {
    "label": "isConstantUsed()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "isConstantUsed()"
  },
  {
    "label": "getRelocationInfo()",
    "kind": "Method",
    "detail": "Function (enum PossibleRelocationsTy { NoRelocation = 0,LocalRelocation = 1,GlobalRelocations = 2 } ; PossibleRelocationsTy)",
    "insertText": "getRelocationInfo()"
  },
  {
    "label": "getAggregateElement()",
    "kind": "Method",
    "detail": "Function (Constant*)",
    "insertText": "getAggregateElement(unsigned Elt)"
  },
  {
    "label": "getAggregateElement()",
    "kind": "Method",
    "detail": "Function (Constant*)",
    "insertText": "getAggregateElement(Constant *Elt)"
  },
  {
    "label": "getSplatValue()",
    "kind": "Method",
    "detail": "Function (Constant*)",
    "insertText": "getSplatValue()"
  },
  {
    "label": "getUniqueInteger()",
    "kind": "Method",
    "detail": "Function (const APInt&)",
    "insertText": "getUniqueInteger()"
  },
  {
    "label": "destroyConstant()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "destroyConstant()"
  },
  {
    "label": "classof()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "classof(const Value *V)"
  },
  {
    "label": "handleOperandChange()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "handleOperandChange(Value *, Value *, Use *)"
  },
  {
    "label": "getNullValue()",
    "kind": "Method",
    "detail": "Function (Constant*)",
    "insertText": "getNullValue(Type* Ty)"
  },
  {
    "label": "getAllOnesValue()",
    "kind": "Method",
    "detail": "Function (Constant*)",
    "insertText": "getAllOnesValue(Type* Ty)"
  },
  {
    "label": "getIntegerValue()",
    "kind": "Method",
    "detail": "Function (Constant*)",
    "insertText": "getIntegerValue(Type* Ty, const APInt &V)"
  },
  {
    "label": "removeDeadConstantUsers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "removeDeadConstantUsers()"
  },
  {
    "label": "stripPointerCasts()",
    "kind": "Method",
    "detail": "Function (Constant*)",
    "insertText": "stripPointerCasts()"
  }
]