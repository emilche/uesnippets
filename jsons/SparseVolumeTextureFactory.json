[
  {
    "label": "FOpenVDBPreviewData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FOpenVDBPreviewData"
  },
  {
    "label": "USparseVolumeTextureFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USparseVolumeTextureFactory"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # if WITH_EDITOR # include \" CoreMinimal . h \" # include \" Factories / Factory . h \" # include \" EditorReimportHandler . h \" # include \" SparseVolumeTextureFactory . generated . h \" struct FOpenVDBPreviewData ;)",
    "insertText": "UCLASS(hidecategories = Object, MinimalAPI)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() public: virtual bool ShouldShowInNewMenu()"
  },
  {
    "label": "GetDisplayName()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetDisplayName()"
  },
  {
    "label": "ConfigureProperties()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ConfigureProperties()"
  },
  {
    "label": "FactoryCreateNew()",
    "kind": "Method",
    "detail": "Function (UObject*)",
    "insertText": "FactoryCreateNew(UClass* InClass, UObject* InParent, FName InName, EObjectFlags Flags, UObject* Context, FFeedbackContext* Warn)"
  },
  {
    "label": "CanCreateNew()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanCreateNew()"
  },
  {
    "label": "FactoryCreateFile()",
    "kind": "Method",
    "detail": "Function (UObject*)",
    "insertText": "FactoryCreateFile(UClass* InClass, UObject* InParent, FName InName, EObjectFlags Flags, const FString& Filename, const TCHAR* Parms, FFeedbackContext* Warn, bool& bOutOperationCanceled)"
  },
  {
    "label": "CleanUp()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CleanUp()"
  },
  {
    "label": "FactoryCanImport()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "FactoryCanImport(const FString& Filename)"
  },
  {
    "label": "DoesSupportClass()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DoesSupportClass(UClass* Class)"
  },
  {
    "label": "ResolveSupportedClass()",
    "kind": "Method",
    "detail": "Function (UClass*)",
    "insertText": "ResolveSupportedClass()"
  },
  {
    "label": "CanReimport()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanReimport(UObject* Obj, TArray<FString>& OutFilenames)"
  },
  {
    "label": "SetReimportPaths()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetReimportPaths(UObject* Obj, const TArray<FString>& NewReimportPaths)"
  },
  {
    "label": "Reimport()",
    "kind": "Method",
    "detail": "Function (EReimportResult::Type)",
    "insertText": "Reimport(UObject* Obj)"
  },
  {
    "label": "ImportInternal()",
    "kind": "Method",
    "detail": "Function (protected : private : UObject*)",
    "insertText": "ImportInternal(UClass* InClass, UObject* InParent, FName InName, EObjectFlags Flags, const FString& Filename, const TCHAR* Parms, bool& bOutOperationCanceled, bool bIsReimport)"
  },
  {
    "label": "LoadOpenVDBPreviewData()",
    "kind": "Method",
    "detail": "Function (} ; bool)",
    "insertText": "LoadOpenVDBPreviewData(const FString& Filename, FOpenVDBPreviewData* OutPreviewData)"
  }
]