[
  {
    "label": "ICompoundProperty",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ICompoundProperty"
  },
  {
    "label": "ALEMBIC_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ALEMBIC_EXPORT"
  },
  {
    "label": "OBJ",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "OBJ"
  },
  {
    "label": "IObject()",
    "kind": "Method",
    "detail": "Function (# ifndef Alembic_Abc_IObject_h # define Alembic_Abc_IObject_h # include<Alembic / Util / Export . h> # include<Alembic / Abc / Foundation . h> # include<Alembic / Abc / Base . h> # include<Alembic / Abc / Argument . h> # include<Alembic / Abc / IArchive . h> namespace Alembic { namespace Abc { namespace ALEMBIC_VERSION_NS { class ICompoundProperty ; class ALEMBIC_EXPORT IObject : public Base { public : typedef IObject this_type ; typedef IObject operator_bool_base_type ;)",
    "insertText": "IObject()"
  },
  {
    "label": "IObject()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "IObject(const IObject & iParent, const std::string &iName, const Argument &iArg0 = Argument())"
  },
  {
    "label": "init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "init(iParent.getPtr(), iName, GetErrorHandlerPolicy( iParent, iArg0 ))"
  },
  {
    "label": "initInstance()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "initInstance()"
  },
  {
    "label": "IObject()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "IObject(AbcA::ObjectReaderPtr iPtr, const Argument &iArg0 = Argument() ) : m_object( GetObjectReaderPtr( iPtr ))"
  },
  {
    "label": "getErrorHandler()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "getErrorHandler().setPolicy( GetErrorHandlerPolicy( iPtr, iArg0 ))"
  },
  {
    "label": "IObject()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "IObject(AbcA::ObjectReaderPtr iPtr, WrapExistingFlag , const Argument &iArg0 = Argument() ) : m_object( GetObjectReaderPtr( iPtr ))"
  },
  {
    "label": "IObject()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "IObject(IArchive & iArchive, const Argument &iArg0 = Argument())"
  },
  {
    "label": "init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "init(iArchive, iArg0)"
  },
  {
    "label": "IObject()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "IObject(IArchive & iArchive, TopFlag iFlag, const Argument &iArg0 = Argument())"
  },
  {
    "label": "getHeader()",
    "kind": "Method",
    "detail": "Function (const AbcA::ObjectHeader&)",
    "insertText": "getHeader()"
  },
  {
    "label": "getName()",
    "kind": "Method",
    "detail": "Function (const std::string&)",
    "insertText": "getName()"
  },
  {
    "label": "getFullName()",
    "kind": "Method",
    "detail": "Function (const std::string&)",
    "insertText": "getFullName()"
  },
  {
    "label": "getMetaData()",
    "kind": "Method",
    "detail": "Function (const AbcA::MetaData&)",
    "insertText": "getMetaData()"
  },
  {
    "label": "getArchive()",
    "kind": "Method",
    "detail": "Function (} IArchive)",
    "insertText": "getArchive()"
  },
  {
    "label": "getParent()",
    "kind": "Method",
    "detail": "Function (IObject)",
    "insertText": "getParent()"
  },
  {
    "label": "getNumChildren()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "getNumChildren()"
  },
  {
    "label": "getChildHeader()",
    "kind": "Method",
    "detail": "Function (const AbcA::ObjectHeader&)",
    "insertText": "getChildHeader(size_t i)"
  },
  {
    "label": "getChildHeader()",
    "kind": "Method",
    "detail": "Function (const AbcA::ObjectHeader*)",
    "insertText": "getChildHeader(const std::string &iName)"
  },
  {
    "label": "getProperties()",
    "kind": "Method",
    "detail": "Function (ICompoundProperty)",
    "insertText": "getProperties()"
  },
  {
    "label": "getChild()",
    "kind": "Method",
    "detail": "Function (IObject)",
    "insertText": "getChild(size_t iChildIndex)"
  },
  {
    "label": "getChild()",
    "kind": "Method",
    "detail": "Function (IObject)",
    "insertText": "getChild(const std::string &iChildName)"
  },
  {
    "label": "isInstanceRoot()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "isInstanceRoot()"
  },
  {
    "label": "isInstanceDescendant()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "isInstanceDescendant()"
  },
  {
    "label": "instanceSourcePath()",
    "kind": "Method",
    "detail": "Function (std::string)",
    "insertText": "instanceSourcePath()"
  },
  {
    "label": "isChildInstance()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "isChildInstance(size_t iChildIndex)"
  },
  {
    "label": "isChildInstance()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "isChildInstance(const std::string &iChildName)"
  },
  {
    "label": "getInstancePtr()",
    "kind": "Method",
    "detail": "Function (AbcA::ObjectReaderPtr)",
    "insertText": "getInstancePtr()"
  },
  {
    "label": "valid()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "valid()"
  },
  {
    "label": "getPropertiesHash()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "getPropertiesHash(Util::Digest & oDigest)"
  },
  {
    "label": "getChildrenHash()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "getChildrenHash(Util::Digest & oDigest)"
  },
  {
    "label": "ALEMBIC_OPERATOR_BOOL()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ALEMBIC_OPERATOR_BOOL(valid())"
  },
  {
    "label": "init()",
    "kind": "Method",
    "detail": "Function (public : AbcA::ObjectReaderPtr m_object ; private : void)",
    "insertText": "init(IArchive & iArchive, const Argument &iArg0)"
  },
  {
    "label": "init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "init(AbcA::ObjectReaderPtr iParentObject, const std::string &iName, ErrorHandler::Policy iPolicy)"
  },
  {
    "label": "setInstancedFullName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setInstancedFullName(const std::string& parentPath)"
  },
  {
    "label": "GetObjectReaderPtr()",
    "kind": "Method",
    "detail": "Function (AbcA::ObjectReaderPtr m_instanceObject ; std::string m_instancedFullName ; } ; typedef Alembic::Util::shared_ptr<IObject> IObjectPtr ; AbcA::ObjectReaderPtr)",
    "insertText": "GetObjectReaderPtr(IObject& iPrp)"
  },
  {
    "label": "GetErrorHandlerPolicy()",
    "kind": "Method",
    "detail": "Function (} template<class OBJ> ErrorHandler::Policy)",
    "insertText": "GetErrorHandlerPolicy(OBJ iObj, ErrorHandler::Policy iPcy)"
  },
  {
    "label": "arg()",
    "kind": "Method",
    "detail": "Function (Argument)",
    "insertText": "arg(iPcy)"
  }
]