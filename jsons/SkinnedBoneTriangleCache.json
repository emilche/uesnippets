[
  {
    "label": "FSkinnedBoneTriangleCache",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSkinnedBoneTriangleCache"
  },
  {
    "label": "FSkeletalMeshModel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSkeletalMeshModel"
  },
  {
    "label": "FSkeletalMeshRenderData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSkeletalMeshRenderData"
  },
  {
    "label": "FPositionVertexBuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPositionVertexBuffer"
  },
  {
    "label": "FSkinnedBoneTriangleCache()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Components / SkeletalMeshComponent . h \" # include \" Engine / SkeletalMesh . h \" # include \" SkeletalRenderPublic . h \" # include \" Containers / Array . h \" # include \" Containers / Set . h \" # include \" Containers / Map . h \" # include \" PhysicsAssetUtils . h \" class FSkinnedBoneTriangleCache { public :)",
    "insertText": "FSkinnedBoneTriangleCache(const USkeletalMesh& InSkeletalMesh, const FPhysAssetCreateParams& Params)"
  },
  {
    "label": "BuildCache()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildCache()"
  },
  {
    "label": "GetVerticesAndIndicesForBone()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetVerticesAndIndicesForBone(const int32 BoneIndex, TArray<FVector3f>& OutVertexPositions, TArray<uint32>& OutIndices)"
  },
  {
    "label": "GetVerticesAndIndicesForBones()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetVerticesAndIndicesForBones(const int32 PrimaryBoneIndex, const TArray<int32>& BoneIndices, TArray<FVector3f>& OutVertexPositions, TArray<uint32>& OutIndices, TArray<uint32>& OutLocalToSkinnedVertexIndex)"
  },
  {
    "label": "BufferIndexForTri()",
    "kind": "Method",
    "detail": "Function (private : typedef int32 FBoneIndex ; typedef uint32 FSkinnedVertexIndex ; typedef uint32 FTriangleIndex ; typedef TSet<FSkinnedVertexIndex> FInfluencedVerticesSet ; typedef TMap<FBoneIndex,FInfluencedVerticesSet> FBoneIndexToInfluencedVertices ; typedef TArray<FTriangleIndex> FTriangleArray ; typedef TMap<FBoneIndex,FTriangleArray> FBoneIndexToTriangles ; uint32)",
    "insertText": "BufferIndexForTri(const FTriangleIndex TriangleIndex, const int32 TriangleVertex = 0)"
  },
  {
    "label": "BoneTransformMatrix()",
    "kind": "Method",
    "detail": "Function (} FMatrix)",
    "insertText": "BoneTransformMatrix(FBoneIndex BoneIndex)"
  },
  {
    "label": "BuildInfluencedIndexSetForEachBone()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildInfluencedIndexSetForEachBone()"
  },
  {
    "label": "AddIndexToInfluencerBoneSets()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddIndexToInfluencerBoneSets(const FSkinnedVertexIndex VertIndex)"
  },
  {
    "label": "BuildOwnedTrianglesSetForEachBone()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildOwnedTrianglesSetForEachBone()"
  },
  {
    "label": "AddTriangleIndexToOwnerBoneSets()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddTriangleIndexToOwnerBoneSets(const FTriangleIndex TriangleIndex)"
  },
  {
    "label": "VertexPosition()",
    "kind": "Method",
    "detail": "Function (FVector3f)",
    "insertText": "VertexPosition(const FSkinnedVertexIndex VertIndex, const FMatrix& ComponentToBoneMatrix)"
  },
  {
    "label": "GetVerticesAndIndicesForBoneInternal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetVerticesAndIndicesForBoneInternal(const int32 TrianglesBoneIndex, const int32 TransformBoneIndex, TArray<FVector3f>& OutVertexPositions, TArray<uint32>& OutIndices, TArray<uint32>& OutLocalToSkinnedVertexIndex)"
  }
]