[
  {
    "label": "ParseCertificate()",
    "kind": "Method",
    "detail": "Function (# ifndef RTC_BASE_OPENSSL_UTILITY_H_ # define RTC_BASE_OPENSSL_UTILITY_H_ # include<openssl / ossl_typ . h> # include<string> # include \" absl / strings / string_view . h \" namespace rtc { namespace openssl { # ifdef OPENSSL_IS_BORINGSSL bool)",
    "insertText": "ParseCertificate(CRYPTO_BUFFER* cert_buffer, CBS* signature_algorithm_oid, int64_t* expiration_time)"
  },
  {
    "label": "VerifyPeerCertMatchesHost()",
    "kind": "Method",
    "detail": "Function (# endif bool)",
    "insertText": "VerifyPeerCertMatchesHost(SSL* ssl, absl::string_view host)"
  },
  {
    "label": "LogSSLErrors()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LogSSLErrors(absl::string_view prefix)"
  },
  {
    "label": "LoadBuiltinSSLRootCertificates()",
    "kind": "Method",
    "detail": "Function (# ifndef WEBRTC_EXCLUDE_BUILT_IN_SSL_ROOT_CERTS bool)",
    "insertText": "LoadBuiltinSSLRootCertificates(SSL_CTX* ssl_ctx)"
  },
  {
    "label": "GetBufferPool()",
    "kind": "Method",
    "detail": "Function (# endif # ifdef OPENSSL_IS_BORINGSSL CRYPTO_BUFFER_POOL*)",
    "insertText": "GetBufferPool()"
  }
]