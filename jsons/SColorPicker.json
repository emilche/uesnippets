[
  {
    "label": "FColorTheme",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FColorTheme"
  },
  {
    "label": "SBorder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SBorder"
  },
  {
    "label": "SColorThemesViewer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SColorThemesViewer"
  },
  {
    "label": "SComboButton",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SComboButton"
  },
  {
    "label": "SThemeColorBlocksBar",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SThemeColorBlocksBar"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FColorChannels",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FColorChannels"
  },
  {
    "label": "SColorPicker",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SColorPicker"
  },
  {
    "label": "FColorPickerArgs",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FColorPickerArgs"
  },
  {
    "label": "DECLARE_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Misc / Attribute . h \" # include \" Input / Reply . h \" # include \" Layout / Visibility . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Widgets / SWidget . h \" # include \" Widgets / SCompoundWidget . h \" # include \" Widgets / SWindow . h \" # include \" Framework / SlateDelegates . h \" class FColorTheme ; class SBorder ; class SColorThemesViewer ; class SComboButton ; class SThemeColorBlocksBar ;)",
    "insertText": "DECLARE_DELEGATE_OneParam(FOnColorPickerCancelled, FLinearColor)"
  },
  {
    "label": "FColorChannels()",
    "kind": "Method",
    "detail": "Function (enum class EColorPickerChannels { Red,Green,Blue,Alpha,Hue,Saturation,Value } ; enum class EColorPickerModes { Spectrum,Wheel } ; struct FColorChannels {)",
    "insertText": "FColorChannels()"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (Red = Green = Blue = Alpha = nullptr ; } float* Red ; float* Green ; float* Blue ; float* Alpha ; } ; class SColorPicker : public SCompoundWidget { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SColorPicker) : _TargetColorAttribute(FLinearColor(ForceInit)) , _UseAlpha(true) , _OnlyRefreshOnMouseUp(false) , _OnlyRefreshOnOk(false) , _OnColorCommitted() , _PreColorCommitted() , _OnColorPickerCancelled() , _OnColorPickerWindowClosed() , _OnInteractivePickBegin() , _OnInteractivePickEnd() , _ParentWindow() , _DisplayGamma(2.2f) , _sRGBOverride() , _DisplayInlineVersion(false) , _OverrideColorPickerCreation(false) , _ExpandAdvancedSection(false) , _ClampValue(false) , _OptionalOwningDetailsView(nullptr)"
  },
  {
    "label": "SLATE_ATTRIBUTE()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_ATTRIBUTE(FLinearColor, TargetColorAttribute) SLATE_ARGUMENT_DEPRECATED(TArray<FColor*>, TargetFColors, 5.2, \"TargetFColors is deprecated. Use OnColorCommitted to get the selected color.\") SLATE_ARGUMENT_DEPRECATED(TArray<FLinearColor*>, TargetLinearColors, 5.2, \"TargetLinearColors is deprecated. Use OnColorCommitted to get the selected color.\") SLATE_ARGUMENT_DEPRECATED(TArray<FColorChannels>, TargetColorChannels, 5.2, \"TargetColorChannels is deprecated. Use OnColorCommitted to get the selected color.\") SLATE_ATTRIBUTE(bool, UseAlpha) SLATE_ATTRIBUTE(bool, OnlyRefreshOnMouseUp) SLATE_ATTRIBUTE(bool, OnlyRefreshOnOk) SLATE_EVENT(FOnLinearColorValueChanged, OnColorCommitted) UE_DEPRECATED(5.2, \"PreColorCommitted is deprecated. Use OnColorCommitted to update your values.\") SLATE_EVENT(FOnLinearColorValueChanged, PreColorCommitted) SLATE_EVENT(FOnColorPickerCancelled, OnColorPickerCancelled) SLATE_EVENT(FOnWindowClosed, OnColorPickerWindowClosed) SLATE_EVENT(FSimpleDelegate, OnInteractivePickBegin) SLATE_EVENT(FSimpleDelegate, OnInteractivePickEnd) SLATE_ATTRIBUTE(TSharedPtr<SWindow>, ParentWindow) SLATE_ATTRIBUTE(float, DisplayGamma) SLATE_ARGUMENT(TOptional<bool>, sRGBOverride) SLATE_ARGUMENT(bool, DisplayInlineVersion) SLATE_ARGUMENT(bool, OverrideColorPickerCreation) SLATE_ARGUMENT(bool, ExpandAdvancedSection) SLATE_ARGUMENT(bool, ClampValue) SLATE_ATTRIBUTE(TSharedPtr<SWidget>, OptionalOwningDetailsView) SLATE_END_ARGS()"
  },
  {
    "label": "SColorPicker()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "SColorPicker()"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (public : void)",
    "insertText": "Construct(const FArguments& InArgs)"
  },
  {
    "label": "GetOptionalOwningDetailsView()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<SWidget>)",
    "insertText": "GetOptionalOwningDetailsView()"
  },
  {
    "label": "DECLARE_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (} else { return nullptr ; } })",
    "insertText": "DECLARE_DELEGATE_OneParam(FOnColorPickerCreationOverride, const TSharedRef<SColorPicker>&)"
  },
  {
    "label": "DECLARE_DELEGATE()",
    "kind": "Method",
    "detail": "Function (FOnColorPickerCreationOverride OnColorPickerNonModalCreateOverride ;)",
    "insertText": "DECLARE_DELEGATE(FOnColorPickerDestructionOverride)"
  },
  {
    "label": "BackupColors()",
    "kind": "Method",
    "detail": "Function (FOnColorPickerDestructionOverride OnColorPickerDestroyOverride ; protected : void)",
    "insertText": "BackupColors()"
  },
  {
    "label": "ApplyNewTargetColor()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ApplyNewTargetColor(bool bForceUpdate = false)"
  },
  {
    "label": "GenerateDefaultColorPickerContent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GenerateDefaultColorPickerContent(bool bAdvancedSectionExpanded)"
  },
  {
    "label": "GenerateInlineColorPickerContent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GenerateInlineColorPickerContent()"
  },
  {
    "label": "GetCurrentColor()",
    "kind": "Method",
    "detail": "Function (FLinearColor)",
    "insertText": "GetCurrentColor()"
  },
  {
    "label": "SetNewTargetColorRGB()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetNewTargetColorRGB(const FLinearColor& NewValue, bool bForceUpdate = false)"
  },
  {
    "label": "SetNewTargetColorHSV()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetNewTargetColorHSV(const FLinearColor& NewValue, bool bForceUpdate = false)"
  },
  {
    "label": "UpdateColorPick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateColorPick()"
  },
  {
    "label": "UpdateColorPickMouseUp()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateColorPickMouseUp()"
  },
  {
    "label": "BeginAnimation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginAnimation(FLinearColor Start, FLinearColor End)"
  },
  {
    "label": "HideSmallTrash()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HideSmallTrash()"
  },
  {
    "label": "ShowSmallTrash()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ShowSmallTrash()"
  },
  {
    "label": "CycleMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CycleMode()"
  },
  {
    "label": "MakeColorSlider()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "MakeColorSlider(EColorPickerChannels Channel)"
  },
  {
    "label": "MakeColorSpinBox()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "MakeColorSpinBox(EColorPickerChannels Channel)"
  },
  {
    "label": "MakeColorPreviewBox()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "MakeColorPreviewBox()"
  },
  {
    "label": "AnimatePostConstruct()",
    "kind": "Method",
    "detail": "Function (private : EActiveTimerReturnType)",
    "insertText": "AnimatePostConstruct(double InCurrentTime, float InDeltaTime)"
  },
  {
    "label": "GetGradientEndColor()",
    "kind": "Method",
    "detail": "Function (FLinearColor)",
    "insertText": "GetGradientEndColor(EColorPickerChannels Channel)"
  },
  {
    "label": "GetGradientStartColor()",
    "kind": "Method",
    "detail": "Function (FLinearColor)",
    "insertText": "GetGradientStartColor(EColorPickerChannels Channel)"
  },
  {
    "label": "HandleAdvancedAreaExpansionChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleAdvancedAreaExpansionChanged(bool Expanded)"
  },
  {
    "label": "HandleAlphaColorBlockVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "HandleAlphaColorBlockVisibility()"
  },
  {
    "label": "HandleCancelButtonClicked()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "HandleCancelButtonClicked()"
  },
  {
    "label": "HandleColorAreaMouseDown()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "HandleColorAreaMouseDown(const FGeometry& MyGeometry, const FPointerEvent& MouseEvent)"
  },
  {
    "label": "HandleColorPickerModeButtonClicked()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "HandleColorPickerModeButtonClicked()"
  },
  {
    "label": "HandleColorPickerModeVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "HandleColorPickerModeVisibility(EColorPickerModes Mode)"
  },
  {
    "label": "HandleColorSliderEndColor()",
    "kind": "Method",
    "detail": "Function (FLinearColor)",
    "insertText": "HandleColorSliderEndColor(EColorPickerChannels Channel)"
  },
  {
    "label": "HandleColorSliderStartColor()",
    "kind": "Method",
    "detail": "Function (FLinearColor)",
    "insertText": "HandleColorSliderStartColor(EColorPickerChannels Channel)"
  },
  {
    "label": "HandleColorSpectrumValueChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleColorSpectrumValueChanged(FLinearColor NewValue)"
  },
  {
    "label": "HandleColorSpinBoxValue()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "HandleColorSpinBoxValue(EColorPickerChannels Channel)"
  },
  {
    "label": "HandleColorSpinBoxValueChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleColorSpinBoxValueChanged(float NewValue, EColorPickerChannels Channel)"
  },
  {
    "label": "HandleEyeDropperButtonComplete()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleEyeDropperButtonComplete(bool bCancelled)"
  },
  {
    "label": "HandleHexLinearBoxText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "HandleHexLinearBoxText()"
  },
  {
    "label": "HandleHexSRGBBoxText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "HandleHexSRGBBoxText()"
  },
  {
    "label": "HandleHexSRGBInputTextCommitted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleHexSRGBInputTextCommitted(const FText& Text, ETextCommit::Type CommitType)"
  },
  {
    "label": "HandleHexLinearInputTextCommitted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleHexLinearInputTextCommitted(const FText& Text, ETextCommit::Type CommitType)"
  },
  {
    "label": "HandleHSVColorChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleHSVColorChanged(FLinearColor NewValue)"
  },
  {
    "label": "HandleInteractiveChangeBegin()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleInteractiveChangeBegin()"
  },
  {
    "label": "HandleInteractiveChangeEnd()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleInteractiveChangeEnd()"
  },
  {
    "label": "HandleInteractiveChangeEnd()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleInteractiveChangeEnd(float NewValue)"
  },
  {
    "label": "HandleNewColorBlockMouseButtonDown()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "HandleNewColorBlockMouseButtonDown(const FGeometry& MyGeometry, const FPointerEvent& MouseEvent, bool bCheckAlpha)"
  },
  {
    "label": "HandleOkButtonClicked()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "HandleOkButtonClicked()"
  },
  {
    "label": "HandleOldColorBlockMouseButtonDown()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "HandleOldColorBlockMouseButtonDown(const FGeometry& MyGeometry, const FPointerEvent& MouseEvent, bool bCheckAlpha)"
  },
  {
    "label": "HandleColorPickerUseSRGB()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HandleColorPickerUseSRGB()"
  },
  {
    "label": "HandleParentWindowClosed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleParentWindowClosed(const TSharedRef<SWindow>& Window)"
  },
  {
    "label": "HandleRGBColorChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleRGBColorChanged(FLinearColor NewValue)"
  },
  {
    "label": "HandleSRGBCheckBoxCheckStateChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleSRGBCheckBoxCheckStateChanged(ECheckBoxState InIsChecked)"
  },
  {
    "label": "HandleSRGBCheckBoxIsChecked()",
    "kind": "Method",
    "detail": "Function (ECheckBoxState)",
    "insertText": "HandleSRGBCheckBoxIsChecked()"
  },
  {
    "label": "HandleThemeBarColorSelected()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleThemeBarColorSelected(FLinearColor NewValue)"
  },
  {
    "label": "HandleThemeBarColorTheme()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<class FColorTheme>)",
    "insertText": "HandleThemeBarColorTheme()"
  },
  {
    "label": "HandleThemeBarHintVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "HandleThemeBarHintVisibility()"
  },
  {
    "label": "HandleThemeBarUseAlpha()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HandleThemeBarUseAlpha()"
  },
  {
    "label": "HandleThemesViewerThemeChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleThemesViewerThemeChanged()"
  },
  {
    "label": "bool()",
    "kind": "Method",
    "detail": "Function (private : TAttribute<FLinearColor> TargetColorAttribute ; FLinearColor CurrentColorHSV ; FLinearColor CurrentColorRGB ; FLinearColor OldColor ; FLinearColor ColorEnd ; FLinearColor ColorBegin ; EColorPickerModes CurrentMode ; float CurrentTime ; const double MAX_ALLOWED_UPDATE_TIME ; bool bPerfIsTooSlowToUpdate ; TAttribute<bool> bUseAlpha ; bool bOnlyRefreshOnMouseUp ; bool bOnlyRefreshOnOk ; bool bClosedViaOkOrCancel ; TWeakPtr<SWindow> ParentWindowPtr ; TSharedPtr<SThemeColorBlocksBar> CurrentThemeBar ; TSharedPtr<SBorder> ColorThemeButtonOrSmallTrash ; TSharedPtr<SComboButton> ColorThemeComboButton ; TSharedPtr<SWidget> SmallTrash ; TAttribute<float> DisplayGamma ; TOptional<bool> OriginalSRGBOption ; bool bColorPickerIsInlineVersion ; bool bColorPickerCreationIsOverridden ; bool bIsInteractive ; bool bValidCreationOverrideExists ; bool bClampValue ; private : FOnLinearColorValueChanged OnColorCommitted ; FOnColorPickerCancelled OnColorPickerCancelled ; FSimpleDelegate OnInteractivePickBegin ; FSimpleDelegate OnInteractivePickEnd ; FOnWindowClosed OnColorPickerWindowClosed ; TWeakPtr<SWidget> OptionalOwningDetailsView ; private : TWeakPtr<SColorThemesViewer> ColorThemesViewer ; } ; struct FColorPickerArgs { bool bIsModal = false ; TSharedPtr<SWidget> ParentWidget ; bool bUseAlpha = false ; bool bOnlyRefreshOnMouseUp = false ; bool bOnlyRefreshOnOk = false ; bool bExpandAdvancedSection = true ; bool bOpenAsMenu = false ; bool bClampValue = false ; TAttribute<float> DisplayGamma = 2 . 2 f ; TOptional<bool> sRGBOverride = TOptional<)",
    "insertText": "bool()"
  },
  {
    "label": "FColorPickerArgs()",
    "kind": "Method",
    "detail": "Function (FLinearColor InitialColor = FLinearColor::White ; TSharedPtr<SWidget> OptionalOwningDetailsView ;)",
    "insertText": "FColorPickerArgs()"
  },
  {
    "label": "FColorPickerArgs()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FColorPickerArgs(FLinearColor InInitialColor, FOnLinearColorValueChanged InOnColorCommitted) : OnColorCommitted(MoveTemp(InOnColorCommitted)) , InitialColor(InInitialColor)"
  },
  {
    "label": "FColorPickerArgs()",
    "kind": "Method",
    "detail": "Function (} PRAGMA_DISABLE_DEPRECATION_WARNINGS)",
    "insertText": "FColorPickerArgs(const FColorPickerArgs&)"
  },
  {
    "label": "FColorPickerArgs()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FColorPickerArgs(FColorPickerArgs&&)"
  },
  {
    "label": "GetColorPicker()",
    "kind": "Method",
    "detail": "Function (PRAGMA_ENABLE_DEPRECATION_WARNINGS } ; TSharedPtr<SColorPicker>)",
    "insertText": "GetColorPicker()"
  },
  {
    "label": "OpenColorPicker()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "OpenColorPicker(const FColorPickerArgs& Args)"
  },
  {
    "label": "DestroyColorPicker()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyColorPicker()"
  }
]