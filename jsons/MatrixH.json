[
  {
    "label": "CADKERNEL_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CADKERNEL_API"
  },
  {
    "label": "FromAxisOrigin()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FromAxisOrigin(const FPoint& Axis, const FPoint& Origin)"
  },
  {
    "label": "BuildChangeOfCoordinateSystemMatrix()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildChangeOfCoordinateSystemMatrix(const FPoint& Xaxis, const FPoint& Yaxis, const FPoint& Zaxis, const FPoint& Origin)"
  },
  {
    "label": "MakeRotationMatrix()",
    "kind": "Method",
    "detail": "Function (FMatrixH)",
    "insertText": "MakeRotationMatrix(double InAngle, const FPoint InAxe)"
  },
  {
    "label": "MakeTranslationMatrix()",
    "kind": "Method",
    "detail": "Function (FMatrixH)",
    "insertText": "MakeTranslationMatrix(const FPoint& InPoint)"
  },
  {
    "label": "MakeScaleMatrix()",
    "kind": "Method",
    "detail": "Function (FMatrixH)",
    "insertText": "MakeScaleMatrix(FPoint& Scale)"
  },
  {
    "label": "MakeScaleMatrix()",
    "kind": "Method",
    "detail": "Function (FMatrixH)",
    "insertText": "MakeScaleMatrix(double ScaleX, double ScaleY, double ScaleZ)"
  },
  {
    "label": "Inverse()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Inverse()"
  },
  {
    "label": "Multiply()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "Multiply(Point)"
  },
  {
    "label": "InverseMatrixN()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InverseMatrixN(double* Matrix, int32 n)"
  },
  {
    "label": "MatrixProduct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MatrixProduct(int32 ARowNum, int32 AColumnNum, int32 ResultRank, const double* InMatrixA, const double* InMatrixB, double* OutMatrix)"
  },
  {
    "label": "TransposeMatrix()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TransposeMatrix(int32 RowNum, int32 ColumnNum, const double* InMatrix, double* OutMatrix)"
  }
]