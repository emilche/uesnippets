[
  {
    "label": "ESourceManagerRenderThreadPhase",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ESourceManagerRenderThreadPhase"
  },
  {
    "label": "FMixerSubmix",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMixerSubmix"
  },
  {
    "label": "FMixerDevice",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMixerDevice"
  },
  {
    "label": "FMixerSourceVoice",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMixerSourceVoice"
  },
  {
    "label": "FMixerSourceBuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMixerSourceBuffer"
  },
  {
    "label": "ISourceListener",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISourceListener"
  },
  {
    "label": "FMixerSourceSubmixOutputBuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMixerSourceSubmixOutputBuffer"
  },
  {
    "label": "FMixerSourceVoiceBuffer",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMixerSourceVoiceBuffer"
  },
  {
    "label": "ISourceListener",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISourceListener"
  },
  {
    "label": "FMixerSourceSubmixSend",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMixerSourceSubmixSend"
  },
  {
    "label": "FInitAudioBusSend",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInitAudioBusSend"
  },
  {
    "label": "FMixerSourceVoiceInitParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMixerSourceVoiceInitParams"
  },
  {
    "label": "FSourceManagerInitParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSourceManagerInitParams"
  },
  {
    "label": "FMixerSourceManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMixerSourceManager"
  },
  {
    "label": "FAudioMixerThreadCommand",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAudioMixerThreadCommand"
  },
  {
    "label": "which",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "which"
  },
  {
    "label": "FAudioMixerSourceWorker",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAudioMixerSourceWorker"
  },
  {
    "label": "FCommands",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCommands"
  },
  {
    "label": "FSourceInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSourceInfo"
  },
  {
    "label": "FGameThreadInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGameThreadInfo"
  },
  {
    "label": "FPendingAudioBusConnection",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPendingAudioBusConnection"
  },
  {
    "label": "FMixerSourceVoice",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMixerSourceVoice"
  },
  {
    "label": "FMixerSourceManager()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FMixerSourceManager(FMixerDevice* InMixerDevice)"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Init(const FSourceManagerInitParams& InitParams)"
  },
  {
    "label": "Update()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Update(bool bTimedOut = false)"
  },
  {
    "label": "GetFreeSourceId()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetFreeSourceId(int32& OutSourceId)"
  },
  {
    "label": "ReleaseSourceId()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseSourceId(const int32 SourceId)"
  },
  {
    "label": "InitSource()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitSource(const int32 SourceId, const FMixerSourceVoiceInitParams& InitParams)"
  },
  {
    "label": "StartAudioBus()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StartAudioBus(FAudioBusKey InAudioBusKey, int32 InNumChannels, bool bInIsAutomatic)"
  },
  {
    "label": "StopAudioBus()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StopAudioBus(FAudioBusKey InAudioBusKey)"
  },
  {
    "label": "AddPatchOutputForAudioBus()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddPatchOutputForAudioBus(FAudioBusKey InAudioBusKey, const FPatchOutputStrongPtr& InPatchOutputStrongPtr)"
  },
  {
    "label": "AddPatchOutputForAudioBus_AudioThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddPatchOutputForAudioBus_AudioThread(FAudioBusKey InAudioBusKey, const FPatchOutputStrongPtr& InPatchOutputStrongPtr)"
  },
  {
    "label": "AddPatchInputForAudioBus()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddPatchInputForAudioBus(FAudioBusKey InAudioBusKey, const FPatchInput& InPatchInput)"
  },
  {
    "label": "AddPatchInputForAudioBus_AudioThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddPatchInputForAudioBus_AudioThread(FAudioBusKey InAudioBusKey, const FPatchInput& InPatchInput)"
  },
  {
    "label": "Play()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Play(const int32 SourceId)"
  },
  {
    "label": "Stop()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Stop(const int32 SourceId)"
  },
  {
    "label": "CancelQuantizedSound()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CancelQuantizedSound(const int32 SourceId)"
  },
  {
    "label": "StopInternal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StopInternal(const int32 SourceId)"
  },
  {
    "label": "StopFade()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StopFade(const int32 SourceId, const int32 NumFrames)"
  },
  {
    "label": "Pause()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Pause(const int32 SourceId)"
  },
  {
    "label": "SetPitch()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPitch(const int32 SourceId, const float Pitch)"
  },
  {
    "label": "SetVolume()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetVolume(const int32 SourceId, const float Volume)"
  },
  {
    "label": "SetDistanceAttenuation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDistanceAttenuation(const int32 SourceId, const float DistanceAttenuation)"
  },
  {
    "label": "SetSpatializationParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSpatializationParams(const int32 SourceId, const FSpatializationParams& InParams)"
  },
  {
    "label": "SetChannelMap()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetChannelMap(const int32 SourceId, const uint32 NumInputChannels, const Audio::FAlignedFloatBuffer& InChannelMap, const bool bInIs3D, const bool bInIsCenterChannelOnly)"
  },
  {
    "label": "SetLPFFrequency()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetLPFFrequency(const int32 SourceId, const float Frequency)"
  },
  {
    "label": "SetHPFFrequency()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetHPFFrequency(const int32 SourceId, const float Frequency)"
  },
  {
    "label": "SetModPitch()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetModPitch(const int32 SourceId, const float InModPitch)"
  },
  {
    "label": "SetModVolume()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetModVolume(const int32 SourceId, const float InModVolume)"
  },
  {
    "label": "SetModLPFFrequency()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetModLPFFrequency(const int32 SourceId, const float InModFrequency)"
  },
  {
    "label": "SetModHPFFrequency()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetModHPFFrequency(const int32 SourceId, const float InModFrequency)"
  },
  {
    "label": "SetModulationRouting()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetModulationRouting(const int32 SourceId, FSoundModulationDefaultSettings& ModulationSettings)"
  },
  {
    "label": "SetSourceBufferListener()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSourceBufferListener(const int32 SourceId, FSharedISourceBufferListenerPtr& InSourceBufferListener, bool InShouldSourceBufferListenerZeroBuffer)"
  },
  {
    "label": "SetListenerTransforms()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetListenerTransforms(const TArray<FTransform>& ListenerTransforms)"
  },
  {
    "label": "ComputeNextBlockOfSamples()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ComputeNextBlockOfSamples()"
  },
  {
    "label": "ClearStoppingSounds()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearStoppingSounds()"
  },
  {
    "label": "Get2DChannelMap()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Get2DChannelMap(const int32 SourceId, int32 InNumOutputChannels, Audio::FAlignedFloatBuffer& OutChannelMap)"
  },
  {
    "label": "SetSubmixSendInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSubmixSendInfo(const int32 SourceId, const FMixerSourceSubmixSend& SubmixSend)"
  },
  {
    "label": "ClearSubmixSendInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearSubmixSendInfo(const int32 SourceId, const FMixerSourceSubmixSend& SubmixSend)"
  },
  {
    "label": "SetBusSendInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetBusSendInfo(const int32 SourceId, EBusSendType InAudioBusSendType, uint32 AudiobusId, float BusSendLevel)"
  },
  {
    "label": "UpdateDeviceChannelCount()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateDeviceChannelCount(const int32 InNumOutputChannels)"
  },
  {
    "label": "UpdateSourceEffectChain()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateSourceEffectChain(const uint32 SourceEffectChainId, const TArray<FSourceEffectChainEntry>& SourceEffectChain, const bool bPlayEffectChainTails)"
  },
  {
    "label": "PauseSoundForQuantizationCommand()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PauseSoundForQuantizationCommand(const int32 SourceId)"
  },
  {
    "label": "SetSubBufferDelayForSound()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSubBufferDelayForSound(const int32 SourceId, const int32 FramesToDelay)"
  },
  {
    "label": "UnPauseSoundForQuantizationCommand()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnPauseSoundForQuantizationCommand(const int32 SourceId)"
  },
  {
    "label": "PumpCommandQueue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PumpCommandQueue()"
  },
  {
    "label": "UpdatePendingReleaseData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdatePendingReleaseData(bool bForceWait = false)"
  },
  {
    "label": "FlushCommandQueue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FlushCommandQueue(bool bPumpCommandQueue = false)"
  },
  {
    "label": "ReleaseSource()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseSource(const int32 SourceId)"
  },
  {
    "label": "BuildSourceEffectChain()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildSourceEffectChain(const int32 SourceId, FSoundEffectSourceInitData& InitData, const TArray<FSourceEffectChainEntry>& SourceEffectChain, TArray<TSoundEffectSourcePtr>& OutSourceEffects)"
  },
  {
    "label": "ResetSourceEffectChain()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetSourceEffectChain(const int32 SourceId)"
  },
  {
    "label": "ReadSourceFrame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReadSourceFrame(const int32 SourceId)"
  },
  {
    "label": "GenerateSourceAudio()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GenerateSourceAudio(const bool bGenerateBuses)"
  },
  {
    "label": "GenerateSourceAudio()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GenerateSourceAudio(const bool bGenerateBuses, const int32 SourceIdStart, const int32 SourceIdEnd)"
  },
  {
    "label": "ComputeSourceBuffersForIdRange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ComputeSourceBuffersForIdRange(const bool bGenerateBuses, const int32 SourceIdStart, const int32 SourceIdEnd)"
  },
  {
    "label": "ComputePostSourceEffectBufferForIdRange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ComputePostSourceEffectBufferForIdRange(const bool bGenerateBuses, const int32 SourceIdStart, const int32 SourceIdEnd)"
  },
  {
    "label": "ComputeOutputBuffersForIdRange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ComputeOutputBuffersForIdRange(const bool bGenerateBuses, const int32 SourceIdStart, const int32 SourceIdEnd)"
  },
  {
    "label": "ConnectBusPatches()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConnectBusPatches()"
  },
  {
    "label": "ComputeBuses()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ComputeBuses()"
  },
  {
    "label": "UpdateBuses()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateBuses()"
  },
  {
    "label": "ApplyDistanceAttenuation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyDistanceAttenuation(FSourceInfo& InSourceInfo, int32 NumSamples)"
  },
  {
    "label": "ComputePluginAudio()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ComputePluginAudio(FSourceInfo& InSourceInfo, FMixerSourceSubmixOutputBuffer& InSourceSubmixOutputBuffer, int32 SourceId, int32 NumSamples)"
  },
  {
    "label": "DoStallDiagnostics()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DoStallDiagnostics()"
  },
  {
    "label": "LogRenderThreadStall()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LogRenderThreadStall()"
  },
  {
    "label": "LogInflightAsyncTasks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LogInflightAsyncTasks()"
  },
  {
    "label": "LogCallstacks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LogCallstacks()"
  },
  {
    "label": "LogCallstack()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LogCallstack(uint32 InThreadId)"
  }
]