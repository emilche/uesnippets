[
  {
    "label": "ActiveIceControllerFactoryArgs",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ActiveIceControllerFactoryArgs"
  },
  {
    "label": "ActiveIceControllerFactoryInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ActiveIceControllerFactoryInterface"
  },
  {
    "label": "ActiveIceControllerFactoryInterface()",
    "kind": "Method",
    "detail": "Function (# ifndef P2P_BASE_ACTIVE_ICE_CONTROLLER_FACTORY_INTERFACE_H_ # define P2P_BASE_ACTIVE_ICE_CONTROLLER_FACTORY_INTERFACE_H_ # include<memory> # include \" p2p / base / active_ice_controller_interface . h \" # include \" p2p / base / ice_agent_interface . h \" # include \" p2p / base / ice_controller_factory_interface . h \" namespace cricket { struct ActiveIceControllerFactoryArgs { IceControllerFactoryArgs legacy_args ; IceAgentInterface* ice_agent ; } ; class ActiveIceControllerFactoryInterface { public : ~)",
    "insertText": "ActiveIceControllerFactoryInterface()"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<ActiveIceControllerInterface>)",
    "insertText": "Create(const ActiveIceControllerFactoryArgs&)"
  }
]