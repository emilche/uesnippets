[
  {
    "label": "Syncable",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Syncable"
  },
  {
    "label": "Info",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Info"
  },
  {
    "label": "Syncable()",
    "kind": "Method",
    "detail": "Function (# ifndef CALL_SYNCABLE_H_ # define CALL_SYNCABLE_H_ # include<stdint . h> # include \" absl / types / optional . h \" namespace webrtc { class Syncable { public : struct Info { int64_t latest_receive_time_ms = 0 ; uint32_t latest_received_capture_timestamp = 0 ; uint32_t capture_time_ntp_secs = 0 ; uint32_t capture_time_ntp_frac = 0 ; uint32_t capture_time_source_clock = 0 ; int current_delay_ms = 0 ; } ; ~)",
    "insertText": "Syncable()"
  },
  {
    "label": "id()",
    "kind": "Method",
    "detail": "Function (uint32_t)",
    "insertText": "id()"
  },
  {
    "label": "GetInfo()",
    "kind": "Method",
    "detail": "Function (absl::optional<Info>)",
    "insertText": "GetInfo()"
  },
  {
    "label": "GetPlayoutRtpTimestamp()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetPlayoutRtpTimestamp(uint32_t* rtp_timestamp, int64_t* time_ms)"
  },
  {
    "label": "SetMinimumPlayoutDelay()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetMinimumPlayoutDelay(int delay_ms)"
  },
  {
    "label": "SetEstimatedPlayoutNtpTimestampMs()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetEstimatedPlayoutNtpTimestampMs(int64_t ntp_timestamp_ms, int64_t time_ms)"
  }
]