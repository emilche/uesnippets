[
  {
    "label": "AActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AActor"
  },
  {
    "label": "FCollisionQueryParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCollisionQueryParams"
  },
  {
    "label": "FCollisionShape",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCollisionShape"
  },
  {
    "label": "UEnvQueryTest_Overlap",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEnvQueryTest_Overlap"
  },
  {
    "label": "ECollisionChannel",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ECollisionChannel"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" EnvironmentQuery / EnvQueryTypes . h \" # include \" EnvironmentQuery / EnvQueryTest . h \" # include \" EnvQueryTest_Overlap . generated . h \" class AActor ; struct FCollisionQueryParams ; struct FCollisionShape ;)",
    "insertText": "UCLASS(MinimalAPI)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() UPROPERTY(EditDefaultsOnly, Category=Overlap)"
  },
  {
    "label": "RunTest()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RunTest(FEnvQueryInstance& QueryInstance)"
  },
  {
    "label": "GetDescriptionTitle()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetDescriptionTitle()"
  },
  {
    "label": "GetDescriptionDetails()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetDescriptionDetails()"
  },
  {
    "label": "RunOverlap()",
    "kind": "Method",
    "detail": "Function (protected : bool)",
    "insertText": "RunOverlap(const FVector& ItemPos, const FCollisionShape& CollisionShape, const TArray<AActor*>& IgnoredActors, UWorld* World, enum ECollisionChannel Channel, const FCollisionQueryParams& Params)"
  },
  {
    "label": "RunOverlapBlocking()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RunOverlapBlocking(const FVector& ItemPos, const FCollisionShape& CollisionShape, const TArray<AActor*>& IgnoredActors, UWorld* World, enum ECollisionChannel Channel, const FCollisionQueryParams& Params)"
  }
]