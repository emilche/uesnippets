[
  {
    "label": "IAsyncDriverElement",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IAsyncDriverElement"
  },
  {
    "label": "IAsyncDriverElementCollection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IAsyncDriverElementCollection"
  },
  {
    "label": "FEmptyAsyncDriverElementFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEmptyAsyncDriverElementFactory"
  },
  {
    "label": "IDriverElement",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDriverElement"
  },
  {
    "label": "IDriverElementCollection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDriverElementCollection"
  },
  {
    "label": "FEmptyDriverElementFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEmptyDriverElementFactory"
  },
  {
    "label": "Hover()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" IElementLocator . h \" # include \" Async / AsyncResult . h \" # include \" InputCoreTypes . h \" # include \" GenericPlatform / GenericApplicationMessageHandler . h \" class IAsyncDriverElement : public IElementLocator { public : TAsyncResult<bool>)",
    "insertText": "Hover()"
  },
  {
    "label": "IsHovered()",
    "kind": "Method",
    "detail": "Function (TAsyncResult<bool>)",
    "insertText": "IsHovered()"
  },
  {
    "label": "Click()",
    "kind": "Method",
    "detail": "Function (TAsyncResult<bool>)",
    "insertText": "Click(EMouseButtons::Type MouseButton)"
  },
  {
    "label": "Click()",
    "kind": "Method",
    "detail": "Function (TAsyncResult<bool>)",
    "insertText": "Click()"
  },
  {
    "label": "DoubleClick()",
    "kind": "Method",
    "detail": "Function (TAsyncResult<bool>)",
    "insertText": "DoubleClick(EMouseButtons::Type MouseButton)"
  },
  {
    "label": "DoubleClick()",
    "kind": "Method",
    "detail": "Function (TAsyncResult<bool>)",
    "insertText": "DoubleClick()"
  },
  {
    "label": "ScrollBy()",
    "kind": "Method",
    "detail": "Function (TAsyncResult<bool>)",
    "insertText": "ScrollBy(float Delta)"
  },
  {
    "label": "ScrollToBeginning()",
    "kind": "Method",
    "detail": "Function (TAsyncResult<bool>)",
    "insertText": "ScrollToBeginning()"
  },
  {
    "label": "ScrollToBeginning()",
    "kind": "Method",
    "detail": "Function (TAsyncResult<bool>)",
    "insertText": "ScrollToBeginning(float Amount)"
  },
  {
    "label": "ScrollToBeginningUntil()",
    "kind": "Method",
    "detail": "Function (TAsyncResult<bool>)",
    "insertText": "ScrollToBeginningUntil(const TSharedRef<IElementLocator, ESPMode::ThreadSafe>& DesiredElementLocator)"
  },
  {
    "label": "ScrollToEnd()",
    "kind": "Method",
    "detail": "Function (TAsyncResult<bool>)",
    "insertText": "ScrollToEnd()"
  },
  {
    "label": "ScrollToEnd()",
    "kind": "Method",
    "detail": "Function (TAsyncResult<bool>)",
    "insertText": "ScrollToEnd(float Amount)"
  },
  {
    "label": "ScrollToEndUntil()",
    "kind": "Method",
    "detail": "Function (TAsyncResult<bool>)",
    "insertText": "ScrollToEndUntil(const TSharedRef<IElementLocator, ESPMode::ThreadSafe>& DesiredElementLocator)"
  },
  {
    "label": "Type()",
    "kind": "Method",
    "detail": "Function (TAsyncResult<bool>)",
    "insertText": "Type(const TCHAR* Text)"
  },
  {
    "label": "Type()",
    "kind": "Method",
    "detail": "Function (TAsyncResult<bool>)",
    "insertText": "Type(FString Text)"
  },
  {
    "label": "Type()",
    "kind": "Method",
    "detail": "Function (TAsyncResult<bool>)",
    "insertText": "Type(FKey Key)"
  },
  {
    "label": "Type()",
    "kind": "Method",
    "detail": "Function (TAsyncResult<bool>)",
    "insertText": "Type(TCHAR Character)"
  },
  {
    "label": "Type()",
    "kind": "Method",
    "detail": "Function (TAsyncResult<bool>)",
    "insertText": "Type(const TArray<FKey>& Keys)"
  },
  {
    "label": "TypeChord()",
    "kind": "Method",
    "detail": "Function (TAsyncResult<bool>)",
    "insertText": "TypeChord(FKey Key1, FKey Key2)"
  },
  {
    "label": "TypeChord()",
    "kind": "Method",
    "detail": "Function (TAsyncResult<bool>)",
    "insertText": "TypeChord(FKey Key1, TCHAR Character)"
  },
  {
    "label": "TypeChord()",
    "kind": "Method",
    "detail": "Function (TAsyncResult<bool>)",
    "insertText": "TypeChord(FKey Key1, FKey Key2, FKey Key3)"
  },
  {
    "label": "TypeChord()",
    "kind": "Method",
    "detail": "Function (TAsyncResult<bool>)",
    "insertText": "TypeChord(FKey Key1, FKey Key2, TCHAR Character)"
  },
  {
    "label": "Press()",
    "kind": "Method",
    "detail": "Function (TAsyncResult<bool>)",
    "insertText": "Press(TCHAR Character)"
  },
  {
    "label": "Press()",
    "kind": "Method",
    "detail": "Function (TAsyncResult<bool>)",
    "insertText": "Press(FKey Key)"
  },
  {
    "label": "Press()",
    "kind": "Method",
    "detail": "Function (TAsyncResult<bool>)",
    "insertText": "Press(EMouseButtons::Type MouseButton)"
  },
  {
    "label": "PressChord()",
    "kind": "Method",
    "detail": "Function (TAsyncResult<bool>)",
    "insertText": "PressChord(FKey Key1, FKey Key2)"
  },
  {
    "label": "PressChord()",
    "kind": "Method",
    "detail": "Function (TAsyncResult<bool>)",
    "insertText": "PressChord(FKey Key1, TCHAR Character)"
  },
  {
    "label": "PressChord()",
    "kind": "Method",
    "detail": "Function (TAsyncResult<bool>)",
    "insertText": "PressChord(FKey Key1, FKey Key2, FKey Key3)"
  },
  {
    "label": "PressChord()",
    "kind": "Method",
    "detail": "Function (TAsyncResult<bool>)",
    "insertText": "PressChord(FKey Key1, FKey Key2, TCHAR Character)"
  },
  {
    "label": "Release()",
    "kind": "Method",
    "detail": "Function (TAsyncResult<bool>)",
    "insertText": "Release(TCHAR Character)"
  },
  {
    "label": "Release()",
    "kind": "Method",
    "detail": "Function (TAsyncResult<bool>)",
    "insertText": "Release(FKey Key)"
  },
  {
    "label": "Release()",
    "kind": "Method",
    "detail": "Function (TAsyncResult<bool>)",
    "insertText": "Release(EMouseButtons::Type MouseButton)"
  },
  {
    "label": "ReleaseChord()",
    "kind": "Method",
    "detail": "Function (TAsyncResult<bool>)",
    "insertText": "ReleaseChord(FKey Key1, FKey Key2)"
  },
  {
    "label": "ReleaseChord()",
    "kind": "Method",
    "detail": "Function (TAsyncResult<bool>)",
    "insertText": "ReleaseChord(FKey Key1, TCHAR Character)"
  },
  {
    "label": "ReleaseChord()",
    "kind": "Method",
    "detail": "Function (TAsyncResult<bool>)",
    "insertText": "ReleaseChord(FKey Key1, FKey Key2, FKey Key3)"
  },
  {
    "label": "ReleaseChord()",
    "kind": "Method",
    "detail": "Function (TAsyncResult<bool>)",
    "insertText": "ReleaseChord(FKey Key1, FKey Key2, TCHAR Character)"
  },
  {
    "label": "Focus()",
    "kind": "Method",
    "detail": "Function (TAsyncResult<bool>)",
    "insertText": "Focus()"
  },
  {
    "label": "Focus()",
    "kind": "Method",
    "detail": "Function (TAsyncResult<bool>)",
    "insertText": "Focus(uint32 UserIndex)"
  },
  {
    "label": "CanFocus()",
    "kind": "Method",
    "detail": "Function (TAsyncResult<bool>)",
    "insertText": "CanFocus()"
  },
  {
    "label": "IsFocused()",
    "kind": "Method",
    "detail": "Function (TAsyncResult<bool>)",
    "insertText": "IsFocused()"
  },
  {
    "label": "IsFocused()",
    "kind": "Method",
    "detail": "Function (TAsyncResult<bool>)",
    "insertText": "IsFocused(uint32 UserIndex)"
  },
  {
    "label": "HasFocusedDescendants()",
    "kind": "Method",
    "detail": "Function (TAsyncResult<bool>)",
    "insertText": "HasFocusedDescendants()"
  },
  {
    "label": "HasFocusedDescendants()",
    "kind": "Method",
    "detail": "Function (TAsyncResult<bool>)",
    "insertText": "HasFocusedDescendants(uint32 UserIndex)"
  },
  {
    "label": "Exists()",
    "kind": "Method",
    "detail": "Function (TAsyncResult<bool>)",
    "insertText": "Exists()"
  },
  {
    "label": "IsVisible()",
    "kind": "Method",
    "detail": "Function (TAsyncResult<bool>)",
    "insertText": "IsVisible()"
  },
  {
    "label": "IsChecked()",
    "kind": "Method",
    "detail": "Function (TAsyncResult<bool>)",
    "insertText": "IsChecked()"
  },
  {
    "label": "IsInteractable()",
    "kind": "Method",
    "detail": "Function (TAsyncResult<bool>)",
    "insertText": "IsInteractable()"
  },
  {
    "label": "IsScrollable()",
    "kind": "Method",
    "detail": "Function (TAsyncResult<bool>)",
    "insertText": "IsScrollable()"
  },
  {
    "label": "IsScrolledToBeginning()",
    "kind": "Method",
    "detail": "Function (TAsyncResult<bool>)",
    "insertText": "IsScrolledToBeginning()"
  },
  {
    "label": "IsScrolledToEnd()",
    "kind": "Method",
    "detail": "Function (TAsyncResult<bool>)",
    "insertText": "IsScrolledToEnd()"
  },
  {
    "label": "GetAbsolutePosition()",
    "kind": "Method",
    "detail": "Function (TAsyncResult<FVector2D>)",
    "insertText": "GetAbsolutePosition()"
  },
  {
    "label": "GetSize()",
    "kind": "Method",
    "detail": "Function (TAsyncResult<FVector2D>)",
    "insertText": "GetSize()"
  },
  {
    "label": "GetText()",
    "kind": "Method",
    "detail": "Function (TAsyncResult<FText>)",
    "insertText": "GetText()"
  },
  {
    "label": "GetElements()",
    "kind": "Method",
    "detail": "Function (} ; class IAsyncDriverElementCollection { public : TAsyncResult<TArray<TSharedRef<IAsyncDriverElement,ESPMode::ThreadSafe>>>)",
    "insertText": "GetElements()"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (} ; class FEmptyAsyncDriverElementFactory { public : TSharedRef<IAsyncDriverElement,ESPMode::ThreadSafe>)",
    "insertText": "Create()"
  }
]