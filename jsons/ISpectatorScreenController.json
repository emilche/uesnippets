[
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "UTexture",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UTexture"
  },
  {
    "label": "FSpectatorScreenModeTexturePlusEyeLayout",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSpectatorScreenModeTexturePlusEyeLayout"
  },
  {
    "label": "ISpectatorScreenController",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISpectatorScreenController"
  },
  {
    "label": "ISpectatorScreenController()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" Features / IModularFeature . h \" enum class ESpectatorScreenMode : uint8 ; class UTexture ; struct FSpectatorScreenModeTexturePlusEyeLayout ; class ISpectatorScreenController : public IModularFeature { public : ~)",
    "insertText": "ISpectatorScreenController()"
  },
  {
    "label": "GetModularFeatureName()",
    "kind": "Method",
    "detail": "Function (} FName)",
    "insertText": "GetModularFeatureName()"
  },
  {
    "label": "FName()",
    "kind": "Method",
    "detail": "Function (FName FeatureName =)",
    "insertText": "FName(TEXT(\"SpectatorScreenController\"))"
  },
  {
    "label": "GetSpectatorScreenMode()",
    "kind": "Method",
    "detail": "Function (ESpectatorScreenMode)",
    "insertText": "GetSpectatorScreenMode()"
  },
  {
    "label": "SetSpectatorScreenTexture()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSpectatorScreenTexture(UTexture* InTexture)"
  },
  {
    "label": "GetSpectatorScreenTexture()",
    "kind": "Method",
    "detail": "Function (UTexture*)",
    "insertText": "GetSpectatorScreenTexture()"
  },
  {
    "label": "QueueDebugCanvasLayerID()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "QueueDebugCanvasLayerID(int32 LayerID)"
  }
]