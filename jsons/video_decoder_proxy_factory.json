[
  {
    "label": "VideoDecoderProxyFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "VideoDecoderProxyFactory"
  },
  {
    "label": "DecoderProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DecoderProxy"
  },
  {
    "label": "VideoDecoderProxyFactory()",
    "kind": "Method",
    "detail": "Function (# ifndef TEST_VIDEO_DECODER_PROXY_FACTORY_H_ # define TEST_VIDEO_DECODER_PROXY_FACTORY_H_ # include<memory> # include<vector> # include \" api / video_codecs / video_decoder . h \" # include \" api / video_codecs / video_decoder_factory . h \" namespace webrtc { namespace test { class VideoDecoderProxyFactory final : public VideoDecoderFactory { public :)",
    "insertText": "VideoDecoderProxyFactory(VideoDecoder* decoder) : decoder_(decoder)"
  },
  {
    "label": "GetSupportedFormats()",
    "kind": "Method",
    "detail": "Function (} std::vector<SdpVideoFormat>)",
    "insertText": "GetSupportedFormats()"
  },
  {
    "label": "RTC_DCHECK_NOTREACHED()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RTC_DCHECK_NOTREACHED()"
  },
  {
    "label": "DecoderProxy()",
    "kind": "Method",
    "detail": "Function (} private : class DecoderProxy final : public VideoDecoder { public :)",
    "insertText": "DecoderProxy(VideoDecoder* decoder) : decoder_(decoder)"
  },
  {
    "label": "Decode()",
    "kind": "Method",
    "detail": "Function (} private : int32_t)",
    "insertText": "Decode(const EncodedImage& input_image, bool missing_frames, int64_t render_time_ms)"
  },
  {
    "label": "Configure()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "Configure(const Settings& settings)"
  },
  {
    "label": "RegisterDecodeCompleteCallback()",
    "kind": "Method",
    "detail": "Function (} int32_t)",
    "insertText": "RegisterDecodeCompleteCallback(DecodedImageCallback* callback)"
  },
  {
    "label": "Release()",
    "kind": "Method",
    "detail": "Function (} int32_t)",
    "insertText": "Release()"
  },
  {
    "label": "GetDecoderInfo()",
    "kind": "Method",
    "detail": "Function (} DecoderInfo)",
    "insertText": "GetDecoderInfo()"
  },
  {
    "label": "ImplementationName()",
    "kind": "Method",
    "detail": "Function (} const char*)",
    "insertText": "ImplementationName()"
  }
]