[
  {
    "label": "rsa_pss_params_st",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "rsa_pss_params_st"
  },
  {
    "label": "rsa_oaep_params_st",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "rsa_oaep_params_st"
  },
  {
    "label": "RSA_bits()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "RSA_bits(const RSA *rsa)"
  },
  {
    "label": "RSA_size()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "RSA_size(const RSA *rsa)"
  },
  {
    "label": "RSA_security_bits()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "RSA_security_bits(const RSA *rsa)"
  },
  {
    "label": "RSA_set0_key()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "RSA_set0_key(RSA *r, BIGNUM *n, BIGNUM *e, BIGNUM *d)"
  },
  {
    "label": "RSA_set0_factors()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "RSA_set0_factors(RSA *r, BIGNUM *p, BIGNUM *q)"
  },
  {
    "label": "RSA_set0_crt_params()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "RSA_set0_crt_params(RSA *r,BIGNUM *dmp1, BIGNUM *dmq1, BIGNUM *iqmp)"
  },
  {
    "label": "RSA_set0_multi_prime_params()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "RSA_set0_multi_prime_params(RSA *r, BIGNUM *primes[], BIGNUM *exps[],\n                                BIGNUM *coeffs[], int pnum)"
  },
  {
    "label": "RSA_get0_key()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RSA_get0_key(const RSA *r,\n                  const BIGNUM **n, const BIGNUM **e, const BIGNUM **d)"
  },
  {
    "label": "RSA_get0_factors()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RSA_get0_factors(const RSA *r, const BIGNUM **p, const BIGNUM **q)"
  },
  {
    "label": "RSA_get_multi_prime_extra_count()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "RSA_get_multi_prime_extra_count(const RSA *r)"
  },
  {
    "label": "RSA_get0_multi_prime_factors()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "RSA_get0_multi_prime_factors(const RSA *r, const BIGNUM *primes[])"
  },
  {
    "label": "RSA_get0_crt_params()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RSA_get0_crt_params(const RSA *r,\n                         const BIGNUM **dmp1, const BIGNUM **dmq1,\n                         const BIGNUM **iqmp)"
  },
  {
    "label": "RSA_get0_multi_prime_crt_params()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "RSA_get0_multi_prime_crt_params(const RSA *r, const BIGNUM *exps[],\n                                    const BIGNUM *coeffs[])"
  },
  {
    "label": "RSA_clear_flags()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RSA_clear_flags(RSA *r, int flags)"
  },
  {
    "label": "RSA_test_flags()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "RSA_test_flags(const RSA *r, int flags)"
  },
  {
    "label": "RSA_set_flags()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RSA_set_flags(RSA *r, int flags)"
  },
  {
    "label": "RSA_get_version()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "RSA_get_version(RSA *r)"
  },
  {
    "label": "RSA_generate_key_ex()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "RSA_generate_key_ex(RSA *rsa, int bits, BIGNUM *e, BN_GENCB *cb)"
  },
  {
    "label": "RSA_generate_multi_prime_key()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "RSA_generate_multi_prime_key(RSA *rsa, int bits, int primes,\n                                 BIGNUM *e, BN_GENCB *cb)"
  },
  {
    "label": "RSA_X931_derive_ex()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "RSA_X931_derive_ex(RSA *rsa, BIGNUM *p1, BIGNUM *p2, BIGNUM *q1,\n                       BIGNUM *q2, const BIGNUM *Xp1, const BIGNUM *Xp2,\n                       const BIGNUM *Xp, const BIGNUM *Xq1, const BIGNUM *Xq2,\n                       const BIGNUM *Xq, const BIGNUM *e, BN_GENCB *cb)"
  },
  {
    "label": "RSA_X931_generate_key_ex()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "RSA_X931_generate_key_ex(RSA *rsa, int bits, const BIGNUM *e,\n                             BN_GENCB *cb)"
  },
  {
    "label": "RSA_check_key()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "RSA_check_key(const RSA *)"
  },
  {
    "label": "RSA_check_key_ex()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "RSA_check_key_ex(const RSA *, BN_GENCB *cb)"
  },
  {
    "label": "RSA_public_encrypt()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "RSA_public_encrypt(int flen, const unsigned char *from,\n                       unsigned char *to, RSA *rsa, int padding)"
  },
  {
    "label": "RSA_private_encrypt()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "RSA_private_encrypt(int flen, const unsigned char *from,\n                        unsigned char *to, RSA *rsa, int padding)"
  },
  {
    "label": "RSA_public_decrypt()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "RSA_public_decrypt(int flen, const unsigned char *from,\n                       unsigned char *to, RSA *rsa, int padding)"
  },
  {
    "label": "RSA_private_decrypt()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "RSA_private_decrypt(int flen, const unsigned char *from,\n                        unsigned char *to, RSA *rsa, int padding)"
  },
  {
    "label": "RSA_free()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RSA_free(RSA *r)"
  },
  {
    "label": "RSA_up_ref()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "RSA_up_ref(RSA *r)"
  },
  {
    "label": "RSA_flags()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "RSA_flags(const RSA *r)"
  },
  {
    "label": "RSA_set_default_method()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RSA_set_default_method(const RSA_METHOD *meth)"
  },
  {
    "label": "RSA_set_method()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "RSA_set_method(RSA *rsa, const RSA_METHOD *meth)"
  },
  {
    "label": "RSA_pkey_ctx_ctrl()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "RSA_pkey_ctx_ctrl(EVP_PKEY_CTX *ctx, int optype, int cmd, int p1, void *p2)"
  },
  {
    "label": "RSA_print_fp()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "RSA_print_fp(FILE *fp, const RSA *r, int offset)"
  },
  {
    "label": "RSA_print()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "RSA_print(BIO *bp, const RSA *r, int offset)"
  },
  {
    "label": "RSA_sign()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "RSA_sign(int type, const unsigned char *m, unsigned int m_length,\n             unsigned char *sigret, unsigned int *siglen, RSA *rsa)"
  },
  {
    "label": "RSA_verify()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "RSA_verify(int type, const unsigned char *m, unsigned int m_length,\n               const unsigned char *sigbuf, unsigned int siglen, RSA *rsa)"
  },
  {
    "label": "RSA_sign_ASN1_OCTET_STRING()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "RSA_sign_ASN1_OCTET_STRING(int type,\n                               const unsigned char *m, unsigned int m_length,\n                               unsigned char *sigret, unsigned int *siglen,\n                               RSA *rsa)"
  },
  {
    "label": "RSA_verify_ASN1_OCTET_STRING()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "RSA_verify_ASN1_OCTET_STRING(int type, const unsigned char *m,\n                                 unsigned int m_length, unsigned char *sigbuf,\n                                 unsigned int siglen, RSA *rsa)"
  },
  {
    "label": "RSA_blinding_on()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "RSA_blinding_on(RSA *rsa, BN_CTX *ctx)"
  },
  {
    "label": "RSA_blinding_off()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RSA_blinding_off(RSA *rsa)"
  },
  {
    "label": "RSA_padding_add_PKCS1_type_1()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "RSA_padding_add_PKCS1_type_1(unsigned char *to, int tlen,\n                                 const unsigned char *f, int fl)"
  },
  {
    "label": "RSA_padding_check_PKCS1_type_1()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "RSA_padding_check_PKCS1_type_1(unsigned char *to, int tlen,\n                                   const unsigned char *f, int fl,\n                                   int rsa_len)"
  },
  {
    "label": "RSA_padding_add_PKCS1_type_2()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "RSA_padding_add_PKCS1_type_2(unsigned char *to, int tlen,\n                                 const unsigned char *f, int fl)"
  },
  {
    "label": "RSA_padding_check_PKCS1_type_2()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "RSA_padding_check_PKCS1_type_2(unsigned char *to, int tlen,\n                                   const unsigned char *f, int fl,\n                                   int rsa_len)"
  },
  {
    "label": "PKCS1_MGF1()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "PKCS1_MGF1(unsigned char *mask, long len, const unsigned char *seed,\n               long seedlen, const EVP_MD *dgst)"
  },
  {
    "label": "RSA_padding_add_PKCS1_OAEP()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "RSA_padding_add_PKCS1_OAEP(unsigned char *to, int tlen,\n                               const unsigned char *f, int fl,\n                               const unsigned char *p, int pl)"
  },
  {
    "label": "RSA_padding_check_PKCS1_OAEP()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "RSA_padding_check_PKCS1_OAEP(unsigned char *to, int tlen,\n                                 const unsigned char *f, int fl, int rsa_len,\n                                 const unsigned char *p, int pl)"
  },
  {
    "label": "RSA_padding_add_PKCS1_OAEP_mgf1()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "RSA_padding_add_PKCS1_OAEP_mgf1(unsigned char *to, int tlen,\n                                    const unsigned char *from, int flen,\n                                    const unsigned char *param, int plen,\n                                    const EVP_MD *md, const EVP_MD *mgf1md)"
  },
  {
    "label": "RSA_padding_check_PKCS1_OAEP_mgf1()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "RSA_padding_check_PKCS1_OAEP_mgf1(unsigned char *to, int tlen,\n                                      const unsigned char *from, int flen,\n                                      int num, const unsigned char *param,\n                                      int plen, const EVP_MD *md,\n                                      const EVP_MD *mgf1md)"
  },
  {
    "label": "RSA_padding_add_SSLv23()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "RSA_padding_add_SSLv23(unsigned char *to, int tlen,\n                           const unsigned char *f, int fl)"
  },
  {
    "label": "RSA_padding_check_SSLv23()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "RSA_padding_check_SSLv23(unsigned char *to, int tlen,\n                             const unsigned char *f, int fl, int rsa_len)"
  },
  {
    "label": "RSA_padding_add_none()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "RSA_padding_add_none(unsigned char *to, int tlen, const unsigned char *f,\n                         int fl)"
  },
  {
    "label": "RSA_padding_check_none()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "RSA_padding_check_none(unsigned char *to, int tlen,\n                           const unsigned char *f, int fl, int rsa_len)"
  },
  {
    "label": "RSA_padding_add_X931()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "RSA_padding_add_X931(unsigned char *to, int tlen, const unsigned char *f,\n                         int fl)"
  },
  {
    "label": "RSA_padding_check_X931()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "RSA_padding_check_X931(unsigned char *to, int tlen,\n                           const unsigned char *f, int fl, int rsa_len)"
  },
  {
    "label": "RSA_X931_hash_id()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "RSA_X931_hash_id(int nid)"
  },
  {
    "label": "RSA_verify_PKCS1_PSS()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "RSA_verify_PKCS1_PSS(RSA *rsa, const unsigned char *mHash,\n                         const EVP_MD *Hash, const unsigned char *EM,\n                         int sLen)"
  },
  {
    "label": "RSA_padding_add_PKCS1_PSS()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "RSA_padding_add_PKCS1_PSS(RSA *rsa, unsigned char *EM,\n                              const unsigned char *mHash, const EVP_MD *Hash,\n                              int sLen)"
  },
  {
    "label": "RSA_verify_PKCS1_PSS_mgf1()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "RSA_verify_PKCS1_PSS_mgf1(RSA *rsa, const unsigned char *mHash,\n                              const EVP_MD *Hash, const EVP_MD *mgf1Hash,\n                              const unsigned char *EM, int sLen)"
  },
  {
    "label": "RSA_padding_add_PKCS1_PSS_mgf1()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "RSA_padding_add_PKCS1_PSS_mgf1(RSA *rsa, unsigned char *EM,\n                                   const unsigned char *mHash,\n                                   const EVP_MD *Hash, const EVP_MD *mgf1Hash,\n                                   int sLen)"
  },
  {
    "label": "RSA_set_ex_data()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "RSA_set_ex_data(RSA *r, int idx, void *arg)"
  },
  {
    "label": "RSA_meth_free()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RSA_meth_free(RSA_METHOD *meth)"
  },
  {
    "label": "RSA_meth_set1_name()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "RSA_meth_set1_name(RSA_METHOD *meth, const char *name)"
  },
  {
    "label": "RSA_meth_get_flags()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "RSA_meth_get_flags(const RSA_METHOD *meth)"
  },
  {
    "label": "RSA_meth_set_flags()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "RSA_meth_set_flags(RSA_METHOD *meth, int flags)"
  },
  {
    "label": "RSA_meth_set0_app_data()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "RSA_meth_set0_app_data(RSA_METHOD *meth, void *app_data)"
  }
]