[
  {
    "label": "FViewInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FViewInfo"
  },
  {
    "label": "GetRayTracingLightingMissShader()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" ShaderParameters . h \" # include \" ShaderParameterMacros . h \" # include \" SceneRendering . h \" # include \" LightSceneInfo . h \" # include \" RayTracingDefinitions . h \" # include \" RayTracingTypes . h \" # include \" Containers / DynamicRHIResourceArray . h \" # if RHI_RAYTRACING FRHIRayTracingShader*)",
    "insertText": "GetRayTracingLightingMissShader(const FGlobalShaderMap* ShaderMap)"
  },
  {
    "label": "BEGIN_GLOBAL_SHADER_PARAMETER_STRUCT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BEGIN_GLOBAL_SHADER_PARAMETER_STRUCT(FRayTracingLightGrid, RENDERER_API) SHADER_PARAMETER(uint32, SceneLightCount) SHADER_PARAMETER(uint32, SceneInfiniteLightCount) SHADER_PARAMETER(FVector3f, SceneLightsTranslatedBoundMin) SHADER_PARAMETER(FVector3f, SceneLightsTranslatedBoundMax) SHADER_PARAMETER_RDG_BUFFER_SRV(StructuredBuffer<FRTLightingData>, SceneLights) SHADER_PARAMETER_RDG_TEXTURE(Texture2D<uint>, LightGrid) SHADER_PARAMETER_RDG_BUFFER_SRV(Buffer<uint>, LightGridData) SHADER_PARAMETER(unsigned, LightGridResolution) SHADER_PARAMETER(unsigned, LightGridMaxCount) SHADER_PARAMETER(int, LightGridAxis) END_GLOBAL_SHADER_PARAMETER_STRUCT()"
  },
  {
    "label": "RDG_REGISTER_BLACKBOARD_STRUCT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RDG_REGISTER_BLACKBOARD_STRUCT(FRayTracingLightFunctionMap) FRayTracingLightFunctionMap GatherLightFunctionLights(FScene* Scene, const FEngineShowFlags EngineShowFlags, ERHIFeatureLevel::Type InFeatureLevel)"
  },
  {
    "label": "GatherLightFunctionLightsPathTracing()",
    "kind": "Method",
    "detail": "Function (FRayTracingLightFunctionMap)",
    "insertText": "GatherLightFunctionLightsPathTracing(FScene* Scene, const FEngineShowFlags EngineShowFlags, ERHIFeatureLevel::Type InFeatureLevel)"
  },
  {
    "label": "CreateRayTracingLightData()",
    "kind": "Method",
    "detail": "Function (TRDGUniformBufferRef<FRayTracingLightGrid>)",
    "insertText": "CreateRayTracingLightData(FRDGBuilder& GraphBuilder, const FScene* Scene, const FSceneView& View, FGlobalShaderMap* ShaderMap, bool bBuildLightGrid)"
  },
  {
    "label": "BindLightFunctionShaders()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BindLightFunctionShaders(FRHICommandList& RHICmdList, const FScene* Scene, const FRayTracingLightFunctionMap* RayTracingLightFunctionMap, const class FViewInfo& View)"
  },
  {
    "label": "BindLightFunctionShadersPathTracing()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BindLightFunctionShadersPathTracing(FRHICommandList& RHICmdList, const FScene* Scene, const FRayTracingLightFunctionMap* RayTracingLightFunctionMap, const class FViewInfo& View)"
  }
]