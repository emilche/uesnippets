[
  {
    "label": "FileReadStream",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FileReadStream"
  },
  {
    "label": "RAPIDJSON_DIAG_OFF()",
    "kind": "Method",
    "detail": "Function (# ifndef RAPIDJSON_FILEREADSTREAM_H_ # define RAPIDJSON_FILEREADSTREAM_H_ # include \" stream . h \" # include<cstdio> # ifdef __clang__ RAPIDJSON_DIAG_PUSH)",
    "insertText": "RAPIDJSON_DIAG_OFF(padded) RAPIDJSON_DIAG_OFF(unreachable-code) RAPIDJSON_DIAG_OFF(missing-noreturn)"
  },
  {
    "label": "FileReadStream()",
    "kind": "Method",
    "detail": "Function (public : typedef char Ch ;)",
    "insertText": "FileReadStream(std::FILE* fp, char* buffer, size_t bufferSize) : fp_(fp), buffer_(buffer), bufferSize_(bufferSize), bufferLast_(0), current_(buffer_), readCount_(0), count_(0), eof_(false)"
  },
  {
    "label": "RAPIDJSON_ASSERT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RAPIDJSON_ASSERT(fp_ != 0)"
  },
  {
    "label": "RAPIDJSON_ASSERT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RAPIDJSON_ASSERT(bufferSize >= 4)"
  },
  {
    "label": "Read()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Read()"
  },
  {
    "label": "Peek()",
    "kind": "Method",
    "detail": "Function (} Ch)",
    "insertText": "Peek()"
  },
  {
    "label": "Put()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Put(Ch)"
  },
  {
    "label": "RAPIDJSON_ASSERT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RAPIDJSON_ASSERT(false)"
  },
  {
    "label": "Flush()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Flush()"
  },
  {
    "label": "PutBegin()",
    "kind": "Method",
    "detail": "Function (} Ch*)",
    "insertText": "PutBegin()"
  },
  {
    "label": "fread()",
    "kind": "Method",
    "detail": "Function (count_ + = readCount_ ; readCount_ =)",
    "insertText": "fread(buffer_, 1, bufferSize_, fp_)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (bufferLast_ = buffer_ + readCount_ - 1 ; current_ = buffer_ ;)",
    "insertText": "if(readCount_ < bufferSize_)"
  }
]