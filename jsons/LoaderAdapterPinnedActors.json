[
  {
    "label": "AActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AActor"
  },
  {
    "label": "FWorldPartitionActorDesc",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWorldPartitionActorDesc"
  },
  {
    "label": "FWorldPartitionActorDescInstance",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWorldPartitionActorDescInstance"
  },
  {
    "label": "FLoaderAdapterPinnedActors",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLoaderAdapterPinnedActors"
  },
  {
    "label": "FLoaderAdapterPinnedActors()",
    "kind": "Method",
    "detail": "Function (# pragma once # if WITH_EDITOR # include \" WorldPartition / LoaderAdapter / LoaderAdapterActorList . h \" class AActor ; class FWorldPartitionActorDesc ; class FWorldPartitionActorDescInstance ; class FLoaderAdapterPinnedActors : public FLoaderAdapterActorList { public :)",
    "insertText": "FLoaderAdapterPinnedActors(UWorld* InWorld) : FLoaderAdapterActorList(InWorld)"
  },
  {
    "label": "SupportsPinning()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SupportsPinning(AActor* InActor)"
  },
  {
    "label": "PassActorDescFilter()",
    "kind": "Method",
    "detail": "Function (protected : bool)",
    "insertText": "PassActorDescFilter(const FWorldPartitionHandle& ActorHandle)"
  }
]