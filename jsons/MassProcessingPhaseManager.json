[
  {
    "label": "FMassProcessingPhaseManager",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMassProcessingPhaseManager"
  },
  {
    "label": "UMassProcessor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMassProcessor"
  },
  {
    "label": "UMassCompositeProcessor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMassCompositeProcessor"
  },
  {
    "label": "FMassEntityManager",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMassEntityManager"
  },
  {
    "label": "FMassCommandBuffer",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMassCommandBuffer"
  },
  {
    "label": "FMassProcessingPhaseConfig",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMassProcessingPhaseConfig"
  },
  {
    "label": "MASSENTITY_API",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "MASSENTITY_API"
  },
  {
    "label": "FPhaseGraphBuildState",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPhaseGraphBuildState"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / UObjectGlobals . h \" # include \" UObject / Object . h \" # include \" UObject / GCObject . h \" # include \" Engine / EngineBaseTypes . h \" # include \" MassProcessingTypes . h \" # include \" MassProcessor . h \" # include \" MassProcessorDependencySolver . h \" # include \" MassProcessingPhaseManager . generated . h \" struct FMassProcessingPhaseManager ; class UMassProcessor ; class UMassCompositeProcessor ; struct FMassEntityManager ; struct FMassCommandBuffer ; struct FMassProcessingPhaseConfig ;)",
    "insertText": "USTRUCT()"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() UPROPERTY(EditAnywhere, Category = Mass, config)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (# endif } ; struct FMassProcessingPhase : public FTickFunction {)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_OneParam(FOnPhaseEvent, const float)"
  },
  {
    "label": "FMassProcessingPhase()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FMassProcessingPhase()"
  },
  {
    "label": "FMassProcessingPhase()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FMassProcessingPhase(const FMassProcessingPhase& Other)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FMassProcessingPhase&)",
    "insertText": "operator(const FMassProcessingPhase& Other)"
  },
  {
    "label": "ExecuteTick()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "ExecuteTick(float DeltaTime, ELevelTick TickType, ENamedThreads::Type CurrentThread, const FGraphEventRef& MyCompletionGraphEvent)"
  },
  {
    "label": "DiagnosticMessage()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "DiagnosticMessage()"
  },
  {
    "label": "DiagnosticContext()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "DiagnosticContext(bool bDetailed)"
  },
  {
    "label": "OnParallelExecutionDone()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnParallelExecutionDone(const float DeltaTime)"
  },
  {
    "label": "IsConfiguredForParallelMode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsConfiguredForParallelMode()"
  },
  {
    "label": "ConfigureForSingleThreadMode()",
    "kind": "Method",
    "detail": "Function (bRunInParallelMode = true ; } void)",
    "insertText": "ConfigureForSingleThreadMode()"
  },
  {
    "label": "ShouldTick()",
    "kind": "Method",
    "detail": "Function (bRunInParallelMode = false ; } bool)",
    "insertText": "ShouldTick(const ELevelTick TickType)"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (} public : void)",
    "insertText": "Initialize(FMassProcessingPhaseManager& InPhaseManager, const EMassProcessingPhase InPhase, const ETickingGroup InTickGroup, UMassCompositeProcessor& InPhaseProcessor)"
  },
  {
    "label": "AddSupportedTickType()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddSupportedTickType(const ELevelTick TickType)"
  },
  {
    "label": "SupportedTickTypes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SupportedTickTypes(1 << TickType)"
  },
  {
    "label": "RemoveSupportedTickType()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "RemoveSupportedTickType(const ELevelTick TickType)"
  },
  {
    "label": "FMassPhaseProcessorConfigurationHelper()",
    "kind": "Method",
    "detail": "Function (} protected : FMassProcessingPhaseManager ; TObjectPtr<UMassCompositeProcessor> PhaseProcessor = nullptr ; EMassProcessingPhase Phase = EMassProcessingPhase::MAX ; FOnPhaseEvent OnPhaseStart ; FOnPhaseEvent OnPhaseEnd ; private : FMassProcessingPhaseManager* PhaseManager = nullptr ; std::atomic<bool> bIsDuringMassProcessing = false ; bool bRunInParallelMode = false ; uint8 SupportedTickTypes = 0 ; } ; struct FMassPhaseProcessorConfigurationHelper {)",
    "insertText": "FMassPhaseProcessorConfigurationHelper(UMassCompositeProcessor& InOutPhaseProcessor, const FMassProcessingPhaseConfig& InPhaseConfig, UObject& InProcessorOuter, EMassProcessingPhase InPhase) : PhaseProcessor(InOutPhaseProcessor), PhaseConfig(InPhaseConfig), ProcessorOuter(InProcessorOuter), Phase(InPhase)"
  },
  {
    "label": "Configure()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Configure(TArrayView<UMassProcessor* const> DynamicProcessors, EProcessorExecutionFlags InWorldExecutionFlags , const TSharedPtr<FMassEntityManager>& EntityManager = TSharedPtr<FMassEntityManager>() , FMassProcessorDependencySolver::FResult* OutOptionalResult = nullptr)"
  },
  {
    "label": "Configure()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Configure({}, EProcessorExecutionFlags::None, EntityManager, OutOptionalResult)"
  },
  {
    "label": "Configure()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Configure(DynamicProcessors, EProcessorExecutionFlags::None, EntityManager, OutOptionalResult)"
  },
  {
    "label": "FMassProcessingPhaseManager()",
    "kind": "Method",
    "detail": "Function (} } ; struct FMassProcessingPhaseManager : public FGCObject { public :)",
    "insertText": "FMassProcessingPhaseManager(EProcessorExecutionFlags InProcessorExecutionFlags = EProcessorExecutionFlags::None) : ProcessorExecutionFlags(InProcessorExecutionFlags)"
  },
  {
    "label": "FMassProcessingPhaseManager()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FMassProcessingPhaseManager(const FMassProcessingPhaseManager& Other)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FMassProcessingPhaseManager&)",
    "insertText": "operator(const FMassProcessingPhaseManager& Other)"
  },
  {
    "label": "GetEntityManager()",
    "kind": "Method",
    "detail": "Function (const TSharedPtr<FMassEntityManager>&)",
    "insertText": "GetEntityManager()"
  },
  {
    "label": "GetOnPhaseStart()",
    "kind": "Method",
    "detail": "Function (} FMassProcessingPhase::FOnPhaseEvent&)",
    "insertText": "GetOnPhaseStart(const EMassProcessingPhase Phase)"
  },
  {
    "label": "GetOnPhaseEnd()",
    "kind": "Method",
    "detail": "Function (} FMassProcessingPhase::FOnPhaseEvent&)",
    "insertText": "GetOnPhaseEnd(const EMassProcessingPhase Phase)"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Initialize(UObject& InOwner, TConstArrayView<FMassProcessingPhaseConfig> ProcessingPhasesConfig, const FString& DependencyGraphFileName = TEXT(\"\"))"
  },
  {
    "label": "Deinitialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Deinitialize()"
  },
  {
    "label": "TriggerPhase()",
    "kind": "Method",
    "detail": "Function (const FGraphEventRef&)",
    "insertText": "TriggerPhase(const EMassProcessingPhase Phase, const float DeltaTime, const FGraphEventRef& MyCompletionGraphEvent)"
  },
  {
    "label": "Start()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Start(UWorld& World)"
  },
  {
    "label": "Start()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Start(const TSharedPtr<FMassEntityManager>& InEntityManager)"
  },
  {
    "label": "Stop()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Stop()"
  },
  {
    "label": "IsRunning()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsRunning()"
  },
  {
    "label": "GetName()",
    "kind": "Method",
    "detail": "Function (} FString)",
    "insertText": "GetName()"
  },
  {
    "label": "RegisterDynamicProcessor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterDynamicProcessor(UMassProcessor& Processor)"
  },
  {
    "label": "UnregisterDynamicProcessor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterDynamicProcessor(UMassProcessor& Processor)"
  },
  {
    "label": "AddReferencedObjects()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "AddReferencedObjects(FReferenceCollector& Collector)"
  },
  {
    "label": "GetReferencerName()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetReferencerName()"
  },
  {
    "label": "EnableTickFunctions()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "EnableTickFunctions(const UWorld& World)"
  },
  {
    "label": "CreatePhases()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreatePhases()"
  },
  {
    "label": "OnPhaseStart()",
    "kind": "Method",
    "detail": "Function (FMassProcessingPhase ; void)",
    "insertText": "OnPhaseStart(const FMassProcessingPhase& Phase)"
  },
  {
    "label": "OnPhaseEnd()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPhaseEnd(FMassProcessingPhase& Phase)"
  },
  {
    "label": "OnNewArchetype()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnNewArchetype(const FMassArchetypeHandle& NewArchetype)"
  },
  {
    "label": "ProcessingPhases()",
    "kind": "Method",
    "detail": "Function (protected : struct FPhaseGraphBuildState { FMassProcessorDependencySolver::FResult LastResult ; bool bNewArchetypes = true ; bool bProcessorsNeedRebuild = true ; bool bInitialized = false ; } ; FMassProcessingPhase)",
    "insertText": "ProcessingPhases(uint8)"
  },
  {
    "label": "ProcessingGraphBuildStates()",
    "kind": "Method",
    "detail": "Function (FPhaseGraphBuildState)",
    "insertText": "ProcessingGraphBuildStates(uint8)"
  }
]