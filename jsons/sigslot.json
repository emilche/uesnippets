[
  {
    "label": "single_threaded",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "single_threaded"
  },
  {
    "label": "multi_threaded_global",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "multi_threaded_global"
  },
  {
    "label": "multi_threaded_local",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "multi_threaded_local"
  },
  {
    "label": "multi_threaded_global",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "multi_threaded_global"
  },
  {
    "label": "multi_threaded_local",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "multi_threaded_local"
  },
  {
    "label": "mt_policy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "mt_policy"
  },
  {
    "label": "lock_block",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "lock_block"
  },
  {
    "label": "_signal_base_interface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_signal_base_interface"
  },
  {
    "label": "has_slots_interface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "has_slots_interface"
  },
  {
    "label": "_signal_base_interface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_signal_base_interface"
  },
  {
    "label": "_opaque_connection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_opaque_connection"
  },
  {
    "label": "mt_policy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "mt_policy"
  },
  {
    "label": "_signal_base",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_signal_base"
  },
  {
    "label": "mt_policy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "mt_policy"
  },
  {
    "label": "has_slots",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "has_slots"
  },
  {
    "label": "mt_policy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "mt_policy"
  },
  {
    "label": "signal_with_thread_policy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "signal_with_thread_policy"
  },
  {
    "label": "desttype",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "desttype"
  },
  {
    "label": "lock()",
    "kind": "Method",
    "detail": "Function (lock_block<mt_policy>)",
    "insertText": "lock(this)"
  },
  {
    "label": "lock()",
    "kind": "Method",
    "detail": "Function (lock_block<mt_policy>)",
    "insertText": "lock(this)"
  },
  {
    "label": "lock()",
    "kind": "Method",
    "detail": "Function (lock_block<mt_policy>)",
    "insertText": "lock(this)"
  },
  {
    "label": "lock()",
    "kind": "Method",
    "detail": "Function (lock_block<mt_policy>)",
    "insertText": "lock(this)"
  },
  {
    "label": "lock()",
    "kind": "Method",
    "detail": "Function (lock_block<mt_policy>)",
    "insertText": "lock(this)"
  },
  {
    "label": "lock()",
    "kind": "Method",
    "detail": "Function (lock_block<mt_policy>)",
    "insertText": "lock(self)"
  },
  {
    "label": "lock()",
    "kind": "Method",
    "detail": "Function (lock_block<mt_policy>)",
    "insertText": "lock(self)"
  },
  {
    "label": "lock()",
    "kind": "Method",
    "detail": "Function (lock_block<mt_policy>)",
    "insertText": "lock(this)"
  },
  {
    "label": "lock()",
    "kind": "Method",
    "detail": "Function (lock_block<mt_policy>)",
    "insertText": "lock(self)"
  },
  {
    "label": "lock()",
    "kind": "Method",
    "detail": "Function (lock_block<mt_policy>)",
    "insertText": "lock(self)"
  },
  {
    "label": "lock()",
    "kind": "Method",
    "detail": "Function (lock_block<mt_policy>)",
    "insertText": "lock(self)"
  },
  {
    "label": "lock()",
    "kind": "Method",
    "detail": "Function (lock_block<mt_policy>)",
    "insertText": "lock(this)"
  },
  {
    "label": "lock()",
    "kind": "Method",
    "detail": "Function (lock_block<mt_policy>)",
    "insertText": "lock(this)"
  }
]