[
  {
    "label": "FULangConversionUtils",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FULangConversionUtils"
  },
  {
    "label": "TuLangSymbolKeyFuncs",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TuLangSymbolKeyFuncs"
  },
  {
    "label": "FStringToULangStr()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Containers / Set . h \" # include \" Containers / StringConv . h \" # include \" Containers / StringView . h \" # include \" Containers / Utf8String . h \" # include \" AutoRTFM / AutoRTFM . h \" # include \" uLang / Common / Text / UTF8String . h \" # include \" uLang / Common / Text / Symbol . h \" # include \" uLang / Common / Text / TextRange . h \" class FULangConversionUtils { public : uLang::CUTF8String)",
    "insertText": "FStringToULangStr(const FString& String)"
  },
  {
    "label": "UFT8String()",
    "kind": "Method",
    "detail": "Function (FTCHARToUTF8)",
    "insertText": "UFT8String(*String, String.Len())"
  },
  {
    "label": "UTF8CStr()",
    "kind": "Method",
    "detail": "Function (const uLang::UTF8Char*)",
    "insertText": "UTF8CStr(const uLang::UTF8Char*)UFT8String.Get()"
  },
  {
    "label": "FUtf8StringToULangStr()",
    "kind": "Method",
    "detail": "Function (} uLang::CUTF8String)",
    "insertText": "FUtf8StringToULangStr(const FUtf8String& String)"
  },
  {
    "label": "TCharToULangStr()",
    "kind": "Method",
    "detail": "Function (} uLang::CUTF8String)",
    "insertText": "TCharToULangStr(const TCHAR* Text)"
  },
  {
    "label": "UFT8String()",
    "kind": "Method",
    "detail": "Function (FTCHARToUTF8)",
    "insertText": "UFT8String(Text)"
  },
  {
    "label": "FNameToULangStr()",
    "kind": "Method",
    "detail": "Function (} uLang::CUTF8String)",
    "insertText": "FNameToULangStr(const FName& NameId)"
  },
  {
    "label": "FNameToULangSymbol()",
    "kind": "Method",
    "detail": "Function (} uLang::CSymbol)",
    "insertText": "FNameToULangSymbol(const FName& NameId, uLang::CSymbolTable& uLangSymTable)"
  },
  {
    "label": "TCharToULangSymbol()",
    "kind": "Method",
    "detail": "Function (} uLang::CSymbol)",
    "insertText": "TCharToULangSymbol(const TCHAR* Text, uLang::CSymbolTable& uLangSymTable)"
  },
  {
    "label": "FStringToULangSymbol()",
    "kind": "Method",
    "detail": "Function (} uLang::CSymbol)",
    "insertText": "FStringToULangSymbol(const FString& String, uLang::CSymbolTable& uLangSymTable)"
  },
  {
    "label": "UTF8Start()",
    "kind": "Method",
    "detail": "Function (const uLang::UTF8Char*)",
    "insertText": "UTF8Start(const uLang::UTF8Char*)UFT8String.Get()"
  },
  {
    "label": "StrView()",
    "kind": "Method",
    "detail": "Function (uLang::CUTF8StringView)",
    "insertText": "StrView(UTF8Start, UTF8Start + UFT8String.Length())"
  },
  {
    "label": "FUtf8StringViewToULangStringView()",
    "kind": "Method",
    "detail": "Function (} uLang::CUTF8StringView)",
    "insertText": "FUtf8StringViewToULangStringView(const FUtf8StringView& StringView)"
  },
  {
    "label": "FUtf8StringViewToULangString()",
    "kind": "Method",
    "detail": "Function (} uLang::CUTF8String)",
    "insertText": "FUtf8StringViewToULangString(const FUtf8StringView& StringView)"
  },
  {
    "label": "ULangStrToFString()",
    "kind": "Method",
    "detail": "Function (} FString)",
    "insertText": "ULangStrToFString(const uLang::CUTF8String& ULangString)"
  },
  {
    "label": "ULangStrToFUtf8String()",
    "kind": "Method",
    "detail": "Function (} FUtf8String)",
    "insertText": "ULangStrToFUtf8String(const uLang::CUTF8String& ULangString)"
  },
  {
    "label": "ULangStrToTString()",
    "kind": "Method",
    "detail": "Function (} template<CharType> TString<CharType>)",
    "insertText": "ULangStrToTString(const uLang::CUTF8String& ULangString)"
  },
  {
    "label": "TCHAR()",
    "kind": "Method",
    "detail": "Function (template<> TString<TCHAR> ULangStrToTString<)",
    "insertText": "TCHAR(const uLang::CUTF8String& ULangString)"
  },
  {
    "label": "UTF8CHAR()",
    "kind": "Method",
    "detail": "Function (} template<> TString<UTF8CHAR> ULangStrToTString<)",
    "insertText": "UTF8CHAR(const uLang::CUTF8String& ULangString)"
  },
  {
    "label": "ULangStrToFName()",
    "kind": "Method",
    "detail": "Function (} FName)",
    "insertText": "ULangStrToFName(const uLang::CUTF8String& ULangString)"
  },
  {
    "label": "FName()",
    "kind": "Method",
    "detail": "Function (FName Result ; UE_AUTORTFM_OPEN { Result =)",
    "insertText": "FName(UTF8_TO_TCHAR(ULangString.AsUTF8()))"
  },
  {
    "label": "ULangStringViewToFUtf8StringView()",
    "kind": "Method",
    "detail": "Function (} ; return Result ; } FUtf8StringView)",
    "insertText": "ULangStringViewToFUtf8StringView(const uLang::CUTF8StringView& ULangStringView)"
  },
  {
    "label": "ULangStrToFUtf8StringView()",
    "kind": "Method",
    "detail": "Function (} FUtf8StringView)",
    "insertText": "ULangStrToFUtf8StringView(const uLang::CUTF8String& ULangString)"
  },
  {
    "label": "UeToULangFunctionName()",
    "kind": "Method",
    "detail": "Function (} FString)",
    "insertText": "UeToULangFunctionName(const FString& UEFunctionName)"
  },
  {
    "label": "GetKeyHash()",
    "kind": "Method",
    "detail": "Function (} uint32)",
    "insertText": "GetKeyHash(const uLang::CSymbol& Key)"
  },
  {
    "label": "GetTypeHash()",
    "kind": "Method",
    "detail": "Function (} } ; namespace uLang { uint32)",
    "insertText": "GetTypeHash(const STextPosition& TextPosition)"
  }
]