[
  {
    "label": "FAutomationReportManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAutomationReportManager"
  },
  {
    "label": "FAutomationReportManager()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" IAutomationReport . h \" class FAutomationReportManager { public :)",
    "insertText": "FAutomationReportManager()"
  },
  {
    "label": "Empty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Empty()"
  },
  {
    "label": "ClustersUpdated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClustersUpdated(const int32 NumClusters)"
  },
  {
    "label": "ResetForExecution()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetForExecution(const int32 NumTestPasses)"
  },
  {
    "label": "StopRunningTests()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StopRunningTests()"
  },
  {
    "label": "GetNextReportToExecute()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<IAutomationReport>)",
    "insertText": "GetNextReportToExecute(bool& bOutAllTestsComplete, const int32 ClusterIndex, const int32 PassIndex, const int32 NumDevicesInCluster)"
  },
  {
    "label": "GetEnabledTestReports()",
    "kind": "Method",
    "detail": "Function (TArray<TSharedPtr<IAutomationReport>>)",
    "insertText": "GetEnabledTestReports()"
  },
  {
    "label": "EnsureReportExists()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<IAutomationReport>)",
    "insertText": "EnsureReportExists(FAutomationTestInfo& TestInfo, const int32 ClusterIndex, const int32 NumPasses)"
  },
  {
    "label": "SetFilter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFilter(TSharedPtr< AutomationFilterCollection > InFilter)"
  },
  {
    "label": "GetFilteredReports()",
    "kind": "Method",
    "detail": "Function (TArray<TSharedPtr<IAutomationReport>>&)",
    "insertText": "GetFilteredReports()"
  },
  {
    "label": "SetVisibleTestsEnabled()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetVisibleTestsEnabled(const bool bEnabled)"
  },
  {
    "label": "GetEnabledTestsNum()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetEnabledTestsNum()"
  },
  {
    "label": "GetEnabledTestNames()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetEnabledTestNames(TArray<FString>& OutEnabledTestNames)"
  },
  {
    "label": "GetFilteredTestNames()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetFilteredTestNames(TArray<FString>& OutFilteredTestNames)"
  },
  {
    "label": "SetEnabledTests()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetEnabledTests(const TArray<FString>& EnabledTests)"
  },
  {
    "label": "SetCurrentTestPass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCurrentTestPass(int32 PassIndex)"
  },
  {
    "label": "ExportReport()",
    "kind": "Method",
    "detail": "Function (CurrentTestPass = PassIndex ; } const bool)",
    "insertText": "ExportReport(uint32 FileExportTypeMask, const int32 NumDeviceClusters)"
  },
  {
    "label": "AddResultReport()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "AddResultReport(TSharedPtr< IAutomationReport > InReport, const int32 NumDeviceClusters, TArray< FString >& ResultsLog, uint32 FileExportTypeMask)"
  },
  {
    "label": "FindLeafReport()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FindLeafReport(TSharedPtr< IAutomationReport > InReport, const int32 NumDeviceClusters, TArray< FString >& ResultsLog, uint32 FileExportTypeMask)"
  }
]