[
  {
    "label": "FString",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FString"
  },
  {
    "label": "FPrivateTextFormatArguments",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPrivateTextFormatArguments"
  },
  {
    "label": "FTextFormatArgumentModifier_PluralForm",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTextFormatArgumentModifier_PluralForm"
  },
  {
    "label": "FTextFormatArgumentModifier_GenderForm",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTextFormatArgumentModifier_GenderForm"
  },
  {
    "label": "FTextFormatArgumentModifier_HangulPostPositions",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTextFormatArgumentModifier_HangulPostPositions"
  },
  {
    "label": "ESuffixMode",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ESuffixMode"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<ITextFormatArgumentModifier>)",
    "insertText": "Create(const ETextPluralType InPluralType, const FTextFormatString& InArgsString, const FTextFormatPatternDefinitionConstRef& InPatternDef)"
  },
  {
    "label": "FTextFormatArgumentModifier_PluralForm()",
    "kind": "Method",
    "detail": "Function (private:)",
    "insertText": "FTextFormatArgumentModifier_PluralForm(const ETextPluralType InPluralType, const TSortedMap<FTextFormatString, FTextFormat>& InPluralForms, const int32 InLongestPluralFormStringLen, const bool InDoPluralFormsUseFormatArgs)"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<ITextFormatArgumentModifier>)",
    "insertText": "Create(const FTextFormatString& InArgsString, const FTextFormatPatternDefinitionConstRef& InPatternDef)"
  },
  {
    "label": "FTextFormatArgumentModifier_GenderForm()",
    "kind": "Method",
    "detail": "Function (private:)",
    "insertText": "FTextFormatArgumentModifier_GenderForm(FTextFormat&& InMasculineForm, FTextFormat&& InFeminineForm, FTextFormat&& InNeuterForm, const int32 InLongestGenderFormStringLen, const bool InDoGenderFormsUseFormatArgs)"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<ITextFormatArgumentModifier>)",
    "insertText": "Create(const FTextFormatString& InArgsString)"
  }
]