[
  {
    "label": "IPropertyHandle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPropertyHandle"
  },
  {
    "label": "FTextJustifyCustomization",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTextJustifyCustomization"
  },
  {
    "label": "IPropertyTypeCustomization",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPropertyTypeCustomization"
  },
  {
    "label": "FDetailWidgetRow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDetailWidgetRow"
  },
  {
    "label": "IDetailChildrenBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDetailChildrenBuilder"
  },
  {
    "label": "MakeInstance()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Framework / Text / TextLayout . h \" # include \" IPropertyTypeCustomization . h \" # include \" Templates / SharedPointer . h \" class IPropertyHandle ; class FTextJustifyCustomization : public IPropertyTypeCustomization { public : TSharedRef<class IPropertyTypeCustomization>)",
    "insertText": "MakeInstance()"
  },
  {
    "label": "FTextJustifyCustomization()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FTextJustifyCustomization()"
  },
  {
    "label": "CustomizeHeader()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "CustomizeHeader(TSharedRef<IPropertyHandle> PropertyHandle, class FDetailWidgetRow& HeaderRow, IPropertyTypeCustomizationUtils& CustomizationUtils)"
  },
  {
    "label": "CustomizeChildren()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CustomizeChildren(TSharedRef<IPropertyHandle> PropertyHandle, class IDetailChildrenBuilder& ChildBuilder, IPropertyTypeCustomizationUtils& CustomizationUtils)"
  },
  {
    "label": "OnJustificationChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnJustificationChanged(ETextJustify::Type NewState, TSharedRef<IPropertyHandle> PropertyHandle)"
  },
  {
    "label": "GetCurrentJustification()",
    "kind": "Method",
    "detail": "Function (ETextJustify::Type)",
    "insertText": "GetCurrentJustification(TSharedRef<IPropertyHandle> PropertyHandle)"
  }
]