[
  {
    "label": "ssl_session_st",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ssl_session_st"
  },
  {
    "label": "OpenSSLSessionCache",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "OpenSSLSessionCache"
  },
  {
    "label": "OpenSSLSessionCache()",
    "kind": "Method",
    "detail": "Function (# ifndef RTC_BASE_OPENSSL_SESSION_CACHE_H_ # define RTC_BASE_OPENSSL_SESSION_CACHE_H_ # include<openssl / ossl_typ . h> # include<map> # include<string> # include \" absl / strings / string_view . h \" # include \" rtc_base / ssl_stream_adapter . h \" # include \" rtc_base / string_utils . h \" # ifndef OPENSSL_IS_BORINGSSL typedef struct ssl_session_st SSL_SESSION ; # endif namespace rtc { class OpenSSLSessionCache final { public :)",
    "insertText": "OpenSSLSessionCache(SSLMode ssl_mode, SSL_CTX* ssl_ctx)"
  },
  {
    "label": "OpenSSLSessionCache()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "OpenSSLSessionCache()"
  },
  {
    "label": "OpenSSLSessionCache()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OpenSSLSessionCache(const OpenSSLSessionCache&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (OpenSSLSessionCache&)",
    "insertText": "operator(const OpenSSLSessionCache&)"
  },
  {
    "label": "LookupSession()",
    "kind": "Method",
    "detail": "Function (SSL_SESSION*)",
    "insertText": "LookupSession(absl::string_view hostname)"
  },
  {
    "label": "AddSession()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddSession(absl::string_view hostname, SSL_SESSION* session)"
  },
  {
    "label": "GetSSLContext()",
    "kind": "Method",
    "detail": "Function (SSL_CTX*)",
    "insertText": "GetSSLContext()"
  },
  {
    "label": "GetSSLMode()",
    "kind": "Method",
    "detail": "Function (SSLMode)",
    "insertText": "GetSSLMode()"
  }
]