[
  {
    "label": "FTlsAutoCleanup",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTlsAutoCleanup"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "TTlsAutoCleanupValue",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TTlsAutoCleanupValue"
  },
  {
    "label": "FTlsAutoCleanup()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" class FTlsAutoCleanup { public : ~)",
    "insertText": "FTlsAutoCleanup()"
  },
  {
    "label": "Register()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Register()"
  },
  {
    "label": "TTlsAutoCleanupValue()",
    "kind": "Method",
    "detail": "Function (} ; template<class T> class TTlsAutoCleanupValue : public FTlsAutoCleanup { public :)",
    "insertText": "TTlsAutoCleanupValue(const T& InValue) : Value(InValue)"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (} T)",
    "insertText": "Get()"
  },
  {
    "label": "Set()",
    "kind": "Method",
    "detail": "Function (Value = InValue ; } void)",
    "insertText": "Set(T&& InValue)"
  },
  {
    "label": "MoveTemp()",
    "kind": "Method",
    "detail": "Function (Value =)",
    "insertText": "MoveTemp(InValue)"
  }
]