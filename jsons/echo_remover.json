[
  {
    "label": "EchoRemover",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "EchoRemover"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_AUDIO_PROCESSING_AEC3_ECHO_REMOVER_H_ # define MODULES_AUDIO_PROCESSING_AEC3_ECHO_REMOVER_H_ # include<vector> # include \" absl / types / optional . h \" # include \" api / audio / echo_canceller3_config . h \" # include \" api / audio / echo_control . h \" # include \" modules / audio_processing / aec3 / block . h \" # include \" modules / audio_processing / aec3 / delay_estimate . h \" # include \" modules / audio_processing / aec3 / echo_path_variability . h \" # include \" modules / audio_processing / aec3 / render_buffer . h \" namespace webrtc { class EchoRemover { public : EchoRemover*)",
    "insertText": "Create(const EchoCanceller3Config& config, int sample_rate_hz, size_t num_render_channels, size_t num_capture_channels)"
  },
  {
    "label": "EchoRemover()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "EchoRemover()"
  },
  {
    "label": "GetMetrics()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetMetrics(EchoControl::Metrics* metrics)"
  },
  {
    "label": "ProcessCapture()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessCapture(EchoPathVariability echo_path_variability, bool capture_signal_saturation, const absl::optional<DelayEstimate>& external_delay, RenderBuffer* render_buffer, Block* linear_output, Block* capture)"
  },
  {
    "label": "UpdateEchoLeakageStatus()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateEchoLeakageStatus(bool leakage_detected)"
  },
  {
    "label": "SetCaptureOutputUsage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCaptureOutputUsage(bool capture_output_used)"
  }
]