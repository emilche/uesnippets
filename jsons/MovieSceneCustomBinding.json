[
  {
    "label": "FSharedPlaybackState",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSharedPlaybackState"
  },
  {
    "label": "UMovieSceneSequence",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieSceneSequence"
  },
  {
    "label": "UMovieScene",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieScene"
  },
  {
    "label": "FGuid",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGuid"
  },
  {
    "label": "FMovieSceneBindingResolveParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneBindingResolveParams"
  },
  {
    "label": "FSlateBrush",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSlateBrush"
  },
  {
    "label": "FMovieSceneBindingReference",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneBindingReference"
  },
  {
    "label": "UMovieSceneSpawnableBindingBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieSceneSpawnableBindingBase"
  },
  {
    "label": "MOVIESCENE_API",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "MOVIESCENE_API"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" MovieSceneSequenceID . h \" # include \" MovieSceneBindingProxy . h \" # include \" Textures / SlateIcon . h \" # include \" MovieSceneCustomBinding . generated . h \" namespace UE { namespace MovieScene { struct FSharedPlaybackState ; } } class UMovieSceneSequence ; class UMovieScene ; struct FGuid ; struct FMovieSceneBindingResolveParams ; struct FSlateBrush ; struct FMovieSceneBindingReference ; class UMovieSceneSpawnableBindingBase ;)",
    "insertText": "USTRUCT(BlueprintType)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() UPROPERTY(EditAnywhere, BlueprintReadWrite, Category=\"General\")"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() UPROPERTY(EditAnywhere, BlueprintReadWrite, Category=\"Default\")"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "UCLASS(abstract, DefaultToInstanced, EditInlineNew)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "GENERATED_BODY()"
  },
  {
    "label": "WillSpawnObject()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "WillSpawnObject(TSharedRef<const UE::MovieScene::FSharedPlaybackState> SharedPlaybackState)"
  },
  {
    "label": "CreateNewCustomBinding()",
    "kind": "Method",
    "detail": "Function (UMovieSceneCustomBinding*)",
    "insertText": "CreateNewCustomBinding(UObject* SourceObject, UMovieScene& OwnerMovieScene) PURE_VIRTUAL(UMovieSceneCustomBinding::CreateNewCustomBinding, return nullptr;)"
  },
  {
    "label": "GetDesiredBindingName()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetDesiredBindingName()"
  },
  {
    "label": "AsSpawnable()",
    "kind": "Method",
    "detail": "Function (} const UMovieSceneSpawnableBindingBase*)",
    "insertText": "AsSpawnable(TSharedRef<const UE::MovieScene::FSharedPlaybackState> SharedPlaybackState)"
  },
  {
    "label": "GetBoundObjectClass()",
    "kind": "Method",
    "detail": "Function (} UClass*)",
    "insertText": "GetBoundObjectClass() const PURE_VIRTUAL(UMovieSceneCustomBinding::GetBoundObjectClass, return UObject::StaticClass();)"
  },
  {
    "label": "SetupDefaults()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR void)",
    "insertText": "SetupDefaults(UObject* SpawnedObject, FGuid ObjectBindingId, UMovieScene& OwnerMovieScene)"
  },
  {
    "label": "GetBindingTrackCustomIconOverlay()",
    "kind": "Method",
    "detail": "Function (} FSlateIcon)",
    "insertText": "GetBindingTrackCustomIconOverlay()"
  },
  {
    "label": "GetBindingTrackIconTooltip()",
    "kind": "Method",
    "detail": "Function (} FText)",
    "insertText": "GetBindingTrackIconTooltip()"
  },
  {
    "label": "SupportsConversionFromBinding()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "SupportsConversionFromBinding(const FMovieSceneBindingReference& BindingReference, const UObject* SourceObject)"
  },
  {
    "label": "CanConvertToPossessable()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanConvertToPossessable(const FGuid& Guid, FMovieSceneSequenceIDRef TemplateID, TSharedRef<const UE::MovieScene::FSharedPlaybackState> SharedPlaybackState)"
  }
]