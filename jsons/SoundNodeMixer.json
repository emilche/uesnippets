[
  {
    "label": "FAudioDevice",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAudioDevice"
  },
  {
    "label": "FActiveSound",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FActiveSound"
  },
  {
    "label": "FSoundParseParameters",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSoundParseParameters"
  },
  {
    "label": "FWaveInstance",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FWaveInstance"
  },
  {
    "label": "USoundNodeMixer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USoundNodeMixer"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" Sound / SoundNode . h \" # include \" SoundNodeMixer . generated . h \" class FAudioDevice ; struct FActiveSound ; struct FSoundParseParameters ; struct FWaveInstance ;)",
    "insertText": "UCLASS(hidecategories=Object, editinlinenew, MinimalAPI, meta=( DisplayName=\"Mixer\" ))"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() UPROPERTY(EditAnywhere, export, editfixedsize, Category=Mixer)"
  },
  {
    "label": "ParseNodes()",
    "kind": "Method",
    "detail": "Function (public : void)",
    "insertText": "ParseNodes(FAudioDevice* AudioDevice, const UPTRINT NodeWaveInstanceHash, FActiveSound& ActiveSound, const FSoundParseParameters& ParseParams, TArray<FWaveInstance*>& WaveInstances)"
  },
  {
    "label": "GetMaxChildNodes()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetMaxChildNodes()"
  },
  {
    "label": "InsertChildNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InsertChildNode(int32 Index)"
  },
  {
    "label": "RemoveChildNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveChildNode(int32 Index)"
  },
  {
    "label": "SetChildNodes()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR void)",
    "insertText": "SetChildNodes(TArray<USoundNode*>& InChildNodes)"
  }
]