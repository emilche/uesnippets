[
  {
    "label": "UScrollBar",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UScrollBar"
  },
  {
    "label": "SScrollBar",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SScrollBar"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" Styling / SlateTypes . h \" # include \" Widgets / SWidget . h \" # include \" Widgets / Layout / SScrollBar . h \" # include \" Components / Widget . h \" # include \" ScrollBar . generated . h \")",
    "insertText": "UCLASS(Experimental, MinimalAPI)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() public: UE_DEPRECATED(5.2, \"Direct access to WidgetStyle is deprecated. Please use the getter or setter.\") UPROPERTY(EditAnywhere, BlueprintReadWrite, Getter, Setter, Category=\"Style\", meta=( DisplayName=\"Style\" ))"
  },
  {
    "label": "SynchronizeProperties()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SynchronizeProperties()"
  },
  {
    "label": "ReleaseSlateResources()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseSlateResources(bool bReleaseChildren)"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITORONLY_DATA void)",
    "insertText": "Serialize(FArchive& Ar)"
  },
  {
    "label": "GetPaletteCategory()",
    "kind": "Method",
    "detail": "Function (# endif # if WITH_EDITOR const FText)",
    "insertText": "GetPaletteCategory()"
  },
  {
    "label": "GetWidgetStyle()",
    "kind": "Method",
    "detail": "Function (# endif const FScrollBarStyle&)",
    "insertText": "GetWidgetStyle()"
  },
  {
    "label": "SetWidgetStyle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetWidgetStyle(const FScrollBarStyle& InWidgetStyle)"
  },
  {
    "label": "IsAlwaysShowScrollbar()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsAlwaysShowScrollbar()"
  },
  {
    "label": "SetAlwaysShowScrollbar()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAlwaysShowScrollbar(bool bNewValue)"
  },
  {
    "label": "IsAlwaysShowScrollbarTrack()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsAlwaysShowScrollbarTrack()"
  },
  {
    "label": "SetAlwaysShowScrollbarTrack()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAlwaysShowScrollbarTrack(bool bNewValue)"
  },
  {
    "label": "GetOrientation()",
    "kind": "Method",
    "detail": "Function (EOrientation)",
    "insertText": "GetOrientation()"
  },
  {
    "label": "GetThickness()",
    "kind": "Method",
    "detail": "Function (FVector2D)",
    "insertText": "GetThickness()"
  },
  {
    "label": "SetThickness()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetThickness(const FVector2D& InThickness)"
  },
  {
    "label": "GetPadding()",
    "kind": "Method",
    "detail": "Function (FMargin)",
    "insertText": "GetPadding()"
  },
  {
    "label": "SetPadding()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPadding(const FMargin& InPadding)"
  },
  {
    "label": "RebuildWidget()",
    "kind": "Method",
    "detail": "Function (protected : TSharedPtr<class SScrollBar> MyScrollBar ; protected : TSharedRef<SWidget>)",
    "insertText": "RebuildWidget()"
  },
  {
    "label": "InitOrientation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitOrientation(EOrientation InOrientation)"
  }
]