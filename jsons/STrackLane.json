[
  {
    "label": "FPaintArgs",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPaintArgs"
  },
  {
    "label": "FSlateWindowElementList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateWindowElementList"
  },
  {
    "label": "SOutlinerView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SOutlinerView"
  },
  {
    "label": "STrackAreaView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "STrackAreaView"
  },
  {
    "label": "SEQUENCERCORE_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SEQUENCERCORE_API"
  },
  {
    "label": "FSlot",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSlot"
  },
  {
    "label": "FDragParameters",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDragParameters"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Widgets / SPanel . h \" # include \" Layout / Children . h \" # include \" MVVM / Extensions / ITrackAreaExtension . h \" # include \" MVVM / Extensions / ITrackLaneExtension . h \" # include \" MVVM / Extensions / IOutlinerExtension . h \" class FPaintArgs ; class FSlateWindowElementList ; namespace UE { namespace Sequencer { class SOutlinerView ; class STrackAreaView ; class STrackLane : public SPanel { public :)",
    "insertText": "SLATE_BEGIN_ARGS(STrackLane)"
  },
  {
    "label": "SLATE_END_ARGS()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_END_ARGS() STrackLane()"
  },
  {
    "label": "STrackLane()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "STrackLane()"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct(const FArguments& InArgs, TWeakPtr<STrackAreaView> InTrackAreaView, TWeakViewModelPtr<IOutlinerExtension> InWeakOutlinerItem, TSharedPtr<STrackLane> InParentLane, const FTrackAreaParameters& InTrackParams, const TSharedRef<SOutlinerView>& InTreeView)"
  },
  {
    "label": "OnPaint()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "OnPaint(const FPaintArgs& Args, const FGeometry& AllottedGeometry, const FSlateRect& MyCullingRect, FSlateWindowElementList& OutDrawElements, int32 LayerId, const FWidgetStyle& InWidgetStyle, bool bParentEnabled)"
  },
  {
    "label": "Tick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Tick(const FGeometry& AllottedGeometry, const double InCurrentTime, const float InDeltaTime)"
  },
  {
    "label": "OnMouseButtonDown()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnMouseButtonDown(const FGeometry& MyGeometry, const FPointerEvent& MouseEvent)"
  },
  {
    "label": "OnMouseButtonUp()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnMouseButtonUp(const FGeometry& MyGeometry, const FPointerEvent& MouseEvent)"
  },
  {
    "label": "OnMouseMove()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnMouseMove(const FGeometry& MyGeometry, const FPointerEvent& MouseEvent)"
  },
  {
    "label": "OnCursorQuery()",
    "kind": "Method",
    "detail": "Function (FCursorReply)",
    "insertText": "OnCursorQuery(const FGeometry& MyGeometry, const FPointerEvent& CursorEvent)"
  },
  {
    "label": "OnArrangeChildren()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnArrangeChildren(const FGeometry& AllottedGeometry, FArrangedChildren& ArrangedChildren)"
  },
  {
    "label": "ComputeDesiredSize()",
    "kind": "Method",
    "detail": "Function (FVector2D)",
    "insertText": "ComputeDesiredSize(float)"
  },
  {
    "label": "GetChildren()",
    "kind": "Method",
    "detail": "Function (FChildren*)",
    "insertText": "GetChildren()"
  },
  {
    "label": "GetTrackAreaView()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<STrackAreaView>)",
    "insertText": "GetTrackAreaView()"
  },
  {
    "label": "GetParentLane()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<STrackLane>)",
    "insertText": "GetParentLane()"
  },
  {
    "label": "GetTimeToPixel()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FTimeToPixel>)",
    "insertText": "GetTimeToPixel()"
  },
  {
    "label": "GetChildLanes()",
    "kind": "Method",
    "detail": "Function (TArrayView<const TWeakPtr<STrackLane>>)",
    "insertText": "GetChildLanes()"
  },
  {
    "label": "GetAllWidgets()",
    "kind": "Method",
    "detail": "Function (const TMap<FWeakViewModelPtr,TSharedPtr<ITrackLaneWidget>>&)",
    "insertText": "GetAllWidgets()"
  },
  {
    "label": "SetVerticalPosition()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetVerticalPosition(float InPosition)"
  },
  {
    "label": "PositionParentTrackLanes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PositionParentTrackLanes(TViewModelPtr<IOutlinerExtension> InItem, float InItemTop)"
  },
  {
    "label": "IsPinned()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsPinned()"
  },
  {
    "label": "FindWidgetForModel()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<ITrackLaneWidget>)",
    "insertText": "FindWidgetForModel(const FWeakViewModelPtr& InModel)"
  },
  {
    "label": "PaintLaneForeground()",
    "kind": "Method",
    "detail": "Function (protected : int32)",
    "insertText": "PaintLaneForeground(const FGeometry& AllottedGeometry, const FSlateRect& MyCullingRect, FSlateWindowElementList& OutDrawElements, int32 LayerId, const FWidgetStyle& InWidgetStyle)"
  },
  {
    "label": "OnHierarchyUpdated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnHierarchyUpdated()"
  },
  {
    "label": "RecreateWidgets()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RecreateWidgets()"
  },
  {
    "label": "FSlot()",
    "kind": "Method",
    "detail": "Function (private : TWeakPtr<STrackAreaView> WeakTrackAreaView ; TWeakViewModelPtr<IOutlinerExtension> WeakOutlinerItem ; TWeakPtr<SOutlinerView> TreeView ; TMap<FWeakViewModelPtr,TSharedPtr<ITrackLaneWidget>> WidgetsByModel ; TArray<TWeakPtr<STrackLane>> WeakChildLanes ; TSharedPtr<STrackLane> ParentLane ; TSharedPtr<FTimeToPixel> TimeToPixel ; struct FSlot : TSlotBase<FSlot> {)",
    "insertText": "FSlot(TSharedPtr<ITrackLaneWidget> InInterface)"
  },
  {
    "label": "FSlot()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FSlot()"
  },
  {
    "label": "FDragParameters()",
    "kind": "Method",
    "detail": "Function (TSharedRef<ITrackLaneWidget> Interface ; } ; TPanelChildren<FSlot> Children ; TOptional<FVector2D> LastDesiredSize ; struct FDragParameters {)",
    "insertText": "FDragParameters(float InOriginalHeight, float InDragStartY) : OriginalHeight(InOriginalHeight), DragStartY(InDragStartY)"
  }
]