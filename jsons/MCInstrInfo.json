[
  {
    "label": "MCInstrInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MCInstrInfo"
  },
  {
    "label": "InitMCInstrInfo()",
    "kind": "Method",
    "detail": "Function (# ifndef LLVM_MC_MCINSTRINFO_H # define LLVM_MC_MCINSTRINFO_H # include \" llvm / MC / MCInstrDesc . h \" # include<cassert> namespace llvm { class MCInstrInfo { const MCInstrDesc* Desc ; const unsigned* InstrNameIndices ; const char* InstrNameData ; unsigned NumOpcodes ; public : void)",
    "insertText": "InitMCInstrInfo(const MCInstrDesc *D, const unsigned *NI, const char *ND, unsigned NO)"
  },
  {
    "label": "getNumOpcodes()",
    "kind": "Method",
    "detail": "Function (Desc = D ; InstrNameIndices = NI ; InstrNameData = ND ; NumOpcodes = NO ; } unsigned)",
    "insertText": "getNumOpcodes()"
  },
  {
    "label": "assert()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "assert(Opcode < NumOpcodes && \"Invalid opcode!\")"
  }
]