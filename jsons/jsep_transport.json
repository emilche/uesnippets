[
  {
    "label": "DtlsTransportInternal",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DtlsTransportInternal"
  },
  {
    "label": "JsepTransportDescription",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "JsepTransportDescription"
  },
  {
    "label": "used",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "used"
  },
  {
    "label": "JsepTransport",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "JsepTransport"
  },
  {
    "label": "JsepTransportDescription()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "JsepTransportDescription()"
  },
  {
    "label": "SetLocalJsepTransportDescription()",
    "kind": "Method",
    "detail": "Function (webrtc::RTCError)",
    "insertText": "SetLocalJsepTransportDescription(\n      const JsepTransportDescription& jsep_description,\n      webrtc::SdpType type)"
  },
  {
    "label": "SetRemoteJsepTransportDescription()",
    "kind": "Method",
    "detail": "Function (webrtc::RTCError)",
    "insertText": "SetRemoteJsepTransportDescription(\n      const JsepTransportDescription& jsep_description,\n      webrtc::SdpType type)"
  },
  {
    "label": "AddRemoteCandidates()",
    "kind": "Method",
    "detail": "Function (webrtc::RTCError)",
    "insertText": "AddRemoteCandidates(const Candidates& candidates)"
  },
  {
    "label": "SetNeedsIceRestartFlag()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetNeedsIceRestartFlag()"
  },
  {
    "label": "GetStats()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetStats(TransportStats* stats)"
  },
  {
    "label": "SetActiveResetSrtpParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetActiveResetSrtpParams(bool active_reset_srtp_params)"
  },
  {
    "label": "SetRtcpMux()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetRtcpMux(bool enable, webrtc::SdpType type, ContentSource source)"
  },
  {
    "label": "SetSdes()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetSdes(const std::vector<CryptoParams>& cryptos,\n               const std::vector<int>& encrypted_extension_ids,\n               webrtc::SdpType type,\n               ContentSource source)"
  },
  {
    "label": "NegotiateAndSetDtlsParameters()",
    "kind": "Method",
    "detail": "Function (webrtc::RTCError)",
    "insertText": "NegotiateAndSetDtlsParameters(\n      webrtc::SdpType local_description_type)"
  },
  {
    "label": "NegotiateDtlsRole()",
    "kind": "Method",
    "detail": "Function (webrtc::RTCError)",
    "insertText": "NegotiateDtlsRole(\n      webrtc::SdpType local_description_type,\n      ConnectionRole local_connection_role,\n      ConnectionRole remote_connection_role,\n      absl::optional<rtc::SSLRole>* negotiated_dtls_role)"
  },
  {
    "label": "SetRemoteIceParameters()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRemoteIceParameters(const IceParameters& ice_parameters,\n                              IceTransportInternal* ice)"
  },
  {
    "label": "SetNegotiatedDtlsParameters()",
    "kind": "Method",
    "detail": "Function (webrtc::RTCError)",
    "insertText": "SetNegotiatedDtlsParameters(\n      DtlsTransportInternal* dtls_transport,\n      absl::optional<rtc::SSLRole> dtls_role,\n      rtc::SSLFingerprint* remote_fingerprint)"
  },
  {
    "label": "GetTransportStats()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetTransportStats(DtlsTransportInternal* dtls_transport,\n                         int component,\n                         TransportStats* stats)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (local_certificate_)",
    "insertText": "RTC_GUARDED_BY(network_thread_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (local_description_)",
    "insertText": "RTC_GUARDED_BY(network_thread_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (remote_description_)",
    "insertText": "RTC_GUARDED_BY(network_thread_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (rtcp_dtls_transport_)",
    "insertText": "RTC_GUARDED_BY(network_thread_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (sdes_negotiator_)",
    "insertText": "RTC_GUARDED_BY(network_thread_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (rtcp_mux_negotiator_)",
    "insertText": "RTC_GUARDED_BY(network_thread_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (send_extension_ids_)",
    "insertText": "RTC_GUARDED_BY(network_thread_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (recv_extension_ids_)",
    "insertText": "RTC_GUARDED_BY(network_thread_)"
  }
]