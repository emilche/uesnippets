[
  {
    "label": "FArchive",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FArchive"
  },
  {
    "label": "FCbWriter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCbWriter"
  },
  {
    "label": "FLinkerInstancingContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLinkerInstancingContext"
  },
  {
    "label": "FObjectPreSaveContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FObjectPreSaveContext"
  },
  {
    "label": "FOutputDevice",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FOutputDevice"
  },
  {
    "label": "FPackagePath",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPackagePath"
  },
  {
    "label": "FProperty",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FProperty"
  },
  {
    "label": "ITargetPlatform",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITargetPlatform"
  },
  {
    "label": "UClass",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UClass"
  },
  {
    "label": "UEnum",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEnum"
  },
  {
    "label": "UFunction",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UFunction"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "UObjectBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObjectBase"
  },
  {
    "label": "UPackage",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPackage"
  },
  {
    "label": "UPackageMap",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPackageMap"
  },
  {
    "label": "UScriptStruct",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UScriptStruct"
  },
  {
    "label": "UWorld",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UWorld"
  },
  {
    "label": "FCustomPropertyListNode",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCustomPropertyListNode"
  },
  {
    "label": "FGuid",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGuid"
  },
  {
    "label": "FObjectInstancingGraph",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FObjectInstancingGraph"
  },
  {
    "label": "FObjectPostCDOCompiledContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FObjectPostCDOCompiledContext"
  },
  {
    "label": "FObjectPtr",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FObjectPtr"
  },
  {
    "label": "FPrimaryAssetId",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPrimaryAssetId"
  },
  {
    "label": "FStaticConstructObjectParameters",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FStaticConstructObjectParameters"
  },
  {
    "label": "FUObjectSerializeContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FUObjectSerializeContext"
  },
  {
    "label": "FWorldContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FWorldContext"
  },
  {
    "label": "TObjectPtr",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TObjectPtr"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "is"
  },
  {
    "label": "FObjectDuplicationParameters",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FObjectDuplicationParameters"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "NativeFirst",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "NativeFirst"
  },
  {
    "label": "instances",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "instances"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "of",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "of"
  },
  {
    "label": "constructor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "constructor"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FLoadPackageAsyncProgressParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLoadPackageAsyncProgressParams"
  },
  {
    "label": "FLoadPackageAsyncOptionalParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLoadPackageAsyncOptionalParams"
  },
  {
    "label": "FLoadAssetAsyncOptionalParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLoadAssetAsyncOptionalParams"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "was",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "was"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "that",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "that"
  },
  {
    "label": "FScopedAllowAbstractClassAllocation",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FScopedAllowAbstractClassAllocation"
  },
  {
    "label": "of",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "of"
  },
  {
    "label": "of",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "of"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "defaults",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "defaults"
  },
  {
    "label": "FGCObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGCObject"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "FObjectInitializer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FObjectInitializer"
  },
  {
    "label": "FObjectInstancingGraph",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FObjectInstancingGraph"
  },
  {
    "label": "FObjectInstancingGraph",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FObjectInstancingGraph"
  },
  {
    "label": "FObjectInstancingGraph",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FObjectInstancingGraph"
  },
  {
    "label": "of",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "of"
  },
  {
    "label": "of",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "of"
  },
  {
    "label": "TReturnType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TReturnType"
  },
  {
    "label": "specifies",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "specifies"
  },
  {
    "label": "of",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "of"
  },
  {
    "label": "TReturnType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TReturnType"
  },
  {
    "label": "and",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "and"
  },
  {
    "label": "of",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "of"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "TReturnType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TReturnType"
  },
  {
    "label": "TClassToConstructByDefault",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TClassToConstructByDefault"
  },
  {
    "label": "of",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "of"
  },
  {
    "label": "TReturnType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TReturnType"
  },
  {
    "label": "of",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "of"
  },
  {
    "label": "has",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "has"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "must",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "must"
  },
  {
    "label": "used",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "used"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "must",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "must"
  },
  {
    "label": "used",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "used"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "should",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "should"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "must",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "must"
  },
  {
    "label": "used",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "used"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "must",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "must"
  },
  {
    "label": "used",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "used"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "must",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "must"
  },
  {
    "label": "used",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "used"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "must",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "must"
  },
  {
    "label": "used",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "used"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "FScriptIntegrationObjectHelper",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FScriptIntegrationObjectHelper"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "FObjectInitializer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FObjectInitializer"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "to"
  },
  {
    "label": "FOverrides",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FOverrides"
  },
  {
    "label": "FOverrideDetails",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FOverrideDetails"
  },
  {
    "label": "FOverride",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FOverride"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "to"
  },
  {
    "label": "FSubobjectsToInit",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSubobjectsToInit"
  },
  {
    "label": "FSubobjectInit",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSubobjectInit"
  },
  {
    "label": "FObjectInstancingGraph",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FObjectInstancingGraph"
  },
  {
    "label": "FStaticConstructObjectParameters",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FStaticConstructObjectParameters"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "is"
  },
  {
    "label": "FStaticConstructObjectParameters",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FStaticConstructObjectParameters"
  },
  {
    "label": "of",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "of"
  },
  {
    "label": "defaults",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "defaults"
  },
  {
    "label": "default",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "default"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "FScriptIntegrationObjectHelper",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FScriptIntegrationObjectHelper"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "of",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "of"
  },
  {
    "label": "defaults",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "defaults"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "constructor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "constructor"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "constructor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "constructor"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "constructor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "constructor"
  },
  {
    "label": "of",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "of"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "object",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "object"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "has",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "has"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "specified",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "specified"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "break",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "break"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "for"
  },
  {
    "label": "FScopedObjectFlagMarker",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FScopedObjectFlagMarker"
  },
  {
    "label": "FStoredObjectFlags",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FStoredObjectFlags"
  },
  {
    "label": "TObjectClass",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TObjectClass"
  },
  {
    "label": "TObjectArrayIterator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TObjectArrayIterator"
  },
  {
    "label": "or",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "or"
  },
  {
    "label": "matches",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "matches"
  },
  {
    "label": "FReferenceCollectorArchive",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FReferenceCollectorArchive"
  },
  {
    "label": "FReferenceCollector",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FReferenceCollector"
  },
  {
    "label": "FReferenceCollector",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FReferenceCollector"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "FVerySlowReferenceCollectorArchiveScope",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVerySlowReferenceCollectorArchiveScope"
  },
  {
    "label": "FReferenceCollector",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FReferenceCollector"
  },
  {
    "label": "UObjectType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObjectType"
  },
  {
    "label": "UObjectType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObjectType"
  },
  {
    "label": "UObjectType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObjectType"
  },
  {
    "label": "UObjectType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObjectType"
  },
  {
    "label": "UObjectType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObjectType"
  },
  {
    "label": "UObjectType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObjectType"
  },
  {
    "label": "UObjectType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObjectType"
  },
  {
    "label": "UObjectType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObjectType"
  },
  {
    "label": "UObjectType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObjectType"
  },
  {
    "label": "UObjectType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObjectType"
  },
  {
    "label": "UObjectType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObjectType"
  },
  {
    "label": "UObjectType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObjectType"
  },
  {
    "label": "UObjectType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObjectType"
  },
  {
    "label": "VCellType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "VCellType"
  },
  {
    "label": "UObjectType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObjectType"
  },
  {
    "label": "UObjectType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObjectType"
  },
  {
    "label": "UObjectType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObjectType"
  },
  {
    "label": "itself",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "itself"
  },
  {
    "label": "that",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "that"
  },
  {
    "label": "instance",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "instance"
  },
  {
    "label": "itself",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "itself"
  },
  {
    "label": "FProperty",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FProperty"
  },
  {
    "label": "FProperty",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FProperty"
  },
  {
    "label": "AROPrivate",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "AROPrivate"
  },
  {
    "label": "UObjectType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObjectType"
  },
  {
    "label": "UObjectType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObjectType"
  },
  {
    "label": "UObjectType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObjectType"
  },
  {
    "label": "UObjectType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObjectType"
  },
  {
    "label": "UObjectType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObjectType"
  },
  {
    "label": "used",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "used"
  },
  {
    "label": "FReferenceFinder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FReferenceFinder"
  },
  {
    "label": "FProperty",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FProperty"
  },
  {
    "label": "FProperty",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FProperty"
  },
  {
    "label": "FProperty",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FProperty"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FGarbageCollectionTracer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGarbageCollectionTracer"
  },
  {
    "label": "FPackageReloadedEvent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPackageReloadedEvent"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "has",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "has"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FEndLoadPackageContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FEndLoadPackageContext"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FCoreUObjectDelegates",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCoreUObjectDelegates"
  },
  {
    "label": "FPropertyChangedEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPropertyChangedEvent"
  },
  {
    "label": "FEditPropertyChain",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEditPropertyChain"
  },
  {
    "label": "FTransactionObjectEvent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTransactionObjectEvent"
  },
  {
    "label": "structure",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "structure"
  },
  {
    "label": "and",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "and"
  },
  {
    "label": "data",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "data"
  },
  {
    "label": "re",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "re"
  },
  {
    "label": "re",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "re"
  },
  {
    "label": "FGarbageReferenceInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGarbageReferenceInfo"
  },
  {
    "label": "UPackage",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPackage"
  },
  {
    "label": "used",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "used"
  },
  {
    "label": "overrides",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "overrides"
  },
  {
    "label": "FAssetLog",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAssetLog"
  },
  {
    "label": "contains",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "contains"
  },
  {
    "label": "FAssetMsg",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAssetMsg"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FFieldClass",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFieldClass"
  },
  {
    "label": "FClassFunctionLinkInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FClassFunctionLinkInfo"
  },
  {
    "label": "FCppClassTypeInfoStatic",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCppClassTypeInfoStatic"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FMetaDataPairParam",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMetaDataPairParam"
  },
  {
    "label": "FEnumeratorParam",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FEnumeratorParam"
  },
  {
    "label": "but",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "but"
  },
  {
    "label": "FPropertyParamsBase",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPropertyParamsBase"
  },
  {
    "label": "FPropertyParamsBaseWithoutOffset",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPropertyParamsBaseWithoutOffset"
  },
  {
    "label": "FPropertyParamsBaseWithOffset",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPropertyParamsBaseWithOffset"
  },
  {
    "label": "FGenericPropertyParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGenericPropertyParams"
  },
  {
    "label": "FBytePropertyParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBytePropertyParams"
  },
  {
    "label": "FBoolPropertyParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBoolPropertyParams"
  },
  {
    "label": "FObjectPropertyParamsWithoutClass",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FObjectPropertyParamsWithoutClass"
  },
  {
    "label": "FObjectPropertyParamsWithClass",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FObjectPropertyParamsWithClass"
  },
  {
    "label": "FObjectPropertyParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FObjectPropertyParams"
  },
  {
    "label": "FClassPropertyParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FClassPropertyParams"
  },
  {
    "label": "FSoftClassPropertyParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSoftClassPropertyParams"
  },
  {
    "label": "FInterfacePropertyParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInterfacePropertyParams"
  },
  {
    "label": "FStructPropertyParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FStructPropertyParams"
  },
  {
    "label": "FDelegatePropertyParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDelegatePropertyParams"
  },
  {
    "label": "FMulticastDelegatePropertyParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMulticastDelegatePropertyParams"
  },
  {
    "label": "FEnumPropertyParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FEnumPropertyParams"
  },
  {
    "label": "FFieldPathPropertyParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFieldPathPropertyParams"
  },
  {
    "label": "FArrayPropertyParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FArrayPropertyParams"
  },
  {
    "label": "FMapPropertyParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMapPropertyParams"
  },
  {
    "label": "FFunctionParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFunctionParams"
  },
  {
    "label": "FEnumParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FEnumParams"
  },
  {
    "label": "FStructParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FStructParams"
  },
  {
    "label": "FPackageParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPackageParams"
  },
  {
    "label": "FImplementedInterfaceParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FImplementedInterfaceParams"
  },
  {
    "label": "FClassParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FClassParams"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "DECLARE_LOG_CATEGORY_EXTERN()",
    "kind": "Method",
    "detail": "Function (COREUOBJECT_API)",
    "insertText": "DECLARE_LOG_CATEGORY_EXTERN(LogUObjectGlobals, Log, All)"
  },
  {
    "label": "FObjectDuplicationParameters()",
    "kind": "Method",
    "detail": "Function (COREUOBJECT_API)",
    "insertText": "FObjectDuplicationParameters( UObject* InSourceObject, UObject* InDestOuter )"
  },
  {
    "label": "IsSavingPackage()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsSavingPackage(UObject* InOuter = nullptr)"
  },
  {
    "label": "ResolveIniObjectsReference()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "ResolveIniObjectsReference(const FString& ObjectReference, const FString* IniFilename = nullptr, bool bThrow = false)"
  },
  {
    "label": "ResolveName()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ResolveName(UObject*& Outer, FString& ObjectsReferenceString, bool Create, bool Throw, uint32 LoadFlags = LOAD_None, const FLinkerInstancingContext* InstancingContext = nullptr)"
  },
  {
    "label": "SafeLoadError()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SafeLoadError( UObject* Outer, uint32 LoadFlags, const TCHAR* ErrorMessage)"
  },
  {
    "label": "StaticFindAllObjectsFast()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "StaticFindAllObjectsFast(TArray<UObject*>& OutFoundObjects, UClass* ObjectClass, FName ObjectName, bool ExactClass = false, EObjectFlags ExclusiveFlags = RF_NoFlags, EInternalObjectFlags ExclusiveInternalFlags = EInternalObjectFlags::None)"
  },
  {
    "label": "StaticFindAllObjectsFastSafe()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "StaticFindAllObjectsFastSafe(TArray<UObject*>& OutFoundObjects, UClass* ObjectClass, FName ObjectName, bool ExactClass = false, EObjectFlags ExclusiveFlags = RF_NoFlags, EInternalObjectFlags ExclusiveInternalFlags = EInternalObjectFlags::None)"
  },
  {
    "label": "StaticFindAllObjects()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "StaticFindAllObjects(TArray<UObject*>& OutFoundObjects, UClass* Class, const TCHAR* Name, bool ExactClass = false)"
  },
  {
    "label": "StaticFindAllObjectsSafe()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "StaticFindAllObjectsSafe(TArray<UObject*>& OutFoundObjects, UClass* Class, const TCHAR* Name, bool ExactClass = false)"
  },
  {
    "label": "ParseObject()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ParseObject( const TCHAR* Stream, const TCHAR* Match, UClass* Class, UObject*& DestRes, UObject* InParent, EParseObjectLoadingPolicy LoadingPolicy, bool* bInvalidObject=nullptr )"
  },
  {
    "label": "ParseObject()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "ParseObject( Stream, Match, Class, DestRes, InParent, EParseObjectLoadingPolicy::Find, bInvalidObject )"
  },
  {
    "label": "InitStaticDuplicateObjectParams()",
    "kind": "Method",
    "detail": "Function (FObjectDuplicationParameters)",
    "insertText": "InitStaticDuplicateObjectParams(UObject const* SourceObject, UObject* DestOuter, const FName DestName = NAME_None, EObjectFlags FlagMask = RF_AllFlags, UClass* DestClass = nullptr, EDuplicateMode::Type DuplicateMode = EDuplicateMode::Normal, EInternalObjectFlags InternalFlagsMask = EInternalObjectFlags_AllFlags)"
  },
  {
    "label": "StaticExec()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "StaticExec( UWorld* InWorld, const TCHAR* Cmd, FOutputDevice& Ar=*GLog )"
  },
  {
    "label": "StaticTick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StaticTick( float DeltaTime, bool bUseFullTimeLimit = true, float AsyncLoadingTime = 0.005f )"
  },
  {
    "label": "LoadPackageAsync()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "LoadPackageAsync(const FPackagePath& InPackagePath, FLoadPackageAsyncOptionalParams InOptionalParams)"
  },
  {
    "label": "LoadPackageAsync()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "LoadPackageAsync(const FString& InName, const FGuid* InGuid = nullptr)"
  },
  {
    "label": "LoadPackageAsync()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "LoadPackageAsync(const FString& InName, FLoadPackageAsyncDelegate InCompletionDelegate, TAsyncLoadPriority InPackagePriority = 0, EPackageFlags InPackageFlags = PKG_None, int32 InPIEInstanceID = INDEX_NONE)"
  },
  {
    "label": "LoadPackageAsync()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "LoadPackageAsync(const FString& InName, FLoadPackageAsyncOptionalParams InOptionalParams)"
  },
  {
    "label": "CancelAsyncLoading()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CancelAsyncLoading()"
  },
  {
    "label": "IsEventDrivenLoaderEnabledInCookedBuilds()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsEventDrivenLoaderEnabledInCookedBuilds()"
  },
  {
    "label": "IsEventDrivenLoaderEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsEventDrivenLoaderEnabled()"
  },
  {
    "label": "GetAsyncLoadPercentage()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetAsyncLoadPercentage( const FName& PackageName )"
  },
  {
    "label": "IsInGarbageCollectorThread()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsInGarbageCollectorThread()"
  },
  {
    "label": "CollectGarbage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CollectGarbage(EObjectFlags KeepFlags, bool bPerformFullPurge = true)"
  },
  {
    "label": "TryCollectGarbage()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TryCollectGarbage(EObjectFlags KeepFlags, bool bPerformFullPurge = true)"
  },
  {
    "label": "UnhashUnreachableObjects()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UnhashUnreachableObjects(bool bUseTimeLimit, double TimeLimit = 0.0)"
  },
  {
    "label": "IsIncrementalUnhashPending()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsIncrementalUnhashPending()"
  },
  {
    "label": "IsIncrementalPurgePending()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsIncrementalPurgePending()"
  },
  {
    "label": "GatherUnreachableObjects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GatherUnreachableObjects(bool bForceSingleThreaded)"
  },
  {
    "label": "IsIncrementalReachabilityAnalysisPending()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsIncrementalReachabilityAnalysisPending()"
  },
  {
    "label": "PerformIncrementalReachabilityAnalysis()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PerformIncrementalReachabilityAnalysis(double TimeLimit)"
  },
  {
    "label": "FinalizeIncrementalReachabilityAnalysis()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FinalizeIncrementalReachabilityAnalysis()"
  },
  {
    "label": "IncrementalPurgeGarbage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "IncrementalPurgeGarbage( bool bUseTimeLimit, double TimeLimit = 0.002 )"
  },
  {
    "label": "MakeUniqueObjectName()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "MakeUniqueObjectName( UObject* Outer, const UClass* Class, FName BaseName = NAME_None, EUniqueObjectNameOptions Options = EUniqueObjectNameOptions::None)"
  },
  {
    "label": "MakeObjectNameFromDisplayLabel()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "MakeObjectNameFromDisplayLabel(const FString& DisplayLabel, const FName CurrentObjectName)"
  },
  {
    "label": "IsReferenced()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsReferenced( UObject*& Res, EObjectFlags KeepFlags, EInternalObjectFlags InternalKeepFlags, bool bCheckSubObjects = false, FReferencerInformationList* FoundReferences = nullptr )"
  },
  {
    "label": "FlushAsyncLoading()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FlushAsyncLoading(int32 PackageID = INDEX_NONE)"
  },
  {
    "label": "FlushAsyncLoading()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FlushAsyncLoading(TConstArrayView<int32> RequestIds)"
  },
  {
    "label": "GetNumAsyncPackages()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetNumAsyncPackages()"
  },
  {
    "label": "IsLoading()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsLoading()"
  },
  {
    "label": "SetAsyncLoadingAllowed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAsyncLoadingAllowed(bool bAllowAsyncLoading)"
  },
  {
    "label": "ProcessAsyncLoading()",
    "kind": "Method",
    "detail": "Function (EAsyncPackageState::Type)",
    "insertText": "ProcessAsyncLoading( bool bUseTimeLimit, bool bUseFullTimeLimit, double TimeLimit)"
  },
  {
    "label": "BeginLoad()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginLoad(FUObjectSerializeContext* LoadContext, const TCHAR* DebugContext = nullptr)"
  },
  {
    "label": "EndLoad()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EndLoad(FUObjectSerializeContext* LoadContext)"
  },
  {
    "label": "SetMountPointDefaultPackageFlags()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetMountPointDefaultPackageFlags(const TMap<FString, EPackageFlags>& InMountPointToDefaultPackageFlags)"
  },
  {
    "label": "RemoveMountPointDefaultPackageFlags()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveMountPointDefaultPackageFlags(const TArrayView<FString> InMountPoints)"
  },
  {
    "label": "GlobalSetProperty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GlobalSetProperty( const TCHAR* Value, UClass* Class, FProperty* Property, bool bNotifyObjectOfChange )"
  },
  {
    "label": "SaveToTransactionBuffer()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SaveToTransactionBuffer(UObject* Object, bool bMarkDirty)"
  },
  {
    "label": "SnapshotTransactionBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SnapshotTransactionBuffer(UObject* Object)"
  },
  {
    "label": "SnapshotTransactionBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SnapshotTransactionBuffer(UObject* Object, TArrayView<const FProperty*> Properties)"
  },
  {
    "label": "FScopedAllowAbstractClassAllocation()",
    "kind": "Method",
    "detail": "Function (COREUOBJECT_API)",
    "insertText": "FScopedAllowAbstractClassAllocation()"
  },
  {
    "label": "IsDisallowedAbstractClass()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsDisallowedAbstractClass(const UClass* InClass, EObjectFlags InFlags)"
  },
  {
    "label": "StaticAllocateObjectErrorTests()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "StaticAllocateObjectErrorTests( const UClass* Class, UObject* InOuter, FName Name, EObjectFlags SetFlags)"
  },
  {
    "label": "FObjectInitializer()",
    "kind": "Method",
    "detail": "Function (COREUOBJECT_API)",
    "insertText": "FObjectInitializer()"
  },
  {
    "label": "FObjectInitializer()",
    "kind": "Method",
    "detail": "Function (COREUOBJECT_API)",
    "insertText": "FObjectInitializer(UObject* InObj, UObject* InObjectArchetype, EObjectInitializerOptions InOptions, struct FObjectInstancingGraph* InInstanceGraph = nullptr)"
  },
  {
    "label": "FObjectInitializer()",
    "kind": "Method",
    "detail": "Function (COREUOBJECT_API)",
    "insertText": "FObjectInitializer(UObject* InObj, const FStaticConstructObjectParameters& StaticConstructParams)"
  },
  {
    "label": "Construct_Internal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct_Internal()"
  },
  {
    "label": "AssertIfInConstructor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AssertIfInConstructor(UObject* Outer, const TCHAR* ErrorMessage)"
  },
  {
    "label": "InternalConstructor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InternalConstructor(const class FObjectInitializer& X)"
  },
  {
    "label": "InitProperties()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitProperties(UObject* Obj, UClass* DefaultsClass, UObject* DefaultData, bool bCopyTransientsFromClassDefaults)"
  },
  {
    "label": "InitNonNativeProperty()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "InitNonNativeProperty(FProperty* Property, UObject* Data)"
  },
  {
    "label": "PostConstructInit()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostConstructInit()"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Add(FName InComponentName, const UClass* InComponentClass, const TArrayView<const FName>* FullPath = nullptr)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Add(FStringView InComponentPath, const UClass* InComponentClass)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Add(TArrayView<const FName> InComponentPath, const UClass* InComponentClass, const TArrayView<const FName>* FullPath = nullptr)"
  },
  {
    "label": "IsLegalOverride()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsLegalOverride(const UClass* DerivedComponentClass, const UClass* BaseComponentClass)"
  },
  {
    "label": "OnGCObjectCreated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnGCObjectCreated(FGCObject* InObject)"
  },
  {
    "label": "FStaticConstructObjectParameters()",
    "kind": "Method",
    "detail": "Function (COREUOBJECT_API)",
    "insertText": "FStaticConstructObjectParameters(const UClass* InClass)"
  },
  {
    "label": "CheckIsClassChildOf_Internal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CheckIsClassChildOf_Internal(const UClass* Parent, const UClass* Child)"
  },
  {
    "label": "Params()",
    "kind": "Method",
    "detail": "Function (FStaticConstructObjectParameters)",
    "insertText": "Params(Class)"
  },
  {
    "label": "UsesPerObjectConfig()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UsesPerObjectConfig( UObject* SourceObject )"
  },
  {
    "label": "GetConfigFilename()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetConfigFilename( UObject* SourceObject )"
  },
  {
    "label": "SaveObjectFlags()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SaveObjectFlags()"
  },
  {
    "label": "RestoreObjectFlags()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RestoreObjectFlags()"
  },
  {
    "label": "for()",
    "kind": "Method",
    "detail": "Function (items)",
    "insertText": "for( TObjectArrayIterator<APawn> It(TestPawns)"
  },
  {
    "label": "GetObject()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetObject()"
  },
  {
    "label": "Array()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "Array(Index)"
  },
  {
    "label": "FReferenceCollectorArchive()",
    "kind": "Method",
    "detail": "Function (only)",
    "insertText": "FReferenceCollectorArchive(const UObject* InSerializingObject, FReferenceCollector& InCollector)"
  },
  {
    "label": "AddStableReference()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddStableReference(TObjectPtr<UObject>* Object)"
  },
  {
    "label": "AddStableReferenceArray()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddStableReferenceArray(TArray<TObjectPtr<UObject>>* Objects)"
  },
  {
    "label": "AddStableReferenceSet()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddStableReferenceSet(TSet<TObjectPtr<UObject>>* Objects)"
  },
  {
    "label": "AddStableReference()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddStableReference(UObject** Object)"
  },
  {
    "label": "AddStableReferenceArray()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddStableReferenceArray(TArray<UObject*>* Objects)"
  },
  {
    "label": "AddStableReferenceSet()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddStableReferenceSet(TSet<UObject*>* Objects)"
  },
  {
    "label": "AddReferencedVerseValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddReferencedVerseValue(Verse::TWriteBarrier<VCellType>& Value, const UObject* ReferencingObject = nullptr, const FProperty* ReferencingProperty = nullptr)"
  },
  {
    "label": "AddReferencedObject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddReferencedObject(FWeakObjectPtr& P,\n\t\t\t\t\t\t\t\t\t\t\t\t\t const UObject* ReferencingObject = nullptr,\n\t\t\t\t\t\t\t\t\t\t\t\t\t const FProperty* ReferencingProperty = nullptr)"
  },
  {
    "label": "AddReferencedObjects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddReferencedObjects(const UScriptStruct*& ScriptStruct, void* Instance, const UObject* ReferencingObject = nullptr, const FProperty* ReferencingProperty = nullptr)"
  },
  {
    "label": "AddReferencedObjects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddReferencedObjects(TObjectPtr<const UScriptStruct>& ScriptStruct, void* Instance, const UObject* ReferencingObject = nullptr, const FProperty* ReferencingProperty = nullptr)"
  },
  {
    "label": "AddReferencedObjects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddReferencedObjects(TWeakObjectPtr<const UScriptStruct>& ScriptStruct, void* Instance, const UObject* ReferencingObject = nullptr, const FProperty* ReferencingProperty = nullptr)"
  },
  {
    "label": "AddPropertyReferences()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddPropertyReferences(const UStruct* Struct, void* Instance, const UObject* ReferencingObject = nullptr)"
  },
  {
    "label": "AddPropertyReferencesWithStructARO()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddPropertyReferencesWithStructARO(const UScriptStruct* Struct, void* Instance, const UObject* ReferencingObject = nullptr)"
  },
  {
    "label": "AddPropertyReferencesWithStructARO()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddPropertyReferencesWithStructARO(const UClass* Class, void* Instance, const UObject* ReferencingObject = nullptr)"
  },
  {
    "label": "AddPropertyReferencesLimitedToObjectProperties()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddPropertyReferencesLimitedToObjectProperties(const UStruct* Struct, void* Instance, const UObject* ReferencingObject = nullptr)"
  },
  {
    "label": "AddReferencedObjects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddReferencedObjects(FReferenceCollector& Coll,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t const UScriptStruct*& ScriptStruct,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t void* Instance, const UObject* ReferencingObject = nullptr, const FProperty* ReferencingProperty = nullptr)"
  },
  {
    "label": "HandleObjectReferences()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleObjectReferences(FObjectPtr* InObjects, const int32 ObjectNum, const UObject* InReferencingObject, const FProperty* InReferencingProperty)"
  },
  {
    "label": "CreateVerySlowReferenceCollectorArchive()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateVerySlowReferenceCollectorArchive()"
  },
  {
    "label": "AddStableReferenceSetFwd()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddStableReferenceSetFwd(TSet<FObjectPtr>* Objects)"
  },
  {
    "label": "AddStableReferenceArrayFwd()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddStableReferenceArrayFwd(TArray<FObjectPtr>* Objects)"
  },
  {
    "label": "AddStableReferenceFwd()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddStableReferenceFwd(FObjectPtr* Object)"
  },
  {
    "label": "FReferenceFinder()",
    "kind": "Method",
    "detail": "Function (COREUOBJECT_API)",
    "insertText": "FReferenceFinder(TArray<UObject*>& InObjectArray, UObject* InOuter = nullptr, bool bInRequireDirectOuter = true, bool bInShouldIgnoreArchetype = false, bool bInSerializeRecursively = false, bool bInShouldIgnoreTransient = false)"
  },
  {
    "label": "FindReferences()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FindReferences(UObject* Object, UObject* ReferencingObject = nullptr, FProperty* ReferencingProperty = nullptr)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (macro)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_OneParam(FOnObjectsReplaced, const FReplacementObjectMap&)"
  },
  {
    "label": "GetAllowNativeComponentClassOverrides()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetAllowNativeComponentClassOverrides()"
  },
  {
    "label": "SerializeForLog()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SerializeForLog(FCbWriter& Writer, const FAssetLog& AssetLog)"
  },
  {
    "label": "RecordAssetLog()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RecordAssetLog(\n\tconst FName& CategoryName,\n\tELogVerbosity::Type Verbosity,\n\tconst FAssetLog& AssetLog,\n\tconst FString& Message,\n\tconst ANSICHAR* File,\n\tint32 Line)"
  },
  {
    "label": "FormatPathForAssetLog()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "FormatPathForAssetLog(const TCHAR* Path)"
  },
  {
    "label": "FormatPathForAssetLog()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "FormatPathForAssetLog(const FPackagePath& Path)"
  },
  {
    "label": "FormatPathForAssetLog()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "FormatPathForAssetLog(const UObject* Object)"
  },
  {
    "label": "GetAssetLogString()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetAssetLogString(const TCHAR* Path, const FString& Message)"
  },
  {
    "label": "GetAssetLogString()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetAssetLogString(const FPackagePath& Path, const FString& Message)"
  },
  {
    "label": "GetAssetLogString()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetAssetLogString(const UObject* Object, const FString& Message)"
  },
  {
    "label": "IsEditorOnlyObject()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsEditorOnlyObject(const UObject* InObject, bool bCheckRecursive = true)"
  },
  {
    "label": "IsEditorOnlyObject()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsEditorOnlyObject(const UObject* InObject, bool bCheckRecursive, bool bCheckMarks)"
  },
  {
    "label": "ConstructUFunction()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConstructUFunction(UFunction*& OutFunction, const FFunctionParams& Params)"
  },
  {
    "label": "ConstructUFunction()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConstructUFunction(UFunction** SingletonPtr, const FFunctionParams& Params)"
  },
  {
    "label": "ConstructUEnum()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConstructUEnum(UEnum*& OutEnum, const FEnumParams& Params)"
  },
  {
    "label": "ConstructUScriptStruct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConstructUScriptStruct(UScriptStruct*& OutStruct, const FStructParams& Params)"
  },
  {
    "label": "ConstructUPackage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConstructUPackage(UPackage*& OutPackage, const FPackageParams& Params)"
  },
  {
    "label": "ConstructUClass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConstructUClass(UClass*& OutClass, const FClassParams& Params)"
  },
  {
    "label": "CombineDataValidationResults()",
    "kind": "Method",
    "detail": "Function (EDataValidationResult)",
    "insertText": "CombineDataValidationResults(EDataValidationResult Result1, EDataValidationResult Result2)"
  }
]