[
  {
    "label": "ProcessFilter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ProcessFilter"
  },
  {
    "label": "TerminationStatus",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "TerminationStatus"
  },
  {
    "label": "BUILDFLAG()",
    "kind": "Method",
    "detail": "Function (# ifndef BASE_PROCESS_KILL_H_ # define BASE_PROCESS_KILL_H_ # include \" base / base_export . h \" # include \" base / files / file_path . h \" # include \" base / process / process . h \" # include \" base / process / process_handle . h \" # include \" base / time / time . h \" # include \" build / build_config . h \" namespace base { class ProcessFilter ; # if)",
    "insertText": "BUILDFLAG(IS_WIN)"
  },
  {
    "label": "BUILDFLAG()",
    "kind": "Method",
    "detail": "Function (const DWORD kSandboxFatalMemoryExceeded = 7 0 1 2 ; const DWORD kNormalTerminationExitCode = 0 ; const DWORD kDebuggerInactiveExitCode = 0 xC0000354 ; const DWORD kKeyboardInterruptExitCode = 0 xC000013A ; const DWORD kDebuggerTerminatedExitCode = 0 x40010004 ; const DWORD kStatusInvalidImageHashExitCode = 0 xC0000428 ; const DWORD kProcessKilledExitCode = 1 ; } # endif enum TerminationStatus { TERMINATION_STATUS_NORMAL_TERMINATION,TERMINATION_STATUS_ABNORMAL_TERMINATION,TERMINATION_STATUS_PROCESS_WAS_KILLED,TERMINATION_STATUS_PROCESS_CRASHED,TERMINATION_STATUS_STILL_RUNNING,# if)",
    "insertText": "BUILDFLAG(IS_CHROMEOS) TERMINATION_STATUS_PROCESS_WAS_KILLED_BY_OOM, #endif #if BUILDFLAG(IS_ANDROID) TERMINATION_STATUS_OOM_PROTECTED, #endif TERMINATION_STATUS_LAUNCH_FAILED, TERMINATION_STATUS_OOM, #if BUILDFLAG(IS_WIN)"
  },
  {
    "label": "KillProcesses()",
    "kind": "Method",
    "detail": "Function (BASE_EXPORT bool)",
    "insertText": "KillProcesses(const FilePath::StringType& executable_name, int exit_code, const ProcessFilter* filter)"
  },
  {
    "label": "GetTerminationStatus()",
    "kind": "Method",
    "detail": "Function (BASE_EXPORT TerminationStatus)",
    "insertText": "GetTerminationStatus(ProcessHandle handle, int* exit_code)"
  },
  {
    "label": "BUILDFLAG()",
    "kind": "Method",
    "detail": "Function (# if)",
    "insertText": "BUILDFLAG(IS_POSIX) BASE_EXPORT TerminationStatus GetKnownDeadTerminationStatus( ProcessHandle handle, int* exit_code)"
  },
  {
    "label": "BUILDFLAG()",
    "kind": "Method",
    "detail": "Function (# if)",
    "insertText": "BUILDFLAG(IS_LINUX) || BUILDFLAG(IS_CHROMEOS) BASE_EXPORT void EnsureProcessGetsReaped(Process process)"
  },
  {
    "label": "EnsureProcessTerminated()",
    "kind": "Method",
    "detail": "Function (# endif # endif BASE_EXPORT void)",
    "insertText": "EnsureProcessTerminated(Process process)"
  },
  {
    "label": "BUILDFLAG()",
    "kind": "Method",
    "detail": "Function (# if !)",
    "insertText": "BUILDFLAG(IS_FUCHSIA) BASE_EXPORT bool WaitForProcessesToExit( const FilePath::StringType& executable_name, base::TimeDelta wait, const ProcessFilter* filter)"
  },
  {
    "label": "CleanupProcesses()",
    "kind": "Method",
    "detail": "Function (BASE_EXPORT bool)",
    "insertText": "CleanupProcesses(const FilePath::StringType& executable_name, base::TimeDelta wait, int exit_code, const ProcessFilter* filter)"
  }
]