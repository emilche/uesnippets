[
  {
    "label": "FCookOnTheFlyPackageStoreBackend",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCookOnTheFlyPackageStoreBackend"
  },
  {
    "label": "FEntryInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FEntryInfo"
  },
  {
    "label": "FPackageStats",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPackageStats"
  },
  {
    "label": "DoesPackageExist()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DoesPackageExist(FPackageId PackageId)"
  },
  {
    "label": "SendCookRequest()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SendCookRequest(TArray<TPair<FPackageId, FName>> PackageIds)"
  },
  {
    "label": "CreatePackageStoreEntry()",
    "kind": "Method",
    "detail": "Function (EPackageStoreEntryStatus)",
    "insertText": "CreatePackageStoreEntry(const FEntryInfo& EntryInfo, FPackageStoreEntry& OutPackageStoreEntry)"
  },
  {
    "label": "AddPackages()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddPackages(TArray<FPackageStoreEntryResource> Entries, TArray<FPackageId> FailedPackageIds,\n\t\tTArray<TPair<FPackageId, FName>> PackageIdsAndNames)"
  },
  {
    "label": "OnCookOnTheFlyMessage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnCookOnTheFlyMessage(const UE::Cook::FCookOnTheFlyMessage& Message)"
  },
  {
    "label": "CheckActivity()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CheckActivity()"
  }
]