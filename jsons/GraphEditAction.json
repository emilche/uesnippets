[
  {
    "label": "EEdGraphActionType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EEdGraphActionType"
  },
  {
    "label": "FEdGraphEditAction",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FEdGraphEditAction"
  },
  {
    "label": "UEdGraph",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEdGraph"
  },
  {
    "label": "UEdGraphNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEdGraphNode"
  },
  {
    "label": "FEdGraphEditAction()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" enum EEdGraphActionType { GRAPHACTION_Default = 0 x0,GRAPHACTION_AddNode = 0 x1<<0,GRAPHACTION_SelectNode = 0 x1<<1,GRAPHACTION_RemoveNode = 0 x1<<2,GRAPHACTION_EditNode = 0 x1<<3,} ; struct FEdGraphEditAction { EEdGraphActionType Action ; class UEdGraph* Graph ; TSet<const class UEdGraphNode*> Nodes ; bool bUserInvoked ;)",
    "insertText": "FEdGraphEditAction() : Action(GRAPHACTION_Default) , Graph (NULL) , bUserInvoked(false)"
  },
  {
    "label": "FEdGraphEditAction()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FEdGraphEditAction(EEdGraphActionType InAction, class UEdGraph* InGraph, class UEdGraphNode* InNode, bool bInUserInvoked) : Action(InAction) , Graph(InGraph) , bUserInvoked(bInUserInvoked)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (Nodes .)",
    "insertText": "Add(InNode)"
  }
]