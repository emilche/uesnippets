[
  {
    "label": "URichCurveKeyProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "URichCurveKeyProxy"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" UObject / WeakObjectPtr . h \" # include \" UObject / WeakObjectPtrTemplates . h \" # include \" CurveEditorKeyProxy . h \" # include \" Curves / RichCurve . h \" # include \" RichCurveEditorModel . h \" # include \" RichCurveKeyProxy . generated . h \")",
    "insertText": "UCLASS()"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "GENERATED_BODY() void Initialize(FKeyHandle InKeyHandle, FRichCurveEditorModel* InModel, TWeakObjectPtr<UObject> InWeakOwner)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (KeyHandle = InKeyHandle ; WeakOwner = InWeakOwner ; Model = InModel ;)",
    "insertText": "if(UObject* Owner = WeakOwner.Get())"
  },
  {
    "label": "GetReadOnlyRichCurve()",
    "kind": "Method",
    "detail": "Function (const FRichCurve& RichCurve = Model ->)",
    "insertText": "GetReadOnlyRichCurve()"
  },
  {
    "label": "GetKey()",
    "kind": "Method",
    "detail": "Function (Value = RichCurve .)",
    "insertText": "GetKey(KeyHandle)"
  },
  {
    "label": "PostEditChangeProperty()",
    "kind": "Method",
    "detail": "Function (} } } } private : void)",
    "insertText": "PostEditChangeProperty(FPropertyChangedEvent& PropertyChangedEvent)"
  },
  {
    "label": "PostEditChangeProperty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostEditChangeProperty(PropertyChangedEvent)"
  },
  {
    "label": "GetRichCurve()",
    "kind": "Method",
    "detail": "Function (FRichCurve& RichCurve = Model ->)",
    "insertText": "GetRichCurve()"
  },
  {
    "label": "Modify()",
    "kind": "Method",
    "detail": "Function (Owner ->)",
    "insertText": "Modify()"
  },
  {
    "label": "KeyPosition()",
    "kind": "Method",
    "detail": "Function (const FKeyPosition)",
    "insertText": "KeyPosition(Value.Time, Value.Value)"
  },
  {
    "label": "SetKeyPositions()",
    "kind": "Method",
    "detail": "Function (Model ->)",
    "insertText": "SetKeyPositions({KeyHandle}, {KeyPosition}, PropertyChangedEvent.ChangeType)"
  },
  {
    "label": "OnCurveModified()",
    "kind": "Method",
    "detail": "Function (Model ->)",
    "insertText": "OnCurveModified().Broadcast()"
  },
  {
    "label": "UpdateValuesFromRawData()",
    "kind": "Method",
    "detail": "Function (} } } } void)",
    "insertText": "UpdateValuesFromRawData()"
  }
]