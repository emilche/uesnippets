[
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "FFrame",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFrame"
  },
  {
    "label": "UTypedElementHierarchyInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UTypedElementHierarchyInterface"
  },
  {
    "label": "ITypedElementHierarchyInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITypedElementHierarchyInterface"
  },
  {
    "label": "UTypedElementRegistry",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UTypedElementRegistry"
  },
  {
    "label": "TTypedElement",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TTypedElement"
  },
  {
    "label": "UINTERFACE()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" Elements / Framework / TypedElementHandle . h \" # include \" UObject / Interface . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / UObjectGlobals . h \" # include \" TypedElementHierarchyInterface . generated . h \" class UObject ; struct FFrame ;)",
    "insertText": "UINTERFACE(MinimalAPI, BlueprintType, meta = (CannotImplementInterfaceInBlueprint))"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY()"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (class ITypedElementHierarchyInterface {)",
    "insertText": "GENERATED_BODY() public: virtual FTypedElementHandle GetParentElement(const FTypedElementHandle& InElementHandle, const bool bAllowCreate = true)"
  },
  {
    "label": "GetChildElements()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "GetChildElements(const FTypedElementHandle& InElementHandle, TArray<FTypedElementHandle>& OutElementHandles, const bool bAllowCreate = true)"
  },
  {
    "label": "GetRegistry()",
    "kind": "Method",
    "detail": "Function (private : class UTypedElementRegistry&)",
    "insertText": "GetRegistry()"
  },
  {
    "label": "GetParentElement()",
    "kind": "Method",
    "detail": "Function (} ; template<> struct TTypedElement<ITypedElementHierarchyInterface> : public TTypedElementBase<ITypedElementHierarchyInterface> { FTypedElementHandle)",
    "insertText": "GetParentElement(const bool bAllowCreate = true)"
  },
  {
    "label": "GetChildElements()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "GetChildElements(TArray<FTypedElementHandle>& OutElementHandles, const bool bAllowCreate = true)"
  }
]