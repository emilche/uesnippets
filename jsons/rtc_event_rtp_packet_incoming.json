[
  {
    "label": "RtpPacketReceived",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RtpPacketReceived"
  },
  {
    "label": "RtcEventRtpPacketIncoming",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RtcEventRtpPacketIncoming"
  },
  {
    "label": "RtcEventRtpPacketIncoming()",
    "kind": "Method",
    "detail": "Function (# ifndef LOGGING_RTC_EVENT_LOG_EVENTS_RTC_EVENT_RTP_PACKET_INCOMING_H_ # define LOGGING_RTC_EVENT_LOG_EVENTS_RTC_EVENT_RTP_PACKET_INCOMING_H_ # include<cstddef> # include<cstdint> # include<map> # include<memory> # include<string> # include<utility> # include<vector> # include \" absl / strings / string_view . h \" # include \" api / array_view . h \" # include \" api / rtc_event_log / rtc_event . h \" # include \" logging / rtc_event_log / events / logged_rtp_rtcp . h \" # include \" logging / rtc_event_log / events / rtc_event_field_encoding_parser . h \" # include \" modules / rtp_rtcp / source / rtp_packet . h \" namespace webrtc { class RtpPacketReceived ; class RtcEventRtpPacketIncoming final : public RtcEvent { public : Type kType = Type::RtpPacketIncoming ;)",
    "insertText": "RtcEventRtpPacketIncoming(const RtpPacketReceived& packet)"
  },
  {
    "label": "RtcEventRtpPacketIncoming()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "RtcEventRtpPacketIncoming()"
  },
  {
    "label": "GetType()",
    "kind": "Method",
    "detail": "Function (Type)",
    "insertText": "GetType()"
  },
  {
    "label": "packet_length()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "packet_length()"
  },
  {
    "label": "RawHeader()",
    "kind": "Method",
    "detail": "Function (} rtc::ArrayView<const uint8_t>)",
    "insertText": "RawHeader()"
  },
  {
    "label": "Ssrc()",
    "kind": "Method",
    "detail": "Function (} uint32_t)",
    "insertText": "Ssrc()"
  },
  {
    "label": "Timestamp()",
    "kind": "Method",
    "detail": "Function (} uint32_t)",
    "insertText": "Timestamp()"
  },
  {
    "label": "SequenceNumber()",
    "kind": "Method",
    "detail": "Function (} uint16_t)",
    "insertText": "SequenceNumber()"
  },
  {
    "label": "PayloadType()",
    "kind": "Method",
    "detail": "Function (} uint8_t)",
    "insertText": "PayloadType()"
  },
  {
    "label": "Marker()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "Marker()"
  },
  {
    "label": "GetExtension()",
    "kind": "Method",
    "detail": "Function (} template<ExtensionTrait,. . . Args> bool)",
    "insertText": "GetExtension(Args&&... args)"
  },
  {
    "label": "HasExtension()",
    "kind": "Method",
    "detail": "Function (} template<ExtensionTrait> bool)",
    "insertText": "HasExtension()"
  },
  {
    "label": "payload_length()",
    "kind": "Method",
    "detail": "Function (} size_t)",
    "insertText": "payload_length()"
  },
  {
    "label": "header_length()",
    "kind": "Method",
    "detail": "Function (} size_t)",
    "insertText": "header_length()"
  },
  {
    "label": "padding_length()",
    "kind": "Method",
    "detail": "Function (} size_t)",
    "insertText": "padding_length()"
  },
  {
    "label": "Encode()",
    "kind": "Method",
    "detail": "Function (} std::string)",
    "insertText": "Encode(rtc::ArrayView<const RtcEvent*> batch)"
  },
  {
    "label": "RtcEventRtpPacketIncoming()",
    "kind": "Method",
    "detail": "Function (} private :)",
    "insertText": "RtcEventRtpPacketIncoming(const RtcEventRtpPacketIncoming& other)"
  }
]