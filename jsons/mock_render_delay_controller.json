[
  {
    "label": "MockRenderDelayController",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MockRenderDelayController"
  },
  {
    "label": "MockRenderDelayController()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_AUDIO_PROCESSING_AEC3_MOCK_MOCK_RENDER_DELAY_CONTROLLER_H_ # define MODULES_AUDIO_PROCESSING_AEC3_MOCK_MOCK_RENDER_DELAY_CONTROLLER_H_ # include \" absl / types / optional . h \" # include \" api / array_view . h \" # include \" modules / audio_processing / aec3 / downsampled_render_buffer . h \" # include \" modules / audio_processing / aec3 / render_delay_controller . h \" # include \" test / gmock . h \" namespace webrtc { namespace test { class MockRenderDelayController : public RenderDelayController { public :)",
    "insertText": "MockRenderDelayController()"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(void, Reset, (bool reset_delay_statistics), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(void, LogRenderCall, (), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(absl::optional<DelayEstimate>, GetDelay, (const DownsampledRenderBuffer& render_buffer, size_t render_delay_buffer_delay, const Block& capture), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(bool, HasClockdrift, (), (const, override))"
  }
]