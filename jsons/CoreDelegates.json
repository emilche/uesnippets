[
  {
    "label": "AActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AActor"
  },
  {
    "label": "Error",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Error"
  },
  {
    "label": "FConfigFile",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FConfigFile"
  },
  {
    "label": "FName",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FName"
  },
  {
    "label": "FSHAHash",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSHAHash"
  },
  {
    "label": "FText",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FText"
  },
  {
    "label": "IPakFile",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPakFile"
  },
  {
    "label": "ITargetPlatform",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITargetPlatform"
  },
  {
    "label": "FGuid",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGuid"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "FTestHotFixPayload",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTestHotFixPayload"
  },
  {
    "label": "FCrashOverrideParameters",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCrashOverrideParameters"
  },
  {
    "label": "FMultiprocessCreatedContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMultiprocessCreatedContext"
  },
  {
    "label": "FMultiprocessDetachedContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMultiprocessDetachedContext"
  },
  {
    "label": "FCoreDelegates",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCoreDelegates"
  },
  {
    "label": "IMovieStreamer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IMovieStreamer"
  },
  {
    "label": "UWorld",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UWorld"
  },
  {
    "label": "FExtraBinaryConfigData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FExtraBinaryConfigData"
  },
  {
    "label": "FConfigCacheIni",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FConfigCacheIni"
  },
  {
    "label": "FIoRequest",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FIoRequest"
  },
  {
    "label": "FIoChunkId",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FIoChunkId"
  },
  {
    "label": "IPackageStore",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPackageStore"
  },
  {
    "label": "FCrashOverrideParameters()",
    "kind": "Method",
    "detail": "Function (# pragma once # if UE_ENABLE_INCLUDE_ORDER_DEPRECATED_IN_5_2 # include \" Async / TaskGraphInterfaces . h \" # endif # include \" Async / TaskGraphFwd . h \" # include \" Containers / Array . h \" # include \" Containers / ArrayView . h \" # include \" Containers / Map . h \" # include \" Containers / Set . h \" # include \" Containers / UnrealString . h \" # include \" CoreTypes . h \" # include \" Delegates / Delegate . h \" # include \" GenericPlatform / GenericPlatformFile . h \" # include \" HAL / PlatformFile . h \" # include \" HAL / PlatformMisc . h \" # include \" Logging / LogCategory . h \" # include \" Logging / LogVerbosity . h \" # include \" Math / IntVector . h \" # include \" Math / MathFwd . h \" # include \" Misc / AES . h \" # include \" Misc / Build . h \" # include \" Misc / Optional . h \" # include \" Templates / Function . h \" # include \" Templates / SharedPointer . h \" class AActor ; class Error ; class FConfigFile ; class FName ; class FSHAHash ; class FText ; class IPakFile ; class ITargetPlatform ; struct FGuid ; enum class EForkProcessRole : uint8 ; namespace EHotfixDelegates { enum Type { Test,} ; } struct FTestHotFixPayload { FString Message ; bool ValueToReturn ; bool Result ; } ; struct FCrashOverrideParameters { FString GameNameSuffix ; bool bSetCrashReportClientMessageText = true ; bool bSetGameNameSuffix = false ; TOptional<bool> SendUnattendedBugReports ; TOptional<bool> SendUsageData ; ~)",
    "insertText": "FCrashOverrideParameters()"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (} ; namespace UE { struct FMultiprocessCreatedContext { int32 Id ; } ; struct FMultiprocessDetachedContext { int32 Id ; bool bAbnormalDetach ; } ; } class FCoreDelegates { public : TMulticastDelegate<)",
    "insertText": "void()"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (TTSMulticastDelegate<)",
    "insertText": "void(FStringView)>& GetOnAsyncLoadPackage()"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (TMulticastDelegate<)",
    "insertText": "void(const FString&)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (TDelegate<)",
    "insertText": "void(void*, int32)>& GetHotfixDelegate(EHotfixDelegates::Type HotFix)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (TMulticastDelegate<)",
    "insertText": "void(bool, int32, int32)"
  },
  {
    "label": "int32()",
    "kind": "Method",
    "detail": "Function (TDelegate<)",
    "insertText": "int32(const TArray<FString>&)"
  },
  {
    "label": "IPakFile()",
    "kind": "Method",
    "detail": "Function (TDelegate<)",
    "insertText": "IPakFile(const FString&, int32)"
  },
  {
    "label": "bool()",
    "kind": "Method",
    "detail": "Function (TDelegate<)",
    "insertText": "bool(const FString&)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (TTSMulticastDelegate<)",
    "insertText": "void(const IPakFile&)>& GetOnPakFileMounted2()"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (TTSMulticastDelegate<)",
    "insertText": "void(const TCHAR* PakFile, const TCHAR* FileName)>& GetOnFileOpenedForReadFromPakFile()"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (typedef TSharedPtr<class IMovieStreamer,ESPMode::ThreadSafe> FMovieStreamerPtr ; TMulticastDelegate<)",
    "insertText": "void(FMovieStreamerPtr)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (TMulticastDelegate<)",
    "insertText": "void(AActor*)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (TMulticastDelegate<)",
    "insertText": "void(const FGuid&, const FAES::FAESKey&)>& GetRegisterEncryptionKeyMulticastDelegate()"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (TDelegate<)",
    "insertText": "void(uint8[32])>& GetPakEncryptionKeyDelegate()"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (TDelegate<)",
    "insertText": "void(TArray<uint8>&, TArray<uint8>&)>& GetPakSigningKeysDelegate()"
  },
  {
    "label": "FCVarKeyValueMap()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR FSimpleMulticastDelegate PreModal ; FSimpleMulticastDelegate PostModal ; FSimpleMulticastDelegate PreSlateModal ; FSimpleMulticastDelegate PostSlateModal ; # endif # if ALLOW_OTHER_PLATFORM_CONFIG typedef TMap<FName,FString> FCVarKeyValueMap ; TDelegate<)",
    "insertText": "FCVarKeyValueMap(const FString& DeviceProfileName)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (# endif FSimpleMulticastDelegate OnShutdownAfterError ; FSimpleMulticastDelegate OnInit ; FSimpleMulticastDelegate OnOutputDevicesInit ; FSimpleMulticastDelegate OnPostEngineInit ; FSimpleMulticastDelegate OnAllModuleLoadingPhasesComplete ; FSimpleMulticastDelegate OnFEngineLoopInitComplete ; FSimpleMulticastDelegate OnCommandletPreMain ; FSimpleMulticastDelegate OnCommandletPostMain ; FSimpleMulticastDelegate OnExit ; FSimpleMulticastDelegate OnPreExit ; FSimpleMulticastDelegate OnEnginePreExit ; TMulticastDelegate<)",
    "insertText": "void(TArray<FString>&)"
  },
  {
    "label": "Type()",
    "kind": "Method",
    "detail": "Function (FSimpleMulticastDelegate ColorPickerChanged ; TDelegate<)",
    "insertText": "Type(EAppMsgCategory, EAppMsgType::Type, const FText&, const FText&)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (TMulticastDelegate<)",
    "insertText": "void(const FString&, const FString&)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (FSimpleMulticastDelegate OnBeginFrame ; FSimpleMulticastDelegate OnSamplingInput ; FSimpleMulticastDelegate OnEndFrame ; FSimpleMulticastDelegate OnBeginFrameRT ; FSimpleMulticastDelegate OnEndFrameRT ; TMulticastDelegate<)",
    "insertText": "void(class UWorld*, FIntVector, FIntVector)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (enum class ETemperatureSeverity : uint8 { Unknown,Good,Bad,Serious,Critical,NumSeverities,} ; TMulticastDelegate<)",
    "insertText": "void(ETemperatureSeverity)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (TMulticastDelegate<)",
    "insertText": "void(bool)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_OneParam(FOnNetworkConnectionChanged, ENetworkConnectionType)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (FOnNetworkConnectionChanged OnNetworkConnectionChanged ; TTSMulticastDelegate<)",
    "insertText": "void(const TCHAR* IniFilename, int32& ResponderCount)>& TSCountPreLoadConfigFileRespondersDelegate()"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (TTSMulticastDelegate<)",
    "insertText": "void(const TCHAR* IniFilename, FString& LoadedContents)>& TSPreLoadConfigFileDelegate()"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (TTSMulticastDelegate<)",
    "insertText": "void(const TCHAR* IniFilename, const FString& ContentsToSave, int32& SavedCount)>& TSPreSaveConfigFileDelegate()"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (TTSMulticastDelegate<)",
    "insertText": "void(const FConfigFile*)>& TSOnFConfigCreated()"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (TTSMulticastDelegate<)",
    "insertText": "void(const FConfigFile*)>& TSOnFConfigDeleted()"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (TTSMulticastDelegate<)",
    "insertText": "void(const TCHAR* IniFilename, const TCHAR* SectionName, const TCHAR* Key)>& TSOnConfigValueRead()"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (TTSMulticastDelegate<)",
    "insertText": "void(const TCHAR* IniFilename, const TCHAR* SectionName)>& TSOnConfigSectionRead()"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (TTSMulticastDelegate<)",
    "insertText": "void(const TCHAR* IniFilename, const TCHAR* SectionName)>& TSOnConfigSectionNameRead()"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (TTSMulticastDelegate<)",
    "insertText": "void(const FString& IniFilename, const TSet<FString>& SectionNames)>& TSOnConfigSectionsChanged()"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (TMulticastDelegate<)",
    "insertText": "void(const TCHAR* SectionName, const TCHAR* IniFilename, uint32 SetBy, bool bAllowCheating)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (TMulticastDelegate<)",
    "insertText": "void(uint32 ResX, uint32 ResY)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR TMulticastDelegate<)",
    "insertText": "void(const ITargetPlatform*)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (TMulticastDelegate<)",
    "insertText": "void(int, const FName&)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (TTSMulticastDelegate<)",
    "insertText": "void()>& GetApplicationWillTerminateDelegate()"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (TMulticastDelegate<)",
    "insertText": "void(float DeltaTime)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (TMulticastDelegate<)",
    "insertText": "void(bool, int)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (TMulticastDelegate<)",
    "insertText": "void(const TArray<FString>&)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (TMulticastDelegate<)",
    "insertText": "void(TArray<uint8>)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (TMulticastDelegate<)",
    "insertText": "void(int)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (TMulticastDelegate<)",
    "insertText": "void(FString)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (TMulticastDelegate<)",
    "insertText": "void(FString, int)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (TMulticastDelegate<)",
    "insertText": "void(FString, int, int)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (TMulticastDelegate<)",
    "insertText": "void(int32)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (TMulticastDelegate<)",
    "insertText": "void(const TCHAR*, bool&, bool&)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (TMulticastDelegate<)",
    "insertText": "void(const TCHAR*)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (TMulticastDelegate<)",
    "insertText": "void(const bool)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (TMulticastDelegate<)",
    "insertText": "void(EConvertibleLaptopMode)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (TMulticastDelegate<)",
    "insertText": "void(const FCrashOverrideParameters&)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (TMulticastDelegate<)",
    "insertText": "void()>& GetPreMainInitDelegate()"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (TTSMulticastDelegate<)",
    "insertText": "void()>& TSConfigReadyForUse()"
  },
  {
    "label": "bool()",
    "kind": "Method",
    "detail": "Function (TArray<TDelegate<)",
    "insertText": "bool(const FString&, FString&)"
  },
  {
    "label": "GetMemoryTrimDelegate()",
    "kind": "Method",
    "detail": "Function (FSimpleMulticastDelegate&)",
    "insertText": "GetMemoryTrimDelegate()"
  },
  {
    "label": "GetLowLevelAllocatorMemoryTrimDelegate()",
    "kind": "Method",
    "detail": "Function (FSimpleMulticastDelegate&)",
    "insertText": "GetLowLevelAllocatorMemoryTrimDelegate()"
  },
  {
    "label": "GetRefreshLowLevelAllocatorDelegate()",
    "kind": "Method",
    "detail": "Function (FSimpleMulticastDelegate&)",
    "insertText": "GetRefreshLowLevelAllocatorDelegate()"
  },
  {
    "label": "GetOutOfMemoryDelegate()",
    "kind": "Method",
    "detail": "Function (FSimpleMulticastDelegate&)",
    "insertText": "GetOutOfMemoryDelegate()"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (TMulticastDelegate<)",
    "insertText": "void(const uint64, const uint64)>& GetGPUOutOfMemoryDelegate()"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (enum class EOnScreenMessageSeverity : uint8 { Info,Warning,Error,} ; typedef TMultiMap<EOnScreenMessageSeverity,FText> FSeverityMessageMap ; TMulticastDelegate<)",
    "insertText": "void(FSeverityMessageMap&)"
  },
  {
    "label": "bool()",
    "kind": "Method",
    "detail": "Function (TDelegate<)",
    "insertText": "bool()"
  },
  {
    "label": "bool()",
    "kind": "Method",
    "detail": "Function (TDelegate<)",
    "insertText": "bool(const TCHAR* URL)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (TDelegate<)",
    "insertText": "void(const FString& URL, FString* Error)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (TMulticastDelegate<)",
    "insertText": "void(const FString& Parameter, FPlatformUserId UserId)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (TMulticastDelegate<)",
    "insertText": "void(bool bIsNetworkInitialized)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (TMulticastDelegate<)",
    "insertText": "void(ENetworkConnectionStatus LastConnectionState, ENetworkConnectionStatus ConnectionState)"
  },
  {
    "label": "FExtraBinaryConfigData()",
    "kind": "Method",
    "detail": "Function (struct FExtraBinaryConfigData { TMap<FString,TArray<uint8>> Data ; class FConfigCacheIni& Config ; bool bIsGenerating ;)",
    "insertText": "FExtraBinaryConfigData(class FConfigCacheIni& InConfig, bool InIsGenerating) : Config(InConfig) , bIsGenerating(InIsGenerating)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (} } ; TTSMulticastDelegate<)",
    "insertText": "void(FExtraBinaryConfigData&)>& TSAccessExtraBinaryConfigData()"
  },
  {
    "label": "FIoRequest()",
    "kind": "Method",
    "detail": "Function (using FAttachShaderReadRequestFunc = TFunctionRef<class)",
    "insertText": "FIoRequest(const class FIoChunkId&, FGraphEventRef)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (TDelegate<)",
    "insertText": "void(TArrayView<const FSHAHash>, FAttachShaderReadRequestFunc)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (TDelegate<)",
    "insertText": "void(TArrayView<const FSHAHash>)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (TMulticastDelegate<)",
    "insertText": "void(const FLogCategoryName& CategoryName, ELogVerbosity::Type OldVerbosity, ELogVerbosity::Type NewVerbosity)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (FSimpleMulticastDelegate OnParentBeginFork ; FSimpleMulticastDelegate OnParentPreFork ; TMulticastDelegate<)",
    "insertText": "void(EForkProcessRole ProcessRole)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (FSimpleMulticastDelegate OnChildEndFramePostFork ;)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_OneParam(FOnNamedCommandParsed, const TCHAR*)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (FOnNamedCommandParsed OnNamedCommandParsed ;)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_OneParam(FOnDisallowedExecCommandCalled, const TCHAR*)"
  },
  {
    "label": "TCHAR()",
    "kind": "Method",
    "detail": "Function (FOnDisallowedExecCommandCalled OnDisallowedExecCommandCalled ; TDelegate<const)",
    "insertText": "TCHAR()"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR TMulticastDelegate<)",
    "insertText": "void(const UE::FMultiprocessCreatedContext&)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (TMulticastDelegate<)",
    "insertText": "void(const UE::FMultiprocessDetachedContext&)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (# endif private : TArray<TDelegate<)",
    "insertText": "void(void*, int32)"
  },
  {
    "label": "FCoreDelegates()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FCoreDelegates()"
  }
]