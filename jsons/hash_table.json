[
  {
    "label": "string_to_uint_map",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "string_to_uint_map"
  },
  {
    "label": "hash_table",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "hash_table"
  },
  {
    "label": "unsigned()",
    "kind": "Method",
    "detail": "Function (# ifndef HASH_TABLE_H # define HASH_TABLE_H # include<string . h> # include<stdint . h> # include<limits . h> # ifdef __APPLE__ # else # include<malloc . h> # endif struct string_to_uint_map ; struct hash_table ; typedef)",
    "insertText": "unsigned(*hash_func_t)(const void *key)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "int(*hash_compare_func_t)(const void *key1, const void *key2)"
  },
  {
    "label": "hash_table_ctor()",
    "kind": "Method",
    "detail": "Function (struct hash_table*)",
    "insertText": "hash_table_ctor(unsigned num_buckets, hash_func_t hash, hash_compare_func_t compare)"
  },
  {
    "label": "hash_table_dtor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "hash_table_dtor(struct hash_table *ht)"
  },
  {
    "label": "hash_table_dtor_FreeData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "hash_table_dtor_FreeData(struct hash_table *ht)"
  },
  {
    "label": "hash_table_clear()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "hash_table_clear(struct hash_table *ht)"
  },
  {
    "label": "hash_table_find()",
    "kind": "Method",
    "detail": "Function (void*)",
    "insertText": "hash_table_find(struct hash_table *ht, const void *key)"
  },
  {
    "label": "hash_table_insert()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "hash_table_insert(struct hash_table *ht, void *data, const void *key)"
  },
  {
    "label": "hash_table_replace()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "hash_table_replace(struct hash_table *ht, void *data, const void *key)"
  },
  {
    "label": "hash_table_remove()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "hash_table_remove(struct hash_table *ht, const void *key)"
  },
  {
    "label": "hash_table_string_hash()",
    "kind": "Method",
    "detail": "Function (unsigned)",
    "insertText": "hash_table_string_hash(const void *key)"
  },
  {
    "label": "hash_table_string_compare()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "hash_table_string_compare((hash_compare_func_t) strcmp) unsigned hash_table_pointer_hash(const void *key)"
  },
  {
    "label": "hash_table_pointer_compare()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "hash_table_pointer_compare(const void *key1, const void *key2)"
  },
  {
    "label": "hash_table_call_foreach()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "hash_table_call_foreach(struct hash_table *ht, void (*callback)(const void *key, void *data, void *closure), void *closure)"
  },
  {
    "label": "string_to_uint_map_ctor()",
    "kind": "Method",
    "detail": "Function (struct string_to_uint_map*)",
    "insertText": "string_to_uint_map_ctor()"
  },
  {
    "label": "string_to_uint_map_dtor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "string_to_uint_map_dtor(struct string_to_uint_map *)"
  },
  {
    "label": "string_to_uint_map()",
    "kind": "Method",
    "detail": "Function (struct string_to_uint_map { public :)",
    "insertText": "string_to_uint_map()"
  },
  {
    "label": "hash_table_ctor()",
    "kind": "Method",
    "detail": "Function (this -> ht =)",
    "insertText": "hash_table_ctor(0, hash_table_string_hash, hash_table_string_compare)"
  },
  {
    "label": "hash_table_call_foreach()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "hash_table_call_foreach(this->ht, delete_key, NULL)"
  },
  {
    "label": "hash_table_dtor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "hash_table_dtor(this->ht)"
  },
  {
    "label": "clear()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "clear()"
  },
  {
    "label": "hash_table_clear()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "hash_table_clear(this->ht)"
  },
  {
    "label": "get()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "get(unsigned &value, const char *key)"
  },
  {
    "label": "v()",
    "kind": "Method",
    "detail": "Function (const intptr_t)",
    "insertText": "v(intptr_t) hash_table_find(this->ht, (const void *) key)"
  },
  {
    "label": "value()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "value(unsigned)(v - 1)"
  },
  {
    "label": "delete_key()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "delete_key(const void *key, void *data, void *closure)"
  },
  {
    "label": "free()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "free((char *)key)"
  }
]