[
  {
    "label": "SRealtimeProfilerLineGraph",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SRealtimeProfilerLineGraph"
  },
  {
    "label": "SRealtimeProfilerVisualizer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SRealtimeProfilerVisualizer"
  },
  {
    "label": "SScrollBar",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SScrollBar"
  },
  {
    "label": "STextBlock",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "STextBlock"
  },
  {
    "label": "STimeline",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "STimeline"
  },
  {
    "label": "FRealtimeProfilerFPSChartFrame",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRealtimeProfilerFPSChartFrame"
  },
  {
    "label": "SRealtimeProfilerTimeline",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SRealtimeProfilerTimeline"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Misc / Attribute . h \" # include \" Layout / Geometry . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Widgets / SCompoundWidget . h \" # include \" VisualizerEvents . h \" class SRealtimeProfilerLineGraph ; class SRealtimeProfilerVisualizer ; class SScrollBar ; class STextBlock ; class STimeline ; struct FRealtimeProfilerFPSChartFrame ; class SRealtimeProfilerTimeline : public SCompoundWidget { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SRealtimeProfilerTimeline ) : _Visualizer()"
  },
  {
    "label": "SLATE_ATTRIBUTE()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_ATTRIBUTE(SRealtimeProfilerVisualizer *, Visualizer ) SLATE_END_ARGS() void Construct( const FArguments& InArgs)"
  },
  {
    "label": "HandleEventSelectionChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleEventSelectionChanged(TSharedPtr< FVisualizerEvent > Selection)"
  },
  {
    "label": "AppendData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AppendData(TSharedPtr< FVisualizerEvent > ProfileData, FRealtimeProfilerFPSChartFrame * InFPSChartFrame)"
  },
  {
    "label": "IsProfiling()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsProfiling()"
  },
  {
    "label": "GetMaxScrollOffsetFraction()",
    "kind": "Method",
    "detail": "Function (protected : float)",
    "insertText": "GetMaxScrollOffsetFraction()"
  },
  {
    "label": "GetMaxGraphOffset()",
    "kind": "Method",
    "detail": "Function (} float)",
    "insertText": "GetMaxGraphOffset()"
  },
  {
    "label": "GetZoom()",
    "kind": "Method",
    "detail": "Function (} float)",
    "insertText": "GetZoom()"
  },
  {
    "label": "ZoomSliderValue()",
    "kind": "Method",
    "detail": "Function (const float MinZoom = 1 . 0 f ; const float MaxZoom = 2 0 . 0 f ; return MinZoom +)",
    "insertText": "ZoomSliderValue(MaxZoom - MinZoom)"
  },
  {
    "label": "ScrollBar_OnUserScrolled()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "ScrollBar_OnUserScrolled(float InScrollOffsetFraction)"
  },
  {
    "label": "GetZoomLabel()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetZoomLabel()"
  },
  {
    "label": "GetZoomValue()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetZoomValue()"
  },
  {
    "label": "OnSetZoomValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSetZoomValue(float NewValue)"
  },
  {
    "label": "SetViewMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetViewMode(EVisualizerViewMode::Type InMode)"
  },
  {
    "label": "CheckViewMode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CheckViewMode(EVisualizerViewMode::Type InMode)"
  },
  {
    "label": "OnLineGraphGeometryChanged()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "OnLineGraphGeometryChanged(FGeometry Geometry)"
  },
  {
    "label": "AdjustTimeline()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AdjustTimeline(TSharedPtr< FVisualizerEvent > InEvent)"
  }
]