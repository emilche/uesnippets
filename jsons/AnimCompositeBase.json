[
  {
    "label": "of",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "of"
  },
  {
    "label": "UAnimCompositeBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimCompositeBase"
  },
  {
    "label": "UAnimSequence",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimSequence"
  },
  {
    "label": "FCompactPose",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCompactPose"
  },
  {
    "label": "FRootMotionExtractionStep",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRootMotionExtractionStep"
  },
  {
    "label": "FAnimSegment",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimSegment"
  },
  {
    "label": "UEditorAnimSegment",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEditorAnimSegment"
  },
  {
    "label": "UEditorAnimCompositeSegment",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEditorAnimCompositeSegment"
  },
  {
    "label": "FAnimTrack",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimTrack"
  },
  {
    "label": "FAnimTrack",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimTrack"
  },
  {
    "label": "UAnimSequence",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimSequence"
  },
  {
    "label": "UAnimCompositeBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimCompositeBase"
  },
  {
    "label": "UAnimCompositeBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimCompositeBase"
  },
  {
    "label": "UpdateCachedPlayLength()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateCachedPlayLength()"
  },
  {
    "label": "SetAnimReference()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAnimReference(UAnimSequenceBase* InAnimReference, bool bInitialize = false)"
  },
  {
    "label": "ValidateSegmentTimes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ValidateSegmentTimes()"
  },
  {
    "label": "EnableRootMotionSettingFromMontage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnableRootMotionSettingFromMontage(bool bInEnableRootMotion, const ERootMotionRootLock::Type InRootMotionRootLock)"
  },
  {
    "label": "ReplaceReferredAnimations()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReplaceReferredAnimations(const TMap<UAnimationAsset*, UAnimationAsset*>& ReplacementMap)"
  },
  {
    "label": "CollapseAnimSegments()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CollapseAnimSegments()"
  },
  {
    "label": "SortAnimSegments()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SortAnimSegments()"
  },
  {
    "label": "InvalidateRecursiveAsset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InvalidateRecursiveAsset(class UAnimCompositeBase* CheckAsset)"
  },
  {
    "label": "ContainRecursive()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ContainRecursive(const TArray<UAnimCompositeBase*>& CurrentAccumulatedList)"
  }
]