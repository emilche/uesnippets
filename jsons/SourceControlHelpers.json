[
  {
    "label": "FAnnotationLine",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAnnotationLine"
  },
  {
    "label": "FName",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FName"
  },
  {
    "label": "ISourceControlProvider",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISourceControlProvider"
  },
  {
    "label": "UPackage",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPackage"
  },
  {
    "label": "USourceControlHelpers",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USourceControlHelpers"
  },
  {
    "label": "FAssetData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAssetData"
  },
  {
    "label": "FFrame",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFrame"
  },
  {
    "label": "FSourceControlState",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSourceControlState"
  },
  {
    "label": "SOURCECONTROL_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SOURCECONTROL_API"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" Containers / UnrealString . h \" # include \" CoreMinimal . h \" # include \" Delegates / Delegate . h \" # include \" HAL / Platform . h \" # include \" ISourceControlProvider . h \" # include \" ISourceControlRevision . h \" # include \" ISourceControlState . h \" # include \" Internationalization / Text . h \" # include \" UObject / Object . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / TextProperty . h \" # include \" UObject / UObjectGlobals . h \" # include \" UObject / WeakObjectPtr . h \" # include \" SourceControlHelpers . generated . h \" class FAnnotationLine ; class FName ; class ISourceControlProvider ; class UPackage ; class USourceControlHelpers ; struct FAssetData ; struct FFrame ;)",
    "insertText": "USTRUCT(BlueprintType)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: FSourceControlState() : bIsValid(false), bIsUnknown(false), bCanCheckIn(false), bCanCheckOut(false), bIsCheckedOut(false), bIsCurrent(false), bIsSourceControlled(false), bIsAdded(false), bIsDeleted(false), bIsIgnored(false), bCanEdit(false), bCanDelete(false), bIsModified(false), bCanAdd(false), bIsConflicted(false), bCanRevert(false), bIsCheckedOutOther(false)"
  },
  {
    "label": "DECLARE_DELEGATE_RetVal_ThreeParams()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "DECLARE_DELEGATE_RetVal_ThreeParams(bool, FOnPostCheckOut, const FString& , const FText& , FText&)"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (typedef class USourceControlHelpers SourceControlHelpers ;)",
    "insertText": "UCLASS(Abstract, Transient, meta = (ScriptName = \"SourceControl\"))"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: UFUNCTION(BlueprintPure, Category = \"Editor Scripting | Editor Revision Control Helpers\", meta = (Keywords = \"Source Control\")) static FString CurrentProvider()"
  },
  {
    "label": "CheckoutOrMarkForAdd()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CheckoutOrMarkForAdd(const FString& InDestFile, const FText& InFileDescription, const FOnPostCheckOut& OnPostCheckOut, FText& OutFailReason)"
  },
  {
    "label": "ApplyOperationAndReloadPackages()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR bool)",
    "insertText": "ApplyOperationAndReloadPackages(const TArray<FString>& InPackagesToApplyOperation, const TFunctionRef<bool(const TArray<FString>&)>& InOperation, bool bReloadWorld = false, bool bInteractive = true)"
  },
  {
    "label": "RevertAllChangesAndReloadWorld()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RevertAllChangesAndReloadWorld()"
  },
  {
    "label": "RevertUnchangedFiles()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RevertUnchangedFiles(ISourceControlProvider& InProvider, const TArray<FString>& InFiles)"
  },
  {
    "label": "CopyFileUnderSourceControl()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CopyFileUnderSourceControl(const FString& InDestFile, const FString& InSourceFile, const FText& InFileDescription, FText& OutFailReason)"
  },
  {
    "label": "DECLARE_DYNAMIC_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DYNAMIC_DELEGATE_OneParam(FQueryFileStateDelegate, FSourceControlState, FileStateOut)"
  },
  {
    "label": "GetFilesInDepotAtPath()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetFilesInDepotAtPath(const FString& Path, TArray<FString>& OutFilesList, bool bIncludeDeleted = false, bool bSilent = false, bool bIsFileRegexSearch = false)"
  },
  {
    "label": "GetFilesInDepotAtPaths()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetFilesInDepotAtPaths(const TArray<FString>& Paths, TArray<FString>& OutFilesList, bool bIncludeDeleted = false, bool bSilent = false, bool bIsFileRegexSearch = false)"
  },
  {
    "label": "PackageFilename()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "PackageFilename(const FString& InPackageName)"
  },
  {
    "label": "PackageFilename()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "PackageFilename(const UPackage* InPackage)"
  },
  {
    "label": "PackageFilenames()",
    "kind": "Method",
    "detail": "Function (TArray<FString>)",
    "insertText": "PackageFilenames(const TArray<FString>& InPackageNames)"
  },
  {
    "label": "PackageFilenames()",
    "kind": "Method",
    "detail": "Function (TArray<FString>)",
    "insertText": "PackageFilenames(const TArray<UPackage*>& InPackages)"
  },
  {
    "label": "AbsoluteFilenames()",
    "kind": "Method",
    "detail": "Function (TArray<FString>)",
    "insertText": "AbsoluteFilenames(const TArray<FString>& InFileNames)"
  },
  {
    "label": "AnnotateFile()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AnnotateFile(ISourceControlProvider& InProvider, const FString& InLabel, const FString& InFile, TArray<FAnnotationLine>& OutLines)"
  },
  {
    "label": "AnnotateFile()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AnnotateFile(ISourceControlProvider& InProvider, int32 InCheckInIdentifier, const FString& InFile, TArray<FAnnotationLine>& OutLines)"
  },
  {
    "label": "BranchPackage()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "BranchPackage(UPackage* DestPackage, UPackage* SourcePackage, EStateCacheUsage::Type StateCacheUsage = EStateCacheUsage::ForceUpdate)"
  },
  {
    "label": "CopyPackage()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CopyPackage(UPackage* DestPackage, UPackage* SourcePackage, EStateCacheUsage::Type StateCacheUsage = EStateCacheUsage::ForceUpdate)"
  },
  {
    "label": "GetSettingsIni()",
    "kind": "Method",
    "detail": "Function (const FString&)",
    "insertText": "GetSettingsIni()"
  },
  {
    "label": "GetGlobalSettingsIni()",
    "kind": "Method",
    "detail": "Function (const FString&)",
    "insertText": "GetGlobalSettingsIni()"
  },
  {
    "label": "GetAssetData()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetAssetData(const FString& InFileName, const FString& InPackageName, TArray<FAssetData>& OutAssets, TArray<FName>* OutDependencies = nullptr)"
  },
  {
    "label": "GetAssetData()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetAssetData(const FString& InFileName, TArray<FAssetData>& OutAssets, TArray<FName>* OutDependencies = nullptr)"
  },
  {
    "label": "GetAssetDataFromPackage()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetAssetDataFromPackage(const FString& InPackageName, TArray<FAssetData>& OutAssets, TArray<FName>* OutDependencies = nullptr)"
  },
  {
    "label": "GetAssetDataFromFileHistory()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetAssetDataFromFileHistory(const FString& InFileName, TArray<FAssetData>& OutAssets, TArray<FName>* OutDependencies = nullptr, int64 MaxFetchSize = -1)"
  },
  {
    "label": "GetAssetDataFromFileHistory()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetAssetDataFromFileHistory(FSourceControlStatePtr InSourceControlState, TArray<FAssetData>& OutAssets, TArray<FName>* OutDependencies = nullptr, int64 MaxFetchSize = -1)"
  },
  {
    "label": "ListRevertablePackages()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ListRevertablePackages(TArray<FString>& OutRevertablePackageNames)"
  },
  {
    "label": "GetSourceControlLocations()",
    "kind": "Method",
    "detail": "Function (TArray<FString>)",
    "insertText": "GetSourceControlLocations(const bool bContentOnly = false)"
  },
  {
    "label": "FScopedSourceControl()",
    "kind": "Method",
    "detail": "Function (} ; class FScopedSourceControl { public :)",
    "insertText": "FScopedSourceControl()"
  },
  {
    "label": "GetProvider()",
    "kind": "Method",
    "detail": "Function (ISourceControlProvider&)",
    "insertText": "GetProvider()"
  }
]