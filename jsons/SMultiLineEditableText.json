[
  {
    "label": "FActiveTimerHandle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FActiveTimerHandle"
  },
  {
    "label": "FArrangedChildren",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FArrangedChildren"
  },
  {
    "label": "FPaintArgs",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPaintArgs"
  },
  {
    "label": "FSlateEditableTextLayout",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateEditableTextLayout"
  },
  {
    "label": "FSlateWindowElementList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateWindowElementList"
  },
  {
    "label": "ITextLayoutMarshaller",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITextLayoutMarshaller"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "ITextLayoutMarshaller",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITextLayoutMarshaller"
  },
  {
    "label": "FSlateEditableTextLayout",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateEditableTextLayout"
  },
  {
    "label": "SMultiLineEditableText",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SMultiLineEditableText"
  },
  {
    "label": "FScopedEditableTextTransaction",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FScopedEditableTextTransaction"
  },
  {
    "label": "SMultiLineEditableText()",
    "kind": "Method",
    "detail": "Function (SLATE_API)",
    "insertText": "SMultiLineEditableText()"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct( const FArguments& InArgs )"
  },
  {
    "label": "SetText()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetText(const TAttribute< FText >& InText)"
  },
  {
    "label": "SetHintText()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetHintText(const TAttribute< FText >& InHintText)"
  },
  {
    "label": "SetSearchText()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSearchText(const TAttribute<FText>& InSearchText)"
  },
  {
    "label": "SetTextStyle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTextStyle(const FTextBlockStyle* InTextStyle)"
  },
  {
    "label": "SetFont()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFont(const TAttribute< FSlateFontInfo >& InNewFont)"
  },
  {
    "label": "SetTextShapingMethod()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTextShapingMethod(const TOptional<ETextShapingMethod>& InTextShapingMethod)"
  },
  {
    "label": "SetTextFlowDirection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTextFlowDirection(const TOptional<ETextFlowDirection>& InTextFlowDirection)"
  },
  {
    "label": "SetWrapTextAt()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetWrapTextAt(const TAttribute<float>& InWrapTextAt)"
  },
  {
    "label": "SetAutoWrapText()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAutoWrapText(const TAttribute<bool>& InAutoWrapText)"
  },
  {
    "label": "SetWrappingPolicy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetWrappingPolicy(const TAttribute<ETextWrappingPolicy>& InWrappingPolicy)"
  },
  {
    "label": "SetLineHeightPercentage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetLineHeightPercentage(const TAttribute<float>& InLineHeightPercentage)"
  },
  {
    "label": "SetApplyLineHeightToBottomLine()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetApplyLineHeightToBottomLine(const TAttribute<bool>& InApplyLineHeightToBottomLine)"
  },
  {
    "label": "SetMargin()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetMargin(const TAttribute<FMargin>& InMargin)"
  },
  {
    "label": "SetJustification()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetJustification(const TAttribute<ETextJustify::Type>& InJustification)"
  },
  {
    "label": "SetOverflowPolicy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetOverflowPolicy(TOptional<ETextOverflowPolicy> InOverflowPolicy)"
  },
  {
    "label": "SetAllowContextMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAllowContextMenu(const TAttribute< bool >& InAllowContextMenu)"
  },
  {
    "label": "SetVirtualKeyboardDismissAction()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetVirtualKeyboardDismissAction(TAttribute< EVirtualKeyboardDismissAction > InVirtualKeyboardDismissAction)"
  },
  {
    "label": "SetSelectWordOnMouseDoubleClick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSelectWordOnMouseDoubleClick(const TAttribute<bool>& InSelectWordOnMouseDoubleClick)"
  },
  {
    "label": "SetIsReadOnly()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetIsReadOnly(const TAttribute< bool >& InIsReadOnly)"
  },
  {
    "label": "GetTextLineCount()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetTextLineCount()"
  },
  {
    "label": "SetSelectAllTextWhenFocused()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSelectAllTextWhenFocused(const TAttribute<bool>& InSelectAllTextWhenFocused)"
  },
  {
    "label": "SetClearTextSelectionOnFocusLoss()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetClearTextSelectionOnFocusLoss(const TAttribute<bool>& InClearTextSelectionOnFocusLoss)"
  },
  {
    "label": "SetRevertTextOnEscape()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRevertTextOnEscape(const TAttribute<bool>& InRevertTextOnEscape)"
  },
  {
    "label": "SetClearKeyboardFocusOnCommit()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetClearKeyboardFocusOnCommit(const TAttribute<bool>& InClearKeyboardFocusOnCommit)"
  },
  {
    "label": "SelectAllText()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SelectAllText()"
  },
  {
    "label": "SelectText()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SelectText(const FTextLocation& InSelectionStart, const FTextLocation& InCursorLocation)"
  },
  {
    "label": "ClearSelection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearSelection()"
  },
  {
    "label": "DeleteSelectedText()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeleteSelectedText()"
  },
  {
    "label": "InsertTextAtCursor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InsertTextAtCursor(const FText& InText)"
  },
  {
    "label": "InsertTextAtCursor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InsertTextAtCursor(const FString& InString)"
  },
  {
    "label": "InsertRunAtCursor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InsertRunAtCursor(TSharedRef<IRun> InRun)"
  },
  {
    "label": "GoTo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GoTo(const FTextLocation& NewLocation)"
  },
  {
    "label": "GoTo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GoTo(const ETextLocation NewLocation)"
  },
  {
    "label": "ScrollTo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ScrollTo(const FTextLocation& NewLocation)"
  },
  {
    "label": "ScrollTo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ScrollTo(const ETextLocation NewLocation)"
  },
  {
    "label": "ApplyToSelection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyToSelection(const FRunInfo& InRunInfo, const FTextBlockStyle& InStyle)"
  },
  {
    "label": "BeginSearch()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginSearch(const FText& InSearchText, const ESearchCase::Type InSearchCase = ESearchCase::IgnoreCase, const bool InReverse = false)"
  },
  {
    "label": "AdvanceSearch()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AdvanceSearch(const bool InReverse = false)"
  },
  {
    "label": "Refresh()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Refresh()"
  },
  {
    "label": "ForceScroll()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ForceScroll(int32 UserIndex, float ScrollAxisMagnitude)"
  },
  {
    "label": "OnHScrollBarMoved()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnHScrollBarMoved(const float InScrollOffsetFraction)"
  },
  {
    "label": "OnVScrollBarMoved()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnVScrollBarMoved(const float InScrollOffsetFraction)"
  },
  {
    "label": "BeginEditTransaction()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginEditTransaction()"
  },
  {
    "label": "EndEditTransaction()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EndEditTransaction()"
  }
]