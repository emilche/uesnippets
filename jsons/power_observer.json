[
  {
    "label": "BASE_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BASE_EXPORT"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "OnSuspend()",
    "kind": "Method",
    "detail": "Function (# ifndef BASE_POWER_MONITOR_POWER_OBSERVER_H_ # define BASE_POWER_MONITOR_POWER_OBSERVER_H_ # include \" base / base_export . h \" # include \" base / compiler_specific . h \" namespace base { class BASE_EXPORT PowerSuspendObserver { public : void)",
    "insertText": "OnSuspend()"
  },
  {
    "label": "OnResume()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "OnResume()"
  },
  {
    "label": "PowerSuspendObserver()",
    "kind": "Method",
    "detail": "Function (} protected : ~)",
    "insertText": "PowerSuspendObserver()"
  },
  {
    "label": "OnPowerStateChange()",
    "kind": "Method",
    "detail": "Function (} ; class BASE_EXPORT PowerStateObserver { public : void)",
    "insertText": "OnPowerStateChange(bool on_battery_power)"
  },
  {
    "label": "PowerStateObserver()",
    "kind": "Method",
    "detail": "Function (protected : ~)",
    "insertText": "PowerStateObserver()"
  },
  {
    "label": "OnThermalStateChange()",
    "kind": "Method",
    "detail": "Function (} ; class BASE_EXPORT PowerThermalObserver { public : enum class DeviceThermalState { kUnknown = 0,kNominal = 1,kFair = 2,kSerious = 3,kCritical = 4,kMaxValue = kCritical,} ; int kSpeedLimitMax = 1 0 0 ; void)",
    "insertText": "OnThermalStateChange(DeviceThermalState new_state)"
  },
  {
    "label": "OnSpeedLimitChange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSpeedLimitChange(int speed_limit)"
  },
  {
    "label": "PowerThermalObserver()",
    "kind": "Method",
    "detail": "Function (protected : ~)",
    "insertText": "PowerThermalObserver()"
  }
]