[
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FWindData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWindData"
  },
  {
    "label": "FWindSourceSceneProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWindSourceSceneProxy"
  },
  {
    "label": "UWindDirectionalSourceComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UWindDirectionalSourceComponent"
  },
  {
    "label": "UENUM()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" Components / SceneComponent . h \" # include \" WindDirectionalSourceComponent . generated . h \")",
    "insertText": "UENUM()"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (Directional,Point,} ; class FWindData ; class FWindSourceSceneProxy ;)",
    "insertText": "UCLASS(collapsecategories, hidecategories=(Object, Mobility), editinlinenew, MinimalAPI)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() UPROPERTY(Interp, Category=WindDirectionalSourceComponent)"
  },
  {
    "label": "GetWindParameters()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetWindParameters(const FVector& EvaluatePosition, FWindData& OutData, float& Weight)"
  },
  {
    "label": "Activate()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "Activate(bool bReset)"
  },
  {
    "label": "Deactivate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Deactivate()"
  },
  {
    "label": "CreateRenderState_Concurrent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateRenderState_Concurrent(FRegisterComponentContext* Context)"
  },
  {
    "label": "SendRenderTransform_Concurrent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SendRenderTransform_Concurrent()"
  },
  {
    "label": "SendRenderDynamicData_Concurrent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SendRenderDynamicData_Concurrent()"
  },
  {
    "label": "DestroyRenderState_Concurrent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyRenderState_Concurrent()"
  },
  {
    "label": "CreateSceneProxy()",
    "kind": "Method",
    "detail": "Function (public : FWindSourceSceneProxy*)",
    "insertText": "CreateSceneProxy()"
  }
]