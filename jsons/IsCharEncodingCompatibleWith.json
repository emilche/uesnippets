[
  {
    "label": "TIsCharEncodingCompatibleWith",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TIsCharEncodingCompatibleWith"
  },
  {
    "label": "IsCharEncodingCompatibleWithImpl()",
    "kind": "Method",
    "detail": "Function (# pragma once # include<type_traits> # include \" Traits / IsCharType . h \" # ifndef PLATFORM_TCHAR_IS_CHAR16 # error \" Traits / IsCharEncodingCompatibleWith . h should be included after platform headers \" # endif namespace UE::Core::Private { template<SrcEncoding,DestEncoding> bool)",
    "insertText": "IsCharEncodingCompatibleWithImpl()"
  },
  {
    "label": "DestEncoding()",
    "kind": "Method",
    "detail": "Function (bool Value = UE::Core::Private::IsCharEncodingCompatibleWithImpl<std::remove_cv_t<SrcEncoding>,std::remove_cv_t<)",
    "insertText": "DestEncoding()"
  }
]