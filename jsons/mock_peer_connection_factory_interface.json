[
  {
    "label": "MockPeerConnectionFactoryInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MockPeerConnectionFactoryInterface"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (# ifndef API_TEST_MOCK_PEER_CONNECTION_FACTORY_INTERFACE_H_ # define API_TEST_MOCK_PEER_CONNECTION_FACTORY_INTERFACE_H_ # include<memory> # include<string> # include \" api / peer_connection_interface . h \" # include \" test / gmock . h \" namespace webrtc { class MockPeerConnectionFactoryInterface final : public rtc::RefCountedObject<webrtc::PeerConnectionFactoryInterface> { public : rtc::scoped_refptr<MockPeerConnectionFactoryInterface>)",
    "insertText": "Create()"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "MOCK_METHOD(void, SetOptions, (const Options&), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(rtc::scoped_refptr<PeerConnectionInterface>, CreatePeerConnection, (const PeerConnectionInterface::RTCConfiguration&, PeerConnectionDependencies), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(RTCErrorOr<rtc::scoped_refptr<PeerConnectionInterface>>, CreatePeerConnectionOrError, (const PeerConnectionInterface::RTCConfiguration&, PeerConnectionDependencies), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(rtc::scoped_refptr<PeerConnectionInterface>, CreatePeerConnection, (const PeerConnectionInterface::RTCConfiguration&, std::unique_ptr<cricket::PortAllocator>, std::unique_ptr<rtc::RTCCertificateGeneratorInterface>, PeerConnectionObserver*), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(RtpCapabilities, GetRtpSenderCapabilities, (cricket::MediaType), (const, override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(RtpCapabilities, GetRtpReceiverCapabilities, (cricket::MediaType), (const, override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(rtc::scoped_refptr<MediaStreamInterface>, CreateLocalMediaStream, (const std::string&), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(rtc::scoped_refptr<AudioSourceInterface>, CreateAudioSource, (const cricket::AudioOptions&), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(rtc::scoped_refptr<VideoTrackInterface>, CreateVideoTrack, (const std::string&, VideoTrackSourceInterface*), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(rtc::scoped_refptr<AudioTrackInterface>, CreateAudioTrack, (const std::string&, AudioSourceInterface*), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(bool, StartAecDump, (FILE*, int64_t), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(void, StopAecDump, (), (override))"
  },
  {
    "label": "MockPeerConnectionFactoryInterface()",
    "kind": "Method",
    "detail": "Function (protected :)",
    "insertText": "MockPeerConnectionFactoryInterface()"
  }
]