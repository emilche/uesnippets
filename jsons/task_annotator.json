[
  {
    "label": "BASE_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BASE_EXPORT"
  },
  {
    "label": "ObserverForTesting",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ObserverForTesting"
  },
  {
    "label": "ScopedSetIpcHash",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ScopedSetIpcHash"
  },
  {
    "label": "LongTaskTracker",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "LongTaskTracker"
  },
  {
    "label": "TaskAnnotatorBacktraceIntegrationTest",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TaskAnnotatorBacktraceIntegrationTest"
  },
  {
    "label": "BASE_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BASE_EXPORT"
  },
  {
    "label": "BASE_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BASE_EXPORT"
  },
  {
    "label": "WillQueueTask()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WillQueueTask(perfetto::StaticString trace_event_name,\n                     PendingTask* pending_task)"
  },
  {
    "label": "RunTaskImpl()",
    "kind": "Method",
    "detail": "Function (NOT_TAIL_CALLED)",
    "insertText": "RunTaskImpl(PendingTask& pending_task)"
  },
  {
    "label": "RegisterObserverForTesting()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterObserverForTesting(ObserverForTesting* observer)"
  },
  {
    "label": "ClearObserverForTesting()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearObserverForTesting()"
  },
  {
    "label": "EmitTaskLocation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EmitTaskLocation(perfetto::EventContext& ctx,\n                               const PendingTask& task)"
  },
  {
    "label": "ScopedSetIpcHash()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "ScopedSetIpcHash(uint32_t ipc_hash)"
  },
  {
    "label": "ScopedSetIpcHash()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "ScopedSetIpcHash(const char* ipc_interface_name)"
  },
  {
    "label": "MD5HashMetricName()",
    "kind": "Method",
    "detail": "Function (uint32_t)",
    "insertText": "MD5HashMetricName(base::StringPiece name)"
  },
  {
    "label": "ScopedSetIpcHash()",
    "kind": "Method",
    "detail": "Function (private:)",
    "insertText": "ScopedSetIpcHash(uint32_t ipc_hash, const char* ipc_interface_name)"
  },
  {
    "label": "LongTaskTracker()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "LongTaskTracker(const TickClock* tick_clock,\n                           PendingTask& pending_task,\n                           TaskAnnotator* task_annotator)"
  },
  {
    "label": "BeginTrackingTask()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginTrackingTask()"
  },
  {
    "label": "EndTrackingTask()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EndTrackingTask()"
  }
]