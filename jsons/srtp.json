[
  {
    "label": "srtp_ctx_t_",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "srtp_ctx_t_"
  },
  {
    "label": "srtp_crypto_policy_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "srtp_crypto_policy_t"
  },
  {
    "label": "srtp_ekt_policy_ctx_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "srtp_ekt_policy_ctx_t"
  },
  {
    "label": "srtp_ekt_stream_ctx_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "srtp_ekt_stream_ctx_t"
  },
  {
    "label": "srtp_master_key_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "srtp_master_key_t"
  },
  {
    "label": "represents",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "represents"
  },
  {
    "label": "srtp_policy_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "srtp_policy_t"
  },
  {
    "label": "srtp_policy_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "srtp_policy_t"
  },
  {
    "label": "that",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "that"
  },
  {
    "label": "may",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "may"
  },
  {
    "label": "that",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "that"
  },
  {
    "label": "may",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "may"
  },
  {
    "label": "that",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "that"
  },
  {
    "label": "as",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "as"
  },
  {
    "label": "srtp_event_t",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "srtp_event_t"
  },
  {
    "label": "srtp_event_t",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "srtp_event_t"
  },
  {
    "label": "srtp_event_data_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "srtp_event_data_t"
  },
  {
    "label": "srtp_event_data_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "srtp_event_data_t"
  },
  {
    "label": "indicating",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "indicating"
  },
  {
    "label": "srtp_init()",
    "kind": "Method",
    "detail": "Function (srtp_err_status_t)",
    "insertText": "srtp_init(void)"
  },
  {
    "label": "srtp_shutdown()",
    "kind": "Method",
    "detail": "Function (srtp_err_status_t)",
    "insertText": "srtp_shutdown(void)"
  },
  {
    "label": "packet()",
    "kind": "Method",
    "detail": "Function (RTP)",
    "insertText": "packet(before the call)"
  },
  {
    "label": "srtp_protect()",
    "kind": "Method",
    "detail": "Function (srtp_err_status_t)",
    "insertText": "srtp_protect(srtp_t ctx, void *rtp_hdr, int *len_ptr)"
  },
  {
    "label": "packet()",
    "kind": "Method",
    "detail": "Function (RTP)",
    "insertText": "packet(before the call)"
  },
  {
    "label": "srtp_protect_mki()",
    "kind": "Method",
    "detail": "Function (srtp_err_status_t)",
    "insertText": "srtp_protect_mki(srtp_ctx_t *ctx,\n                                   void *rtp_hdr,\n                                   int *pkt_octet_len,\n                                   unsigned int use_mki,\n                                   unsigned int mki_index)"
  },
  {
    "label": "srtp_unprotect()",
    "kind": "Method",
    "detail": "Function (srtp_err_status_t)",
    "insertText": "srtp_unprotect(srtp_t ctx, void *srtp_hdr, int *len_ptr)"
  },
  {
    "label": "srtp_unprotect_mki()",
    "kind": "Method",
    "detail": "Function (srtp_err_status_t)",
    "insertText": "srtp_unprotect_mki(srtp_t ctx,\n                                     void *srtp_hdr,\n                                     int *len_ptr,\n                                     unsigned int use_mki)"
  },
  {
    "label": "srtp_create()",
    "kind": "Method",
    "detail": "Function (srtp_err_status_t)",
    "insertText": "srtp_create(srtp_t *session, const srtp_policy_t *policy)"
  },
  {
    "label": "srtp_add_stream()",
    "kind": "Method",
    "detail": "Function (srtp_err_status_t)",
    "insertText": "srtp_add_stream(srtp_t session, const srtp_policy_t *policy)"
  },
  {
    "label": "srtp_remove_stream()",
    "kind": "Method",
    "detail": "Function (srtp_err_status_t)",
    "insertText": "srtp_remove_stream(srtp_t session, unsigned int ssrc)"
  },
  {
    "label": "srtp_update()",
    "kind": "Method",
    "detail": "Function (srtp_err_status_t)",
    "insertText": "srtp_update(srtp_t session, const srtp_policy_t *policy)"
  },
  {
    "label": "srtp_update_stream()",
    "kind": "Method",
    "detail": "Function (srtp_err_status_t)",
    "insertText": "srtp_update_stream(srtp_t session,\n                                     const srtp_policy_t *policy)"
  },
  {
    "label": "srtp_crypto_policy_set_rtp_default()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "srtp_crypto_policy_set_rtp_default(srtp_crypto_policy_t *p)"
  },
  {
    "label": "srtp_crypto_policy_set_rtcp_default()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "srtp_crypto_policy_set_rtcp_default(srtp_crypto_policy_t *p)"
  },
  {
    "label": "srtp_crypto_policy_set_aes_cm_128_hmac_sha1_32()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "srtp_crypto_policy_set_aes_cm_128_hmac_sha1_32(srtp_crypto_policy_t *p)"
  },
  {
    "label": "srtp_crypto_policy_set_aes_cm_128_null_auth()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "srtp_crypto_policy_set_aes_cm_128_null_auth(srtp_crypto_policy_t *p)"
  },
  {
    "label": "srtp_crypto_policy_set_null_cipher_hmac_sha1_80()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "srtp_crypto_policy_set_null_cipher_hmac_sha1_80(srtp_crypto_policy_t *p)"
  },
  {
    "label": "srtp_crypto_policy_set_null_cipher_hmac_null()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "srtp_crypto_policy_set_null_cipher_hmac_null(srtp_crypto_policy_t *p)"
  },
  {
    "label": "srtp_crypto_policy_set_aes_cm_256_hmac_sha1_80()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "srtp_crypto_policy_set_aes_cm_256_hmac_sha1_80(srtp_crypto_policy_t *p)"
  },
  {
    "label": "srtp_crypto_policy_set_aes_cm_256_hmac_sha1_32()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "srtp_crypto_policy_set_aes_cm_256_hmac_sha1_32(srtp_crypto_policy_t *p)"
  },
  {
    "label": "srtp_crypto_policy_set_aes_cm_256_null_auth()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "srtp_crypto_policy_set_aes_cm_256_null_auth(srtp_crypto_policy_t *p)"
  },
  {
    "label": "srtp_crypto_policy_set_aes_cm_192_hmac_sha1_80()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "srtp_crypto_policy_set_aes_cm_192_hmac_sha1_80(srtp_crypto_policy_t *p)"
  },
  {
    "label": "srtp_crypto_policy_set_aes_cm_192_hmac_sha1_32()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "srtp_crypto_policy_set_aes_cm_192_hmac_sha1_32(srtp_crypto_policy_t *p)"
  },
  {
    "label": "srtp_crypto_policy_set_aes_cm_192_null_auth()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "srtp_crypto_policy_set_aes_cm_192_null_auth(srtp_crypto_policy_t *p)"
  },
  {
    "label": "srtp_crypto_policy_set_aes_gcm_128_8_auth()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "srtp_crypto_policy_set_aes_gcm_128_8_auth(srtp_crypto_policy_t *p)"
  },
  {
    "label": "srtp_crypto_policy_set_aes_gcm_256_8_auth()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "srtp_crypto_policy_set_aes_gcm_256_8_auth(srtp_crypto_policy_t *p)"
  },
  {
    "label": "srtp_crypto_policy_set_aes_gcm_128_8_only_auth()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "srtp_crypto_policy_set_aes_gcm_128_8_only_auth(srtp_crypto_policy_t *p)"
  },
  {
    "label": "srtp_crypto_policy_set_aes_gcm_256_8_only_auth()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "srtp_crypto_policy_set_aes_gcm_256_8_only_auth(srtp_crypto_policy_t *p)"
  },
  {
    "label": "srtp_crypto_policy_set_aes_gcm_128_16_auth()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "srtp_crypto_policy_set_aes_gcm_128_16_auth(srtp_crypto_policy_t *p)"
  },
  {
    "label": "srtp_crypto_policy_set_aes_gcm_256_16_auth()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "srtp_crypto_policy_set_aes_gcm_256_16_auth(srtp_crypto_policy_t *p)"
  },
  {
    "label": "srtp_dealloc()",
    "kind": "Method",
    "detail": "Function (srtp_err_status_t)",
    "insertText": "srtp_dealloc(srtp_t s)"
  },
  {
    "label": "srtp_crypto_policy_set_from_profile_for_rtp()",
    "kind": "Method",
    "detail": "Function (srtp_err_status_t)",
    "insertText": "srtp_crypto_policy_set_from_profile_for_rtp(\n    srtp_crypto_policy_t *policy,\n    srtp_profile_t profile)"
  },
  {
    "label": "srtp_crypto_policy_set_from_profile_for_rtcp()",
    "kind": "Method",
    "detail": "Function (srtp_err_status_t)",
    "insertText": "srtp_crypto_policy_set_from_profile_for_rtcp(\n    srtp_crypto_policy_t *policy,\n    srtp_profile_t profile)"
  },
  {
    "label": "srtp_profile_get_master_key_length()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "srtp_profile_get_master_key_length(srtp_profile_t profile)"
  },
  {
    "label": "srtp_profile_get_master_salt_length()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "srtp_profile_get_master_salt_length(srtp_profile_t profile)"
  },
  {
    "label": "srtp_append_salt_to_key()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "srtp_append_salt_to_key(unsigned char *key,\n                             unsigned int bytes_in_key,\n                             unsigned char *salt,\n                             unsigned int bytes_in_salt)"
  },
  {
    "label": "packet()",
    "kind": "Method",
    "detail": "Function (RTCP)",
    "insertText": "packet(before the call)"
  },
  {
    "label": "srtp_protect_rtcp()",
    "kind": "Method",
    "detail": "Function (srtp_err_status_t)",
    "insertText": "srtp_protect_rtcp(srtp_t ctx,\n                                    void *rtcp_hdr,\n                                    int *pkt_octet_len)"
  },
  {
    "label": "packet()",
    "kind": "Method",
    "detail": "Function (RTCP)",
    "insertText": "packet(before the call)"
  },
  {
    "label": "srtp_protect_rtcp_mki()",
    "kind": "Method",
    "detail": "Function (srtp_err_status_t)",
    "insertText": "srtp_protect_rtcp_mki(srtp_t ctx,\n                                        void *rtcp_hdr,\n                                        int *pkt_octet_len,\n                                        unsigned int use_mki,\n                                        unsigned int mki_index)"
  },
  {
    "label": "srtp_unprotect_rtcp()",
    "kind": "Method",
    "detail": "Function (srtp_err_status_t)",
    "insertText": "srtp_unprotect_rtcp(srtp_t ctx,\n                                      void *srtcp_hdr,\n                                      int *pkt_octet_len)"
  },
  {
    "label": "srtp_unprotect_rtcp_mki()",
    "kind": "Method",
    "detail": "Function (srtp_err_status_t)",
    "insertText": "srtp_unprotect_rtcp_mki(srtp_t ctx,\n                                          void *srtcp_hdr,\n                                          int *pkt_octet_len,\n                                          unsigned int use_mki)"
  },
  {
    "label": "srtp_set_user_data()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "srtp_set_user_data(srtp_t ctx, void *data)"
  },
  {
    "label": "srtp_install_event_handler()",
    "kind": "Method",
    "detail": "Function (srtp_err_status_t)",
    "insertText": "srtp_install_event_handler(srtp_event_handler_func_t func)"
  },
  {
    "label": "srtp_get_version()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "srtp_get_version(void)"
  },
  {
    "label": "srtp_set_debug_module()",
    "kind": "Method",
    "detail": "Function (srtp_err_status_t)",
    "insertText": "srtp_set_debug_module(const char *mod_name, int v)"
  },
  {
    "label": "srtp_list_debug_modules()",
    "kind": "Method",
    "detail": "Function (srtp_err_status_t)",
    "insertText": "srtp_list_debug_modules(void)"
  },
  {
    "label": "srtp_install_log_handler()",
    "kind": "Method",
    "detail": "Function (srtp_err_status_t)",
    "insertText": "srtp_install_log_handler(srtp_log_handler_func_t func,\n                                           void *data)"
  },
  {
    "label": "srtp_get_protect_trailer_length()",
    "kind": "Method",
    "detail": "Function (srtp_err_status_t)",
    "insertText": "srtp_get_protect_trailer_length(srtp_t session,\n                                                  uint32_t use_mki,\n                                                  uint32_t mki_index,\n                                                  uint32_t *length)"
  },
  {
    "label": "srtp_get_protect_rtcp_trailer_length()",
    "kind": "Method",
    "detail": "Function (srtp_err_status_t)",
    "insertText": "srtp_get_protect_rtcp_trailer_length(srtp_t session,\n                                                       uint32_t use_mki,\n                                                       uint32_t mki_index,\n                                                       uint32_t *length)"
  },
  {
    "label": "srtp_set_stream_roc()",
    "kind": "Method",
    "detail": "Function (srtp_err_status_t)",
    "insertText": "srtp_set_stream_roc(srtp_t session,\n                                      uint32_t ssrc,\n                                      uint32_t roc)"
  },
  {
    "label": "srtp_get_stream_roc()",
    "kind": "Method",
    "detail": "Function (srtp_err_status_t)",
    "insertText": "srtp_get_stream_roc(srtp_t session,\n                                      uint32_t ssrc,\n                                      uint32_t *roc)"
  }
]