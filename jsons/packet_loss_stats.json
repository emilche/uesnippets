[
  {
    "label": "PacketLossStats",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PacketLossStats"
  },
  {
    "label": "PacketLossStats()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_RTP_RTCP_SOURCE_PACKET_LOSS_STATS_H_ # define MODULES_RTP_RTCP_SOURCE_PACKET_LOSS_STATS_H_ # include<stdint . h> # include<set> namespace webrtc { class PacketLossStats { public :)",
    "insertText": "PacketLossStats()"
  },
  {
    "label": "AddLostPacket()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddLostPacket(uint16_t sequence_number)"
  },
  {
    "label": "GetSingleLossCount()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "GetSingleLossCount()"
  },
  {
    "label": "GetMultipleLossEventCount()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "GetMultipleLossEventCount()"
  },
  {
    "label": "GetMultipleLossPacketCount()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "GetMultipleLossPacketCount()"
  },
  {
    "label": "ComputeLossCounts()",
    "kind": "Method",
    "detail": "Function (private : std::set<uint16_t> lost_packets_buffer_ ; std::set<uint16_t> lost_packets_wrapped_buffer_ ; int single_loss_historic_count_ ; int multiple_loss_historic_event_count_ ; int multiple_loss_historic_packet_count_ ; void)",
    "insertText": "ComputeLossCounts(int* out_single_loss_count, int* out_multiple_loss_event_count, int* out_multiple_loss_packet_count)"
  },
  {
    "label": "PruneBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PruneBuffer()"
  }
]