[
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "TWeakFieldPtr",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TWeakFieldPtr"
  },
  {
    "label": "EDummy1",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EDummy1"
  },
  {
    "label": "TIsPODType",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TIsPODType"
  },
  {
    "label": "TIsZeroConstructType",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TIsZeroConstructType"
  },
  {
    "label": "TIsWeakPointerType",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TIsWeakPointerType"
  },
  {
    "label": "TWeakFieldPtrMapKeyFuncs",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TWeakFieldPtrMapKeyFuncs"
  },
  {
    "label": "UE_REQUIRES()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Templates / Requires . h \" # include \" UObject / WeakObjectPtrTemplates . h \" # include \" UObject / WeakObjectPtr . h \" # include \" UObject / FieldPath . h \" # include<type_traits> template<class T> struct TWeakFieldPtr ; template<LhsType,RhsType)",
    "insertText": "UE_REQUIRES(UE_REQUIRES_EXPR((LhsType*)nullptr == (RhsType*)nullptr)) > bool operator==(const TWeakFieldPtr<LhsType>& Lhs, const TWeakFieldPtr<RhsType>& Rhs)"
  },
  {
    "label": "UE_REQUIRES()",
    "kind": "Method",
    "detail": "Function (template<LhsType,RhsType)",
    "insertText": "UE_REQUIRES(UE_REQUIRES_EXPR((LhsType*)nullptr == (const RhsType*)nullptr)) > bool operator==(const TWeakFieldPtr<LhsType>& Lhs, const RhsType* Rhs)"
  },
  {
    "label": "UE_REQUIRES()",
    "kind": "Method",
    "detail": "Function (template<LhsType,RhsType)",
    "insertText": "UE_REQUIRES(UE_REQUIRES_EXPR((const LhsType*)nullptr == (RhsType*)nullptr)) > bool operator==(const LhsType* Lhs, const TWeakFieldPtr<RhsType>& Rhs)"
  },
  {
    "label": "UE_REQUIRES()",
    "kind": "Method",
    "detail": "Function (# if ! PLATFORM_COMPILER_HAS_GENERATED_COMPARISON_OPERATORS template<LhsType,RhsType)",
    "insertText": "UE_REQUIRES(UE_REQUIRES_EXPR((LhsType*)nullptr != (RhsType*)nullptr)) > bool operator!=(const TWeakFieldPtr<LhsType>& Lhs, const TWeakFieldPtr<RhsType>& Rhs)"
  },
  {
    "label": "UE_REQUIRES()",
    "kind": "Method",
    "detail": "Function (template<LhsType,RhsType)",
    "insertText": "UE_REQUIRES(UE_REQUIRES_EXPR((LhsType*)nullptr != (const RhsType*)nullptr)) > bool operator!=(const TWeakFieldPtr<LhsType>& Lhs, const RhsType* Rhs)"
  },
  {
    "label": "UE_REQUIRES()",
    "kind": "Method",
    "detail": "Function (template<LhsType,RhsType)",
    "insertText": "UE_REQUIRES(UE_REQUIRES_EXPR((const LhsType*)nullptr != (RhsType*)nullptr)) > bool operator!=(const LhsType* Lhs, const TWeakFieldPtr<RhsType>& Rhs)"
  },
  {
    "label": "UE_REQUIRES_FRIEND()",
    "kind": "Method",
    "detail": "Function (# endif template<class T> struct TWeakFieldPtr { template<> struct TWeakFieldPtr ; template<LhsType,RhsType)",
    "insertText": "UE_REQUIRES_FRIEND(UE_REQUIRES_EXPR((LhsType*)nullptr == (RhsType*)nullptr)) > friend bool operator==(const TWeakFieldPtr<LhsType>& Lhs, const TWeakFieldPtr<RhsType>& Rhs)"
  },
  {
    "label": "UE_REQUIRES_FRIEND()",
    "kind": "Method",
    "detail": "Function (template<LhsType,RhsType)",
    "insertText": "UE_REQUIRES_FRIEND(UE_REQUIRES_EXPR((LhsType*)nullptr == (const RhsType*)nullptr)) > friend bool operator==(const TWeakFieldPtr<LhsType>& Lhs, const RhsType* Rhs)"
  },
  {
    "label": "UE_REQUIRES_FRIEND()",
    "kind": "Method",
    "detail": "Function (template<LhsType,RhsType)",
    "insertText": "UE_REQUIRES_FRIEND(UE_REQUIRES_EXPR((const LhsType*)nullptr == (RhsType*)nullptr)) > friend bool operator==(const LhsType* Lhs, const TWeakFieldPtr<RhsType>& Rhs)"
  },
  {
    "label": "UE_REQUIRES_FRIEND()",
    "kind": "Method",
    "detail": "Function (# if ! PLATFORM_COMPILER_HAS_GENERATED_COMPARISON_OPERATORS template<LhsType,RhsType)",
    "insertText": "UE_REQUIRES_FRIEND(UE_REQUIRES_EXPR((LhsType*)nullptr != (RhsType*)nullptr)) > friend bool operator!=(const TWeakFieldPtr<LhsType>& Lhs, const TWeakFieldPtr<RhsType>& Rhs)"
  },
  {
    "label": "UE_REQUIRES_FRIEND()",
    "kind": "Method",
    "detail": "Function (template<LhsType,RhsType)",
    "insertText": "UE_REQUIRES_FRIEND(UE_REQUIRES_EXPR((LhsType*)nullptr != (const RhsType*)nullptr)) > friend bool operator!=(const TWeakFieldPtr<LhsType>& Lhs, const RhsType* Rhs)"
  },
  {
    "label": "UE_REQUIRES_FRIEND()",
    "kind": "Method",
    "detail": "Function (template<LhsType,RhsType)",
    "insertText": "UE_REQUIRES_FRIEND(UE_REQUIRES_EXPR((const LhsType*)nullptr != (RhsType*)nullptr)) > friend bool operator!=(const LhsType* Lhs, const TWeakFieldPtr<RhsType>& Rhs)"
  },
  {
    "label": "TWeakFieldPtr()",
    "kind": "Method",
    "detail": "Function (# endif private : enum EDummy1 { Dummy1 } ; TWeakObjectPtr<UObject> Owner ; TFieldPath<T> Field ; public : using ElementType = T ;)",
    "insertText": "TWeakFieldPtr()"
  },
  {
    "label": "TWeakFieldPtr()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TWeakFieldPtr(const TWeakFieldPtr&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (TWeakFieldPtr&)",
    "insertText": "operator(const TWeakFieldPtr&)"
  },
  {
    "label": "UE_REQUIRES()",
    "kind": "Method",
    "detail": "Function (} template<U)",
    "insertText": "UE_REQUIRES(std::is_convertible_v<U*, T*>) > FORCEINLINE TWeakFieldPtr(U* InField, EDummy1 = Dummy1) : Owner(InField ? InField->GetOwnerUObject() : (UObject*)nullptr) , Field(InField)"
  },
  {
    "label": "UE_REQUIRES()",
    "kind": "Method",
    "detail": "Function (} template<OtherT)",
    "insertText": "UE_REQUIRES(std::is_convertible_v<OtherT*, T*>) > FORCEINLINE TWeakFieldPtr(const TWeakFieldPtr<OtherT>& Other) : Owner(Other.Owner) , Field(Other.Field)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Reset()"
  },
  {
    "label": "UE_REQUIRES()",
    "kind": "Method",
    "detail": "Function (} template<U)",
    "insertText": "UE_REQUIRES(std::is_convertible_v<U*, T*>) > FORCEINLINE void operator=(U* InField)"
  },
  {
    "label": "GetOwnerUObject()",
    "kind": "Method",
    "detail": "Function (Owner = InField ? InField ->)",
    "insertText": "GetOwnerUObject() : (UObject*)"
  },
  {
    "label": "Field()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Field(U*)"
  },
  {
    "label": "UE_REQUIRES()",
    "kind": "Method",
    "detail": "Function (} template<OtherT)",
    "insertText": "UE_REQUIRES(std::is_convertible_v<OtherT*, T*>) > FORCEINLINE void operator=(const TWeakFieldPtr<OtherT>& Other)"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (Owner = Other . Owner ; Field = Other . Field ; } T*)",
    "insertText": "Get(bool bEvenIfPendingKill)"
  },
  {
    "label": "ClearCachedField()",
    "kind": "Method",
    "detail": "Function (} else { Field .)",
    "insertText": "ClearCachedField()"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (} return nullptr ; } T*)",
    "insertText": "Get()"
  },
  {
    "label": "GetEvenIfUnreachable()",
    "kind": "Method",
    "detail": "Function (} return nullptr ; } T*)",
    "insertText": "GetEvenIfUnreachable()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} return nullptr ; } T&)",
    "insertText": "operator()"
  },
  {
    "label": "IsValid()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsValid(bool bEvenIfPendingKill, bool bThreadsafeTest = false)"
  },
  {
    "label": "IsValid()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsValid()"
  },
  {
    "label": "IsStale()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsStale(bool bIncludingIfPendingKill = false, bool bThreadsafeTest = false)"
  },
  {
    "label": "HasSameIndexAndSerialNumber()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "HasSameIndexAndSerialNumber(const TWeakFieldPtr& Other)"
  },
  {
    "label": "GetTypeHash()",
    "kind": "Method",
    "detail": "Function (} [ [ nodiscard ] ] uint32)",
    "insertText": "GetTypeHash(const TWeakFieldPtr& WeakObjectPtr)"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Serialize(FArchive& Ar)"
  },
  {
    "label": "UE_REQUIRES_DEFINITION()",
    "kind": "Method",
    "detail": "Function (Ar<<Owner ; Ar<<Field ; } } ; template<LhsType,RhsType)",
    "insertText": "UE_REQUIRES_DEFINITION(UE_REQUIRES_EXPR((LhsType*)nullptr == (RhsType*)nullptr)) > FORCEINLINE bool operator==(const TWeakFieldPtr<LhsType>& Lhs, const TWeakFieldPtr<RhsType>& Rhs)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} template<RhsType> bool)",
    "insertText": "operator(TYPE_OF_NULLPTR, const TWeakFieldPtr<RhsType>& Rhs)"
  },
  {
    "label": "UE_REQUIRES_DEFINITION()",
    "kind": "Method",
    "detail": "Function (} # if ! PLATFORM_COMPILER_HAS_GENERATED_COMPARISON_OPERATORS template<LhsType,RhsType)",
    "insertText": "UE_REQUIRES_DEFINITION(UE_REQUIRES_EXPR((LhsType*)nullptr != (RhsType*)nullptr)) > FORCEINLINE bool operator!=(const TWeakFieldPtr<LhsType>& Lhs, const TWeakFieldPtr<RhsType>& Rhs)"
  },
  {
    "label": "UE_REQUIRES_DEFINITION()",
    "kind": "Method",
    "detail": "Function (} template<LhsType,RhsType)",
    "insertText": "UE_REQUIRES_DEFINITION(UE_REQUIRES_EXPR((LhsType*)nullptr != (const RhsType*)nullptr)) > FORCEINLINE bool operator!=(const TWeakFieldPtr<LhsType>& Lhs, const RhsType* Rhs)"
  },
  {
    "label": "UE_REQUIRES_DEFINITION()",
    "kind": "Method",
    "detail": "Function (} template<LhsType,RhsType)",
    "insertText": "UE_REQUIRES_DEFINITION(UE_REQUIRES_EXPR((const LhsType*)nullptr != (RhsType*)nullptr)) > FORCEINLINE bool operator!=(const LhsType* Lhs, const TWeakFieldPtr<RhsType>& Rhs)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} template<LhsType> bool)",
    "insertText": "operator(const TWeakFieldPtr<LhsType>& Lhs, TYPE_OF_NULLPTR)"
  },
  {
    "label": "MakeWeakFieldPtr()",
    "kind": "Method",
    "detail": "Function (} # endif template<T> TWeakFieldPtr<T>)",
    "insertText": "MakeWeakFieldPtr(T* Ptr)"
  },
  {
    "label": "Matches()",
    "kind": "Method",
    "detail": "Function (} template<class T> struct TIsPODType<TWeakFieldPtr<T>> { enum { Value = true } ; } ; template<class T> struct TIsZeroConstructType<TWeakFieldPtr<T>> { enum { Value = true } ; } ; template<class T> struct TIsWeakPointerType<TWeakFieldPtr<T>> { enum { Value = true } ; } ; template<KeyType,ValueType,bool bInAllowDuplicateKeys = false> struct TWeakFieldPtrMapKeyFuncs : public TDefaultMapKeyFuncs<KeyType,ValueType,bInAllowDuplicateKeys> { typedef TDefaultMapKeyFuncs<KeyType,ValueType,bInAllowDuplicateKeys>::KeyInitType KeyInitType ; bool)",
    "insertText": "Matches(KeyInitType A, KeyInitType B)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} } ; template<class T> FArchive&)",
    "insertText": "operator(FArchive& Ar, TWeakFieldPtr<T>& WeakFieldPtr)"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (WeakFieldPtr .)",
    "insertText": "Serialize(Ar)"
  }
]