[
  {
    "label": "FPropertyChangedEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPropertyChangedEvent"
  },
  {
    "label": "AInstancedPlacementPartitionActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AInstancedPlacementPartitionActor"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FPlacementInstance",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPlacementInstance"
  },
  {
    "label": "UInstancedPlacemenClientSettings",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UInstancedPlacemenClientSettings"
  },
  {
    "label": "FClientPlacementInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FClientPlacementInfo"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" ISMPartition / ISMComponentDescriptor . h \" # if WITH_EDITORONLY_DATA # include \" Containers / SortedMap . h \" # include \" ISMPartition / ISMPartitionClient . h \" # include \" ISMPartition / ISMPartitionInstanceManager . h \" # include \" Instances / InstancedPlacementHash . h \" # include \" Elements / SMInstance / SMInstanceElementId . h \" # endif # include \" InstancedPlacementClientInfo . generated . h \" # if WITH_EDITORONLY_DATA struct FPropertyChangedEvent ; class AInstancedPlacementPartitionActor ; enum class EPlacementInstanceFlags : uint32 { None = 0,AlignToNormal = 1<<0,NoRandomYaw = 1<<1,Readjusted = 1<<2,} ; struct FPlacementInstance { public : FArchive&)",
    "insertText": "operator(FArchive& Ar, FPlacementInstance& Instance)"
  },
  {
    "label": "GetInstanceWorldTransform()",
    "kind": "Method",
    "detail": "Function (FTransform)",
    "insertText": "GetInstanceWorldTransform()"
  },
  {
    "label": "SetInstanceWorldTransform()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetInstanceWorldTransform(const FTransform& Transform)"
  },
  {
    "label": "AlignToNormal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AlignToNormal(const FVector& InNormal, int32 AlignMaxAngle = 0)"
  },
  {
    "label": "FTransform()",
    "kind": "Method",
    "detail": "Function (protected : FTransform WorldTransform =)",
    "insertText": "FTransform(FQuat::Identity, FVector::ZeroVector, FVector3d::OneVector)"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (FQuat PreAlignRotation = FQuat::Identity ; } ; # endif)",
    "insertText": "UCLASS(Abstract, hideCategories=Object, editinlinenew, collapsecategories, MinimalAPI)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: #if WITH_EDITORONLY_DATA UPROPERTY()"
  },
  {
    "label": "PostEditChangeProperty()",
    "kind": "Method",
    "detail": "Function (# endif # if WITH_EDITOR void)",
    "insertText": "PostEditChangeProperty(FPropertyChangedEvent& PropertyChangedEvent)"
  },
  {
    "label": "RegisterISMDescriptors()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterISMDescriptors(AInstancedPlacementPartitionActor* ParentPartitionActor, TSortedMap<int32, TArray<FTransform>>& ISMDefinition)"
  },
  {
    "label": "FClientPlacementInfo()",
    "kind": "Method",
    "detail": "Function (# endif } ; # if WITH_EDITORONLY_DATA struct FClientPlacementInfo : public IISMPartitionInstanceManager {)",
    "insertText": "FClientPlacementInfo()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FArchive&)",
    "insertText": "operator(FArchive& Ar, FClientPlacementInfo& PlacementInfo)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (FGuid UpdateGuid ; FGuid ClientGuid ; TArray<FPlacementInstance> Instances ; FISMClientHandle ClientHandle ; TSortedMap<int32,TArray<FTransform>> ISMDefinition ; FInstancedPlacementHash InstanceHash ; FString ClientDisplayName ; TWeakObjectPtr<AInstancedPlacementPartitionActor> ParentPartitionActor ; TSet<FISMClientInstanceId> MovingInstances ; using FClientDescriptorFunc = TFunctionRef<)",
    "insertText": "void(AInstancedPlacementPartitionActor*, TSortedMap<int32, TArray<FTransform>>&)"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Initialize(const FGuid& InClientGuid, const FString& InClientDisplayName, AInstancedPlacementPartitionActor* InParentPartitionActor, FClientDescriptorFunc RegisterDescriptorFunc)"
  },
  {
    "label": "Uninitialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Uninitialize()"
  },
  {
    "label": "PostLoad()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostLoad(AInstancedPlacementPartitionActor* InParentPartitionActor)"
  },
  {
    "label": "PostSerialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostSerialize(FArchive& Ar, AInstancedPlacementPartitionActor* InParentPartitionActor)"
  },
  {
    "label": "IsInitialized()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsInitialized()"
  },
  {
    "label": "PreEditUndo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PreEditUndo()"
  },
  {
    "label": "PostEditUndo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostEditUndo()"
  },
  {
    "label": "AddInstances()",
    "kind": "Method",
    "detail": "Function (TArray<FSMInstanceId>)",
    "insertText": "AddInstances(TArrayView<const FPlacementInstance> InWorldTransforms)"
  },
  {
    "label": "RemoveInstancesFromPartitionActor()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "RemoveInstancesFromPartitionActor(TArrayView<const FISMClientInstanceId> InstanceIds, bool bUpdateHISMTrees, TFunctionRef<void(int32)> RemoveFn)"
  },
  {
    "label": "GetISMPartitionInstanceDisplayName()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetISMPartitionInstanceDisplayName(const FISMClientInstanceId& InstanceId)"
  },
  {
    "label": "GetISMPartitionInstanceTooltip()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetISMPartitionInstanceTooltip(const FISMClientInstanceId& InstanceId)"
  },
  {
    "label": "CanEditISMPartitionInstance()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanEditISMPartitionInstance(const FISMClientInstanceId& InstanceId)"
  },
  {
    "label": "CanMoveISMPartitionInstance()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanMoveISMPartitionInstance(const FISMClientInstanceId& InstanceId, const ETypedElementWorldType InWorldType)"
  },
  {
    "label": "GetISMPartitionInstanceTransform()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetISMPartitionInstanceTransform(const FISMClientInstanceId& InstanceId, FTransform& OutInstanceTransform, bool bWorldSpace = false)"
  },
  {
    "label": "SetISMPartitionInstanceTransform()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetISMPartitionInstanceTransform(const FISMClientInstanceId& InstanceId, const FTransform& InstanceTransform, bool bWorldSpace = false, bool bTeleport = false)"
  },
  {
    "label": "NotifyISMPartitionInstanceMovementStarted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyISMPartitionInstanceMovementStarted(const FISMClientInstanceId& InstanceId)"
  },
  {
    "label": "NotifyISMPartitionInstanceMovementOngoing()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyISMPartitionInstanceMovementOngoing(const FISMClientInstanceId& InstanceId)"
  },
  {
    "label": "NotifyISMPartitionInstanceMovementEnded()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyISMPartitionInstanceMovementEnded(const FISMClientInstanceId& InstanceId)"
  },
  {
    "label": "NotifyISMPartitionInstanceSelectionChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyISMPartitionInstanceSelectionChanged(const FISMClientInstanceId& InstanceId, const bool bIsSelected)"
  },
  {
    "label": "DeleteISMPartitionInstances()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DeleteISMPartitionInstances(TArrayView<const FISMClientInstanceId> InstanceIds)"
  },
  {
    "label": "DuplicateISMPartitionInstances()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DuplicateISMPartitionInstances(TArrayView<const FISMClientInstanceId> InstanceIds, TArray<FISMClientInstanceId>& OutNewInstanceIds)"
  }
]