[
  {
    "label": "UAnimMontage",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimMontage"
  },
  {
    "label": "FAnimTimelineTrack_Montage",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAnimTimelineTrack_Montage"
  },
  {
    "label": "FAnimTimelineTrack_MontagePanel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAnimTimelineTrack_MontagePanel"
  },
  {
    "label": "FAnimTimelineTrack_TimingPanel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAnimTimelineTrack_TimingPanel"
  },
  {
    "label": "FAnimModel_AnimMontage",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAnimModel_AnimMontage"
  },
  {
    "label": "DECLARE_DELEGATE_ThreeParams()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" AnimTimeline / AnimModel_AnimSequenceBase . h \" # include \" SAnimTimingPanel . h \" class UAnimMontage ; class FAnimTimelineTrack_Montage ; class FAnimTimelineTrack_MontagePanel ; class FAnimTimelineTrack_TimingPanel ;)",
    "insertText": "DECLARE_DELEGATE_ThreeParams(FOnSectionTimeDragged, int32 , float , bool)"
  },
  {
    "label": "FAnimModel_AnimMontage()",
    "kind": "Method",
    "detail": "Function (class FAnimModel_AnimMontage : public FAnimModel_AnimSequenceBase { public :)",
    "insertText": "FAnimModel_AnimMontage(const TSharedRef<IPersonaPreviewScene>& InPreviewScene, const TSharedRef<IEditableSkeleton>& InEditableSkeleton, const TSharedRef<FUICommandList>& InCommandList, UAnimMontage* InAnimMontage)"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Initialize()"
  },
  {
    "label": "RefreshTracks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RefreshTracks()"
  },
  {
    "label": "GetAnimSequenceBase()",
    "kind": "Method",
    "detail": "Function (UAnimSequenceBase*)",
    "insertText": "GetAnimSequenceBase()"
  },
  {
    "label": "CalculateSequenceLengthOfEditorObject()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "CalculateSequenceLengthOfEditorObject()"
  },
  {
    "label": "RecalculateSequenceLength()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RecalculateSequenceLength()"
  },
  {
    "label": "OnSetEditableTime()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSetEditableTime(int32 TimeIndex, double Time, bool bIsDragging)"
  },
  {
    "label": "ClampToEndTime()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ClampToEndTime(float NewEndTime)"
  },
  {
    "label": "RefreshSnapTimes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RefreshSnapTimes()"
  },
  {
    "label": "RefreshSectionTimes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RefreshSectionTimes()"
  },
  {
    "label": "OnMontageModified()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnMontageModified()"
  },
  {
    "label": "SortSections()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SortSections()"
  },
  {
    "label": "EnsureStartingSection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnsureStartingSection()"
  },
  {
    "label": "RefreshNotifyTriggerOffsets()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RefreshNotifyTriggerOffsets()"
  },
  {
    "label": "ShowSectionInDetailsView()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ShowSectionInDetailsView(int32 SectionIndex)"
  },
  {
    "label": "RestartPreviewFromSection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RestartPreviewFromSection(int32 FromSectionIdx)"
  },
  {
    "label": "GetMontagePanel()",
    "kind": "Method",
    "detail": "Function (FSimpleDelegate OnSectionsChanged ; FOnSectionTimeDragged OnSectionTimeDragged ; TSharedPtr<FAnimTimelineTrack_MontagePanel>)",
    "insertText": "GetMontagePanel()"
  },
  {
    "label": "ToggleTimingElementDisplayEnabled()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ToggleTimingElementDisplayEnabled(ETimingElementType::Type ElementType)"
  },
  {
    "label": "IsSectionTimingDisplayEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsSectionTimingDisplayEnabled()"
  },
  {
    "label": "ToggleSectionTimingDisplay()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ToggleSectionTimingDisplay()"
  },
  {
    "label": "OnDataModelChanged()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "OnDataModelChanged(const EAnimDataModelNotifyType& NotifyType, IAnimationDataModel* Model, const FAnimDataModelNotifPayload& PayLoad)"
  }
]