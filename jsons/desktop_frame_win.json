[
  {
    "label": "DesktopFrameWin",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DesktopFrameWin"
  },
  {
    "label": "DesktopFrameWin()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_DESKTOP_CAPTURE_DESKTOP_FRAME_WIN_H_ # define MODULES_DESKTOP_CAPTURE_DESKTOP_FRAME_WIN_H_ # include<windows . h> # include<memory> # include \" modules / desktop_capture / desktop_frame . h \" namespace webrtc { class DesktopFrameWin : public DesktopFrame { public : ~)",
    "insertText": "DesktopFrameWin()"
  },
  {
    "label": "DesktopFrameWin()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DesktopFrameWin(const DesktopFrameWin&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (DesktopFrameWin&)",
    "insertText": "operator(const DesktopFrameWin&)"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<DesktopFrameWin>)",
    "insertText": "Create(DesktopSize size, SharedMemoryFactory* shared_memory_factory, HDC hdc)"
  },
  {
    "label": "bitmap()",
    "kind": "Method",
    "detail": "Function (HBITMAP)",
    "insertText": "bitmap()"
  }
]