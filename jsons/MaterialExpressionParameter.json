[
  {
    "label": "FMaterialParameterInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMaterialParameterInfo"
  },
  {
    "label": "UMaterialExpressionParameter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialExpressionParameter"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" Misc / Guid . h \" # include \" MaterialTypes . h \" # include \" Materials / MaterialExpression . h \" # include \" MaterialExpressionParameter . generated . h \" struct FMaterialParameterInfo ;)",
    "insertText": "UCLASS(collapsecategories, hidecategories=Object, MinimalAPI)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() UPROPERTY(EditAnywhere, Category=MaterialExpressionParameter)"
  },
  {
    "label": "MatchesSearchQuery()",
    "kind": "Method",
    "detail": "Function (FName ParameterDefaultName ; # if WITH_EDITOR bool)",
    "insertText": "MatchesSearchQuery(const TCHAR* SearchQuery)"
  },
  {
    "label": "CanRenameNode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanRenameNode()"
  },
  {
    "label": "SetEditableName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetEditableName(const FString& NewName)"
  },
  {
    "label": "HasAParameterName()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasAParameterName()"
  },
  {
    "label": "ValidateParameterName()",
    "kind": "Method",
    "detail": "Function (ParameterName = Name ; } void)",
    "insertText": "ValidateParameterName(const bool bAllowDuplicateName)"
  },
  {
    "label": "GetParameterValue()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetParameterValue(FMaterialParameterMetadata& OutMeta)"
  },
  {
    "label": "GetAssetPathName()",
    "kind": "Method",
    "detail": "Function (OutMeta . Description = Desc ; OutMeta . ExpressionGuid = ExpressionGUID ; OutMeta . Group = Group ; OutMeta . SortPriority = SortPriority ; OutMeta . AssetPath =)",
    "insertText": "GetAssetPathName()"
  },
  {
    "label": "GetParameterExpressionId()",
    "kind": "Method",
    "detail": "Function (# endif FGuid&)",
    "insertText": "GetParameterExpressionId()"
  }
]