[
  {
    "label": "FArrayProperty",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FArrayProperty"
  },
  {
    "label": "FSetProperty",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSetProperty"
  },
  {
    "label": "FMapProperty",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMapProperty"
  },
  {
    "label": "FOptionalProperty",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FOptionalProperty"
  },
  {
    "label": "FPrettyJsonWriter",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPrettyJsonWriter"
  },
  {
    "label": "FJsonStringifyImpl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FJsonStringifyImpl"
  },
  {
    "label": "FPendingScope",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPendingScope"
  },
  {
    "label": "FJsonStringifyImpl()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Utf8String . h \" # include \" Containers / Array . h \" # include \" Serialization / CustomVersion . h \" # include \" Serialization / MemoryWriter . h \" # include \" JsonObjectGraph / Stringify . h \" class FArrayProperty ; class FSetProperty ; class FMapProperty ; class FOptionalProperty ; namespace UE::Private { struct FPrettyJsonWriter ; using FJsonWriter = FPrettyJsonWriter ; struct FJsonStringifyImpl {)",
    "insertText": "FJsonStringifyImpl(TConstArrayView<const UObject*> Roots, const FJsonStringifyOptions& Options)"
  },
  {
    "label": "ToJson()",
    "kind": "Method",
    "detail": "Function (FUtf8String)",
    "insertText": "ToJson()"
  },
  {
    "label": "WriteObjectAsJsonToWriter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WriteObjectAsJsonToWriter(const UObject* OwningObject, const UObject* InObject, TSharedRef<FJsonWriter> WriterToUse)"
  },
  {
    "label": "WriteObjectAsJsonToArchive()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WriteObjectAsJsonToArchive(const UObject* OwningObject, const UObject* InObject, FArchive* ArchiveToUse, int32 InitialIndentLevel)"
  },
  {
    "label": "WriteFieldReferenceTo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WriteFieldReferenceTo(const UObject* OwningObject, const FField* Value, TSharedRef<FJsonWriter> WriterToUse)"
  },
  {
    "label": "ToJsonBytes()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "ToJsonBytes()"
  },
  {
    "label": "WriteObjectToJson()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WriteObjectToJson(const UObject* Object)"
  },
  {
    "label": "WriteNativeObjectData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WriteNativeObjectData()"
  },
  {
    "label": "WriteIndirectlyReferencedContainedObjects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WriteIndirectlyReferencedContainedObjects(const UObject* ForObject)"
  },
  {
    "label": "WriteObjectReference()",
    "kind": "Method",
    "detail": "Function (FUtf8String)",
    "insertText": "WriteObjectReference(const UObject* Object)"
  },
  {
    "label": "WriteFieldReference()",
    "kind": "Method",
    "detail": "Function (FUtf8String)",
    "insertText": "WriteFieldReference(const FField* Value)"
  },
  {
    "label": "WriteIdentifierAndValueToJson()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WriteIdentifierAndValueToJson(const void* Container, const void* DefaultContainer, const FProperty* Property)"
  },
  {
    "label": "WriteValueToJson()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WriteValueToJson(const void* Value, const void* DefaultValue, const FProperty* Property)"
  },
  {
    "label": "WriteIntrinsicToJson()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WriteIntrinsicToJson(const void* Value, const FProperty* Property)"
  },
  {
    "label": "WriteStructToJsonWithIdentifier()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WriteStructToJsonWithIdentifier(const TCHAR* Identifier, const void* StructInstance, const void* DefaultInstance, const UScriptStruct* Struct, const UScriptStruct* DefaultStruct)"
  },
  {
    "label": "WriteStructToJson()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WriteStructToJson(const void* StructInstance, const void* DefaultInstance, const UScriptStruct* Struct, const UScriptStruct* DefaultStruct)"
  },
  {
    "label": "WriteArrayToJson()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WriteArrayToJson(const void* ArrayInstance, const FArrayProperty* Array)"
  },
  {
    "label": "WriteSetToJson()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WriteSetToJson(const void* SetInstance, const FSetProperty* SetProperty)"
  },
  {
    "label": "WriteMapToJson()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WriteMapToJson(const void* MapInstance, const FMapProperty* MapProperty)"
  },
  {
    "label": "WriteOptionalToJson()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WriteOptionalToJson(const void* OptionalInstnace, const FOptionalProperty* OptionalProperty)"
  },
  {
    "label": "SerialDataToJson()",
    "kind": "Method",
    "detail": "Function (TArray<uint8>)",
    "insertText": "SerialDataToJson(const UObject* Object, int32 InitialIndentLevel)"
  },
  {
    "label": "StructuredDataToJson()",
    "kind": "Method",
    "detail": "Function (# if WITH_TEXT_ARCHIVE_SUPPORT TArray<uint8>)",
    "insertText": "StructuredDataToJson(const UObject* Object, int32 InitialIndentLevel)"
  },
  {
    "label": "FPendingScope()",
    "kind": "Method",
    "detail": "Function (# endif const FJsonStringifyOptions& WriteOptions ; TArray<uint8> Result ; FMemoryWriter MemoryWriter ; struct FPendingScope {)",
    "insertText": "FPendingScope(FJsonStringifyImpl* To, TFunctionRef<void()> Prefix)"
  },
  {
    "label": "FPendingScope()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FPendingScope(FJsonStringifyImpl* To, TFunctionRef<void()> Prefix, TFunctionRef<void()> Postfix)"
  },
  {
    "label": "FPendingScope()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FPendingScope()"
  },
  {
    "label": "Apply()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Apply()"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (private : FJsonStringifyImpl* Owner = nullptr ; FPendingScope* Outer = nullptr ; TFunctionRef<)",
    "insertText": "void()"
  },
  {
    "label": "FPendingScope()",
    "kind": "Method",
    "detail": "Function (bool bHasBeenApplied = false ;)",
    "insertText": "FPendingScope(const FPendingScope& RHS)"
  },
  {
    "label": "FPendingScope()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FPendingScope(FPendingScope&& RHS)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FPendingScope&)",
    "insertText": "operator(const FPendingScope& RHS)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FPendingScope&)",
    "insertText": "operator(FPendingScope&& RHS)"
  }
]