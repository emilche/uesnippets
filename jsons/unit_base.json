[
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "MyUnit",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MyUnit"
  },
  {
    "label": "Unit_T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Unit_T"
  },
  {
    "label": "UnitBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UnitBase"
  },
  {
    "label": "RelativeUnit_T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RelativeUnit_T"
  },
  {
    "label": "RelativeUnit",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RelativeUnit"
  },
  {
    "label": "Unit_T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Unit_T"
  },
  {
    "label": "RelativeUnit",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RelativeUnit"
  },
  {
    "label": "Unit_T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Unit_T"
  },
  {
    "label": "Unit_T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Unit_T"
  },
  {
    "label": "Unit_T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Unit_T"
  },
  {
    "label": "Unit_T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Unit_T"
  },
  {
    "label": "Unit_T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Unit_T"
  },
  {
    "label": "Unit_T()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "Unit_T(0)"
  },
  {
    "label": "PlusInfinity()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "PlusInfinity()"
  },
  {
    "label": "MinusInfinity()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "MinusInfinity()"
  },
  {
    "label": "FromValue()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FromValue(value * denominator)"
  }
]