[
  {
    "label": "FNetSerializerConfig",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FNetSerializerConfig"
  },
  {
    "label": "FNetSerializer",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FNetSerializer"
  },
  {
    "label": "FReplicationProtocol",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FReplicationProtocol"
  },
  {
    "label": "FReplicationStateDescriptor",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FReplicationStateDescriptor"
  },
  {
    "label": "FRepTagFindInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRepTagFindInfo"
  },
  {
    "label": "GetInvalidRepTag()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" struct FNetSerializerConfig ; namespace UE::Net { struct FNetSerializer ; struct FReplicationProtocol ; struct FReplicationStateDescriptor ; } namespace UE::Net { typedef uint64 FRepTag ; # ifndef UE_REPTAG_WORLDLOCATION # define UE_REPTAG_WORLDLOCATION FRepTag RepTag_WorldLocation = 0 x0719E9E9E02F8B16ULL ; # endif # ifndef UE_REPTAG_NETROLE # define UE_REPTAG_NETROLE FRepTag RepTag_NetRole = 0 xFFAAB417B1123942ULL ; # endif # ifndef UE_REPTAG_NETREMOTEROLE # define UE_REPTAG_NETREMOTEROLE FRepTag RepTag_NetRemoteRole = 0 xF754C2703924C7AAULL ; # endif # ifndef UE_REPTAG_CULLDISTANCESQR # define UE_REPTAG_CULLDISTANCESQR FRepTag RepTag_CullDistanceSqr = 0 x6BB13A5C1A655157ULL ; # endif FRepTag)",
    "insertText": "GetInvalidRepTag()"
  },
  {
    "label": "MakeRepTag()",
    "kind": "Method",
    "detail": "Function (} FRepTag)",
    "insertText": "MakeRepTag(const char* TagName)"
  },
  {
    "label": "HasRepTag()",
    "kind": "Method",
    "detail": "Function (struct FRepTagFindInfo { uint32 StateIndex ; uint32 ExternalStateOffset ; uint32 InternalStateAbsoluteOffset ; const FNetSerializer* Serializer ; const FNetSerializerConfig* SerializerConfig ; } ; bool)",
    "insertText": "HasRepTag(const FReplicationProtocol* Protocol, FRepTag RepTag)"
  },
  {
    "label": "FindRepTag()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "FindRepTag(const FReplicationProtocol* Protocol, FRepTag RepTag, FRepTagFindInfo& OutRepTagFindInfo)"
  },
  {
    "label": "FindRepTag()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "FindRepTag(const FReplicationStateDescriptor* Descriptor, FRepTag RepTag, FRepTagFindInfo& OutRepTagFindInfo)"
  }
]