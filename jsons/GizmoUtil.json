[
  {
    "label": "FString",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FString"
  },
  {
    "label": "UInteractiveGizmo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UInteractiveGizmo"
  },
  {
    "label": "UInteractiveGizmoManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UInteractiveGizmoManager"
  },
  {
    "label": "USimpleLambdaInteractiveGizmoBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USimpleLambdaInteractiveGizmoBuilder"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" InteractiveGizmoBuilder . h \" # include \" Templates / Function . h \" # include \" Templates / SubclassOf . h \" # include \" GizmoUtil . generated . h \" class FString ; class UInteractiveGizmo ; class UInteractiveGizmoManager ;)",
    "insertText": "UCLASS(MinimalAPI)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: virtual UInteractiveGizmo* BuildGizmo(const FToolBuilderState& SceneState)"
  },
  {
    "label": "UInteractiveGizmo()",
    "kind": "Method",
    "detail": "Function (} return nullptr ; } TUniqueFunction<)",
    "insertText": "UInteractiveGizmo(const FToolBuilderState& SceneState)"
  },
  {
    "label": "CreateGizmoViaSimpleBuilder()",
    "kind": "Method",
    "detail": "Function (} ; namespace UE::GizmoUtil { UInteractiveGizmo*)",
    "insertText": "CreateGizmoViaSimpleBuilder(UInteractiveGizmoManager* GizmoManager, TSubclassOf<UInteractiveGizmo> GizmoClass, const FString& InstanceIdentifier, void* Owner)"
  },
  {
    "label": "CreateGizmoViaSimpleBuilder()",
    "kind": "Method",
    "detail": "Function (template<GizmoClass> GizmoClass*)",
    "insertText": "CreateGizmoViaSimpleBuilder(UInteractiveGizmoManager* GizmoManager, const FString& InstanceIdentifier, void* GizmoOwner)"
  }
]