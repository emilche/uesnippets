[
  {
    "label": "FSceneView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSceneView"
  },
  {
    "label": "FRDGBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRDGBuilder"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FGPUSceneWriteDelegateParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGPUSceneWriteDelegateParams"
  },
  {
    "label": "BEGIN_SHADER_PARAMETER_STRUCT()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" ShaderParameterMacros . h \" # include \" ShaderParameters . h \" class FSceneView ; class FRDGBuilder ;)",
    "insertText": "BEGIN_SHADER_PARAMETER_STRUCT(FGPUSceneWriterParameters, ENGINE_API) SHADER_PARAMETER_RDG_BUFFER_UAV(RWStructuredBuffer<float4>, GPUSceneInstanceSceneDataRW) SHADER_PARAMETER_RDG_BUFFER_UAV(RWStructuredBuffer<float4>, GPUSceneInstancePayloadDataRW) SHADER_PARAMETER_RDG_BUFFER_UAV(RWStructuredBuffer<float4>, GPUScenePrimitiveSceneDataRW) SHADER_PARAMETER(uint32, GPUSceneInstanceSceneDataSOAStride) SHADER_PARAMETER(uint32, GPUSceneFrameNumber) SHADER_PARAMETER(uint32, GPUSceneNumAllocatedInstances) SHADER_PARAMETER(uint32, GPUSceneNumAllocatedPrimitives) END_SHADER_PARAMETER_STRUCT()"
  },
  {
    "label": "PersistentPrimitiveId()",
    "kind": "Method",
    "detail": "Function (None = - 1,PostOpaqueRendering,Num } ; struct FGPUSceneWriteDelegateParams { uint32)",
    "insertText": "PersistentPrimitiveId(uint32)"
  },
  {
    "label": "InstanceSceneDataOffset()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "InstanceSceneDataOffset(uint32)"
  },
  {
    "label": "NumCustomDataFloats()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "NumCustomDataFloats(uint32)"
  },
  {
    "label": "DECLARE_DELEGATE_TwoParams()",
    "kind": "Method",
    "detail": "Function (uint32 PackedInstanceSceneDataFlags = 0 u ; EGPUSceneGPUWritePass GPUWritePass = EGPUSceneGPUWritePass::None ; FSceneView* View = nullptr ; FGPUSceneWriterParameters GPUWriteParams ; } ;)",
    "insertText": "DECLARE_DELEGATE_TwoParams(FGPUSceneWriteDelegate, FRDGBuilder&, const FGPUSceneWriteDelegateParams&)"
  }
]