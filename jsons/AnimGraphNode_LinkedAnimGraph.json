[
  {
    "label": "UAnimGraphNode_LinkedAnimGraph",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimGraphNode_LinkedAnimGraph"
  },
  {
    "label": "FBlueprintActionFilter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBlueprintActionFilter"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" AnimGraphNode_LinkedAnimGraphBase . h \" # include \" K2Node_ExternalGraphInterface . h \" # include \" Animation / AnimNode_LinkedAnimGraph . h \" # include \" Engine / MemberReference . h \" # include \" AnimGraphNode_LinkedAnimGraph . generated . h \")",
    "insertText": "UCLASS(MinimalAPI)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: UPROPERTY(EditAnywhere, Category = Settings)"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Serialize(FArchive& Ar)"
  },
  {
    "label": "PostPasteNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostPasteNode()"
  },
  {
    "label": "GetMenuActions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetMenuActions(FBlueprintActionDatabaseRegistrar& ActionRegistrar)"
  },
  {
    "label": "IsActionFilteredOut()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsActionFilteredOut(class FBlueprintActionFilter const& Filter)"
  },
  {
    "label": "GetCustomPropertyNode()",
    "kind": "Method",
    "detail": "Function (FAnimNode_CustomProperty*)",
    "insertText": "GetCustomPropertyNode()"
  },
  {
    "label": "GetLinkedAnimGraphNode()",
    "kind": "Method",
    "detail": "Function (FAnimNode_LinkedAnimGraph*)",
    "insertText": "GetLinkedAnimGraphNode()"
  },
  {
    "label": "GetExternalGraphs()",
    "kind": "Method",
    "detail": "Function (TArray<UEdGraph*>)",
    "insertText": "GetExternalGraphs()"
  },
  {
    "label": "SetupFromAsset()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "SetupFromAsset(const FAssetData& InAssetData, bool bInIsTemplateNode)"
  }
]