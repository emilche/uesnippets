[
  {
    "label": "CoalescerPair",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CoalescerPair"
  },
  {
    "label": "LiveIntervals",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "LiveIntervals"
  },
  {
    "label": "MachineInstr",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MachineInstr"
  },
  {
    "label": "MachineRegisterInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MachineRegisterInfo"
  },
  {
    "label": "TargetRegisterInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TargetRegisterInfo"
  },
  {
    "label": "raw_ostream",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "raw_ostream"
  },
  {
    "label": "SmallPtrSet",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SmallPtrSet"
  },
  {
    "label": "holds",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "holds"
  },
  {
    "label": "VNInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "VNInfo"
  },
  {
    "label": "hides",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "hides"
  },
  {
    "label": "LiveQueryResult",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "LiveQueryResult"
  },
  {
    "label": "represents",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "represents"
  },
  {
    "label": "LiveRange",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "LiveRange"
  },
  {
    "label": "Segment",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Segment"
  },
  {
    "label": "LiveRangeUpdater",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "LiveRangeUpdater"
  },
  {
    "label": "represents",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "represents"
  },
  {
    "label": "LiveInterval",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "LiveInterval"
  },
  {
    "label": "SubRange",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SubRange"
  },
  {
    "label": "SingleLinkedListIterator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SingleLinkedListIterator"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "can",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "can"
  },
  {
    "label": "LiveRangeUpdater",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "LiveRangeUpdater"
  },
  {
    "label": "that",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "that"
  },
  {
    "label": "ConnectedVNInfoEqClasses",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ConnectedVNInfoEqClasses"
  },
  {
    "label": "assigned",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "assigned"
  },
  {
    "label": "end()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "end()"
  },
  {
    "label": "end()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "end()"
  },
  {
    "label": "find()",
    "kind": "Method",
    "detail": "Function (iterator)",
    "insertText": "find(SlotIndex Pos)"
  },
  {
    "label": "RenumberValues()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenumberValues()"
  },
  {
    "label": "MergeSegmentsInAsValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MergeSegmentsInAsValue(const LiveRange &RHS, VNInfo *LHSValNo)"
  },
  {
    "label": "MergeValueInAsValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MergeValueInAsValue(const LiveRange &RHS,\n                             const VNInfo *RHSValNo, VNInfo *LHSValNo)"
  },
  {
    "label": "addSegment()",
    "kind": "Method",
    "detail": "Function (iterator)",
    "insertText": "addSegment(Segment S)"
  },
  {
    "label": "join()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "join(LiveRange &Other,\n              const int *ValNoAssignments,\n              const int *RHSValNoAssignments,\n              SmallVectorImpl<VNInfo *> &NewVNInfo)"
  },
  {
    "label": "removeSegment()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "removeSegment(SlotIndex Start, SlotIndex End,\n                       bool RemoveDeadValNo = false)"
  },
  {
    "label": "LiveQueryResult()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "LiveQueryResult(EarlyVal, LateVal, EndPoint, Kill)"
  },
  {
    "label": "LiveQueryResult()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "LiveQueryResult(EarlyVal, LateVal, EndPoint, Kill)"
  },
  {
    "label": "removeValNo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "removeValNo(VNInfo *ValNo)"
  },
  {
    "label": "flushSegmentSet()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "flushSegmentSet()"
  },
  {
    "label": "append()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "append(const LiveRange::Segment S)"
  },
  {
    "label": "addSegmentToSet()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "addSegmentToSet(Segment S)"
  },
  {
    "label": "markValNoForDeletion()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "markValNoForDeletion(VNInfo *V)"
  },
  {
    "label": "subrange_iterator()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "subrange_iterator(SubRanges)"
  },
  {
    "label": "subrange_iterator()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "subrange_iterator(nullptr)"
  },
  {
    "label": "const_subrange_iterator()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "const_subrange_iterator(SubRanges)"
  },
  {
    "label": "const_subrange_iterator()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "const_subrange_iterator(nullptr)"
  },
  {
    "label": "clearSubRanges()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "clearSubRanges()"
  },
  {
    "label": "removeEmptySubRanges()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "removeEmptySubRanges()"
  },
  {
    "label": "constructMainRangeFromSubranges()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "constructMainRangeFromSubranges(const SlotIndexes &Indexes,\n                                         VNInfo::Allocator &VNIAllocator)"
  },
  {
    "label": "freeSubRange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "freeSubRange(SubRange *S)"
  },
  {
    "label": "mergeSpills()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "mergeSpills()"
  },
  {
    "label": "add()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "add(LiveRange::Segment)"
  },
  {
    "label": "flush()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "flush()"
  },
  {
    "label": "Connect()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Connect(unsigned a, unsigned b)"
  },
  {
    "label": "Renumber()",
    "kind": "Method",
    "detail": "Function (unsigned)",
    "insertText": "Renumber()"
  },
  {
    "label": "Classify()",
    "kind": "Method",
    "detail": "Function (unsigned)",
    "insertText": "Classify(const LiveInterval *LI)"
  },
  {
    "label": "Distribute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Distribute(LiveInterval *LIV[], MachineRegisterInfo &MRI)"
  }
]