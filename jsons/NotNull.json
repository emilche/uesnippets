[
  {
    "label": "FArchive",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FArchive"
  },
  {
    "label": "GetRawPointerOrNull()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" Misc / OptionalFwd . h \" # include \" Templates / UnrealTemplate . h \" # include<gsl / pointers> class FArchive ; template<ObjectType> [ [ nodiscard ] ] ObjectType*)",
    "insertText": "GetRawPointerOrNull(const TOptional<gsl::not_null<ObjectType*>>& Optional)"
  },
  {
    "label": "GetRawPointerOrNull()",
    "kind": "Method",
    "detail": "Function (} template<ObjectType> [ [ nodiscard ] ] ObjectType*)",
    "insertText": "GetRawPointerOrNull(const TOptional<gsl::strict_not_null<ObjectType*>>& Optional)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} template<ObjectType> FArchive&)",
    "insertText": "operator(FArchive& Ar, gsl::not_null<ObjectType>& NotNull)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (Ar<<* NotNull ; return Ar ; } template<ObjectType> FArchive&)",
    "insertText": "operator(FArchive& Ar, gsl::strict_not_null<ObjectType>& NotNull)"
  },
  {
    "label": "GetTypeHash()",
    "kind": "Method",
    "detail": "Function (Ar<<* NotNull ; return Ar ; } template<ObjectType> [ [ nodiscard ] ] auto)",
    "insertText": "GetTypeHash(const gsl::not_null<ObjectType>& NotNull) -> decltype(GetTypeHash(*NotNull))"
  },
  {
    "label": "GetTypeHash()",
    "kind": "Method",
    "detail": "Function (} template<ObjectType> [ [ nodiscard ] ] auto)",
    "insertText": "GetTypeHash(const gsl::strict_not_null<ObjectType>& NotNull) -> decltype(GetTypeHash(*NotNull))"
  }
]