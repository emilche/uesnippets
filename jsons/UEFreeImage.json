[
  {
    "label": "FUEFreeImageWrapper",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FUEFreeImageWrapper"
  },
  {
    "label": "IsValid()",
    "kind": "Method",
    "detail": "Function (THIRD_PARTY_INCLUDES_START # include \" FreeImage . h \" THIRD_PARTY_INCLUDES_END # if PLATFORM_WINDOWS # define TCHAR_TO_FICHAR TCHAR_TO_WCHAR # define FreeImage_GetFIFFromFilename FreeImage_GetFIFFromFilenameU # define FreeImage_GetFileType FreeImage_GetFileTypeU # define FreeImage_Load FreeImage_LoadU # define FreeImage_Save FreeImage_SaveU # else # define TCHAR_TO_FICHAR TCHAR_TO_UTF8 # endif class FUEFreeImageWrapper { public : bool)",
    "insertText": "IsValid()"
  },
  {
    "label": "FreeImage_Initialise()",
    "kind": "Method",
    "detail": "Function (private : void* FreeImageDllHandle ; } ; void* FUEFreeImageWrapper::FreeImageDllHandle = nullptr ; void)",
    "insertText": "FreeImage_Initialise()"
  },
  {
    "label": "Combine()",
    "kind": "Method",
    "detail": "Function (FString FreeImageDir =)",
    "insertText": "Combine(FPaths::EngineDir(), TEXT(\"Binaries/ThirdParty/FreeImage\"), FPlatformProcess::GetBinariesSubdirectory())"
  },
  {
    "label": "Combine()",
    "kind": "Method",
    "detail": "Function (FString FreeImageLibDir =)",
    "insertText": "Combine(FreeImageDir, TEXT(FREEIMAGE_LIB_FILENAME))"
  },
  {
    "label": "PushDllDirectory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PushDllDirectory(*FreeImageDir)"
  },
  {
    "label": "GetDllHandle()",
    "kind": "Method",
    "detail": "Function (FreeImageDllHandle =)",
    "insertText": "GetDllHandle(*FreeImageLibDir)"
  },
  {
    "label": "PopDllDirectory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PopDllDirectory(*FreeImageDir)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "if(FreeImageDllHandle)"
  }
]