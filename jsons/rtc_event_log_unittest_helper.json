[
  {
    "label": "EventGenerator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "EventGenerator"
  },
  {
    "label": "EventVerifier",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "EventVerifier"
  },
  {
    "label": "EventGenerator()",
    "kind": "Method",
    "detail": "Function (# ifndef LOGGING_RTC_EVENT_LOG_RTC_EVENT_LOG_UNITTEST_HELPER_H_ # define LOGGING_RTC_EVENT_LOG_RTC_EVENT_LOG_UNITTEST_HELPER_H_ # include<stddef . h> # include<stdint . h> # include<memory> # include \" logging / rtc_event_log / events / rtc_event_alr_state . h \" # include \" logging / rtc_event_log / events / rtc_event_audio_network_adaptation . h \" # include \" logging / rtc_event_log / events / rtc_event_audio_playout . h \" # include \" logging / rtc_event_log / events / rtc_event_audio_receive_stream_config . h \" # include \" logging / rtc_event_log / events / rtc_event_audio_send_stream_config . h \" # include \" logging / rtc_event_log / events / rtc_event_bwe_update_delay_based . h \" # include \" logging / rtc_event_log / events / rtc_event_bwe_update_loss_based . h \" # include \" logging / rtc_event_log / events / rtc_event_dtls_transport_state . h \" # include \" logging / rtc_event_log / events / rtc_event_dtls_writable_state . h \" # include \" logging / rtc_event_log / events / rtc_event_frame_decoded . h \" # include \" logging / rtc_event_log / events / rtc_event_generic_ack_received . h \" # include \" logging / rtc_event_log / events / rtc_event_generic_packet_received . h \" # include \" logging / rtc_event_log / events / rtc_event_generic_packet_sent . h \" # include \" logging / rtc_event_log / events / rtc_event_ice_candidate_pair . h \" # include \" logging / rtc_event_log / events / rtc_event_ice_candidate_pair_config . h \" # include \" logging / rtc_event_log / events / rtc_event_probe_cluster_created . h \" # include \" logging / rtc_event_log / events / rtc_event_probe_result_failure . h \" # include \" logging / rtc_event_log / events / rtc_event_probe_result_success . h \" # include \" logging / rtc_event_log / events / rtc_event_remote_estimate . h \" # include \" logging / rtc_event_log / events / rtc_event_route_change . h \" # include \" logging / rtc_event_log / events / rtc_event_rtcp_packet_incoming . h \" # include \" logging / rtc_event_log / events / rtc_event_rtcp_packet_outgoing . h \" # include \" logging / rtc_event_log / events / rtc_event_rtp_packet_incoming . h \" # include \" logging / rtc_event_log / events / rtc_event_rtp_packet_outgoing . h \" # include \" logging / rtc_event_log / events / rtc_event_video_receive_stream_config . h \" # include \" logging / rtc_event_log / events / rtc_event_video_send_stream_config . h \" # include \" logging / rtc_event_log / rtc_event_log_parser . h \" # include \" logging / rtc_event_log / rtc_stream_config . h \" # include \" modules / rtp_rtcp / include / rtp_header_extension_map . h \" # include \" modules / rtp_rtcp / source / rtcp_packet / bye . h \" # include \" modules / rtp_rtcp / source / rtcp_packet / extended_reports . h \" # include \" modules / rtp_rtcp / source / rtcp_packet / fir . h \" # include \" modules / rtp_rtcp / source / rtcp_packet / loss_notification . h \" # include \" modules / rtp_rtcp / source / rtcp_packet / nack . h \" # include \" modules / rtp_rtcp / source / rtcp_packet / pli . h \" # include \" modules / rtp_rtcp / source / rtcp_packet / receiver_report . h \" # include \" modules / rtp_rtcp / source / rtcp_packet / remb . h \" # include \" modules / rtp_rtcp / source / rtcp_packet / report_block . h \" # include \" modules / rtp_rtcp / source / rtcp_packet / sender_report . h \" # include \" modules / rtp_rtcp / source / rtp_packet . h \" # include \" rtc_base / random . h \" namespace webrtc { namespace test { class EventGenerator { public :)",
    "insertText": "EventGenerator(uint64_t seed) : prng_(seed)"
  },
  {
    "label": "NewAlrState()",
    "kind": "Method",
    "detail": "Function (} std::unique_ptr<RtcEventAlrState>)",
    "insertText": "NewAlrState()"
  },
  {
    "label": "NewAudioNetworkAdaptation()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<RtcEventAudioNetworkAdaptation>)",
    "insertText": "NewAudioNetworkAdaptation()"
  },
  {
    "label": "NewAudioPlayout()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<RtcEventAudioPlayout>)",
    "insertText": "NewAudioPlayout(uint32_t ssrc)"
  },
  {
    "label": "NewBweUpdateDelayBased()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<RtcEventBweUpdateDelayBased>)",
    "insertText": "NewBweUpdateDelayBased()"
  },
  {
    "label": "NewBweUpdateLossBased()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<RtcEventBweUpdateLossBased>)",
    "insertText": "NewBweUpdateLossBased()"
  },
  {
    "label": "NewDtlsTransportState()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<RtcEventDtlsTransportState>)",
    "insertText": "NewDtlsTransportState()"
  },
  {
    "label": "NewDtlsWritableState()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<RtcEventDtlsWritableState>)",
    "insertText": "NewDtlsWritableState()"
  },
  {
    "label": "NewFrameDecodedEvent()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<RtcEventFrameDecoded>)",
    "insertText": "NewFrameDecodedEvent(uint32_t ssrc)"
  },
  {
    "label": "NewGenericAckReceived()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<RtcEventGenericAckReceived>)",
    "insertText": "NewGenericAckReceived()"
  },
  {
    "label": "NewGenericPacketReceived()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<RtcEventGenericPacketReceived>)",
    "insertText": "NewGenericPacketReceived()"
  },
  {
    "label": "NewGenericPacketSent()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<RtcEventGenericPacketSent>)",
    "insertText": "NewGenericPacketSent()"
  },
  {
    "label": "NewIceCandidatePair()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<RtcEventIceCandidatePair>)",
    "insertText": "NewIceCandidatePair()"
  },
  {
    "label": "NewIceCandidatePairConfig()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<RtcEventIceCandidatePairConfig>)",
    "insertText": "NewIceCandidatePairConfig()"
  },
  {
    "label": "NewProbeClusterCreated()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<RtcEventProbeClusterCreated>)",
    "insertText": "NewProbeClusterCreated()"
  },
  {
    "label": "NewProbeResultFailure()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<RtcEventProbeResultFailure>)",
    "insertText": "NewProbeResultFailure()"
  },
  {
    "label": "NewProbeResultSuccess()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<RtcEventProbeResultSuccess>)",
    "insertText": "NewProbeResultSuccess()"
  },
  {
    "label": "NewRouteChange()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<RtcEventRouteChange>)",
    "insertText": "NewRouteChange()"
  },
  {
    "label": "NewRemoteEstimate()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<RtcEventRemoteEstimate>)",
    "insertText": "NewRemoteEstimate()"
  },
  {
    "label": "NewRtcpPacketIncoming()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<RtcEventRtcpPacketIncoming>)",
    "insertText": "NewRtcpPacketIncoming()"
  },
  {
    "label": "NewRtcpPacketOutgoing()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<RtcEventRtcpPacketOutgoing>)",
    "insertText": "NewRtcpPacketOutgoing()"
  },
  {
    "label": "NewSenderReport()",
    "kind": "Method",
    "detail": "Function (rtcp::SenderReport)",
    "insertText": "NewSenderReport()"
  },
  {
    "label": "NewReceiverReport()",
    "kind": "Method",
    "detail": "Function (rtcp::ReceiverReport)",
    "insertText": "NewReceiverReport()"
  },
  {
    "label": "NewExtendedReports()",
    "kind": "Method",
    "detail": "Function (rtcp::ExtendedReports)",
    "insertText": "NewExtendedReports()"
  },
  {
    "label": "NewNack()",
    "kind": "Method",
    "detail": "Function (rtcp::Nack)",
    "insertText": "NewNack()"
  },
  {
    "label": "NewRemb()",
    "kind": "Method",
    "detail": "Function (rtcp::Remb)",
    "insertText": "NewRemb()"
  },
  {
    "label": "NewFir()",
    "kind": "Method",
    "detail": "Function (rtcp::Fir)",
    "insertText": "NewFir()"
  },
  {
    "label": "NewPli()",
    "kind": "Method",
    "detail": "Function (rtcp::Pli)",
    "insertText": "NewPli()"
  },
  {
    "label": "NewBye()",
    "kind": "Method",
    "detail": "Function (rtcp::Bye)",
    "insertText": "NewBye()"
  },
  {
    "label": "NewTransportFeedback()",
    "kind": "Method",
    "detail": "Function (rtcp::TransportFeedback)",
    "insertText": "NewTransportFeedback()"
  },
  {
    "label": "NewLossNotification()",
    "kind": "Method",
    "detail": "Function (rtcp::LossNotification)",
    "insertText": "NewLossNotification()"
  },
  {
    "label": "RandomizeRtpPacket()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RandomizeRtpPacket(size_t payload_size, size_t padding_size, uint32_t ssrc, const RtpHeaderExtensionMap& extension_map, RtpPacket* rtp_packet, bool all_configured_exts)"
  },
  {
    "label": "NewRtpPacketIncoming()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<RtcEventRtpPacketIncoming>)",
    "insertText": "NewRtpPacketIncoming(uint32_t ssrc, const RtpHeaderExtensionMap& extension_map, bool all_configured_exts = true)"
  },
  {
    "label": "NewRtpPacketOutgoing()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<RtcEventRtpPacketOutgoing>)",
    "insertText": "NewRtpPacketOutgoing(uint32_t ssrc, const RtpHeaderExtensionMap& extension_map, bool all_configured_exts = true)"
  },
  {
    "label": "NewRtpHeaderExtensionMap()",
    "kind": "Method",
    "detail": "Function (RtpHeaderExtensionMap)",
    "insertText": "NewRtpHeaderExtensionMap(bool configure_all = false)"
  },
  {
    "label": "NewAudioReceiveStreamConfig()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<RtcEventAudioReceiveStreamConfig>)",
    "insertText": "NewAudioReceiveStreamConfig(uint32_t ssrc, const RtpHeaderExtensionMap& extensions)"
  },
  {
    "label": "NewAudioSendStreamConfig()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<RtcEventAudioSendStreamConfig>)",
    "insertText": "NewAudioSendStreamConfig(uint32_t ssrc, const RtpHeaderExtensionMap& extensions)"
  },
  {
    "label": "NewVideoReceiveStreamConfig()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<RtcEventVideoReceiveStreamConfig>)",
    "insertText": "NewVideoReceiveStreamConfig(uint32_t ssrc, const RtpHeaderExtensionMap& extensions)"
  },
  {
    "label": "NewVideoSendStreamConfig()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<RtcEventVideoSendStreamConfig>)",
    "insertText": "NewVideoSendStreamConfig(uint32_t ssrc, const RtpHeaderExtensionMap& extensions)"
  },
  {
    "label": "NewReportBlock()",
    "kind": "Method",
    "detail": "Function (private : rtcp::ReportBlock)",
    "insertText": "NewReportBlock()"
  },
  {
    "label": "EventVerifier()",
    "kind": "Method",
    "detail": "Function (int sent_packet_number_ = 0 ; int received_packet_number_ = 0 ; Random prng_ ; } ; class EventVerifier { public :)",
    "insertText": "EventVerifier(RtcEventLog::EncodingType encoding_type) : encoding_type_(encoding_type)"
  },
  {
    "label": "VerifyLoggedAlrStateEvent()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "VerifyLoggedAlrStateEvent(const RtcEventAlrState& original_event, const LoggedAlrStateEvent& logged_event)"
  },
  {
    "label": "VerifyLoggedAudioPlayoutEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "VerifyLoggedAudioPlayoutEvent(const RtcEventAudioPlayout& original_event, const LoggedAudioPlayoutEvent& logged_event)"
  },
  {
    "label": "VerifyLoggedAudioNetworkAdaptationEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "VerifyLoggedAudioNetworkAdaptationEvent(const RtcEventAudioNetworkAdaptation& original_event, const LoggedAudioNetworkAdaptationEvent& logged_event)"
  },
  {
    "label": "VerifyLoggedBweDelayBasedUpdate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "VerifyLoggedBweDelayBasedUpdate(const RtcEventBweUpdateDelayBased& original_event, const LoggedBweDelayBasedUpdate& logged_event)"
  },
  {
    "label": "VerifyLoggedBweLossBasedUpdate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "VerifyLoggedBweLossBasedUpdate(const RtcEventBweUpdateLossBased& original_event, const LoggedBweLossBasedUpdate& logged_event)"
  },
  {
    "label": "VerifyLoggedBweProbeClusterCreatedEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "VerifyLoggedBweProbeClusterCreatedEvent(const RtcEventProbeClusterCreated& original_event, const LoggedBweProbeClusterCreatedEvent& logged_event)"
  },
  {
    "label": "VerifyLoggedBweProbeFailureEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "VerifyLoggedBweProbeFailureEvent(const RtcEventProbeResultFailure& original_event, const LoggedBweProbeFailureEvent& logged_event)"
  },
  {
    "label": "VerifyLoggedBweProbeSuccessEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "VerifyLoggedBweProbeSuccessEvent(const RtcEventProbeResultSuccess& original_event, const LoggedBweProbeSuccessEvent& logged_event)"
  },
  {
    "label": "VerifyLoggedDtlsTransportState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "VerifyLoggedDtlsTransportState(const RtcEventDtlsTransportState& original_event, const LoggedDtlsTransportState& logged_event)"
  },
  {
    "label": "VerifyLoggedDtlsWritableState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "VerifyLoggedDtlsWritableState(const RtcEventDtlsWritableState& original_event, const LoggedDtlsWritableState& logged_event)"
  },
  {
    "label": "VerifyLoggedFrameDecoded()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "VerifyLoggedFrameDecoded(const RtcEventFrameDecoded& original_event, const LoggedFrameDecoded& logged_event)"
  },
  {
    "label": "VerifyLoggedIceCandidatePairConfig()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "VerifyLoggedIceCandidatePairConfig(const RtcEventIceCandidatePairConfig& original_event, const LoggedIceCandidatePairConfig& logged_event)"
  },
  {
    "label": "VerifyLoggedIceCandidatePairEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "VerifyLoggedIceCandidatePairEvent(const RtcEventIceCandidatePair& original_event, const LoggedIceCandidatePairEvent& logged_event)"
  },
  {
    "label": "VerifyLoggedRouteChangeEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "VerifyLoggedRouteChangeEvent(const RtcEventRouteChange& original_event, const LoggedRouteChangeEvent& logged_event)"
  },
  {
    "label": "VerifyLoggedRemoteEstimateEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "VerifyLoggedRemoteEstimateEvent(const RtcEventRemoteEstimate& original_event, const LoggedRemoteEstimateEvent& logged_event)"
  },
  {
    "label": "VerifyLoggedRtpPacketIncoming()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "VerifyLoggedRtpPacketIncoming(const RtcEventRtpPacketIncoming& original_event, const LoggedRtpPacketIncoming& logged_event)"
  },
  {
    "label": "VerifyLoggedRtpPacketOutgoing()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "VerifyLoggedRtpPacketOutgoing(const RtcEventRtpPacketOutgoing& original_event, const LoggedRtpPacketOutgoing& logged_event)"
  },
  {
    "label": "VerifyLoggedGenericPacketSent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "VerifyLoggedGenericPacketSent(const RtcEventGenericPacketSent& original_event, const LoggedGenericPacketSent& logged_event)"
  },
  {
    "label": "VerifyLoggedGenericPacketReceived()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "VerifyLoggedGenericPacketReceived(const RtcEventGenericPacketReceived& original_event, const LoggedGenericPacketReceived& logged_event)"
  },
  {
    "label": "VerifyLoggedGenericAckReceived()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "VerifyLoggedGenericAckReceived(const RtcEventGenericAckReceived& original_event, const LoggedGenericAckReceived& logged_event)"
  },
  {
    "label": "VerifyLoggedRtpPacket()",
    "kind": "Method",
    "detail": "Function (template<EventType,ParsedType> void)",
    "insertText": "VerifyLoggedRtpPacket(const EventType& original_event, const ParsedType& logged_event)"
  },
  {
    "label": "VerifyLoggedRtpPacket()",
    "kind": "Method",
    "detail": "Function (} template<> void)",
    "insertText": "VerifyLoggedRtpPacket(const RtcEventRtpPacketIncoming& original_event, const LoggedRtpPacketIncoming& logged_event)"
  },
  {
    "label": "VerifyLoggedRtpPacket()",
    "kind": "Method",
    "detail": "Function (} template<> void)",
    "insertText": "VerifyLoggedRtpPacket(const RtcEventRtpPacketOutgoing& original_event, const LoggedRtpPacketOutgoing& logged_event)"
  },
  {
    "label": "VerifyLoggedRtcpPacketIncoming()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "VerifyLoggedRtcpPacketIncoming(const RtcEventRtcpPacketIncoming& original_event, const LoggedRtcpPacketIncoming& logged_event)"
  },
  {
    "label": "VerifyLoggedRtcpPacketOutgoing()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "VerifyLoggedRtcpPacketOutgoing(const RtcEventRtcpPacketOutgoing& original_event, const LoggedRtcpPacketOutgoing& logged_event)"
  },
  {
    "label": "VerifyLoggedSenderReport()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "VerifyLoggedSenderReport(int64_t log_time_ms, const rtcp::SenderReport& original_sr, const LoggedRtcpPacketSenderReport& logged_sr)"
  },
  {
    "label": "VerifyLoggedReceiverReport()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "VerifyLoggedReceiverReport(int64_t log_time_ms, const rtcp::ReceiverReport& original_rr, const LoggedRtcpPacketReceiverReport& logged_rr)"
  },
  {
    "label": "VerifyLoggedExtendedReports()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "VerifyLoggedExtendedReports(int64_t log_time_ms, const rtcp::ExtendedReports& original_xr, const LoggedRtcpPacketExtendedReports& logged_xr)"
  },
  {
    "label": "VerifyLoggedFir()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "VerifyLoggedFir(int64_t log_time_ms, const rtcp::Fir& original_fir, const LoggedRtcpPacketFir& logged_fir)"
  },
  {
    "label": "VerifyLoggedPli()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "VerifyLoggedPli(int64_t log_time_ms, const rtcp::Pli& original_pli, const LoggedRtcpPacketPli& logged_pli)"
  },
  {
    "label": "VerifyLoggedBye()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "VerifyLoggedBye(int64_t log_time_ms, const rtcp::Bye& original_bye, const LoggedRtcpPacketBye& logged_bye)"
  },
  {
    "label": "VerifyLoggedNack()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "VerifyLoggedNack(int64_t log_time_ms, const rtcp::Nack& original_nack, const LoggedRtcpPacketNack& logged_nack)"
  },
  {
    "label": "VerifyLoggedTransportFeedback()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "VerifyLoggedTransportFeedback(int64_t log_time_ms, const rtcp::TransportFeedback& original_transport_feedback, const LoggedRtcpPacketTransportFeedback& logged_transport_feedback)"
  },
  {
    "label": "VerifyLoggedRemb()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "VerifyLoggedRemb(int64_t log_time_ms, const rtcp::Remb& original_remb, const LoggedRtcpPacketRemb& logged_remb)"
  },
  {
    "label": "VerifyLoggedLossNotification()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "VerifyLoggedLossNotification(int64_t log_time_ms, const rtcp::LossNotification& original_loss_notification, const LoggedRtcpPacketLossNotification& logged_loss_notification)"
  },
  {
    "label": "VerifyLoggedStartEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "VerifyLoggedStartEvent(int64_t start_time_us, int64_t utc_start_time_us, const LoggedStartEvent& logged_event)"
  },
  {
    "label": "VerifyLoggedStopEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "VerifyLoggedStopEvent(int64_t stop_time_us, const LoggedStopEvent& logged_event)"
  },
  {
    "label": "VerifyLoggedAudioRecvConfig()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "VerifyLoggedAudioRecvConfig(const RtcEventAudioReceiveStreamConfig& original_event, const LoggedAudioRecvConfig& logged_event)"
  },
  {
    "label": "VerifyLoggedAudioSendConfig()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "VerifyLoggedAudioSendConfig(const RtcEventAudioSendStreamConfig& original_event, const LoggedAudioSendConfig& logged_event)"
  },
  {
    "label": "VerifyLoggedVideoRecvConfig()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "VerifyLoggedVideoRecvConfig(const RtcEventVideoReceiveStreamConfig& original_event, const LoggedVideoRecvConfig& logged_event)"
  },
  {
    "label": "VerifyLoggedVideoSendConfig()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "VerifyLoggedVideoSendConfig(const RtcEventVideoSendStreamConfig& original_event, const LoggedVideoSendConfig& logged_event)"
  },
  {
    "label": "VerifyReportBlock()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "VerifyReportBlock(const rtcp::ReportBlock& original_report_block, const rtcp::ReportBlock& logged_report_block)"
  }
]