[
  {
    "label": "FMeshVertexChange",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMeshVertexChange"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FMeshVertexChangeBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMeshVertexChangeBuilder"
  },
  {
    "label": "UMeshVertexCommandChangeTarget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMeshVertexCommandChangeTarget"
  },
  {
    "label": "IMeshVertexCommandChangeTarget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IMeshVertexCommandChangeTarget"
  },
  {
    "label": "PREDECLARE_USE_GEOMETRY_CLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / Interface . h \" # include \" InteractiveToolChange . h \" # include \" VectorTypes . h \" # include \" MeshVertexChange . generated . h \")",
    "insertText": "PREDECLARE_USE_GEOMETRY_CLASS(FDynamicMesh3)"
  },
  {
    "label": "Apply()",
    "kind": "Method",
    "detail": "Function (class FMeshVertexChange : public FToolCommandChange { public : bool bHaveVertexPositions = true ; bool bHaveVertexColors = false ; TArray<int32> Vertices ; TArray<FVector3d> OldPositions ; TArray<FVector3d> NewPositions ; TArray<FVector3f> OldColors ; TArray<FVector3f> NewColors ; bool bHaveOverlayNormals = false ; TArray<int32> Normals ; TArray<FVector3f> OldNormals ; TArray<FVector3f> NewNormals ; bool bHaveOverlayUVs = false ; TArray<int32> UVs ; TArray<FVector2f> OldUVs ; TArray<FVector2f> NewUVs ; void)",
    "insertText": "Apply(UObject* Object)"
  },
  {
    "label": "Revert()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Revert(UObject* Object)"
  },
  {
    "label": "ToString()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "ToString()"
  },
  {
    "label": "ENUM_CLASS_FLAGS()",
    "kind": "Method",
    "detail": "Function (} ; enum class EMeshVertexChangeComponents : uint8 { None = 0,VertexPositions = 1,VertexColors = 2,OverylayUVs = 4,OverlayNormals = 1 6 } ;)",
    "insertText": "ENUM_CLASS_FLAGS(EMeshVertexChangeComponents)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (class FMeshVertexChangeBuilder { public : TUniquePtr<FMeshVertexChange> Change ; TMap<int32,int32> SavedVertices ; bool bSavePositions = true ; bool bSaveColors = false ; bool bSaveOverlayNormals = false ; TMap<int32,int32> SavedNormalElements ; bool bSaveOverlayUVs = false ; TMap<int32,int32> SavedUVElements ; TUniqueFunction<)",
    "insertText": "void(int32, int32)"
  },
  {
    "label": "FMeshVertexChangeBuilder()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FMeshVertexChangeBuilder()"
  },
  {
    "label": "FMeshVertexChangeBuilder()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FMeshVertexChangeBuilder(EMeshVertexChangeComponents Components)"
  },
  {
    "label": "SaveVertexInitial()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SaveVertexInitial(const FDynamicMesh3* Mesh, int32 VertexID)"
  },
  {
    "label": "SaveVertexFinal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SaveVertexFinal(const FDynamicMesh3* Mesh, int32 VertexID)"
  },
  {
    "label": "SaveVertices()",
    "kind": "Method",
    "detail": "Function (template<Enumerable> void)",
    "insertText": "SaveVertices(const FDynamicMesh3* Mesh, Enumerable Enum, bool bInitial)"
  },
  {
    "label": "SaveOverlayNormals()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SaveOverlayNormals(const FDynamicMesh3* Mesh, const TArray<int32>& ElementIDs, bool bInitial)"
  },
  {
    "label": "SaveOverlayNormals()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SaveOverlayNormals(const FDynamicMesh3* Mesh, const TSet<int32>& ElementIDs, bool bInitial)"
  },
  {
    "label": "SaveOverlayUVs()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SaveOverlayUVs(const FDynamicMesh3* Mesh, const TArray<int32>& ElementIDs, bool bInitial)"
  },
  {
    "label": "SaveOverlayUVs()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SaveOverlayUVs(const FDynamicMesh3* Mesh, const TSet<int32>& ElementIDs, bool bInitial)"
  },
  {
    "label": "UpdateVertex()",
    "kind": "Method",
    "detail": "Function (public : void)",
    "insertText": "UpdateVertex(int32 VertexID, const FVector3d& OldPosition, const FVector3d& NewPosition)"
  },
  {
    "label": "UpdateVertexColor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateVertexColor(int32 VertexID, const FVector3f& OldColor, const FVector3f& NewColor)"
  },
  {
    "label": "UpdateVertexFinal()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "UpdateVertexFinal(int32 VertexID, const FVector3d& NewPosition)"
  },
  {
    "label": "UpdateOverlayNormal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateOverlayNormal(int32 ElementID, const FVector3f& OldNormal, const FVector3f& NewNormal)"
  },
  {
    "label": "UpdateOverlayNormalFinal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateOverlayNormalFinal(int32 ElementID, const FVector3f& NewNormal)"
  },
  {
    "label": "UpdateOverlayUV()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateOverlayUV(int32 ElementID, const FVector2f& OldUV, const FVector2f& NewUV)"
  },
  {
    "label": "UpdateOverlayUVFinal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateOverlayUVFinal(int32 ElementID, const FVector2f& NewUV)"
  },
  {
    "label": "UINTERFACE()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "UINTERFACE(MinimalAPI)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY()"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (class IMeshVertexCommandChangeTarget {)",
    "insertText": "GENERATED_BODY() public: virtual void ApplyChange(const FMeshVertexChange* Change, bool bRevert)"
  },
  {
    "label": "SaveVertexInitial()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SaveVertexInitial(Mesh, k)"
  },
  {
    "label": "for()",
    "kind": "Method",
    "detail": "Function (} } else {)",
    "insertText": "for(int32 k : Enum)"
  },
  {
    "label": "SaveVertexFinal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SaveVertexFinal(Mesh, k)"
  }
]