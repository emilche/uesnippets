[
  {
    "label": "UClass",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UClass"
  },
  {
    "label": "UMovieSceneEntitySystemLinker",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieSceneEntitySystemLinker"
  },
  {
    "label": "UMovieSceneSection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieSceneSection"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "FFrameNumber",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFrameNumber"
  },
  {
    "label": "FMovieSceneEntityComponentFieldBuilder",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneEntityComponentFieldBuilder"
  },
  {
    "label": "FMovieSceneEvaluationFieldEntityMetaData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneEvaluationFieldEntityMetaData"
  },
  {
    "label": "FMovieSceneEvaluationFieldSharedEntityMetaData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneEvaluationFieldSharedEntityMetaData"
  },
  {
    "label": "FMovieSceneTimeTransform",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneTimeTransform"
  },
  {
    "label": "TRange",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TRange"
  },
  {
    "label": "FEntityManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEntityManager"
  },
  {
    "label": "FEntityImportParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FEntityImportParams"
  },
  {
    "label": "IEntityBuilder",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IEntityBuilder"
  },
  {
    "label": "FImportedEntity",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FImportedEntity"
  },
  {
    "label": "FEntityImportSequenceParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FEntityImportSequenceParams"
  },
  {
    "label": "UMovieSceneEntityProvider",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieSceneEntityProvider"
  },
  {
    "label": "IMovieSceneEntityProvider",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IMovieSceneEntityProvider"
  },
  {
    "label": "IsEmpty()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" Containers / ContainerAllocationPolicies . h \" # include \" Evaluation / MovieSceneSectionParameters . h \" # include \" EntitySystem / MovieSceneEntityBuilder . h \" # include \" EntitySystem / MovieSceneEntityIDs . h \" # include \" EntitySystem / MovieSceneEntitySystemTypes . h \" # include \" EntitySystem / MovieSceneSequenceInstanceHandle . h \" # include \" Evaluation / MovieSceneCompletionMode . h \" # include \" HAL / Platform . h \" # include \" Math / Range . h \" # include \" Misc / Guid . h \" # include \" Misc / InlineValue . h \" # include \" Templates / UnrealTemplate . h \" # include \" UObject / Interface . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / UObjectGlobals . h \" # include \" IMovieSceneEntityProvider . generated . h \" class UClass ; class UMovieSceneEntitySystemLinker ; class UMovieSceneSection ; class UObject ; struct FFrameNumber ; struct FMovieSceneEntityComponentFieldBuilder ; struct FMovieSceneEvaluationFieldEntityMetaData ; struct FMovieSceneEvaluationFieldSharedEntityMetaData ; struct FMovieSceneTimeTransform ; template<ElementType> class TRange ; namespace UE { namespace MovieScene { class FEntityManager ; struct FEntityImportParams ; struct IEntityBuilder ; struct FImportedEntity { bool)",
    "insertText": "IsEmpty()"
  },
  {
    "label": "AddBuilder()",
    "kind": "Method",
    "detail": "Function (} template<BuilderType> void)",
    "insertText": "AddBuilder(BuilderType&& InBuilder)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (Builders .)",
    "insertText": "Add(Forward<BuilderType>(InBuilder))"
  },
  {
    "label": "Manufacture()",
    "kind": "Method",
    "detail": "Function (} FMovieSceneEntityID)",
    "insertText": "Manufacture(const FEntityImportParams& Params, FEntityManager* EntityManager)"
  },
  {
    "label": "FEntityImportSequenceParams()",
    "kind": "Method",
    "detail": "Function (private : TArray<TInlineValue<IEntityBuilder>,TInlineAllocator<1>> Builders ; } ; struct FEntityImportSequenceParams {)",
    "insertText": "FEntityImportSequenceParams() : HierarchicalBias(0) , SequenceID(MovieSceneSequenceID::Root) , DefaultCompletionMode(EMovieSceneCompletionMode::KeepState) , SubSectionFlags(EMovieSceneSubSectionFlags::None) , bPreRoll(false) , bPostRoll(false) , bDynamicWeighting(false)"
  },
  {
    "label": "GetObjectBindingID()",
    "kind": "Method",
    "detail": "Function (} int32 HierarchicalBias ; FMovieSceneSequenceID SequenceID ; FInstanceHandle InstanceHandle ; FRootInstanceHandle RootInstanceHandle ; EMovieSceneCompletionMode DefaultCompletionMode ; EMovieSceneSubSectionFlags SubSectionFlags ; bool bPreRoll : 1 ; bool bPostRoll : 1 ; bool bDynamicWeighting : 1 ; } ; struct FEntityImportParams { const FMovieSceneEvaluationFieldEntityMetaData* EntityMetaData = nullptr ; const FMovieSceneEvaluationFieldSharedEntityMetaData* SharedMetaData = nullptr ; uint32 EntityID = 0 ; FInterrogationKey InterrogationKey ; FInterrogationInstance InterrogationInstance ; FEntityImportSequenceParams Sequence ; FGuid)",
    "insertText": "GetObjectBindingID()"
  },
  {
    "label": "UINTERFACE()",
    "kind": "Method",
    "detail": "Function (} ; } })",
    "insertText": "UINTERFACE(MinimalAPI)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "GENERATED_BODY()"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (class IMovieSceneEntityProvider { public : using FEntityImportParams = UE::MovieScene::FEntityImportParams ; using FImportedEntity = UE::MovieScene::FImportedEntity ;)",
    "insertText": "GENERATED_BODY() bool PopulateEvaluationField(const TRange<FFrameNumber>& EffectiveRange, const FMovieSceneEvaluationFieldEntityMetaData& InMetaData, FMovieSceneEntityComponentFieldBuilder* OutFieldBuilder)"
  },
  {
    "label": "ImportEntity()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "ImportEntity(UMovieSceneEntitySystemLinker* EntityLinker, const FEntityImportParams& Params, FImportedEntity* OutImportedEntity)"
  },
  {
    "label": "InterrogateEntity()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InterrogateEntity(UMovieSceneEntitySystemLinker* EntityLinker, const FEntityImportParams& Params, FImportedEntity* OutImportedEntity)"
  },
  {
    "label": "ImportEntityImpl()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "ImportEntityImpl(UMovieSceneEntitySystemLinker* EntityLinker, const FEntityImportParams& Params, FImportedEntity* OutImportedEntity)"
  },
  {
    "label": "InterrogateEntityImpl()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InterrogateEntityImpl(UMovieSceneEntitySystemLinker* EntityLinker, const FEntityImportParams& Params, FImportedEntity* OutImportedEntity)"
  },
  {
    "label": "ImportEntityImpl()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ImportEntityImpl(EntityLinker, Params, OutImportedEntity)"
  },
  {
    "label": "PopulateEvaluationFieldImpl()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "PopulateEvaluationFieldImpl(const TRange<FFrameNumber>& EffectiveRange, const FMovieSceneEvaluationFieldEntityMetaData& InMetaData, FMovieSceneEntityComponentFieldBuilder* OutFieldBuilder)"
  }
]