[
  {
    "label": "DispatcherEvent",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "DispatcherEvent"
  },
  {
    "label": "Signaler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Signaler"
  },
  {
    "label": "Dispatcher",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Dispatcher"
  },
  {
    "label": "RTC_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RTC_EXPORT"
  },
  {
    "label": "PhysicalSocket",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PhysicalSocket"
  },
  {
    "label": "sockaddr",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "sockaddr"
  },
  {
    "label": "SocketDispatcher",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SocketDispatcher"
  },
  {
    "label": "PhysicalSocketServer()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "PhysicalSocketServer()"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Add(Dispatcher* dispatcher)"
  },
  {
    "label": "Remove()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Remove(Dispatcher* dispatcher)"
  },
  {
    "label": "Update()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Update(Dispatcher* dispatcher)"
  },
  {
    "label": "ToCmsWait()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ToCmsWait(webrtc::TimeDelta max_wait_duration)"
  },
  {
    "label": "WaitSelect()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "WaitSelect(int cmsWait, bool process_io)"
  },
  {
    "label": "AddEpoll()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddEpoll(Dispatcher* dispatcher, uint64_t key)"
  },
  {
    "label": "RemoveEpoll()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveEpoll(Dispatcher* dispatcher)"
  },
  {
    "label": "UpdateEpoll()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateEpoll(Dispatcher* dispatcher, uint64_t key)"
  },
  {
    "label": "WaitEpoll()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "WaitEpoll(int cmsWait)"
  },
  {
    "label": "WaitPoll()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "WaitPoll(int cmsWait, Dispatcher* dispatcher)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (dispatcher_by_key_)",
    "insertText": "RTC_GUARDED_BY(crit_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (key_by_dispatcher_)",
    "insertText": "RTC_GUARDED_BY(crit_)"
  },
  {
    "label": "PhysicalSocket()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "PhysicalSocket(PhysicalSocketServer* ss, SOCKET s = INVALID_SOCKET)"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Create(int family, int type)"
  },
  {
    "label": "DoConnect()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "DoConnect(const SocketAddress& connect_addr)"
  },
  {
    "label": "DoAccept()",
    "kind": "Method",
    "detail": "Function (SOCKET)",
    "insertText": "DoAccept(SOCKET socket, sockaddr* addr, socklen_t* addrlen)"
  },
  {
    "label": "DoSend()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "DoSend(SOCKET socket, const char* buf, int len, int flags)"
  },
  {
    "label": "DoSendTo()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "DoSendTo(SOCKET socket,\n                       const char* buf,\n                       int len,\n                       int flags,\n                       const struct sockaddr* dest_addr,\n                       socklen_t addrlen)"
  },
  {
    "label": "DoReadFromSocket()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "DoReadFromSocket(void* buffer,\n                       size_t length,\n                       SocketAddress* out_addr,\n                       int64_t* timestamp)"
  },
  {
    "label": "OnResolveResult()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnResolveResult(AsyncResolverInterface* resolver)"
  },
  {
    "label": "UpdateLastError()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateLastError()"
  },
  {
    "label": "MaybeRemapSendError()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MaybeRemapSendError()"
  },
  {
    "label": "SetEnabledEvents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetEnabledEvents(uint8_t events)"
  },
  {
    "label": "EnableEvents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnableEvents(uint8_t events)"
  },
  {
    "label": "DisableEvents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DisableEvents(uint8_t events)"
  },
  {
    "label": "TranslateOption()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "TranslateOption(Option opt, int* slevel, int* sopt)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (error_)",
    "insertText": "RTC_GUARDED_BY(mutex_)"
  },
  {
    "label": "SocketDispatcher()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "SocketDispatcher(PhysicalSocketServer* ss)"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Initialize()"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Create(int type)"
  },
  {
    "label": "StartBatchedEventUpdates()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StartBatchedEventUpdates()"
  },
  {
    "label": "FinishBatchedEventUpdates()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FinishBatchedEventUpdates()"
  },
  {
    "label": "MaybeUpdateDispatcher()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MaybeUpdateDispatcher(uint8_t old_events)"
  }
]