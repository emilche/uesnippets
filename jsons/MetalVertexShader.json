[
  {
    "label": "FMetalVertexShader",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMetalVertexShader"
  },
  {
    "label": "FMetalVertexShader()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" MetalRHIPrivate . h \" # include \" Shaders / Types / Templates / MetalBaseShader . h \" # pragma mark - Metal RHI Vertex Shader Class class FMetalVertexShader : public TMetalBaseShader<FRHIVertexShader,SF_Vertex> { public :)",
    "insertText": "FMetalVertexShader(FMetalDevice& Device, TArrayView<const uint8> InCode)"
  },
  {
    "label": "FMetalVertexShader()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FMetalVertexShader(FMetalDevice& Device, TArrayView<const uint8> InCode, MTLLibraryPtr InLibrary)"
  },
  {
    "label": "GetFunction()",
    "kind": "Method",
    "detail": "Function (MTLFunctionPtr)",
    "insertText": "GetFunction()"
  },
  {
    "label": "GetObjectFunctionForGeometryEmulation()",
    "kind": "Method",
    "detail": "Function (# if PLATFORM_SUPPORTS_GEOMETRY_SHADERS MTLFunctionPtr)",
    "insertText": "GetObjectFunctionForGeometryEmulation()"
  }
]