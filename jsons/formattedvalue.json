[
  {
    "label": "U_I18N_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "U_I18N_API"
  },
  {
    "label": "ConstrainedFieldPosition()",
    "kind": "Method",
    "detail": "Function (# ifndef __FORMATTEDVALUE_H__ # define __FORMATTEDVALUE_H__ # include \" unicode / utypes . h \" # if ! UCONFIG_NO_FORMATTING # ifndef # include \" unicode / appendable . h \" # include \" unicode / fpositer . h \" # include \" unicode / unistr . h \" # include \" unicode / uformattedvalue . h \" U_NAMESPACE_BEGIN class U_I18N_API ConstrainedFieldPosition : public UMemory { public :)",
    "insertText": "ConstrainedFieldPosition()"
  },
  {
    "label": "reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "reset()"
  },
  {
    "label": "constrainCategory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "constrainCategory(int32_t category)"
  },
  {
    "label": "constrainField()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "constrainField(int32_t category, int32_t field)"
  },
  {
    "label": "getCategory()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "getCategory()"
  },
  {
    "label": "matchesField()",
    "kind": "Method",
    "detail": "Function (UBool)",
    "insertText": "matchesField(int32_t category, int32_t field)"
  },
  {
    "label": "setState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setState(int32_t category, int32_t field, int32_t start, int32_t limit)"
  },
  {
    "label": "FormattedValue()",
    "kind": "Method",
    "detail": "Function (private : int64_t fContext = 0 LL ; int32_t fField = 0 ; int32_t fStart = 0 ; int32_t fLimit = 0 ; int32_t fCategory = UFIELD_CATEGORY_UNDEFINED ; int8_t fConstraint = 0 ; } ; class U_I18N_API FormattedValue { public : ~)",
    "insertText": "FormattedValue()"
  },
  {
    "label": "toString()",
    "kind": "Method",
    "detail": "Function (UnicodeString)",
    "insertText": "toString(UErrorCode& status)"
  },
  {
    "label": "toTempString()",
    "kind": "Method",
    "detail": "Function (UnicodeString)",
    "insertText": "toTempString(UErrorCode& status)"
  },
  {
    "label": "appendTo()",
    "kind": "Method",
    "detail": "Function (Appendable&)",
    "insertText": "appendTo(Appendable& appendable, UErrorCode& status)"
  },
  {
    "label": "nextPosition()",
    "kind": "Method",
    "detail": "Function (UBool)",
    "insertText": "nextPosition(ConstrainedFieldPosition& cfpos, UErrorCode& status)"
  }
]