[
  {
    "label": "CoordinatorCreateInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "CoordinatorCreateInfo"
  },
  {
    "label": "Coordinator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Coordinator"
  },
  {
    "label": "bool()",
    "kind": "Method",
    "detail": "Function (# include \" UbaBase . h \" namespace uba { struct CoordinatorCreateInfo { const tchar* workDir = nullptr ; const tchar* binariesDir = nullptr ; const tchar* pool = nullptr ; u32 maxCoreCount = 0 ; bool logging = false ; } ; class Coordinator { public : using AddClientCallback =)",
    "insertText": "bool(void* userData, const tchar* ip, u16 port)"
  },
  {
    "label": "SetAddClientCallback()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAddClientCallback(AddClientCallback* callback, void* userData)"
  },
  {
    "label": "SetTargetCoreCount()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTargetCoreCount(u32 count)"
  },
  {
    "label": "Coordinator()",
    "kind": "Method",
    "detail": "Function (} ; using UbaCreateCoordinatorFunc =)",
    "insertText": "Coordinator(const CoordinatorCreateInfo& info)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (using UbaDestroyCoordinatorFunc =)",
    "insertText": "void(Coordinator* coordinator)"
  }
]