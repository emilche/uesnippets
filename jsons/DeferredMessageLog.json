[
  {
    "label": "Error",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Error"
  },
  {
    "label": "FText",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FText"
  },
  {
    "label": "FTokenizedMessage",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTokenizedMessage"
  },
  {
    "label": "FDeferredMessageLog",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDeferredMessageLog"
  },
  {
    "label": "AddMessage()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" Containers / Map . h \" # include \" CoreMinimal . h \" # include \" HAL / CriticalSection . h \" # include \" Templates / SharedPointer . h \" # include \" UObject / NameTypes . h \" class Error ; class FText ; class FTokenizedMessage ; class FDeferredMessageLog { FName LogCategory ; TMap<FName,TArray<TSharedRef<FTokenizedMessage>>*> Messages ; FCriticalSection MessagesCritical ; void)",
    "insertText": "AddMessage(TSharedRef<FTokenizedMessage>& Message)"
  },
  {
    "label": "FDeferredMessageLog()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "FDeferredMessageLog(const FName& InLogCategory)"
  },
  {
    "label": "Info()",
    "kind": "Method",
    "detail": "Function (TSharedRef<FTokenizedMessage>)",
    "insertText": "Info(const FText& Message)"
  },
  {
    "label": "Warning()",
    "kind": "Method",
    "detail": "Function (TSharedRef<FTokenizedMessage>)",
    "insertText": "Warning(const FText& Message)"
  },
  {
    "label": "Error()",
    "kind": "Method",
    "detail": "Function (TSharedRef<FTokenizedMessage>)",
    "insertText": "Error(const FText& Message)"
  },
  {
    "label": "Flush()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Flush()"
  },
  {
    "label": "Cleanup()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Cleanup()"
  }
]