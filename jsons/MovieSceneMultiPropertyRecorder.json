[
  {
    "label": "FProperty",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FProperty"
  },
  {
    "label": "FGuid",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGuid"
  },
  {
    "label": "FMovieSceneMultiPropertyRecorderFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMovieSceneMultiPropertyRecorderFactory"
  },
  {
    "label": "FActorRecordingSettings",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FActorRecordingSettings"
  },
  {
    "label": "FMovieSceneMultiPropertyRecorder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMovieSceneMultiPropertyRecorder"
  },
  {
    "label": "UMovieScene",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieScene"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "IMovieScenePropertyRecorder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IMovieScenePropertyRecorder"
  },
  {
    "label": "FMovieSceneMultiPropertyRecorderFactory()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" IMovieSceneSectionRecorder . h \" # include \" IMovieSceneSectionRecorderFactory . h \" # include \" Templates / SharedPointer . h \" # include \" UObject / LazyObjectPtr . h \" # include \" UObject / Object . h \" class FProperty ; struct FGuid ; class FMovieSceneMultiPropertyRecorderFactory : public IMovieSceneSectionRecorderFactory { public : ~)",
    "insertText": "FMovieSceneMultiPropertyRecorderFactory()"
  },
  {
    "label": "CreateSectionRecorder()",
    "kind": "Method",
    "detail": "Function (} TSharedPtr<IMovieSceneSectionRecorder>)",
    "insertText": "CreateSectionRecorder(const struct FActorRecordingSettings& InActorRecordingSettings)"
  },
  {
    "label": "CanRecordObject()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanRecordObject(UObject* InObjectToRecord)"
  },
  {
    "label": "FMovieSceneMultiPropertyRecorder()",
    "kind": "Method",
    "detail": "Function (} ; class FMovieSceneMultiPropertyRecorder : public IMovieSceneSectionRecorder { public :)",
    "insertText": "FMovieSceneMultiPropertyRecorder()"
  },
  {
    "label": "CreateSection()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "CreateSection(UObject* InObjectToRecord, class UMovieScene* InMovieScene, const FGuid& Guid, float Time)"
  },
  {
    "label": "FinalizeSection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FinalizeSection(float CurrentTime)"
  },
  {
    "label": "Record()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Record(float CurrentTime)"
  },
  {
    "label": "InvalidateObjectToRecord()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InvalidateObjectToRecord()"
  },
  {
    "label": "GetSourceObject()",
    "kind": "Method",
    "detail": "Function (ObjectToRecord = nullptr ; } UObject*)",
    "insertText": "GetSourceObject()"
  },
  {
    "label": "CanPropertyBeRecorded()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "CanPropertyBeRecorded(const FProperty& InProperty)"
  }
]