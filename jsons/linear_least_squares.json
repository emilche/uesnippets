[
  {
    "label": "IncrementalLinearLeastSquares",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IncrementalLinearLeastSquares"
  },
  {
    "label": "IncrementalLinearLeastSquares()",
    "kind": "Method",
    "detail": "Function (# ifndef RTC_TOOLS_FRAME_ANALYZER_LINEAR_LEAST_SQUARES_H_ # define RTC_TOOLS_FRAME_ANALYZER_LINEAR_LEAST_SQUARES_H_ # include<stdint . h> # include<valarray> # include<vector> # include \" absl / types / optional . h \" namespace webrtc { namespace test { class IncrementalLinearLeastSquares { public :)",
    "insertText": "IncrementalLinearLeastSquares()"
  },
  {
    "label": "AddObservations()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddObservations(const std::vector<std::vector<uint8_t>>& x, const std::vector<std::vector<uint8_t>>& y)"
  },
  {
    "label": "GetBestSolution()",
    "kind": "Method",
    "detail": "Function (std::vector<std::vector<double>>)",
    "insertText": "GetBestSolution()"
  }
]