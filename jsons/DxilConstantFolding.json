[
  {
    "label": "Constant",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Constant"
  },
  {
    "label": "Function",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Function"
  },
  {
    "label": "Type",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Type"
  },
  {
    "label": "ArrayRef",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ArrayRef"
  },
  {
    "label": "ConstantFoldScalarCall()",
    "kind": "Method",
    "detail": "Function (# ifndef LLVM_ANALYSIS_HLSLCONSTANTFOLDING_H # define LLVM_ANALYSIS_HLSLCONSTANTFOLDING_H # include \" llvm / ADT / StringRef . h \" namespace llvm { class Constant ; class Function ; class Type ; template<T> class ArrayRef ; } namespace hlsl { llvm::Constant*)",
    "insertText": "ConstantFoldScalarCall(llvm::StringRef Name, llvm::Type *Ty, llvm::ArrayRef<llvm::Constant *> Operands)"
  },
  {
    "label": "ConstantFoldScalarCallExt()",
    "kind": "Method",
    "detail": "Function (llvm::Constant*)",
    "insertText": "ConstantFoldScalarCallExt(llvm::StringRef Name, llvm::Type *Ty, llvm::ArrayRef<llvm::Constant *> Operands)"
  },
  {
    "label": "CanConstantFoldCallTo()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanConstantFoldCallTo(const llvm::Function *F)"
  },
  {
    "label": "CanConstantFoldCallToExt()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanConstantFoldCallToExt(const llvm::Function *F)"
  }
]