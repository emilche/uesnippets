[
  {
    "label": "decrement_size",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "decrement_size"
  },
  {
    "label": "makeHouseholderInPlace()",
    "kind": "Method",
    "detail": "Function (# ifndef EIGEN_HOUSEHOLDER_H # define EIGEN_HOUSEHOLDER_H namespace Eigen { namespace internal { template<int n> struct decrement_size { enum { ret = n = = Dynamic ? n : n - 1 } ; } ; } template<Derived> EIGEN_DEVICE_FUNC void MatrixBase<Derived)",
    "insertText": "makeHouseholderInPlace(Scalar& tau, RealScalar& beta)"
  },
  {
    "label": "essentialPart()",
    "kind": "Method",
    "detail": "Function (VectorBlock<Derived,internal::decrement_size<Base::SizeAtCompileTime>::ret>)",
    "insertText": "essentialPart(derived(), 1, size()-1)"
  },
  {
    "label": "makeHouseholder()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "makeHouseholder(essentialPart, tau, beta)"
  },
  {
    "label": "makeHouseholder()",
    "kind": "Method",
    "detail": "Function (} template<Derived> template<EssentialPart> EIGEN_DEVICE_FUNC void MatrixBase<Derived)",
    "insertText": "makeHouseholder(EssentialPart& essential, Scalar& tau, RealScalar& beta)"
  },
  {
    "label": "EIGEN_STATIC_ASSERT_VECTOR_ONLY()",
    "kind": "Method",
    "detail": "Function (using std::sqrt ; using numext::conj ;)",
    "insertText": "EIGEN_STATIC_ASSERT_VECTOR_ONLY(EssentialPart) VectorBlock<const Derived, EssentialPart::SizeAtCompileTime> tail(derived(), 1, size()-1)"
  },
  {
    "label": "size()",
    "kind": "Method",
    "detail": "Function (RealScalar tailSqNorm =)",
    "insertText": "size()==1 ? RealScalar(0) : tail.squaredNorm()"
  },
  {
    "label": "coeff()",
    "kind": "Method",
    "detail": "Function (Scalar c0 =)",
    "insertText": "coeff(0)"
  },
  {
    "label": "tol()",
    "kind": "Method",
    "detail": "Function (const RealScalar)",
    "insertText": "tol(std::numeric_limits<RealScalar>::min)()"
  },
  {
    "label": "RealScalar()",
    "kind": "Method",
    "detail": "Function (tau =)",
    "insertText": "RealScalar(0)"
  },
  {
    "label": "real()",
    "kind": "Method",
    "detail": "Function (beta =)",
    "insertText": "real(c0)"
  },
  {
    "label": "setZero()",
    "kind": "Method",
    "detail": "Function (essential .)",
    "insertText": "setZero()"
  },
  {
    "label": "sqrt()",
    "kind": "Method",
    "detail": "Function (} else { beta =)",
    "insertText": "sqrt(numext::abs2(c0) + tailSqNorm)"
  },
  {
    "label": "tail()",
    "kind": "Method",
    "detail": "Function (essential =)",
    "insertText": "tail(c0 - beta)"
  },
  {
    "label": "conj()",
    "kind": "Method",
    "detail": "Function (tau =)",
    "insertText": "conj((beta - c0) / beta)"
  },
  {
    "label": "applyHouseholderOnTheLeft()",
    "kind": "Method",
    "detail": "Function (} } template<Derived> template<EssentialPart> EIGEN_DEVICE_FUNC void MatrixBase<Derived)",
    "insertText": "applyHouseholderOnTheLeft(const EssentialPart& essential, const Scalar& tau, Scalar* workspace)"
  },
  {
    "label": "Scalar()",
    "kind": "Method",
    "detail": "Function (* this* =)",
    "insertText": "Scalar(1)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (} else)",
    "insertText": "if(tau!=Scalar(0))"
  },
  {
    "label": "tmp()",
    "kind": "Method",
    "detail": "Function (Map<internal::plain_row_type<PlainObject>::type>)",
    "insertText": "tmp(workspace,cols())"
  },
  {
    "label": "bottom()",
    "kind": "Method",
    "detail": "Function (Block<Derived,EssentialPart::SizeAtCompileTime,Derived::ColsAtCompileTime>)",
    "insertText": "bottom(derived(), 1, 0, rows()-1, cols())"
  },
  {
    "label": "noalias()",
    "kind": "Method",
    "detail": "Function (tmp .)",
    "insertText": "noalias() = essential.adjoint()"
  },
  {
    "label": "row()",
    "kind": "Method",
    "detail": "Function (tmp + = this ->)",
    "insertText": "row(0)"
  },
  {
    "label": "noalias()",
    "kind": "Method",
    "detail": "Function (bottom .)",
    "insertText": "noalias()"
  },
  {
    "label": "applyHouseholderOnTheRight()",
    "kind": "Method",
    "detail": "Function (} } template<Derived> template<EssentialPart> EIGEN_DEVICE_FUNC void MatrixBase<Derived)",
    "insertText": "applyHouseholderOnTheRight(const EssentialPart& essential, const Scalar& tau, Scalar* workspace)"
  },
  {
    "label": "tmp()",
    "kind": "Method",
    "detail": "Function (Map<internal::plain_col_type<PlainObject>::type>)",
    "insertText": "tmp(workspace,rows())"
  },
  {
    "label": "right()",
    "kind": "Method",
    "detail": "Function (Block<Derived,Derived::RowsAtCompileTime,EssentialPart::SizeAtCompileTime>)",
    "insertText": "right(derived(), 0, 1, rows(), cols()-1)"
  },
  {
    "label": "col()",
    "kind": "Method",
    "detail": "Function (tmp + = this ->)",
    "insertText": "col(0)"
  },
  {
    "label": "noalias()",
    "kind": "Method",
    "detail": "Function (right .)",
    "insertText": "noalias() -= tau * tmp * essential.adjoint()"
  }
]