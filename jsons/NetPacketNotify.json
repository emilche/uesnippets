[
  {
    "label": "FBitWriter",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBitWriter"
  },
  {
    "label": "FBitReader",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBitReader"
  },
  {
    "label": "FNetPacketNotifyTestUtil",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FNetPacketNotifyTestUtil"
  },
  {
    "label": "FNetPacketNotify",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNetPacketNotify"
  },
  {
    "label": "FNotificationHeader",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FNotificationHeader"
  },
  {
    "label": "Functor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Functor"
  },
  {
    "label": "FSentAckData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSentAckData"
  },
  {
    "label": "Functor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Functor"
  },
  {
    "label": "Functor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Functor"
  },
  {
    "label": "Functor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Functor"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Init(SequenceNumberT InitialInSeq, SequenceNumberT InitialOutSeq)"
  },
  {
    "label": "CommitAndIncrementOutSeq()",
    "kind": "Method",
    "detail": "Function (SequenceNumberT)",
    "insertText": "CommitAndIncrementOutSeq()"
  },
  {
    "label": "WriteHeader()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "WriteHeader(FBitWriter& Writer, bool bRefresh = false)"
  },
  {
    "label": "Update()",
    "kind": "Method",
    "detail": "Function (SequenceNumberT::DifferenceT)",
    "insertText": "Update(const FNotificationHeader& NotificationData, Functor&& InFunc)"
  },
  {
    "label": "UpdateInAckSeqAck()",
    "kind": "Method",
    "detail": "Function (SequenceNumberT)",
    "insertText": "UpdateInAckSeqAck(SequenceNumberT::DifferenceT AckCount, SequenceNumberT AckedSeq)"
  },
  {
    "label": "InternalUpdate()",
    "kind": "Method",
    "detail": "Function (SequenceNumberT::DifferenceT)",
    "insertText": "InternalUpdate(const FNotificationHeader& NotificationData, SequenceNumberT::DifferenceT InSeqDelta)"
  },
  {
    "label": "SetWaitForSequenceHistoryFlush()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetWaitForSequenceHistoryFlush()"
  },
  {
    "label": "ProcessReceivedAcks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessReceivedAcks(const FNotificationHeader& NotificationData, Functor&& InFunc)"
  },
  {
    "label": "AckSeq()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AckSeq(SequenceNumberT AckedSeq, bool IsAck)"
  },
  {
    "label": "InternalUpdate()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "InternalUpdate(NotificationData, InSeqDelta)"
  },
  {
    "label": "CurrentAck()",
    "kind": "Method",
    "detail": "Function (SequenceNumberT)",
    "insertText": "CurrentAck(OutAckSeq)"
  }
]