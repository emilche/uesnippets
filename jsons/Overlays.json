[
  {
    "label": "FOverlayItem",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FOverlayItem"
  },
  {
    "label": "UOverlays",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UOverlays"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / UnrealString . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / Object . h \" # include \" Math / Vector2D . h \" # include \" Misc / Timespan . h \" # include \" Overlays . generated . h \")",
    "insertText": "USTRUCT(BlueprintType)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() FOverlayItem() : StartTime(0) , EndTime(0) , Position(0.0f, 0.0f)"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "UCLASS(Abstract, MinimalAPI)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: OVERLAY_API virtual TArray<FOverlayItem> GetAllOverlays() const PURE_VIRTUAL(UOverlays::GetAllOverlays, return TArray<FOverlayItem>();)"
  },
  {
    "label": "GetOverlaysForTime()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetOverlaysForTime(const FTimespan& Time, TArray<FOverlayItem>& OutOverlays) const PURE_VIRTUAL(UOverlays::GetAllOverlays, return;)"
  }
]