[
  {
    "label": "TFunctionRef",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TFunctionRef"
  },
  {
    "label": "TVector",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TVector"
  },
  {
    "label": "EDiTO",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EDiTO"
  },
  {
    "label": "ComputeOrientedBBox()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" CoreMinimal . h \" # include \" HAL / Platform . h \" # include \" Math / Vector . h \" # include \" OrientedBoxTypes . h \" # include \" VectorTypes . h \" template<FuncType> class TFunctionRef ; namespace UE { namespace Math { template<T> struct TVector ; } namespace Geometry { enum EDiTO { DiTO_12 = 0,DiTO_14 = 1,DiTO_20 = 2,DiTO_26 = 3 } ; template<RealType> TOrientedBox3<RealType>)",
    "insertText": "ComputeOrientedBBox(const EDiTO DiTO_K, const int32 NumPoints, TFunctionRef<UE::Math::TVector<RealType>(int32)> GetPointFunc)"
  },
  {
    "label": "ComputeOrientedBBox()",
    "kind": "Method",
    "detail": "Function (template<RealType> TOrientedBox3<RealType>)",
    "insertText": "ComputeOrientedBBox(const TArray<TVector<RealType>>& SampleDirections, const int32 NumPoints, TFunctionRef<UE::Math::TVector<RealType>(int32)> GetPointFunc)"
  }
]