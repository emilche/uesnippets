[
  {
    "label": "FClassLookupReflectionDataProvider",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FClassLookupReflectionDataProvider"
  },
  {
    "label": "HasClassDisplayName()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Templates / NonNullPointer . h \" # include \" Widgets / IReflectionDataProvider . h \" namespace UE::UndoHistory { class FClassLookupReflectionDataProvider : public IReflectionDataProvider { public : bool)",
    "insertText": "HasClassDisplayName(const FSoftClassPath& ClassPath)"
  },
  {
    "label": "GetClassDisplayName()",
    "kind": "Method",
    "detail": "Function (TOptional<FString>)",
    "insertText": "GetClassDisplayName(const FSoftClassPath& ClassPath)"
  },
  {
    "label": "SupportsGetPropertyReflectionData()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SupportsGetPropertyReflectionData()"
  },
  {
    "label": "LookUpClass()",
    "kind": "Method",
    "detail": "Function (private : TOptional<TNonNullPtr<UClass>>)",
    "insertText": "LookUpClass(const FSoftClassPath& ClassPath)"
  },
  {
    "label": "LookUpProperty()",
    "kind": "Method",
    "detail": "Function (TOptional<TNonNullPtr<FProperty>>)",
    "insertText": "LookUpProperty(const FSoftClassPath& ClassPath, FName PropertyName)"
  },
  {
    "label": "GetPropertyType()",
    "kind": "Method",
    "detail": "Function (EPropertyType)",
    "insertText": "GetPropertyType(const FProperty& Property)"
  }
]