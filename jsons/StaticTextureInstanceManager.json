[
  {
    "label": "FStaticRenderAssetInstanceManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStaticRenderAssetInstanceManager"
  },
  {
    "label": "FTasks",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTasks"
  },
  {
    "label": "FStaticRenderAssetInstanceManager()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Streaming / TextureInstanceManager . h \" # include \" Streaming / TextureInstanceTask . h \" class FStaticRenderAssetInstanceManager : public IRenderAssetInstanceManager { public :)",
    "insertText": "FStaticRenderAssetInstanceManager(RenderAssetInstanceTask::FDoWorkTask& AsyncTask)"
  },
  {
    "label": "FStaticRenderAssetInstanceManager()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FStaticRenderAssetInstanceManager()"
  },
  {
    "label": "Sync()",
    "kind": "Method",
    "detail": "Function (StateSync .)",
    "insertText": "Sync()"
  },
  {
    "label": "NormalizeLightmapTexelFactor()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "NormalizeLightmapTexelFactor()"
  },
  {
    "label": "CheckRegistrationAndUnpackBounds()",
    "kind": "Method",
    "detail": "Function (} int32)",
    "insertText": "CheckRegistrationAndUnpackBounds(TArray<const UPrimitiveComponent*>& RemovedComponents)"
  },
  {
    "label": "GetRenderAssetIterator()",
    "kind": "Method",
    "detail": "Function (} FRenderAssetInstanceState::FRenderAssetIterator)",
    "insertText": "GetRenderAssetIterator()"
  },
  {
    "label": "HasRenderAssetReferences()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "HasRenderAssetReferences()"
  },
  {
    "label": "IsReferenced()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsReferenced(const UPrimitiveComponent* Component)"
  },
  {
    "label": "GetReferencedComponents()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "GetReferencedComponents(TArray<const UPrimitiveComponent*>& Components)"
  },
  {
    "label": "GetState()",
    "kind": "Method",
    "detail": "Function (StateSync .)",
    "insertText": "GetState()->GetReferencedComponents(Components)"
  },
  {
    "label": "CanManage()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "CanManage(const UPrimitiveComponent* Component)"
  },
  {
    "label": "Refresh()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Refresh(float Percentage)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (EAddComponentResult)",
    "insertText": "Add(const UPrimitiveComponent* Component, FStreamingTextureLevelContext& LevelContext, float MaxAllowedUIDensity)"
  },
  {
    "label": "Remove()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Remove(const UPrimitiveComponent* Component, FRemovedRenderAssetArray* RemovedRenderAssets)"
  },
  {
    "label": "GetAsyncView()",
    "kind": "Method",
    "detail": "Function (} const FRenderAssetInstanceView*)",
    "insertText": "GetAsyncView(bool bCreateIfNull)"
  },
  {
    "label": "GetAllocatedSize()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetAllocatedSize()"
  },
  {
    "label": "OffsetBounds()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OffsetBounds(const FVector& Offset)"
  },
  {
    "label": "OnRefreshVisibilityDone()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "OnRefreshVisibilityDone(int32 InBeginIndex, int32 InEndIndex)"
  },
  {
    "label": "FTasks()",
    "kind": "Method",
    "detail": "Function (private : typedef RenderAssetInstanceTask::FRefreshVisibilityTask FRefreshVisibilityTask ; typedef RenderAssetInstanceTask::FNormalizeLightmapTexelFactorTask FNormalizeLightmapTexelFactorTask ; struct FTasks { ~)",
    "insertText": "FTasks()"
  },
  {
    "label": "SyncResults()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SyncResults()"
  }
]