[
  {
    "label": "FPaintArgs",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPaintArgs"
  },
  {
    "label": "FSlateWindowElementList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateWindowElementList"
  },
  {
    "label": "UCurveFloat",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UCurveFloat"
  },
  {
    "label": "SRadialSlider",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SRadialSlider"
  },
  {
    "label": "SRadialSlider()",
    "kind": "Method",
    "detail": "Function (ADVANCEDWIDGETS_API)",
    "insertText": "SRadialSlider()"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct( const SRadialSlider::FArguments& InDeclaration )"
  },
  {
    "label": "SetValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetValue(const TAttribute<float>& InValueAttribute)"
  },
  {
    "label": "SetUseCustomDefaultValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetUseCustomDefaultValue(const TAttribute<bool>& InValueAttribute)"
  },
  {
    "label": "SetCustomDefaultValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCustomDefaultValue(const TAttribute<float>& InValueAttribute)"
  },
  {
    "label": "SetSliderHandleStartAngleAndSliderHandleEndAngle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSliderHandleStartAngleAndSliderHandleEndAngle(float InSliderHandleStartAngle, float InSliderHandleEndAngle)"
  },
  {
    "label": "SetHandStartEndRatio()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetHandStartEndRatio(FVector2D InHandStartEndRatio)"
  },
  {
    "label": "SetLocked()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetLocked(const TAttribute<bool>& InLocked)"
  },
  {
    "label": "SetSliderBarColor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSliderBarColor(FSlateColor InSliderBarColor)"
  },
  {
    "label": "SetSliderProgressColor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSliderProgressColor(FSlateColor InSliderProgressColor)"
  },
  {
    "label": "SetSliderHandleColor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSliderHandleColor(FSlateColor InSliderHandleColor)"
  },
  {
    "label": "SetCenterBackgroundColor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCenterBackgroundColor(FSlateColor InCenterHandleColor)"
  },
  {
    "label": "SetThickness()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetThickness(const float InThickness)"
  },
  {
    "label": "SetStepSize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetStepSize(const TAttribute<float>& InStepSize)"
  },
  {
    "label": "SetMouseUsesStep()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetMouseUsesStep(bool MouseUsesStep)"
  },
  {
    "label": "SetRequiresControllerLock()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRequiresControllerLock(bool RequiresControllerLock)"
  },
  {
    "label": "SetUseVerticalDrag()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetUseVerticalDrag(bool UseVerticalDrag)"
  },
  {
    "label": "SetShowSliderHandle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetShowSliderHandle(bool ShowSliderHandle)"
  },
  {
    "label": "SetShowSliderHand()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetShowSliderHand(bool ShowSliderHand)"
  },
  {
    "label": "CommitValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CommitValue(float NewValue)"
  },
  {
    "label": "PositionToValue()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "PositionToValue(const FGeometry& MyGeometry, const FVector2D& AbsolutePosition)"
  },
  {
    "label": "ResetControllerState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetControllerState()"
  },
  {
    "label": "GetAngleFromPosition()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetAngleFromPosition(const FGeometry& MyGeometry, const FVector2D& AbsolutePosition)"
  },
  {
    "label": "OnInputStarted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnInputStarted(const FGeometry& MyGeometry, const FVector2D& InputAbsolutePosition)"
  }
]