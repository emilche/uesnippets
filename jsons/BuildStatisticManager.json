[
  {
    "label": "FStatisticData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FStatisticData"
  },
  {
    "label": "FBuildStatisticScope",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBuildStatisticScope"
  },
  {
    "label": "DECLARE_LOG_CATEGORY_EXTERN()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" CoreTypes . h \" # include \" HAL / PlatformTime . h \")",
    "insertText": "DECLARE_LOG_CATEGORY_EXTERN(LogMeshDescriptionBuildStatistic, Log, All)"
  },
  {
    "label": "FStatisticData()",
    "kind": "Method",
    "detail": "Function (namespace BuildStatisticManager { struct FStatisticData { public :)",
    "insertText": "FStatisticData() : TotalTime(0.0) , Counter(0)"
  },
  {
    "label": "FBuildStatisticScope()",
    "kind": "Method",
    "detail": "Function (} double TotalTime ; uint32 Counter ; } ; class FBuildStatisticScope { public :)",
    "insertText": "FBuildStatisticScope(const FString& InTimerDescription, FStatisticData& InStatisticData) : TimerDescription(InTimerDescription) , StatisticData(InStatisticData)"
  },
  {
    "label": "Cycles()",
    "kind": "Method",
    "detail": "Function (StartTime =)",
    "insertText": "Cycles()"
  },
  {
    "label": "FBuildStatisticScope()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "FBuildStatisticScope()"
  },
  {
    "label": "UE_LOG()",
    "kind": "Method",
    "detail": "Function (StatisticData . TotalTime + = ScopeTime ; StatisticData . Counter + = 1 ;)",
    "insertText": "UE_LOG(LogMeshDescriptionBuildStatistic, Log, TEXT(\"%s: %f seconds - Counter: %d - Total Time: %f\"), *TimerDescription, ScopeTime, StatisticData.Counter, StatisticData.TotalTime)"
  }
]