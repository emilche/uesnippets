[
  {
    "label": "FieldPositionIterator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FieldPositionIterator"
  },
  {
    "label": "DecimalFormatSymbols",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DecimalFormatSymbols"
  },
  {
    "label": "DecimalFormat",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DecimalFormat"
  },
  {
    "label": "Formattable",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Formattable"
  },
  {
    "label": "U_I18N_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "U_I18N_API"
  },
  {
    "label": "ScientificNumberFormatter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ScientificNumberFormatter"
  },
  {
    "label": "createSuperscriptInstance()",
    "kind": "Method",
    "detail": "Function (# ifndef SCINUMBERFORMATTER_H # define SCINUMBERFORMATTER_H # include \" unicode / utypes . h \" # if ! UCONFIG_NO_FORMATTING # include \" unicode / unistr . h \" U_NAMESPACE_BEGIN class FieldPositionIterator ; class DecimalFormatSymbols ; class DecimalFormat ; class Formattable ; class U_I18N_API ScientificNumberFormatter : public UObject { public : ScientificNumberFormatter*)",
    "insertText": "createSuperscriptInstance(DecimalFormat *fmtToAdopt, UErrorCode &status)"
  },
  {
    "label": "createSuperscriptInstance()",
    "kind": "Method",
    "detail": "Function (ScientificNumberFormatter*)",
    "insertText": "createSuperscriptInstance(const Locale &locale, UErrorCode &status)"
  },
  {
    "label": "createMarkupInstance()",
    "kind": "Method",
    "detail": "Function (ScientificNumberFormatter*)",
    "insertText": "createMarkupInstance(DecimalFormat *fmtToAdopt, const UnicodeString &beginMarkup, const UnicodeString &endMarkup, UErrorCode &status)"
  },
  {
    "label": "createMarkupInstance()",
    "kind": "Method",
    "detail": "Function (ScientificNumberFormatter*)",
    "insertText": "createMarkupInstance(const Locale &locale, const UnicodeString &beginMarkup, const UnicodeString &endMarkup, UErrorCode &status)"
  },
  {
    "label": "clone()",
    "kind": "Method",
    "detail": "Function (ScientificNumberFormatter*)",
    "insertText": "clone()"
  },
  {
    "label": "ScientificNumberFormatter()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "ScientificNumberFormatter()"
  },
  {
    "label": "format()",
    "kind": "Method",
    "detail": "Function (UnicodeString&)",
    "insertText": "format(const Formattable &number, UnicodeString &appendTo, UErrorCode &status)"
  },
  {
    "label": "format()",
    "kind": "Method",
    "detail": "Function (protected : UnicodeString&)",
    "insertText": "format(const UnicodeString &original, FieldPositionIterator &fpi, const UnicodeString &preExponent, UnicodeString &appendTo, UErrorCode &status)"
  },
  {
    "label": "MarkupStyle()",
    "kind": "Method",
    "detail": "Function (} ; class U_I18N_API MarkupStyle : public Style { public :)",
    "insertText": "MarkupStyle(const UnicodeString &beginMarkup, const UnicodeString &endMarkup) : Style(), fBeginMarkup(beginMarkup), fEndMarkup(endMarkup)"
  },
  {
    "label": "ScientificNumberFormatter()",
    "kind": "Method",
    "detail": "Function (private : UnicodeString fBeginMarkup ; UnicodeString fEndMarkup ; } ;)",
    "insertText": "ScientificNumberFormatter(DecimalFormat *fmtToAdopt, Style *styleToAdopt, UErrorCode &status)"
  },
  {
    "label": "ScientificNumberFormatter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ScientificNumberFormatter(const ScientificNumberFormatter &other)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (ScientificNumberFormatter&)",
    "insertText": "operator(const ScientificNumberFormatter &)"
  },
  {
    "label": "getPreExponent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "getPreExponent(const DecimalFormatSymbols &dfs, UnicodeString &preExponent)"
  },
  {
    "label": "createInstance()",
    "kind": "Method",
    "detail": "Function (ScientificNumberFormatter*)",
    "insertText": "createInstance(DecimalFormat *fmtToAdopt, Style *styleToAdopt, UErrorCode &status)"
  }
]