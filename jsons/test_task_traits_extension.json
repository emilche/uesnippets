[
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "TestExtensionBoolTrait",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TestExtensionBoolTrait"
  },
  {
    "label": "TestTaskTraitsExtension",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TestTaskTraitsExtension"
  },
  {
    "label": "ValidTrait",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ValidTrait"
  },
  {
    "label": "CheckArgumentsAreValid",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CheckArgumentsAreValid"
  },
  {
    "label": "ValidTrait()",
    "kind": "Method",
    "detail": "Function (# ifndef BASE_TASK_TEST_TASK_TRAITS_EXTENSION_H_ # define BASE_TASK_TEST_TASK_TRAITS_EXTENSION_H_ # include<utility> # include \" base / task / task_traits . h \" namespace base { enum class TestExtensionEnumTrait { kA,kB,kC } ; struct TestExtensionBoolTrait { } ; class TestTaskTraitsExtension { public : uint8_t kExtensionId = TaskTraitsExtensionStorage::kFirstEmbedderExtensionId ; struct ValidTrait : public TaskTraits::ValidTrait { using TaskTraits::ValidTrait::ValidTrait ;)",
    "insertText": "ValidTrait(TestExtensionEnumTrait)"
  },
  {
    "label": "ValidTrait()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ValidTrait(TestExtensionBoolTrait)"
  },
  {
    "label": "TestTaskTraitsExtension()",
    "kind": "Method",
    "detail": "Function (} ; template<class . . . ArgTypes,class CheckArgumentsAreValid = std::enable_if_t<trait_helpers::AreValidTraits<ValidTrait,ArgTypes . . .>::value>>)",
    "insertText": "TestTaskTraitsExtension(ArgTypes... args) : enum_trait_( trait_helpers::GetEnum<TestExtensionEnumTrait, TestExtensionEnumTrait::kA>(args...)), bool_trait_( trait_helpers::HasTrait<TestExtensionBoolTrait, ArgTypes...>())"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (} TaskTraitsExtensionStorage)",
    "insertText": "Serialize()"
  },
  {
    "label": "Parse()",
    "kind": "Method",
    "detail": "Function (} const TestTaskTraitsExtension)",
    "insertText": "Parse(const TaskTraitsExtensionStorage& extension)"
  },
  {
    "label": "TestTaskTraitsExtension()",
    "kind": "Method",
    "detail": "Function (} else { return)",
    "insertText": "TestTaskTraitsExtension(static_cast<TestExtensionEnumTrait>(extension.data[0]))"
  },
  {
    "label": "enum_trait()",
    "kind": "Method",
    "detail": "Function (} } TestExtensionEnumTrait)",
    "insertText": "enum_trait()"
  }
]