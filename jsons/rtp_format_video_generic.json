[
  {
    "label": "RtpPacketToSend",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RtpPacketToSend"
  },
  {
    "label": "RTPVideoHeader",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RTPVideoHeader"
  },
  {
    "label": "RtpPacketizerGeneric",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RtpPacketizerGeneric"
  },
  {
    "label": "RtpPacketizerGeneric()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_RTP_RTCP_SOURCE_RTP_FORMAT_VIDEO_GENERIC_H_ # define MODULES_RTP_RTCP_SOURCE_RTP_FORMAT_VIDEO_GENERIC_H_ # include<stdint . h> # include<vector> # include \" api / array_view . h \" # include \" modules / rtp_rtcp / source / rtp_format . h \" namespace webrtc { class RtpPacketToSend ; struct RTPVideoHeader ; namespace RtpFormatVideoGeneric { const uint8_t kKeyFrameBit = 0 x01 ; const uint8_t kFirstPacketBit = 0 x02 ; const uint8_t kExtendedHeaderBit = 0 x04 ; } class RtpPacketizerGeneric : public RtpPacketizer { public :)",
    "insertText": "RtpPacketizerGeneric(rtc::ArrayView<const uint8_t> payload, PayloadSizeLimits limits, const RTPVideoHeader& rtp_video_header)"
  },
  {
    "label": "RtpPacketizerGeneric()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RtpPacketizerGeneric(rtc::ArrayView<const uint8_t> payload, PayloadSizeLimits limits)"
  },
  {
    "label": "RtpPacketizerGeneric()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "RtpPacketizerGeneric()"
  },
  {
    "label": "RtpPacketizerGeneric()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RtpPacketizerGeneric(const RtpPacketizerGeneric&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (RtpPacketizerGeneric&)",
    "insertText": "operator(const RtpPacketizerGeneric&)"
  },
  {
    "label": "NumPackets()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "NumPackets()"
  },
  {
    "label": "NextPacket()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "NextPacket(RtpPacketToSend* packet)"
  },
  {
    "label": "BuildHeader()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "BuildHeader(const RTPVideoHeader& rtp_video_header)"
  }
]