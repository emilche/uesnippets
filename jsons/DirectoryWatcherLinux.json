[
  {
    "label": "FDirectoryWatchRequestLinux",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDirectoryWatchRequestLinux"
  },
  {
    "label": "FDirectoryWatcherLinux",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDirectoryWatcherLinux"
  },
  {
    "label": "FDirectoryWatcherLinux()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" IDirectoryWatcher . h \" class FDirectoryWatchRequestLinux ; class FDirectoryWatcherLinux : public IDirectoryWatcher { public :)",
    "insertText": "FDirectoryWatcherLinux()"
  },
  {
    "label": "RegisterDirectoryChangedCallback_Handle()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RegisterDirectoryChangedCallback_Handle(const FString& Directory, const FDirectoryChanged& InDelegate, FDelegateHandle& OutHandle, uint32 Flags)"
  },
  {
    "label": "UnregisterDirectoryChangedCallback_Handle()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UnregisterDirectoryChangedCallback_Handle(const FString& Directory, FDelegateHandle InHandle)"
  },
  {
    "label": "Tick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Tick(float DeltaSeconds)"
  },
  {
    "label": "DumpStats()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DumpStats()"
  }
]