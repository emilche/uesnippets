[
  {
    "label": "SComboButton",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SComboButton"
  },
  {
    "label": "SHorizontalBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SHorizontalBox"
  },
  {
    "label": "SSearchBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SSearchBox"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "UBlueprint",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBlueprint"
  },
  {
    "label": "UClass",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UClass"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "FGeometry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGeometry"
  },
  {
    "label": "SKismetDebuggingView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SKismetDebuggingView"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct( const FArguments& InArgs )"
  },
  {
    "label": "TryRegisterDebugToolbar()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TryRegisterDebugToolbar()"
  },
  {
    "label": "SetBlueprintToWatch()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetBlueprintToWatch(TWeakObjectPtr<UBlueprint> InBlueprintToWatch)"
  },
  {
    "label": "OnToggleAllBreakpointsClicked()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnToggleAllBreakpointsClicked()"
  },
  {
    "label": "OnBlueprintClassPicked()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnBlueprintClassPicked(UClass* PickedClass)"
  },
  {
    "label": "ConstructBlueprintClassPicker()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "ConstructBlueprintClassPicker()"
  },
  {
    "label": "GetDebugLineTypeToggle()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SHorizontalBox>)",
    "insertText": "GetDebugLineTypeToggle(FDebugLineItem::EDebugLineType Type, const FText& Text)"
  },
  {
    "label": "OnSearchTextChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSearchTextChanged(const FText& Text)"
  }
]