[
  {
    "label": "FProperty",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FProperty"
  },
  {
    "label": "IPropertyTableCell",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPropertyTableCell"
  },
  {
    "label": "IPropertyTableCellPresenter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPropertyTableCellPresenter"
  },
  {
    "label": "IPropertyTableColumn",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPropertyTableColumn"
  },
  {
    "label": "IPropertyTableUtilities",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPropertyTableUtilities"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "CONFIGEDITOR_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CONFIGEDITOR_API"
  },
  {
    "label": "FConfigPropertyCustomColumn()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" IPropertyTableColumn . h \" # include \" IPropertyTableCustomColumn . h \" # include \" IPropertyTableUtilities . h \" # include \" Templates / SharedPointer . h \" # include \" UObject / NameTypes . h \" class FProperty ; class IPropertyTableCell ; class IPropertyTableCellPresenter ; class IPropertyTableColumn ; class IPropertyTableUtilities ; class SWidget ; class FConfigPropertyCustomColumn : public IPropertyTableCustomColumn { public :)",
    "insertText": "FConfigPropertyCustomColumn()"
  },
  {
    "label": "Supports()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "Supports(const TSharedRef< IPropertyTableColumn >& Column, const TSharedRef< IPropertyTableUtilities >& Utilities)"
  },
  {
    "label": "CreateColumnLabel()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<SWidget>)",
    "insertText": "CreateColumnLabel(const TSharedRef< IPropertyTableColumn >& Column, const TSharedRef< IPropertyTableUtilities >& Utilities, const FName& Style)"
  },
  {
    "label": "CreateCellPresenter()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<IPropertyTableCellPresenter>)",
    "insertText": "CreateCellPresenter(const TSharedRef< IPropertyTableCell >& Cell, const TSharedRef< IPropertyTableUtilities >& Utilities, const FName& Style)"
  }
]