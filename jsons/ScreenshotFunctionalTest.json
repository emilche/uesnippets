[
  {
    "label": "FAutomationTestScreenshotEnvSetup",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAutomationTestScreenshotEnvSetup"
  },
  {
    "label": "FUNCTIONALTESTING_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FUNCTIONALTESTING_API"
  },
  {
    "label": "EVariantType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EVariantType"
  },
  {
    "label": "FVariantInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FVariantInfo"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" ScreenshotFunctionalTestBase . h \" # include \" AutomationScreenshotOptions . h \" # include \" ScreenshotFunctionalTest . generated . h \" class FAutomationTestScreenshotEnvSetup ;)",
    "insertText": "UCLASS(Blueprintable)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: AScreenshotFunctionalTest(const FObjectInitializer& ObjectInitializer)"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Serialize(FArchive& Ar)"
  },
  {
    "label": "RunTest()",
    "kind": "Method",
    "detail": "Function (protected : bool)",
    "insertText": "RunTest(const TArray<FString>& Params = TArray<FString>())"
  },
  {
    "label": "PrepareTest()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PrepareTest()"
  },
  {
    "label": "IsReady_Implementation()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsReady_Implementation()"
  },
  {
    "label": "Tick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Tick(float DeltaSeconds)"
  },
  {
    "label": "RequestScreenshot()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RequestScreenshot()"
  },
  {
    "label": "OnScreenShotCaptured()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnScreenShotCaptured(int32 InSizeX, int32 InSizeY, const TArray<FColor>& InImageData)"
  },
  {
    "label": "OnScreenshotTakenAndCompared()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnScreenshotTakenAndCompared()"
  },
  {
    "label": "SetupNextVariant()",
    "kind": "Method",
    "detail": "Function (private : enum EVariantType { Baseline = 0,ViewRectOffset,Num } ; struct FVariantInfo { const TCHAR* Name ; const TCHAR* SetupCommand ; const TCHAR* RestoreCommand ; } ; bool)",
    "insertText": "SetupNextVariant()"
  },
  {
    "label": "SetupVariant()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetupVariant(EVariantType VariantType)"
  },
  {
    "label": "ReprepareTest()",
    "kind": "Method",
    "detail": "Function (TBitArray<> RequestedVariants ; const TCHAR* CurrentVariantName ; const TCHAR* VariantRestoreCommand ; void)",
    "insertText": "ReprepareTest()"
  }
]