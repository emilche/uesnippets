[
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FScope",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FScope"
  },
  {
    "label": "ENUM_CLASS_FLAGS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ENUM_CLASS_FLAGS(EType)"
  },
  {
    "label": "ReportCurrentThreadAccess()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR class FScope ; namespace Private { volatile int32 GNumLiveScopes ; void)",
    "insertText": "ReportCurrentThreadAccess(EType Type)"
  },
  {
    "label": "SetCurrentThreadScope()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCurrentThreadScope(FScope* Scope)"
  },
  {
    "label": "ReportAccess()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "ReportAccess(EType Type)"
  },
  {
    "label": "ReportCurrentThreadAccess()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReportCurrentThreadAccess(Type)"
  },
  {
    "label": "FScope()",
    "kind": "Method",
    "detail": "Function (} } class FScope { public :)",
    "insertText": "FScope()"
  },
  {
    "label": "SetCurrentThreadScope()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCurrentThreadScope(this)"
  },
  {
    "label": "SetCurrentThreadScope()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCurrentThreadScope(nullptr)"
  },
  {
    "label": "AddAccess()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "AddAccess(EType Type)"
  },
  {
    "label": "GetAccesses()",
    "kind": "Method",
    "detail": "Function (AccessedTypes | = Type ; } EType)",
    "insertText": "GetAccesses()"
  }
]