[
  {
    "label": "FSlateFontMeasure",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateFontMeasure"
  },
  {
    "label": "FSlateBrush",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSlateBrush"
  },
  {
    "label": "FLogCategoryInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLogCategoryInfo"
  },
  {
    "label": "FLogMessageInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLogMessageInfo"
  },
  {
    "label": "ILogProvider",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ILogProvider"
  },
  {
    "label": "FDrawContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDrawContext"
  },
  {
    "label": "FTimingTrackViewport",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTimingTrackViewport"
  },
  {
    "label": "FTimeMarkerBoxInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTimeMarkerBoxInfo"
  },
  {
    "label": "FTimeMarkerTextInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTimeMarkerTextInfo"
  },
  {
    "label": "FMarkersTimingTrack",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMarkersTimingTrack"
  },
  {
    "label": "FTimeMarkerTrackBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTimeMarkerTrackBuilder"
  },
  {
    "label": "FTimeMarkerTrackBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTimeMarkerTrackBuilder"
  },
  {
    "label": "FMarkersTimingTrack()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FMarkersTimingTrack()"
  },
  {
    "label": "SaveScreenshot_CanExecute()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SaveScreenshot_CanExecute()"
  },
  {
    "label": "SaveScreenshot_Execute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SaveScreenshot_Execute()"
  },
  {
    "label": "Snap()",
    "kind": "Method",
    "detail": "Function (double)",
    "insertText": "Snap(double Time, double SnapTolerance)"
  },
  {
    "label": "UpdateTrackNameAndHeight()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateTrackNameAndHeight()"
  },
  {
    "label": "UpdateDrawState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateDrawState(const ITimingTrackUpdateContext& Context)"
  },
  {
    "label": "UpdateCategory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateCategory(const TraceServices::FLogCategoryInfo*& InOutCategory, const TCHAR* CategoryName)"
  },
  {
    "label": "TryGetHoveredEventScreenshotId()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TryGetHoveredEventScreenshotId(uint32& OutScreenshotId)"
  },
  {
    "label": "FTimeMarkerTrackBuilder()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "FTimeMarkerTrackBuilder(FMarkersTimingTrack& InTrack, const FTimingTrackViewport& InViewport, float InFontScale)"
  },
  {
    "label": "BeginLog()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginLog(const TraceServices::ILogProvider& LogProvider)"
  },
  {
    "label": "AddLogMessage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddLogMessage(const TraceServices::FLogMessageInfo& Message)"
  },
  {
    "label": "EndLog()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EndLog()"
  },
  {
    "label": "GetColorByCategory()",
    "kind": "Method",
    "detail": "Function (FLinearColor)",
    "insertText": "GetColorByCategory(const TCHAR* const Category)"
  },
  {
    "label": "GetColorByVerbosity()",
    "kind": "Method",
    "detail": "Function (FLinearColor)",
    "insertText": "GetColorByVerbosity(const ELogVerbosity::Type Verbosity)"
  },
  {
    "label": "Flush()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Flush(float AvailableTextW)"
  },
  {
    "label": "AddTimeMarker()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddTimeMarker(const float X, const uint64 LogIndex, const ELogVerbosity::Type Verbosity, const TCHAR* const Category, const TCHAR* Message)"
  }
]