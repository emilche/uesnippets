[
  {
    "label": "TArrayCollectionArrayBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TArrayCollectionArrayBase"
  },
  {
    "label": "ApplyShrinkPolicy()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" namespace Chaos { class TArrayCollectionArrayBase { public : void)",
    "insertText": "ApplyShrinkPolicy(const float MaxSlackFraction, const int32 MinSlack)"
  },
  {
    "label": "Resize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Resize(const int Num)"
  },
  {
    "label": "RemoveAt()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveAt(const int Idx, const int Count)"
  },
  {
    "label": "RemoveAtSwap()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveAtSwap(const int Idx)"
  },
  {
    "label": "SizeOfElem()",
    "kind": "Method",
    "detail": "Function (uint64)",
    "insertText": "SizeOfElem()"
  },
  {
    "label": "MoveToOtherArray()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MoveToOtherArray(const int Idx, TArrayCollectionArrayBase& Other)"
  }
]