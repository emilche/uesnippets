[
  {
    "label": "ObjectTransformLayer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ObjectTransformLayer"
  },
  {
    "label": "ObjectTransformLayer()",
    "kind": "Method",
    "detail": "Function (# ifndef LLVM_EXECUTIONENGINE_ORC_OBJECTTRANSFORMLAYER_H # define LLVM_EXECUTIONENGINE_ORC_OBJECTTRANSFORMLAYER_H # include \" JITSymbol . h \" namespace llvm { namespace orc { template<BaseLayerT,TransformFtor> class ObjectTransformLayer { public : typedef BaseLayerT::ObjSetHandleT ObjSetHandleT ;)",
    "insertText": "ObjectTransformLayer(BaseLayerT &BaseLayer, TransformFtor Transform = TransformFtor()) : BaseLayer(BaseLayer), Transform(std::move(Transform))"
  },
  {
    "label": "addObjectSet()",
    "kind": "Method",
    "detail": "Function (} template<ObjSetT,MemoryManagerPtrT,SymbolResolverPtrT> ObjSetHandleT)",
    "insertText": "addObjectSet(ObjSetT &Objects, MemoryManagerPtrT MemMgr, SymbolResolverPtrT Resolver)"
  },
  {
    "label": "removeObjectSet()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "removeObjectSet(ObjSetHandleT H)"
  },
  {
    "label": "removeObjectSet()",
    "kind": "Method",
    "detail": "Function (BaseLayer .)",
    "insertText": "removeObjectSet(H)"
  },
  {
    "label": "findSymbol()",
    "kind": "Method",
    "detail": "Function (} JITSymbol)",
    "insertText": "findSymbol(const std::string &Name, bool ExportedSymbolsOnly)"
  },
  {
    "label": "findSymbolIn()",
    "kind": "Method",
    "detail": "Function (} JITSymbol)",
    "insertText": "findSymbolIn(ObjSetHandleT H, const std::string &Name, bool ExportedSymbolsOnly)"
  },
  {
    "label": "emitAndFinalize()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "emitAndFinalize(ObjSetHandleT H)"
  },
  {
    "label": "emitAndFinalize()",
    "kind": "Method",
    "detail": "Function (BaseLayer .)",
    "insertText": "emitAndFinalize(H)"
  },
  {
    "label": "mapSectionAddress()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "mapSectionAddress(ObjSetHandleT H, const void *LocalAddress, TargetAddress TargetAddr)"
  },
  {
    "label": "mapSectionAddress()",
    "kind": "Method",
    "detail": "Function (BaseLayer .)",
    "insertText": "mapSectionAddress(H, LocalAddress, TargetAddr)"
  },
  {
    "label": "takeOwnershipOfBuffers()",
    "kind": "Method",
    "detail": "Function (} template<OwningMBSet> void)",
    "insertText": "takeOwnershipOfBuffers(ObjSetHandleT H, OwningMBSet MBs)"
  },
  {
    "label": "takeOwnershipOfBuffers()",
    "kind": "Method",
    "detail": "Function (BaseLayer .)",
    "insertText": "takeOwnershipOfBuffers(H, std::move(MBs))"
  },
  {
    "label": "getTransform()",
    "kind": "Method",
    "detail": "Function (} TransformFtor&)",
    "insertText": "getTransform()"
  }
]