[
  {
    "label": "FOnPaintHandlerParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FOnPaintHandlerParams"
  },
  {
    "label": "SPaintSurface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SPaintSurface"
  },
  {
    "label": "FOnPaintHandlerParams()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Layout / Visibility . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Widgets / SCompoundWidget . h \" # include \" Rendering / DrawElements . h \" struct FOnPaintHandlerParams ; struct FOnPaintHandlerParams { const FPaintArgs& Args ; const FGeometry& Geometry ; const FSlateRect& ClippingRect ; FSlateWindowElementList& OutDrawElements ; const int32 Layer ; const bool bEnabled ;)",
    "insertText": "FOnPaintHandlerParams(const FPaintArgs& InArgs, const FGeometry& InGeometry, const FSlateRect& InClippingRect, FSlateWindowElementList& InOutDrawElements, int32 InLayer, bool bInEnabled ) : Args(InArgs) , Geometry( InGeometry ) , ClippingRect( InClippingRect ) , OutDrawElements( InOutDrawElements ) , Layer( InLayer ) , bEnabled( bInEnabled)"
  },
  {
    "label": "DECLARE_DELEGATE_RetVal_OneParam()",
    "kind": "Method",
    "detail": "Function (} } ;)",
    "insertText": "DECLARE_DELEGATE_RetVal_OneParam(int32, FOnPaintHandler, const FOnPaintHandlerParams&)"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (class SPaintSurface : public SCompoundWidget { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SPaintSurface ) : _OnPaintHandler()"
  },
  {
    "label": "SLATE_EVENT()",
    "kind": "Method",
    "detail": "Function (_Visibility = EVisibility::SelfHitTestInvisible ; })",
    "insertText": "SLATE_EVENT(FOnPaintHandler, OnPaintHandler ) SLATE_END_ARGS() void Construct(const FArguments& InArgs)"
  },
  {
    "label": "ComputeDesiredSize()",
    "kind": "Method",
    "detail": "Function (OnPaintHandler = InArgs . _OnPaintHandler ; } FVector2D)",
    "insertText": "ComputeDesiredSize(float)"
  },
  {
    "label": "OnPaint()",
    "kind": "Method",
    "detail": "Function (} int32)",
    "insertText": "OnPaint(const FPaintArgs& Args, const FGeometry& AllottedGeometry, const FSlateRect& MyCullingRect, FSlateWindowElementList& OutDrawElements, int32 LayerId, const FWidgetStyle& InWidgetStyle, bool bParentEnabled)"
  },
  {
    "label": "Params()",
    "kind": "Method",
    "detail": "Function (FOnPaintHandlerParams)",
    "insertText": "Params(Args, AllottedGeometry, MyCullingRect, OutDrawElements, LayerId, bParentEnabled && IsEnabled())"
  },
  {
    "label": "Execute()",
    "kind": "Method",
    "detail": "Function (OnPaintHandler .)",
    "insertText": "Execute(Params)"
  },
  {
    "label": "MakeDebugQuad()",
    "kind": "Method",
    "detail": "Function (} else {)",
    "insertText": "MakeDebugQuad(OutDrawElements, LayerId, AllottedGeometry.ToPaintGeometry())"
  },
  {
    "label": "OnPaint()",
    "kind": "Method",
    "detail": "Function (} return)",
    "insertText": "OnPaint(Args, AllottedGeometry, MyCullingRect, OutDrawElements, LayerId, InWidgetStyle, bParentEnabled && IsEnabled())"
  }
]