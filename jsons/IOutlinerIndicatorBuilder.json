[
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "UMovieSceneSequence",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieSceneSequence"
  },
  {
    "label": "FCreateOutlinerColumnParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCreateOutlinerColumnParams"
  },
  {
    "label": "IOutlinerColumn",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IOutlinerColumn"
  },
  {
    "label": "ISequencerTreeViewRow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISequencerTreeViewRow"
  },
  {
    "label": "IOutlinerIndicatorBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IOutlinerIndicatorBuilder"
  },
  {
    "label": "GetIndicatorName()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Templates / SharedPointer . h \" class SWidget ; class UMovieSceneSequence ; namespace UE::Sequencer { struct FCreateOutlinerColumnParams ; class IOutlinerColumn ; class ISequencerTreeViewRow ; class IOutlinerIndicatorBuilder : public TSharedFromThis<IOutlinerIndicatorBuilder> { public : FName)",
    "insertText": "GetIndicatorName()"
  },
  {
    "label": "SupportsSequence()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SupportsSequence(UMovieSceneSequence* InSequence)"
  },
  {
    "label": "CreateIndicatorWidget()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<SWidget>)",
    "insertText": "CreateIndicatorWidget(const FCreateOutlinerColumnParams& InParams, const TSharedRef<ISequencerTreeViewRow>& TreeViewRow, const TSharedRef<IOutlinerColumn>& OutlinerColumn, const int32 NumCompatibleIndicators)"
  },
  {
    "label": "IOutlinerIndicatorBuilder()",
    "kind": "Method",
    "detail": "Function (public : ~)",
    "insertText": "IOutlinerIndicatorBuilder()"
  }
]