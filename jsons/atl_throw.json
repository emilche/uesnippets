[
  {
    "label": "AtlThrowImpl()",
    "kind": "Method",
    "detail": "Function (# ifndef BASE_WIN_ATL_THROW_H_ # define BASE_WIN_ATL_THROW_H_ # ifdef __ATLDEF_H__ # error atl_throw . h must be included before atldef . h . # endif # include \" base / base_export . h \" # include \" base / win / windows_types . h \" # ifndef _ATL_NO_EXCEPTIONS # define _ATL_NO_EXCEPTIONS # endif # define _ATL_CUSTOM_THROW # define AtlThrow::base::win::AtlThrowImpl namespace base { namespace win { [ [ noreturn ] ] BASE_EXPORT void __stdcall)",
    "insertText": "AtlThrowImpl(HRESULT hr)"
  },
  {
    "label": "__declspec()",
    "kind": "Method",
    "detail": "Function (} } # include<atldef . h> namespace ATL { ATL_NOINLINE)",
    "insertText": "__declspec(noreturn) inline void WINAPI AtlThrowLastWin32()"
  }
]