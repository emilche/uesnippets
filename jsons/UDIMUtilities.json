[
  {
    "label": "FString",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FString"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Map . h \" # include \" CoreMinimal . h \" # include \" HAL / Platform . h \" class FString ; namespace UE { namespace TextureUtilitiesCommon { int32 UDIM_Max_X = 9 ; int32 UDIM_Max_Y = 9 0 ; int32 UDIM_Min_Index = 1 0 0 1 ; int32 UDIM_Max_Index = UDIM_Min_Index + UDIM_Max_X + UDIM_Max_Y* 1 0 ; const TCHAR* DefaultUdimRegexPattern =)",
    "insertText": "TEXT(R\"((.+?)[._](\\d{4})$)\")"
  },
  {
    "label": "ParseUDIMName()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "ParseUDIMName(const FString& Name, const FString& UdimRegexPattern, FString& OutPrefixName, FString& OutPostfixName)"
  },
  {
    "label": "GetUDIMIndex()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetUDIMIndex(int32 BlockX, int32 BlockY)"
  },
  {
    "label": "GetUDIMBlocksFromSourceFile()",
    "kind": "Method",
    "detail": "Function (TMap<int32,FString>)",
    "insertText": "GetUDIMBlocksFromSourceFile(const FString& File, const FString& UdimRegexPattern, FString* OutFilenameWithoutUdimPatternAndExtension = nullptr)"
  },
  {
    "label": "ExtractUDIMCoordinates()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExtractUDIMCoordinates(int32 UDIMIndex, int32& OutBlockX, int32& OutBlockY)"
  }
]