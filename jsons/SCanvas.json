[
  {
    "label": "FArrangedChildren",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FArrangedChildren"
  },
  {
    "label": "FPaintArgs",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPaintArgs"
  },
  {
    "label": "FSlateWindowElementList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateWindowElementList"
  },
  {
    "label": "SCanvas",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SCanvas"
  },
  {
    "label": "FSlot",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlot"
  },
  {
    "label": "SLATE_DECLARE_WIDGET_API()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Misc / Attribute . h \" # include \" Layout / Visibility . h \" # include \" SlotBase . h \" # include \" Widgets / SWidget . h \" # include \" Layout / Children . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Widgets / SPanel . h \" class FArrangedChildren ; class FPaintArgs ; class FSlateWindowElementList ; class SCanvas : public SPanel {)",
    "insertText": "SLATE_DECLARE_WIDGET_API(SCanvas, SPanel, SLATE_API)"
  },
  {
    "label": "SLATE_SLOT_BEGIN_ARGS_OneMixin()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "SLATE_SLOT_BEGIN_ARGS_OneMixin(FSlot, TSlotBase<FSlot>, TAlignmentWidgetSlotMixin<FSlot>) SLATE_ATTRIBUTE(FVector2D, Position) SLATE_ATTRIBUTE(FVector2D, Size) SLATE_SLOT_END_ARGS() void SetPosition( TAttribute<FVector2D> InPosition)"
  },
  {
    "label": "Assign()",
    "kind": "Method",
    "detail": "Function (Position .)",
    "insertText": "Assign(*this, MoveTemp(InPosition))"
  },
  {
    "label": "GetPosition()",
    "kind": "Method",
    "detail": "Function (} FVector2D)",
    "insertText": "GetPosition()"
  },
  {
    "label": "SetSize()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetSize(TAttribute<FVector2D> InSize)"
  },
  {
    "label": "Assign()",
    "kind": "Method",
    "detail": "Function (Size .)",
    "insertText": "Assign(*this, MoveTemp(InSize))"
  },
  {
    "label": "GetSize()",
    "kind": "Method",
    "detail": "Function (} FVector2D)",
    "insertText": "GetSize()"
  },
  {
    "label": "FSlot()",
    "kind": "Method",
    "detail": "Function (} public :)",
    "insertText": "FSlot() : TWidgetSlotWithAttributeSupport<FSlot>() , TAlignmentWidgetSlotMixin<FSlot>(HAlign_Left, VAlign_Top) , Position(*this, FVector2D::ZeroVector) , Size(*this, FVector2D(1.0f, 1.0f))"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Construct(const FChildren& SlotOwner, FSlotArguments&& InArg)"
  },
  {
    "label": "RegisterAttributes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterAttributes(FSlateWidgetSlotAttributeInitializer& AttributeInitializer)"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (private : TSlateSlotAttribute<FVector2D> Position ; TSlateSlotAttribute<FVector2D> Size ; } ;)",
    "insertText": "SLATE_BEGIN_ARGS(SCanvas)"
  },
  {
    "label": "SLATE_SLOT_ARGUMENT()",
    "kind": "Method",
    "detail": "Function (_Visibility = EVisibility::SelfHitTestInvisible ; })",
    "insertText": "SLATE_SLOT_ARGUMENT(FSlot, Slots ) SLATE_END_ARGS() SLATE_API SCanvas()"
  },
  {
    "label": "SCanvas()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "SCanvas()"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct(const FArguments& InArgs)"
  },
  {
    "label": "Slot()",
    "kind": "Method",
    "detail": "Function (FSlot::FSlotArguments)",
    "insertText": "Slot()"
  },
  {
    "label": "AddSlot()",
    "kind": "Method",
    "detail": "Function (using FScopedWidgetSlotArguments = TPanelChildren<FSlot>::FScopedWidgetSlotArguments ; FScopedWidgetSlotArguments)",
    "insertText": "AddSlot()"
  },
  {
    "label": "RemoveSlot()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "RemoveSlot(const TSharedRef<SWidget>& SlotWidget)"
  },
  {
    "label": "ClearChildren()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearChildren()"
  },
  {
    "label": "OnArrangeChildren()",
    "kind": "Method",
    "detail": "Function (public : void)",
    "insertText": "OnArrangeChildren(const FGeometry& AllottedGeometry, FArrangedChildren& ArrangedChildren)"
  },
  {
    "label": "OnPaint()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "OnPaint(const FPaintArgs& Args, const FGeometry& AllottedGeometry, const FSlateRect& MyCullingRect, FSlateWindowElementList& OutDrawElements, int32 LayerId, const FWidgetStyle& InWidgetStyle, bool bParentEnabled)"
  },
  {
    "label": "GetChildren()",
    "kind": "Method",
    "detail": "Function (FChildren*)",
    "insertText": "GetChildren()"
  },
  {
    "label": "ComputeDesiredSize()",
    "kind": "Method",
    "detail": "Function (protected : FVector2D)",
    "insertText": "ComputeDesiredSize(float)"
  }
]