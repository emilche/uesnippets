[
  {
    "label": "FDetailWidgetRow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDetailWidgetRow"
  },
  {
    "label": "IDetailChildrenBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDetailChildrenBuilder"
  },
  {
    "label": "IDetailLayoutBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDetailLayoutBuilder"
  },
  {
    "label": "SDragAndDropVerticalBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SDragAndDropVerticalBox"
  },
  {
    "label": "SInlineEditableTextBlock",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SInlineEditableTextBlock"
  },
  {
    "label": "ALandscapeBlueprintBrushBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ALandscapeBlueprintBrushBase"
  },
  {
    "label": "ULandscapeLayerInfoObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULandscapeLayerInfoObject"
  },
  {
    "label": "FMenuBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMenuBuilder"
  },
  {
    "label": "FLandscapeEditorDetailCustomization_Layers",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLandscapeEditorDetailCustomization_Layers"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "FLandscapeEditorCustomNodeBuilder_Layers",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLandscapeEditorCustomNodeBuilder_Layers"
  },
  {
    "label": "FEdModeLandscape",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEdModeLandscape"
  },
  {
    "label": "FLandscapeListElementDragDropOp",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLandscapeListElementDragDropOp"
  },
  {
    "label": "MakeInstance()",
    "kind": "Method",
    "detail": "Function (TSharedRef<IDetailCustomization>)",
    "insertText": "MakeInstance()"
  },
  {
    "label": "ShouldShowLayersErrorMessageTip()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldShowLayersErrorMessageTip()"
  },
  {
    "label": "GetLayersErrorMessageText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetLayersErrorMessageText()"
  },
  {
    "label": "FLandscapeEditorCustomNodeBuilder_Layers()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FLandscapeEditorCustomNodeBuilder_Layers(TSharedRef<FAssetThumbnailPool> ThumbnailPool)"
  },
  {
    "label": "GenerateRow()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<SWidget>)",
    "insertText": "GenerateRow(int32 InLayerIndex)"
  },
  {
    "label": "SlotIndexToLayerIndex()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "SlotIndexToLayerIndex(int32 SlotIndex)"
  },
  {
    "label": "HandleDragDetected()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "HandleDragDetected(const FGeometry& MyGeometry, const FPointerEvent& MouseEvent, int32 SlotIndex, SVerticalBox::FSlot* Slot)"
  },
  {
    "label": "HandleCanAcceptDrop()",
    "kind": "Method",
    "detail": "Function (TOptional<SDragAndDropVerticalBox::EItemDropZone>)",
    "insertText": "HandleCanAcceptDrop(const FDragDropEvent& DragDropEvent, SDragAndDropVerticalBox::EItemDropZone DropZone, SVerticalBox::FSlot* Slot)"
  },
  {
    "label": "HandleAcceptDrop()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "HandleAcceptDrop(FDragDropEvent const& DragDropEvent, SDragAndDropVerticalBox::EItemDropZone DropZone, int32 SlotIndex, SVerticalBox::FSlot* Slot)"
  },
  {
    "label": "OnLayerSelectionChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnLayerSelectionChanged(int32 LayerIndex)"
  },
  {
    "label": "OnLayerContextMenuOpening()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<SWidget>)",
    "insertText": "OnLayerContextMenuOpening(int32 InLayerIndex)"
  },
  {
    "label": "CreateLayer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateLayer()"
  },
  {
    "label": "ClearTargetLayerOnLayer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearTargetLayerOnLayer(int32 InLayerIndex, ULandscapeLayerInfoObject* InLayerInfo)"
  },
  {
    "label": "ClearTargetLayersOnLayer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearTargetLayersOnLayer(int32 InLayerIndex, ELandscapeClearMode InClearMode)"
  },
  {
    "label": "CanRenameLayerTo()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanRenameLayerTo(const FText& NewText, FText& OutErrorMessage, int32 InLayerIndex)"
  },
  {
    "label": "RenameLayer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenameLayer(int32 InLayerIndex)"
  },
  {
    "label": "DeleteLayer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeleteLayer(int32 InLayerIndex)"
  },
  {
    "label": "CollapseLayer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CollapseLayer(int32 InLayerIndex)"
  },
  {
    "label": "ExecuteCustomLayerAction()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExecuteCustomLayerAction(int32 InLayerIndex, const ULandscapeEditLayerBase::FEditLayerAction& InCustomLayerAction)"
  },
  {
    "label": "ShowOnlySelectedLayer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ShowOnlySelectedLayer(int32 InLayerIndex)"
  },
  {
    "label": "ShowAllLayers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ShowAllLayers()"
  },
  {
    "label": "SetLayerName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetLayerName(const FText& InText, ETextCommit::Type InCommitType, int32 InLayerIndex)"
  },
  {
    "label": "SetLayerAlpha()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetLayerAlpha(float InAlpha, int32 InLayerIndex, bool bCommit)"
  },
  {
    "label": "OnToggleVisibility()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnToggleVisibility(int32 InLayerIndex)"
  },
  {
    "label": "OnToggleLock()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnToggleLock(int32 InLayerIndex)"
  },
  {
    "label": "FillAddBrushMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FillAddBrushMenu(FMenuBuilder& MenuBuilder, TArray<ALandscapeBlueprintBrushBase*> Brushes)"
  },
  {
    "label": "AddBrushToCurrentLayer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddBrushToCurrentLayer(ALandscapeBlueprintBrushBase* Brush)"
  },
  {
    "label": "FillClearTargetLayerMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FillClearTargetLayerMenu(FMenuBuilder& MenuBuilder, int32 InLayerIndex, TArray<ULandscapeLayerInfoObject*> InUsedLayerInfos)"
  },
  {
    "label": "FillClearLayerMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FillClearLayerMenu(FMenuBuilder& MenuBuilder, int32 InLayerIndex)"
  },
  {
    "label": "New()",
    "kind": "Method",
    "detail": "Function (TSharedRef<FLandscapeListElementDragDropOp>)",
    "insertText": "New(int32 InSlotIndexBeingDragged, SVerticalBox::FSlot* InSlotBeingDragged, TSharedPtr<SWidget> InWidgetToShow)"
  }
]