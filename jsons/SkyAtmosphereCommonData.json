[
  {
    "label": "USkyAtmosphereComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USkyAtmosphereComponent"
  },
  {
    "label": "FAtmosphereSetup",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAtmosphereSetup"
  },
  {
    "label": "FAtmosphereSetup()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" class USkyAtmosphereComponent ; struct FAtmosphereSetup { const float CmToSkyUnit ; const float SkyUnitToCm ; FVector PlanetCenterKm ; float BottomRadiusKm ; float TopRadiusKm ; float MultiScatteringFactor ; FLinearColor RayleighScattering ; float RayleighDensityExpScale ; FLinearColor MieScattering ; FLinearColor MieExtinction ; FLinearColor MieAbsorption ; float MieDensityExpScale ; float MiePhaseG ; FLinearColor AbsorptionExtinction ; float AbsorptionDensity0LayerWidth ; float AbsorptionDensity0ConstantTerm ; float AbsorptionDensity0LinearTerm ; float AbsorptionDensity1ConstantTerm ; float AbsorptionDensity1LinearTerm ; FLinearColor GroundAlbedo ; float TransmittanceMinLightElevationAngle ;)",
    "insertText": "FAtmosphereSetup(const USkyAtmosphereComponent& SkyAtmosphereComponent)"
  },
  {
    "label": "GetTransmittanceAtGroundLevel()",
    "kind": "Method",
    "detail": "Function (FLinearColor)",
    "insertText": "GetTransmittanceAtGroundLevel(const FVector& SunDirection)"
  },
  {
    "label": "UpdateTransform()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateTransform(const FTransform& ComponentTransform, uint8 TranformMode)"
  },
  {
    "label": "ApplyWorldOffset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyWorldOffset(const FVector& InOffset)"
  },
  {
    "label": "ComputeViewData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ComputeViewData(const FVector& WorldCameraOrigin, const FVector& PreViewTranslation, const FVector3f& ViewForward, const FVector3f& ViewRight, FVector3f& SkyCameraTranslatedWorldOrigin, FVector4f& SkyPlanetTranslatedWorldCenterAndViewHeight, FMatrix44f& SkyViewLutReferential)"
  }
]