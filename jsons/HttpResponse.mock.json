[
  {
    "label": "FMockHttpResponse",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMockHttpResponse"
  },
  {
    "label": "GetResponseCode()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Interfaces / IHttpResponse . h \" # include \" Tests / TestHelpers . h \" # if WITH_DEV_AUTOMATION_TESTS namespace BuildPatchServices { class FMockHttpResponse : public IHttpResponse { public : typedef TTuple<FString> FRxSetVerb ; typedef TTuple<FString> FRxSetURL ; public : int32)",
    "insertText": "GetResponseCode()"
  },
  {
    "label": "MOCK_FUNC_NOT_IMPLEMENTED()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_FUNC_NOT_IMPLEMENTED(\"FMockHttpRequest::GetResponseCode\")"
  },
  {
    "label": "GetContentAsString()",
    "kind": "Method",
    "detail": "Function (} FString)",
    "insertText": "GetContentAsString()"
  },
  {
    "label": "MOCK_FUNC_NOT_IMPLEMENTED()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_FUNC_NOT_IMPLEMENTED(\"FMockHttpRequest::GetContentAsString\")"
  },
  {
    "label": "GetURL()",
    "kind": "Method",
    "detail": "Function (} FString)",
    "insertText": "GetURL()"
  },
  {
    "label": "MOCK_FUNC_NOT_IMPLEMENTED()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_FUNC_NOT_IMPLEMENTED(\"FMockHttpRequest::GetURL\")"
  },
  {
    "label": "GetURLParameter()",
    "kind": "Method",
    "detail": "Function (} FString)",
    "insertText": "GetURLParameter(const FString& ParameterName)"
  },
  {
    "label": "MOCK_FUNC_NOT_IMPLEMENTED()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_FUNC_NOT_IMPLEMENTED(\"FMockHttpRequest::GetURLParameter\")"
  },
  {
    "label": "GetHeader()",
    "kind": "Method",
    "detail": "Function (} FString)",
    "insertText": "GetHeader(const FString& HeaderName)"
  },
  {
    "label": "MOCK_FUNC_NOT_IMPLEMENTED()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_FUNC_NOT_IMPLEMENTED(\"FMockHttpRequest::GetHeader\")"
  },
  {
    "label": "GetAllHeaders()",
    "kind": "Method",
    "detail": "Function (} TArray<FString>)",
    "insertText": "GetAllHeaders()"
  },
  {
    "label": "MOCK_FUNC_NOT_IMPLEMENTED()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_FUNC_NOT_IMPLEMENTED(\"FMockHttpRequest::GetAllHeaders\")"
  },
  {
    "label": "GetContentType()",
    "kind": "Method",
    "detail": "Function (} FString)",
    "insertText": "GetContentType()"
  },
  {
    "label": "MOCK_FUNC_NOT_IMPLEMENTED()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_FUNC_NOT_IMPLEMENTED(\"FMockHttpRequest::GetContentType\")"
  },
  {
    "label": "GetContentLength()",
    "kind": "Method",
    "detail": "Function (} uint64)",
    "insertText": "GetContentLength()"
  },
  {
    "label": "MOCK_FUNC_NOT_IMPLEMENTED()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_FUNC_NOT_IMPLEMENTED(\"FMockHttpRequest::GetContentLength\")"
  },
  {
    "label": "GetContent()",
    "kind": "Method",
    "detail": "Function (} const TArray<uint8>&)",
    "insertText": "GetContent()"
  },
  {
    "label": "MOCK_FUNC_NOT_IMPLEMENTED()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_FUNC_NOT_IMPLEMENTED(\"FMockHttpRequest::GetContent\")"
  },
  {
    "label": "GetStatus()",
    "kind": "Method",
    "detail": "Function (TArray<uint8> None ; return None ; } EHttpRequestStatus::Type)",
    "insertText": "GetStatus()"
  },
  {
    "label": "MOCK_FUNC_NOT_IMPLEMENTED()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_FUNC_NOT_IMPLEMENTED(\"FMockHttpRequest::GetStatus\")"
  },
  {
    "label": "MOCK_FUNC_NOT_IMPLEMENTED()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_FUNC_NOT_IMPLEMENTED(\"FMockHttpRequest::GetFailureReason\")"
  },
  {
    "label": "MOCK_FUNC_NOT_IMPLEMENTED()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_FUNC_NOT_IMPLEMENTED(\"FMockHttpRequest::GetEffectiveURL\")"
  }
]