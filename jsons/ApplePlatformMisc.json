[
  {
    "label": "FScopeAutoreleasePool",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FScopeAutoreleasePool"
  },
  {
    "label": "CORE_API",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "CORE_API"
  },
  {
    "label": "FGuid",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGuid"
  },
  {
    "label": "FColor",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FColor"
  },
  {
    "label": "APPLE_PROFILING_ENABLED()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" GenericPlatform / GenericPlatformMisc . h \" # if PLATFORM_MAC # include \" Mac / MacSystemIncludes . h \" # else # include \" IOS / IOSSystemIncludes . h \" # endif # ifndef APPLE_PROFILING_ENABLED # define)",
    "insertText": "APPLE_PROFILING_ENABLED(UE_BUILD_DEBUG | UE_BUILD_DEVELOPMENT) #endif #ifndef WITH_IOS_SIMULATOR #define WITH_IOS_SIMULATOR 0 #endif #define UE_DEBUG_BREAK_IMPL() PLATFORM_BREAK() #ifdef __OBJC__ #if !__has_feature(objc_arc)"
  },
  {
    "label": "FScopeAutoreleasePool()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "FScopeAutoreleasePool()"
  },
  {
    "label": "PREPROCESSOR_JOIN()",
    "kind": "Method",
    "detail": "Function ([ Pool release ] ; } private : NSAutoreleasePool* Pool ; } ; # define SCOPED_AUTORELEASE_POOL const FScopeAutoreleasePool)",
    "insertText": "PREPROCESSOR_JOIN(Pool,__LINE__)"
  },
  {
    "label": "PlatformInit()",
    "kind": "Method",
    "detail": "Function (# endif # endif struct FApplePlatformMisc : public FGenericPlatformMisc { void)",
    "insertText": "PlatformInit()"
  },
  {
    "label": "GetEnvironmentVariable()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetEnvironmentVariable(const TCHAR* VariableName)"
  },
  {
    "label": "IsDebuggerPresent()",
    "kind": "Method",
    "detail": "Function (# if ! UE_BUILD_SHIPPING bool)",
    "insertText": "IsDebuggerPresent()"
  },
  {
    "label": "MemoryBarrier()",
    "kind": "Method",
    "detail": "Function (# endif void)",
    "insertText": "MemoryBarrier()"
  },
  {
    "label": "__sync_synchronize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "__sync_synchronize()"
  },
  {
    "label": "LocalPrint()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "LocalPrint(const TCHAR* Message)"
  },
  {
    "label": "GetSystemErrorMessage()",
    "kind": "Method",
    "detail": "Function (const TCHAR*)",
    "insertText": "GetSystemErrorMessage(TCHAR* OutBuffer, int32 BufferCount, int32 Error)"
  },
  {
    "label": "NumberOfCores()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "NumberOfCores()"
  },
  {
    "label": "SupportsMultithreadedFileHandles()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SupportsMultithreadedFileHandles()"
  },
  {
    "label": "GetSystemFontBytes()",
    "kind": "Method",
    "detail": "Function (TArray<uint8>)",
    "insertText": "GetSystemFontBytes()"
  },
  {
    "label": "GetDefaultLocale()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetDefaultLocale()"
  },
  {
    "label": "GetDefaultLanguage()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetDefaultLanguage()"
  },
  {
    "label": "GetLocalCurrencyCode()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetLocalCurrencyCode()"
  },
  {
    "label": "GetLocalCurrencySymbol()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetLocalCurrencySymbol()"
  },
  {
    "label": "IsOSAtLeastVersion()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsOSAtLeastVersion(const uint32 MacOSVersion[3], const uint32 IOSVersion[3], const uint32 TVOSVersion[3])"
  },
  {
    "label": "BeginNamedEventFrame()",
    "kind": "Method",
    "detail": "Function (# if STATS | | ENABLE_STATNAMEDEVENTS | | APPLE_PROFILING_ENABLED void)",
    "insertText": "BeginNamedEventFrame()"
  },
  {
    "label": "BeginNamedEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginNamedEvent(const struct FColor& Color, const TCHAR* Text)"
  },
  {
    "label": "BeginNamedEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginNamedEvent(const struct FColor& Color, const ANSICHAR* Text)"
  },
  {
    "label": "EndNamedEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EndNamedEvent()"
  },
  {
    "label": "CustomNamedStat()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CustomNamedStat(const TCHAR* Text, float Value, const TCHAR* Graph, const TCHAR* Unit)"
  },
  {
    "label": "CustomNamedStat()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CustomNamedStat(const ANSICHAR* Text, float Value, const ANSICHAR* Graph, const ANSICHAR* Unit)"
  },
  {
    "label": "CreateAutoreleasePool()",
    "kind": "Method",
    "detail": "Function (# endif void*)",
    "insertText": "CreateAutoreleasePool()"
  },
  {
    "label": "ReleaseAutoreleasePool()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseAutoreleasePool(void *Pool)"
  }
]