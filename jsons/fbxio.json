[
  {
    "label": "FbxIO",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FbxIO"
  },
  {
    "label": "FbxReader",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FbxReader"
  },
  {
    "label": "FbxWriter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FbxWriter"
  },
  {
    "label": "FbxFile",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FbxFile"
  },
  {
    "label": "FbxStream",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FbxStream"
  },
  {
    "label": "FbxXRefManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FbxXRefManager"
  },
  {
    "label": "FBXSDK_DLL",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBXSDK_DLL"
  },
  {
    "label": "FbxAutoResetXRefManager",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FbxAutoResetXRefManager"
  },
  {
    "label": "BinaryType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "BinaryType"
  },
  {
    "label": "InternalImpl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "InternalImpl"
  },
  {
    "label": "InternalImpl32",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "InternalImpl32"
  },
  {
    "label": "InternalImpl64",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "InternalImpl64"
  },
  {
    "label": "FbxFileVersionStrToInt()",
    "kind": "Method",
    "detail": "Function (# ifndef _FBXSDK_FILEIO_FBX_IO_H_ # define _FBXSDK_FILEIO_FBX_IO_H_ # include<fbxsdk / fbxsdk_def . h> # include<fbxsdk / core / base / fbxstring . h> # include<fbxsdk / core / base / fbxtime . h> # include<fbxsdk / core / base / fbxstatus . h> # include<fbxsdk / fileio / fbxcallbacks . h> # include<fbxsdk / fbxsdk_nsbegin . h> class FbxIO ; class FbxReader ; class FbxWriter ; class FbxFile ; class FbxStream ; class FbxXRefManager ; # define FBX_FILE_VERSION_2000 2 0 0 0 # define FBX_FILE_VERSION_2001 2 0 0 1 # define FBX_FILE_VERSION_3000 3 0 0 0 # define FBX_FILE_VERSION_3001 3 0 0 1 # define FBX_FILE_VERSION_4000 4 0 0 0 # define FBX_FILE_VERSION_4001 4 0 0 1 # define FBX_FILE_VERSION_4050 4 0 5 0 # define FBX_FILE_VERSION_5000 5 0 0 0 # define FBX_FILE_VERSION_5800 5 8 0 0 # define FBX_FILE_VERSION_6000 6 0 0 0 # define FBX_FILE_VERSION_6100 6 1 0 0 # define FBX_FILE_VERSION_7000 7 0 0 0 # define FBX_FILE_VERSION_7099 7 0 9 9 # define FBX_FILE_VERSION_7100 7 1 0 0 # define FBX_FILE_VERSION_7200 7 2 0 0 # define FBX_FILE_VERSION_7300 7 3 0 0 # define FBX_FILE_VERSION_7400 7 4 0 0 # define FBX_FILE_VERSION_7500 7 5 0 0 # define FBX_FILE_VERSION_7700 7 7 0 0 # define FBX_FILE_VERSION_7600 7 6 0 0 # define FBX_53_MB55_COMPATIBLE \" FBX53_MB55 \" # define FBX_60_COMPATIBLE \" FBX60_MB60 \" # define FBX_2005_08_COMPATIBLE \" FBX200508_MB70 \" # define FBX_2006_02_COMPATIBLE \" FBX200602_MB75 \" # define FBX_2006_08_COMPATIBLE \" FBX200608 \" # define FBX_2006_11_COMPATIBLE \" FBX200611 \" # define FBX_2009_00_COMPATIBLE \" FBX200900 \" # define FBX_2009_00_V7_COMPATIBLE \" FBX200900v7 \" # define FBX_2010_00_COMPATIBLE \" FBX201000 \" # define FBX_2011_00_COMPATIBLE \" FBX201100 \" # define FBX_2012_00_COMPATIBLE \" FBX201200 \" # define FBX_2013_00_COMPATIBLE \" FBX201300 \" # define FBX_2014_00_COMPATIBLE \" FBX201400 \" # define FBX_2016_00_COMPATIBLE \" FBX201600 \" # define FBX_2018_00_COMPATIBLE \" FBX201800 \" # define FBX_2019_00_COMPATIBLE \" FBX201900 \" # define FBX_2020_00_COMPATIBLE \" FBX202000 \" # define FBX_DEFAULT_FILE_VERSION FBX_FILE_VERSION_7700 # define FBX_DEFAULT_FILE_COMPATIBILITY FBX_2020_00_COMPATIBLE FBXSDK_DLL int)",
    "insertText": "FbxFileVersionStrToInt(const char* pFileVersion)"
  },
  {
    "label": "FbxIODefaultRenderResolution()",
    "kind": "Method",
    "detail": "Function (enum { FBX_NO_SECTION = - 1,FBX_MAIN_SECTION,FBX_EXTENSION_SECTION_0 } ; class FBXSDK_DLL FbxIODefaultRenderResolution { public : bool mIsOK ; FbxString mCameraName ; FbxString mResolutionMode ; double mResolutionW ; double mResolutionH ;)",
    "insertText": "FbxIODefaultRenderResolution()"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "FbxIOFileHeaderInfo()",
    "kind": "Method",
    "detail": "Function (} ; class FBXSDK_DLL FbxIOFileHeaderInfo { public :)",
    "insertText": "FbxIOFileHeaderInfo()"
  },
  {
    "label": "ReadExtendedHeaderInformation()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ReadExtendedHeaderInformation(FbxIO*)"
  },
  {
    "label": "FbxAutoResetXRefManager()",
    "kind": "Method",
    "detail": "Function (FbxIODefaultRenderResolution mDefaultRenderResolution ; int mFileVersion ; bool mCreationTimeStampPresent ; FbxLocalTime mCreationTimeStamp ; FbxString mCreator ; bool mIOPlugin ; bool mPLE ; } ; class FBXSDK_DLL FbxIO { public : struct FbxAutoResetXRefManager { FbxIO* mFbx ; const FbxXRefManager* mXRefManager ;)",
    "insertText": "FbxAutoResetXRefManager(FbxIO* pFbx, FbxXRefManager& pXRefManager) : mFbx(pFbx) , mXRefManager(NULL)"
  },
  {
    "label": "ProjectGetXRefManager()",
    "kind": "Method",
    "detail": "Function (mXRefManager = mFbx ->)",
    "insertText": "ProjectGetXRefManager()"
  },
  {
    "label": "ProjectSetXRefManager()",
    "kind": "Method",
    "detail": "Function (mFbx ->)",
    "insertText": "ProjectSetXRefManager(&pXRefManager)"
  },
  {
    "label": "FbxAutoResetXRefManager()",
    "kind": "Method",
    "detail": "Function (} } ~)",
    "insertText": "FbxAutoResetXRefManager()"
  },
  {
    "label": "ProjectSetXRefManager()",
    "kind": "Method",
    "detail": "Function (mFbx ->)",
    "insertText": "ProjectSetXRefManager(mXRefManager)"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (} } } ; enum BinaryType { BinaryNormal,BinaryLarge } ; FbxIO*)",
    "insertText": "Create(BinaryType pBinaryType, FbxStatus& pStatus)"
  },
  {
    "label": "FbxIO()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FbxIO(BinaryType pBinaryType, FbxStatus& pStatus)"
  },
  {
    "label": "FbxIO()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FbxIO()"
  },
  {
    "label": "ProjectOpen()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ProjectOpen(void* pAddress, FbxULong pMaxLength, FbxReader* pReader, bool pCheckCRC = false, bool pOpenMainSection = true, FbxIOFileHeaderInfo* pFileHeaderInfo = NULL)"
  },
  {
    "label": "ProjectOpen()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ProjectOpen(const char* pName, FbxReader* pReader, bool pCheckCRC = false, bool pOpenMainSection = true, FbxIOFileHeaderInfo* pFileHeaderInfo = NULL)"
  },
  {
    "label": "ProjectOpen()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ProjectOpen(FbxStream* pStream, void* pStreamData, FbxReader* pReader, bool pCheckCRC = false, bool pOpenMainSection = true, FbxIOFileHeaderInfo* pFileHeaderInfo = NULL)"
  },
  {
    "label": "ProjectOpenDirect()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ProjectOpenDirect(const char* pName, FbxReader* pReader, bool pCheckCRC = false, bool pOpenMainSection = true, FbxIOFileHeaderInfo* pFileHeaderInfo = NULL)"
  },
  {
    "label": "ProjectCreate()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ProjectCreate(void* pAddress, FbxUInt pSize, FbxWriter* pWriter, bool pBinary, bool pEncrypted, FbxIOFileHeaderInfo* pFileHeaderInfo = NULL)"
  },
  {
    "label": "ProjectCreate()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ProjectCreate(const char* pName, FbxWriter* pWriter, bool pBinary, bool pEncrypted, FbxIOFileHeaderInfo* pFileHeaderInfo = NULL)"
  },
  {
    "label": "ProjectCreate()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ProjectCreate(FbxStream* pStream, void* pStreamData, FbxWriter* pWriter, bool pBinary, bool pEncrypted, FbxIOFileHeaderInfo* pFileHeaderInfo = NULL)"
  },
  {
    "label": "ProjectCreateDirect()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ProjectCreateDirect(const char* pName, FbxWriter* pWriter, bool pBinary, bool pEncrypted, FbxIOFileHeaderInfo* pFileHeaderInfo = NULL)"
  },
  {
    "label": "ProjectCreateEmpty()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ProjectCreateEmpty(const char* pName, FbxWriter* pWriter, int pVersion, bool pBinary, bool pEncrypted)"
  },
  {
    "label": "ProjectCreateEmpty()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ProjectCreateEmpty(FbxStream* pStream, void* pStreamData, FbxWriter* pWriter, int pVersion, bool pBinary, bool pEncrypted)"
  },
  {
    "label": "ProjectWrite_BeginFileHeader()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ProjectWrite_BeginFileHeader()"
  },
  {
    "label": "ProjectWrite_BeginExtendedHeader()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ProjectWrite_BeginExtendedHeader()"
  },
  {
    "label": "ProjectWrite_WriteExtendedHeader()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ProjectWrite_WriteExtendedHeader(const FbxIOFileHeaderInfo* pExtendedHeader)"
  },
  {
    "label": "ProjectWrite_EndExtendedHeader()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ProjectWrite_EndExtendedHeader()"
  },
  {
    "label": "ProjectWrite_EndFileHeader()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ProjectWrite_EndFileHeader()"
  },
  {
    "label": "ProjectClose()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ProjectClose(void** pData=0, size_t* pSize=0)"
  },
  {
    "label": "ProjectSetXRefManager()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProjectSetXRefManager(const FbxXRefManager*)"
  },
  {
    "label": "ProjectCreateEmbeddedFolder()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ProjectCreateEmbeddedFolder(const FbxXRefManager& pXRefManager, FbxString& pCreatedFolder, const char* pUserDefinedFolder = NULL)"
  },
  {
    "label": "SetEmbedded()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetEmbedded(bool pValue)"
  },
  {
    "label": "SetEmbeddingExtractionFolder()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetEmbeddingExtractionFolder(const char* pExtractionFolder)"
  },
  {
    "label": "GetEmbeddingExtractionFolder()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "GetEmbeddingExtractionFolder()"
  },
  {
    "label": "IsEmbedded()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsEmbedded()"
  },
  {
    "label": "IsBinary()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsBinary()"
  },
  {
    "label": "IsEncrypted()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsEncrypted()"
  },
  {
    "label": "CheckCRC()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CheckCRC()"
  },
  {
    "label": "GetFileVersionNumber()",
    "kind": "Method",
    "detail": "Function (FbxUInt32)",
    "insertText": "GetFileVersionNumber()"
  },
  {
    "label": "CacheSize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CacheSize(FbxUInt32 pCacheSize)"
  },
  {
    "label": "CacheSize()",
    "kind": "Method",
    "detail": "Function (FbxUInt32)",
    "insertText": "CacheSize()"
  },
  {
    "label": "Fbx7Support()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Fbx7Support()"
  },
  {
    "label": "Fbx7Support()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Fbx7Support(bool pSupport)"
  },
  {
    "label": "CompressArrays()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CompressArrays()"
  },
  {
    "label": "CompressArrays()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CompressArrays(bool pCompress)"
  },
  {
    "label": "CompressMinimumSize()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "CompressMinimumSize()"
  },
  {
    "label": "CompressMinimumSize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CompressMinimumSize(int pSize)"
  },
  {
    "label": "CompressLevel()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "CompressLevel()"
  },
  {
    "label": "CompressLevel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CompressLevel(int pLevel)"
  },
  {
    "label": "ProjectOpenMainSection()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ProjectOpenMainSection()"
  },
  {
    "label": "ProjectGetExtensionSectionCount()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ProjectGetExtensionSectionCount()"
  },
  {
    "label": "ProjectOpenExtensionSection()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ProjectOpenExtensionSection(int pExtensionSectionIndex)"
  },
  {
    "label": "ProjectCreateExtensionSection()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ProjectCreateExtensionSection(bool pOverwriteLastExtensionSection = false)"
  },
  {
    "label": "ProjectCloseSection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProjectCloseSection()"
  },
  {
    "label": "ProjectGetCurrentSection()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ProjectGetCurrentSection()"
  },
  {
    "label": "ProjectGetCurrentSectionMode()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ProjectGetCurrentSectionMode()"
  },
  {
    "label": "ProjectGetCurrentSectionVersion()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ProjectGetCurrentSectionVersion()"
  },
  {
    "label": "ProjectGetSectionVersion()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ProjectGetSectionVersion(int pSection)"
  },
  {
    "label": "ProjectConvertVersionNumber()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProjectConvertVersionNumber(int pVersion, int& pMajor, int& pMinor, int& pRevision)"
  },
  {
    "label": "IsPasswordProtected()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsPasswordProtected()"
  },
  {
    "label": "CheckPassword()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CheckPassword(const char* pPassword)"
  },
  {
    "label": "WritePassword()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "WritePassword(const char* pPassword)"
  },
  {
    "label": "GetFilename()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "GetFilename()"
  },
  {
    "label": "GetDataDirectory()",
    "kind": "Method",
    "detail": "Function (FbxString)",
    "insertText": "GetDataDirectory(bool pAutoCreate = true)"
  },
  {
    "label": "GetMediaDirectory()",
    "kind": "Method",
    "detail": "Function (FbxString)",
    "insertText": "GetMediaDirectory(bool pCreate = false, const char* pUserDefinedFolder = NULL)"
  },
  {
    "label": "GetContainerTemplateDirectory()",
    "kind": "Method",
    "detail": "Function (FbxString)",
    "insertText": "GetContainerTemplateDirectory(const char* pTemplateName, bool pCreate)"
  },
  {
    "label": "GetRelativePath()",
    "kind": "Method",
    "detail": "Function (char*)",
    "insertText": "GetRelativePath(const char* pPath)"
  },
  {
    "label": "GetRelativeFilePath()",
    "kind": "Method",
    "detail": "Function (char*)",
    "insertText": "GetRelativeFilePath(const char* pFilePath)"
  },
  {
    "label": "GetFullPath()",
    "kind": "Method",
    "detail": "Function (char*)",
    "insertText": "GetFullPath(const char* pRelativePath)"
  },
  {
    "label": "GetFullFilePath()",
    "kind": "Method",
    "detail": "Function (char*)",
    "insertText": "GetFullFilePath(const char* pRelativeFilePath)"
  },
  {
    "label": "GetTmpProjectName()",
    "kind": "Method",
    "detail": "Function (char*)",
    "insertText": "GetTmpProjectName(const char* pName)"
  },
  {
    "label": "SwapFromTmpProject()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SwapFromTmpProject(const char* pName, char* pError=NULL, int pErrorSize=0)"
  },
  {
    "label": "FieldReadResetPosition()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FieldReadResetPosition()"
  },
  {
    "label": "FieldGetCount()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "FieldGetCount()"
  },
  {
    "label": "FieldGetName()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "FieldGetName(int pFieldIndex)"
  },
  {
    "label": "FieldGetInstanceCount()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "FieldGetInstanceCount(const char* pFieldName)"
  },
  {
    "label": "FieldReadBegin()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "FieldReadBegin(int pFieldIndex, int pInstance)"
  },
  {
    "label": "FieldReadBegin()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "FieldReadBegin(const char* pFieldName)"
  },
  {
    "label": "FieldReadBegin()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "FieldReadBegin(const char* pFieldName, int pInstance)"
  },
  {
    "label": "FieldReadEnd()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FieldReadEnd()"
  },
  {
    "label": "FieldReadIsBlock()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "FieldReadIsBlock()"
  },
  {
    "label": "FieldReadBlockBegin()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "FieldReadBlockBegin()"
  },
  {
    "label": "FieldReadBlockEnd()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FieldReadBlockEnd()"
  },
  {
    "label": "FieldReadGetCount()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "FieldReadGetCount()"
  },
  {
    "label": "FieldReadGetRemain()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "FieldReadGetRemain()"
  },
  {
    "label": "FieldReadGetType()",
    "kind": "Method",
    "detail": "Function (char)",
    "insertText": "FieldReadGetType()"
  },
  {
    "label": "FieldReadCH()",
    "kind": "Method",
    "detail": "Function (char)",
    "insertText": "FieldReadCH()"
  },
  {
    "label": "FieldReadCH()",
    "kind": "Method",
    "detail": "Function (char)",
    "insertText": "FieldReadCH(const char* pFieldName, char pDefault=0)"
  },
  {
    "label": "FieldReadC()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "FieldReadC()"
  },
  {
    "label": "FieldReadC()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "FieldReadC(const char* pFieldName, const char* pDefault=\"\")"
  },
  {
    "label": "FieldReadS()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "FieldReadS()"
  },
  {
    "label": "FieldReadS()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "FieldReadS(const char* pFieldName, const char* pDefault=\"\")"
  },
  {
    "label": "FieldReadB()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "FieldReadB()"
  },
  {
    "label": "FieldReadB()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "FieldReadB(const char* pFieldName, bool pDefault = false)"
  },
  {
    "label": "FieldReadI()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "FieldReadI()"
  },
  {
    "label": "FieldReadI()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "FieldReadI(const char* pFieldName, int pDefault=0)"
  },
  {
    "label": "FieldReadLL()",
    "kind": "Method",
    "detail": "Function (FbxLongLong)",
    "insertText": "FieldReadLL()"
  },
  {
    "label": "FieldReadLL()",
    "kind": "Method",
    "detail": "Function (FbxLongLong)",
    "insertText": "FieldReadLL(const char* pFieldName, FbxLongLong pDefault=0)"
  },
  {
    "label": "FieldReadF()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "FieldReadF()"
  },
  {
    "label": "FieldReadF()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "FieldReadF(const char* pFieldName, float pDefault=0)"
  },
  {
    "label": "FieldReadT()",
    "kind": "Method",
    "detail": "Function (FbxTime)",
    "insertText": "FieldReadT(const char* pFieldName)"
  },
  {
    "label": "FieldReadT()",
    "kind": "Method",
    "detail": "Function (FbxTime)",
    "insertText": "FieldReadT()"
  },
  {
    "label": "FieldReadTS()",
    "kind": "Method",
    "detail": "Function (FbxTimeSpan)",
    "insertText": "FieldReadTS(const char* pFieldName)"
  },
  {
    "label": "FieldReadTS()",
    "kind": "Method",
    "detail": "Function (FbxTimeSpan)",
    "insertText": "FieldReadTS()"
  },
  {
    "label": "FieldReadFn()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FieldReadFn(float* pValue, FbxUInt pn)"
  },
  {
    "label": "FieldRead3F()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FieldRead3F(float* pValue)"
  },
  {
    "label": "FieldRead4F()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FieldRead4F(float* pValue)"
  },
  {
    "label": "FieldReadFn()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FieldReadFn(const char* pFieldName, float* pValue, const float *pDefault, FbxUInt pn)"
  },
  {
    "label": "FieldRead3F()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FieldRead3F(const char* pFieldName, float* pValue, const float* pDefault=NULL)"
  },
  {
    "label": "FieldRead4F()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FieldRead4F(const char* pFieldName, float* pValue, const float* pDefault=NULL)"
  },
  {
    "label": "FieldReadDn()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FieldReadDn(double* pValue, FbxUInt pn)"
  },
  {
    "label": "FieldRead3D()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FieldRead3D(double* pValue)"
  },
  {
    "label": "FieldRead4D()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FieldRead4D(double* pValue)"
  },
  {
    "label": "FieldReadDn()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FieldReadDn(const char* pFieldName, double* pValue, const double *pDefault, FbxUInt pn)"
  },
  {
    "label": "FieldRead3D()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FieldRead3D(const char* pFieldName, double* pValue, const double* pDefault=NULL)"
  },
  {
    "label": "FieldRead4D()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FieldRead4D(const char* pFieldName, double* pValue, const double* pDefault=NULL)"
  },
  {
    "label": "FieldReadR()",
    "kind": "Method",
    "detail": "Function (void*)",
    "insertText": "FieldReadR(int* pByteSize)"
  },
  {
    "label": "FieldReadR()",
    "kind": "Method",
    "detail": "Function (void*)",
    "insertText": "FieldReadR(const char* pFieldName,int* pByteSize)"
  },
  {
    "label": "FieldReadByte()",
    "kind": "Method",
    "detail": "Function (FbxChar)",
    "insertText": "FieldReadByte()"
  },
  {
    "label": "FieldReadByte()",
    "kind": "Method",
    "detail": "Function (FbxChar)",
    "insertText": "FieldReadByte(const char* pFieldName, FbxChar pDefault=0)"
  },
  {
    "label": "FieldReadUByte()",
    "kind": "Method",
    "detail": "Function (FbxUChar)",
    "insertText": "FieldReadUByte()"
  },
  {
    "label": "FieldReadUByte()",
    "kind": "Method",
    "detail": "Function (FbxUChar)",
    "insertText": "FieldReadUByte(const char* pFieldName, FbxUChar pDefault=0)"
  },
  {
    "label": "FieldReadShort()",
    "kind": "Method",
    "detail": "Function (FbxShort)",
    "insertText": "FieldReadShort()"
  },
  {
    "label": "FieldReadShort()",
    "kind": "Method",
    "detail": "Function (FbxShort)",
    "insertText": "FieldReadShort(const char* pFieldName, FbxShort pDefault=0)"
  },
  {
    "label": "FieldReadUShort()",
    "kind": "Method",
    "detail": "Function (FbxUShort)",
    "insertText": "FieldReadUShort()"
  },
  {
    "label": "FieldReadUShort()",
    "kind": "Method",
    "detail": "Function (FbxUShort)",
    "insertText": "FieldReadUShort(const char* pFieldName, FbxUShort pDefault=0)"
  },
  {
    "label": "FieldReadUI()",
    "kind": "Method",
    "detail": "Function (unsigned int)",
    "insertText": "FieldReadUI()"
  },
  {
    "label": "FieldReadUI()",
    "kind": "Method",
    "detail": "Function (unsigned int)",
    "insertText": "FieldReadUI(const char* pFieldName, unsigned int pDefault=0)"
  },
  {
    "label": "FieldReadULL()",
    "kind": "Method",
    "detail": "Function (FbxULongLong)",
    "insertText": "FieldReadULL()"
  },
  {
    "label": "FieldReadULL()",
    "kind": "Method",
    "detail": "Function (FbxULongLong)",
    "insertText": "FieldReadULL(const char* pFieldName, FbxULongLong pDefault=0)"
  },
  {
    "label": "FieldReadArraySBytes()",
    "kind": "Method",
    "detail": "Function (const FbxChar*)",
    "insertText": "FieldReadArraySBytes(int &pCount)"
  },
  {
    "label": "FieldReadArrayShort()",
    "kind": "Method",
    "detail": "Function (const FbxShort*)",
    "insertText": "FieldReadArrayShort(int &pCount)"
  },
  {
    "label": "FieldReadArrayUShort()",
    "kind": "Method",
    "detail": "Function (const FbxUShort*)",
    "insertText": "FieldReadArrayUShort(int &pCount)"
  },
  {
    "label": "FieldReadArrayUI()",
    "kind": "Method",
    "detail": "Function (const unsigned int*)",
    "insertText": "FieldReadArrayUI(int &pCount)"
  },
  {
    "label": "FieldReadArrayULL()",
    "kind": "Method",
    "detail": "Function (const FbxULongLong*)",
    "insertText": "FieldReadArrayULL(int &pCount)"
  },
  {
    "label": "FieldReadArray()",
    "kind": "Method",
    "detail": "Function (const FbxChar*)",
    "insertText": "FieldReadArray(int &pCount, const FbxChar*)"
  },
  {
    "label": "FieldReadArray()",
    "kind": "Method",
    "detail": "Function (const FbxShort*)",
    "insertText": "FieldReadArray(int &pCount, const FbxShort*)"
  },
  {
    "label": "FieldReadArray()",
    "kind": "Method",
    "detail": "Function (const FbxUShort*)",
    "insertText": "FieldReadArray(int &pCount, const FbxUShort*)"
  },
  {
    "label": "FieldReadArray()",
    "kind": "Method",
    "detail": "Function (const unsigned int*)",
    "insertText": "FieldReadArray(int &pCount, const unsigned int*)"
  },
  {
    "label": "FieldReadArray()",
    "kind": "Method",
    "detail": "Function (const FbxULongLong*)",
    "insertText": "FieldReadArray(int &pCount, const FbxULongLong*)"
  },
  {
    "label": "FieldReadEmbeddedFile()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "FieldReadEmbeddedFile(FbxString& pFileName, FbxString& pRelativeFileName, const char* pEmbeddedMediaDirectory = \"\", bool *pIsFileCreated = NULL, FbxClassId pExpectedTypeHint = FbxClassId())"
  },
  {
    "label": "FieldReadArrayD()",
    "kind": "Method",
    "detail": "Function (const double*)",
    "insertText": "FieldReadArrayD(int &pCount)"
  },
  {
    "label": "FieldReadArrayF()",
    "kind": "Method",
    "detail": "Function (const float*)",
    "insertText": "FieldReadArrayF(int &pCount)"
  },
  {
    "label": "FieldReadArrayI()",
    "kind": "Method",
    "detail": "Function (const int*)",
    "insertText": "FieldReadArrayI(int &pCount)"
  },
  {
    "label": "FieldReadArrayLL()",
    "kind": "Method",
    "detail": "Function (const FbxLongLong*)",
    "insertText": "FieldReadArrayLL(int &pCount)"
  },
  {
    "label": "FieldReadArrayB()",
    "kind": "Method",
    "detail": "Function (const bool*)",
    "insertText": "FieldReadArrayB(int &pCount)"
  },
  {
    "label": "FieldReadArrayBytes()",
    "kind": "Method",
    "detail": "Function (const FbxUChar*)",
    "insertText": "FieldReadArrayBytes(int &pCount)"
  },
  {
    "label": "FieldReadArray()",
    "kind": "Method",
    "detail": "Function (const int*)",
    "insertText": "FieldReadArray(int& pCount, const int*)"
  },
  {
    "label": "FieldReadArray()",
    "kind": "Method",
    "detail": "Function (const float*)",
    "insertText": "FieldReadArray(int& pCount, const float*)"
  },
  {
    "label": "FieldReadArray()",
    "kind": "Method",
    "detail": "Function (const double*)",
    "insertText": "FieldReadArray(int& pCount, const double*)"
  },
  {
    "label": "FieldReadArray()",
    "kind": "Method",
    "detail": "Function (const FbxLongLong*)",
    "insertText": "FieldReadArray(int& pCount, const FbxLongLong*)"
  },
  {
    "label": "FieldReadArray()",
    "kind": "Method",
    "detail": "Function (const bool*)",
    "insertText": "FieldReadArray(int& pCount, const bool*)"
  },
  {
    "label": "FieldReadArray()",
    "kind": "Method",
    "detail": "Function (const FbxUChar*)",
    "insertText": "FieldReadArray(int& pCount, const FbxUChar*)"
  },
  {
    "label": "FieldWriteBegin()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FieldWriteBegin(const char* pFieldName)"
  },
  {
    "label": "FieldWriteEnd()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FieldWriteEnd()"
  },
  {
    "label": "FieldWriteBlockBegin()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FieldWriteBlockBegin()"
  },
  {
    "label": "FieldWriteObjectBegin()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FieldWriteObjectBegin(const char* pObjectType, const char* pName, const char* pSubType=NULL)"
  },
  {
    "label": "FieldWriteObjectEnd()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FieldWriteObjectEnd()"
  },
  {
    "label": "FieldWriteBlockBegin()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FieldWriteBlockBegin(const char* pFileName)"
  },
  {
    "label": "FieldWriteBlockEnd()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FieldWriteBlockEnd()"
  },
  {
    "label": "FieldWriteCH()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FieldWriteCH(char pValue)"
  },
  {
    "label": "FieldWriteCH()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FieldWriteCH(const char* pFieldName, char pValue)"
  },
  {
    "label": "FieldWriteC()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FieldWriteC(const char* pValue)"
  },
  {
    "label": "FieldWriteC()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FieldWriteC(const char* pFieldName, const char* pValue)"
  },
  {
    "label": "FieldWriteS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FieldWriteS(const char* pValue)"
  },
  {
    "label": "FieldWriteS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FieldWriteS(const FbxString& pValue)"
  },
  {
    "label": "FieldWriteS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FieldWriteS(const char* pFieldName, const char* pValue)"
  },
  {
    "label": "FieldWriteS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FieldWriteS(const char* pFieldName, const FbxString& pValue)"
  },
  {
    "label": "FieldWriteB()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FieldWriteB(bool pValue)"
  },
  {
    "label": "FieldWriteB()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FieldWriteB(const char* pFieldName, bool pValue)"
  },
  {
    "label": "FieldWriteI()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FieldWriteI(int pValue)"
  },
  {
    "label": "FieldWriteI()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FieldWriteI(const char* pFieldName, int pValue)"
  },
  {
    "label": "FieldWriteLL()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FieldWriteLL(FbxLongLong pValue)"
  },
  {
    "label": "FieldWriteLL()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FieldWriteLL(const char* pFieldName, FbxLongLong pValue)"
  },
  {
    "label": "FieldWriteF()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FieldWriteF(float pValue)"
  },
  {
    "label": "FieldWriteF()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FieldWriteF(const char* pFieldName, float pValue)"
  },
  {
    "label": "FieldWriteD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FieldWriteD(double pValue)"
  },
  {
    "label": "FieldWriteD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FieldWriteD(const char* pFieldName, double pValue)"
  },
  {
    "label": "FieldWriteT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FieldWriteT(FbxTime pTime)"
  },
  {
    "label": "FieldWriteT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FieldWriteT(const char* pFieldName,FbxTime pValue)"
  },
  {
    "label": "FieldWriteTS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FieldWriteTS(FbxTimeSpan pTimeSpan)"
  },
  {
    "label": "FieldWriteTS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FieldWriteTS(const char* pFieldName,FbxTimeSpan pValue)"
  },
  {
    "label": "FieldWriteFn()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FieldWriteFn(const float* pValue, FbxUInt pn)"
  },
  {
    "label": "FieldWriteFn()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FieldWriteFn(const char* pFieldName, const float* pValue, FbxUInt pn)"
  },
  {
    "label": "FieldWrite3F()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FieldWrite3F(const float* pValue)"
  },
  {
    "label": "FieldWrite3F()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FieldWrite3F(const char* pFieldName, const float* pValue)"
  },
  {
    "label": "FieldWrite4F()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FieldWrite4F(const float* pValue)"
  },
  {
    "label": "FieldWrite4F()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FieldWrite4F(const char* pFieldName, const float* pValue)"
  },
  {
    "label": "FieldWriteDn()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FieldWriteDn(const double* pValue, FbxUInt pn)"
  },
  {
    "label": "FieldWriteDn()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FieldWriteDn(const char* pFieldName, const double* pValue, FbxUInt pn)"
  },
  {
    "label": "FieldWrite3D()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FieldWrite3D(const double* pValue)"
  },
  {
    "label": "FieldWrite3D()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FieldWrite3D(const char* pFieldName, const double* pValue)"
  },
  {
    "label": "FieldWrite4D()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FieldWrite4D(const double* pValue)"
  },
  {
    "label": "FieldWrite4D()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FieldWrite4D(const char* pFieldName, const double* pValue)"
  },
  {
    "label": "FieldWriteArrayD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FieldWriteArrayD(int n, const double* pValue, int pSize = 1, int pStride = 0)"
  },
  {
    "label": "FieldWriteArrayF()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FieldWriteArrayF(int n, const float* pValue, int pSize = 1, int pStride = 0)"
  },
  {
    "label": "FieldWriteArrayI()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FieldWriteArrayI(int n, const int* pValue, int pSize = 1, int pStride = 0)"
  },
  {
    "label": "FieldWriteArrayLL()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FieldWriteArrayLL(int n, const FbxLongLong* pValue, int pSize = 1, int pStride = 0)"
  },
  {
    "label": "FieldWriteArrayB()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FieldWriteArrayB(int n, const bool* pValue, int pSize = 1, int pStride = 0)"
  },
  {
    "label": "FieldWriteArrayBytes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FieldWriteArrayBytes(int n, const FbxUChar* pValue, int pSize = 1, int pStride = 0)"
  },
  {
    "label": "FieldWriteR()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FieldWriteR(const void* pRawData, int pByteSize)"
  },
  {
    "label": "FieldWriteR()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FieldWriteR(const char* pFieldName, const void* pRawData, int pByteSize)"
  },
  {
    "label": "FieldWriteByte()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FieldWriteByte(FbxChar pValue)"
  },
  {
    "label": "FieldWriteByte()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FieldWriteByte(const char* pFieldName, FbxChar pValue)"
  },
  {
    "label": "FieldWriteUByte()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FieldWriteUByte(FbxUChar pValue)"
  },
  {
    "label": "FieldWriteUByte()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FieldWriteUByte(const char* pFieldName, FbxUChar pValue)"
  },
  {
    "label": "FieldWriteShort()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FieldWriteShort(FbxShort pValue)"
  },
  {
    "label": "FieldWriteShort()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FieldWriteShort(const char* pFieldName, FbxShort pValue)"
  },
  {
    "label": "FieldWriteUShort()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FieldWriteUShort(FbxUShort pValue)"
  },
  {
    "label": "FieldWriteUShort()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FieldWriteUShort(const char* pFieldName, FbxUShort pValue)"
  },
  {
    "label": "FieldWriteUI()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FieldWriteUI(unsigned int pValue)"
  },
  {
    "label": "FieldWriteUI()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FieldWriteUI(const char* pFieldName, unsigned int pValue)"
  },
  {
    "label": "FieldWriteULL()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FieldWriteULL(FbxULongLong pValue)"
  },
  {
    "label": "FieldWriteULL()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FieldWriteULL(const char* pFieldName, FbxULongLong pValue)"
  },
  {
    "label": "FieldWriteArraySBytes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FieldWriteArraySBytes(int n, const FbxChar* pValue, int pSize = 1, int pStride = 0)"
  },
  {
    "label": "FieldWriteArrayShort()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FieldWriteArrayShort(int n, const FbxShort* pValue, int pSize = 1, int pStride = 0)"
  },
  {
    "label": "FieldWriteArrayUShort()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FieldWriteArrayUShort(int n, const FbxUShort* pValue, int pSize = 1, int pStride = 0)"
  },
  {
    "label": "FieldWriteArrayUI()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FieldWriteArrayUI(int n, const unsigned int* pValue, int pSize = 1, int pStride = 0)"
  },
  {
    "label": "FieldWriteArrayULL()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FieldWriteArrayULL(int n, const FbxULongLong* pValue, int pSize = 1, int pStride = 0)"
  },
  {
    "label": "GetFieldRMaxChunkSize()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "GetFieldRMaxChunkSize()"
  },
  {
    "label": "FieldWriteObjectReference()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FieldWriteObjectReference(const char* pName)"
  },
  {
    "label": "FieldWriteObjectReference()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FieldWriteObjectReference(const char* pFieldName, const char* pName)"
  },
  {
    "label": "FieldWriteEmbeddedFile()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "FieldWriteEmbeddedFile(FbxString pFileName, FbxString pRelativeFileName, FbxClassId pTypeHint = FbxClassId())"
  },
  {
    "label": "WriteComments()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WriteComments(const char* pFieldName)"
  },
  {
    "label": "StdoutDump()",
    "kind": "Method",
    "detail": "Function (# ifdef _DEBUG void)",
    "insertText": "StdoutDump()"
  },
  {
    "label": "SetEmbeddedFileCallback()",
    "kind": "Method",
    "detail": "Function (# endif void)",
    "insertText": "SetEmbeddedFileCallback(FbxEmbeddedFileCallback* pCallbackObj)"
  },
  {
    "label": "GetHaveEmbeddedFileCallback()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetHaveEmbeddedFileCallback()"
  },
  {
    "label": "GetHaveLoadedEmbededFile()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetHaveLoadedEmbededFile()"
  },
  {
    "label": "GetMemoryFileInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetMemoryFileInfo(void** pMemPtr, size_t& pSize)"
  },
  {
    "label": "IsBeforeVersion6()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsBeforeVersion6()"
  },
  {
    "label": "SetIsBeforeVersion6()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetIsBeforeVersion6(bool pIsBeforeVersion6)"
  },
  {
    "label": "ProjectOpen()",
    "kind": "Method",
    "detail": "Function (# ifndef DOXYGEN_SHOULD_SKIP_THIS bool)",
    "insertText": "ProjectOpen(FbxFile * pFile, FbxReader* pReader, bool pCheckCRC = false, bool pOpenMainSection = true, FbxIOFileHeaderInfo* pFileHeaderInfo = NULL)"
  },
  {
    "label": "GetStatus()",
    "kind": "Method",
    "detail": "Function (FbxStatus&)",
    "insertText": "GetStatus()"
  },
  {
    "label": "NeedTCConversion()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "NeedTCConversion()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (private : FbxIO&)",
    "insertText": "operator(const FbxIO& pOther)"
  },
  {
    "label": "ProjectClear()",
    "kind": "Method",
    "detail": "Function (FbxStatus& mStatus ; struct InternalImpl ; struct InternalImpl32 ; struct InternalImpl64 ; InternalImpl* mImpl ; void)",
    "insertText": "ProjectClear()"
  },
  {
    "label": "ProjectReset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProjectReset()"
  },
  {
    "label": "ProjectReadHeader()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ProjectReadHeader(bool pCheckASCIIHeader, bool pCheckCRC, bool pOpenMainSection, FbxIOFileHeaderInfo* pFileHeaderInfo)"
  },
  {
    "label": "ProjectReadExtendedHeader()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ProjectReadExtendedHeader(FbxInt64& pExtendedHeaderEnd, FbxIOFileHeaderInfo* pFileHeaderInfo)"
  },
  {
    "label": "BinaryReadHeader()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "BinaryReadHeader()"
  },
  {
    "label": "BinaryReadSectionPosition()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "BinaryReadSectionPosition()"
  },
  {
    "label": "ASCIIReadHeader()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ASCIIReadHeader()"
  },
  {
    "label": "ASCIIReadSectionPosition()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ASCIIReadSectionPosition()"
  },
  {
    "label": "ProjectWriteHeader()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ProjectWriteHeader(FbxIOFileHeaderInfo* pFileHeaderInfo)"
  },
  {
    "label": "ProjectWriteExtendedHeader()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ProjectWriteExtendedHeader(FbxIOFileHeaderInfo* pFileHeaderInfo)"
  },
  {
    "label": "BinaryWriteHeader()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BinaryWriteHeader()"
  },
  {
    "label": "ASCIIWriteHeader()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ASCIIWriteHeader()"
  },
  {
    "label": "ReadEncryptionKey()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReadEncryptionKey(char* pEncryptionKey)"
  },
  {
    "label": "WriteEncryptionKey()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WriteEncryptionKey(char* pEncryptionKey)"
  },
  {
    "label": "ProjectClearSection()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ProjectClearSection()"
  },
  {
    "label": "ProjectOpenSection()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ProjectOpenSection(int pSection)"
  },
  {
    "label": "BinaryReadSectionHeader()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "BinaryReadSectionHeader()"
  },
  {
    "label": "BinaryReadSectionFooter()",
    "kind": "Method",
    "detail": "Function (FbxInt64)",
    "insertText": "BinaryReadSectionFooter(unsigned char* pSourceCheck)"
  },
  {
    "label": "BinaryReadExtensionCode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "BinaryReadExtensionCode(FbxInt64 pFollowingSectionStart, FbxInt64& pSectionStart, FbxUInt32& pSectionVersion)"
  },
  {
    "label": "BinaryReadSectionPassword()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BinaryReadSectionPassword()"
  },
  {
    "label": "ProjectWriteSectionHeader()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ProjectWriteSectionHeader()"
  },
  {
    "label": "BinaryWriteSectionFooter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BinaryWriteSectionFooter()"
  },
  {
    "label": "BinaryWriteExtensionCode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "BinaryWriteExtensionCode(FbxInt64 pSectionStart, FbxUInt32 pSectionVersion)"
  },
  {
    "label": "GetCreationTime()",
    "kind": "Method",
    "detail": "Function (FbxString)",
    "insertText": "GetCreationTime()"
  },
  {
    "label": "GetMangledCreationTime()",
    "kind": "Method",
    "detail": "Function (FbxString)",
    "insertText": "GetMangledCreationTime()"
  },
  {
    "label": "SetCreationTime()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCreationTime(FbxString pCreationTime)"
  },
  {
    "label": "CreateSourceCheck()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateSourceCheck(unsigned char* lSourceCheck)"
  },
  {
    "label": "TestSourceCheck()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TestSourceCheck(unsigned char* pSourceCheck, unsigned char* pSourceCompany)"
  },
  {
    "label": "EncryptSourceCheck()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EncryptSourceCheck(unsigned char* pSourceCheck, unsigned char* pEncryptionData)"
  },
  {
    "label": "DecryptSourceCheck()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DecryptSourceCheck(unsigned char* pSourceCheck, const unsigned char* pEncryptionData)"
  },
  {
    "label": "EncryptPasswordV1()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EncryptPasswordV1(FbxString pOriginalPassword, FbxString &pEncryptedPassword)"
  },
  {
    "label": "DecryptPasswordV1()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DecryptPasswordV1(FbxString pEncryptedPassword, FbxString &pDecryptedPassword)"
  },
  {
    "label": "CheckValidityOfFieldName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CheckValidityOfFieldName(const char* pFieldName)"
  },
  {
    "label": "GetUnusedEmbeddedName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetUnusedEmbeddedName(const FbxString& pDirectory, const FbxString& pName, FbxString& pResult, bool pCreateSubdirectory)"
  },
  {
    "label": "GetDirectory()",
    "kind": "Method",
    "detail": "Function (FbxString)",
    "insertText": "GetDirectory(bool pAutoCreate, const char* pExtension)"
  }
]