[
  {
    "label": "FMaterialConflictData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMaterialConflictData"
  },
  {
    "label": "SFbxMaterialConflictWindow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SFbxMaterialConflictWindow"
  },
  {
    "label": "FMaterialConflictData()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" InputCoreTypes . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Input / Reply . h \" # include \" Widgets / SCompoundWidget . h \" # include \" Widgets / SWindow . h \" # include \" Widgets / Views / STableViewBase . h \" # include \" Widgets / Views / STableRow . h \" # include \" Widgets / Views / STreeView . h \" # include \" Widgets / SNullWidget . h \" # include \" Styling / AppStyle . h \" # include \" FbxCompareWindow . h \" # include \" FbxImporter . h \" class FMaterialConflictData : public FCompareRowData { public :)",
    "insertText": "FMaterialConflictData(TArray<FCompMaterial>& InSourceMaterials, TArray<FCompMaterial>& InResultMaterials, TArray<int32>& InRemapMaterials, TArray<bool>& InAutoRemapMaterials, TArray<bool>& InCustomRemapMaterials, bool InbIsPreviewConflict) : SourceMaterialIndex(INDEX_NONE) , ResultMaterialIndex(INDEX_NONE) , SourceMaterials(InSourceMaterials) , ResultMaterials(InResultMaterials) , RemapMaterials(InRemapMaterials) , AutoRemapMaterials(InAutoRemapMaterials) , CustomRemapMaterials(InCustomRemapMaterials) , bIsPreviewConflict(InbIsPreviewConflict)"
  },
  {
    "label": "FMaterialConflictData()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "FMaterialConflictData()"
  },
  {
    "label": "ConstructCellCurrent()",
    "kind": "Method",
    "detail": "Function (} int32 SourceMaterialIndex ; int32 ResultMaterialIndex ; TSharedRef<SWidget>)",
    "insertText": "ConstructCellCurrent()"
  },
  {
    "label": "ConstructCellFbx()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "ConstructCellFbx()"
  },
  {
    "label": "OnMouseButtonDown()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnMouseButtonDown(const FGeometry& MyGeometry, const FPointerEvent& MouseEvent, bool IsResultData)"
  },
  {
    "label": "AssignMaterialMatch()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AssignMaterialMatch(int32 InMatchMaterialIndex)"
  },
  {
    "label": "GetCellString()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetCellString(bool IsResultData)"
  },
  {
    "label": "GetCellTooltipString()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetCellTooltipString(bool IsResultData)"
  },
  {
    "label": "GetCellColor()",
    "kind": "Method",
    "detail": "Function (FSlateColor)",
    "insertText": "GetCellColor(bool IsResultData)"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<SWidget> ParentContextMenu ; TArray<FCompMaterial>& SourceMaterials ; TArray<FCompMaterial>& ResultMaterials ; TArray<int32>& RemapMaterials ; TArray<bool>& AutoRemapMaterials ; TArray<bool>& CustomRemapMaterials ; bool bIsPreviewConflict ; } ; class SFbxMaterialConflictWindow : public SCompoundWidget { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SFbxMaterialConflictWindow) : _WidgetWindow() , _SourceMaterials(nullptr) , _ResultMaterials(nullptr) , _RemapMaterials(nullptr) , _AutoRemapMaterials(nullptr) , _bIsPreviewConflict(false)"
  },
  {
    "label": "SLATE_ARGUMENT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_ARGUMENT(TSharedPtr<SWindow>, WidgetWindow ) SLATE_ARGUMENT( TArray<FCompMaterial>*, SourceMaterials) SLATE_ARGUMENT( TArray<FCompMaterial>*, ResultMaterials) SLATE_ARGUMENT( TArray<int32>*, RemapMaterials) SLATE_ARGUMENT( TArray<bool>*, AutoRemapMaterials ) SLATE_ARGUMENT( bool, bIsPreviewConflict ) SLATE_END_ARGS() public: UnFbx::EFBXReimportDialogReturnOption GetReturnOption()"
  },
  {
    "label": "SupportsKeyboardFocus()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SupportsKeyboardFocus()"
  },
  {
    "label": "OnReset()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnReset()"
  },
  {
    "label": "OnCancel()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnCancel()"
  },
  {
    "label": "CollapsePreviewVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "CollapsePreviewVisibility()"
  },
  {
    "label": "Unhandled()",
    "kind": "Method",
    "detail": "Function (} return)",
    "insertText": "Unhandled()"
  },
  {
    "label": "SFbxMaterialConflictWindow()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SFbxMaterialConflictWindow()"
  },
  {
    "label": "FillMaterialListItem()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FillMaterialListItem()"
  },
  {
    "label": "OnGenerateRowForCompareMaterialList()",
    "kind": "Method",
    "detail": "Function (TSharedRef<ITableRow>)",
    "insertText": "OnGenerateRowForCompareMaterialList(TSharedPtr<FMaterialConflictData> RowData, const TSharedRef<STableViewBase>& Table)"
  }
]