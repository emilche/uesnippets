[
  {
    "label": "FFoliageActor",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFoliageActor"
  },
  {
    "label": "FFoliageActor()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" InstancedFoliage . h \" struct FFoliageActor : public FFoliageImpl { # if WITH_EDITORONLY_DATA TArray<TWeakObjectPtr<AActor>> ActorInstances_Deprecated ; # endif TArray<TObjectPtr<AActor>> ActorInstances ; UClass* ActorClass ; bool bShouldAttachToBaseComponent ;)",
    "insertText": "FFoliageActor(FFoliageInfo* Info) : FFoliageImpl(Info) , ActorClass(nullptr) , bShouldAttachToBaseComponent(true) #if WITH_EDITOR , bActorsDestroyed(false)"
  },
  {
    "label": "AddReferencedObjects()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "AddReferencedObjects(UObject* InThis, FReferenceCollector& Collector)"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Serialize(FArchive& Ar)"
  },
  {
    "label": "DestroyActors()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyActors(bool bOnLoad)"
  },
  {
    "label": "IsInitialized()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR bool)",
    "insertText": "IsInitialized()"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Initialize(const UFoliageType* FoliageType)"
  },
  {
    "label": "Uninitialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Uninitialize()"
  },
  {
    "label": "GetInstanceCount()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetInstanceCount()"
  },
  {
    "label": "PreAddInstances()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PreAddInstances(const UFoliageType* FoliageType, int32 Count)"
  },
  {
    "label": "AddInstance()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddInstance(const FFoliageInstance& NewInstance)"
  },
  {
    "label": "AddExistingInstance()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddExistingInstance(const FFoliageInstance& ExistingInstance, UObject* InstanceImplementation)"
  },
  {
    "label": "RemoveInstance()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveInstance(int32 InstanceIndex)"
  },
  {
    "label": "MoveInstance()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MoveInstance(int32 InstanceIndex, UObject*& OutInstanceImplementation)"
  },
  {
    "label": "SetInstanceWorldTransform()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetInstanceWorldTransform(int32 InstanceIndex, const FTransform& Transform, bool bTeleport)"
  },
  {
    "label": "GetInstanceWorldTransform()",
    "kind": "Method",
    "detail": "Function (FTransform)",
    "insertText": "GetInstanceWorldTransform(int32 InstanceIndex)"
  },
  {
    "label": "IsOwnedComponent()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsOwnedComponent(const UPrimitiveComponent* PrimitiveComponent)"
  },
  {
    "label": "FindIndex()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "FindIndex(const AActor* InActor)"
  },
  {
    "label": "GetInstanceIndexFrom()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetInstanceIndexFrom(const UPrimitiveComponent* PrimitiveComponent, int32 ComponentIndex)"
  },
  {
    "label": "SelectAllInstances()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SelectAllInstances(bool bSelect)"
  },
  {
    "label": "SelectInstance()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SelectInstance(bool bSelect, int32 Index)"
  },
  {
    "label": "SelectInstances()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SelectInstances(bool bSelect, const TSet<int32>& SelectedIndices)"
  },
  {
    "label": "GetSelectionBoundingBox()",
    "kind": "Method",
    "detail": "Function (FBox)",
    "insertText": "GetSelectionBoundingBox(const TSet<int32>& SelectedIndices)"
  },
  {
    "label": "ApplySelection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplySelection(bool bApply, const TSet<int32>& SelectedIndices)"
  },
  {
    "label": "ClearSelection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearSelection(const TSet<int32>& SelectedIndices)"
  },
  {
    "label": "BeginUpdate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginUpdate()"
  },
  {
    "label": "EndUpdate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EndUpdate()"
  },
  {
    "label": "Refresh()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Refresh(bool Async, bool Force)"
  },
  {
    "label": "OnHiddenEditorViewMaskChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnHiddenEditorViewMaskChanged(uint64 InHiddenEditorViews)"
  },
  {
    "label": "PostEditUndo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostEditUndo(FFoliageInfo* InInfo, UFoliageType* FoliageType)"
  },
  {
    "label": "PreMoveInstances()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PreMoveInstances(TArrayView<const int32> InInstancesMoved)"
  },
  {
    "label": "PostMoveInstances()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostMoveInstances(TArrayView<const int32> InInstancesMoved, bool bFinished)"
  },
  {
    "label": "NotifyFoliageTypeChanged()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "NotifyFoliageTypeChanged(UFoliageType* FoliageType, bool bSourceChanged)"
  },
  {
    "label": "Reapply()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reapply(const UFoliageType* FoliageType)"
  },
  {
    "label": "Spawn()",
    "kind": "Method",
    "detail": "Function (AActor*)",
    "insertText": "Spawn(const FFoliageInstance& Instance)"
  },
  {
    "label": "GetActorsFromSelectedIndices()",
    "kind": "Method",
    "detail": "Function (TArray<AActor*>)",
    "insertText": "GetActorsFromSelectedIndices(const TSet<int32>& SelectedIndices)"
  },
  {
    "label": "ShouldAttachToBaseComponent()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldAttachToBaseComponent()"
  },
  {
    "label": "GetInvalidInstances()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetInvalidInstances(TArray<int32>& InvalidInstances)"
  },
  {
    "label": "UpdateActorTransforms()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "UpdateActorTransforms(const TArray<FFoliageInstance>& Instances)"
  }
]