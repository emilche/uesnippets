[
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "UEdGraphPin",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEdGraphPin"
  },
  {
    "label": "UEdGraphSchema",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEdGraphSchema"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "USoundSubmixBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USoundSubmixBase"
  },
  {
    "label": "UUserWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UUserWidget"
  },
  {
    "label": "SSubmixGraphNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SSubmixGraphNode"
  },
  {
    "label": "USoundSubmixGraphNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USoundSubmixGraphNode"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Audio / AudioWidgetSubsystem . h \" # include \" AudioDevice . h \" # include \" Blueprint / UserWidget . h \" # include \" CoreMinimal . h \" # include \" DSP / EnvelopeFollower . h \" # include \" DSP / MultithreadedPatching . h \" # include \" EdGraph / EdGraphNode . h \" # include \" Internationalization / Text . h \" # include \" Math / Color . h \" # include \" SGraphNode . h \" # include \" Sound / SoundSubmix . h \" # include \" Templates / SharedPointer . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / ObjectPtr . h \" # include \" UObject / UObjectGlobals . h \" # include \" UObject / WeakObjectPtr . h \" # include \" UObject / WeakObjectPtrTemplates . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" SoundSubmixGraphNode . generated . h \" class SWidget ; class UEdGraphPin ; class UEdGraphSchema ; class UObject ; class USoundSubmixBase ; class UUserWidget ; class SSubmixGraphNode : public SGraphNode { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SSubmixGraphNode)"
  },
  {
    "label": "SLATE_ARGUMENT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_ARGUMENT(TWeakObjectPtr<USoundSubmixBase>, SubmixBase) SLATE_ARGUMENT(TWeakObjectPtr<UUserWidget>, SubmixNodeUserWidget) SLATE_END_ARGS()"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct(const FArguments& InArgs, UEdGraphNode* InGraphNode)"
  },
  {
    "label": "CreateNodeContentArea()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "CreateNodeContentArea()"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (private : TWeakObjectPtr<USoundSubmixBase> SubmixBase ; TWeakObjectPtr<UUserWidget> SubmixNodeUserWidget ; } ;)",
    "insertText": "UCLASS(MinimalAPI)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() UPROPERTY(VisibleAnywhere, instanced, Category=Sound)"
  },
  {
    "label": "GetChildPin()",
    "kind": "Method",
    "detail": "Function (UEdGraphPin*)",
    "insertText": "GetChildPin()"
  },
  {
    "label": "GetNodeTitleColor()",
    "kind": "Method",
    "detail": "Function (FLinearColor)",
    "insertText": "GetNodeTitleColor()"
  },
  {
    "label": "AllocateDefaultPins()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AllocateDefaultPins()"
  },
  {
    "label": "AutowireNewNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AutowireNewNode(UEdGraphPin* FromPin)"
  },
  {
    "label": "CanCreateUnderSpecifiedSchema()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanCreateUnderSpecifiedSchema(const UEdGraphSchema* Schema)"
  },
  {
    "label": "CanUserDeleteNode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanUserDeleteNode()"
  },
  {
    "label": "GetNodeTitle()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetNodeTitle(ENodeTitleType::Type TitleType)"
  },
  {
    "label": "CreateVisualWidget()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<SGraphNode>)",
    "insertText": "CreateVisualWidget()"
  }
]