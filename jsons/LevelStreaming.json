[
  {
    "label": "ALevelScriptActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ALevelScriptActor"
  },
  {
    "label": "ALevelStreamingVolume",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ALevelStreamingVolume"
  },
  {
    "label": "ULevel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULevel"
  },
  {
    "label": "ULevelStreaming",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULevelStreaming"
  },
  {
    "label": "IWorldPartitionCell",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IWorldPartitionCell"
  },
  {
    "label": "FNetLevelVisibilityTransactionId",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FNetLevelVisibilityTransactionId"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FNetLevelVisibilityState",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FNetLevelVisibilityState"
  },
  {
    "label": "FStreamLevelAction",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStreamLevelAction"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "of",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "of"
  },
  {
    "label": "ULevelStreaming",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULevelStreaming"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FLevelAnnotation",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLevelAnnotation"
  },
  {
    "label": "FPackageNameMatcher",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPackageNameMatcher"
  },
  {
    "label": "UCanvas",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UCanvas"
  },
  {
    "label": "EReqLevelBlock",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EReqLevelBlock"
  },
  {
    "label": "ULevel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULevel"
  },
  {
    "label": "ULevel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULevel"
  },
  {
    "label": "FAckNetVisibilityTransaction",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAckNetVisibilityTransaction"
  },
  {
    "label": "FStreamingLevelPrivateAccessor",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FStreamingLevelPrivateAccessor"
  },
  {
    "label": "used",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "used"
  },
  {
    "label": "FAckNetVisibilityTransaction",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAckNetVisibilityTransaction"
  },
  {
    "label": "APlayerController",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "APlayerController"
  },
  {
    "label": "FStreamingLevelPrivateAccessor",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FStreamingLevelPrivateAccessor"
  },
  {
    "label": "UEngine",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEngine"
  },
  {
    "label": "UWorld",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UWorld"
  },
  {
    "label": "DECLARE_LOG_CATEGORY_EXTERN()",
    "kind": "Method",
    "detail": "Function (ENGINE_API)",
    "insertText": "DECLARE_LOG_CATEGORY_EXTERN(LogLevelStreaming, Log, All)"
  },
  {
    "label": "FStreamLevelAction()",
    "kind": "Method",
    "detail": "Function (ENGINE_API)",
    "insertText": "FStreamLevelAction(bool bIsLoading, const FName& InLevelName, bool bIsMakeVisibleAfterLoad, bool bShouldBlock, const FLatentActionInfo& InLatentInfo, UWorld* World)"
  },
  {
    "label": "MakeSafeLevelName()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "MakeSafeLevelName( const FName& InLevelName, UWorld* InWorld )"
  },
  {
    "label": "ActivateLevel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ActivateLevel( ULevelStreaming* LevelStreamingObject )"
  },
  {
    "label": "UpdateLevel()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UpdateLevel( ULevelStreaming* LevelStreamingObject )"
  },
  {
    "label": "DECLARE_DYNAMIC_MULTICAST_DELEGATE()",
    "kind": "Method",
    "detail": "Function (signatures)",
    "insertText": "DECLARE_DYNAMIC_MULTICAST_DELEGATE( FLevelStreamingLoadedStatus )"
  },
  {
    "label": "RemoveLevelAnnotation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveLevelAnnotation(const ULevel* Level)"
  },
  {
    "label": "RemoveStreamingVolumeDuplicates()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveStreamingVolumeDuplicates()"
  },
  {
    "label": "SetCurrentState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCurrentState(ELevelStreamingState NewState)"
  },
  {
    "label": "RequestVisibilityChange()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RequestVisibilityChange(bool bVisible)"
  },
  {
    "label": "CanMakeVisible()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanMakeVisible()"
  },
  {
    "label": "CanMakeInvisible()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanMakeInvisible()"
  },
  {
    "label": "ShouldWaitForServerAckBeforeChangingVisibilityState()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldWaitForServerAckBeforeChangingVisibilityState(ENetLevelVisibilityRequest InRequestType)"
  },
  {
    "label": "AckNetVisibilityTransaction()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AckNetVisibilityTransaction(FNetLevelVisibilityTransactionId AckedClientTransactionId, bool bClientAckCanMakeVisible)"
  },
  {
    "label": "UpdateTargetState()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UpdateTargetState()"
  },
  {
    "label": "UpdateStreamingState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateStreamingState(bool& bOutUpdateAgain, bool& bOutRedetermineTarget)"
  },
  {
    "label": "OnLevelAdded()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnLevelAdded()"
  },
  {
    "label": "OnLevelRemoved()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnLevelRemoved()"
  },
  {
    "label": "BeginClientNetVisibilityRequest()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginClientNetVisibilityRequest(bool bInShouldBeVisible)"
  },
  {
    "label": "UpdateNetVisibilityTransactionState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateNetVisibilityTransactionState(bool bInShouldBeVisible, FNetLevelVisibilityTransactionId TransactionId)"
  },
  {
    "label": "SetShouldBeVisible()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetShouldBeVisible(bool bInShouldBeVisible)"
  },
  {
    "label": "SetShouldBeLoaded()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetShouldBeLoaded(bool bInShouldBeLoaded)"
  },
  {
    "label": "SetLevelLODIndex()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetLevelLODIndex(int32 LODIndex)"
  },
  {
    "label": "SetPriority()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPriority(int32 NewPriority)"
  },
  {
    "label": "SetIsRequestingUnloadAndRemoval()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetIsRequestingUnloadAndRemoval(bool bInIsRequestingUnloadAndRemoval)"
  },
  {
    "label": "SetShouldBeVisibleInEditor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetShouldBeVisibleInEditor(bool bInShouldBeVisibleInEditor)"
  },
  {
    "label": "SetWorldAsset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetWorldAsset(const TSoftObjectPtr<UWorld>& NewWorldAsset)"
  },
  {
    "label": "SetWorldAssetByPackageName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetWorldAssetByPackageName(FName InPackageName)"
  },
  {
    "label": "RenameForPIE()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenameForPIE(int PIEInstanceID, bool bKeepWorldAssetName = false)"
  },
  {
    "label": "GetStreamingVolumeBounds()",
    "kind": "Method",
    "detail": "Function (FBox)",
    "insertText": "GetStreamingVolumeBounds()"
  },
  {
    "label": "GetLevelStreamingStatusColor()",
    "kind": "Method",
    "detail": "Function (FColor)",
    "insertText": "GetLevelStreamingStatusColor(EStreamingStatus Status)"
  },
  {
    "label": "DebugDrawLegend()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DebugDrawLegend(const UWorld* World, class UCanvas* Canvas, const FVector2D& Offset)"
  },
  {
    "label": "SetFolderPath()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFolderPath(const FName& InFolderPath)"
  },
  {
    "label": "DefaultAllowClientUseMakingInvisibleTransactionRequests()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DefaultAllowClientUseMakingInvisibleTransactionRequests()"
  },
  {
    "label": "DefaultAllowClientUseMakingVisibleTransactionRequests()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DefaultAllowClientUseMakingVisibleTransactionRequests()"
  },
  {
    "label": "ShouldServerUseMakingVisibleTransactionRequest()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldServerUseMakingVisibleTransactionRequest()"
  },
  {
    "label": "ShouldReuseUnloadedButStillAroundLevels()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldReuseUnloadedButStillAroundLevels(const ULevel* InLevel)"
  },
  {
    "label": "AllowIncrementalRemovalWhilePendingVisibility()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AllowIncrementalRemovalWhilePendingVisibility()"
  },
  {
    "label": "BroadcastLevelLoadedStatus()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BroadcastLevelLoadedStatus(UWorld* PersistentWorld, FName LevelPackageName, bool bLoaded)"
  },
  {
    "label": "BroadcastLevelVisibleStatus()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BroadcastLevelVisibleStatus(UWorld* PersistentWorld, FName LevelPackageName, bool bVisible)"
  },
  {
    "label": "RemoveLevelFromCollectionForReload()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveLevelFromCollectionForReload()"
  },
  {
    "label": "AddLevelToCollectionAfterReload()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddLevelToCollectionAfterReload()"
  },
  {
    "label": "RequestLevel()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RequestLevel(UWorld* PersistentWorld, bool bAllowLevelLoadRequests, EReqLevelBlock BlockPolicy)"
  },
  {
    "label": "PrepareLoadedLevel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PrepareLoadedLevel(ULevel* InLevel, UPackage* InLevelPackage, int32 InPIEInstanceID)"
  },
  {
    "label": "SetLoadedLevel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetLoadedLevel(ULevel* Level)"
  },
  {
    "label": "ValidateUniqueWorldAsset()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ValidateUniqueWorldAsset(UWorld* PersistentWorld)"
  },
  {
    "label": "OnLoadingStarted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnLoadingStarted()"
  },
  {
    "label": "OnLoadingFinished()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnLoadingFinished()"
  },
  {
    "label": "DiscardPendingUnloadLevel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DiscardPendingUnloadLevel(UWorld* PersistentWorld)"
  },
  {
    "label": "AsyncLevelLoadComplete()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AsyncLevelLoadComplete(const FName& PackageName, UPackage* LevelPackage, EAsyncLoadingResult::Type Result)"
  }
]