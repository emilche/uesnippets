[
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# ifndef ABSL_BASE_CONFIG_H_ # define ABSL_BASE_CONFIG_H_ # include<limits . h> # ifdef __cplusplus # include<cstddef> # endif # if)",
    "insertText": "defined(_MSVC_LANG) #define ABSL_INTERNAL_CPLUSPLUS_LANG _MSVC_LANG #elif defined(__cplusplus) #define ABSL_INTERNAL_CPLUSPLUS_LANG __cplusplus #endif #if defined(__APPLE__) #include <Availability.h> #include <TargetConditionals.h> #endif #include \"absl/base/options.h\" #include \"absl/base/policy_checks.h\" #undef ABSL_LTS_RELEASE_VERSION #undef ABSL_LTS_RELEASE_PATCH_LEVEL #define ABSL_INTERNAL_DO_TOKEN_STR(x) #x #define ABSL_INTERNAL_TOKEN_STR(x) ABSL_INTERNAL_DO_TOKEN_STR(x) #if !defined(ABSL_OPTION_USE_INLINE_NAMESPACE) || \\ !defined(ABSL_OPTION_INLINE_NAMESPACE_NAME) #error options.h is misconfigured. #endif #if defined(__cplusplus) && ABSL_OPTION_USE_INLINE_NAMESPACE == 1 #define ABSL_INTERNAL_INLINE_NAMESPACE_STR \\ ABSL_INTERNAL_TOKEN_STR(ABSL_OPTION_INLINE_NAMESPACE_NAME) static_assert(ABSL_INTERNAL_INLINE_NAMESPACE_STR[0] != '\\0', \"options.h misconfigured: ABSL_OPTION_INLINE_NAMESPACE_NAME must \" \"not be empty.\")"
  },
  {
    "label": "ABSL_INTERNAL_C_SYMBOL()",
    "kind": "Method",
    "detail": "Function (# endif # if ABSL_OPTION_USE_INLINE_NAMESPACE = = 0 # define ABSL_NAMESPACE_BEGIN # define ABSL_NAMESPACE_END # define)",
    "insertText": "ABSL_INTERNAL_C_SYMBOL(x)"
  }
]