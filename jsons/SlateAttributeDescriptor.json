[
  {
    "label": "FSlateWidgetClassData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateWidgetClassData"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FSlateAttributeDescriptor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateAttributeDescriptor"
  },
  {
    "label": "FInvalidateWidgetReasonAttribute",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInvalidateWidgetReasonAttribute"
  },
  {
    "label": "FAttribute",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAttribute"
  },
  {
    "label": "FContainer",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FContainer"
  },
  {
    "label": "FContainerInitializer",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FContainerInitializer"
  },
  {
    "label": "FInitializer",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInitializer"
  },
  {
    "label": "FAttributeEntry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAttributeEntry"
  },
  {
    "label": "EInvalidateWidgetReason()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" Containers / ContainerAllocationPolicies . h \" # include \" CoreMinimal . h \" # include \" Delegates / Delegate . h \" # include \" HAL / Platform . h \" # include \" Misc / AssertionMacros . h \" # include \" Misc / Attribute . h \" # include \" Templates / UnrealTemplate . h \" # include \" UObject / NameTypes . h \" # include \" Widgets / InvalidateWidgetReason . h \" # include \" Templates / Identity . h \" # include<type_traits> class FSlateWidgetClassData ; class SWidget ; namespace SlateAttributePrivate { enum class ESlateAttributeType : uint8 ; } class FSlateAttributeDescriptor { public : struct FInvalidateWidgetReasonAttribute { FSlateAttributeDescriptor ; using Arg1Type = const class SWidget& ; using FGetter = TDelegate<)",
    "insertText": "EInvalidateWidgetReason(Arg1Type)"
  },
  {
    "label": "FInvalidateWidgetReasonAttribute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FInvalidateWidgetReasonAttribute(const FInvalidateWidgetReasonAttribute&)"
  },
  {
    "label": "FInvalidateWidgetReasonAttribute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FInvalidateWidgetReasonAttribute(FInvalidateWidgetReasonAttribute&&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FInvalidateWidgetReasonAttribute&)",
    "insertText": "operator(const FInvalidateWidgetReasonAttribute&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FInvalidateWidgetReasonAttribute&)",
    "insertText": "operator(FInvalidateWidgetReasonAttribute&&)"
  },
  {
    "label": "FInvalidateWidgetReasonAttribute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FInvalidateWidgetReasonAttribute(EInvalidateWidgetReason InReason) : Reason(InReason) , Getter()"
  },
  {
    "label": "FInvalidateWidgetReasonAttribute()",
    "kind": "Method",
    "detail": "Function (} template<. . . PayloadTypes>)",
    "insertText": "FInvalidateWidgetReasonAttribute(TIdentity_T<typename FGetter::template TFuncPtr<PayloadTypes...>> InFuncPtr, PayloadTypes&&... InputPayload) : Reason(EInvalidateWidgetReason::None) , Getter(FGetter::CreateStatic(InFuncPtr, Forward<PayloadTypes>(InputPayload)...))"
  },
  {
    "label": "FInvalidateWidgetReasonAttribute()",
    "kind": "Method",
    "detail": "Function (} template<LambdaType,. . . PayloadTypes>)",
    "insertText": "FInvalidateWidgetReasonAttribute(LambdaType&& InCallable, PayloadTypes&&... InputPayload) : Reason(EInvalidateWidgetReason::None) , Getter(FGetter::CreateLambda(InCallable, Forward<PayloadTypes>(InputPayload)...))"
  },
  {
    "label": "IsBound()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsBound()"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (} EInvalidateWidgetReason)",
    "insertText": "Get(const SWidget& Widget)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (} private : EInvalidateWidgetReason Reason ; FGetter Getter ; } ; using FAttributeValueChangedDelegate = TDelegate<)",
    "insertText": "void(SWidget&)"
  },
  {
    "label": "DefaultSortOrder()",
    "kind": "Method",
    "detail": "Function (enum class ECallbackOverrideType { ReplacePrevious,ExecuteAfterPrevious,ExecuteBeforePrevious,} ; public : struct FAttribute ; struct FContainer ; struct FContainerInitializer ; struct FInitializer ; using OffsetType = uint32 ; OffsetType)",
    "insertText": "DefaultSortOrder(OffsetType Offset)"
  },
  {
    "label": "FContainer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FContainer(FName InName, OffsetType InOffset) : Name(InName) , Offset(InOffset)"
  },
  {
    "label": "IsValid()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsValid()"
  },
  {
    "label": "GetName()",
    "kind": "Method",
    "detail": "Function (} FName)",
    "insertText": "GetName()"
  },
  {
    "label": "FAttribute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FAttribute(FName ContainerName, FName Name, OffsetType Offset, FInvalidateWidgetReasonAttribute Reason)"
  },
  {
    "label": "GetAttributeType()",
    "kind": "Method",
    "detail": "Function (} SlateAttributePrivate::ESlateAttributeType)",
    "insertText": "GetAttributeType()"
  },
  {
    "label": "ExecuteIfBound()",
    "kind": "Method",
    "detail": "Function (OnValueChanged .)",
    "insertText": "ExecuteIfBound(Widget)"
  },
  {
    "label": "FContainerInitializer()",
    "kind": "Method",
    "detail": "Function (} private : FName Name ; OffsetType Offset ; FName Prerequisite ; FName ContainerName ; uint32 SortOrder ; uint8 ContainerIndex ; FInvalidateWidgetReasonAttribute InvalidationReason ; FAttributeValueChangedDelegate OnValueChanged ; SlateAttributePrivate::ESlateAttributeType AttributeType ; bool bAffectVisibility ; } ; struct FContainerInitializer { private : FSlateAttributeDescriptor ;)",
    "insertText": "FContainerInitializer(FSlateAttributeDescriptor& InDescriptor, FName ContainerName)"
  },
  {
    "label": "FContainerInitializer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FContainerInitializer(FSlateAttributeDescriptor& InDescriptor, const FSlateAttributeDescriptor& ParentDescriptor, FName ContainerName)"
  },
  {
    "label": "FContainerInitializer()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "FContainerInitializer()"
  },
  {
    "label": "FContainerInitializer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FContainerInitializer(const FContainerInitializer&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FContainerInitializer&)",
    "insertText": "operator(const FContainerInitializer&)"
  },
  {
    "label": "FAttributeEntry()",
    "kind": "Method",
    "detail": "Function (struct FAttributeEntry {)",
    "insertText": "FAttributeEntry(FSlateAttributeDescriptor& Descriptor, FName ContainerName, int32 AttributeIndex)"
  },
  {
    "label": "UpdatePrerequisite()",
    "kind": "Method",
    "detail": "Function (FAttributeEntry&)",
    "insertText": "UpdatePrerequisite(FName Prerequisite)"
  },
  {
    "label": "OnValueChanged()",
    "kind": "Method",
    "detail": "Function (FAttributeEntry&)",
    "insertText": "OnValueChanged(FAttributeValueChangedDelegate Callback)"
  },
  {
    "label": "AddContainedAttribute()",
    "kind": "Method",
    "detail": "Function (private : FSlateAttributeDescriptor& Descriptor ; FName ContainerName ; int32 AttributeIndex ; } ; FAttributeEntry)",
    "insertText": "AddContainedAttribute(FName AttributeName, OffsetType Offset, const FInvalidateWidgetReasonAttribute& ReasonGetter)"
  },
  {
    "label": "AddContainedAttribute()",
    "kind": "Method",
    "detail": "Function (FAttributeEntry)",
    "insertText": "AddContainedAttribute(FName AttributeName, OffsetType Offset, FInvalidateWidgetReasonAttribute&& ReasonGetter)"
  },
  {
    "label": "OverrideInvalidationReason()",
    "kind": "Method",
    "detail": "Function (public : void)",
    "insertText": "OverrideInvalidationReason(FName AttributeName, const FInvalidateWidgetReasonAttribute& Reason)"
  },
  {
    "label": "OverrideInvalidationReason()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OverrideInvalidationReason(FName AttributeName, FInvalidateWidgetReasonAttribute&& Reason)"
  },
  {
    "label": "OverrideOnValueChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OverrideOnValueChanged(FName AttributeName, ECallbackOverrideType OverrideType, FAttributeValueChangedDelegate Callback)"
  },
  {
    "label": "FInitializer()",
    "kind": "Method",
    "detail": "Function (private : FSlateAttributeDescriptor& Descriptor ; FName ContainerName ; } ; struct FInitializer { private : FSlateWidgetClassData ;)",
    "insertText": "FInitializer(FSlateAttributeDescriptor& InDescriptor)"
  },
  {
    "label": "FInitializer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FInitializer(FSlateAttributeDescriptor& InDescriptor, const FSlateAttributeDescriptor& ParentDescriptor)"
  },
  {
    "label": "FInitializer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FInitializer(const FInitializer&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FInitializer&)",
    "insertText": "operator(const FInitializer&)"
  },
  {
    "label": "FInitializer()",
    "kind": "Method",
    "detail": "Function (public : ~)",
    "insertText": "FInitializer()"
  },
  {
    "label": "FAttributeEntry()",
    "kind": "Method",
    "detail": "Function (struct FAttributeEntry {)",
    "insertText": "FAttributeEntry(FSlateAttributeDescriptor& Descriptor, int32 InAttributeIndex)"
  },
  {
    "label": "AffectVisibility()",
    "kind": "Method",
    "detail": "Function (FAttributeEntry&)",
    "insertText": "AffectVisibility()"
  },
  {
    "label": "AddMemberAttribute()",
    "kind": "Method",
    "detail": "Function (private : FSlateAttributeDescriptor& Descriptor ; int32 AttributeIndex ; } ; FAttributeEntry)",
    "insertText": "AddMemberAttribute(FName AttributeName, OffsetType Offset, const FInvalidateWidgetReasonAttribute& ReasonGetter)"
  },
  {
    "label": "AddMemberAttribute()",
    "kind": "Method",
    "detail": "Function (FAttributeEntry)",
    "insertText": "AddMemberAttribute(FName AttributeName, OffsetType Offset, FInvalidateWidgetReasonAttribute&& ReasonGetter)"
  },
  {
    "label": "AddContainer()",
    "kind": "Method",
    "detail": "Function (FContainerInitializer)",
    "insertText": "AddContainer(FName ContainerName, OffsetType Offset)"
  },
  {
    "label": "SetAffectVisibility()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAffectVisibility(FName AttributeName, bool bAffectVisibility)"
  },
  {
    "label": "GetAttributeNum()",
    "kind": "Method",
    "detail": "Function (private : FSlateAttributeDescriptor& Descriptor ; } ; int32)",
    "insertText": "GetAttributeNum()"
  },
  {
    "label": "GetAttributeAtIndex()",
    "kind": "Method",
    "detail": "Function (} const FAttribute&)",
    "insertText": "GetAttributeAtIndex(int32 Index)"
  },
  {
    "label": "FindContainer()",
    "kind": "Method",
    "detail": "Function (const FContainer*)",
    "insertText": "FindContainer(FName ContainerName)"
  },
  {
    "label": "FindAttribute()",
    "kind": "Method",
    "detail": "Function (const FAttribute*)",
    "insertText": "FindAttribute(FName AttributeName)"
  },
  {
    "label": "FindMemberAttribute()",
    "kind": "Method",
    "detail": "Function (const FAttribute*)",
    "insertText": "FindMemberAttribute(OffsetType AttributeOffset)"
  },
  {
    "label": "FindContainedAttribute()",
    "kind": "Method",
    "detail": "Function (const FAttribute*)",
    "insertText": "FindContainedAttribute(FName ContainerName, OffsetType AttributeOffset)"
  },
  {
    "label": "IndexOfContainer()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "IndexOfContainer(FName AttributeName)"
  },
  {
    "label": "IndexOfAttribute()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "IndexOfAttribute(FName AttributeName)"
  },
  {
    "label": "IndexOfMemberAttribute()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "IndexOfMemberAttribute(OffsetType AttributeOffset)"
  },
  {
    "label": "IndexOfContainedAttribute()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "IndexOfContainedAttribute(FName ContainerName, OffsetType AttributeOffset)"
  },
  {
    "label": "AddContainer()",
    "kind": "Method",
    "detail": "Function (FContainerInitializer)",
    "insertText": "AddContainer(FName AttributeName, OffsetType Offset)"
  },
  {
    "label": "AddMemberAttribute()",
    "kind": "Method",
    "detail": "Function (FInitializer::FAttributeEntry)",
    "insertText": "AddMemberAttribute(FName AttributeName, OffsetType Offset, FInvalidateWidgetReasonAttribute ReasonGetter)"
  },
  {
    "label": "AddContainedAttribute()",
    "kind": "Method",
    "detail": "Function (FContainerInitializer::FAttributeEntry)",
    "insertText": "AddContainedAttribute(FName ContainerName, FName AttributeName, OffsetType Offset, FInvalidateWidgetReasonAttribute ReasonGetter)"
  },
  {
    "label": "OverrideInvalidationReason()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OverrideInvalidationReason(FName ContainerName, FName AttributeName, FInvalidateWidgetReasonAttribute ReasonGetter)"
  },
  {
    "label": "OverrideOnValueChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OverrideOnValueChanged(FName ContainerName, FName AttributeName, ECallbackOverrideType OverrideType, FAttributeValueChangedDelegate Callback)"
  },
  {
    "label": "SetPrerequisite()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPrerequisite(FName ContainerName, FAttribute& Attribute, FName Prerequisite)"
  },
  {
    "label": "SetAffectVisibility()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAffectVisibility(FAttribute& Attribute, bool bUpdate)"
  },
  {
    "label": "SLATE_ADD_MEMBER_ATTRIBUTE_DEFINITION_WITH_NAME()",
    "kind": "Method",
    "detail": "Function (private : TArray<FAttribute> Attributes ; TArray<FContainer,TInlineAllocator<1>> Containers ; } ; # define)",
    "insertText": "SLATE_ADD_MEMBER_ATTRIBUTE_DEFINITION_WITH_NAME(_Initializer, _Name, _Property, _Reason) \\ static_assert(decltype(_Property)::AttributeType == SlateAttributePrivate::ESlateAttributeType::Member, \"The SlateProperty is not a TSlateAttribute. Do not use SLATE_ADD_MEMBER_ATTRIBUTE_DEFINITION\")"
  },
  {
    "label": "static_assert()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "static_assert(!decltype(_Property)::HasDefinedInvalidationReason, \"When implementing the SLATE_DECLARE_WIDGET pattern, use TSlateAttribute without the invalidation reason.\")"
  },
  {
    "label": "static_assert()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "static_assert(!std::is_same<decltype(_Reason), EInvalidateWidgetReason>::value || FSlateAttributeBase::IsInvalidateWidgetReasonSupported(_Reason), \"The invalidation is not supported by the SlateAttribute system.\")"
  },
  {
    "label": "AddMemberAttribute()",
    "kind": "Method",
    "detail": "Function (\\ _Initializer .)",
    "insertText": "AddMemberAttribute(_Name, STRUCT_OFFSET(PrivateThisType, _Property), FSlateAttributeDescriptor::FInvalidateWidgetReasonAttribute{_Reason}) #define SLATE_ADD_MEMBER_ATTRIBUTE_DEFINITION(_Initializer, _Property, _Reason) \\ SLATE_ADD_MEMBER_ATTRIBUTE_DEFINITION_WITH_NAME(_Initializer, GET_MEMBER_NAME_CHECKED(PrivateThisType, _Property), _Property, _Reason) #define SLATE_ADD_PANELCHILDREN_DEFINITION_WITH_NAME(_Initializer, _Name, _Container) \\ _Initializer.AddContainer(_Name, STRUCT_OFFSET(PrivateThisType, _Container)) #define SLATE_ADD_PANELCHILDREN_DEFINITION(_Initializer, _Container) \\ SLATE_ADD_PANELCHILDREN_DEFINITION_WITH_NAME(_Initializer, GET_MEMBER_NAME_CHECKED(PrivateThisType, _Container), _Container) #define SLATE_ADD_SLOT_ATTRIBUTE_DEFINITION_WITH_NAME(_SlotType, _Initializer, _Name, _Property, _Reason) \\ static_assert(decltype(_Property)::AttributeType == SlateAttributePrivate::ESlateAttributeType::Contained, \"The SlateProperty is not a TSlateAttribute. Do not use SLATE_ADD_CONTAINED_ATTRIBUTE_DEFINITION\")"
  },
  {
    "label": "static_assert()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "static_assert(!decltype(_Property)::HasDefinedInvalidationReason, \"When implementing the SLATE_DECLARE_WIDGET pattern, use TSlateSlotAttribute without the invalidation reason.\")"
  },
  {
    "label": "AddContainedAttribute()",
    "kind": "Method",
    "detail": "Function (\\ \\ _Initializer .)",
    "insertText": "AddContainedAttribute(_Name, ((SIZE_T)(&(((_SlotType*)(0x1000))->_Property)) - (SIZE_T)(static_cast<SlateAttributePrivate::ISlateAttributeContainer*>((_SlotType*)(0x1000)))), FSlateAttributeDescriptor::FInvalidateWidgetReasonAttribute{_Reason}) #define SLATE_ADD_SLOT_ATTRIBUTE_DEFINITION(_SlotType, _Initializer, _Property, _Reason) \\ SLATE_ADD_SLOT_ATTRIBUTE_DEFINITION_WITH_NAME(_SlotType, _Initializer, GET_MEMBER_NAME_CHECKED(_SlotType, _Property), _Property, _Reason)"
  }
]