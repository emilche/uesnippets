[
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# ifndef BASE_ALLOCATOR_PARTITION_ALLOCATOR_PARTITION_ALLOC_BASE_COMPILER_SPECIFIC_H_ # define BASE_ALLOCATOR_PARTITION_ALLOCATOR_PARTITION_ALLOC_BASE_COMPILER_SPECIFIC_H_ # include \" build / build_config . h \" # if)",
    "insertText": "defined(__has_cpp_attribute) #define PA_HAS_CPP_ATTRIBUTE(x) __has_cpp_attribute(x) #else #define PA_HAS_CPP_ATTRIBUTE(x) 0 #endif #if defined(__has_attribute) #define PA_HAS_ATTRIBUTE(x) __has_attribute(x) #else #define PA_HAS_ATTRIBUTE(x) 0 #endif #if defined(__has_builtin) #define PA_HAS_BUILTIN(x) __has_builtin(x) #else #define PA_HAS_BUILTIN(x) 0 #endif #if defined(COMPILER_GCC) || defined(__clang__) #define PA_NOINLINE __attribute__((noinline)) #elif defined(COMPILER_MSVC) #define PA_NOINLINE __declspec(noinline) #else #define PA_NOINLINE #endif #if defined(COMPILER_GCC) && defined(NDEBUG) #define PA_ALWAYS_INLINE inline __attribute__((__always_inline__)) #elif defined(COMPILER_MSVC) && defined(NDEBUG) #define PA_ALWAYS_INLINE __forceinline #else #define PA_ALWAYS_INLINE inline #endif #if defined(__clang__) && PA_HAS_ATTRIBUTE(not_tail_called) #define PA_NOT_TAIL_CALLED __attribute__((not_tail_called)) #else #define PA_NOT_TAIL_CALLED #endif #if defined(COMPILER_MSVC) #define PA_ALIGNAS(byte_alignment) __declspec(align(byte_alignment)) #elif defined(COMPILER_GCC) #define PA_ALIGNAS(byte_alignment) __attribute__((aligned(byte_alignment))) #endif #if PA_HAS_CPP_ATTRIBUTE(no_unique_address) #define PA_NO_UNIQUE_ADDRESS [[no_unique_address]] #else #define PA_NO_UNIQUE_ADDRESS #endif #if defined(COMPILER_GCC) || defined(__clang__) #define PA_PRINTF_FORMAT(format_param, dots_param) \\ __attribute__((format(printf, format_param, dots_param))) #else #define PA_PRINTF_FORMAT(format_param, dots_param) #endif #define PA_WPRINTF_FORMAT(format_param, dots_param) #if PA_HAS_ATTRIBUTE(no_sanitize) #define PA_NO_SANITIZE(what) __attribute__((no_sanitize(what))) #endif #if !defined(PA_NO_SANITIZE) #define PA_NO_SANITIZE(what) #endif #if defined(MEMORY_SANITIZER) && !BUILDFLAG(IS_NACL) #include <sanitizer/msan_interface.h> #define PA_MSAN_UNPOISON(p, size) __msan_unpoison(p, size) #define PA_MSAN_CHECK_MEM_IS_INITIALIZED(p, size) \\ __msan_check_mem_is_initialized(p, size) #else #define PA_MSAN_UNPOISON(p, size) #define PA_MSAN_CHECK_MEM_IS_INITIALIZED(p, size) #endif #if !defined(PA_CDECL) #if BUILDFLAG(IS_WIN) #define PA_CDECL __cdecl #else #define PA_CDECL #endif #endif #if !defined(PA_UNLIKELY) #if defined(COMPILER_GCC) || defined(__clang__) #define PA_UNLIKELY(x) __builtin_expect(!!(x), 0) #else #define PA_UNLIKELY(x) (x) #endif #endif #if !defined(PA_LIKELY) #if defined(COMPILER_GCC) || defined(__clang__) #define PA_LIKELY(x) __builtin_expect(!!(x), 1) #else #define PA_LIKELY(x) (x) #endif #endif #if defined(__has_feature) #define PA_HAS_FEATURE(FEATURE) __has_feature(FEATURE) #else #define PA_HAS_FEATURE(FEATURE) 0 #endif #if defined(COMPILER_GCC) #define PA_PRETTY_FUNCTION __PRETTY_FUNCTION__ #elif defined(COMPILER_MSVC) #define PA_PRETTY_FUNCTION __FUNCSIG__ #else #define PA_PRETTY_FUNCTION __func__ #endif #if !defined(PA_CPU_ARM_NEON) #if defined(__arm__) #if !defined(__ARMEB__) && !defined(__ARM_EABI__) && !defined(__EABI__) && \\ !defined(__VFP_FP__) && !defined(_WIN32_WCE) && !defined(ANDROID) #error Chromium does not support middle endian architecture #endif #if defined(__ARM_NEON__) #define PA_CPU_ARM_NEON 1 #endif #endif #endif #if !defined(PA_HAVE_MIPS_MSA_INTRINSICS) #if defined(__mips_msa) && defined(__mips_isa_rev) && (__mips_isa_rev >= 5) #define PA_HAVE_MIPS_MSA_INTRINSICS 1 #endif #endif #if defined(__clang__) && PA_HAS_ATTRIBUTE(uninitialized) #define PA_STACK_UNINITIALIZED __attribute__((uninitialized)) #else #define PA_STACK_UNINITIALIZED #endif #if defined(COMPILER_GCC) || defined(__clang__) #if PA_HAS_ATTRIBUTE(__no_stack_protector__) #define PA_NO_STACK_PROTECTOR __attribute__((__no_stack_protector__)) #else #define PA_NO_STACK_PROTECTOR \\ __attribute__((__optimize__(\"-fno-stack-protector\"))) #endif #else #define PA_NO_STACK_PROTECTOR #endif #if defined(__clang_analyzer__)"
  },
  {
    "label": "AnalyzerNoReturn()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AnalyzerNoReturn() __attribute__((analyzer_noreturn))"
  }
]