[
  {
    "label": "ALandscape",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ALandscape"
  },
  {
    "label": "ALandscapeSplineActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ALandscapeSplineActor"
  },
  {
    "label": "UWorldPartitionLandscapeSplineMeshesBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UWorldPartitionLandscapeSplineMeshesBuilder"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" GameFramework / Actor . h \" # include \" ILandscapeSplineInterface . h \" # include \" LandscapeSplineActor . generated . h \" class ALandscape ;)",
    "insertText": "UCLASS(MinimalAPI, NotBlueprintable, NotPlaceable, hidecategories = (Display, Attachment, Physics, Debug, Lighting, Input))"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() protected: UPROPERTY()"
  },
  {
    "label": "GetLandscapeGuid()",
    "kind": "Method",
    "detail": "Function (# endif public : FGuid)",
    "insertText": "GetLandscapeGuid()"
  },
  {
    "label": "LandscapeActorToWorld()",
    "kind": "Method",
    "detail": "Function (FTransform)",
    "insertText": "LandscapeActorToWorld()"
  },
  {
    "label": "GetLandscapeInfo()",
    "kind": "Method",
    "detail": "Function (ULandscapeInfo*)",
    "insertText": "GetLandscapeInfo()"
  },
  {
    "label": "UpdateSharedProperties()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateSharedProperties(ULandscapeInfo* InLandscapeInfo)"
  },
  {
    "label": "HasGeneratedLandscapeSplineMeshesActors()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR bool)",
    "insertText": "HasGeneratedLandscapeSplineMeshesActors()"
  },
  {
    "label": "SetLandscapeGuid()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetLandscapeGuid(const FGuid& InGuid)"
  },
  {
    "label": "GetActorDescProperties()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetActorDescProperties(FPropertyPairsMap& PropertyPairsMap)"
  },
  {
    "label": "GetSharedProperties()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetSharedProperties(ULandscapeInfo* InLandscapeInfo)"
  },
  {
    "label": "Destroyed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Destroyed()"
  },
  {
    "label": "PostRegisterAllComponents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostRegisterAllComponents()"
  },
  {
    "label": "UnregisterAllComponents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterAllComponents(bool bForReregister = false)"
  },
  {
    "label": "PostEditMove()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostEditMove(bool bFinished)"
  },
  {
    "label": "PostEditChangeProperty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostEditChangeProperty(FPropertyChangedEvent& PropertyChangedEvent)"
  },
  {
    "label": "EditorCanAttachTo()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "EditorCanAttachTo(const AActor* InParent, FText& OutReason)"
  },
  {
    "label": "SupportsForeignSplineMesh()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SupportsForeignSplineMesh()"
  },
  {
    "label": "CreateSplineComponent()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "CreateSplineComponent(const FVector& Scale3D)"
  },
  {
    "label": "SetLandscapeActor()",
    "kind": "Method",
    "detail": "Function (} private : void)",
    "insertText": "SetLandscapeActor(ALandscape* InLandscapeActor)"
  }
]