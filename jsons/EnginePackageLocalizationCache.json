[
  {
    "label": "FAssetData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAssetData"
  },
  {
    "label": "FEnginePackageLocalizationCache",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEnginePackageLocalizationCache"
  },
  {
    "label": "FEnginePackageLocalizationCache()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Internationalization / PackageLocalizationCache . h \" struct FAssetData ; class FEnginePackageLocalizationCache : public FPackageLocalizationCache { public :)",
    "insertText": "FEnginePackageLocalizationCache()"
  },
  {
    "label": "FindLocalizedPackages()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "FindLocalizedPackages(const TMap<FString, TArray<FString>>& NewSourceToLocalizedPaths, TMap<FName, TArray<FName>>& InOutSourcePackagesToLocalizedPackages)"
  },
  {
    "label": "FindAssetGroupPackages()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FindAssetGroupPackages(const FName InAssetGroupName, const FTopLevelAssetPath& InAssetClassName)"
  },
  {
    "label": "HandleAssetAdded()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "HandleAssetAdded(const FAssetData& InAssetData)"
  },
  {
    "label": "HandleAssetRemoved()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleAssetRemoved(const FAssetData& InAssetData)"
  },
  {
    "label": "HandleAssetRenamed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleAssetRenamed(const FAssetData& InAssetData, const FString& InOldObjectPath)"
  }
]