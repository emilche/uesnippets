[
  {
    "label": "derived",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "derived"
  },
  {
    "label": "ir_node_type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ir_node_type"
  },
  {
    "label": "number",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "number"
  },
  {
    "label": "ir_instruction",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ir_instruction"
  },
  {
    "label": "ir_instruction",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ir_instruction"
  },
  {
    "label": "of",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "of"
  },
  {
    "label": "ir_instruction",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ir_instruction"
  },
  {
    "label": "ir_node_type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ir_node_type"
  },
  {
    "label": "hash_table",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "hash_table"
  },
  {
    "label": "or",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "or"
  },
  {
    "label": "ir_variable",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ir_variable"
  },
  {
    "label": "ir_function",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ir_function"
  },
  {
    "label": "ir_dereference",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ir_dereference"
  },
  {
    "label": "ir_dereference_array",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ir_dereference_array"
  },
  {
    "label": "ir_dereference_image",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ir_dereference_image"
  },
  {
    "label": "ir_dereference_record",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ir_dereference_record"
  },
  {
    "label": "ir_dereference_variable",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ir_dereference_variable"
  },
  {
    "label": "ir_expression",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ir_expression"
  },
  {
    "label": "ir_rvalue",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ir_rvalue"
  },
  {
    "label": "ir_loop",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ir_loop"
  },
  {
    "label": "ir_assignment",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ir_assignment"
  },
  {
    "label": "ir_call",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ir_call"
  },
  {
    "label": "ir_return",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ir_return"
  },
  {
    "label": "ir_if",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ir_if"
  },
  {
    "label": "ir_swizzle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ir_swizzle"
  },
  {
    "label": "ir_constant",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ir_constant"
  },
  {
    "label": "ir_discard",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ir_discard"
  },
  {
    "label": "ir_atomic",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ir_atomic"
  },
  {
    "label": "ir_texture",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ir_texture"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "ir_rvalue",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ir_rvalue"
  },
  {
    "label": "glsl_type",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "glsl_type"
  },
  {
    "label": "hash_table",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "hash_table"
  },
  {
    "label": "field",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "field"
  },
  {
    "label": "over",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "over"
  },
  {
    "label": "over",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "over"
  },
  {
    "label": "over",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "over"
  },
  {
    "label": "ir_variable_mode",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ir_variable_mode"
  },
  {
    "label": "ir_variable_interpolation",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ir_variable_interpolation"
  },
  {
    "label": "ir_depth_layout",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ir_depth_layout"
  },
  {
    "label": "ir_geometry_input",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ir_geometry_input"
  },
  {
    "label": "ir_state_slot",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ir_state_slot"
  },
  {
    "label": "ir_variable",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ir_variable"
  },
  {
    "label": "glsl_type",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "glsl_type"
  },
  {
    "label": "hash_table",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "hash_table"
  },
  {
    "label": "glsl_type",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "glsl_type"
  },
  {
    "label": "of",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "of"
  },
  {
    "label": "or",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "or"
  },
  {
    "label": "splitting",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "splitting"
  },
  {
    "label": "ir_function_signature",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ir_function_signature"
  },
  {
    "label": "hash_table",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "hash_table"
  },
  {
    "label": "hash_table",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "hash_table"
  },
  {
    "label": "ir_function",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ir_function"
  },
  {
    "label": "glsl_type",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "glsl_type"
  },
  {
    "label": "exec_list",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "exec_list"
  },
  {
    "label": "exec_list",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "exec_list"
  },
  {
    "label": "ir_function",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ir_function"
  },
  {
    "label": "ir_function",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ir_function"
  },
  {
    "label": "ir_function",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ir_function"
  },
  {
    "label": "hash_table",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "hash_table"
  },
  {
    "label": "exec_list",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "exec_list"
  },
  {
    "label": "ir_if",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ir_if"
  },
  {
    "label": "if_mode",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "if_mode"
  },
  {
    "label": "hash_table",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "hash_table"
  },
  {
    "label": "ir_loop",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ir_loop"
  },
  {
    "label": "loop_mode",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "loop_mode"
  },
  {
    "label": "hash_table",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "hash_table"
  },
  {
    "label": "ir_assignment",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ir_assignment"
  },
  {
    "label": "hash_table",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "hash_table"
  },
  {
    "label": "ir_expression_operation",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ir_expression_operation"
  },
  {
    "label": "ir_expression",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ir_expression"
  },
  {
    "label": "glsl_type",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "glsl_type"
  },
  {
    "label": "glsl_type",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "glsl_type"
  },
  {
    "label": "glsl_type",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "glsl_type"
  },
  {
    "label": "hash_table",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "hash_table"
  },
  {
    "label": "ir_call",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ir_call"
  },
  {
    "label": "hash_table",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "hash_table"
  },
  {
    "label": "ir_jump",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ir_jump"
  },
  {
    "label": "ir_return",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ir_return"
  },
  {
    "label": "hash_table",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "hash_table"
  },
  {
    "label": "ir_loop_jump",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ir_loop_jump"
  },
  {
    "label": "jump_mode",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "jump_mode"
  },
  {
    "label": "hash_table",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "hash_table"
  },
  {
    "label": "jump_mode",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "jump_mode"
  },
  {
    "label": "ir_discard",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ir_discard"
  },
  {
    "label": "hash_table",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "hash_table"
  },
  {
    "label": "ir_texture_opcode",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ir_texture_opcode"
  },
  {
    "label": "ir_texture_channel",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ir_texture_channel"
  },
  {
    "label": "ir_texture",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ir_texture"
  },
  {
    "label": "ir_texture_opcode",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ir_texture_opcode"
  },
  {
    "label": "hash_table",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "hash_table"
  },
  {
    "label": "ir_texture",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ir_texture"
  },
  {
    "label": "ir_texture_opcode",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ir_texture_opcode"
  },
  {
    "label": "ir_swizzle_mask",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ir_swizzle_mask"
  },
  {
    "label": "ir_swizzle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ir_swizzle"
  },
  {
    "label": "hash_table",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "hash_table"
  },
  {
    "label": "ir_dereference",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ir_dereference"
  },
  {
    "label": "hash_table",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "hash_table"
  },
  {
    "label": "ir_dereference_variable",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ir_dereference_variable"
  },
  {
    "label": "hash_table",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "hash_table"
  },
  {
    "label": "ir_dereference_array",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ir_dereference_array"
  },
  {
    "label": "hash_table",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "hash_table"
  },
  {
    "label": "ir_image_op",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ir_image_op"
  },
  {
    "label": "ir_dereference_image",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ir_dereference_image"
  },
  {
    "label": "hash_table",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "hash_table"
  },
  {
    "label": "ir_dereference_record",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ir_dereference_record"
  },
  {
    "label": "hash_table",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "hash_table"
  },
  {
    "label": "ir_constant",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ir_constant"
  },
  {
    "label": "glsl_type",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "glsl_type"
  },
  {
    "label": "glsl_type",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "glsl_type"
  },
  {
    "label": "hash_table",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "hash_table"
  },
  {
    "label": "ir_atomic_op",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ir_atomic_op"
  },
  {
    "label": "ir_atomic",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ir_atomic"
  },
  {
    "label": "hash_table",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "hash_table"
  },
  {
    "label": "_mesa_glsl_parse_state",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_mesa_glsl_parse_state"
  },
  {
    "label": "_mesa_glsl_parse_state",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_mesa_glsl_parse_state"
  },
  {
    "label": "gl_shader_program",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "gl_shader_program"
  },
  {
    "label": "_mesa_glsl_parse_state",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_mesa_glsl_parse_state"
  },
  {
    "label": "glsl_symbol_table",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "glsl_symbol_table"
  },
  {
    "label": "glsl_symbol_table",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "glsl_symbol_table"
  },
  {
    "label": "ast_expression",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ast_expression"
  },
  {
    "label": "_mesa_glsl_parse_state",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_mesa_glsl_parse_state"
  },
  {
    "label": "ast_expression",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ast_expression"
  },
  {
    "label": "_mesa_glsl_parse_state",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_mesa_glsl_parse_state"
  },
  {
    "label": "glsl_type",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "glsl_type"
  },
  {
    "label": "_mesa_glsl_parse_state",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_mesa_glsl_parse_state"
  },
  {
    "label": "YYLTYPE",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "YYLTYPE"
  },
  {
    "label": "_mesa_glsl_parse_state",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_mesa_glsl_parse_state"
  },
  {
    "label": "glsl_type",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "glsl_type"
  },
  {
    "label": "AreEquivalent()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AreEquivalent(class ir_instruction* A, class ir_instruction* B)"
  },
  {
    "label": "ir_rvalue()",
    "kind": "Method",
    "detail": "Function (protected:)",
    "insertText": "ir_rvalue()"
  },
  {
    "label": "ir_variable()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "ir_variable(const struct glsl_type *, const char *, ir_variable_mode)"
  },
  {
    "label": "IsEquivalent()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsEquivalent(ir_variable* IR)"
  },
  {
    "label": "ir_function_signature()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "ir_function_signature(const glsl_type *return_type)"
  },
  {
    "label": "replace_parameters()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "replace_parameters(exec_list *new_params)"
  },
  {
    "label": "ir_function()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "ir_function(const char *name)"
  },
  {
    "label": "has_user_signature()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "has_user_signature()"
  },
  {
    "label": "ir_assignment()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "ir_assignment(ir_rvalue *lhs, ir_rvalue *rhs, ir_rvalue *condition = NULL)"
  },
  {
    "label": "IsEquivalent()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsEquivalent(ir_assignment* IR)"
  },
  {
    "label": "set_lhs()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "set_lhs(ir_rvalue *lhs)"
  },
  {
    "label": "IsEquivalent()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsEquivalent(ir_expression* IR)"
  },
  {
    "label": "get_num_operands()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "get_num_operands(ir_expression_operation)"
  },
  {
    "label": "get_operator()",
    "kind": "Method",
    "detail": "Function (ir_expression_operation)",
    "insertText": "get_operator(const char *)"
  },
  {
    "label": "generate_inline()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "generate_inline(ir_instruction *ir)"
  },
  {
    "label": "AreEquivalent()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "AreEquivalent(value, IR->value)"
  },
  {
    "label": "AreEquivalent()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "AreEquivalent(condition, IR->condition)"
  },
  {
    "label": "IsEquivalent()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsEquivalent(ir_texture* IR)"
  },
  {
    "label": "set_sampler()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "set_sampler(ir_dereference *sampler, const glsl_type *type)"
  },
  {
    "label": "get_opcode()",
    "kind": "Method",
    "detail": "Function (ir_texture_opcode)",
    "insertText": "get_opcode(const char *)"
  },
  {
    "label": "ir_swizzle()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "ir_swizzle(ir_rvalue *, unsigned x, unsigned y, unsigned z, unsigned w,\n\t\tunsigned count)"
  },
  {
    "label": "IsEquivalent()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsEquivalent(ir_swizzle* IR)"
  },
  {
    "label": "init_mask()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "init_mask(const unsigned *components, unsigned count)"
  },
  {
    "label": "ir_dereference_variable()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "ir_dereference_variable(ir_variable *var)"
  },
  {
    "label": "ir_dereference_array()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "ir_dereference_array(ir_rvalue *value, ir_rvalue *array_index)"
  },
  {
    "label": "IsEquivalent()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsEquivalent(ir_dereference_array* IR)"
  },
  {
    "label": "set_array()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "set_array(ir_rvalue *value)"
  },
  {
    "label": "ir_dereference_image()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "ir_dereference_image(ir_rvalue *value, ir_rvalue *array_index)"
  },
  {
    "label": "IsEquivalent()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsEquivalent(ir_dereference_image* IR)"
  },
  {
    "label": "ir_dereference_record()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "ir_dereference_record(ir_rvalue *value, const char *field)"
  },
  {
    "label": "IsEquivalent()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsEquivalent(ir_dereference_record* IR)"
  },
  {
    "label": "ir_constant()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "ir_constant(const struct glsl_type *type, const ir_constant_data *data)"
  },
  {
    "label": "IsEquivalent()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsEquivalent(ir_constant* IR)"
  },
  {
    "label": "IsEquivalent()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsEquivalent(ir_atomic* IR)"
  },
  {
    "label": "visit_exec_list()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "visit_exec_list(exec_list *list, ir_visitor *visitor)"
  },
  {
    "label": "validate_ir_tree()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "validate_ir_tree(exec_list *instructions, struct _mesa_glsl_parse_state *state)"
  },
  {
    "label": "detect_recursion_unlinked()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "detect_recursion_unlinked(struct _mesa_glsl_parse_state *state, exec_list *instructions)"
  },
  {
    "label": "clone_ir_list()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "clone_ir_list(void *mem_ctx, exec_list *out, const exec_list *in)"
  },
  {
    "label": "_mesa_glsl_initialize_functions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "_mesa_glsl_initialize_functions(exec_list *instructions,\n\t_mesa_glsl_parse_state *state)"
  },
  {
    "label": "import_prototypes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "import_prototypes(const exec_list *source, exec_list *dest,\n\tstruct glsl_symbol_table *symbols, void *mem_ctx)"
  },
  {
    "label": "apply_type_conversion()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "apply_type_conversion(\n\tconst struct glsl_type *to, ir_rvalue * &from,\n\texec_list* instructions, struct _mesa_glsl_parse_state *state,\n\tbool is_explicit, const struct YYLTYPE *loc)"
  },
  {
    "label": "ir_hash_table_pointer_hash()",
    "kind": "Method",
    "detail": "Function (unsigned)",
    "insertText": "ir_hash_table_pointer_hash(const void *key)"
  },
  {
    "label": "ir_hash_table_pointer_compare()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ir_hash_table_pointer_compare(const void *key1, const void *key2)"
  }
]