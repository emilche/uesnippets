[
  {
    "label": "RetiredFlag",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RetiredFlag"
  },
  {
    "label": "ForEachFlag()",
    "kind": "Method",
    "detail": "Function (# ifndef ABSL_FLAGS_INTERNAL_REGISTRY_H_ # define ABSL_FLAGS_INTERNAL_REGISTRY_H_ # include<functional> # include \" absl / base / config . h \" # include \" absl / flags / commandlineflag . h \" # include \" absl / flags / internal / commandlineflag . h \" # include \" absl / strings / string_view . h \" namespace absl { ABSL_NAMESPACE_BEGIN namespace flags_internal { void)",
    "insertText": "ForEachFlag(std::function<void(CommandLineFlag&)> visitor)"
  },
  {
    "label": "RegisterCommandLineFlag()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RegisterCommandLineFlag(CommandLineFlag&, const char* filename)"
  },
  {
    "label": "FinalizeRegistry()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FinalizeRegistry()"
  },
  {
    "label": "Retire()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Retire(const char* name, FlagFastTypeId type_id, char* buf)"
  },
  {
    "label": "sizeof()",
    "kind": "Method",
    "detail": "Function (size_t kRetiredFlagObjSize = 3*)",
    "insertText": "sizeof(void*)"
  },
  {
    "label": "alignof()",
    "kind": "Method",
    "detail": "Function (size_t kRetiredFlagObjAlignment =)",
    "insertText": "alignof(void*)"
  },
  {
    "label": "Retire()",
    "kind": "Method",
    "detail": "Function (template<T> class RetiredFlag { public : void)",
    "insertText": "Retire(const char* flag_name)"
  },
  {
    "label": "Retire()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Retire(flag_name, base_internal::FastTypeId<T>(), buf_)"
  },
  {
    "label": "alignas()",
    "kind": "Method",
    "detail": "Function (} private :)",
    "insertText": "alignas(kRetiredFlagObjAlignment)"
  }
]