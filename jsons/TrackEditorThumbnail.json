[
  {
    "label": "FMinimalViewInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMinimalViewInfo"
  },
  {
    "label": "FLevelEditorViewportClient",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLevelEditorViewportClient"
  },
  {
    "label": "FSceneViewport",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSceneViewport"
  },
  {
    "label": "FSlateShaderResource",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateShaderResource"
  },
  {
    "label": "FSlateTexture2DRHIRef",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateTexture2DRHIRef"
  },
  {
    "label": "FThumbnailViewportClient",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FThumbnailViewportClient"
  },
  {
    "label": "FTrackEditorThumbnail",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTrackEditorThumbnail"
  },
  {
    "label": "FTrackEditorThumbnailPool",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTrackEditorThumbnailPool"
  },
  {
    "label": "UCameraComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UCameraComponent"
  },
  {
    "label": "MOVIESCENETOOLS_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MOVIESCENETOOLS_API"
  },
  {
    "label": "IViewportThumbnailClient",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IViewportThumbnailClient"
  },
  {
    "label": "ICustomThumbnailClient",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ICustomThumbnailClient"
  },
  {
    "label": "FThumbnailCacheData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FThumbnailCacheData"
  },
  {
    "label": "DECLARE_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Widgets / SWidget . h \" # include \" HAL / ThreadSafeBool . h \" # include \" Animation / CurveSequence . h \" # include \" Rendering / RenderingCommon . h \" # include \" MovieSceneToolsUserSettings . h \" # include \" RHI . h \" # include \" Misc / FrameTime . h \" # include \" Slate / SlateTextures . h \" struct FMinimalViewInfo ; class FLevelEditorViewportClient ; class FSceneViewport ; class FSlateShaderResource ; class FSlateTexture2DRHIRef ; class FThumbnailViewportClient ; class FTrackEditorThumbnail ; class FTrackEditorThumbnailPool ; class UCameraComponent ;)",
    "insertText": "DECLARE_DELEGATE_OneParam(FOnThumbnailDraw, FTrackEditorThumbnail&)"
  },
  {
    "label": "FTrackEditorThumbnail()",
    "kind": "Method",
    "detail": "Function (class FTrackEditorThumbnail : public ISlateViewport,public TSharedFromThis<FTrackEditorThumbnail> { public :)",
    "insertText": "FTrackEditorThumbnail(const FOnThumbnailDraw& InOnDraw, const FIntPoint& InDesiredSize, TRange<double> InTimeRange, double InPosition)"
  },
  {
    "label": "FTrackEditorThumbnail()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FTrackEditorThumbnail()"
  },
  {
    "label": "AssignFrom()",
    "kind": "Method",
    "detail": "Function (public : void)",
    "insertText": "AssignFrom(TSharedRef<FSlateTextureData, ESPMode::ThreadSafe> InTextureData)"
  },
  {
    "label": "ResizeRenderTarget()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResizeRenderTarget(const FIntPoint& InSize)"
  },
  {
    "label": "GetRenderTarget()",
    "kind": "Method",
    "detail": "Function (FSlateTextureRenderTarget2DResource*)",
    "insertText": "GetRenderTarget()"
  },
  {
    "label": "SetupFade()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetupFade(const TSharedRef<SWidget>& InWidget)"
  },
  {
    "label": "PlayFade()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PlayFade()"
  },
  {
    "label": "GetFadeInCurve()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetFadeInCurve()"
  },
  {
    "label": "GetTimeRange()",
    "kind": "Method",
    "detail": "Function (const TRange<double>)",
    "insertText": "GetTimeRange()"
  },
  {
    "label": "GetViewportRenderTargetTexture()",
    "kind": "Method",
    "detail": "Function (FSlateShaderResource*)",
    "insertText": "GetViewportRenderTargetTexture()"
  },
  {
    "label": "RequiresVsync()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RequiresVsync()"
  },
  {
    "label": "DestroyTexture()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyTexture()"
  },
  {
    "label": "GetViewCamera()",
    "kind": "Method",
    "detail": "Function (public : int32 SortOrder ; FThreadSafeBool bHasFinishedDrawing ; bool bIgnoreAlpha ; private : FOnThumbnailDraw OnDraw ; FIntPoint DesiredSize ; FSlateTexture2DRHIRef* ThumbnailTexture ; FSlateTextureRenderTarget2DResource* ThumbnailRenderTarget ; TRange<double> TimeRange ; double Position ; FCurveSequence FadeInCurve ; } ; struct IViewportThumbnailClient { UCameraComponent*)",
    "insertText": "GetViewCamera()"
  },
  {
    "label": "PostDraw()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "PostDraw(FTrackEditorThumbnail& TrackEditorThumbnail)"
  },
  {
    "label": "Setup()",
    "kind": "Method",
    "detail": "Function (} } ; struct ICustomThumbnailClient { void)",
    "insertText": "Setup()"
  },
  {
    "label": "Draw()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Draw(FTrackEditorThumbnail& TrackEditorThumbnail)"
  },
  {
    "label": "FThumbnailCacheData()",
    "kind": "Method",
    "detail": "Function (} } ; struct FThumbnailCacheData {)",
    "insertText": "FThumbnailCacheData() : VisibleRange(0), TimeRange(0), AllottedSize(0,0), DesiredSize(0, 0), Quality(EThumbnailQuality::Normal)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "operator(const FThumbnailCacheData& RHS)"
  },
  {
    "label": "FTrackEditorThumbnailCache()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FTrackEditorThumbnailCache(const TSharedPtr<FTrackEditorThumbnailPool>& ThumbnailPool, ICustomThumbnailClient* InCustomThumbnailClient)"
  },
  {
    "label": "FTrackEditorThumbnailCache()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FTrackEditorThumbnailCache()"
  },
  {
    "label": "ForceRedraw()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ForceRedraw()"
  },
  {
    "label": "SetSingleReferenceFrame()",
    "kind": "Method",
    "detail": "Function (bForceRedraw = true ; } void)",
    "insertText": "SetSingleReferenceFrame(TOptional<double> InReferenceFrame)"
  },
  {
    "label": "GetSingleReferenceFrame()",
    "kind": "Method",
    "detail": "Function (TOptional<double>)",
    "insertText": "GetSingleReferenceFrame()"
  },
  {
    "label": "Revalidate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Revalidate(double InCurrentTime)"
  },
  {
    "label": "GetThumbnails()",
    "kind": "Method",
    "detail": "Function (const TArray<TSharedPtr<FTrackEditorThumbnail>>&)",
    "insertText": "GetThumbnails()"
  },
  {
    "label": "DrawViewportThumbnail()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DrawViewportThumbnail(FTrackEditorThumbnail& TrackEditorThumbnail)"
  },
  {
    "label": "ComputeNewThumbnails()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ComputeNewThumbnails()"
  },
  {
    "label": "ShouldRegenerateEverything()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldRegenerateEverything()"
  },
  {
    "label": "CalculateTextureSize()",
    "kind": "Method",
    "detail": "Function (FIntPoint)",
    "insertText": "CalculateTextureSize(const FMinimalViewInfo& ViewInfo)"
  },
  {
    "label": "UpdateSingleThumbnail()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateSingleThumbnail()"
  },
  {
    "label": "UpdateFilledThumbnails()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateFilledThumbnails()"
  },
  {
    "label": "GenerateFront()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GenerateFront(const TRange<double>& Boundary)"
  },
  {
    "label": "GenerateBack()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GenerateBack(const TRange<double>& Boundary)"
  },
  {
    "label": "SetupViewportEngineFlags()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetupViewportEngineFlags()"
  }
]