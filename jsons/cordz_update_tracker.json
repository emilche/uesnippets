[
  {
    "label": "CordzUpdateTracker",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CordzUpdateTracker"
  },
  {
    "label": "MethodIdentifier",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "MethodIdentifier"
  },
  {
    "label": "Counter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Counter"
  },
  {
    "label": "CordzUpdateTracker()",
    "kind": "Method",
    "detail": "Function (# ifndef ABSL_STRINGS_INTERNAL_CORDZ_UPDATE_TRACKER_H_ # define ABSL_STRINGS_INTERNAL_CORDZ_UPDATE_TRACKER_H_ # include<atomic> # include<cstdint> # include \" absl / base / config . h \" namespace absl { ABSL_NAMESPACE_BEGIN namespace cord_internal { class CordzUpdateTracker { public : enum MethodIdentifier { kUnknown,kAppendCord,kAppendCordBuffer,kAppendExternalMemory,kAppendString,kAssignCord,kAssignString,kClear,kConstructorCord,kConstructorString,kCordReader,kFlatten,kGetAppendBuffer,kGetAppendRegion,kMakeCordFromExternal,kMoveAppendCord,kMoveAssignCord,kMovePrependCord,kPrependCord,kPrependCordBuffer,kPrependString,kRemovePrefix,kRemoveSuffix,kSetExpectedChecksum,kSubCord,kNumMethods,} ;)",
    "insertText": "CordzUpdateTracker()"
  },
  {
    "label": "CordzUpdateTracker()",
    "kind": "Method",
    "detail": "Function (} { })",
    "insertText": "CordzUpdateTracker(const CordzUpdateTracker& rhs)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (* this = rhs ; } CordzUpdateTracker&)",
    "insertText": "operator(const CordzUpdateTracker& rhs)"
  },
  {
    "label": "store()",
    "kind": "Method",
    "detail": "Function (values_ [ i ] .)",
    "insertText": "store(rhs.values_[i].load(std::memory_order_relaxed), std::memory_order_relaxed)"
  },
  {
    "label": "Value()",
    "kind": "Method",
    "detail": "Function (} return* this ; } int64_t)",
    "insertText": "Value(MethodIdentifier method)"
  },
  {
    "label": "LossyAdd()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "LossyAdd(MethodIdentifier method, int64_t n = 1)"
  },
  {
    "label": "store()",
    "kind": "Method",
    "detail": "Function (auto& value = values_ [ method ] ; value .)",
    "insertText": "store(value.load(std::memory_order_relaxed) + n, std::memory_order_relaxed)"
  },
  {
    "label": "LossyAdd()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "LossyAdd(const CordzUpdateTracker& src)"
  },
  {
    "label": "MethodIdentifier()",
    "kind": "Method",
    "detail": "Function (MethodIdentifier method = static_cast<)",
    "insertText": "MethodIdentifier(i)"
  },
  {
    "label": "LossyAdd()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LossyAdd(method, value)"
  },
  {
    "label": "Counter()",
    "kind": "Method",
    "detail": "Function (} } } private : class Counter : public std::atomic<int64_t> { public :)",
    "insertText": "Counter() noexcept : std::atomic<int64_t>(0)"
  }
]