[
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FStructSerializerState",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FStructSerializerState"
  },
  {
    "label": "IStructSerializerBackend",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IStructSerializerBackend"
  },
  {
    "label": "ENUM_CLASS_FLAGS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Misc / EnumClassFlags . h \" # include \" UObject / Field . h \" # include \" UObject / UnrealType . h \" enum class EStructSerializerBackendFlags { None = 0,WriteTextAsComplexString = 1<<0,WriteByteArrayAsByteStream = 1<<1,WriteCborStandardEndianness = 1<<2,WriteLWCTypesAsFloats = 1<<3,Legacy = None,LegacyUE4 = WriteTextAsComplexString | WriteByteArrayAsByteStream | WriteLWCTypesAsFloats,Default = WriteTextAsComplexString | WriteByteArrayAsByteStream,} ;)",
    "insertText": "ENUM_CLASS_FLAGS(EStructSerializerBackendFlags)"
  },
  {
    "label": "ENUM_CLASS_FLAGS()",
    "kind": "Method",
    "detail": "Function (enum class EStructSerializerStateFlags { None = 0,WritingContainerElement = 1<<0,} ;)",
    "insertText": "ENUM_CLASS_FLAGS(EStructSerializerStateFlags)"
  },
  {
    "label": "FStructSerializerState()",
    "kind": "Method",
    "detail": "Function (struct FStructSerializerState {)",
    "insertText": "FStructSerializerState()"
  },
  {
    "label": "FStructSerializerState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FStructSerializerState(void* InValuePtr, FProperty* InProperty, EStructSerializerStateFlags InFlags) : ValueData(InValuePtr) , ValueProperty(InProperty) , FieldType(InProperty->GetClass()) , StateFlags(InFlags)"
  },
  {
    "label": "BeginArray()",
    "kind": "Method",
    "detail": "Function (} bool HasBeenProcessed = false ; const void* KeyData = nullptr ; FProperty* KeyProperty = nullptr ; const void* ValueData = nullptr ; FProperty* ValueProperty = nullptr ; UStruct* ValueType = nullptr ; FFieldClass* FieldType = nullptr ; int32 ElementIndex = INDEX_NONE ; EStructSerializerStateFlags StateFlags = EStructSerializerStateFlags::None ; } ; class IStructSerializerBackend { public : void)",
    "insertText": "BeginArray(const FStructSerializerState& State)"
  },
  {
    "label": "BeginStructure()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginStructure(const FStructSerializerState& State)"
  },
  {
    "label": "EndArray()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EndArray(const FStructSerializerState& State)"
  },
  {
    "label": "EndStructure()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EndStructure(const FStructSerializerState& State)"
  },
  {
    "label": "WriteComment()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WriteComment(const FString& Comment)"
  },
  {
    "label": "WriteProperty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WriteProperty(const FStructSerializerState& State, int32 ArrayIndex = 0)"
  },
  {
    "label": "WritePODArray()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "WritePODArray(const FStructSerializerState& State)"
  }
]