[
  {
    "label": "ACharacter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ACharacter"
  },
  {
    "label": "UCharacterMovementComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UCharacterMovementComponent"
  },
  {
    "label": "UCurveFloat",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UCurveFloat"
  },
  {
    "label": "UCurveVector",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UCurveVector"
  },
  {
    "label": "RootMotionSourceDebug",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RootMotionSourceDebug"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FRootMotionServerToLocalIDMapping",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRootMotionServerToLocalIDMapping"
  },
  {
    "label": "FRootMotionSourceStatus",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRootMotionSourceStatus"
  },
  {
    "label": "FRootMotionSourceSettings",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRootMotionSourceSettings"
  },
  {
    "label": "FRootMotionFinishVelocitySettings",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRootMotionFinishVelocitySettings"
  },
  {
    "label": "FRootMotionSourceFixLayout",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRootMotionSourceFixLayout"
  },
  {
    "label": "FRootMotionSource",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRootMotionSource"
  },
  {
    "label": "FReferenceCollector",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FReferenceCollector"
  },
  {
    "label": "TStructOpsTypeTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TStructOpsTypeTraits"
  },
  {
    "label": "FRootMotionSource_ConstantForce",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRootMotionSource_ConstantForce"
  },
  {
    "label": "FRootMotionSource_RadialForce",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRootMotionSource_RadialForce"
  },
  {
    "label": "FRootMotionSource_MoveToForce",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRootMotionSource_MoveToForce"
  },
  {
    "label": "FRootMotionSource_MoveToDynamicForce",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRootMotionSource_MoveToDynamicForce"
  },
  {
    "label": "FRootMotionSource_JumpForce",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRootMotionSource_JumpForce"
  },
  {
    "label": "FRootMotionSourceGroup",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRootMotionSourceGroup"
  },
  {
    "label": "UPackageMap",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPackageMap"
  },
  {
    "label": "ROOT_MOTION_DEBUG()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" HAL / IConsoleManager . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / Class . h \" # include \" Engine / NetSerialization . h \" # include \" Animation / AnimationAsset . h \" # include \" RootMotionSource . generated . h \" class ACharacter ; class UCharacterMovementComponent ; class UCurveFloat ; class UCurveVector ; # define)",
    "insertText": "ROOT_MOTION_DEBUG(1 && !(UE_BUILD_SHIPPING || UE_BUILD_TEST))"
  },
  {
    "label": "PrintOnScreen()",
    "kind": "Method",
    "detail": "Function (TAutoConsoleVariable<int32> CVarDebugRootMotionSources ; void)",
    "insertText": "PrintOnScreen(const ACharacter& InCharacter, const FString& InString)"
  },
  {
    "label": "PrintOnScreenServerMsg()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PrintOnScreenServerMsg(const FString& InString)"
  },
  {
    "label": "UENUM()",
    "kind": "Method",
    "detail": "Function (} ; # endif)",
    "insertText": "UENUM()"
  },
  {
    "label": "FRootMotionServerToLocalIDMapping()",
    "kind": "Method",
    "detail": "Function (UseSensitiveLiftoffCheck = 0 x01,DisablePartialEndTick = 0 x02,IgnoreZAccumulate = 0 x04 } ; enum class ERootMotionSourceID : uint16 { Invalid = 0 } ; struct FRootMotionServerToLocalIDMapping {)",
    "insertText": "FRootMotionServerToLocalIDMapping()"
  },
  {
    "label": "IsStillValid()",
    "kind": "Method",
    "detail": "Function (uint16 ServerID ; uint16 LocalID ; float TimeStamp ; bool)",
    "insertText": "IsStillValid(float CurrentTimeStamp)"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "USTRUCT()"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() UPROPERTY()"
  },
  {
    "label": "FRootMotionSourceStatus()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FRootMotionSourceStatus()"
  },
  {
    "label": "Clear()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Clear()"
  },
  {
    "label": "SetFlag()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFlag(ERootMotionSourceStatusFlags Flag)"
  },
  {
    "label": "UnSetFlag()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnSetFlag(ERootMotionSourceStatusFlags Flag)"
  },
  {
    "label": "HasFlag()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasFlag(ERootMotionSourceStatusFlags Flag)"
  },
  {
    "label": "FRootMotionSourceSettings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FRootMotionSourceSettings()"
  },
  {
    "label": "SetFlag()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFlag(ERootMotionSourceSettingsFlags Flag)"
  },
  {
    "label": "UnSetFlag()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnSetFlag(ERootMotionSourceSettingsFlags Flag)"
  },
  {
    "label": "HasFlag()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasFlag(ERootMotionSourceSettingsFlags Flag)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FRootMotionSourceSettings&)",
    "insertText": "operator(const FRootMotionSourceSettings& Other)"
  },
  {
    "label": "FRootMotionFinishVelocitySettings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FRootMotionFinishVelocitySettings() : Mode(ERootMotionFinishVelocityMode::MaintainLastRootMotionVelocity) , ClampVelocity(0.f) , SetVelocity(FVector::ZeroVector)"
  },
  {
    "label": "FRootMotionSourceFixLayout()",
    "kind": "Method",
    "detail": "Function (} } ; struct FRootMotionSourceFixLayout { ~)",
    "insertText": "FRootMotionSourceFixLayout()"
  },
  {
    "label": "FRootMotionSource()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FRootMotionSource()"
  },
  {
    "label": "GetTime()",
    "kind": "Method",
    "detail": "Function (} float)",
    "insertText": "GetTime()"
  },
  {
    "label": "GetStartTime()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetStartTime()"
  },
  {
    "label": "IsStartTimeValid()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsStartTimeValid()"
  },
  {
    "label": "GetDuration()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetDuration()"
  },
  {
    "label": "IsTimeOutEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsTimeOutEnabled()"
  },
  {
    "label": "Clone()",
    "kind": "Method",
    "detail": "Function (FRootMotionSource*)",
    "insertText": "Clone()"
  },
  {
    "label": "Matches()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Matches(const FRootMotionSource* Other)"
  },
  {
    "label": "MatchesAndHasSameState()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "MatchesAndHasSameState(const FRootMotionSource* Other)"
  },
  {
    "label": "UpdateStateFrom()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UpdateStateFrom(const FRootMotionSource* SourceToTakeStateFrom, bool bMarkForSimulatedCatchup = false)"
  },
  {
    "label": "IsActive()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsActive()"
  },
  {
    "label": "SetTime()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTime(float NewTime)"
  },
  {
    "label": "CheckTimeOut()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CheckTimeOut()"
  },
  {
    "label": "PrepareRootMotion()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PrepareRootMotion(float SimulationTime, float MovementTickTime, const ACharacter& Character, const UCharacterMovementComponent& MoveComponent)"
  },
  {
    "label": "NetSerialize()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "NetSerialize(FArchive& Ar, UPackageMap* Map, bool& bOutSuccess)"
  },
  {
    "label": "GetScriptStruct()",
    "kind": "Method",
    "detail": "Function (UScriptStruct*)",
    "insertText": "GetScriptStruct()"
  },
  {
    "label": "ToSimpleString()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "ToSimpleString()"
  },
  {
    "label": "AddReferencedObjects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddReferencedObjects(class FReferenceCollector& Collector)"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() ENGINE_API FRootMotionSource_ConstantForce()"
  },
  {
    "label": "FRootMotionSource_ConstantForce()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FRootMotionSource_ConstantForce()"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() ENGINE_API FRootMotionSource_RadialForce()"
  },
  {
    "label": "FRootMotionSource_RadialForce()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FRootMotionSource_RadialForce()"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() ENGINE_API FRootMotionSource_MoveToForce()"
  },
  {
    "label": "FRootMotionSource_MoveToForce()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FRootMotionSource_MoveToForce()"
  },
  {
    "label": "GetPathOffsetInWorldSpace()",
    "kind": "Method",
    "detail": "Function (FVector)",
    "insertText": "GetPathOffsetInWorldSpace(const float MoveFraction)"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() ENGINE_API FRootMotionSource_MoveToDynamicForce()"
  },
  {
    "label": "FRootMotionSource_MoveToDynamicForce()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FRootMotionSource_MoveToDynamicForce()"
  },
  {
    "label": "SetTargetLocation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTargetLocation(FVector NewTargetLocation)"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() ENGINE_API FRootMotionSource_JumpForce()"
  },
  {
    "label": "FRootMotionSource_JumpForce()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FRootMotionSource_JumpForce()"
  },
  {
    "label": "GetPathOffset()",
    "kind": "Method",
    "detail": "Function (FVector SavedHalfwayLocation ; FVector)",
    "insertText": "GetPathOffset(float MoveFraction)"
  },
  {
    "label": "GetRelativeLocation()",
    "kind": "Method",
    "detail": "Function (FVector)",
    "insertText": "GetRelativeLocation(float MoveFraction)"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() ENGINE_API FRootMotionSourceGroup()"
  },
  {
    "label": "FRootMotionSourceGroup()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FRootMotionSourceGroup()"
  },
  {
    "label": "CleanUpInvalidRootMotion()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CleanUpInvalidRootMotion(float DeltaTime, const ACharacter& Character, UCharacterMovementComponent& MoveComponent)"
  },
  {
    "label": "PrepareRootMotion()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PrepareRootMotion(float DeltaTime, const ACharacter& Character, const UCharacterMovementComponent& InMoveComponent, bool bForcePrepareAll = false)"
  },
  {
    "label": "AccumulateOverrideRootMotionVelocity()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AccumulateOverrideRootMotionVelocity(float DeltaTime, const ACharacter& Character, const UCharacterMovementComponent& MoveComponent, FVector& InOutVelocity)"
  },
  {
    "label": "AccumulateAdditiveRootMotionVelocity()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AccumulateAdditiveRootMotionVelocity(float DeltaTime, const ACharacter& Character, const UCharacterMovementComponent& MoveComponent, FVector& InOutVelocity)"
  },
  {
    "label": "GetOverrideRootMotionRotation()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetOverrideRootMotionRotation(float DeltaTime, const ACharacter& Character, const UCharacterMovementComponent& MoveComponent, FQuat& OutRotation)"
  },
  {
    "label": "NeedsSimulatedSmoothing()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "NeedsSimulatedSmoothing()"
  },
  {
    "label": "SetPendingRootMotionSourceMinStartTimes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPendingRootMotionSourceMinStartTimes(float NewStartTime)"
  },
  {
    "label": "ApplyTimeStampReset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyTimeStampReset(float DeltaTime)"
  },
  {
    "label": "HasOverrideVelocity()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasOverrideVelocity()"
  },
  {
    "label": "HasOverrideVelocityWithIgnoreZAccumulate()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasOverrideVelocityWithIgnoreZAccumulate()"
  },
  {
    "label": "HasAdditiveVelocity()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasAdditiveVelocity()"
  },
  {
    "label": "HasVelocity()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasVelocity()"
  },
  {
    "label": "HasActiveRootMotionSources()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasActiveRootMotionSources()"
  },
  {
    "label": "HasRootMotionToApply()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasRootMotionToApply()"
  },
  {
    "label": "ApplyRootMotionSource()",
    "kind": "Method",
    "detail": "Function (uint16)",
    "insertText": "ApplyRootMotionSource(TSharedPtr<FRootMotionSource> SourcePtr)"
  },
  {
    "label": "GetRootMotionSource()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FRootMotionSource>)",
    "insertText": "GetRootMotionSource(FName InstanceName)"
  },
  {
    "label": "GetRootMotionSourceByID()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FRootMotionSource>)",
    "insertText": "GetRootMotionSourceByID(uint16 RootMotionSourceID)"
  },
  {
    "label": "RemoveRootMotionSource()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveRootMotionSource(FName InstanceName)"
  },
  {
    "label": "RemoveRootMotionSourceByID()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveRootMotionSourceByID(uint16 RootMotionSourceID)"
  },
  {
    "label": "UpdateStateFrom()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateStateFrom(const FRootMotionSourceGroup& GroupToTakeStateFrom, bool bMarkForSimulatedCatchup = false)"
  },
  {
    "label": "NetSerialize()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "NetSerialize(FArchive& Ar, class UPackageMap* Map, bool& bOutSuccess, uint8 MaxNumRootMotionSourcesToSerialize = MAX_uint8)"
  },
  {
    "label": "CullInvalidSources()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CullInvalidSources()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FRootMotionSourceGroup&)",
    "insertText": "operator(const FRootMotionSourceGroup& Other)"
  },
  {
    "label": "AddStructReferencedObjects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddStructReferencedObjects(FReferenceCollector& Collector)"
  },
  {
    "label": "AccumulateRootMotionVelocity()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "AccumulateRootMotionVelocity(ERootMotionAccumulateMode RootMotionType, float DeltaTime, const ACharacter& Character, const UCharacterMovementComponent& MoveComponent, FVector& InOutVelocity)"
  },
  {
    "label": "AccumulateRootMotionVelocityFromSource()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AccumulateRootMotionVelocityFromSource(const FRootMotionSource& RootMotionSource, float DeltaTime, const ACharacter& Character, const UCharacterMovementComponent& MoveComponent, FVector& InOutVelocity)"
  },
  {
    "label": "NetSerializeRMSArray()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NetSerializeRMSArray(FArchive& Ar, class UPackageMap* Map, bool& bOutSuccess, TArray< TSharedPtr<FRootMotionSource> >& RootMotionSourceArray, uint8 MaxNumRootMotionSourcesToSerialize = MAX_uint8)"
  }
]