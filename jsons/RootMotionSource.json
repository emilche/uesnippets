[
  {
    "label": "ACharacter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ACharacter"
  },
  {
    "label": "UCharacterMovementComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UCharacterMovementComponent"
  },
  {
    "label": "UCurveFloat",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UCurveFloat"
  },
  {
    "label": "UCurveVector",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UCurveVector"
  },
  {
    "label": "RootMotionSourceDebug",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RootMotionSourceDebug"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FRootMotionServerToLocalIDMapping",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRootMotionServerToLocalIDMapping"
  },
  {
    "label": "FRootMotionSourceStatus",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRootMotionSourceStatus"
  },
  {
    "label": "FRootMotionSourceSettings",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRootMotionSourceSettings"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FRootMotionFinishVelocitySettings",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRootMotionFinishVelocitySettings"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "FRootMotionSourceFixLayout",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRootMotionSourceFixLayout"
  },
  {
    "label": "FRootMotionSource",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRootMotionSource"
  },
  {
    "label": "could",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "could"
  },
  {
    "label": "FReferenceCollector",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FReferenceCollector"
  },
  {
    "label": "TStructOpsTypeTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TStructOpsTypeTraits"
  },
  {
    "label": "FRootMotionSource_ConstantForce",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRootMotionSource_ConstantForce"
  },
  {
    "label": "FReferenceCollector",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FReferenceCollector"
  },
  {
    "label": "TStructOpsTypeTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TStructOpsTypeTraits"
  },
  {
    "label": "FRootMotionSource_RadialForce",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRootMotionSource_RadialForce"
  },
  {
    "label": "FReferenceCollector",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FReferenceCollector"
  },
  {
    "label": "TStructOpsTypeTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TStructOpsTypeTraits"
  },
  {
    "label": "FRootMotionSource_MoveToForce",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRootMotionSource_MoveToForce"
  },
  {
    "label": "FReferenceCollector",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FReferenceCollector"
  },
  {
    "label": "TStructOpsTypeTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TStructOpsTypeTraits"
  },
  {
    "label": "FRootMotionSource_MoveToDynamicForce",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRootMotionSource_MoveToDynamicForce"
  },
  {
    "label": "FReferenceCollector",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FReferenceCollector"
  },
  {
    "label": "TStructOpsTypeTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TStructOpsTypeTraits"
  },
  {
    "label": "FRootMotionSource_JumpForce",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRootMotionSource_JumpForce"
  },
  {
    "label": "FReferenceCollector",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FReferenceCollector"
  },
  {
    "label": "TStructOpsTypeTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TStructOpsTypeTraits"
  },
  {
    "label": "FRootMotionSourceGroup",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRootMotionSourceGroup"
  },
  {
    "label": "UPackageMap",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPackageMap"
  },
  {
    "label": "UPackageMap",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPackageMap"
  },
  {
    "label": "TStructOpsTypeTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TStructOpsTypeTraits"
  },
  {
    "label": "PrintOnScreen()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PrintOnScreen(const ACharacter& InCharacter, const FString& InString)"
  },
  {
    "label": "PrintOnScreenServerMsg()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PrintOnScreenServerMsg(const FString& InString)"
  },
  {
    "label": "FRootMotionServerToLocalIDMapping()",
    "kind": "Method",
    "detail": "Function (ENGINE_API)",
    "insertText": "FRootMotionServerToLocalIDMapping()"
  },
  {
    "label": "IsStillValid()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsStillValid(float CurrentTimeStamp)"
  },
  {
    "label": "FRootMotionSourceStatus()",
    "kind": "Method",
    "detail": "Function (ENGINE_API)",
    "insertText": "FRootMotionSourceStatus()"
  },
  {
    "label": "Clear()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Clear()"
  },
  {
    "label": "SetFlag()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFlag(ERootMotionSourceStatusFlags Flag)"
  },
  {
    "label": "UnSetFlag()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnSetFlag(ERootMotionSourceStatusFlags Flag)"
  },
  {
    "label": "FRootMotionSourceSettings()",
    "kind": "Method",
    "detail": "Function (ENGINE_API)",
    "insertText": "FRootMotionSourceSettings()"
  },
  {
    "label": "Clear()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Clear()"
  },
  {
    "label": "SetFlag()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFlag(ERootMotionSourceSettingsFlags Flag)"
  },
  {
    "label": "UnSetFlag()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnSetFlag(ERootMotionSourceSettingsFlags Flag)"
  },
  {
    "label": "FRootMotionSource()",
    "kind": "Method",
    "detail": "Function (ENGINE_API)",
    "insertText": "FRootMotionSource()"
  },
  {
    "label": "UpdateStateFrom()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UpdateStateFrom(const FRootMotionSource* SourceToTakeStateFrom, bool bMarkForSimulatedCatchup = false)"
  },
  {
    "label": "SetTime()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTime(float NewTime)"
  },
  {
    "label": "CheckTimeOut()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CheckTimeOut()"
  },
  {
    "label": "PrepareRootMotion()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PrepareRootMotion(\n\t\tfloat SimulationTime,\n\t\tfloat MovementTickTime,\n\t\tconst ACharacter& Character, \n\t\tconst UCharacterMovementComponent& MoveComponent\n\t\t)"
  },
  {
    "label": "NetSerialize()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "NetSerialize(FArchive& Ar, UPackageMap* Map, bool& bOutSuccess)"
  },
  {
    "label": "FRootMotionSource_ConstantForce()",
    "kind": "Method",
    "detail": "Function (ENGINE_API)",
    "insertText": "FRootMotionSource_ConstantForce()"
  },
  {
    "label": "FRootMotionSource_RadialForce()",
    "kind": "Method",
    "detail": "Function (ENGINE_API)",
    "insertText": "FRootMotionSource_RadialForce()"
  },
  {
    "label": "FRootMotionSource_MoveToForce()",
    "kind": "Method",
    "detail": "Function (ENGINE_API)",
    "insertText": "FRootMotionSource_MoveToForce()"
  },
  {
    "label": "FRootMotionSource_MoveToDynamicForce()",
    "kind": "Method",
    "detail": "Function (ENGINE_API)",
    "insertText": "FRootMotionSource_MoveToDynamicForce()"
  },
  {
    "label": "SetTargetLocation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTargetLocation(FVector NewTargetLocation)"
  },
  {
    "label": "FRootMotionSource_JumpForce()",
    "kind": "Method",
    "detail": "Function (ENGINE_API)",
    "insertText": "FRootMotionSource_JumpForce()"
  },
  {
    "label": "FRootMotionSourceGroup()",
    "kind": "Method",
    "detail": "Function (ENGINE_API)",
    "insertText": "FRootMotionSourceGroup()"
  },
  {
    "label": "CleanUpInvalidRootMotion()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CleanUpInvalidRootMotion(float DeltaTime, const ACharacter& Character, UCharacterMovementComponent& MoveComponent)"
  },
  {
    "label": "PrepareRootMotion()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PrepareRootMotion(float DeltaTime, const ACharacter& Character, const UCharacterMovementComponent& InMoveComponent, bool bForcePrepareAll = false)"
  },
  {
    "label": "SetPendingRootMotionSourceMinStartTimes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPendingRootMotionSourceMinStartTimes(float NewStartTime)"
  },
  {
    "label": "ApplyTimeStampReset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyTimeStampReset(float DeltaTime)"
  },
  {
    "label": "ApplyRootMotionSource()",
    "kind": "Method",
    "detail": "Function (uint16)",
    "insertText": "ApplyRootMotionSource(TSharedPtr<FRootMotionSource> SourcePtr)"
  },
  {
    "label": "GetRootMotionSource()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FRootMotionSource>)",
    "insertText": "GetRootMotionSource(FName InstanceName)"
  },
  {
    "label": "GetRootMotionSourceByID()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FRootMotionSource>)",
    "insertText": "GetRootMotionSourceByID(uint16 RootMotionSourceID)"
  },
  {
    "label": "RemoveRootMotionSource()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveRootMotionSource(FName InstanceName)"
  },
  {
    "label": "RemoveRootMotionSourceByID()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveRootMotionSourceByID(uint16 RootMotionSourceID)"
  },
  {
    "label": "UpdateStateFrom()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateStateFrom(const FRootMotionSourceGroup& GroupToTakeStateFrom, bool bMarkForSimulatedCatchup = false)"
  },
  {
    "label": "NetSerialize()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "NetSerialize(FArchive& Ar, class UPackageMap* Map, bool& bOutSuccess, uint8 MaxNumRootMotionSourcesToSerialize = MAX_uint8)"
  },
  {
    "label": "Clear()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Clear()"
  },
  {
    "label": "CullInvalidSources()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CullInvalidSources()"
  },
  {
    "label": "NetSerializeRMSArray()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NetSerializeRMSArray(FArchive& Ar, class UPackageMap* Map, bool& bOutSuccess, TArray< TSharedPtr<FRootMotionSource> >& RootMotionSourceArray, uint8 MaxNumRootMotionSourcesToSerialize = MAX_uint8)"
  }
]