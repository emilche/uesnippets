[
  {
    "label": "PayloadTypeMapper",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PayloadTypeMapper"
  },
  {
    "label": "SdpAudioFormatOrdering",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SdpAudioFormatOrdering"
  },
  {
    "label": "AudioCodecToSdpAudioFormat()",
    "kind": "Method",
    "detail": "Function (# ifndef MEDIA_ENGINE_PAYLOAD_TYPE_MAPPER_H_ # define MEDIA_ENGINE_PAYLOAD_TYPE_MAPPER_H_ # include<map> # include<set> # include \" absl / types / optional . h \" # include \" api / audio_codecs / audio_format . h \" # include \" media / base / codec . h \" namespace cricket { webrtc::SdpAudioFormat)",
    "insertText": "AudioCodecToSdpAudioFormat(const AudioCodec& ac)"
  },
  {
    "label": "PayloadTypeMapper()",
    "kind": "Method",
    "detail": "Function (class PayloadTypeMapper { public :)",
    "insertText": "PayloadTypeMapper()"
  },
  {
    "label": "GetMappingFor()",
    "kind": "Method",
    "detail": "Function (absl::optional<int>)",
    "insertText": "GetMappingFor(const webrtc::SdpAudioFormat& format)"
  },
  {
    "label": "FindMappingFor()",
    "kind": "Method",
    "detail": "Function (absl::optional<int>)",
    "insertText": "FindMappingFor(const webrtc::SdpAudioFormat& format)"
  },
  {
    "label": "ToAudioCodec()",
    "kind": "Method",
    "detail": "Function (absl::optional<AudioCodec>)",
    "insertText": "ToAudioCodec(const webrtc::SdpAudioFormat& format)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (private : struct SdpAudioFormatOrdering { bool)",
    "insertText": "operator()(const webrtc::SdpAudioFormat& a, const webrtc::SdpAudioFormat& b)"
  }
]