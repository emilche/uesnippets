[
  {
    "label": "FMetalVertexDeclaration",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMetalVertexDeclaration"
  },
  {
    "label": "FMetalVertexDeclaration()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" MetalHashedVertexDescriptor . h \" # include \" MetalRHIPrivate . h \" # include \" RHI . h \" # include \" RHIResources . h \" # pragma mark - Metal Vertex Declaration Class class FMetalVertexDeclaration : public FRHIVertexDeclaration { public :)",
    "insertText": "FMetalVertexDeclaration(const FVertexDeclarationElementList& InElements)"
  },
  {
    "label": "FMetalVertexDeclaration()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FMetalVertexDeclaration()"
  },
  {
    "label": "GetInitializer()",
    "kind": "Method",
    "detail": "Function (# if METAL_USE_METAL_SHADER_CONVERTER IRVersionedInputLayoutDescriptor InputDescriptor ; TStaticArray<uint32,MaxVertexElementCount> InputDescriptorBufferStrides ; # endif FVertexDeclarationElementList Elements ; FMetalHashedVertexDescriptor Layout ; uint32 BaseHash ; bool)",
    "insertText": "GetInitializer(FVertexDeclarationElementList& Init)"
  },
  {
    "label": "GetPrecachePSOHash()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetPrecachePSOHash()"
  }
]