[
  {
    "label": "ULevel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULevel"
  },
  {
    "label": "UActorFolder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UActorFolder"
  },
  {
    "label": "UWorld",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UWorld"
  },
  {
    "label": "FFolder",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFolder"
  },
  {
    "label": "FFolder()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Misc / Guid . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / Object . h \" # include \" UObject / ObjectKey . h \" # include \" UObject / WeakObjectPtr . h \" # include \" Misc / Paths . h \" # include \" Misc / Optional . h \" class ULevel ; class UActorFolder ; class UWorld ; struct FFolder { # if WITH_EDITOR typedef FObjectKey FRootObject ;)",
    "insertText": "FFolder() : bPathInitialized(true) , Path(GetEmptyPath()) , RootObject(GetInvalidRootObject())"
  },
  {
    "label": "FFolder()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FFolder(const FRootObject& InRootObject, const FName& InPath = GetEmptyPath()) : bPathInitialized(true) , Path(InPath) , RootObject(InRootObject)"
  },
  {
    "label": "ToString()",
    "kind": "Method",
    "detail": "Function (TStringBuilder<5 1 2> Result ; TArray<FString> Parts ; Path .)",
    "insertText": "ToString().ParseIntoArray(Parts, TEXT(\"/\"), true)"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (Result + =)",
    "insertText": "TEXT(\"/\")"
  },
  {
    "label": "TrimStartAndEnd()",
    "kind": "Method",
    "detail": "Function (} Result + = Part .)",
    "insertText": "TrimStartAndEnd()"
  },
  {
    "label": "FFolder()",
    "kind": "Method",
    "detail": "Function (} Path =* Result ; } })",
    "insertText": "FFolder(const FRootObject& InRootObject, const FGuid& InActorFolderGuid) : bPathInitialized(false) , Path(NAME_None) , RootObject(InRootObject) , ActorFolderGuid(InActorFolderGuid)"
  },
  {
    "label": "GetRootObjectPtr()",
    "kind": "Method",
    "detail": "Function (} UObject*)",
    "insertText": "GetRootObjectPtr(const FRootObject& InRootObject)"
  },
  {
    "label": "IsRootObjectValid()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsRootObjectValid(const FRootObject& Key)"
  },
  {
    "label": "GetEmptyPath()",
    "kind": "Method",
    "detail": "Function (} FName)",
    "insertText": "GetEmptyPath()"
  },
  {
    "label": "GetRootObjectAssociatedLevel()",
    "kind": "Method",
    "detail": "Function (} ULevel*)",
    "insertText": "GetRootObjectAssociatedLevel()"
  },
  {
    "label": "IsRootObjectPersistentLevel()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsRootObjectPersistentLevel()"
  },
  {
    "label": "IsValid()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsValid()"
  },
  {
    "label": "IsChildOf()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsChildOf(const FFolder& InParent)"
  },
  {
    "label": "IsNone()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsNone()"
  },
  {
    "label": "GetRootObject()",
    "kind": "Method",
    "detail": "Function (} const FRootObject&)",
    "insertText": "GetRootObject()"
  },
  {
    "label": "GetActorFolderGuid()",
    "kind": "Method",
    "detail": "Function (} const FGuid&)",
    "insertText": "GetActorFolderGuid()"
  },
  {
    "label": "GetPath()",
    "kind": "Method",
    "detail": "Function (FName PathLocal =)",
    "insertText": "GetPath()"
  },
  {
    "label": "ToString()",
    "kind": "Method",
    "detail": "Function (FString PathString = PathLocal .)",
    "insertText": "ToString()"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (int32 LeafIndex = 0 ;)",
    "insertText": "if(PathString.FindLastChar('/', LeafIndex))"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} else { return PathLocal ; } } bool)",
    "insertText": "operator(const FFolder& InOther)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} FArchive&)",
    "insertText": "operator(FArchive& Ar, FFolder& Folder)"
  },
  {
    "label": "GetParent()",
    "kind": "Method",
    "detail": "Function (FFolder)",
    "insertText": "GetParent()"
  },
  {
    "label": "GetActorFolder()",
    "kind": "Method",
    "detail": "Function (UActorFolder*)",
    "insertText": "GetActorFolder()"
  },
  {
    "label": "GetInvalidFolder()",
    "kind": "Method",
    "detail": "Function (const FFolder&)",
    "insertText": "GetInvalidFolder()"
  },
  {
    "label": "GetInvalidRootObject()",
    "kind": "Method",
    "detail": "Function (const FRootObject&)",
    "insertText": "GetInvalidRootObject()"
  },
  {
    "label": "IsRootObjectPersistentLevel()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsRootObjectPersistentLevel(const FRootObject& Key)"
  },
  {
    "label": "GetOptionalFolderRootObject()",
    "kind": "Method",
    "detail": "Function (TOptional<FRootObject>)",
    "insertText": "GetOptionalFolderRootObject(const ULevel* InLevel)"
  },
  {
    "label": "GetRootObjectAssociatedLevel()",
    "kind": "Method",
    "detail": "Function (ULevel*)",
    "insertText": "GetRootObjectAssociatedLevel(const FRootObject& Key)"
  },
  {
    "label": "GetWorldRootFolder()",
    "kind": "Method",
    "detail": "Function (FFolder)",
    "insertText": "GetWorldRootFolder(UWorld* InWorld)"
  },
  {
    "label": "GetFolderPathsAndCommonRootObject()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetFolderPathsAndCommonRootObject(const TArray<FFolder>& InFolders, TArray<FName>& OutFolders, FRootObject& OutCommonRootObject)"
  },
  {
    "label": "PathIsChildOf()",
    "kind": "Method",
    "detail": "Function (private : bool)",
    "insertText": "PathIsChildOf(const FString& InPotentialChild, const FString& InParent)"
  },
  {
    "label": "Len()",
    "kind": "Method",
    "detail": "Function (const int32 ParentLen = InParent .)",
    "insertText": "Len()"
  },
  {
    "label": "PathIsChildOf()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "PathIsChildOf(const FName& InPotentialChild, const FName& InParent)"
  },
  {
    "label": "GetTypeHash()",
    "kind": "Method",
    "detail": "Function (} bool bPathInitialized ; FName Path ; FRootObject RootObject ; FGuid ActorFolderGuid ; uint32)",
    "insertText": "GetTypeHash(const FFolder& InFolder)"
  }
]