[
  {
    "label": "FOutputDevice",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FOutputDevice"
  },
  {
    "label": "UClass",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UClass"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "UPackage",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPackage"
  },
  {
    "label": "UObjectBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObjectBase"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FScopedUObjectHashTablesLock",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FScopedUObjectHashTablesLock"
  },
  {
    "label": "DECLARE_STATS_GROUP_VERBOSE()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" Containers / ArrayView . h \" # include \" Containers / Map . h \" # include \" Containers / Set . h \" # include \" Containers / UnrealString . h \" # include \" CoreTypes . h \" # include \" Stats / Stats . h \" # include \" Stats / Stats2 . h \" # include \" Templates / Function . h \" # include \" UObject / NameTypes . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / UObjectArray . h \" # include \" UObject / UnrealNames . h \" class FOutputDevice ; class UClass ; class UObject ; class UPackage ;)",
    "insertText": "DECLARE_STATS_GROUP_VERBOSE(TEXT(\"UObject Hash\"), STATGROUP_UObjectHash, STATCAT_Advanced)"
  },
  {
    "label": "DECLARE_DWORD_COUNTER_STAT_EXTERN()",
    "kind": "Method",
    "detail": "Function (# if ! UE_BUILD_TEST&& ! UE_BUILD_SHIPPING)",
    "insertText": "DECLARE_DWORD_COUNTER_STAT_EXTERN(TEXT(\"NumObjects\"), STAT_Hash_NumObjects, STATGROUP_UObjectHash, COREUOBJECT_API)"
  },
  {
    "label": "StaticFindObjectFastInternal()",
    "kind": "Method",
    "detail": "Function (UObject*)",
    "insertText": "StaticFindObjectFastInternal(const UClass* Class, const UObject* InOuter, FName InName, bool ExactClass = false, EObjectFlags ExclusiveFlags = RF_NoFlags, EInternalObjectFlags ExclusiveInternalFlags = EInternalObjectFlags::None)"
  },
  {
    "label": "StaticFindAllObjectsFastInternal()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "StaticFindAllObjectsFastInternal(TArray<UObject*>& OutFoundObjects, const UClass* ObjectClass, FName ObjectName, bool bExactClass, EObjectFlags ExcludeFlags = RF_NoFlags, EInternalObjectFlags ExclusiveInternalFlags = EInternalObjectFlags::None)"
  },
  {
    "label": "StaticFindFirstObjectFastInternal()",
    "kind": "Method",
    "detail": "Function (UObject*)",
    "insertText": "StaticFindFirstObjectFastInternal(const UClass* ObjectClass, FName ObjectName, bool bExactClass, EObjectFlags ExcludeFlag = RF_NoFlags, EInternalObjectFlags ExclusiveInternalFlags = EInternalObjectFlags::None)"
  },
  {
    "label": "StaticFindObjectFastExplicit()",
    "kind": "Method",
    "detail": "Function (UObject*)",
    "insertText": "StaticFindObjectFastExplicit(const UClass* ObjectClass, FName ObjectName, const FString& ObjectPathName, bool bExactClass, EObjectFlags ExcludeFlags = RF_NoFlags)"
  },
  {
    "label": "GetObjectsWithOuter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetObjectsWithOuter(const class UObjectBase* Outer, TArray<UObject *>& Results, bool bIncludeNestedObjects = true, EObjectFlags ExclusionFlags = RF_NoFlags, EInternalObjectFlags ExclusionInternalFlags = EInternalObjectFlags::None)"
  },
  {
    "label": "ForEachObjectWithOuterBreakable()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ForEachObjectWithOuterBreakable(const class UObjectBase* Outer, TFunctionRef<bool(UObject*)> Operation, bool bIncludeNestedObjects = true, EObjectFlags ExclusionFlags = RF_NoFlags, EInternalObjectFlags ExclusionInternalFlags = EInternalObjectFlags::None)"
  },
  {
    "label": "ForEachObjectWithOuter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ForEachObjectWithOuter(const class UObjectBase* Outer, TFunctionRef<void(UObject*)> Operation, bool bIncludeNestedObjects = true, EObjectFlags ExclusionFlags = RF_NoFlags, EInternalObjectFlags ExclusionInternalFlags = EInternalObjectFlags::None)"
  },
  {
    "label": "FindObjectWithOuter()",
    "kind": "Method",
    "detail": "Function (} class UObjectBase*)",
    "insertText": "FindObjectWithOuter(const class UObjectBase* Outer, const class UClass* ClassToLookFor = nullptr, FName NameToLookFor = NAME_None)"
  },
  {
    "label": "GetObjectsWithPackage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetObjectsWithPackage(const class UPackage* Outer, TArray<UObject *>& Results, bool bIncludeNestedObjects = true, EObjectFlags ExclusionFlags = RF_NoFlags, EInternalObjectFlags ExclusionInternalFlags = EInternalObjectFlags::None)"
  },
  {
    "label": "ForEachObjectWithPackage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ForEachObjectWithPackage(const class UPackage* Outer, TFunctionRef<bool(UObject*)> Operation, bool bIncludeNestedObjects = true, EObjectFlags ExclusionFlags = RF_NoFlags, EInternalObjectFlags ExclusionInternalFlags = EInternalObjectFlags::None)"
  },
  {
    "label": "GetObjectsOfClass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetObjectsOfClass(const UClass* ClassToLookFor, TArray<UObject *>& Results, bool bIncludeDerivedClasses = true, EObjectFlags ExcludeFlags = RF_ClassDefaultObject, EInternalObjectFlags ExclusionInternalFlags = EInternalObjectFlags::None)"
  },
  {
    "label": "ForEachObjectOfClass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ForEachObjectOfClass(const UClass* ClassToLookFor, TFunctionRef<void(UObject*)> Operation, bool bIncludeDerivedClasses = true, EObjectFlags ExcludeFlags = RF_ClassDefaultObject, EInternalObjectFlags ExclusionInternalFlags = EInternalObjectFlags::None)"
  },
  {
    "label": "ForEachObjectOfClasses()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ForEachObjectOfClasses(TArrayView<const UClass* const> ClassesToLookFor, TFunctionRef<void(UObject*)> Operation, EObjectFlags ExcludeFlags = RF_ClassDefaultObject, EInternalObjectFlags ExclusionInternalFlags = EInternalObjectFlags::None)"
  },
  {
    "label": "GetDerivedClasses()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetDerivedClasses(const UClass* ClassToLookFor, TArray<UClass *>& Results, bool bRecursive = true)"
  },
  {
    "label": "GetAllDerivedClasses()",
    "kind": "Method",
    "detail": "Function (TMap<UClass*,TSet<UClass*>>)",
    "insertText": "GetAllDerivedClasses()"
  },
  {
    "label": "ClassHasInstancesAsyncLoading()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ClassHasInstancesAsyncLoading(const UClass* ClassToLookFor)"
  },
  {
    "label": "HashObject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HashObject(class UObjectBase* Object)"
  },
  {
    "label": "UnhashObject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnhashObject(class UObjectBase* Object)"
  },
  {
    "label": "HashObjectExternalPackage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HashObjectExternalPackage(class UObjectBase* Object, class UPackage* Package)"
  },
  {
    "label": "UnhashObjectExternalPackage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnhashObjectExternalPackage(class UObjectBase* Object)"
  },
  {
    "label": "GetObjectExternalPackageThreadSafe()",
    "kind": "Method",
    "detail": "Function (UPackage*)",
    "insertText": "GetObjectExternalPackageThreadSafe(const class UObjectBase* Object)"
  },
  {
    "label": "GetObjectExternalPackageInternal()",
    "kind": "Method",
    "detail": "Function (UPackage*)",
    "insertText": "GetObjectExternalPackageInternal(const class UObjectBase* Object)"
  },
  {
    "label": "ShrinkUObjectHashTables()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ShrinkUObjectHashTables()"
  },
  {
    "label": "GetRegisteredClassesVersionNumber()",
    "kind": "Method",
    "detail": "Function (uint64)",
    "insertText": "GetRegisteredClassesVersionNumber()"
  },
  {
    "label": "GetRegisteredNativeClassesVersionNumber()",
    "kind": "Method",
    "detail": "Function (uint64)",
    "insertText": "GetRegisteredNativeClassesVersionNumber()"
  },
  {
    "label": "LogHashStatistics()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LogHashStatistics(FOutputDevice& Ar, const bool bShowHashBucketCollisionInfo)"
  },
  {
    "label": "LogHashOuterStatistics()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LogHashOuterStatistics(FOutputDevice& Ar, const bool bShowHashBucketCollisionInfo)"
  },
  {
    "label": "ENUM_CLASS_FLAGS()",
    "kind": "Method",
    "detail": "Function (enum class EObjectMemoryOverheadOptions { None,ShowIndividualStats = 1<<0,IncludeReflectionData = 1<<1 } ;)",
    "insertText": "ENUM_CLASS_FLAGS(EObjectMemoryOverheadOptions) COREUOBJECT_API void LogHashMemoryOverheadStatistics(FOutputDevice& Ar, const EObjectMemoryOverheadOptions InOptions)"
  },
  {
    "label": "LogHashMemoryOverheadStatistics()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LogHashMemoryOverheadStatistics(Ar, bShowIndividualStats ? EObjectMemoryOverheadOptions::ShowIndividualStats : EObjectMemoryOverheadOptions::None)"
  },
  {
    "label": "LockUObjectHashTables()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "LockUObjectHashTables()"
  },
  {
    "label": "UnlockUObjectHashTables()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnlockUObjectHashTables()"
  },
  {
    "label": "FScopedUObjectHashTablesLock()",
    "kind": "Method",
    "detail": "Function (class FScopedUObjectHashTablesLock { public :)",
    "insertText": "FScopedUObjectHashTablesLock()"
  }
]