[
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "FMeshDescription",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMeshDescription"
  },
  {
    "label": "FMeshBuildSettings",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMeshBuildSettings"
  },
  {
    "label": "FVertexInstanceID",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FVertexInstanceID"
  },
  {
    "label": "FMeshReductionSettings",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMeshReductionSettings"
  },
  {
    "label": "MESHBUILDER_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MESHBUILDER_API"
  },
  {
    "label": "FFanFace",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFanFace"
  },
  {
    "label": "DECLARE_LOG_CATEGORY_EXTERN()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" CoreTypes . h \" # include \" Logging / LogMacros . h \" # include \" OverlappingCorners . h \")",
    "insertText": "DECLARE_LOG_CATEGORY_EXTERN(LogMeshBuilder, Log, All)"
  },
  {
    "label": "FMeshDescriptionHelper()",
    "kind": "Method",
    "detail": "Function (class UObject ; struct FMeshDescription ; struct FMeshBuildSettings ; struct FVertexInstanceID ; struct FMeshReductionSettings ; class FMeshDescriptionHelper { public :)",
    "insertText": "FMeshDescriptionHelper(FMeshBuildSettings* InBuildSettings)"
  },
  {
    "label": "SetupRenderMeshDescription()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetupRenderMeshDescription(UObject* Owner, FMeshDescription& RenderMeshDescription, bool bForNanite, bool bNeedTangents)"
  },
  {
    "label": "ReduceLOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReduceLOD(const FMeshDescription& BaseMesh, FMeshDescription& DestMesh, const struct FMeshReductionSettings& ReductionSettings, const FOverlappingCorners& InOverlappingCorners, float &OutMaxDeviation)"
  },
  {
    "label": "FindOverlappingCorners()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FindOverlappingCorners(const FMeshDescription& MeshDescription, float ComparisonThreshold)"
  },
  {
    "label": "GetOverlappingCorners()",
    "kind": "Method",
    "detail": "Function (const FOverlappingCorners&)",
    "insertText": "GetOverlappingCorners()"
  }
]