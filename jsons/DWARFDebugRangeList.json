[
  {
    "label": "raw_ostream",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "raw_ostream"
  },
  {
    "label": "DWARFDebugRangeList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DWARFDebugRangeList"
  },
  {
    "label": "RangeListEntry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RangeListEntry"
  },
  {
    "label": "isEndOfListEntry()",
    "kind": "Method",
    "detail": "Function (# ifndef LLVM_LIB_DEBUGINFO_DWARFDEBUGRANGELIST_H # define LLVM_LIB_DEBUGINFO_DWARFDEBUGRANGELIST_H # include \" llvm / Support / DataExtractor . h \" # include<vector> namespace llvm { class raw_ostream ; typedef std::vector<std::pair<uint64_t,uint64_t>> DWARFAddressRangesVector ; class DWARFDebugRangeList { public : struct RangeListEntry { uint64_t StartAddress ; uint64_t EndAddress ; bool)",
    "insertText": "isEndOfListEntry()"
  },
  {
    "label": "isBaseAddressSelectionEntry()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "isBaseAddressSelectionEntry(uint8_t AddressSize)"
  },
  {
    "label": "assert()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "assert(AddressSize == 4 || AddressSize == 8)"
  },
  {
    "label": "clear()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "clear()"
  },
  {
    "label": "dump()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "dump(raw_ostream &OS)"
  },
  {
    "label": "extract()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "extract(DataExtractor data, uint32_t *offset_ptr)"
  },
  {
    "label": "getEntries()",
    "kind": "Method",
    "detail": "Function (const std::vector<RangeListEntry>&)",
    "insertText": "getEntries()"
  }
]