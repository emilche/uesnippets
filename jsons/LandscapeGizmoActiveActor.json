[
  {
    "label": "ULandscapeInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULandscapeInfo"
  },
  {
    "label": "ULandscapeLayerInfoObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULandscapeLayerInfoObject"
  },
  {
    "label": "UMaterial",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterial"
  },
  {
    "label": "UMaterialInstance",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialInstance"
  },
  {
    "label": "UTexture2D",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UTexture2D"
  },
  {
    "label": "ELandscapeGizmoType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ELandscapeGizmoType"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FGizmoSelectData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGizmoSelectData"
  },
  {
    "label": "ALandscapeGizmoActiveActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ALandscapeGizmoActiveActor"
  },
  {
    "label": "UENUM()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" LandscapeGizmoActor . h \" # include \" LandscapeGizmoActiveActor . generated . h \" class ULandscapeInfo ; class ULandscapeLayerInfoObject ; class UMaterial ; class UMaterialInstance ; class UTexture2D ;)",
    "insertText": "UENUM()"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (None,Component,Texel } ;)",
    "insertText": "USTRUCT()"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() #if WITH_EDITORONLY_DATA UPROPERTY()"
  },
  {
    "label": "FGizmoSelectData()",
    "kind": "Method",
    "detail": "Function (# endif TMap<ULandscapeLayerInfoObject*,float> WeightDataMap ;)",
    "insertText": "FGizmoSelectData() #if WITH_EDITORONLY_DATA : Ratio(0.0f) , HeightData(0.0f) , WeightDataMap()"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (} } ;)",
    "insertText": "UCLASS(notplaceable, MinimalAPI)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() #if WITH_EDITORONLY_DATA UPROPERTY(Transient)"
  },
  {
    "label": "PostEditChangeProperty()",
    "kind": "Method",
    "detail": "Function (# endif public : TMap<FIntPoint,FGizmoSelectData> SelectedData ; # if WITH_EDITOR void)",
    "insertText": "PostEditChangeProperty(FPropertyChangedEvent& PropertyChangedEvent)"
  },
  {
    "label": "PostEditMove()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostEditMove(bool bFinished)"
  },
  {
    "label": "SnapToLandscapeGrid()",
    "kind": "Method",
    "detail": "Function (FVector)",
    "insertText": "SnapToLandscapeGrid(const FVector& GizmoLocation)"
  },
  {
    "label": "SnapToLandscapeGrid()",
    "kind": "Method",
    "detail": "Function (FRotator)",
    "insertText": "SnapToLandscapeGrid(const FRotator& GizmoRotation)"
  },
  {
    "label": "EditorApplyTranslation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EditorApplyTranslation(const FVector& DeltaTranslation, bool bAltDown, bool bShiftDown, bool bCtrlDown)"
  },
  {
    "label": "EditorApplyRotation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EditorApplyRotation(const FRotator& DeltaRotation, bool bAltDown, bool bShiftDown, bool bCtrlDown)"
  },
  {
    "label": "EditorApplyScale()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EditorApplyScale(const FVector& DeltaScale, const FVector* PivotLocation, bool bAltDown, bool bShiftDown, bool bCtrlDown)"
  },
  {
    "label": "SpawnGizmoActor()",
    "kind": "Method",
    "detail": "Function (ALandscapeGizmoActor*)",
    "insertText": "SpawnGizmoActor()"
  },
  {
    "label": "ClearGizmoData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearGizmoData()"
  },
  {
    "label": "FitToSelection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FitToSelection()"
  },
  {
    "label": "FitMinMaxHeight()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FitMinMaxHeight()"
  },
  {
    "label": "SetTargetLandscape()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTargetLandscape(ULandscapeInfo* LandscapeInfo)"
  },
  {
    "label": "CalcNormal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CalcNormal()"
  },
  {
    "label": "SampleData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SampleData(int32 SizeX, int32 SizeY)"
  },
  {
    "label": "ExportToClipboard()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExportToClipboard()"
  },
  {
    "label": "ImportFromClipboard()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ImportFromClipboard()"
  },
  {
    "label": "Import()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Import(int32 VertsX, int32 VertsY, uint16* HeightData, TArray<ULandscapeLayerInfoObject*> ImportLayerInfos, uint8* LayerDataPointers[])"
  },
  {
    "label": "Export()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Export(int32 Index, TArray<FString>& Filenames)"
  },
  {
    "label": "GetNormalizedHeight()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetNormalizedHeight(uint16 LandscapeHeight)"
  },
  {
    "label": "GetLandscapeHeight()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetLandscapeHeight(float NormalizedHeight)"
  },
  {
    "label": "GetWidth()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetWidth()"
  },
  {
    "label": "GetHeight()",
    "kind": "Method",
    "detail": "Function (} float)",
    "insertText": "GetHeight()"
  },
  {
    "label": "GetLength()",
    "kind": "Method",
    "detail": "Function (} float)",
    "insertText": "GetLength()"
  },
  {
    "label": "SetLength()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetLength(float WorldLength)"
  },
  {
    "label": "float()",
    "kind": "Method",
    "detail": "Function (LengthZ = static_cast<)",
    "insertText": "float(WorldLength / GetRootComponent()->GetRelativeScale3D().Z)"
  },
  {
    "label": "GetWorldHeight()",
    "kind": "Method",
    "detail": "Function (} const int32 DataTexSize = 1 2 8 ; private : float)",
    "insertText": "GetWorldHeight(float NormalizedHeight)"
  }
]