[
  {
    "label": "FDetailWidgetRow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDetailWidgetRow"
  },
  {
    "label": "FDragDropEvent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDragDropEvent"
  },
  {
    "label": "FDragDropOperation",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDragDropOperation"
  },
  {
    "label": "FReply",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FReply"
  },
  {
    "label": "IPropertyHandle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPropertyHandle"
  },
  {
    "label": "ISequencer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISequencer"
  },
  {
    "label": "UMovieSceneSequence",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieSceneSequence"
  },
  {
    "label": "FGeometry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGeometry"
  },
  {
    "label": "FFixedObjectBindingID",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFixedObjectBindingID"
  },
  {
    "label": "MOVIESCENETOOLS_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MOVIESCENETOOLS_API"
  },
  {
    "label": "IDetailChildrenBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDetailChildrenBuilder"
  },
  {
    "label": "FMovieSceneObjectBindingIDCustomization()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" IPropertyTypeCustomization . h \" # include \" MovieSceneObjectBindingID . h \" # include \" MovieSceneObjectBindingIDPicker . h \" # include \" MovieSceneSequenceID . h \" # include \" Templates / SharedPointer . h \" class FDetailWidgetRow ; class FDragDropEvent ; class FDragDropOperation ; class FReply ; class IPropertyHandle ; class ISequencer ; class UMovieSceneSequence ; struct FGeometry ; namespace UE { namespace MovieScene { struct FFixedObjectBindingID ; } } class FMovieSceneObjectBindingIDCustomization : public IPropertyTypeCustomization,FMovieSceneObjectBindingIDPicker { public :)",
    "insertText": "FMovieSceneObjectBindingIDCustomization()"
  },
  {
    "label": "FMovieSceneObjectBindingIDCustomization()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FMovieSceneObjectBindingIDCustomization(FMovieSceneSequenceID InLocalSequenceID, TWeakPtr<ISequencer> InSequencer) : FMovieSceneObjectBindingIDPicker(InLocalSequenceID, InSequencer)"
  },
  {
    "label": "BindTo()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "BindTo(TSharedRef<ISequencer> InSequencer)"
  },
  {
    "label": "CustomizeHeader()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CustomizeHeader(TSharedRef<IPropertyHandle> PropertyHandle, FDetailWidgetRow& HeaderRow, IPropertyTypeCustomizationUtils& CustomizationUtils)"
  },
  {
    "label": "CustomizeChildren()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CustomizeChildren(TSharedRef<IPropertyHandle> StructPropertyHandle, class IDetailChildrenBuilder& ChildBuilder, IPropertyTypeCustomizationUtils& StructCustomizationUtils)"
  },
  {
    "label": "GetSequence()",
    "kind": "Method",
    "detail": "Function (} private : UMovieSceneSequence*)",
    "insertText": "GetSequence()"
  },
  {
    "label": "SetCurrentValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCurrentValue(const FMovieSceneObjectBindingID& InBindingId)"
  },
  {
    "label": "GetCurrentValue()",
    "kind": "Method",
    "detail": "Function (FMovieSceneObjectBindingID)",
    "insertText": "GetCurrentValue()"
  },
  {
    "label": "HasMultipleValues()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasMultipleValues()"
  },
  {
    "label": "OnDrop()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnDrop(const FGeometry& InGeometry, const FDragDropEvent& InDragDropEvent)"
  },
  {
    "label": "OnResetToDefault()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnResetToDefault()"
  }
]