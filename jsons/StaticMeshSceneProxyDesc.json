[
  {
    "label": "UBodySetup",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBodySetup"
  },
  {
    "label": "FStaticMeshSceneProxyDesc",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FStaticMeshSceneProxyDesc"
  },
  {
    "label": "UMaterialInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialInterface"
  },
  {
    "label": "FStaticMeshComponentLODInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FStaticMeshComponentLODInfo"
  },
  {
    "label": "FStaticMeshSceneProxyDesc()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" PrimitiveSceneProxyDesc . h \" # include \" StaticMeshSceneProxy . h \" # include \" Components / StaticMeshComponent . h \" # include \" Engine / StaticMesh . h \" # include \" Materials / Material . h \" # include \" Engine / Engine . h \" # include \" StaticMeshComponentLODInfo . h \" # include \" Rendering / NaniteResources . h \" class UBodySetup ; struct FStaticMeshSceneProxyDesc : public FPrimitiveSceneProxyDesc {)",
    "insertText": "FStaticMeshSceneProxyDesc()"
  },
  {
    "label": "FStaticMeshSceneProxyDesc()",
    "kind": "Method",
    "detail": "Function (CastShadow = true ; bUseAsOccluder = true ; bReverseCulling = false ; # if STATICMESH_ENABLE_DEBUG_RENDERING bDrawMeshCollisionIfComplex = false ; bDrawMeshCollisionIfSimple = false ; # endif bEvaluateWorldPositionOffset = true ; bOverrideMinLOD = false ; bCastDistanceFieldIndirectShadow = false ; bOverrideDistanceFieldSelfShadowBias = false ; bEvaluateWorldPositionOffsetInRayTracing = false ; bSortTriangles = false ; bDisplayNaniteFallbackMesh = false ; bDisallowNanite = false ; bForceDisableNanite = false ; bForceNaniteForMasked = false ; bUseProvidedMaterialRelevance = false ; })",
    "insertText": "FStaticMeshSceneProxyDesc(const UStaticMeshComponent*)"
  },
  {
    "label": "InitializeFromStaticMeshComponent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeFromStaticMeshComponent(const UStaticMeshComponent*)"
  },
  {
    "label": "InitializeFromStaticMeshComponent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeFromStaticMeshComponent(InComponent)"
  },
  {
    "label": "GetStaticMesh()",
    "kind": "Method",
    "detail": "Function (} UStaticMesh* StaticMesh = nullptr ; TArrayView<TObjectPtr<UMaterialInterface>> OverrideMaterials ; TObjectPtr<class UMaterialInterface> OverlayMaterial ; float OverlayMaterialMaxDrawDistance = 0 . 0 f ; int32 ForcedLodModel = 0 ; int32 MinLOD = 0 ; int32 WorldPositionOffsetDisableDistance = 0 ; float NanitePixelProgrammableDistance = 0 . 0 f ; uint32 bReverseCulling : 1 = false ; # if STATICMESH_ENABLE_DEBUG_RENDERING uint32 bDrawMeshCollisionIfComplex : 1 ; uint32 bDrawMeshCollisionIfSimple : 1 ; # endif uint32 bEvaluateWorldPositionOffset : 1 ; uint32 bOverrideMinLOD : 1 ; uint32 bCastDistanceFieldIndirectShadow : 1 ; uint32 bOverrideDistanceFieldSelfShadowBias : 1 ; uint32 bEvaluateWorldPositionOffsetInRayTracing : 1 ; uint32 bSortTriangles : 1 ; uint32 bDisplayNaniteFallbackMesh : 1 ; uint32 bDisallowNanite : 1 ; uint32 bForceDisableNanite : 1 ; uint32 bForceNaniteForMasked : 1 ; uint32 bUseProvidedMaterialRelevance : 1 ; uint32 bUseProvidedCollisionResponseContainer : 1 ; float DistanceFieldSelfShadowBias = 0 ; float DistanceFieldIndirectShadowMinVisibility = 0 . 1 f ; int32 StaticLightMapResolution = 0 ; ELightmapType LightmapType = ELightmapType::Default ; # if WITH_EDITORONLY_DATA float StreamingDistanceMultiplier = 1 . 0 f ; TArrayView<uint32> MaterialStreamingRelativeBoxes ; int32 SectionIndexPreview = INDEX_NONE ; int32 MaterialIndexPreview = INDEX_NONE ; int32 SelectedEditorMaterial = INDEX_NONE ; int32 SelectedEditorSection = INDEX_NONE ; float TextureStreamingTransformScale = 1 . 0 f ; # endif const Nanite::FResources* NaniteResources = nullptr ; TArrayView<struct FStaticMeshComponentLODInfo> LODData ; FMaterialRelevance MaterialRelevance ; UTexture* MeshPaintTexture = nullptr ; int32 MeshPaintTextureCoordinateIndex = 0 ; UStaticMesh*)",
    "insertText": "GetStaticMesh()"
  },
  {
    "label": "GetLODParentPrimitive()",
    "kind": "Method",
    "detail": "Function (} return nullptr ; } TOptional<FCollisionResponseContainer> CollisionResponseContainer ; UObject* LODParentPrimitive = nullptr ; UObject*)",
    "insertText": "GetLODParentPrimitive()"
  },
  {
    "label": "GetNumMaterials()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetNumMaterials()"
  },
  {
    "label": "GetOverlayMaterial()",
    "kind": "Method",
    "detail": "Function (} UMaterialInterface*)",
    "insertText": "GetOverlayMaterial()"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (UMaterialInterface* OutMaterial = nullptr ;)",
    "insertText": "if(OverrideMaterials.IsValidIndex(MaterialIndex) && OverrideMaterials[MaterialIndex])"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (OutMaterial = OverrideMaterials [ MaterialIndex ] ; } else)",
    "insertText": "if(StaticMesh)"
  },
  {
    "label": "GetMaterial()",
    "kind": "Method",
    "detail": "Function (OutMaterial = StaticMesh ->)",
    "insertText": "GetMaterial(MaterialIndex)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "if(OutMaterial != nullptr && !bIgnoreNaniteOverrideMaterials && UseNaniteOverrideMaterials(bDoingNaniteMaterialAudit))"
  },
  {
    "label": "GetNaniteOverride()",
    "kind": "Method",
    "detail": "Function (UMaterialInterface* NaniteOverride = OutMaterial ->)",
    "insertText": "GetNaniteOverride()"
  },
  {
    "label": "ShouldCreateNaniteProxy()",
    "kind": "Method",
    "detail": "Function (OutMaterial = NaniteOverride ! = nullptr ? NaniteOverride : OutMaterial ; } return OutMaterial ; } bool)",
    "insertText": "ShouldCreateNaniteProxy(Nanite::FMaterialAudit* OutNaniteMaterials = nullptr)"
  },
  {
    "label": "UseNaniteOverrideMaterials()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UseNaniteOverrideMaterials(bool bDoingMaterialAudit)"
  },
  {
    "label": "GetNaniteAuditMaterial()",
    "kind": "Method",
    "detail": "Function (UMaterialInterface*)",
    "insertText": "GetNaniteAuditMaterial(int32 MaterialIndex)"
  },
  {
    "label": "SetMaterialRelevance()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetMaterialRelevance(const FMaterialRelevance& InRelevance)"
  },
  {
    "label": "GetMaterialRelevance()",
    "kind": "Method",
    "detail": "Function (MaterialRelevance = InRelevance ; bUseProvidedMaterialRelevance = true ; } FMaterialRelevance)",
    "insertText": "GetMaterialRelevance(ERHIFeatureLevel::Type InFeatureLevel)"
  },
  {
    "label": "GetStaticLightMapResolution()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetStaticLightMapResolution()"
  },
  {
    "label": "SetCollisionResponseToChannels()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCollisionResponseToChannels(const FCollisionResponseContainer& InContainer)"
  },
  {
    "label": "GetCollisionResponseToChannels()",
    "kind": "Method",
    "detail": "Function (CollisionResponseContainer = InContainer ; } } const FCollisionResponseContainer&)",
    "insertText": "GetCollisionResponseToChannels()"
  },
  {
    "label": "GetObjectForPropertyColoration()",
    "kind": "Method",
    "detail": "Function (} UObject*)",
    "insertText": "GetObjectForPropertyColoration()"
  },
  {
    "label": "GetWireframeColor()",
    "kind": "Method",
    "detail": "Function (FColor)",
    "insertText": "GetWireframeColor()"
  },
  {
    "label": "GetStaticMesh()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetStaticMesh()->GetUsedMaterials(OutMaterials, [this](int32 Index) { return GetMaterial(Index); })"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (OutMaterials .)",
    "insertText": "Add(OverlayMaterial)"
  },
  {
    "label": "GetUStaticMeshComponent()",
    "kind": "Method",
    "detail": "Function (} } } } const UStaticMeshComponent*)",
    "insertText": "GetUStaticMeshComponent()"
  }
]