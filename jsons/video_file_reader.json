[
  {
    "label": "Video",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Video"
  },
  {
    "label": "Iterator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Iterator"
  },
  {
    "label": "Iterator()",
    "kind": "Method",
    "detail": "Function (# ifndef RTC_TOOLS_VIDEO_FILE_READER_H_ # define RTC_TOOLS_VIDEO_FILE_READER_H_ # include<stddef . h> # include<cstdio> # include<iterator> # include<string> # include \" api / scoped_refptr . h \" # include \" api / video / video_frame_buffer . h \" # include \" rtc_base / ref_count . h \" namespace webrtc { namespace test { class Video : public rtc::RefCountInterface { public : class Iterator { public : typedef int value_type ; typedef std::ptrdiff_t difference_type ; typedef int* pointer ; typedef int& reference ; typedef std::input_iterator_tag iterator_category ;)",
    "insertText": "Iterator(const rtc::scoped_refptr<const Video>& video, size_t index)"
  },
  {
    "label": "Iterator()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Iterator(const Iterator& other)"
  },
  {
    "label": "Iterator()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Iterator(Iterator&& other)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (Iterator&)",
    "insertText": "operator(Iterator&&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (Iterator&)",
    "insertText": "operator(const Iterator&)"
  },
  {
    "label": "Iterator()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "Iterator()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (rtc::scoped_refptr<I420BufferInterface>)",
    "insertText": "operator()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "operator(const Iterator& other)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (Iterator)",
    "insertText": "operator(int)"
  },
  {
    "label": "begin()",
    "kind": "Method",
    "detail": "Function (private : rtc::scoped_refptr<const Video> video_ ; size_t index_ ; } ; Iterator)",
    "insertText": "begin()"
  },
  {
    "label": "end()",
    "kind": "Method",
    "detail": "Function (Iterator)",
    "insertText": "end()"
  },
  {
    "label": "width()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "width()"
  },
  {
    "label": "height()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "height()"
  },
  {
    "label": "number_of_frames()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "number_of_frames()"
  },
  {
    "label": "GetFrame()",
    "kind": "Method",
    "detail": "Function (rtc::scoped_refptr<I420BufferInterface>)",
    "insertText": "GetFrame(size_t index)"
  },
  {
    "label": "OpenY4mFile()",
    "kind": "Method",
    "detail": "Function (} ; rtc::scoped_refptr<Video>)",
    "insertText": "OpenY4mFile(const std::string& file_name)"
  },
  {
    "label": "OpenYuvFile()",
    "kind": "Method",
    "detail": "Function (rtc::scoped_refptr<Video>)",
    "insertText": "OpenYuvFile(const std::string& file_name, int width, int height)"
  },
  {
    "label": "OpenYuvOrY4mFile()",
    "kind": "Method",
    "detail": "Function (rtc::scoped_refptr<Video>)",
    "insertText": "OpenYuvOrY4mFile(const std::string& file_name, int width, int height)"
  }
]