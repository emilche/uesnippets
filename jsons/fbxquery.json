[
  {
    "label": "FbxProperty",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FbxProperty"
  },
  {
    "label": "FBXSDK_DLL",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBXSDK_DLL"
  },
  {
    "label": "InternalFilter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "InternalFilter"
  },
  {
    "label": "FbxManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FbxManager"
  },
  {
    "label": "FbxCriteriaCompare",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FbxCriteriaCompare"
  },
  {
    "label": "EType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EType"
  },
  {
    "label": "GetUniqueId()",
    "kind": "Method",
    "detail": "Function (# ifndef _FBXSDK_CORE_QUERY_H_ # define _FBXSDK_CORE_QUERY_H_ # include<fbxsdk / fbxsdk_def . h> # include<fbxsdk / core / fbxclassid . h> # include<fbxsdk / core / fbxconnectionpoint . h> # include<fbxsdk / core / base / fbxmap . h> # include<fbxsdk / core / base / fbxmemorypool . h> # include<fbxsdk / fbxsdk_nsbegin . h> # define FBXSDK_QUERY_UNIQUE_ID 0 x14000000 class FbxProperty ; class FBXSDK_DLL FbxQuery { public : FbxInt)",
    "insertText": "GetUniqueId()"
  },
  {
    "label": "IsEqual()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsEqual(FbxQuery* pOtherQuery)"
  },
  {
    "label": "Ref()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Ref()"
  },
  {
    "label": "Unref()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Unref()"
  },
  {
    "label": "FbxQuery()",
    "kind": "Method",
    "detail": "Function (# ifndef DOXYGEN_SHOULD_SKIP_THIS protected :)",
    "insertText": "FbxQuery()"
  },
  {
    "label": "InternalFilter()",
    "kind": "Method",
    "detail": "Function (private : class InternalFilter : public FbxConnectionPointFilter { public :)",
    "insertText": "InternalFilter(FbxQuery* pQuery)"
  },
  {
    "label": "InternalFilter()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "InternalFilter()"
  },
  {
    "label": "IsValid()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsValid(FbxConnectionPoint* pConnect)"
  },
  {
    "label": "IsEqual()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsEqual(FbxConnectionPointFilter* pConnectFilter)"
  },
  {
    "label": "FBXSDK_FRIEND_NEW()",
    "kind": "Method",
    "detail": "Function (FbxQuery* mQuery ; } ; InternalFilter mFilter ; int mRefCount ;)",
    "insertText": "FBXSDK_FRIEND_NEW()"
  },
  {
    "label": "ObjectType()",
    "kind": "Method",
    "detail": "Function (class FbxProperty ; # endif } ; class FBXSDK_DLL FbxCriteria { public : FbxCriteria)",
    "insertText": "ObjectType(const FbxClassId& pClassId)"
  },
  {
    "label": "ObjectTypeStrict()",
    "kind": "Method",
    "detail": "Function (FbxCriteria)",
    "insertText": "ObjectTypeStrict(const FbxClassId& pClassId)"
  },
  {
    "label": "IsProperty()",
    "kind": "Method",
    "detail": "Function (FbxCriteria)",
    "insertText": "IsProperty()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FbxCriteria)",
    "insertText": "operator(const FbxCriteria& pCriteria)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FbxCriteria)",
    "insertText": "operator()"
  },
  {
    "label": "GetQuery()",
    "kind": "Method",
    "detail": "Function (FbxQuery*)",
    "insertText": "GetQuery()"
  },
  {
    "label": "FbxCriteria()",
    "kind": "Method",
    "detail": "Function (# ifndef DOXYGEN_SHOULD_SKIP_THIS)",
    "insertText": "FbxCriteria()"
  },
  {
    "label": "FbxCriteria()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FbxCriteria(const FbxCriteria& pCriteria)"
  },
  {
    "label": "FbxCriteria()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FbxCriteria(FbxQuery* pQuery)"
  },
  {
    "label": "FreeGlobalCache()",
    "kind": "Method",
    "detail": "Function (private : FbxQuery* mQuery ; void)",
    "insertText": "FreeGlobalCache()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (class FbxManager ; # endif } ; struct FbxCriteriaCompare { int)",
    "insertText": "operator()(const FbxCriteria& pKeyA, const FbxCriteria& pKeyB)"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (enum EType { eAND,eOR } ; FbxQueryOperator*)",
    "insertText": "Create(FbxQuery* pA, EType pOperator, FbxQuery* pB)"
  },
  {
    "label": "FbxQueryOperator()",
    "kind": "Method",
    "detail": "Function (protected :)",
    "insertText": "FbxQueryOperator(FbxQuery* pA, EType pOperator, FbxQuery* pB)"
  },
  {
    "label": "FbxQueryOperator()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FbxQueryOperator()"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (FbxQueryOperatorUnary*)",
    "insertText": "Create(FbxQuery* pA)"
  },
  {
    "label": "FbxQueryOperatorUnary()",
    "kind": "Method",
    "detail": "Function (protected :)",
    "insertText": "FbxQueryOperatorUnary(FbxQuery* pA)"
  },
  {
    "label": "FbxQueryOperatorUnary()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FbxQueryOperatorUnary()"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (FbxQueryClassId*)",
    "insertText": "Create(const FbxClassId& pClassId)"
  },
  {
    "label": "FbxQueryClassId()",
    "kind": "Method",
    "detail": "Function (protected :)",
    "insertText": "FbxQueryClassId(const FbxClassId& pClassId)"
  },
  {
    "label": "FbxQueryIsA()",
    "kind": "Method",
    "detail": "Function (protected :)",
    "insertText": "FbxQueryIsA(const FbxClassId& pClassId)"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (FbxQueryIsProperty*)",
    "insertText": "Create()"
  },
  {
    "label": "FbxQueryIsProperty()",
    "kind": "Method",
    "detail": "Function (protected :)",
    "insertText": "FbxQueryIsProperty()"
  }
]