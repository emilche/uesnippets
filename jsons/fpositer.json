[
  {
    "label": "FieldPositionIterator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FieldPositionIterator"
  },
  {
    "label": "UVector32",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UVector32"
  },
  {
    "label": "U_I18N_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "U_I18N_API"
  },
  {
    "label": "FieldPositionIteratorHandler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FieldPositionIteratorHandler"
  },
  {
    "label": "FieldPositionIterator()",
    "kind": "Method",
    "detail": "Function (# ifndef FPOSITER_H # define FPOSITER_H # include \" unicode / utypes . h \" # include \" unicode / uobject . h \" # if UCONFIG_NO_FORMATTING U_NAMESPACE_BEGIN class FieldPositionIterator ; U_NAMESPACE_END # else # include \" unicode / fieldpos . h \" # include \" unicode / umisc . h \" U_NAMESPACE_BEGIN class UVector32 ; class U_I18N_API FieldPositionIterator : public UObject { public : ~)",
    "insertText": "FieldPositionIterator()"
  },
  {
    "label": "FieldPositionIterator()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FieldPositionIterator(void)"
  },
  {
    "label": "FieldPositionIterator()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FieldPositionIterator(const FieldPositionIterator&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (UBool)",
    "insertText": "operator(const FieldPositionIterator&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (UBool)",
    "insertText": "operator(const FieldPositionIterator& rhs)"
  },
  {
    "label": "next()",
    "kind": "Method",
    "detail": "Function (} UBool)",
    "insertText": "next(FieldPosition& fp)"
  },
  {
    "label": "setData()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "setData(UVector32 *adopt, UErrorCode& status)"
  }
]