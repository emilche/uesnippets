[
  {
    "label": "Logger",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Logger"
  },
  {
    "label": "WorkManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "WorkManager"
  },
  {
    "label": "FileMappingHandle",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FileMappingHandle"
  },
  {
    "label": "FileMappingHandle",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FileMappingHandle"
  },
  {
    "label": "MappedView",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "MappedView"
  },
  {
    "label": "FileMappingType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "FileMappingType"
  },
  {
    "label": "FileMappingBuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FileMappingBuffer"
  },
  {
    "label": "File",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "File"
  },
  {
    "label": "MappingStorage",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "MappingStorage"
  },
  {
    "label": "FileMappingAllocator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FileMappingAllocator"
  },
  {
    "label": "Allocation",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Allocation"
  },
  {
    "label": "u64()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "u64(handle)"
  },
  {
    "label": "CreateMemoryMappingW()",
    "kind": "Method",
    "detail": "Function (FileMappingHandle)",
    "insertText": "CreateMemoryMappingW(Logger& logger, u32 flProtect, u64 maxSize, const tchar* name = nullptr)"
  },
  {
    "label": "MapViewCommit()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "MapViewCommit(void* address, u64 size)"
  },
  {
    "label": "UnmapViewOfFile()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UnmapViewOfFile(const void* lpBaseAddress, u64 bytesToUnmap, const tchar* hint)"
  },
  {
    "label": "CloseFileMapping()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CloseFileMapping(FileMappingHandle h)"
  },
  {
    "label": "DuplicateFileMapping()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DuplicateFileMapping(ProcHandle hSourceProcessHandle, FileMappingHandle hSourceHandle, ProcHandle hTargetProcessHandle, FileMappingHandle* lpTargetHandle, u32 dwDesiredAccess, bool bInheritHandle, u32 dwOptions)"
  },
  {
    "label": "MapMemoryCopy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MapMemoryCopy(void* dest, const void* source, u64 size)"
  },
  {
    "label": "FileMappingBuffer()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FileMappingBuffer(Logger& logger, WorkManager* workManager)"
  },
  {
    "label": "AddTransient()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AddTransient(const tchar* name)"
  },
  {
    "label": "AddPersistent()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AddPersistent(const tchar* name, FileHandle fileHandle, u64 size, u64 capacity)"
  },
  {
    "label": "CloseDatabase()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CloseDatabase()"
  },
  {
    "label": "AllocAndMapView()",
    "kind": "Method",
    "detail": "Function (MappedView)",
    "insertText": "AllocAndMapView(FileMappingType type, u64 size, u64 alignment, const tchar* hint, bool allowShrink = false)"
  },
  {
    "label": "MapView()",
    "kind": "Method",
    "detail": "Function (MappedView)",
    "insertText": "MapView(FileMappingHandle handle, u64 offset, u64 size, const tchar* hint)"
  },
  {
    "label": "UnmapView()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnmapView(MappedView view, const tchar* hint, u64 newSize = InvalidValue)"
  },
  {
    "label": "GetSizeAndCount()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetSizeAndCount(FileMappingType type, u64& outSize, u32& outCount)"
  },
  {
    "label": "AllocAndMapViewNoLock()",
    "kind": "Method",
    "detail": "Function (MappedView)",
    "insertText": "AllocAndMapViewNoLock(File& file, u64 size, u64 alignment, const tchar* hint)"
  },
  {
    "label": "PushFile()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PushFile(MappingStorage& storage, File* file)"
  },
  {
    "label": "CloseMappingStorage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CloseMappingStorage(MappingStorage& storage)"
  },
  {
    "label": "FileMappingAllocator()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FileMappingAllocator(Logger& logger, const tchar* name)"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Init(u64 blockSize, u64 capacity)"
  },
  {
    "label": "Alloc()",
    "kind": "Method",
    "detail": "Function (Allocation)",
    "insertText": "Alloc(const tchar* hint)"
  },
  {
    "label": "Free()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Free(Allocation allocation)"
  },
  {
    "label": "GetSize()",
    "kind": "Method",
    "detail": "Function (u64)",
    "insertText": "GetSize()"
  }
]