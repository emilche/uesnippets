[
  {
    "label": "FRHICommandListBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRHICommandListBase"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FRayTracingGeometry",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRayTracingGeometry"
  },
  {
    "label": "FRayTracingGeometryManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRayTracingGeometryManager"
  },
  {
    "label": "FRayTracingGeometry()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Containers / DynamicRHIResourceArray . h \" # include \" RenderResource . h \" # if RHI_RAYTRACING # include \" RHI . h \" # endif class FRHICommandListBase ; namespace RayTracing { using GeometryGroupHandle = int32 ; } enum class ERTAccelerationStructureBuildPriority : uint8 { Immediate,High,Normal,Low,Skip } ; class FRayTracingGeometry : public FRenderResource { public : TResourceArray<uint8> RawData ; PRAGMA_DISABLE_DEPRECATION_WARNINGS)",
    "insertText": "FRayTracingGeometry()"
  },
  {
    "label": "FRayTracingGeometry()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FRayTracingGeometry(const FRayTracingGeometry&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FRayTracingGeometry&)",
    "insertText": "operator(const FRayTracingGeometry&)"
  },
  {
    "label": "FRayTracingGeometry()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FRayTracingGeometry(FRayTracingGeometry&&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FRayTracingGeometry&)",
    "insertText": "operator(FRayTracingGeometry&&)"
  },
  {
    "label": "GetRHI()",
    "kind": "Method",
    "detail": "Function (FRHIRayTracingGeometry*)",
    "insertText": "GetRHI()"
  },
  {
    "label": "FRIEND_ENUM_CLASS_FLAGS()",
    "kind": "Method",
    "detail": "Function (PRAGMA_DISABLE_DEPRECATION_WARNINGS return RayTracingGeometryRHI ; PRAGMA_ENABLE_DEPRECATION_WARNINGS } RayTracing::GeometryGroupHandle GroupHandle = INDEX_NONE ; int8 LODIndex = - 1 ; enum class EGeometryStateFlags : uint32 { Invalid = 0,RequiresBuild = 1<<0,Valid = 1<<1,StreamedIn = 1<<2,Evicted = 1<<3 } ;)",
    "insertText": "FRIEND_ENUM_CLASS_FLAGS(EGeometryStateFlags)"
  },
  {
    "label": "SetInitializer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetInitializer(FRayTracingGeometryInitializer InInitializer)"
  },
  {
    "label": "MoveTemp()",
    "kind": "Method",
    "detail": "Function (Initializer =)",
    "insertText": "MoveTemp(InInitializer)"
  },
  {
    "label": "IsValid()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsValid()"
  },
  {
    "label": "IsEvicted()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsEvicted()"
  },
  {
    "label": "SetAsStreamedIn()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAsStreamedIn()"
  },
  {
    "label": "EnumAddFlags()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnumAddFlags(GeometryState, EGeometryStateFlags::StreamedIn)"
  },
  {
    "label": "GetRequiresBuild()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "GetRequiresBuild()"
  },
  {
    "label": "SetRequiresBuild()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetRequiresBuild(bool bBuild)"
  },
  {
    "label": "EnumAddFlags()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnumAddFlags(GeometryState, EGeometryStateFlags::RequiresBuild)"
  },
  {
    "label": "EnumRemoveFlags()",
    "kind": "Method",
    "detail": "Function (} else {)",
    "insertText": "EnumRemoveFlags(GeometryState, EGeometryStateFlags::RequiresBuild)"
  },
  {
    "label": "GetGeometryState()",
    "kind": "Method",
    "detail": "Function (} } EGeometryStateFlags)",
    "insertText": "GetGeometryState()"
  },
  {
    "label": "ReleaseRHIForStreaming()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseRHIForStreaming(FRHIResourceReplaceBatcher& Batcher)"
  },
  {
    "label": "RequestBuildIfNeeded()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RequestBuildIfNeeded(FRHICommandListBase& RHICmdList, ERTAccelerationStructureBuildPriority InBuildPriority)"
  },
  {
    "label": "CreateRayTracingGeometry()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateRayTracingGeometry(FRHICommandListBase& RHICmdList, ERTAccelerationStructureBuildPriority InBuildPriority)"
  },
  {
    "label": "MakeResident()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MakeResident(FRHICommandList& RHICmdList)"
  },
  {
    "label": "Evict()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Evict()"
  },
  {
    "label": "HasPendingBuildRequest()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasPendingBuildRequest()"
  },
  {
    "label": "BoostBuildPriority()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BoostBuildPriority(float InBoostValue = 0.01f)"
  },
  {
    "label": "GetFriendlyName()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetFriendlyName()"
  },
  {
    "label": "InitRHI()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "InitRHI(FRHICommandListBase& RHICmdList)"
  },
  {
    "label": "ReleaseRHI()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseRHI()"
  },
  {
    "label": "InitResource()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitResource(FRHICommandListBase& RHICmdList)"
  },
  {
    "label": "ReleaseResource()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseResource()"
  },
  {
    "label": "RemoveBuildRequest()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "RemoveBuildRequest()"
  },
  {
    "label": "ENUM_CLASS_FLAGS()",
    "kind": "Method",
    "detail": "Function (class FRayTracingGeometryManager ; EGeometryStateFlags GeometryState = EGeometryStateFlags::Invalid ; int32 RayTracingBuildRequestIndex = INDEX_NONE ; int32 RayTracingGeometryHandle = INDEX_NONE ; # endif } ; # if RHI_RAYTRACING)",
    "insertText": "ENUM_CLASS_FLAGS(FRayTracingGeometry::EGeometryStateFlags)"
  }
]