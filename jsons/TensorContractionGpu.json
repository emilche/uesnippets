[
  {
    "label": "TensorEvaluator",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TensorEvaluator"
  },
  {
    "label": "LaunchKernels",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "LaunchKernels"
  },
  {
    "label": "LaunchKernels",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "LaunchKernels"
  },
  {
    "label": "__syncthreads()",
    "kind": "Method",
    "detail": "Function (loop)",
    "insertText": "__syncthreads()"
  },
  {
    "label": "__syncthreads()",
    "kind": "Method",
    "detail": "Function (computation)",
    "insertText": "__syncthreads()"
  },
  {
    "label": "lcol()",
    "kind": "Method",
    "detail": "Function (Scalar)",
    "insertText": "lcol(0)"
  },
  {
    "label": "lcol()",
    "kind": "Method",
    "detail": "Function (Scalar)",
    "insertText": "lcol(1)"
  },
  {
    "label": "lcol()",
    "kind": "Method",
    "detail": "Function (Scalar)",
    "insertText": "lcol(2)"
  },
  {
    "label": "lcol()",
    "kind": "Method",
    "detail": "Function (Scalar)",
    "insertText": "lcol(3)"
  },
  {
    "label": "lcol()",
    "kind": "Method",
    "detail": "Function (Scalar)",
    "insertText": "lcol(4)"
  },
  {
    "label": "lcol()",
    "kind": "Method",
    "detail": "Function (Scalar)",
    "insertText": "lcol(5)"
  },
  {
    "label": "lcol()",
    "kind": "Method",
    "detail": "Function (Scalar)",
    "insertText": "lcol(6)"
  },
  {
    "label": "lcol()",
    "kind": "Method",
    "detail": "Function (Scalar)",
    "insertText": "lcol(7)"
  },
  {
    "label": "rrow()",
    "kind": "Method",
    "detail": "Function (Scalar)",
    "insertText": "rrow(0)"
  },
  {
    "label": "rrow()",
    "kind": "Method",
    "detail": "Function (Scalar)",
    "insertText": "rrow(1)"
  },
  {
    "label": "rrow()",
    "kind": "Method",
    "detail": "Function (Scalar)",
    "insertText": "rrow(2)"
  },
  {
    "label": "rrow()",
    "kind": "Method",
    "detail": "Function (Scalar)",
    "insertText": "rrow(3)"
  },
  {
    "label": "rrow()",
    "kind": "Method",
    "detail": "Function (Scalar)",
    "insertText": "rrow(4)"
  },
  {
    "label": "rrow()",
    "kind": "Method",
    "detail": "Function (Scalar)",
    "insertText": "rrow(5)"
  },
  {
    "label": "rrow()",
    "kind": "Method",
    "detail": "Function (Scalar)",
    "insertText": "rrow(6)"
  },
  {
    "label": "rrow()",
    "kind": "Method",
    "detail": "Function (Scalar)",
    "insertText": "rrow(7)"
  },
  {
    "label": "reduceMatrix()",
    "kind": "Method",
    "detail": "Function (block)",
    "insertText": "reduceMatrix(1)"
  },
  {
    "label": "__syncthreads()",
    "kind": "Method",
    "detail": "Function (use)",
    "insertText": "__syncthreads()"
  },
  {
    "label": "__syncthreads()",
    "kind": "Method",
    "detail": "Function (k)",
    "insertText": "__syncthreads()"
  },
  {
    "label": "num_blocks()",
    "kind": "Method",
    "detail": "Function (dim3)",
    "insertText": "num_blocks(m_blocks, n_blocks, 1)"
  },
  {
    "label": "block_size()",
    "kind": "Method",
    "detail": "Function (dim3)",
    "insertText": "block_size(8, 8, 8)"
  },
  {
    "label": "num_blocks()",
    "kind": "Method",
    "detail": "Function (dim3)",
    "insertText": "num_blocks(m_blocks, n_blocks, 1)"
  },
  {
    "label": "block_size()",
    "kind": "Method",
    "detail": "Function (dim3)",
    "insertText": "block_size(16, 16, 1)"
  },
  {
    "label": "num_blocks()",
    "kind": "Method",
    "detail": "Function (dim3)",
    "insertText": "num_blocks(m_blocks, n_blocks, 1)"
  },
  {
    "label": "block_size()",
    "kind": "Method",
    "detail": "Function (dim3)",
    "insertText": "block_size(8, 32, 1)"
  },
  {
    "label": "lhs()",
    "kind": "Method",
    "detail": "Function (LhsMapper)",
    "insertText": "lhs(this->m_leftImpl, this->m_left_nocontract_strides, this->m_i_strides,\n                  this->m_left_contracting_strides, this->m_k_strides)"
  },
  {
    "label": "rhs()",
    "kind": "Method",
    "detail": "Function (RhsMapper)",
    "insertText": "rhs(this->m_rightImpl, this->m_right_nocontract_strides, this->m_j_strides,\n                  this->m_right_contracting_strides, this->m_k_strides)"
  },
  {
    "label": "output()",
    "kind": "Method",
    "detail": "Function (OutputMapper)",
    "insertText": "output(buffer, m)"
  },
  {
    "label": "setGpuSharedMemConfig()",
    "kind": "Method",
    "detail": "Function (else)",
    "insertText": "setGpuSharedMemConfig(cudaSharedMemBankSizeEightByte)"
  }
]