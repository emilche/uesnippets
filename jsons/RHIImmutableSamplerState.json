[
  {
    "label": "FRHISamplerState",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRHISamplerState"
  },
  {
    "label": "FImmutableSamplerState",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FImmutableSamplerState"
  },
  {
    "label": "FImmutableSamplerState()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" Containers / StaticArray . h \" class FRHISamplerState ; enum { MaxImmutableSamplers = 2 } ; struct FImmutableSamplerState { using TImmutableSamplers = TStaticArray<FRHISamplerState*,MaxImmutableSamplers> ;)",
    "insertText": "FImmutableSamplerState() : ImmutableSamplers(InPlace, nullptr)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Reset()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (ImmutableSamplers [ Index ] = nullptr ; } } bool)",
    "insertText": "operator(const FImmutableSamplerState& rhs)"
  }
]