[
  {
    "label": "UEdGraph",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEdGraph"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "UK2Node_AssignDelegate",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UK2Node_AssignDelegate"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" EdGraph / EdGraphNode . h \" # include \" EdGraph / EdGraphNodeUtils . h \" # include \" Internationalization / Text . h \" # include \" K2Node_AddDelegate . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / UObjectGlobals . h \" # include \" K2Node_AssignDelegate . generated . h \" class UEdGraph ; class UObject ;)",
    "insertText": "UCLASS(MinimalAPI)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() public: virtual FText GetNodeTitle(ENodeTitleType::Type TitleType)"
  },
  {
    "label": "GetMenuCategory()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetMenuCategory()"
  },
  {
    "label": "IsCompatibleWithGraph()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsCompatibleWithGraph(const UEdGraph* TargetGraph)"
  },
  {
    "label": "PostPlacedNewNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostPlacedNewNode()"
  }
]