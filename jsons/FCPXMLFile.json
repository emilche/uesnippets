[
  {
    "label": "represents",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "represents"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "FFCPXMLFile",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFCPXMLFile"
  },
  {
    "label": "used",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "used"
  },
  {
    "label": "FFCPXMLFileSetupVisitor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFCPXMLFileSetupVisitor"
  },
  {
    "label": "ConstructFile()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConstructFile(const FString& InProjectName)"
  },
  {
    "label": "LoadFile()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "LoadFile(const FString& InPath, EConstructMethod::Type InConstructMethod = EConstructMethod::ConstructFromFile)"
  },
  {
    "label": "Clear()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Clear()"
  },
  {
    "label": "Accept()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Accept(FFCPXMLNodeVisitor& InNodeVisitor)"
  },
  {
    "label": "GetRootNode()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FFCPXMLNode>)",
    "insertText": "GetRootNode()"
  },
  {
    "label": "Save()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Save(const FString& InPath)"
  },
  {
    "label": "AddReference()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AddReference(const FString& InElement, const FString &InId, TSharedPtr<FFCPXMLNode>)"
  },
  {
    "label": "GetReference()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FFCPXMLNode>)",
    "insertText": "GetReference(const FString &InElement, const FString &InId)"
  },
  {
    "label": "ComposeKey()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "ComposeKey(const FString& A, const FString& B)"
  },
  {
    "label": "AddReferenceId()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddReferenceId(FString InType, TSharedRef<FFCPXMLNode> InNode)"
  }
]