[
  {
    "label": "FFCPXMLFile",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFCPXMLFile"
  },
  {
    "label": "FFCPXMLFileSetupVisitor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFCPXMLFileSetupVisitor"
  },
  {
    "label": "FFCPXMLFile()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Map . h \" # include \" Containers / UnrealString . h \" # include \" FCPXML / FCPXMLNode . h \" # include \" Internationalization / Text . h \" # include \" Templates / SharedPointer . h \" # include \" XmlFile . h \" class FFCPXMLFile : public TSharedFromThis<FFCPXMLFile> { public :)",
    "insertText": "FFCPXMLFile()"
  },
  {
    "label": "Clear()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Clear()"
  },
  {
    "label": "ConstructFile()",
    "kind": "Method",
    "detail": "Function (} ; public : void)",
    "insertText": "ConstructFile(const FString& InProjectName)"
  },
  {
    "label": "LoadFile()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "LoadFile(const FString& InPath, EConstructMethod::Type InConstructMethod = EConstructMethod::ConstructFromFile)"
  },
  {
    "label": "GetLastError()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetLastError()"
  },
  {
    "label": "IsValidFile()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsValidFile()"
  },
  {
    "label": "Accept()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Accept(FFCPXMLNodeVisitor& InNodeVisitor)"
  },
  {
    "label": "GetRootNode()",
    "kind": "Method",
    "detail": "Function (const TSharedPtr<FFCPXMLNode>)",
    "insertText": "GetRootNode()"
  },
  {
    "label": "Save()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Save(const FString& InPath)"
  },
  {
    "label": "AddReference()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AddReference(const FString& InElement, const FString &InId, TSharedPtr<FFCPXMLNode>)"
  },
  {
    "label": "GetReference()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FFCPXMLNode>)",
    "insertText": "GetReference(const FString &InElement, const FString &InId)"
  },
  {
    "label": "ComposeKey()",
    "kind": "Method",
    "detail": "Function (private : FString)",
    "insertText": "ComposeKey(const FString& A, const FString& B)"
  },
  {
    "label": "FFCPXMLFileSetupVisitor()",
    "kind": "Method",
    "detail": "Function (private : FString LoadedFile ; FText ErrorMessage ; TSharedPtr<FFCPXMLNode> RootNode ; TMap<FString,TSharedPtr<FFCPXMLNode>> ReferenceMap ; } ; class FFCPXMLFileSetupVisitor : public FFCPXMLNodeVisitor { public :)",
    "insertText": "FFCPXMLFileSetupVisitor()"
  },
  {
    "label": "VisitNode()",
    "kind": "Method",
    "detail": "Function (public : bool)",
    "insertText": "VisitNode(TSharedRef<FFCPXMLBasicNode> InBasicNode)"
  },
  {
    "label": "VisitNode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "VisitNode(TSharedRef<FFCPXMLXmemlNode> InXmemlNode)"
  },
  {
    "label": "VisitNode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "VisitNode(TSharedRef<FFCPXMLSequenceNode> InSequenceNode)"
  },
  {
    "label": "VisitNode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "VisitNode(TSharedRef<FFCPXMLVideoNode> InVideoNode)"
  },
  {
    "label": "VisitNode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "VisitNode(TSharedRef<FFCPXMLAudioNode> InAudioNode)"
  },
  {
    "label": "VisitNode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "VisitNode(TSharedRef<FFCPXMLTrackNode> InTrackNode)"
  },
  {
    "label": "VisitNode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "VisitNode(TSharedRef<FFCPXMLClipNode> InClipNode)"
  },
  {
    "label": "VisitNode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "VisitNode(TSharedRef<FFCPXMLClipItemNode> InClipItemNode)"
  },
  {
    "label": "VisitNode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "VisitNode(TSharedRef<FFCPXMLFileNode> InFileNode)"
  },
  {
    "label": "AddReferenceId()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "AddReferenceId(FString InType, TSharedRef<FFCPXMLNode> InNode)"
  }
]