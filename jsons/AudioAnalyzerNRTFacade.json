[
  {
    "label": "FAnalyzerNRTFacade",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAnalyzerNRTFacade"
  },
  {
    "label": "GetAnalyzerNRTFactory()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" CoreMinimal . h \" # include \" HAL / Platform . h \" # include \" IAudioAnalyzerNRTInterface . h \" # include \" Templates / UniquePtr . h \" # include \" UObject / NameTypes . h \" namespace Audio { IAnalyzerNRTFactory*)",
    "insertText": "GetAnalyzerNRTFactory(FName InFactoryName)"
  },
  {
    "label": "FAnalyzerNRTFacade()",
    "kind": "Method",
    "detail": "Function (class FAnalyzerNRTFacade { public :)",
    "insertText": "FAnalyzerNRTFacade(TUniquePtr<IAnalyzerNRTSettings> InSettings, const FName& InFactoryName)"
  },
  {
    "label": "AnalyzePCM16Audio()",
    "kind": "Method",
    "detail": "Function (TUniquePtr<IAnalyzerNRTResult>)",
    "insertText": "AnalyzePCM16Audio(const TArray<uint8>& InRawWaveData, int32 InNumChannels, float InSampleRate)"
  }
]