[
  {
    "label": "VadCircularBuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "VadCircularBuffer"
  },
  {
    "label": "PitchBasedVad",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PitchBasedVad"
  },
  {
    "label": "PitchBasedVad()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_AUDIO_PROCESSING_VAD_PITCH_BASED_VAD_H_ # define MODULES_AUDIO_PROCESSING_VAD_PITCH_BASED_VAD_H_ # include<memory> # include \" modules / audio_processing / vad / common . h \" # include \" modules / audio_processing / vad / gmm . h \" namespace webrtc { class VadCircularBuffer ; class PitchBasedVad { public :)",
    "insertText": "PitchBasedVad()"
  },
  {
    "label": "VoicingProbability()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "VoicingProbability(const AudioFeatures& features, double* p_combined)"
  },
  {
    "label": "UpdatePrior()",
    "kind": "Method",
    "detail": "Function (private : int)",
    "insertText": "UpdatePrior(double p)"
  }
]