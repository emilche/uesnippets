[
  {
    "label": "GenerateSweepCurve()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" Containers / Set . h \" # include \" CoreMinimal . h \" # include \" FrameTypes . h \" # include \" GeometryBase . h \" # include \" Math / UnrealMathSSE . h \" # include \" VectorTypes . h \" namespace RevolveUtil { using namespace UE::Geometry ; using UE::Geometry::FFrame3d ; void)",
    "insertText": "GenerateSweepCurve(const FVector3d& RevolutionAxisOrigin, const FVector3d& RevolutionAxisDirection, double DegreesOffset, double DegreesPerStep, double DownAxisOffset, int TotalNumFrames, TArray<FFrame3d>& SweepCurveOut)"
  },
  {
    "label": "WeldPointsOnAxis()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WeldPointsOnAxis(TArray<FVector3d>& ProfileCurve, const FVector3d& RevolutionAxisOrigin, const FVector3d& RevolutionAxisDirection, double Tolerance, TSet<int32>& ProfileVerticesToWeldOut)"
  },
  {
    "label": "ProfileIsCCWRelativeRevolve()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ProfileIsCCWRelativeRevolve(TArray<FVector3d>& ProfileCurve, const FVector3d& RevolutionAxisOrigin, const FVector3d& RevolutionAxisDirection, bool bProfileCurveIsClosed)"
  },
  {
    "label": "MakeProfileCurveMidpointOfFirstStep()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MakeProfileCurveMidpointOfFirstStep(TArray<FVector3d>& ProfileCurve, double DegreesPerStep, const FVector3d& RevolutionAxisOrigin, const FVector3d& RevolutionAxisDirection)"
  }
]