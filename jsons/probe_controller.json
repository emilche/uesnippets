[
  {
    "label": "ProbeControllerConfig",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ProbeControllerConfig"
  },
  {
    "label": "controls",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "controls"
  },
  {
    "label": "ProbeController",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ProbeController"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "ProbeControllerConfig()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "ProbeControllerConfig(const FieldTrialsView* key_value_config)"
  },
  {
    "label": "ProbeController()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "ProbeController(const FieldTrialsView* key_value_config,\n                           RtcEventLog* event_log)"
  },
  {
    "label": "SetBitrates()",
    "kind": "Method",
    "detail": "Function (std::vector<ProbeClusterConfig>)",
    "insertText": "SetBitrates(\n      DataRate min_bitrate,\n      DataRate start_bitrate,\n      DataRate max_bitrate,\n      Timestamp at_time)"
  },
  {
    "label": "OnMaxTotalAllocatedBitrate()",
    "kind": "Method",
    "detail": "Function (std::vector<ProbeClusterConfig>)",
    "insertText": "OnMaxTotalAllocatedBitrate(DataRate max_total_allocated_bitrate,\n                             Timestamp at_time)"
  },
  {
    "label": "OnNetworkAvailability()",
    "kind": "Method",
    "detail": "Function (std::vector<ProbeClusterConfig>)",
    "insertText": "OnNetworkAvailability(\n      NetworkAvailability msg)"
  },
  {
    "label": "SetEstimatedBitrate()",
    "kind": "Method",
    "detail": "Function (std::vector<ProbeClusterConfig>)",
    "insertText": "SetEstimatedBitrate(\n      DataRate bitrate,\n      bool bwe_limited_due_to_packet_loss,\n      Timestamp at_time)"
  },
  {
    "label": "EnablePeriodicAlrProbing()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnablePeriodicAlrProbing(bool enable)"
  },
  {
    "label": "SetAlrStartTimeMs()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAlrStartTimeMs(absl::optional<int64_t> alr_start_time)"
  },
  {
    "label": "SetAlrEndedTimeMs()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAlrEndedTimeMs(int64_t alr_end_time)"
  },
  {
    "label": "RequestProbe()",
    "kind": "Method",
    "detail": "Function (std::vector<ProbeClusterConfig>)",
    "insertText": "RequestProbe(\n      Timestamp at_time)"
  },
  {
    "label": "SetNetworkStateEstimate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetNetworkStateEstimate(webrtc::NetworkStateEstimate estimate)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset(Timestamp at_time)"
  },
  {
    "label": "Process()",
    "kind": "Method",
    "detail": "Function (std::vector<ProbeClusterConfig>)",
    "insertText": "Process(\n      Timestamp at_time)"
  },
  {
    "label": "InitiateExponentialProbing()",
    "kind": "Method",
    "detail": "Function (std::vector<ProbeClusterConfig>)",
    "insertText": "InitiateExponentialProbing(Timestamp at_time)"
  },
  {
    "label": "InitiateProbing()",
    "kind": "Method",
    "detail": "Function (std::vector<ProbeClusterConfig>)",
    "insertText": "InitiateProbing(\n      Timestamp now,\n      std::vector<DataRate> bitrates_to_probe,\n      bool probe_further)"
  }
]