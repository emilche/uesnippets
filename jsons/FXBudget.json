[
  {
    "label": "FParticlePerfStatsListener_FXBudget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FParticlePerfStatsListener_FXBudget"
  },
  {
    "label": "FFXTimeData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFXTimeData"
  },
  {
    "label": "FFXBudget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFXBudget"
  },
  {
    "label": "FFXTimeData()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" ParticlePerfStatsManager . h \" class FParticlePerfStatsListener_FXBudget ; struct FFXTimeData {)",
    "insertText": "FFXTimeData(): GT(0.0f), GTConcurrent(0.0f), RT(0.0f)"
  },
  {
    "label": "FFXTimeData()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FFXTimeData(float InGT, float InConcurrent, float InRT) : GT(InGT), GTConcurrent(InConcurrent), RT(InRT)"
  },
  {
    "label": "GetTime()",
    "kind": "Method",
    "detail": "Function (} float GT ; float GTConcurrent ; float RT ; } ; # if WITH_GLOBAL_RUNTIME_FX_BUDGET class FFXBudget { public : FFXTimeData)",
    "insertText": "GetTime()"
  },
  {
    "label": "GetBudget()",
    "kind": "Method",
    "detail": "Function (FFXTimeData)",
    "insertText": "GetBudget()"
  },
  {
    "label": "GetUsage()",
    "kind": "Method",
    "detail": "Function (FFXTimeData)",
    "insertText": "GetUsage()"
  },
  {
    "label": "GetAdjustedUsage()",
    "kind": "Method",
    "detail": "Function (FFXTimeData)",
    "insertText": "GetAdjustedUsage()"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (WorstAdjustedUsage = NewAdjustedUsage ; } void)",
    "insertText": "Reset()"
  },
  {
    "label": "OnEnabledCVarChanged()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FParticlePerfStatsListener_FXBudget,ESPMode::ThreadSafe> StatsListener ; void)",
    "insertText": "OnEnabledCVarChanged(IConsoleVariable* CVar)"
  },
  {
    "label": "OnEnabledChangedInternal()",
    "kind": "Method",
    "detail": "Function (bool bEnabled ; FFXTimeData AdjustedUsage ; float WorstAdjustedUsage ; private : void)",
    "insertText": "OnEnabledChangedInternal()"
  },
  {
    "label": "GetWorstAdjustedUsage()",
    "kind": "Method",
    "detail": "Function (} float)",
    "insertText": "GetWorstAdjustedUsage()"
  }
]