[
  {
    "label": "StreamGenerator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "StreamGenerator"
  },
  {
    "label": "StreamGenerator()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "StreamGenerator(uint16_t start_seq_num, int64_t current_time)"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Init(uint16_t start_seq_num, int64_t current_time)"
  },
  {
    "label": "GenerateFrame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GenerateFrame(VideoFrameType type,\n                     int num_media_packets,\n                     int num_empty_packets,\n                     int64_t time_ms)"
  },
  {
    "label": "PopPacket()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PopPacket(VCMPacket* packet, int index)"
  },
  {
    "label": "DropLastPacket()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DropLastPacket()"
  },
  {
    "label": "GetPacket()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetPacket(VCMPacket* packet, int index)"
  },
  {
    "label": "NextPacket()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "NextPacket(VCMPacket* packet)"
  },
  {
    "label": "GeneratePacket()",
    "kind": "Method",
    "detail": "Function (VCMPacket)",
    "insertText": "GeneratePacket(uint16_t sequence_number,\n                           uint32_t timestamp,\n                           unsigned int size,\n                           bool first_packet,\n                           bool marker_bit,\n                           VideoFrameType type)"
  },
  {
    "label": "GetPacketIterator()",
    "kind": "Method",
    "detail": "Function (std::list<VCMPacket>::iterator)",
    "insertText": "GetPacketIterator(int index)"
  }
]