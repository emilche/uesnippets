[
  {
    "label": "TStaticMeshVertexData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TStaticMeshVertexData"
  },
  {
    "label": "TStaticMeshVertexData()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Containers / DynamicRHIResourceArray . h \" # include \" Rendering / StaticMeshVertexDataInterface . h \" template<VertexDataType> class TStaticMeshVertexData : public FStaticMeshVertexDataInterface { using FVertexResourceArray = TResourceArray<VertexDataType,VERTEXBUFFER_ALIGNMENT> ; FVertexResourceArray Data ; public :)",
    "insertText": "TStaticMeshVertexData(bool InNeedsCPUAccess=false) : Data(InNeedsCPUAccess)"
  },
  {
    "label": "ResizeBuffer()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "ResizeBuffer(uint32 NumVertices, EResizeBufferFlags BufferFlags = EResizeBufferFlags::None)"
  },
  {
    "label": "Reserve()",
    "kind": "Method",
    "detail": "Function (Data .)",
    "insertText": "Reserve(NumVertices)"
  },
  {
    "label": "AddUninitialized()",
    "kind": "Method",
    "detail": "Function (} Data .)",
    "insertText": "AddUninitialized(NumVertices - Data.Num())"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (} else)",
    "insertText": "if((uint32)Data.Num() > NumVertices)"
  },
  {
    "label": "EnumHasAnyFlags()",
    "kind": "Method",
    "detail": "Function (EAllowShrinking AllowShinking =)",
    "insertText": "EnumHasAnyFlags(BufferFlags, EResizeBufferFlags::AllowSlackOnReduce)"
  },
  {
    "label": "RemoveAt()",
    "kind": "Method",
    "detail": "Function (Data .)",
    "insertText": "RemoveAt(NumVertices, Data.Num() - NumVertices, AllowShinking)"
  },
  {
    "label": "Empty()",
    "kind": "Method",
    "detail": "Function (} } void)",
    "insertText": "Empty(uint32 NumVertices)"
  },
  {
    "label": "Empty()",
    "kind": "Method",
    "detail": "Function (Data .)",
    "insertText": "Empty(NumVertices)"
  },
  {
    "label": "IsValidIndex()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsValidIndex(uint32 Index)"
  },
  {
    "label": "GetStride()",
    "kind": "Method",
    "detail": "Function (} uint32)",
    "insertText": "GetStride()"
  },
  {
    "label": "GetDataPointer()",
    "kind": "Method",
    "detail": "Function (} uint8*)",
    "insertText": "GetDataPointer()"
  },
  {
    "label": "GetResourceArray()",
    "kind": "Method",
    "detail": "Function (} FResourceArrayInterface*)",
    "insertText": "GetResourceArray()"
  },
  {
    "label": "BulkSerialize()",
    "kind": "Method",
    "detail": "Function (Data .)",
    "insertText": "BulkSerialize(Ar, bForcePerElementSerialization)"
  },
  {
    "label": "Assign()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Assign(const TArray<VertexDataType>& Other)"
  },
  {
    "label": "ResizeBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResizeBuffer(Other.Num())"
  },
  {
    "label": "memcpy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "memcpy(GetDataPointer(), &Other[0], Other.Num() * sizeof(VertexDataType))"
  },
  {
    "label": "GetResourceSize()",
    "kind": "Method",
    "detail": "Function (} } SIZE_T)",
    "insertText": "GetResourceSize()"
  },
  {
    "label": "Num()",
    "kind": "Method",
    "detail": "Function (} int32)",
    "insertText": "Num()"
  },
  {
    "label": "GetAllowCPUAccess()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "GetAllowCPUAccess()"
  },
  {
    "label": "OverrideFreezeSizeAndAlignment()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "OverrideFreezeSizeAndAlignment(int64& Size, int32& Alignment)"
  },
  {
    "label": "sizeof()",
    "kind": "Method",
    "detail": "Function (Size =)",
    "insertText": "sizeof(*this)"
  }
]