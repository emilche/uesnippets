[
  {
    "label": "FText",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FText"
  },
  {
    "label": "FAssetData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAssetData"
  },
  {
    "label": "IAssetReferenceFilter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IAssetReferenceFilter"
  },
  {
    "label": "IAssetReferenceFilter()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" Delegates / Delegate . h \" class FText ; struct FAssetData ; class IAssetReferenceFilter { public : ~)",
    "insertText": "IAssetReferenceFilter()"
  },
  {
    "label": "PassesFilter()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "PassesFilter(const FAssetData& AssetData, FText* OutOptionalFailureReason = nullptr)"
  },
  {
    "label": "DECLARE_DELEGATE_RetVal_TwoParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DELEGATE_RetVal_TwoParams(bool, FOnIsCrossPluginReferenceAllowed, const FAssetData& , const FAssetData&)"
  },
  {
    "label": "OnIsCrossPluginReferenceAllowed()",
    "kind": "Method",
    "detail": "Function (FOnIsCrossPluginReferenceAllowed&)",
    "insertText": "OnIsCrossPluginReferenceAllowed()"
  }
]