[
  {
    "label": "SpinLockWaitTransition",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SpinLockWaitTransition"
  },
  {
    "label": "SpinLockWait()",
    "kind": "Method",
    "detail": "Function (# ifndef ABSL_BASE_INTERNAL_SPINLOCK_WAIT_H_ # define ABSL_BASE_INTERNAL_SPINLOCK_WAIT_H_ # include<stdint . h> # include<atomic> # include \" absl / base / internal / scheduling_mode . h \" namespace absl { ABSL_NAMESPACE_BEGIN namespace base_internal { struct SpinLockWaitTransition { uint32_t from ; uint32_t to ; bool done ; } ; uint32_t)",
    "insertText": "SpinLockWait(std::atomic<uint32_t> *w, int n, const SpinLockWaitTransition trans[], SchedulingMode scheduling_mode)"
  },
  {
    "label": "SpinLockWake()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SpinLockWake(std::atomic<uint32_t> *w, bool all)"
  },
  {
    "label": "SpinLockDelay()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SpinLockDelay(std::atomic<uint32_t> *w, uint32_t value, int loop, base_internal::SchedulingMode scheduling_mode)"
  },
  {
    "label": "SpinLockSuggestedDelayNS()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SpinLockSuggestedDelayNS(int loop)"
  },
  {
    "label": "ABSL_INTERNAL_C_SYMBOL()",
    "kind": "Method",
    "detail": "Function (} ABSL_NAMESPACE_END } \" C \" { void)",
    "insertText": "ABSL_INTERNAL_C_SYMBOL(AbslInternalSpinLockWake)(std::atomic<uint32_t> *w, bool all)"
  },
  {
    "label": "ABSL_INTERNAL_C_SYMBOL()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ABSL_INTERNAL_C_SYMBOL(AbslInternalSpinLockDelay)( std::atomic<uint32_t> *w, uint32_t value, int loop, absl::base_internal::SchedulingMode scheduling_mode)"
  },
  {
    "label": "ABSL_INTERNAL_C_SYMBOL()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ABSL_INTERNAL_C_SYMBOL(AbslInternalSpinLockWake)(w, all)"
  },
  {
    "label": "SpinLockDelay()",
    "kind": "Method",
    "detail": "Function (} void absl::)",
    "insertText": "SpinLockDelay(std::atomic<uint32_t> *w, uint32_t value, int loop, absl::base_internal::SchedulingMode scheduling_mode)"
  },
  {
    "label": "ABSL_INTERNAL_C_SYMBOL()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ABSL_INTERNAL_C_SYMBOL(AbslInternalSpinLockDelay) (w, value, loop, scheduling_mode)"
  }
]