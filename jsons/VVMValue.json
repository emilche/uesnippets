[
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "FPlaceholder",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPlaceholder"
  },
  {
    "label": "VCell",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VCell"
  },
  {
    "label": "VContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VContext"
  },
  {
    "label": "VFrame",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VFrame"
  },
  {
    "label": "VInt",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VInt"
  },
  {
    "label": "FAccessContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAccessContext"
  },
  {
    "label": "FAllocationContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAllocationContext"
  },
  {
    "label": "VPlaceholder",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VPlaceholder"
  },
  {
    "label": "VSuspension",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VSuspension"
  },
  {
    "label": "FCellFormatter",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCellFormatter"
  },
  {
    "label": "FOpResult",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FOpResult"
  },
  {
    "label": "VValue",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VValue"
  },
  {
    "label": "VRestValue",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VRestValue"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# pragma once # if WITH_VERSE_VM | |)",
    "insertText": "defined(__INTELLISENSE__)"
  },
  {
    "label": "VValue()",
    "kind": "Method",
    "detail": "Function (namespace Verse { struct FPlaceholder ; struct VCell ; struct VContext ; struct VFrame ; struct VInt ; struct FAccessContext ; struct FAllocationContext ; struct VPlaceholder ; struct VSuspension ; struct FCellFormatter ; struct FOpResult ; struct VValue {)",
    "insertText": "VValue() : EncodedBits(UninitializedValue)"
  },
  {
    "label": "VValue()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "VValue(VCell& Cell)"
  },
  {
    "label": "VValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "VValue(UObject* Object)"
  },
  {
    "label": "VValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "VValue(std::nullptr_t)"
  },
  {
    "label": "FromInt32()",
    "kind": "Method",
    "detail": "Function (VValue)",
    "insertText": "FromInt32(int32 Int32)"
  },
  {
    "label": "uint32()",
    "kind": "Method",
    "detail": "Function (VValue Result ; Result . EncodedBits = static_cast<)",
    "insertText": "uint32(Int32)"
  },
  {
    "label": "ReinterpretAsUInt64()",
    "kind": "Method",
    "detail": "Function (uint64 FloatAsU64 = Float .)",
    "insertText": "ReinterpretAsUInt64()"
  },
  {
    "label": "checkfSlow()",
    "kind": "Method",
    "detail": "Function (EncodedBits = FloatAsU64 + FloatOffset ;)",
    "insertText": "checkfSlow(FloatAsU64 <= MaxPureNaN, TEXT(\"Casting impure NaN to VValue: 0x%\" PRIx64), FloatAsU64)"
  },
  {
    "label": "FromBool()",
    "kind": "Method",
    "detail": "Function (} VValue)",
    "insertText": "FromBool(bool Value)"
  },
  {
    "label": "EffectDoneMarker()",
    "kind": "Method",
    "detail": "Function (VValue)",
    "insertText": "EffectDoneMarker()"
  },
  {
    "label": "VValue()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "VValue(const VValue& Copyee) : EncodedBits(Copyee.EncodedBits)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} VValue&)",
    "insertText": "operator(const VValue& Copyee)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (EncodedBits = Copyee . EncodedBits ; return* this ; } bool)",
    "insertText": "operator(const VValue& Other)"
  },
  {
    "label": "bool()",
    "kind": "Method",
    "detail": "Function (} operator)",
    "insertText": "bool()"
  },
  {
    "label": "Melt()",
    "kind": "Method",
    "detail": "Function (VValue)",
    "insertText": "Melt(FAllocationContext Context, VValue Value)"
  },
  {
    "label": "Freeze()",
    "kind": "Method",
    "detail": "Function (VValue)",
    "insertText": "Freeze(FAllocationContext Context, VValue Value)"
  },
  {
    "label": "Decode()",
    "kind": "Method",
    "detail": "Function (VValue)",
    "insertText": "Decode(uint64 EncodedBits)"
  },
  {
    "label": "VValue()",
    "kind": "Method",
    "detail": "Function (VValue Result ; Result . EncodedBits = EncodedBits ; return Result ; })",
    "insertText": "VValue(VPlaceholder&)"
  },
  {
    "label": "IsPlaceholder()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsPlaceholder()"
  },
  {
    "label": "Placeholder()",
    "kind": "Method",
    "detail": "Function (} VValue)",
    "insertText": "Placeholder(const VPlaceholder& Placeholder)"
  },
  {
    "label": "Decode()",
    "kind": "Method",
    "detail": "Function (VValue Result =)",
    "insertText": "Decode(BitCast<uint64>(&Placeholder) | PlaceholderTag)"
  },
  {
    "label": "GetRootPlaceholder()",
    "kind": "Method",
    "detail": "Function (VPlaceholder&)",
    "insertText": "GetRootPlaceholder()"
  },
  {
    "label": "AsPlaceholder()",
    "kind": "Method",
    "detail": "Function (VPlaceholder&)",
    "insertText": "AsPlaceholder()"
  },
  {
    "label": "IsInt32()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsInt32()"
  },
  {
    "label": "IsUint32()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsUint32()"
  },
  {
    "label": "AsUint32()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "AsUint32()"
  },
  {
    "label": "AsInt32()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "AsInt32()"
  },
  {
    "label": "AsCell()",
    "kind": "Method",
    "detail": "Function (} VCell&)",
    "insertText": "AsCell()"
  },
  {
    "label": "IsCellOfType()",
    "kind": "Method",
    "detail": "Function (} else { return nullptr ; } } template<ObjectType> bool)",
    "insertText": "IsCellOfType()"
  },
  {
    "label": "StaticCast()",
    "kind": "Method",
    "detail": "Function (template<ObjectType> ObjectType&)",
    "insertText": "StaticCast()"
  },
  {
    "label": "DynamicCast()",
    "kind": "Method",
    "detail": "Function (template<ObjectType> ObjectType*)",
    "insertText": "DynamicCast()"
  },
  {
    "label": "IsUObject()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsUObject()"
  },
  {
    "label": "AsUObject()",
    "kind": "Method",
    "detail": "Function (} UObject*)",
    "insertText": "AsUObject()"
  },
  {
    "label": "ExtractUObject()",
    "kind": "Method",
    "detail": "Function (} UObject*)",
    "insertText": "ExtractUObject()"
  },
  {
    "label": "IsInt()",
    "kind": "Method",
    "detail": "Function (} else { return nullptr ; } } bool)",
    "insertText": "IsInt()"
  },
  {
    "label": "AsInt()",
    "kind": "Method",
    "detail": "Function (VInt)",
    "insertText": "AsInt()"
  },
  {
    "label": "IsLogic()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsLogic()"
  },
  {
    "label": "AsBool()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AsBool()"
  },
  {
    "label": "IsFloat()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsFloat()"
  },
  {
    "label": "AsFloat()",
    "kind": "Method",
    "detail": "Function (} VFloat)",
    "insertText": "AsFloat()"
  },
  {
    "label": "IsEnumerator()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsEnumerator()"
  },
  {
    "label": "IsUninitialized()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsUninitialized()"
  },
  {
    "label": "ToString()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "ToString(FAllocationContext Context, const FCellFormatter& Formatter)"
  },
  {
    "label": "ToString()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ToString(FStringBuilderBase& Builder, FAllocationContext Context, const FCellFormatter& Formatter)"
  },
  {
    "label": "Char()",
    "kind": "Method",
    "detail": "Function (VValue)",
    "insertText": "Char(uint8 V)"
  },
  {
    "label": "EncodedBits()",
    "kind": "Method",
    "detail": "Function (VValue R ; R .)",
    "insertText": "EncodedBits(static_cast<uint64>(V) << NumLowerEncodingBits)"
  },
  {
    "label": "IsChar32()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsChar32()"
  },
  {
    "label": "AsChar()",
    "kind": "Method",
    "detail": "Function (} UTF8CHAR)",
    "insertText": "AsChar()"
  },
  {
    "label": "AsChar32()",
    "kind": "Method",
    "detail": "Function (} UTF32CHAR)",
    "insertText": "AsChar32()"
  },
  {
    "label": "Root()",
    "kind": "Method",
    "detail": "Function (} private : struct VRestValue ; union { uint64 EncodedBits ; VCell* Cell ; struct { int32 Payload ; int32 Tag ; } Bits ; } ; VValue)",
    "insertText": "Root(uint16 SplitDepth)"
  },
  {
    "label": "Decode()",
    "kind": "Method",
    "detail": "Function (VValue Result =)",
    "insertText": "Decode(RootTag | (static_cast<uint64>(SplitDepth) << 32))"
  },
  {
    "label": "GetSplitDepth()",
    "kind": "Method",
    "detail": "Function (} uint16)",
    "insertText": "GetSplitDepth()"
  }
]