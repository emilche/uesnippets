[
  {
    "label": "MCSymbol",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MCSymbol"
  },
  {
    "label": "DwarfStringPoolEntry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DwarfStringPoolEntry"
  },
  {
    "label": "DwarfStringPoolEntryRef",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DwarfStringPoolEntryRef"
  },
  {
    "label": "DwarfStringPoolEntryRef()",
    "kind": "Method",
    "detail": "Function (# ifndef LLVM_CODEGEN_DWARFSTRINGPOOLENTRY_H # define LLVM_CODEGEN_DWARFSTRINGPOOLENTRY_H # include \" llvm / ADT / StringMap . h \" namespace llvm { class MCSymbol ; struct DwarfStringPoolEntry { MCSymbol* Symbol ; unsigned Offset ; unsigned Index ; } ; struct DwarfStringPoolEntryRef { const StringMapEntry<DwarfStringPoolEntry>* I = nullptr ; public :)",
    "insertText": "DwarfStringPoolEntryRef()"
  },
  {
    "label": "DwarfStringPoolEntryRef()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DwarfStringPoolEntryRef(const StringMapEntry<DwarfStringPoolEntry> &I) : I(&I)"
  },
  {
    "label": "bool()",
    "kind": "Method",
    "detail": "Function (} operator)",
    "insertText": "bool()"
  },
  {
    "label": "assert()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "assert(I->second.Symbol && \"No symbol available!\")"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "operator(const DwarfStringPoolEntryRef &X)"
  }
]