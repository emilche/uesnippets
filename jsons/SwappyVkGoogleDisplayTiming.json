[
  {
    "label": "SwappyVkGoogleDisplayTiming",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SwappyVkGoogleDisplayTiming"
  },
  {
    "label": "VKFrame",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VKFrame"
  },
  {
    "label": "SwappyVkGoogleDisplayTiming()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" FrameStatistics . h \" # include \" SwappyVkBase . h \" namespace swappy { class SwappyVkGoogleDisplayTiming : public SwappyVkBase { public :)",
    "insertText": "SwappyVkGoogleDisplayTiming(JNIEnv* env, jobject jactivity, VkPhysicalDevice physicalDevice, VkDevice device, const SwappyVkFunctionProvider* provider)"
  },
  {
    "label": "doGetRefreshCycleDuration()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "doGetRefreshCycleDuration(VkSwapchainKHR swapchain, uint64_t* pRefreshDuration)"
  },
  {
    "label": "doQueuePresent()",
    "kind": "Method",
    "detail": "Function (VkResult)",
    "insertText": "doQueuePresent(VkQueue queue, uint32_t queueFamilyIndex, const VkPresentInfoKHR* pPresentInfo)"
  },
  {
    "label": "enableStats()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "enableStats(bool enabled)"
  },
  {
    "label": "recordFrameStart()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "recordFrameStart(VkQueue queue, uint32_t image)"
  },
  {
    "label": "getStats()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "getStats(SwappyStats* swappyStats)"
  },
  {
    "label": "clearStats()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "clearStats()"
  }
]