[
  {
    "label": "opencl_factory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "opencl_factory"
  },
  {
    "label": "default_opencl_factory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "default_opencl_factory"
  },
  {
    "label": "opencl_program",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "opencl_program"
  },
  {
    "label": "opencl_device",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "opencl_device"
  },
  {
    "label": "opencl_factory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "opencl_factory"
  },
  {
    "label": "opencl_memory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "opencl_memory"
  },
  {
    "label": "opencl_program",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "opencl_program"
  },
  {
    "label": "opencl_buffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "opencl_buffer"
  },
  {
    "label": "opencl_device_list",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "opencl_device_list"
  },
  {
    "label": "callback_base",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "callback_base"
  },
  {
    "label": "callback",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "callback"
  },
  {
    "label": "opencl_async_msg",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "opencl_async_msg"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "opencl_memory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "opencl_memory"
  },
  {
    "label": "opencl_buffer_impl",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "opencl_buffer_impl"
  },
  {
    "label": "opencl_buffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "opencl_buffer"
  },
  {
    "label": "access_type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "access_type"
  },
  {
    "label": "opencl_subbuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "opencl_subbuffer"
  },
  {
    "label": "opencl_buffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "opencl_buffer"
  },
  {
    "label": "opencl_factory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "opencl_factory"
  },
  {
    "label": "opencl_subbuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "opencl_subbuffer"
  },
  {
    "label": "opencl_subbuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "opencl_subbuffer"
  },
  {
    "label": "is_",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "is_"
  },
  {
    "label": "opencl_range",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "opencl_range"
  },
  {
    "label": "opencl_factory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "opencl_factory"
  },
  {
    "label": "kernel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "kernel"
  },
  {
    "label": "opencl_factory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "opencl_factory"
  },
  {
    "label": "opencl_program",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "opencl_program"
  },
  {
    "label": "finalize_fn",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "finalize_fn"
  },
  {
    "label": "finalize_fn_leaf",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "finalize_fn_leaf"
  },
  {
    "label": "opencl_program",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "opencl_program"
  },
  {
    "label": "opencl_buffer_impl",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "opencl_buffer_impl"
  },
  {
    "label": "opencl_memory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "opencl_memory"
  },
  {
    "label": "opencl_factory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "opencl_factory"
  },
  {
    "label": "default_device_selector",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "default_device_selector"
  },
  {
    "label": "default_device_filter",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "default_device_filter"
  },
  {
    "label": "default_opencl_factory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "default_opencl_factory"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "opencl_program",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "opencl_program"
  },
  {
    "label": "file_reader",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "file_reader"
  },
  {
    "label": "opencl_program_builder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "opencl_program_builder"
  },
  {
    "label": "opencl_device_filter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "opencl_device_filter"
  },
  {
    "label": "opencl_factory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "opencl_factory"
  },
  {
    "label": "opencl_factory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "opencl_factory"
  },
  {
    "label": "opencl_node",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "opencl_node"
  },
  {
    "label": "opencl_node",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "opencl_node"
  },
  {
    "label": "opencl_node",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "opencl_node"
  },
  {
    "label": "opencl_node",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "opencl_node"
  },
  {
    "label": "platforms()",
    "kind": "Method",
    "detail": "Function (std::vector<cl_platform_id>)",
    "insertText": "platforms(num_platforms)"
  },
  {
    "label": "devices()",
    "kind": "Method",
    "detail": "Function (std::vector<cl_device_id>)",
    "insertText": "devices(num_all_devices)"
  },
  {
    "label": "data()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "data()"
  },
  {
    "label": "data()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "data()"
  },
  {
    "label": "a()",
    "kind": "Method",
    "detail": "Function (opencl_async_msg)",
    "insertText": "a(*this)"
  },
  {
    "label": "lock()",
    "kind": "Method",
    "detail": "Function (tbb::spin_mutex::scoped_lock)",
    "insertText": "lock(my_sending_lock)"
  },
  {
    "label": "d()",
    "kind": "Method",
    "detail": "Function (Factory>)",
    "insertText": "d(my_host_ptr)"
  },
  {
    "label": "check()",
    "kind": "Method",
    "detail": "Function (std::true_type)",
    "insertText": "check( typename C::type* )"
  },
  {
    "label": "check()",
    "kind": "Method",
    "detail": "Function (std::false_type)",
    "insertText": "check( ... )"
  },
  {
    "label": "d()",
    "kind": "Method",
    "detail": "Function (Factory>)",
    "insertText": "d( mem_obj )"
  },
  {
    "label": "dmsg()",
    "kind": "Method",
    "detail": "Function (mem_obj_t::opencl_factory_type>)",
    "insertText": "dmsg( mem_obj )"
  },
  {
    "label": "d()",
    "kind": "Method",
    "detail": "Function (Factory>)",
    "insertText": "d( mem_obj )"
  },
  {
    "label": "for()",
    "kind": "Method",
    "detail": "Function (uninitialized)",
    "insertText": "for(int s = 0; s < 3 && g_it != global_work.end()"
  },
  {
    "label": "lock()",
    "kind": "Method",
    "detail": "Function (tbb::spin_mutex::scoped_lock)",
    "insertText": "lock( my_devices_mutex )"
  },
  {
    "label": "get_event_from_args()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "get_event_from_args( e, args... )"
  },
  {
    "label": "opencl_factory()",
    "kind": "Method",
    "detail": "Function (private:)",
    "insertText": "opencl_factory( const opencl_factory& )"
  },
  {
    "label": "lock()",
    "kind": "Method",
    "detail": "Function (tbb::spin_mutex::scoped_lock)",
    "insertText": "lock(my_devices_mutex)"
  },
  {
    "label": "file_descriptor()",
    "kind": "Method",
    "detail": "Function (std::ifstream)",
    "insertText": "file_descriptor( filepath, std::ifstream::binary )"
  },
  {
    "label": "fr()",
    "kind": "Method",
    "detail": "Function (file_reader)",
    "insertText": "fr( my_arg_str )"
  },
  {
    "label": "fr()",
    "kind": "Method",
    "detail": "Function (file_reader)",
    "insertText": "fr( my_arg_str )"
  },
  {
    "label": "bin_statuses()",
    "kind": "Method",
    "detail": "Function (std::vector<cl_int>)",
    "insertText": "bin_statuses( num_devices, -1 )"
  },
  {
    "label": "__TBB_ASSERT()",
    "kind": "Method",
    "detail": "Function (default:)",
    "insertText": "__TBB_ASSERT( false, \"Unsupported program type\" )"
  }
]