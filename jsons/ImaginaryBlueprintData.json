[
  {
    "label": "FArchive",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FArchive"
  },
  {
    "label": "FJsonObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FJsonObject"
  },
  {
    "label": "FJsonValue",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FJsonValue"
  },
  {
    "label": "UBlueprint",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBlueprint"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "ESearchableValueStatus",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ESearchableValueStatus"
  },
  {
    "label": "FSearchableValueInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSearchableValueInfo"
  },
  {
    "label": "FComponentUniqueDisplay",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FComponentUniqueDisplay"
  },
  {
    "label": "FImaginaryFiBData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FImaginaryFiBData"
  },
  {
    "label": "FFiBMetaData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFiBMetaData"
  },
  {
    "label": "FCategorySectionHelper",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCategorySectionHelper"
  },
  {
    "label": "FImaginaryBlueprint",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FImaginaryBlueprint"
  },
  {
    "label": "FImaginaryGraph",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FImaginaryGraph"
  },
  {
    "label": "FImaginaryGraphNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FImaginaryGraphNode"
  },
  {
    "label": "FImaginaryProperty",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FImaginaryProperty"
  },
  {
    "label": "FImaginaryComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FImaginaryComponent"
  },
  {
    "label": "FImaginaryPin",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FImaginaryPin"
  },
  {
    "label": "FSearchableValueInfo()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" Containers / Map . h \" # include \" Containers / UnrealString . h \" # include \" CoreMinimal . h \" # include \" Delegates / Delegate . h \" # include \" EdGraph / EdGraphSchema . h \" # include \" FindInBlueprintManager . h \" # include \" FindInBlueprints . h \" # include \" HAL / CriticalSection . h \" # include \" HAL / Platform . h \" # include \" Internationalization / Text . h \" # include \" Misc / AssertionMacros . h \" # include \" Misc / TextFilterExpressionEvaluator . h \" # include \" Misc / TextFilterUtils . h \" # include \" Templates / Atomic . h \" # include \" Templates / SharedPointer . h \" # include \" UObject / NameTypes . h \" class FArchive ; class FJsonObject ; class FJsonValue ; class UBlueprint ; class UObject ; enum ESearchableValueStatus { NotSearchable = 0 x00000000,Searchable = 0 x00000001,Hidden = 0 x00000002,= 0 x00000004,CoreDisplayItem = Hidden | Searchable,ExplicitySearchable = | Searchable,ExplicitySearchableHidden = | Searchable | Hidden,AllSearchable = CoreDisplayItem | ExplicitySearchable,} ; class FSearchableValueInfo { public :)",
    "insertText": "FSearchableValueInfo() : SearchableValueStatus(ESearchableValueStatus::NotSearchable) , LookupTableKey(-1)"
  },
  {
    "label": "FSearchableValueInfo()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FSearchableValueInfo(FText InDisplayKey, int32 InLookUpTableKey) : SearchableValueStatus(ESearchableValueStatus::Searchable) , DisplayKey(InDisplayKey) , LookupTableKey(InLookUpTableKey)"
  },
  {
    "label": "FSearchableValueInfo()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FSearchableValueInfo(FText InDisplayKey, FText InDisplayText) : SearchableValueStatus(ESearchableValueStatus::Searchable) , DisplayKey(InDisplayKey) , LookupTableKey(-1) , DisplayText(InDisplayText)"
  },
  {
    "label": "FSearchableValueInfo()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FSearchableValueInfo(FText InDisplayKey, int32 InLookUpTableKey, ESearchableValueStatus InSearchableValueStatus) : SearchableValueStatus(InSearchableValueStatus) , DisplayKey(InDisplayKey) , LookupTableKey(InLookUpTableKey)"
  },
  {
    "label": "FSearchableValueInfo()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FSearchableValueInfo(FText InDisplayKey, FText InDisplayText, ESearchableValueStatus InSearchableValueStatus) : SearchableValueStatus(InSearchableValueStatus) , DisplayKey(InDisplayKey) , LookupTableKey(-1) , DisplayText(InDisplayText)"
  },
  {
    "label": "IsSearchable()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsSearchable()"
  },
  {
    "label": "IsCoreDisplay()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsCoreDisplay()"
  },
  {
    "label": "IsExplicitSearchable()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsExplicitSearchable()"
  },
  {
    "label": "GetDisplayText()",
    "kind": "Method",
    "detail": "Function (} FText)",
    "insertText": "GetDisplayText(const TMap<int32, FText>& InLookupTable)"
  },
  {
    "label": "GetDisplayKey()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetDisplayKey()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "operator(const FComponentUniqueDisplay& Other)"
  },
  {
    "label": "FImaginaryFiBData()",
    "kind": "Method",
    "detail": "Function (FSearchResult SearchResult ; } ; class FImaginaryFiBData : public ITextFilterExpressionContext,public TSharedFromThis<FImaginaryFiBData,ESPMode::ThreadSafe> { public :)",
    "insertText": "FImaginaryFiBData(FImaginaryFiBDataWeakPtr InOuter, TSharedPtr< FJsonObject > InUnparsedJsonObject = TSharedPtr<FJsonObject>(), TMap<int32, FText>* InLookupTablePtr = nullptr)"
  },
  {
    "label": "TestBasicStringExpression()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TestBasicStringExpression(const FTextFilterString& InValue, const ETextFilterTextComparisonMode InTextComparisonMode)"
  },
  {
    "label": "CanCallFilter()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanCallFilter(ESearchQueryFilter InSearchQueryFilter)"
  },
  {
    "label": "ParseAllChildData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ParseAllChildData(ESearchableValueStatus InSearchabilityOverride = ESearchableValueStatus::Searchable)"
  },
  {
    "label": "TestBasicStringExpression()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TestBasicStringExpression(const FTextFilterString& InValue, const ETextFilterTextComparisonMode InTextComparisonMode, TMultiMap< const FImaginaryFiBData*, FComponentUniqueDisplay >& InOutMatchingSearchComponents)"
  },
  {
    "label": "TestComplexExpression()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TestComplexExpression(const FName& InKey, const FTextFilterString& InValue, const ETextFilterComparisonOperation InComparisonOperation, const ETextFilterTextComparisonMode InTextComparisonMode, TMultiMap< const FImaginaryFiBData*, FComponentUniqueDisplay >& InOutMatchingSearchComponents)"
  },
  {
    "label": "GetObject()",
    "kind": "Method",
    "detail": "Function (UObject*)",
    "insertText": "GetObject(UBlueprint* InBlueprint)"
  },
  {
    "label": "GetBlueprint()",
    "kind": "Method",
    "detail": "Function (UBlueprint*)",
    "insertText": "GetBlueprint()"
  },
  {
    "label": "CreateSearchResult()",
    "kind": "Method",
    "detail": "Function (} return nullptr ; } FSearchResult)",
    "insertText": "CreateSearchResult(FSearchResult InParent)"
  },
  {
    "label": "GetAllParsedChildData()",
    "kind": "Method",
    "detail": "Function (const TArray<FImaginaryFiBDataSharedPtr>&)",
    "insertText": "GetAllParsedChildData()"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (ParsedTagsAndValues .)",
    "insertText": "Add(FindInBlueprintsHelpers::FSimpleFTextKeyStorage(InKey), InValue)"
  },
  {
    "label": "GetOuter()",
    "kind": "Method",
    "detail": "Function (} FImaginaryFiBDataWeakPtr)",
    "insertText": "GetOuter()"
  },
  {
    "label": "DumpParsedObject()",
    "kind": "Method",
    "detail": "Function (bRequiresInterlockedParsing = true ; } void)",
    "insertText": "DumpParsedObject(FArchive& Ar, int32 InTreeLevel = 0)"
  },
  {
    "label": "CreateSearchTree()",
    "kind": "Method",
    "detail": "Function (FSearchResult)",
    "insertText": "CreateSearchTree(FSearchResult InParentSearchResult, FImaginaryFiBDataWeakPtr InCurrentPointer, TArray< const FImaginaryFiBData* >& InValidSearchResults, TMultiMap< const FImaginaryFiBData*, FComponentUniqueDisplay >& InMatchingSearchComponents)"
  },
  {
    "label": "TrySpecialHandleJsonValue()",
    "kind": "Method",
    "detail": "Function (protected : bool)",
    "insertText": "TrySpecialHandleJsonValue(FText InKey, TSharedPtr< FJsonValue > InJsonValue)"
  },
  {
    "label": "CreateSearchComponentDisplayText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "CreateSearchComponentDisplayText(FText InKey, FText InValue)"
  },
  {
    "label": "ParseJsonValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ParseJsonValue(FText InKey, FText InDisplayKey, TSharedPtr< FJsonValue > InJsonValue, TArray<FSearchableValueInfo>& OutParsedValues, bool bIsInArray = false, ESearchableValueStatus InSearchabilityOverride = ESearchableValueStatus::Searchable)"
  },
  {
    "label": "ParseAllChildData_Internal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ParseAllChildData_Internal(ESearchableValueStatus InSearchabilityOverride = ESearchableValueStatus::Searchable)"
  },
  {
    "label": "DumpParsedObject_Internal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DumpParsedObject_Internal(FArchive& Ar)"
  },
  {
    "label": "FFiBMetaData()",
    "kind": "Method",
    "detail": "Function (} protected : TSharedPtr<FJsonObject> UnparsedJsonObject ; TArray<FImaginaryFiBDataSharedPtr> ParsedChildData ; TMultiMap<FindInBlueprintsHelpers::FSimpleFTextKeyStorage,FSearchableValueInfo> ParsedTagsAndValues ; TMap<int32,FText>* LookupTablePtr ; FImaginaryFiBDataWeakPtr Outer ; TAtomic<bool> bHasParsedJsonObject ; bool bRequiresInterlockedParsing ; FCriticalSection ParseChildDataCriticalSection ; private : FSearchResult SearchResultTemplate ; } ; class FFiBMetaData : public FImaginaryFiBData { public :)",
    "insertText": "FFiBMetaData(FImaginaryFiBDataWeakPtr InOuter, TSharedPtr< FJsonObject > InUnparsedJsonObject, TMap<int32, FText>* InLookupTablePtr)"
  },
  {
    "label": "IsHidden()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsHidden()"
  },
  {
    "label": "CreateSearchResult_Internal()",
    "kind": "Method",
    "detail": "Function (FSearchResult)",
    "insertText": "CreateSearchResult_Internal(FSearchResult InTemplate)"
  },
  {
    "label": "FCategorySectionHelper()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FCategorySectionHelper(FImaginaryFiBDataWeakPtr InOuter, TMap<int32, FText>* InLookupTablePtr, FText InCategoryName, bool bInTagAndValueCategory)"
  },
  {
    "label": "FCategorySectionHelper()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FCategorySectionHelper(FImaginaryFiBDataWeakPtr InOuter, TSharedPtr< FJsonObject > InUnparsedJsonObject, TMap<int32, FText>* InLookupTablePtr, FText InCategoryName, bool bInTagAndValueCategory)"
  },
  {
    "label": "FCategorySectionHelper()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FCategorySectionHelper(FImaginaryFiBDataWeakPtr InOuter, TSharedPtr< FJsonObject > InUnparsedJsonObject, TMap<int32, FText>* InLookupTablePtr, FText InCategoryName, bool bInTagAndValueCategory, FCategorySectionHelperCallback InSpecialHandlingCallback)"
  },
  {
    "label": "IsCategory()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsCategory()"
  },
  {
    "label": "GetCategoryFunctionName()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetCategoryFunctionName()"
  },
  {
    "label": "ParseAllChildData_Internal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ParseAllChildData_Internal(ESearchableValueStatus InSearchabilityOverride)"
  },
  {
    "label": "FImaginaryBlueprint()",
    "kind": "Method",
    "detail": "Function (protected : FCategorySectionHelperCallback SpecialHandlingCallback ; FText CategoryName ; bool bIsTagAndValue ; } ; class FImaginaryBlueprint : public FImaginaryFiBData { public :)",
    "insertText": "FImaginaryBlueprint(const FString& InBlueprintName, const FString& InBlueprintPath, const FString& InBlueprintParentClass, const TArray<FString>& InInterfaces, const FString& InUnparsedStringData, FSearchDataVersionInfo InVersionInfo)"
  },
  {
    "label": "IsCompatibleWithFilter()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsCompatibleWithFilter(ESearchQueryFilter InSearchQueryFilter)"
  },
  {
    "label": "ParseGraph()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ParseGraph(TSharedPtr< FJsonValue > InJsonValue, FString InCategoryTitle, EGraphType InGraphType)"
  },
  {
    "label": "ParseComponents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ParseComponents(TSharedPtr< FJsonObject > InJsonObject, TArray<FImaginaryFiBDataSharedPtr>& OutParsedChildData)"
  },
  {
    "label": "ParseToJson()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ParseToJson(FSearchDataVersionInfo InVersionInfoconst, const FString& UnparsedStringData)"
  },
  {
    "label": "FImaginaryGraph()",
    "kind": "Method",
    "detail": "Function (protected : FString BlueprintPath ; TMap<int32,FText> LookupTable ; } ; class FImaginaryGraph : public FImaginaryFiBData { public :)",
    "insertText": "FImaginaryGraph(FImaginaryFiBDataWeakPtr InOuter, TSharedPtr< FJsonObject > InUnparsedJsonObject, TMap<int32, FText>* InLookupTablePtr, EGraphType InGraphType)"
  },
  {
    "label": "GetSearchabilityStatus()",
    "kind": "Method",
    "detail": "Function (ESearchableValueStatus)",
    "insertText": "GetSearchabilityStatus(FString InKey)"
  },
  {
    "label": "FImaginaryGraphNode()",
    "kind": "Method",
    "detail": "Function (protected : EGraphType GraphType ; } ; class FImaginaryGraphNode : public FImaginaryFiBData { public :)",
    "insertText": "FImaginaryGraphNode(FImaginaryFiBDataWeakPtr InOuter, TSharedPtr< FJsonObject > InUnparsedJsonObject, TMap<int32, FText>* InLookupTablePtr)"
  },
  {
    "label": "FImaginaryProperty()",
    "kind": "Method",
    "detail": "Function (private : FString SchemaName ; } ; class FImaginaryProperty : public FImaginaryFiBData { public :)",
    "insertText": "FImaginaryProperty(FImaginaryFiBDataWeakPtr InOuter, TSharedPtr< FJsonObject > InUnparsedJsonObject, TMap<int32, FText>* InLookupTablePtr)"
  },
  {
    "label": "FImaginaryComponent()",
    "kind": "Method",
    "detail": "Function (} ; class FImaginaryComponent : public FImaginaryProperty { public :)",
    "insertText": "FImaginaryComponent(FImaginaryFiBDataWeakPtr InOuter, TSharedPtr< FJsonObject > InUnparsedJsonObject, TMap<int32, FText>* InLookupTablePtr)"
  },
  {
    "label": "FImaginaryPin()",
    "kind": "Method",
    "detail": "Function (} ; class FImaginaryPin : public FImaginaryFiBData { public :)",
    "insertText": "FImaginaryPin(FImaginaryFiBDataWeakPtr InOuter, TSharedPtr< FJsonObject > InUnparsedJsonObject, TMap<int32, FText>* InLookupTablePtr, FString InSchemaName)"
  }
]