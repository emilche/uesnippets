[
  {
    "label": "UPhysicalMaterial",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPhysicalMaterial"
  },
  {
    "label": "IPhysicsProxyBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPhysicsProxyBase"
  },
  {
    "label": "EventEmitterFlag",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EventEmitterFlag"
  },
  {
    "label": "FBaseEventFlag",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBaseEventFlag"
  },
  {
    "label": "FCollidingData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCollidingData"
  },
  {
    "label": "FCollidingDataExt",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCollidingDataExt"
  },
  {
    "label": "FBreakingData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBreakingData"
  },
  {
    "label": "FCrumblingData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCrumblingData"
  },
  {
    "label": "FBreakingDataExt",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBreakingDataExt"
  },
  {
    "label": "FTrailingData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTrailingData"
  },
  {
    "label": "FTrailingDataExt",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTrailingDataExt"
  },
  {
    "label": "FSleepingData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSleepingData"
  },
  {
    "label": "FRemovalData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRemovalData"
  },
  {
    "label": "FRemovalDataExt",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRemovalDataExt"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "FBaseEventFlag()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Chaos / Box . h \" # include \" Chaos / ParticleHandleFwd . h \" # include \" Chaos / PhysicalMaterials . h \" # include \" Chaos / Vector . h \" class UPhysicalMaterial ; class IPhysicsProxyBase ; namespace Chaos { enum EventEmitterFlag { EmptyDispatcher = 0,OwnDispatcher = 1,GlobalDispatcher = 2,BothDispatcher = 3,} ; struct FBaseEventFlag {)",
    "insertText": "FBaseEventFlag() : EmitterFlag(OwnDispatcher)"
  },
  {
    "label": "SetEmitterFlag()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetEmitterFlag(bool LocalEmitter, bool GlobalEmitter)"
  },
  {
    "label": "ComputeEmitterFlag()",
    "kind": "Method",
    "detail": "Function (EmitterFlag =)",
    "insertText": "ComputeEmitterFlag(LocalEmitter, GlobalEmitter)"
  },
  {
    "label": "ComputeEmitterFlag()",
    "kind": "Method",
    "detail": "Function (} EventEmitterFlag)",
    "insertText": "ComputeEmitterFlag(bool LocalEmitter, bool GlobalEmitter)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (EventEmitterFlag EmitterFlagOut = EventEmitterFlag::EmptyDispatcher ;)",
    "insertText": "if(LocalEmitter)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (EmitterFlagOut = EventEmitterFlag::OwnDispatcher ; })",
    "insertText": "if(GlobalEmitter)"
  },
  {
    "label": "EventEmitterFlag()",
    "kind": "Method",
    "detail": "Function (EmitterFlagOut =)",
    "insertText": "EventEmitterFlag(EmitterFlagOut | EventEmitterFlag::GlobalDispatcher)"
  },
  {
    "label": "FCollidingData()",
    "kind": "Method",
    "detail": "Function (} return EmitterFlagOut ; } EventEmitterFlag EmitterFlag ; } ; struct FCollidingData {)",
    "insertText": "FCollidingData() : Location(FVec3((FReal)0.0)) , AccumulatedImpulse(FVec3((FReal)0.0)) , Normal(FVec3((FReal)0.0)) , Velocity1(FVec3((FReal)0.0)) , Velocity2(FVec3((FReal)0.0)) , DeltaVelocity1(FVec3((FReal)0.0)) , DeltaVelocity2(FVec3((FReal)0.0)) , AngularVelocity1(FVec3((FReal)0.0)) , AngularVelocity2(FVec3((FReal)0.0)) , Mass1((FReal)0.0) , Mass2((FReal)0.0) , PenetrationDepth((FReal)0.0) , Mat1(FMaterialHandle()) , Mat2(FMaterialHandle()) , bProbe(false) , Proxy1(nullptr) , Proxy2(nullptr) , ShapeIndex1(INDEX_NONE) , ShapeIndex2(INDEX_NONE) , SolverTime((FReal)0.0)"
  },
  {
    "label": "FCollidingData()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FCollidingData(FVec3 InLocation, FVec3 InAccumulatedImpulse, FVec3 InNormal, FVec3 InVelocity1, FVec3 InVelocity2, FVec3 InDeltaVelocity1, FVec3 InDeltaVelocity2 , FVec3 InAngularVelocity1, FVec3 InAngularVelocity2, FReal InMass1,FReal InMass2, FReal InPenetrationDepth, IPhysicsProxyBase* InProxy1, IPhysicsProxyBase* InProxy2 , int32 InShapeIndex1, int32 InShapeIndex2, FReal InSolverTime) : Location(InLocation) , AccumulatedImpulse(InAccumulatedImpulse) , Normal(InNormal) , Velocity1(InVelocity1) , Velocity2(InVelocity2) , DeltaVelocity1(InDeltaVelocity1) , DeltaVelocity2(InDeltaVelocity2) , AngularVelocity1(InAngularVelocity1) , AngularVelocity2(InAngularVelocity2) , Mass1(InMass1) , Mass2(InMass2) , PenetrationDepth(InPenetrationDepth) , Mat1(FMaterialHandle()) , Mat2(FMaterialHandle()) , bProbe(false) , Proxy1(InProxy1) , Proxy2(InProxy2) , ShapeIndex1(InShapeIndex1) , ShapeIndex2(InShapeIndex2) , SolverTime(InSolverTime)"
  },
  {
    "label": "FCollidingDataExt()",
    "kind": "Method",
    "detail": "Function (} FVec3 Location ; FVec3 AccumulatedImpulse ; FVec3 Normal ; FVec3 Velocity1 ; FVec3 Velocity2 ; FVec3 DeltaVelocity1 ; FVec3 DeltaVelocity2 ; FVec3 AngularVelocity1 ; FVec3 AngularVelocity2 ; FReal Mass1 ; FReal Mass2 ; FReal PenetrationDepth ; FMaterialHandle Mat1 ; FMaterialHandle Mat2 ; bool bProbe ; IPhysicsProxyBase* Proxy1 ; IPhysicsProxyBase* Proxy2 ; int32 ShapeIndex1 ; int32 ShapeIndex2 ; FReal SolverTime ; } ; struct FCollidingDataExt {)",
    "insertText": "FCollidingDataExt() : Location(FVec3((FReal)0.0)) , AccumulatedImpulse(FVec3((FReal)0.0)) , Normal(FVec3((FReal)0.0)) , Velocity1(FVec3((FReal)0.0)) , Velocity2(FVec3((FReal)0.0)) , AngularVelocity1(FVec3((FReal)0.0)) , AngularVelocity2(FVec3((FReal)0.0)) , Mass1((FReal)0.0) , Mass2((FReal)0.0) , BoundingboxVolume((FReal)-1.0) , BoundingboxExtentMin((FReal)-1.0) , BoundingboxExtentMax((FReal)-1.0) , SurfaceType1(-1) , SurfaceType2(-1)"
  },
  {
    "label": "FCollidingDataExt()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FCollidingDataExt(FVec3 InLocation, FVec3 InAccumulatedImpulse, FVec3 InNormal, FVec3 InVelocity1, FVec3 InVelocity2 , FVec3 InAngularVelocity1, FVec3 InAngularVelocity2, FReal InMass1, FReal InMass2 , FReal InBoundingboxVolume, FReal InBoundingboxExtentMin, FReal InBoundingboxExtentMax, int32 InSurfaceType1, int32 InSurfaceType2) : Location(InLocation) , AccumulatedImpulse(InAccumulatedImpulse) , Normal(InNormal) , Velocity1(InVelocity1) , Velocity2(InVelocity2) , AngularVelocity1(InAngularVelocity1) , AngularVelocity2(InAngularVelocity2) , Mass1(InMass1) , Mass2(InMass2) , BoundingboxVolume(InBoundingboxVolume) , BoundingboxExtentMin(InBoundingboxExtentMin) , BoundingboxExtentMax(InBoundingboxExtentMax) , SurfaceType1(InSurfaceType1) , SurfaceType2(InSurfaceType2)"
  },
  {
    "label": "FCollidingDataExt()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FCollidingDataExt(const FCollidingData& InCollisionData) : Location(InCollisionData.Location) , AccumulatedImpulse(InCollisionData.AccumulatedImpulse) , Normal(InCollisionData.Normal) , Velocity1(InCollisionData.Velocity1) , Velocity2(InCollisionData.Velocity2) , AngularVelocity1(InCollisionData.AngularVelocity1) , AngularVelocity2(InCollisionData.AngularVelocity2) , Mass1(InCollisionData.Mass1) , Mass2(InCollisionData.Mass2) , BoundingboxVolume((FReal)-1.0) , BoundingboxExtentMin((FReal)-1.0) , BoundingboxExtentMax((FReal)-1.0) , SurfaceType1(-1) , SurfaceType2(-1)"
  },
  {
    "label": "FBreakingData()",
    "kind": "Method",
    "detail": "Function (} FVec3 Location ; FVec3 AccumulatedImpulse ; FVec3 Normal ; FVec3 Velocity1,Velocity2 ; FVec3 AngularVelocity1,AngularVelocity2 ; FReal Mass1,Mass2 ; FReal BoundingboxVolume ; FReal BoundingboxExtentMin,BoundingboxExtentMax ; int32 SurfaceType1,SurfaceType2 ; FName PhysicalMaterialName1,PhysicalMaterialName2 ; } ; struct FBreakingData : public FBaseEventFlag {)",
    "insertText": "FBreakingData() : FBaseEventFlag() , Proxy(nullptr) , Location(FVec3((FReal)0.0)) , Velocity(FVec3((FReal)0.0)) , AngularVelocity(FVec3((FReal)0.0)) , Mass((FReal)0.0) , BoundingBox(FAABB3(FVec3((FReal)0.0), FVec3((FReal)0.0))) , TransformGroupIndex(INDEX_NONE) , bFromCrumble(false)"
  },
  {
    "label": "FCrumblingData()",
    "kind": "Method",
    "detail": "Function (} IPhysicsProxyBase* Proxy ; FVec3 Location ; FVec3 Velocity ; FVec3 AngularVelocity ; FReal Mass ; Chaos::FAABB3 BoundingBox ; int32 TransformGroupIndex ; bool bFromCrumble ; } ; struct FCrumblingData : public FBaseEventFlag {)",
    "insertText": "FCrumblingData() : FBaseEventFlag() , Proxy(nullptr) , Location(FVec3::ZeroVector) , Orientation(FRotation3::Identity) , LinearVelocity(FVec3::ZeroVector) , AngularVelocity(FVec3::ZeroVector) , Mass((FReal)0.0) , LocalBounds(FAABB3(FVec3((FReal)0.0), FVec3((FReal)0.0)))"
  },
  {
    "label": "FBreakingDataExt()",
    "kind": "Method",
    "detail": "Function (} IPhysicsProxyBase* Proxy ; FVec3 Location ; FRotation3 Orientation ; FVec3 LinearVelocity ; FVec3 AngularVelocity ; FReal Mass ; FAABB3 LocalBounds ; TArray<int32> Children ; } ; struct FBreakingDataExt {)",
    "insertText": "FBreakingDataExt() : Location(FVec3((FReal)0.0)) , Velocity(FVec3((FReal)0.0)) , AngularVelocity(FVec3((FReal)0.0)) , Mass((FReal)0.0) , BoundingboxVolume((FReal)-1.0) , BoundingboxExtentMin((FReal)-1.0) , BoundingboxExtentMax((FReal)-1.0) , SurfaceType(-1)"
  },
  {
    "label": "FBreakingDataExt()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FBreakingDataExt(FVec3 InLocation , FVec3 InVelocity , FVec3 InAngularVelocity , FReal InMass , FGeometryParticleHandle* InParticle , FReal InBoundingboxVolume , FReal InBoundingboxExtentMin , FReal InBoundingboxExtentMax , int32 InSurfaceType) : Location(InLocation) , Velocity(InVelocity) , AngularVelocity(InAngularVelocity) , Mass(InMass) , BoundingboxVolume(InBoundingboxVolume) , BoundingboxExtentMin(InBoundingboxExtentMin) , BoundingboxExtentMax(InBoundingboxExtentMax) , SurfaceType(InSurfaceType)"
  },
  {
    "label": "FBreakingDataExt()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FBreakingDataExt(const FBreakingData& InBreakingData) : Location(InBreakingData.Location) , Velocity(InBreakingData.Velocity) , AngularVelocity(InBreakingData.AngularVelocity) , Mass(InBreakingData.Mass) , BoundingboxVolume((FReal)-1.0) , BoundingboxExtentMin((FReal)-1.0) , BoundingboxExtentMax((FReal)-1.0) , SurfaceType(-1)"
  },
  {
    "label": "FTrailingData()",
    "kind": "Method",
    "detail": "Function (} FVec3 Location ; FVec3 Velocity ; FVec3 AngularVelocity ; FReal Mass ; FReal BoundingboxVolume ; FReal BoundingboxExtentMin,BoundingboxExtentMax ; int32 SurfaceType ; FVector TransformTranslation ; FQuat TransformRotation ; FVector TransformScale ; FBox BoundingBox ; FName PhysicalMaterialName ; } ; struct FTrailingData {)",
    "insertText": "FTrailingData() : Location(FVec3((FReal)0.0)) , Velocity(FVec3((FReal)0.0)) , AngularVelocity(FVec3((FReal)0.0)) , Mass((FReal)0.0) , Proxy(nullptr) , BoundingBox(FAABB3(FVec3((FReal)0.0), FVec3((FReal)0.0)))"
  },
  {
    "label": "FTrailingData()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FTrailingData(FVec3 InLocation, FVec3 InVelocity, FVec3 InAngularVelocity, FReal InMass , IPhysicsProxyBase* InProxy, Chaos::TAABB<FReal, 3>& InBoundingBox) : Location(InLocation) , Velocity(InVelocity) , AngularVelocity(InAngularVelocity) , Mass(InMass) , Proxy(InProxy) , BoundingBox(InBoundingBox) , TransformGroupIndex(INDEX_NONE)"
  },
  {
    "label": "FTrailingDataExt()",
    "kind": "Method",
    "detail": "Function (} FVec3 Location ; FVec3 Velocity ; FVec3 AngularVelocity ; FReal Mass ; IPhysicsProxyBase* Proxy ; Chaos::FAABB3 BoundingBox ; int32 TransformGroupIndex ; } ; struct FTrailingDataExt {)",
    "insertText": "FTrailingDataExt() : Location(FVec3((FReal)0.0)) , Velocity(FVec3((FReal)0.0)) , AngularVelocity(FVec3((FReal)0.0)) , Mass((FReal)0.0) , BoundingboxVolume((FReal)-1.0) , BoundingboxExtentMin((FReal)-1.0) , BoundingboxExtentMax((FReal)-1.0) , SurfaceType(-1)"
  },
  {
    "label": "FTrailingDataExt()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FTrailingDataExt(FVec3 InLocation , FVec3 InVelocity , FVec3 InAngularVelocity , FReal InMass , FGeometryParticleHandle* InParticle , FReal InBoundingboxVolume , FReal InBoundingboxExtentMin , FReal InBoundingboxExtentMax , int32 InSurfaceType) : Location(InLocation) , Velocity(InVelocity) , AngularVelocity(InAngularVelocity) , Mass(InMass) , BoundingboxVolume(InBoundingboxVolume) , BoundingboxExtentMin(InBoundingboxExtentMin) , BoundingboxExtentMax(InBoundingboxExtentMax) , SurfaceType(InSurfaceType)"
  },
  {
    "label": "FTrailingDataExt()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FTrailingDataExt(const FTrailingData& InTrailingData) : Location(InTrailingData.Location) , Velocity(InTrailingData.Velocity) , AngularVelocity(InTrailingData.AngularVelocity) , Mass(InTrailingData.Mass) , BoundingboxVolume((FReal)-1.0) , BoundingboxExtentMin((FReal)-1.0) , BoundingboxExtentMax((FReal)-1.0) , SurfaceType(-1)"
  },
  {
    "label": "FSleepingData()",
    "kind": "Method",
    "detail": "Function (} FVec3 Location ; FVec3 Velocity ; FVec3 AngularVelocity ; FReal Mass ; FReal BoundingboxVolume ; FReal BoundingboxExtentMin,BoundingboxExtentMax ; int32 SurfaceType ; } ; struct FSleepingData {)",
    "insertText": "FSleepingData() : Proxy(nullptr) , Sleeping(true)"
  },
  {
    "label": "FSleepingData()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FSleepingData(IPhysicsProxyBase* InProxy, bool InSleeping) : Proxy(InProxy) , Sleeping(InSleeping)"
  },
  {
    "label": "FRemovalData()",
    "kind": "Method",
    "detail": "Function (} IPhysicsProxyBase* Proxy ; bool Sleeping ; } ; struct FRemovalData {)",
    "insertText": "FRemovalData() : Location(FVec3((FReal)0.0)) , Mass((FReal)0.0) , Proxy(nullptr) , BoundingBox(FAABB3(FVec3((FReal)0.0), FVec3((FReal)0.0)))"
  },
  {
    "label": "FRemovalData()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FRemovalData(FVec3 InLocation, FReal InMass, IPhysicsProxyBase* InProxy, Chaos::TAABB<FReal, 3>& InBoundingBox) : Location(InLocation) , Mass(InMass) , Proxy(InProxy) , BoundingBox(InBoundingBox)"
  },
  {
    "label": "FRemovalDataExt()",
    "kind": "Method",
    "detail": "Function (} FVec3 Location ; FReal Mass ; IPhysicsProxyBase* Proxy ; Chaos::FAABB3 BoundingBox ; } ; struct FRemovalDataExt {)",
    "insertText": "FRemovalDataExt() : Location(FVec3((FReal)0.0)) , Mass((FReal)0.0) , BoundingboxVolume((FReal)-1.0) , BoundingboxExtentMin((FReal)-1.0) , BoundingboxExtentMax((FReal)-1.0) , SurfaceType(-1)"
  },
  {
    "label": "FRemovalDataExt()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FRemovalDataExt(FVec3 InLocation , FReal InMass , FGeometryParticleHandle* InParticle , FReal InBoundingboxVolume , FReal InBoundingboxExtentMin , FReal InBoundingboxExtentMax , int32 InSurfaceType) : Location(InLocation) , Mass(InMass) , BoundingboxVolume(InBoundingboxVolume) , BoundingboxExtentMin(InBoundingboxExtentMin) , BoundingboxExtentMax(InBoundingboxExtentMax) , SurfaceType(InSurfaceType)"
  },
  {
    "label": "FRemovalDataExt()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FRemovalDataExt(const FRemovalData& InRemovalData) : Location(InRemovalData.Location) , Mass(InRemovalData.Mass) , BoundingboxVolume((FReal)-1.0) , BoundingboxExtentMin((FReal)-1.0) , BoundingboxExtentMax((FReal)-1.0) , SurfaceType(-1)"
  }
]