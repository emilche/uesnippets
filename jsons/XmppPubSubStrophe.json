[
  {
    "label": "FXmppConnectionStrophe",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FXmppConnectionStrophe"
  },
  {
    "label": "FStropheStanza",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStropheStanza"
  },
  {
    "label": "FXmppPubSubStrophe",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FXmppPubSubStrophe"
  },
  {
    "label": "FXmppPubSubStrophe()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" XmppPubSub . h \" # include \" Containers / Ticker . h \" # if WITH_XMPP_STROPHE class FXmppConnectionStrophe ; class FStropheStanza ; class FXmppPubSubStrophe : public IXmppPubSub,public FTSTickerObjectBase { public :)",
    "insertText": "FXmppPubSubStrophe(class FXmppConnectionStrophe& InConnectionManager)"
  },
  {
    "label": "FXmppPubSubStrophe()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FXmppPubSubStrophe()"
  },
  {
    "label": "ReceiveStanza()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ReceiveStanza(const FStropheStanza& IncomingStanza)"
  },
  {
    "label": "OnDisconnect()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDisconnect()"
  },
  {
    "label": "OnReconnect()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnReconnect()"
  },
  {
    "label": "CreateNode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CreateNode(const FXmppPubSubId& NodeId, const FXmppPubSubConfig& NodeConfig)"
  },
  {
    "label": "ConfigureNode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ConfigureNode(const FXmppPubSubId& NodeId, const FXmppPubSubConfig& NodeConfig)"
  },
  {
    "label": "DestroyNode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DestroyNode(const FXmppPubSubId& NodeId)"
  },
  {
    "label": "QueryNode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "QueryNode(const FXmppPubSubId& NodeId)"
  },
  {
    "label": "QuerySubscriptions()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "QuerySubscriptions()"
  },
  {
    "label": "Subscribe()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Subscribe(const FXmppPubSubId& NodeId)"
  },
  {
    "label": "Unsubscribe()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Unsubscribe(const FXmppPubSubId& NodeId)"
  },
  {
    "label": "PublishMessage()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PublishMessage(const FXmppPubSubId& NodeId, const FXmppPubSubMessage& Message)"
  },
  {
    "label": "GetOwnedNodes()",
    "kind": "Method",
    "detail": "Function (TArray<FXmppPubSubId>)",
    "insertText": "GetOwnedNodes()"
  },
  {
    "label": "GetSubscribedNodes()",
    "kind": "Method",
    "detail": "Function (TArray<FXmppPubSubId>)",
    "insertText": "GetSubscribedNodes()"
  },
  {
    "label": "GetNodeInfo()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FXmppPubSubNode>)",
    "insertText": "GetNodeInfo(const FXmppPubSubId& NodeId)"
  },
  {
    "label": "GetLastMessages()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetLastMessages(const FXmppPubSubId& NodeId, int32 NumMessages, TArray<TSharedRef<FXmppPubSubMessage>>& OutMessages)"
  },
  {
    "label": "OnCreateNodeComplete()",
    "kind": "Method",
    "detail": "Function (FOnXmppPubSubCreateNodeComplete&)",
    "insertText": "OnCreateNodeComplete()"
  }
]