[
  {
    "label": "FTopologicalEdge",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTopologicalEdge"
  },
  {
    "label": "FCuttingPoint",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCuttingPoint"
  },
  {
    "label": "FLinearBoundary",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLinearBoundary"
  },
  {
    "label": "FMesherTools",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMesherTools"
  },
  {
    "label": "ComputeFinalCuttingPointsWithPreferredCuttingPoints()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Core / Types . h \" # include \" Math / Boundary . h \" # include \" Mesh / MeshEnum . h \" namespace UE::CADKernel { class FTopologicalEdge ; struct FCuttingPoint ; struct FLinearBoundary ; class FMesherTools { public : void)",
    "insertText": "ComputeFinalCuttingPointsWithPreferredCuttingPoints(const TArray<double>& CrossingUs, TArray<double> DeltaUs, const TArray<FCuttingPoint>& PreferredCuttingPoints, const FLinearBoundary& Boundary, TArray<double>& OutCuttingPoints)"
  },
  {
    "label": "ComputeFinalCuttingPointsWithImposedCuttingPoints()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ComputeFinalCuttingPointsWithImposedCuttingPoints(const TArray<double>& CrossingUs, const TArray<double>& DeltaUs, const TArray<FCuttingPoint>& ImposedCuttingPoints, TArray<double>& OutCuttingPoints)"
  },
  {
    "label": "FillCuttingPointCoordinates()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FillCuttingPointCoordinates(const FLinearBoundary& Boundary, int32 PointCount, TArray<double>& OutCuttingPointCoordinates)"
  },
  {
    "label": "ensureCADKernel()",
    "kind": "Method",
    "detail": "Function (PointCount - - ;)",
    "insertText": "ensureCADKernel(PointCount > 0)"
  },
  {
    "label": "Empty()",
    "kind": "Method",
    "detail": "Function (OutCuttingPointCoordinates .)",
    "insertText": "Empty(PointCount)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (OutCuttingPointCoordinates .)",
    "insertText": "Add(Boundary.GetMin())"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (OutCuttingPointCoordinates .)",
    "insertText": "Add(OutCuttingPointCoordinates.Last() + Delta)"
  },
  {
    "label": "FillImposedIsoCuttingPoints()",
    "kind": "Method",
    "detail": "Function (} } void)",
    "insertText": "FillImposedIsoCuttingPoints(TArray<double>& UEdgeSetOfIntersectionWithIso, ECoordinateType CoordinateType, double EdgeToleranceGeo, const FTopologicalEdge& Edge, TArray<FCuttingPoint>& OutImposedIsoVertexSet)"
  }
]