[
  {
    "label": "BASE_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BASE_EXPORT"
  },
  {
    "label": "WillProcessTask()",
    "kind": "Method",
    "detail": "Function (# ifndef BASE_TASK_TASK_OBSERVER_H_ # define BASE_TASK_TASK_OBSERVER_H_ # include \" base / base_export . h \" # include \" base / pending_task . h \" namespace base { class BASE_EXPORT TaskObserver { public : void)",
    "insertText": "WillProcessTask(const PendingTask& pending_task, bool was_blocked_or_low_priority)"
  },
  {
    "label": "DidProcessTask()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DidProcessTask(const PendingTask& pending_task)"
  },
  {
    "label": "TaskObserver()",
    "kind": "Method",
    "detail": "Function (protected : ~)",
    "insertText": "TaskObserver()"
  }
]