[
  {
    "label": "FLocKey",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLocKey"
  },
  {
    "label": "FLocKeySetFuncs",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLocKeySetFuncs"
  },
  {
    "label": "FLocKeyMapFuncs",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLocKeyMapFuncs"
  },
  {
    "label": "FLocKeyMultiMapFuncs",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLocKeyMultiMapFuncs"
  },
  {
    "label": "FLocKeySortedMapLess",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLocKeySortedMapLess"
  },
  {
    "label": "FLocKey()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" Containers / Set . h \" # include \" Containers / Map . h \" class FLocKey { public :)",
    "insertText": "FLocKey() : Str() , Hash(0)"
  },
  {
    "label": "FLocKey()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FLocKey(const TCHAR* InStr) : Str(InStr) , Hash(ProduceHash(Str))"
  },
  {
    "label": "FLocKey()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FLocKey(const FString& InStr) : Str(InStr) , Hash(ProduceHash(Str))"
  },
  {
    "label": "FLocKey()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FLocKey(FString&& InStr) : Str(MoveTemp(InStr)) , Hash(ProduceHash(Str))"
  },
  {
    "label": "FLocKey()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FLocKey(const FLocKey& InOther) : Str(InOther.Str) , Hash(InOther.Hash)"
  },
  {
    "label": "FLocKey()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FLocKey(FLocKey&& InOther) : Str(MoveTemp(InOther.Str)) , Hash(InOther.Hash)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (InOther . Hash = 0 ; } FLocKey&)",
    "insertText": "operator(const FLocKey& InOther)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (Str = InOther . Str ; Hash = InOther . Hash ; } return* this ; } FLocKey&)",
    "insertText": "operator(FLocKey&& InOther)"
  },
  {
    "label": "MoveTemp()",
    "kind": "Method",
    "detail": "Function (Str =)",
    "insertText": "MoveTemp(InOther.Str)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (Hash = InOther . Hash ; InOther . Hash = 0 ; } return* this ; } bool)",
    "insertText": "operator(const FLocKey& Other)"
  },
  {
    "label": "GetTypeHash()",
    "kind": "Method",
    "detail": "Function (} uint32)",
    "insertText": "GetTypeHash(const FLocKey& Id)"
  },
  {
    "label": "Equals()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "Equals(const FLocKey& Other)"
  },
  {
    "label": "GetString()",
    "kind": "Method",
    "detail": "Function (} const FString&)",
    "insertText": "GetString()"
  },
  {
    "label": "GetSetKey()",
    "kind": "Method",
    "detail": "Function (} private : FString Str ; uint32 Hash ; } ; struct FLocKeySetFuncs : BaseKeyFuncs<FString,FString> { const FString&)",
    "insertText": "GetSetKey(const FString& Element)"
  },
  {
    "label": "GetKeyHash()",
    "kind": "Method",
    "detail": "Function (} uint32)",
    "insertText": "GetKeyHash(const FString& Key)"
  },
  {
    "label": "GetSetKey()",
    "kind": "Method",
    "detail": "Function (} } ; template<ValueType> struct FLocKeyMapFuncs : BaseKeyFuncs<ValueType,FString,false> { const FString&)",
    "insertText": "GetSetKey(const TPair<FString, ValueType>& Element)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} } ; struct FLocKeySortedMapLess { bool)",
    "insertText": "operator()(const FString& A, const FString& B)"
  }
]