[
  {
    "label": "AMF_AUDIO_FORMAT",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "AMF_AUDIO_FORMAT"
  },
  {
    "label": "AMFAudioBuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AMFAudioBuffer"
  },
  {
    "label": "AMF_NO_VTABLE",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AMF_NO_VTABLE"
  },
  {
    "label": "AMFAudioBufferObserver",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "AMFAudioBufferObserver"
  },
  {
    "label": "AMFAudioBufferObserverVtbl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "AMFAudioBufferObserverVtbl"
  },
  {
    "label": "AMFAudioBufferVtbl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "AMFAudioBufferVtbl"
  },
  {
    "label": "AMF_RESULT",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "AMF_RESULT"
  },
  {
    "label": "AMFGuid",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "AMFGuid"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# ifndef AMF_AudioBuffer_h # define AMF_AudioBuffer_h # pragma once # include \" Data . h \" # if)",
    "insertText": "defined(_MSC_VER) #pragma warning( push ) #pragma warning(disable : 4263) #pragma warning(disable : 4264) #endif #if defined(__cplusplus)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# endif typedef enum AMF_AUDIO_FORMAT { AMFAF_UNKNOWN = - 1,AMFAF_U8 = 0,AMFAF_S16 = 1,AMFAF_S32 = 2,AMFAF_FLT = 3,AMFAF_DBL = 4,AMFAF_U8P = 5,AMFAF_S16P = 6,AMFAF_S32P = 7,AMFAF_FLTP = 8,AMFAF_DBLP = 9,AMFAF_FIRST = AMFAF_U8,AMFAF_LAST = AMFAF_DBLP,} AMF_AUDIO_FORMAT ; # if)",
    "insertText": "defined(__cplusplus)"
  },
  {
    "label": "OnBufferDataRelease()",
    "kind": "Method",
    "detail": "Function (class AMF_NO_VTABLE AMFAudioBufferObserver { public : void AMF_STD_CALL)",
    "insertText": "OnBufferDataRelease(AMFAudioBuffer* pBuffer)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (} ; # else typedef struct AMFAudioBuffer AMFAudioBuffer ; typedef struct AMFAudioBufferObserver AMFAudioBufferObserver ; typedef struct AMFAudioBufferObserverVtbl {)",
    "insertText": "void(AMF_STD_CALL *OnBufferDataRelease)(AMFAudioBufferObserver* pThis, AMFAudioBuffer* pBuffer)"
  },
  {
    "label": "AMF_DECLARE_IID()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "AMF_DECLARE_IID(0x2212ff8, 0x6107, 0x430b, 0xb6, 0x3c, 0xc7, 0xe5, 0x40, 0xe5, 0xf8, 0xeb) virtual amf_int32 AMF_STD_CALL GetSampleCount()"
  },
  {
    "label": "GetSampleRate()",
    "kind": "Method",
    "detail": "Function (amf_int32 AMF_STD_CALL)",
    "insertText": "GetSampleRate()"
  },
  {
    "label": "GetChannelCount()",
    "kind": "Method",
    "detail": "Function (amf_int32 AMF_STD_CALL)",
    "insertText": "GetChannelCount()"
  },
  {
    "label": "GetSampleFormat()",
    "kind": "Method",
    "detail": "Function (AMF_AUDIO_FORMAT AMF_STD_CALL)",
    "insertText": "GetSampleFormat()"
  },
  {
    "label": "GetSampleSize()",
    "kind": "Method",
    "detail": "Function (amf_int32 AMF_STD_CALL)",
    "insertText": "GetSampleSize()"
  },
  {
    "label": "GetChannelLayout()",
    "kind": "Method",
    "detail": "Function (amf_uint32 AMF_STD_CALL)",
    "insertText": "GetChannelLayout()"
  },
  {
    "label": "GetNative()",
    "kind": "Method",
    "detail": "Function (void* AMF_STD_CALL)",
    "insertText": "GetNative()"
  },
  {
    "label": "GetSize()",
    "kind": "Method",
    "detail": "Function (amf_size AMF_STD_CALL)",
    "insertText": "GetSize()"
  },
  {
    "label": "AddObserver()",
    "kind": "Method",
    "detail": "Function (void AMF_STD_CALL)",
    "insertText": "AddObserver(AMFAudioBufferObserver* pObserver)"
  },
  {
    "label": "RemoveObserver()",
    "kind": "Method",
    "detail": "Function (void AMF_STD_CALL)",
    "insertText": "RemoveObserver(AMFAudioBufferObserver* pObserver)"
  },
  {
    "label": "AMF_DECLARE_IID()",
    "kind": "Method",
    "detail": "Function (} ; typedef AMFInterfacePtr_T<AMFAudioBuffer> AMFAudioBufferPtr ; # else)",
    "insertText": "AMF_DECLARE_IID(AMFAudioBuffer, 0x2212ff8, 0x6107, 0x430b, 0xb6, 0x3c, 0xc7, 0xe5, 0x40, 0xe5, 0xf8, 0xeb)"
  },
  {
    "label": "amf_long()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "amf_long(AMF_STD_CALL *Acquire)(AMFAudioBuffer* pThis)"
  },
  {
    "label": "amf_long()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "amf_long(AMF_STD_CALL *Release)(AMFAudioBuffer* pThis)"
  },
  {
    "label": "AMF_RESULT()",
    "kind": "Method",
    "detail": "Function (enum)",
    "insertText": "AMF_RESULT(AMF_STD_CALL *QueryInterface)(AMFAudioBuffer* pThis, const struct AMFGuid *interfaceID, void** ppInterface)"
  },
  {
    "label": "AMF_RESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AMF_RESULT(AMF_STD_CALL *SetProperty)(AMFAudioBuffer* pThis, const wchar_t* name, AMFVariantStruct value)"
  },
  {
    "label": "AMF_RESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AMF_RESULT(AMF_STD_CALL *GetProperty)(AMFAudioBuffer* pThis, const wchar_t* name, AMFVariantStruct* pValue)"
  },
  {
    "label": "amf_bool()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "amf_bool(AMF_STD_CALL *HasProperty)(AMFAudioBuffer* pThis, const wchar_t* name)"
  },
  {
    "label": "amf_size()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "amf_size(AMF_STD_CALL *GetPropertyCount)(AMFAudioBuffer* pThis)"
  },
  {
    "label": "AMF_RESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AMF_RESULT(AMF_STD_CALL *GetPropertyAt)(AMFAudioBuffer* pThis, amf_size index, wchar_t* name, amf_size nameSize, AMFVariantStruct* pValue)"
  },
  {
    "label": "AMF_RESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AMF_RESULT(AMF_STD_CALL *Clear)(AMFAudioBuffer* pThis)"
  },
  {
    "label": "AMF_RESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AMF_RESULT(AMF_STD_CALL *AddTo)(AMFAudioBuffer* pThis, AMFPropertyStorage* pDest, amf_bool overwrite, amf_bool deep)"
  },
  {
    "label": "AMF_RESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AMF_RESULT(AMF_STD_CALL *CopyTo)(AMFAudioBuffer* pThis, AMFPropertyStorage* pDest, amf_bool deep)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(AMF_STD_CALL *AddObserver)(AMFAudioBuffer* pThis, AMFPropertyStorageObserver* pObserver)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(AMF_STD_CALL *RemoveObserver)(AMFAudioBuffer* pThis, AMFPropertyStorageObserver* pObserver)"
  },
  {
    "label": "AMF_MEMORY_TYPE()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AMF_MEMORY_TYPE(AMF_STD_CALL *GetMemoryType)(AMFAudioBuffer* pThis)"
  },
  {
    "label": "AMF_RESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AMF_RESULT(AMF_STD_CALL *Duplicate)(AMFAudioBuffer* pThis, AMF_MEMORY_TYPE type, AMFData** ppData)"
  },
  {
    "label": "AMF_RESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AMF_RESULT(AMF_STD_CALL *Convert)(AMFAudioBuffer* pThis, AMF_MEMORY_TYPE type)"
  },
  {
    "label": "AMF_RESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AMF_RESULT(AMF_STD_CALL *Interop)(AMFAudioBuffer* pThis, AMF_MEMORY_TYPE type)"
  },
  {
    "label": "AMF_DATA_TYPE()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AMF_DATA_TYPE(AMF_STD_CALL *GetDataType)(AMFAudioBuffer* pThis)"
  },
  {
    "label": "amf_bool()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "amf_bool(AMF_STD_CALL *IsReusable)(AMFAudioBuffer* pThis)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(AMF_STD_CALL *SetPts)(AMFAudioBuffer* pThis, amf_pts pts)"
  },
  {
    "label": "amf_pts()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "amf_pts(AMF_STD_CALL *GetPts)(AMFAudioBuffer* pThis)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(AMF_STD_CALL *SetDuration)(AMFAudioBuffer* pThis, amf_pts duration)"
  },
  {
    "label": "amf_pts()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "amf_pts(AMF_STD_CALL *GetDuration)(AMFAudioBuffer* pThis)"
  },
  {
    "label": "amf_int32()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "amf_int32(AMF_STD_CALL *GetSampleCount)(AMFAudioBuffer* pThis)"
  },
  {
    "label": "amf_int32()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "amf_int32(AMF_STD_CALL *GetSampleRate)(AMFAudioBuffer* pThis)"
  },
  {
    "label": "amf_int32()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "amf_int32(AMF_STD_CALL *GetChannelCount)(AMFAudioBuffer* pThis)"
  },
  {
    "label": "AMF_AUDIO_FORMAT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AMF_AUDIO_FORMAT(AMF_STD_CALL *GetSampleFormat)(AMFAudioBuffer* pThis)"
  },
  {
    "label": "amf_int32()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "amf_int32(AMF_STD_CALL *GetSampleSize)(AMFAudioBuffer* pThis)"
  },
  {
    "label": "amf_uint32()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "amf_uint32(AMF_STD_CALL *GetChannelLayout)(AMFAudioBuffer* pThis)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(AMF_STD_CALL *GetNative)(AMFAudioBuffer* pThis)"
  },
  {
    "label": "amf_size()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "amf_size(AMF_STD_CALL *GetSize)(AMFAudioBuffer* pThis)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(AMF_STD_CALL *AddObserver_AudioBuffer)(AMFAudioBuffer* pThis, AMFAudioBufferObserver* pObserver)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(AMF_STD_CALL *RemoveObserver_AudioBuffer)(AMFAudioBuffer* pThis, AMFAudioBufferObserver* pObserver)"
  }
]