[
  {
    "label": "ManagedObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ManagedObject"
  },
  {
    "label": "ResidencySet",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ResidencySet"
  },
  {
    "label": "ResidencyManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ResidencyManager"
  },
  {
    "label": "IDXGIAdapter3",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDXGIAdapter3"
  },
  {
    "label": "FD3D12ResidencyHandle",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FD3D12ResidencyHandle"
  },
  {
    "label": "FD3D12GPUObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FD3D12GPUObject"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" D3D12RHI . h \" # if !)",
    "insertText": "defined(D3D12_PLATFORM_NEEDS_RESIDENCY_MANAGEMENT) #define D3D12_PLATFORM_NEEDS_RESIDENCY_MANAGEMENT 1 #endif #if !(D3D12_PLATFORM_NEEDS_RESIDENCY_MANAGEMENT) static_assert(ENABLE_RESIDENCY_MANAGEMENT == 0, \"This platform doesn't need memory residency management. Please disable it.\")"
  },
  {
    "label": "warning()",
    "kind": "Method",
    "detail": "Function (namespace D3DX12Residency { class ManagedObject { } ; class ResidencySet { } ; class ResidencyManager { } ; class IDXGIAdapter3 ; } # else # include \" D3D12Util . h \" # include \" Windows / AllowWindowsPlatformTypes . h \" # include \" Windows / AllowWindowsPlatformAtomics . h \" THIRD_PARTY_INCLUDES_START # pragma)",
    "insertText": "warning(push) #pragma warning(disable: 6031) #include <D3DX12Residency.h> #pragma warning(pop)"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (# endif struct FD3D12ResidencyHandle : public D3DX12Residency::ManagedObject { # if DO_CHECK class FD3D12GPUObject* GPUObject = nullptr ; # endif } ; namespace D3DX12Residency { # if ENABLE_RESIDENCY_MANAGEMENT void)",
    "insertText": "Initialize(FD3D12ResidencyHandle& Object, ID3D12Pageable* pResource, uint64 ObjectSize, class FD3D12GPUObject* GPUObject)"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (# if DO_CHECK Object . GPUObject = GPUObject ; # endif Object .)",
    "insertText": "Initialize(pResource, ObjectSize)"
  },
  {
    "label": "IsInitialized()",
    "kind": "Method",
    "detail": "Function (} } # endif bool)",
    "insertText": "IsInitialized(FD3D12ResidencyHandle& Object)"
  },
  {
    "label": "IsInitialized()",
    "kind": "Method",
    "detail": "Function (# if ENABLE_RESIDENCY_MANAGEMENT return GEnableResidencyManagement&& Object .)",
    "insertText": "IsInitialized()"
  },
  {
    "label": "IsInitialized()",
    "kind": "Method",
    "detail": "Function (# else return false ; # endif } bool)",
    "insertText": "IsInitialized(FD3D12ResidencyHandle* pObject)"
  },
  {
    "label": "IsInitialized()",
    "kind": "Method",
    "detail": "Function (# if ENABLE_RESIDENCY_MANAGEMENT return GEnableResidencyManagement&& pObject&&)",
    "insertText": "IsInitialized(*pObject)"
  },
  {
    "label": "BeginTrackingObject()",
    "kind": "Method",
    "detail": "Function (# else return false ; # endif } void)",
    "insertText": "BeginTrackingObject(ResidencyManager& ResidencyManager, FD3D12ResidencyHandle& Object)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (# if ENABLE_RESIDENCY_MANAGEMENT)",
    "insertText": "if(GEnableResidencyManagement)"
  },
  {
    "label": "BeginTrackingObject()",
    "kind": "Method",
    "detail": "Function (ResidencyManager .)",
    "insertText": "BeginTrackingObject(&Object)"
  },
  {
    "label": "EndTrackingObject()",
    "kind": "Method",
    "detail": "Function (} # endif } void)",
    "insertText": "EndTrackingObject(ResidencyManager& ResidencyManager, FD3D12ResidencyHandle& Object)"
  },
  {
    "label": "EndTrackingObject()",
    "kind": "Method",
    "detail": "Function (ResidencyManager .)",
    "insertText": "EndTrackingObject(&Object)"
  },
  {
    "label": "InitializeResidencyManager()",
    "kind": "Method",
    "detail": "Function (} # endif } # if ENABLE_RESIDENCY_MANAGEMENT void)",
    "insertText": "InitializeResidencyManager(ResidencyManager& ResidencyManager, ID3D12Device* Device, uint32 GPUIndex, IDXGIAdapter3* Adapter, uint32 MaxLatency)"
  },
  {
    "label": "DestroyResidencyManager()",
    "kind": "Method",
    "detail": "Function (} } # endif void)",
    "insertText": "DestroyResidencyManager(ResidencyManager& ResidencyManager)"
  },
  {
    "label": "Destroy()",
    "kind": "Method",
    "detail": "Function (ResidencyManager .)",
    "insertText": "Destroy()"
  },
  {
    "label": "CreateResidencySet()",
    "kind": "Method",
    "detail": "Function (} # endif } ResidencySet*)",
    "insertText": "CreateResidencySet(ResidencyManager& ResidencyManager)"
  },
  {
    "label": "CreateResidencySet()",
    "kind": "Method",
    "detail": "Function (# if ENABLE_RESIDENCY_MANAGEMENT return GEnableResidencyManagement ? ResidencyManager .)",
    "insertText": "CreateResidencySet()"
  },
  {
    "label": "DestroyResidencySet()",
    "kind": "Method",
    "detail": "Function (# else return nullptr ; # endif } void)",
    "insertText": "DestroyResidencySet(ResidencyManager& ResidencyManager, ResidencySet* pSet)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (# if ENABLE_RESIDENCY_MANAGEMENT)",
    "insertText": "if(GEnableResidencyManagement && pSet)"
  },
  {
    "label": "DestroyResidencySet()",
    "kind": "Method",
    "detail": "Function (ResidencyManager .)",
    "insertText": "DestroyResidencySet(pSet)"
  },
  {
    "label": "Open()",
    "kind": "Method",
    "detail": "Function (} # endif } void)",
    "insertText": "Open(ResidencySet* pSet)"
  },
  {
    "label": "Close()",
    "kind": "Method",
    "detail": "Function (} # endif } void)",
    "insertText": "Close(ResidencySet* pSet)"
  },
  {
    "label": "Insert()",
    "kind": "Method",
    "detail": "Function (} # endif } void)",
    "insertText": "Insert(ResidencySet& Set, FD3D12ResidencyHandle& Object)"
  },
  {
    "label": "Insert()",
    "kind": "Method",
    "detail": "Function (Set .)",
    "insertText": "Insert(&Object)"
  },
  {
    "label": "Insert()",
    "kind": "Method",
    "detail": "Function (} # endif } void)",
    "insertText": "Insert(ResidencySet& Set, FD3D12ResidencyHandle* pObject)"
  },
  {
    "label": "Insert()",
    "kind": "Method",
    "detail": "Function (Set .)",
    "insertText": "Insert(pObject)"
  }
]