[
  {
    "label": "VideoCaptureCapabilityWindows",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VideoCaptureCapabilityWindows"
  },
  {
    "label": "DeviceInfoDS",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DeviceInfoDS"
  },
  {
    "label": "VideoCaptureCapabilityWindows()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_VIDEO_CAPTURE_MAIN_SOURCE_WINDOWS_DEVICE_INFO_DS_H_ # define MODULES_VIDEO_CAPTURE_MAIN_SOURCE_WINDOWS_DEVICE_INFO_DS_H_ # include<dshow . h> # include \" modules / video_capture / device_info_impl . h \" # include \" modules / video_capture / video_capture_impl . h \" namespace webrtc { namespace videocapturemodule { struct VideoCaptureCapabilityWindows : public VideoCaptureCapability { uint32_t directShowCapabilityIndex ; bool supportFrameRateControl ;)",
    "insertText": "VideoCaptureCapabilityWindows()"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (directShowCapabilityIndex = 0 ; supportFrameRateControl = false ; } } ; class DeviceInfoDS : public DeviceInfoImpl { public : DeviceInfoDS*)",
    "insertText": "Create()"
  },
  {
    "label": "DeviceInfoDS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeviceInfoDS()"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "Init()"
  },
  {
    "label": "NumberOfDevices()",
    "kind": "Method",
    "detail": "Function (uint32_t)",
    "insertText": "NumberOfDevices()"
  },
  {
    "label": "GetDeviceName()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "GetDeviceName(uint32_t deviceNumber, char* deviceNameUTF8, uint32_t deviceNameLength, char* deviceUniqueIdUTF8, uint32_t deviceUniqueIdUTF8Length, char* productUniqueIdUTF8, uint32_t productUniqueIdUTF8Length)"
  },
  {
    "label": "DisplayCaptureSettingsDialogBox()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "DisplayCaptureSettingsDialogBox(const char* deviceUniqueIdUTF8, const char* dialogTitleUTF8, void* parentWindow, uint32_t positionX, uint32_t positionY)"
  },
  {
    "label": "GetDeviceFilter()",
    "kind": "Method",
    "detail": "Function (IBaseFilter*)",
    "insertText": "GetDeviceFilter(const char* deviceUniqueIdUTF8, char* productUniqueIdUTF8 = NULL, uint32_t productUniqueIdUTF8Length = 0)"
  },
  {
    "label": "GetWindowsCapability()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "GetWindowsCapability(int32_t capabilityIndex, VideoCaptureCapabilityWindows& windowsCapability)"
  },
  {
    "label": "GetProductId()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetProductId(const char* devicePath, char* productUniqueIdUTF8, uint32_t productUniqueIdUTF8Length)"
  },
  {
    "label": "GetDeviceInfo()",
    "kind": "Method",
    "detail": "Function (protected : int32_t)",
    "insertText": "GetDeviceInfo(uint32_t deviceNumber, char* deviceNameUTF8, uint32_t deviceNameLength, char* deviceUniqueIdUTF8, uint32_t deviceUniqueIdUTF8Length, char* productUniqueIdUTF8, uint32_t productUniqueIdUTF8Length)"
  },
  {
    "label": "CreateCapabilityMap()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "CreateCapabilityMap(const char* deviceUniqueIdUTF8) override RTC_EXCLUSIVE_LOCKS_REQUIRED(_apiLock)"
  }
]