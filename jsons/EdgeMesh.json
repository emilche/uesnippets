[
  {
    "label": "CADKERNEL_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CADKERNEL_API"
  },
  {
    "label": "FEdgeMesh()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Mesh / Structure / Mesh . h \" namespace UE::CADKernel { class FEdgeMesh : public FMesh { public : TArray<int32> EdgeVerticesIndex ;)",
    "insertText": "FEdgeMesh(FModelMesh& Model, FTopologicalEntity& TopologicalEntity) : FMesh(Model, TopologicalEntity)"
  },
  {
    "label": "Mesh()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Mesh(int32 StartVertexNodeIndex, int32 EndVertexNodeIndex)"
  },
  {
    "label": "Reserve()",
    "kind": "Method",
    "detail": "Function (EdgeVerticesIndex .)",
    "insertText": "Reserve(NodeCoordinates.Num() + 2)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (EdgeVerticesIndex .)",
    "insertText": "Add(StartVertexNodeIndex)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (EdgeVerticesIndex .)",
    "insertText": "Add(Index)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (} EdgeVerticesIndex .)",
    "insertText": "Add(EndVertexNodeIndex)"
  },
  {
    "label": "GetNodeCount()",
    "kind": "Method",
    "detail": "Function (} int32)",
    "insertText": "GetNodeCount()"
  },
  {
    "label": "GetElementLengths()",
    "kind": "Method",
    "detail": "Function (} TArray<double>)",
    "insertText": "GetElementLengths()"
  }
]