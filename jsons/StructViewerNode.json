[
  {
    "label": "IPropertyHandle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPropertyHandle"
  },
  {
    "label": "UScriptStruct",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UScriptStruct"
  },
  {
    "label": "UUserDefinedStruct",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UUserDefinedStruct"
  },
  {
    "label": "FAssetData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAssetData"
  },
  {
    "label": "FStructViewerNodeData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStructViewerNodeData"
  },
  {
    "label": "asset",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "asset"
  },
  {
    "label": "we",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "we"
  },
  {
    "label": "we",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "we"
  },
  {
    "label": "we",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "we"
  },
  {
    "label": "we",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "we"
  },
  {
    "label": "that",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "that"
  },
  {
    "label": "assets",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "assets"
  },
  {
    "label": "asset",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "asset"
  },
  {
    "label": "assets",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "assets"
  },
  {
    "label": "we",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "we"
  },
  {
    "label": "was",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "was"
  },
  {
    "label": "doesn",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "doesn"
  },
  {
    "label": "path",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "path"
  },
  {
    "label": "we",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "we"
  },
  {
    "label": "we",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "we"
  },
  {
    "label": "we",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "we"
  },
  {
    "label": "we",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "we"
  },
  {
    "label": "that",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "that"
  },
  {
    "label": "assets",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "assets"
  },
  {
    "label": "FStructViewerNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStructViewerNode"
  },
  {
    "label": "we",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "we"
  },
  {
    "label": "we",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "we"
  },
  {
    "label": "we",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "we"
  },
  {
    "label": "we",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "we"
  },
  {
    "label": "we",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "we"
  },
  {
    "label": "that",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "that"
  },
  {
    "label": "assets",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "assets"
  },
  {
    "label": "asset",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "asset"
  },
  {
    "label": "assets",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "assets"
  },
  {
    "label": "we",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "we"
  },
  {
    "label": "was",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "was"
  },
  {
    "label": "doesn",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "doesn"
  },
  {
    "label": "name",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "name"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "is"
  },
  {
    "label": "passed",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "passed"
  },
  {
    "label": "passed",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "passed"
  },
  {
    "label": "passed",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "passed"
  },
  {
    "label": "FStructViewerNodeData()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "FStructViewerNodeData(const UScriptStruct* InStruct)"
  },
  {
    "label": "FStructViewerNodeData()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "FStructViewerNodeData(const FAssetData& InStructAsset)"
  },
  {
    "label": "AddChild()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddChild(const TSharedRef<FStructViewerNodeData>& InChild)"
  },
  {
    "label": "AddUniqueChild()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddUniqueChild(const TSharedRef<FStructViewerNodeData>& InChild)"
  },
  {
    "label": "RemoveChild()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RemoveChild(const FSoftObjectPath& InStructPath)"
  },
  {
    "label": "AddChild()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddChild(const TSharedRef<FStructViewerNode>& InChild)"
  },
  {
    "label": "AddUniqueChild()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddUniqueChild(const TSharedRef<FStructViewerNode>& InChild)"
  },
  {
    "label": "SortChildren()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SortChildren()"
  },
  {
    "label": "SortChildrenRecursive()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SortChildrenRecursive()"
  },
  {
    "label": "SortPredicate()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SortPredicate(const TSharedPtr<FStructViewerNode>& InA, const TSharedPtr<FStructViewerNode>& InB)"
  }
]