[
  {
    "label": "FString",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FString"
  },
  {
    "label": "FNamePermissionList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNamePermissionList"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FPathPermissionList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPathPermissionList"
  },
  {
    "label": "FNamePermissionList()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" Containers / DirectoryTree . h \" # include \" Containers / Map . h \" # include \" Containers / StringFwd . h \" # include \" Containers / StringView . h \" # include \" CoreTypes . h \" # include \" Delegates / Delegate . h \" # include \" HAL / PlatformCrt . h \" # include \" Templates / SharedPointer . h \" # include \" UObject / NameTypes . h \" class FString ; typedef TArray<FName> FPermissionListOwners ; class FNamePermissionList : public TSharedFromThis<FNamePermissionList> { public :)",
    "insertText": "FNamePermissionList()"
  },
  {
    "label": "PassesFilter()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "PassesFilter(const FName Item)"
  },
  {
    "label": "AddDenyListItem()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AddDenyListItem(const FName OwnerName, const FName Item)"
  },
  {
    "label": "AddAllowListItem()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AddAllowListItem(const FName OwnerName, const FName Item)"
  },
  {
    "label": "RemoveDenyListItem()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RemoveDenyListItem(const FName OwnerName, const FName Item)"
  },
  {
    "label": "RemoveAllowListItem()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RemoveAllowListItem(const FName OwnerName, const FName Item)"
  },
  {
    "label": "AddDenyListAll()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AddDenyListAll(const FName OwnerName)"
  },
  {
    "label": "HasFiltering()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasFiltering()"
  },
  {
    "label": "GetOwnerNames()",
    "kind": "Method",
    "detail": "Function (TArray<FName>)",
    "insertText": "GetOwnerNames()"
  },
  {
    "label": "UnregisterOwner()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UnregisterOwner(const FName OwnerName)"
  },
  {
    "label": "UnregisterOwners()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UnregisterOwners(const TArray<FName>& OwnerNames)"
  },
  {
    "label": "Append()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Append(const FNamePermissionList& Other)"
  },
  {
    "label": "UnregisterOwnersAndAppend()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UnregisterOwnersAndAppend(const TArray<FName>& OwnerNamesToRemove, const FNamePermissionList& FiltersToAdd)"
  },
  {
    "label": "GetDenyList()",
    "kind": "Method",
    "detail": "Function (const TMap<FName,FPermissionListOwners>&)",
    "insertText": "GetDenyList()"
  },
  {
    "label": "OnFilterChanged()",
    "kind": "Method",
    "detail": "Function (} FSimpleMulticastDelegate&)",
    "insertText": "OnFilterChanged()"
  },
  {
    "label": "FPathPermissionList()",
    "kind": "Method",
    "detail": "Function (PRAGMA_DISABLE_DEPRECATION_WARNINGS ~)",
    "insertText": "FPathPermissionList()"
  },
  {
    "label": "FPathPermissionList()",
    "kind": "Method",
    "detail": "Function (} PRAGMA_ENABLE_DEPRECATION_WARNINGS)",
    "insertText": "FPathPermissionList(const FPathPermissionList&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FPathPermissionList&)",
    "insertText": "operator(const FPathPermissionList&)"
  },
  {
    "label": "FPathPermissionList()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FPathPermissionList(FPathPermissionList&&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FPathPermissionList&)",
    "insertText": "operator(FPathPermissionList&&)"
  },
  {
    "label": "PassesFilter()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PassesFilter(const FStringView Item)"
  },
  {
    "label": "PassesFilter()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PassesFilter(const TCHAR* Item)"
  },
  {
    "label": "PassesStartsWithFilter()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PassesStartsWithFilter(const FStringView Item, const bool bAllowParentPaths = false)"
  },
  {
    "label": "PassesStartsWithFilter()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PassesStartsWithFilter(const FName Item, const bool bAllowParentPaths = false)"
  },
  {
    "label": "PassesStartsWithFilter()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PassesStartsWithFilter(const TCHAR* Item, const bool bAllowParentPaths = false)"
  },
  {
    "label": "PassesStartsWithFilterRecursive()",
    "kind": "Method",
    "detail": "Function (EPathPermissionPrefixResult)",
    "insertText": "PassesStartsWithFilterRecursive(const FStringView Item, const bool bAllowParentPaths = false)"
  },
  {
    "label": "AddDenyListItem()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AddDenyListItem(const FName OwnerName, const FStringView Item)"
  },
  {
    "label": "AddDenyListItem()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AddDenyListItem(const FName OwnerName, const TCHAR* Item)"
  },
  {
    "label": "ContainsDenyListItem()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ContainsDenyListItem(FStringView Item)"
  },
  {
    "label": "HasDenyListEntries()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasDenyListEntries()"
  },
  {
    "label": "GetDenyListEntries()",
    "kind": "Method",
    "detail": "Function (TArray<FString>)",
    "insertText": "GetDenyListEntries()"
  },
  {
    "label": "RemoveDenyListItem()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RemoveDenyListItem(const FName OwnerName, const FStringView Item)"
  },
  {
    "label": "RemoveDenyListItem()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RemoveDenyListItem(const FName OwnerName, const TCHAR* Item)"
  },
  {
    "label": "RemoveDenyListItemAndGetOwners()",
    "kind": "Method",
    "detail": "Function (FPermissionListOwners)",
    "insertText": "RemoveDenyListItemAndGetOwners(FStringView Item)"
  },
  {
    "label": "AddAllowListItem()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AddAllowListItem(const FName OwnerName, const FStringView Item)"
  },
  {
    "label": "AddAllowListItem()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AddAllowListItem(const FName OwnerName, const TCHAR* Item)"
  },
  {
    "label": "HasAllowListEntries()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasAllowListEntries()"
  },
  {
    "label": "GetAllowListEntries()",
    "kind": "Method",
    "detail": "Function (TArray<FString>)",
    "insertText": "GetAllowListEntries()"
  },
  {
    "label": "RemoveAllowListItem()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RemoveAllowListItem(const FName OwnerName, const FStringView Item)"
  },
  {
    "label": "RemoveAllowListItem()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RemoveAllowListItem(const FName OwnerName, const TCHAR* Item)"
  },
  {
    "label": "Append()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Append(const FPathPermissionList& Other)"
  },
  {
    "label": "CombinePathFilters()",
    "kind": "Method",
    "detail": "Function ([ [ nodiscard ] ] FPathPermissionList)",
    "insertText": "CombinePathFilters(const FPathPermissionList& OtherFilter)"
  },
  {
    "label": "UnregisterOwnersAndAppend()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UnregisterOwnersAndAppend(const TArray<FName>& OwnerNamesToRemove, const FPathPermissionList& FiltersToAdd)"
  },
  {
    "label": "IsDenyListAll()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsDenyListAll()"
  },
  {
    "label": "VerifyItemMatchesListType()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "VerifyItemMatchesListType(const FStringView Item)"
  }
]