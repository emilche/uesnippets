[
  {
    "label": "DtmfSenderObserverInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DtmfSenderObserverInterface"
  },
  {
    "label": "DtmfSenderInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DtmfSenderInterface"
  },
  {
    "label": "OnToneChange()",
    "kind": "Method",
    "detail": "Function (# ifndef API_DTMF_SENDER_INTERFACE_H_ # define API_DTMF_SENDER_INTERFACE_H_ # include<string> # include \" api / media_stream_interface . h \" # include \" rtc_base / ref_count . h \" namespace webrtc { class DtmfSenderObserverInterface { public : void)",
    "insertText": "OnToneChange(const std::string& tone, const std::string& tone_buffer)"
  },
  {
    "label": "OnToneChange()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "OnToneChange(const std::string& tone)"
  },
  {
    "label": "DtmfSenderObserverInterface()",
    "kind": "Method",
    "detail": "Function (} protected : ~)",
    "insertText": "DtmfSenderObserverInterface()"
  },
  {
    "label": "RegisterObserver()",
    "kind": "Method",
    "detail": "Function (} ; class DtmfSenderInterface : public rtc::RefCountInterface { public : const int kDtmfDefaultCommaDelayMs = 2 0 0 0 ; void)",
    "insertText": "RegisterObserver(DtmfSenderObserverInterface* observer)"
  },
  {
    "label": "UnregisterObserver()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterObserver()"
  },
  {
    "label": "CanInsertDtmf()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanInsertDtmf()"
  },
  {
    "label": "InsertDtmf()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "InsertDtmf(const std::string& tones, int duration, int inter_tone_gap)"
  },
  {
    "label": "InsertDtmf()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "InsertDtmf(const std::string& tones, int duration, int inter_tone_gap, int comma_delay)"
  },
  {
    "label": "tones()",
    "kind": "Method",
    "detail": "Function (} std::string)",
    "insertText": "tones()"
  },
  {
    "label": "duration()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "duration()"
  },
  {
    "label": "inter_tone_gap()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "inter_tone_gap()"
  },
  {
    "label": "comma_delay()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "comma_delay()"
  }
]