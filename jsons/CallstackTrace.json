[
  {
    "label": "FMalloc",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMalloc"
  },
  {
    "label": "FCallStackTraceLimitResolveScope",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCallStackTraceLimitResolveScope"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" HAL / Platform . h \" # include \" HAL / PlatformTLS . h \" # include \" Math / NumericLimits . h \" # include \" Misc / Build . h \" # include \" Trace / Config . h \" # if !)",
    "insertText": "defined(UE_CALLSTACK_TRACE_ENABLED) #if UE_TRACE_ENABLED && !UE_BUILD_SHIPPING #if PLATFORM_WINDOWS && !PLATFORM_CPU_ARM_FAMILY #define UE_CALLSTACK_TRACE_ENABLED 1 #endif #endif #endif #if !defined(UE_CALLSTACK_TRACE_ENABLED) #define UE_CALLSTACK_TRACE_ENABLED 0 #endif #if UE_CALLSTACK_TRACE_ENABLED void CallstackTrace_Create(class FMalloc* Malloc)"
  },
  {
    "label": "CallstackTrace_Initialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CallstackTrace_Initialize()"
  },
  {
    "label": "CallstackTrace_GetCurrentId()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "CallstackTrace_GetCurrentId()"
  },
  {
    "label": "CALLSTACK_TRACE_LIMIT_CALLSTACKRESOLVE_SCOPE()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "CALLSTACK_TRACE_LIMIT_CALLSTACKRESOLVE_SCOPE() FCallStackTraceLimitResolveScope PREPROCESSOR_JOIN(FCTLMScope,__LINE__)"
  },
  {
    "label": "CallstackTrace_GetFallbackPlatformReturnAddressData()",
    "kind": "Method",
    "detail": "Function (void*)",
    "insertText": "CallstackTrace_GetFallbackPlatformReturnAddressData()"
  },
  {
    "label": "FCallStackTraceLimitResolveScope()",
    "kind": "Method",
    "detail": "Function (} class FCallStackTraceLimitResolveScope { public : FORCENOINLINE)",
    "insertText": "FCallStackTraceLimitResolveScope()"
  },
  {
    "label": "SetTlsValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTlsValue(GCallStackTracingTlsSlotIndex, PLATFORM_RETURN_ADDRESS_FOR_CALLSTACKTRACING())"
  },
  {
    "label": "SetTlsValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTlsValue(GCallStackTracingTlsSlotIndex, nullptr)"
  },
  {
    "label": "CallstackTrace_Create()",
    "kind": "Method",
    "detail": "Function (} } } ; # else void)",
    "insertText": "CallstackTrace_Create(class FMalloc* Malloc)"
  }
]