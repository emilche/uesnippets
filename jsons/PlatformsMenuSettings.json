[
  {
    "label": "DEVELOPERTOOLSETTINGS_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DEVELOPERTOOLSETTINGS_API"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / Object . h \" # include \" ProjectPackagingSettings . h \" # include \" PlatformsMenuSettings . generated . h \")",
    "insertText": "UCLASS(config=Game)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() UPROPERTY(config, EditAnywhere, Category=Project)"
  },
  {
    "label": "GetLaunchOnTargetInfo()",
    "kind": "Method",
    "detail": "Function (const FTargetInfo*)",
    "insertText": "GetLaunchOnTargetInfo()"
  },
  {
    "label": "GetBuildConfigurationForPlatform()",
    "kind": "Method",
    "detail": "Function (EProjectPackagingBuildConfigurations)",
    "insertText": "GetBuildConfigurationForPlatform(FName PlatformName)"
  },
  {
    "label": "SetBuildConfigurationForPlatform()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetBuildConfigurationForPlatform(FName PlatformName, EProjectPackagingBuildConfigurations Configuration)"
  },
  {
    "label": "GetTargetFlavorForPlatform()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetTargetFlavorForPlatform(FName PlatformName)"
  },
  {
    "label": "SetTargetFlavorForPlatform()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTargetFlavorForPlatform(FName PlatformName, FName TargetFlavorName)"
  },
  {
    "label": "GetBuildTargetForPlatform()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetBuildTargetForPlatform(FName PlatformName)"
  },
  {
    "label": "SetBuildTargetForPlatform()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetBuildTargetForPlatform(FName PlatformName, FString BuildTargetName)"
  },
  {
    "label": "GetBuildTargetInfoForPlatform()",
    "kind": "Method",
    "detail": "Function (const FTargetInfo*)",
    "insertText": "GetBuildTargetInfoForPlatform(FName PlatformName, bool& bOutIsProjectTarget)"
  }
]