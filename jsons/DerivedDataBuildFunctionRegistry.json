[
  {
    "label": "FGuid",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGuid"
  },
  {
    "label": "TFunctionRef",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TFunctionRef"
  },
  {
    "label": "IBuildFunction",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IBuildFunction"
  },
  {
    "label": "IBuildFunctionRegistry",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IBuildFunctionRegistry"
  },
  {
    "label": "IBuildFunctionRegistry()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / StringFwd . h \" struct FGuid ; template<FuncType> class TFunctionRef ; namespace UE::DerivedData { class IBuildFunction ; } namespace UE::DerivedData { class IBuildFunctionRegistry { public : ~)",
    "insertText": "IBuildFunctionRegistry()"
  },
  {
    "label": "FindFunction()",
    "kind": "Method",
    "detail": "Function (const IBuildFunction*)",
    "insertText": "FindFunction(FUtf8StringView Function)"
  },
  {
    "label": "FindFunctionVersion()",
    "kind": "Method",
    "detail": "Function (FGuid)",
    "insertText": "FindFunctionVersion(FUtf8StringView Function)"
  },
  {
    "label": "IterateFunctionVersions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "IterateFunctionVersions(TFunctionRef<void(FUtf8StringView Name, const FGuid& Version)> Visitor)"
  }
]