[
  {
    "label": "FScopedTransaction",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FScopedTransaction"
  },
  {
    "label": "SBlendSpaceGridWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SBlendSpaceGridWidget"
  },
  {
    "label": "SBlendSpaceEditor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SBlendSpaceEditor"
  },
  {
    "label": "IPersonaPreviewScene",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPersonaPreviewScene"
  },
  {
    "label": "IPersonaPreviewScene",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPersonaPreviewScene"
  },
  {
    "label": "IPersonaPreviewScene",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPersonaPreviewScene"
  },
  {
    "label": "SBlendSpaceGridWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SBlendSpaceGridWidget"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct(const FArguments& InArgs)"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct(const FArguments& InArgs, const TSharedRef<class IPersonaPreviewScene>& InPreviewScene)"
  },
  {
    "label": "OnSampleMoved()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSampleMoved(const int32 SampleIndex, const FVector& NewValue, bool bIsInteractive)"
  },
  {
    "label": "OnSampleRemoved()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSampleRemoved(const int32 SampleIndex)"
  },
  {
    "label": "OnSampleAdded()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "OnSampleAdded(UAnimSequence* Animation, const FVector& Value, bool bRunAnalysis)"
  },
  {
    "label": "OnSampleDuplicated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSampleDuplicated(const int32 SampleIndex, const FVector& NewValue, bool bRunAnalysis)"
  },
  {
    "label": "OnSampleReplaced()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSampleReplaced(const int32 SampleIndex, UAnimSequence* Animation)"
  },
  {
    "label": "PostUndoRedo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostUndoRedo()"
  },
  {
    "label": "OnPropertyChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPropertyChanged(UObject* ObjectBeingModified, FPropertyChangedEvent& PropertyChangedEvent)"
  },
  {
    "label": "ResampleData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResampleData()"
  }
]