[
  {
    "label": "UMeshComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMeshComponent"
  },
  {
    "label": "UTexture",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UTexture"
  },
  {
    "label": "UTexture2D",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UTexture2D"
  },
  {
    "label": "UTextureRenderTarget2D",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UTextureRenderTarget2D"
  },
  {
    "label": "MESHPAINT_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MESHPAINT_API"
  },
  {
    "label": "FTexturePaintMeshSectionInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTexturePaintMeshSectionInfo"
  },
  {
    "label": "IMeshPaintGeometryAdapter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IMeshPaintGeometryAdapter"
  },
  {
    "label": "FPaintableTexture",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPaintableTexture"
  },
  {
    "label": "BindShaders()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" BatchedElements . h \" # include \" MeshPaintRendering . h \" class UMeshComponent ; class UTexture ; class UTexture2D ; class UTextureRenderTarget2D ; class FMeshPaintBatchedElementParameters : public FBatchedElementParameters { public : void)",
    "insertText": "BindShaders(FRHICommandList& RHICmdList, FGraphicsPipelineStateInitializer& GraphicsPSOInit, ERHIFeatureLevel::Type InFeatureLevel, const FMatrix& InTransform, const float InGamma, const FMatrix& ColorWeights, const FTexture* Texture)"
  },
  {
    "label": "SetMeshPaintShaders()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetMeshPaintShaders(RHICmdList, GraphicsPSOInit, InFeatureLevel, InTransform, InGamma, ShaderParams)"
  },
  {
    "label": "SetMeshPaintDilateShaders()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetMeshPaintDilateShaders(RHICmdList, GraphicsPSOInit, InFeatureLevel, InTransform, InGamma, ShaderParams)"
  },
  {
    "label": "CopyTextureToRenderTargetTexture()",
    "kind": "Method",
    "detail": "Function (} public : MeshPaintRendering::FMeshPaintDilateShaderParameters ShaderParams ; } ; struct FTexturePaintMeshSectionInfo { int32 FirstIndex ; int32 LastIndex ; } ; class IMeshPaintGeometryAdapter ; struct FPaintableTexture ; class TexturePaintHelpers { public : void)",
    "insertText": "CopyTextureToRenderTargetTexture(UTexture* SourceTexture, UTextureRenderTarget2D* RenderTargetTexture, ERHIFeatureLevel::Type FeatureLevel)"
  },
  {
    "label": "GenerateSeamMask()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GenerateSeamMask(UMeshComponent* MeshComponent, int32 UVSet, UTextureRenderTarget2D* SeamRenderTexture, UTexture2D* Texture, UTextureRenderTarget2D* RenderTargetTexture)"
  },
  {
    "label": "GetMaxSupportedBytesPerPixelForPainting()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetMaxSupportedBytesPerPixelForPainting()"
  },
  {
    "label": "GetTempUncompressedTexturePixelFormat()",
    "kind": "Method",
    "detail": "Function (EPixelFormat)",
    "insertText": "GetTempUncompressedTexturePixelFormat()"
  },
  {
    "label": "CreateTempUncompressedTexture()",
    "kind": "Method",
    "detail": "Function (UTexture2D*)",
    "insertText": "CreateTempUncompressedTexture(UTexture2D* SourceTexture)"
  },
  {
    "label": "SetupInitialRenderTargetData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetupInitialRenderTargetData(UTexture2D* InTextureSource, UTextureRenderTarget2D* InRenderTarget)"
  },
  {
    "label": "FindMaterialIndicesUsingTexture()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FindMaterialIndicesUsingTexture(const UTexture* Texture, const UMeshComponent* MeshComponent, TArray<int32>& OutIndices)"
  },
  {
    "label": "RetrieveMeshSectionsForTextures()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RetrieveMeshSectionsForTextures(const UMeshComponent* MeshComponent, int32 LODIndex, TArray<const UTexture*> Textures, TArray<FTexturePaintMeshSectionInfo>& OutSectionInfo)"
  },
  {
    "label": "RetrieveMeshSectionsForMaterialIndices()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RetrieveMeshSectionsForMaterialIndices(const UMeshComponent* MeshComponent, int32 LODIndex, const TArray<int32>& MaterialIndices, TArray<FTexturePaintMeshSectionInfo>& OutSectionInfo)"
  },
  {
    "label": "RetrieveTexturesForComponent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RetrieveTexturesForComponent(const UMeshComponent* Component, IMeshPaintGeometryAdapter* Adapter, TArray<FPaintableTexture>& OutTextures)"
  },
  {
    "label": "DoesMeshComponentUseTexture()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DoesMeshComponentUseTexture(UMeshComponent* MeshComponent, UTexture* Texture)"
  }
]