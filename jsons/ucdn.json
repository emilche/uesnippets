[
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# ifndef UCDN_H # define UCDN_H # if)",
    "insertText": "defined(__GNUC__) && (__GNUC__ >= 4) && !defined(__MINGW32__) # define HB_BEGIN_VISIBILITY _Pragma (\"GCC visibility push(hidden)\") # define HB_END_VISIBILITY _Pragma (\"GCC visibility pop\")"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (HB_BEGIN_VISIBILITY # define HB_END_HEADER HB_END_VISIBILITY } # else # define HB_BEGIN_HEADER HB_BEGIN_VISIBILITY # define HB_END_HEADER HB_END_VISIBILITY # endif HB_BEGIN_HEADER # if)",
    "insertText": "defined(_SVR4) || defined (SVR4) || defined (__OpenBSD__) || \\ defined (_sgi) || defined (__sun) || defined (sun) || \\ defined (__digital__) || defined (__HP_cc) # include <inttypes.h> #elif defined (_AIX) # include <sys/inttypes.h> #elif defined (_MSC_VER)"
  },
  {
    "label": "ucdn_get_unicode_version()",
    "kind": "Method",
    "detail": "Function (typedef unsigned __int8 uint8_t ; typedef __int16 int16_t ; typedef unsigned __int16 uint16_t ; typedef __int32 int32_t ; typedef unsigned __int32 uint32_t ; typedef __int64 int64_t ; typedef unsigned __int64 uint64_t ; # else # include<stdint . h> # endif # define UCDN_EAST_ASIAN_F 0 # define UCDN_EAST_ASIAN_H 1 # define UCDN_EAST_ASIAN_W 2 # define UCDN_EAST_ASIAN_NA 3 # define UCDN_EAST_ASIAN_A 4 # define UCDN_EAST_ASIAN_N 5 # define UCDN_SCRIPT_COMMON 0 # define UCDN_SCRIPT_LATIN 1 # define UCDN_SCRIPT_GREEK 2 # define UCDN_SCRIPT_CYRILLIC 3 # define UCDN_SCRIPT_ARMENIAN 4 # define UCDN_SCRIPT_HEBREW 5 # define UCDN_SCRIPT_ARABIC 6 # define UCDN_SCRIPT_SYRIAC 7 # define UCDN_SCRIPT_THAANA 8 # define UCDN_SCRIPT_DEVANAGARI 9 # define UCDN_SCRIPT_BENGALI 1 0 # define UCDN_SCRIPT_GURMUKHI 1 1 # define UCDN_SCRIPT_GUJARATI 1 2 # define UCDN_SCRIPT_ORIYA 1 3 # define UCDN_SCRIPT_TAMIL 1 4 # define UCDN_SCRIPT_TELUGU 1 5 # define UCDN_SCRIPT_KANNADA 1 6 # define UCDN_SCRIPT_MALAYALAM 1 7 # define UCDN_SCRIPT_SINHALA 1 8 # define UCDN_SCRIPT_THAI 1 9 # define UCDN_SCRIPT_LAO 2 0 # define UCDN_SCRIPT_TIBETAN 2 1 # define UCDN_SCRIPT_MYANMAR 2 2 # define UCDN_SCRIPT_GEORGIAN 2 3 # define UCDN_SCRIPT_HANGUL 2 4 # define UCDN_SCRIPT_ETHIOPIC 2 5 # define UCDN_SCRIPT_CHEROKEE 2 6 # define UCDN_SCRIPT_CANADIAN_ABORIGINAL 2 7 # define UCDN_SCRIPT_OGHAM 2 8 # define UCDN_SCRIPT_RUNIC 2 9 # define UCDN_SCRIPT_KHMER 3 0 # define UCDN_SCRIPT_MONGOLIAN 3 1 # define UCDN_SCRIPT_HIRAGANA 3 2 # define UCDN_SCRIPT_KATAKANA 3 3 # define UCDN_SCRIPT_BOPOMOFO 3 4 # define UCDN_SCRIPT_HAN 3 5 # define UCDN_SCRIPT_YI 3 6 # define UCDN_SCRIPT_OLD_ITALIC 3 7 # define UCDN_SCRIPT_GOTHIC 3 8 # define UCDN_SCRIPT_DESERET 3 9 # define UCDN_SCRIPT_INHERITED 4 0 # define UCDN_SCRIPT_TAGALOG 4 1 # define UCDN_SCRIPT_HANUNOO 4 2 # define UCDN_SCRIPT_BUHID 4 3 # define UCDN_SCRIPT_TAGBANWA 4 4 # define UCDN_SCRIPT_LIMBU 4 5 # define UCDN_SCRIPT_TAI_LE 4 6 # define UCDN_SCRIPT_LINEAR_B 4 7 # define UCDN_SCRIPT_UGARITIC 4 8 # define UCDN_SCRIPT_SHAVIAN 4 9 # define UCDN_SCRIPT_OSMANYA 5 0 # define UCDN_SCRIPT_CYPRIOT 5 1 # define UCDN_SCRIPT_BRAILLE 5 2 # define UCDN_SCRIPT_BUGINESE 5 3 # define UCDN_SCRIPT_COPTIC 5 4 # define UCDN_SCRIPT_NEW_TAI_LUE 5 5 # define UCDN_SCRIPT_GLAGOLITIC 5 6 # define UCDN_SCRIPT_TIFINAGH 5 7 # define UCDN_SCRIPT_SYLOTI_NAGRI 5 8 # define UCDN_SCRIPT_OLD_PERSIAN 5 9 # define UCDN_SCRIPT_KHAROSHTHI 6 0 # define UCDN_SCRIPT_BALINESE 6 1 # define UCDN_SCRIPT_CUNEIFORM 6 2 # define UCDN_SCRIPT_PHOENICIAN 6 3 # define UCDN_SCRIPT_PHAGS_PA 6 4 # define UCDN_SCRIPT_NKO 6 5 # define UCDN_SCRIPT_SUNDANESE 6 6 # define UCDN_SCRIPT_LEPCHA 6 7 # define UCDN_SCRIPT_OL_CHIKI 6 8 # define UCDN_SCRIPT_VAI 6 9 # define UCDN_SCRIPT_SAURASHTRA 7 0 # define UCDN_SCRIPT_KAYAH_LI 7 1 # define UCDN_SCRIPT_REJANG 7 2 # define UCDN_SCRIPT_LYCIAN 7 3 # define UCDN_SCRIPT_CARIAN 7 4 # define UCDN_SCRIPT_LYDIAN 7 5 # define UCDN_SCRIPT_CHAM 7 6 # define UCDN_SCRIPT_TAI_THAM 7 7 # define UCDN_SCRIPT_TAI_VIET 7 8 # define UCDN_SCRIPT_AVESTAN 7 9 # define UCDN_SCRIPT_EGYPTIAN_HIEROGLYPHS 8 0 # define UCDN_SCRIPT_SAMARITAN 8 1 # define UCDN_SCRIPT_LISU 8 2 # define UCDN_SCRIPT_BAMUM 8 3 # define UCDN_SCRIPT_JAVANESE 8 4 # define UCDN_SCRIPT_MEETEI_MAYEK 8 5 # define UCDN_SCRIPT_IMPERIAL_ARAMAIC 8 6 # define UCDN_SCRIPT_OLD_SOUTH_ARABIAN 8 7 # define UCDN_SCRIPT_INSCRIPTIONAL_PARTHIAN 8 8 # define UCDN_SCRIPT_INSCRIPTIONAL_PAHLAVI 8 9 # define UCDN_SCRIPT_OLD_TURKIC 9 0 # define UCDN_SCRIPT_KAITHI 9 1 # define UCDN_SCRIPT_BATAK 9 2 # define UCDN_SCRIPT_BRAHMI 9 3 # define UCDN_SCRIPT_MANDAIC 9 4 # define UCDN_SCRIPT_CHAKMA 9 5 # define UCDN_SCRIPT_MEROITIC_CURSIVE 9 6 # define UCDN_SCRIPT_MEROITIC_HIEROGLYPHS 9 7 # define UCDN_SCRIPT_MIAO 9 8 # define UCDN_SCRIPT_SHARADA 9 9 # define UCDN_SCRIPT_SORA_SOMPENG 1 0 0 # define UCDN_SCRIPT_TAKRI 1 0 1 # define UCDN_SCRIPT_UNKNOWN 1 0 2 # define UCDN_SCRIPT_BASSA_VAH 1 0 3 # define UCDN_SCRIPT_CAUCASIAN_ALBANIAN 1 0 4 # define UCDN_SCRIPT_DUPLOYAN 1 0 5 # define UCDN_SCRIPT_ELBASAN 1 0 6 # define UCDN_SCRIPT_GRANTHA 1 0 7 # define UCDN_SCRIPT_KHOJKI 1 0 8 # define UCDN_SCRIPT_KHUDAWADI 1 0 9 # define UCDN_SCRIPT_LINEAR_A 1 1 0 # define UCDN_SCRIPT_MAHAJANI 1 1 1 # define UCDN_SCRIPT_MANICHAEAN 1 1 2 # define UCDN_SCRIPT_MENDE_KIKAKUI 1 1 3 # define UCDN_SCRIPT_MODI 1 1 4 # define UCDN_SCRIPT_MRO 1 1 5 # define UCDN_SCRIPT_NABATAEAN 1 1 6 # define UCDN_SCRIPT_OLD_NORTH_ARABIAN 1 1 7 # define UCDN_SCRIPT_OLD_PERMIC 1 1 8 # define UCDN_SCRIPT_PAHAWH_HMONG 1 1 9 # define UCDN_SCRIPT_PALMYRENE 1 2 0 # define UCDN_SCRIPT_PAU_CIN_HAU 1 2 1 # define UCDN_SCRIPT_PSALTER_PAHLAVI 1 2 2 # define UCDN_SCRIPT_SIDDHAM 1 2 3 # define UCDN_SCRIPT_TIRHUTA 1 2 4 # define UCDN_SCRIPT_WARANG_CITI 1 2 5 # define UCDN_SCRIPT_AHOM 1 2 6 # define UCDN_SCRIPT_ANATOLIAN_HIEROGLYPHS 1 2 7 # define UCDN_SCRIPT_HATRAN 1 2 8 # define UCDN_SCRIPT_MULTANI 1 2 9 # define UCDN_SCRIPT_OLD_HUNGARIAN 1 3 0 # define UCDN_SCRIPT_SIGNWRITING 1 3 1 # define UCDN_SCRIPT_ADLAM 1 3 2 # define UCDN_SCRIPT_BHAIKSUKI 1 3 3 # define UCDN_SCRIPT_MARCHEN 1 3 4 # define UCDN_SCRIPT_NEWA 1 3 5 # define UCDN_SCRIPT_OSAGE 1 3 6 # define UCDN_SCRIPT_TANGUT 1 3 7 # define UCDN_SCRIPT_MASARAM_GONDI 1 3 8 # define UCDN_SCRIPT_NUSHU 1 3 9 # define UCDN_SCRIPT_SOYOMBO 1 4 0 # define UCDN_SCRIPT_ZANABAZAR_SQUARE 1 4 1 # define UCDN_SCRIPT_DOGRA 1 4 2 # define UCDN_SCRIPT_GUNJALA_GONDI 1 4 3 # define UCDN_SCRIPT_HANIFI_ROHINGYA 1 4 4 # define UCDN_SCRIPT_MAKASAR 1 4 5 # define UCDN_SCRIPT_MEDEFAIDRIN 1 4 6 # define UCDN_SCRIPT_OLD_SOGDIAN 1 4 7 # define UCDN_SCRIPT_SOGDIAN 1 4 8 # define UCDN_SCRIPT_ELYMAIC 1 4 9 # define UCDN_SCRIPT_NANDINAGARI 1 5 0 # define UCDN_SCRIPT_NYIAKENG_PUACHUE_HMONG 1 5 1 # define UCDN_SCRIPT_WANCHO 1 5 2 # define UCDN_LINEBREAK_CLASS_OP 0 # define UCDN_LINEBREAK_CLASS_CL 1 # define UCDN_LINEBREAK_CLASS_CP 2 # define UCDN_LINEBREAK_CLASS_QU 3 # define UCDN_LINEBREAK_CLASS_GL 4 # define UCDN_LINEBREAK_CLASS_NS 5 # define UCDN_LINEBREAK_CLASS_EX 6 # define UCDN_LINEBREAK_CLASS_SY 7 # define UCDN_LINEBREAK_CLASS_IS 8 # define UCDN_LINEBREAK_CLASS_PR 9 # define UCDN_LINEBREAK_CLASS_PO 1 0 # define UCDN_LINEBREAK_CLASS_NU 1 1 # define UCDN_LINEBREAK_CLASS_AL 1 2 # define UCDN_LINEBREAK_CLASS_HL 1 3 # define UCDN_LINEBREAK_CLASS_ID 1 4 # define UCDN_LINEBREAK_CLASS_IN 1 5 # define UCDN_LINEBREAK_CLASS_HY 1 6 # define UCDN_LINEBREAK_CLASS_BA 1 7 # define UCDN_LINEBREAK_CLASS_BB 1 8 # define UCDN_LINEBREAK_CLASS_B2 1 9 # define UCDN_LINEBREAK_CLASS_ZW 2 0 # define UCDN_LINEBREAK_CLASS_CM 2 1 # define UCDN_LINEBREAK_CLASS_WJ 2 2 # define UCDN_LINEBREAK_CLASS_H2 2 3 # define UCDN_LINEBREAK_CLASS_H3 2 4 # define UCDN_LINEBREAK_CLASS_JL 2 5 # define UCDN_LINEBREAK_CLASS_JV 2 6 # define UCDN_LINEBREAK_CLASS_JT 2 7 # define UCDN_LINEBREAK_CLASS_RI 2 8 # define UCDN_LINEBREAK_CLASS_AI 2 9 # define UCDN_LINEBREAK_CLASS_BK 3 0 # define UCDN_LINEBREAK_CLASS_CB 3 1 # define UCDN_LINEBREAK_CLASS_CJ 3 2 # define UCDN_LINEBREAK_CLASS_CR 3 3 # define UCDN_LINEBREAK_CLASS_LF 3 4 # define UCDN_LINEBREAK_CLASS_NL 3 5 # define UCDN_LINEBREAK_CLASS_SA 3 6 # define UCDN_LINEBREAK_CLASS_SG 3 7 # define UCDN_LINEBREAK_CLASS_SP 3 8 # define UCDN_LINEBREAK_CLASS_XX 3 9 # define UCDN_LINEBREAK_CLASS_ZWJ 4 0 # define UCDN_LINEBREAK_CLASS_EB 4 1 # define UCDN_LINEBREAK_CLASS_EM 4 2 # define UCDN_GENERAL_CATEGORY_CC 0 # define UCDN_GENERAL_CATEGORY_CF 1 # define UCDN_GENERAL_CATEGORY_CN 2 # define UCDN_GENERAL_CATEGORY_CO 3 # define UCDN_GENERAL_CATEGORY_CS 4 # define UCDN_GENERAL_CATEGORY_LL 5 # define UCDN_GENERAL_CATEGORY_LM 6 # define UCDN_GENERAL_CATEGORY_LO 7 # define UCDN_GENERAL_CATEGORY_LT 8 # define UCDN_GENERAL_CATEGORY_LU 9 # define UCDN_GENERAL_CATEGORY_MC 1 0 # define UCDN_GENERAL_CATEGORY_ME 1 1 # define UCDN_GENERAL_CATEGORY_MN 1 2 # define UCDN_GENERAL_CATEGORY_ND 1 3 # define UCDN_GENERAL_CATEGORY_NL 1 4 # define UCDN_GENERAL_CATEGORY_NO 1 5 # define UCDN_GENERAL_CATEGORY_PC 1 6 # define UCDN_GENERAL_CATEGORY_PD 1 7 # define UCDN_GENERAL_CATEGORY_PE 1 8 # define UCDN_GENERAL_CATEGORY_PF 1 9 # define UCDN_GENERAL_CATEGORY_PI 2 0 # define UCDN_GENERAL_CATEGORY_PO 2 1 # define UCDN_GENERAL_CATEGORY_PS 2 2 # define UCDN_GENERAL_CATEGORY_SC 2 3 # define UCDN_GENERAL_CATEGORY_SK 2 4 # define UCDN_GENERAL_CATEGORY_SM 2 5 # define UCDN_GENERAL_CATEGORY_SO 2 6 # define UCDN_GENERAL_CATEGORY_ZL 2 7 # define UCDN_GENERAL_CATEGORY_ZP 2 8 # define UCDN_GENERAL_CATEGORY_ZS 2 9 # define UCDN_BIDI_CLASS_L 0 # define UCDN_BIDI_CLASS_LRE 1 # define UCDN_BIDI_CLASS_LRO 2 # define UCDN_BIDI_CLASS_R 3 # define UCDN_BIDI_CLASS_AL 4 # define UCDN_BIDI_CLASS_RLE 5 # define UCDN_BIDI_CLASS_RLO 6 # define UCDN_BIDI_CLASS_PDF 7 # define UCDN_BIDI_CLASS_EN 8 # define UCDN_BIDI_CLASS_ES 9 # define UCDN_BIDI_CLASS_ET 1 0 # define UCDN_BIDI_CLASS_AN 1 1 # define UCDN_BIDI_CLASS_CS 1 2 # define UCDN_BIDI_CLASS_NSM 1 3 # define UCDN_BIDI_CLASS_BN 1 4 # define UCDN_BIDI_CLASS_B 1 5 # define UCDN_BIDI_CLASS_S 1 6 # define UCDN_BIDI_CLASS_WS 1 7 # define UCDN_BIDI_CLASS_ON 1 8 # define UCDN_BIDI_CLASS_LRI 1 9 # define UCDN_BIDI_CLASS_RLI 2 0 # define UCDN_BIDI_CLASS_FSI 2 1 # define UCDN_BIDI_CLASS_PDI 2 2 # define UCDN_BIDI_PAIRED_BRACKET_TYPE_OPEN 0 # define UCDN_BIDI_PAIRED_BRACKET_TYPE_CLOSE 1 # define UCDN_BIDI_PAIRED_BRACKET_TYPE_NONE 2 const char*)",
    "insertText": "ucdn_get_unicode_version(void)"
  },
  {
    "label": "ucdn_get_combining_class()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ucdn_get_combining_class(uint32_t code)"
  },
  {
    "label": "ucdn_get_east_asian_width()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ucdn_get_east_asian_width(uint32_t code)"
  },
  {
    "label": "ucdn_get_general_category()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ucdn_get_general_category(uint32_t code)"
  },
  {
    "label": "ucdn_get_bidi_class()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ucdn_get_bidi_class(uint32_t code)"
  },
  {
    "label": "ucdn_get_script()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ucdn_get_script(uint32_t code)"
  },
  {
    "label": "ucdn_get_linebreak_class()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ucdn_get_linebreak_class(uint32_t code)"
  },
  {
    "label": "ucdn_get_resolved_linebreak_class()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ucdn_get_resolved_linebreak_class(uint32_t code)"
  },
  {
    "label": "ucdn_get_mirrored()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ucdn_get_mirrored(uint32_t code)"
  },
  {
    "label": "ucdn_mirror()",
    "kind": "Method",
    "detail": "Function (uint32_t)",
    "insertText": "ucdn_mirror(uint32_t code)"
  },
  {
    "label": "ucdn_paired_bracket()",
    "kind": "Method",
    "detail": "Function (uint32_t)",
    "insertText": "ucdn_paired_bracket(uint32_t code)"
  },
  {
    "label": "ucdn_paired_bracket_type()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ucdn_paired_bracket_type(uint32_t code)"
  },
  {
    "label": "ucdn_decompose()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ucdn_decompose(uint32_t code, uint32_t *a, uint32_t *b)"
  },
  {
    "label": "ucdn_compat_decompose()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ucdn_compat_decompose(uint32_t code, uint32_t *decomposed)"
  },
  {
    "label": "ucdn_compose()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ucdn_compose(uint32_t *code, uint32_t a, uint32_t b)"
  }
]