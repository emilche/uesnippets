[
  {
    "label": "FSequencer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSequencer"
  },
  {
    "label": "IKeyArea",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IKeyArea"
  },
  {
    "label": "UMovieSceneSection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieSceneSection"
  },
  {
    "label": "UMovieSceneTrack",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieSceneTrack"
  },
  {
    "label": "FChannelModel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FChannelModel"
  },
  {
    "label": "FViewModelVariantIterator",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FViewModelVariantIterator"
  },
  {
    "label": "SequencerHelpers",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SequencerHelpers"
  },
  {
    "label": "GetAllKeyAreas()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Widgets / Input / SNumericDropDown . h \" # include \" Containers / ArrayView . h \" # include \" Misc / FrameNumber . h \" # include \" MVVM / ViewModels / ViewModel . h \" # include \" MVVM / ViewModels / ViewModelHierarchy . h \" # define LOCTEXT_NAMESPACE \" SequencerHelpers \" class FSequencer ; class IKeyArea ; class UMovieSceneSection ; class UMovieSceneTrack ; namespace UE { namespace Sequencer { class FChannelModel ; struct FViewModelVariantIterator ; } } class SequencerHelpers { public : using FViewModel = UE::Sequencer::FViewModel ; void)",
    "insertText": "GetAllKeyAreas(TSharedPtr<FViewModel> DataModel, TSet<TSharedPtr<IKeyArea>>& KeyAreas)"
  },
  {
    "label": "GetAllChannels()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetAllChannels(TSharedPtr<FViewModel> DataModel, TSet<TSharedPtr<UE::Sequencer::FChannelModel>>& Channels)"
  },
  {
    "label": "GetSectionFromTime()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetSectionFromTime(TArrayView<UMovieSceneSection* const> InSections, FFrameNumber Time)"
  },
  {
    "label": "GetDescendantNodes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetDescendantNodes(TSharedRef<FViewModel> DataModel, TSet<TSharedRef<FViewModel> >& Nodes)"
  },
  {
    "label": "GetAllSections()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetAllSections(TSharedPtr<FViewModel> DataModel, TSet<TWeakObjectPtr<UMovieSceneSection>>& Sections)"
  },
  {
    "label": "PerformDefaultSelection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PerformDefaultSelection(FSequencer& Sequencer, const FPointerEvent& MouseEvent)"
  },
  {
    "label": "SummonContextMenu()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<SWidget>)",
    "insertText": "SummonContextMenu(FSequencer& Sequencer, const FGeometry& MyGeometry, const FPointerEvent& MouseEvent)"
  },
  {
    "label": "BuildNewSectionMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildNewSectionMenu(const TWeakPtr<FSequencer>& InWeakSequencer , const int32 InRowIndex , const TWeakObjectPtr<UMovieSceneTrack>& InTrackWeak , FMenuBuilder& MenuBuilder)"
  },
  {
    "label": "BuildEditSectionMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildEditSectionMenu(const TWeakPtr<FSequencer>& InWeakSequencer , const TArray<TWeakObjectPtr<>>& InWeakSections , FMenuBuilder& MenuBuilder , const bool bInSubMenu)"
  },
  {
    "label": "BuildEditTrackMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildEditTrackMenu(const TWeakPtr<FSequencer>& InWeakSequencer , const TArray<TWeakObjectPtr<>>& InWeakTracks , FMenuBuilder& MenuBuilder , const bool bInSubMenu)"
  },
  {
    "label": "BuildBlendingMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildBlendingMenu(const TWeakPtr<FSequencer>& InWeakSequencer , const TWeakObjectPtr<UMovieSceneTrack>& InTrackWeak , FMenuBuilder& MenuBuilder)"
  },
  {
    "label": "GetSectionObjectsFromTrackAreaModels()",
    "kind": "Method",
    "detail": "Function (TArray<TWeakObjectPtr<>>)",
    "insertText": "GetSectionObjectsFromTrackAreaModels(const UE::Sequencer::FViewModelVariantIterator& InTrackAreaModels)"
  }
]