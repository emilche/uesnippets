[
  {
    "label": "extract_quarter_2_epi16_sse2()",
    "kind": "Method",
    "detail": "Function (# ifndef VPX_VPX_DSP_X86_CONVOLVE_SSE2_H_ # define VPX_VPX_DSP_X86_CONVOLVE_SSE2_H_ # include<emmintrin . h> # include \" . / vpx_config . h \" __m128i)",
    "insertText": "extract_quarter_2_epi16_sse2(const __m128i *const reg)"
  },
  {
    "label": "_mm_unpacklo_epi32()",
    "kind": "Method",
    "detail": "Function (__m128i tmp =)",
    "insertText": "_mm_unpacklo_epi32(*reg, *reg)"
  },
  {
    "label": "extract_quarter_3_epi16_sse2()",
    "kind": "Method",
    "detail": "Function (} __m128i)",
    "insertText": "extract_quarter_3_epi16_sse2(const __m128i *const reg)"
  },
  {
    "label": "_mm_unpackhi_epi32()",
    "kind": "Method",
    "detail": "Function (__m128i tmp =)",
    "insertText": "_mm_unpackhi_epi32(*reg, *reg)"
  },
  {
    "label": "mm_madd_add_epi8_sse2()",
    "kind": "Method",
    "detail": "Function (} __m128i)",
    "insertText": "mm_madd_add_epi8_sse2(const __m128i *const src_1, const __m128i *const src_2, const __m128i *const ker_1, const __m128i *const ker_2)"
  },
  {
    "label": "_mm_unpacklo_epi8()",
    "kind": "Method",
    "detail": "Function (const __m128i src_1_half =)",
    "insertText": "_mm_unpacklo_epi8(*src_1, _mm_setzero_si128())"
  },
  {
    "label": "_mm_unpacklo_epi8()",
    "kind": "Method",
    "detail": "Function (const __m128i src_2_half =)",
    "insertText": "_mm_unpacklo_epi8(*src_2, _mm_setzero_si128())"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i madd_1 =)",
    "insertText": "_mm_madd_epi16(src_1_half, *ker_1)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i madd_2 =)",
    "insertText": "_mm_madd_epi16(src_2_half, *ker_2)"
  },
  {
    "label": "mm_madd_add_epi16_sse2()",
    "kind": "Method",
    "detail": "Function (} __m128i)",
    "insertText": "mm_madd_add_epi16_sse2(const __m128i *const src_1, const __m128i *const src_2, const __m128i *const ker_1, const __m128i *const ker_2)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i madd_1 =)",
    "insertText": "_mm_madd_epi16(*src_1, *ker_1)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i madd_2 =)",
    "insertText": "_mm_madd_epi16(*src_2, *ker_2)"
  },
  {
    "label": "mm_madd_packs_epi16_sse2()",
    "kind": "Method",
    "detail": "Function (} __m128i)",
    "insertText": "mm_madd_packs_epi16_sse2(const __m128i *const src_0, const __m128i *const src_1, const __m128i *const ker)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i madd_1 =)",
    "insertText": "_mm_madd_epi16(*src_0, *ker)"
  },
  {
    "label": "_mm_madd_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i madd_2 =)",
    "insertText": "_mm_madd_epi16(*src_1, *ker)"
  },
  {
    "label": "mm_zip_epi32_sse2()",
    "kind": "Method",
    "detail": "Function (} __m128i)",
    "insertText": "mm_zip_epi32_sse2(const __m128i *const src_1, const __m128i *const src_2)"
  },
  {
    "label": "_mm_unpacklo_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i tmp_1 =)",
    "insertText": "_mm_unpacklo_epi32(*src_1, *src_2)"
  },
  {
    "label": "_mm_unpackhi_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i tmp_2 =)",
    "insertText": "_mm_unpackhi_epi32(*src_1, *src_2)"
  },
  {
    "label": "mm_round_epi32_sse2()",
    "kind": "Method",
    "detail": "Function (} __m128i)",
    "insertText": "mm_round_epi32_sse2(const __m128i *const src, const __m128i *const half_depth, const int depth)"
  },
  {
    "label": "_mm_add_epi32()",
    "kind": "Method",
    "detail": "Function (const __m128i nearest_src =)",
    "insertText": "_mm_add_epi32(*src, *half_depth)"
  },
  {
    "label": "mm_round_epi16_sse2()",
    "kind": "Method",
    "detail": "Function (} __m128i)",
    "insertText": "mm_round_epi16_sse2(const __m128i *const src, const __m128i *const half_depth, const int depth)"
  },
  {
    "label": "_mm_adds_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i nearest_src =)",
    "insertText": "_mm_adds_epi16(*src, *half_depth)"
  }
]