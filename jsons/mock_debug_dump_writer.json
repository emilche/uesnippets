[
  {
    "label": "MockDebugDumpWriter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MockDebugDumpWriter"
  },
  {
    "label": "MockDebugDumpWriter()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_AUDIO_CODING_AUDIO_NETWORK_ADAPTOR_MOCK_MOCK_DEBUG_DUMP_WRITER_H_ # define MODULES_AUDIO_CODING_AUDIO_NETWORK_ADAPTOR_MOCK_MOCK_DEBUG_DUMP_WRITER_H_ # include \" modules / audio_coding / audio_network_adaptor / debug_dump_writer . h \" # include \" test / gmock . h \" namespace webrtc { class MockDebugDumpWriter : public DebugDumpWriter { public : ~)",
    "insertText": "MockDebugDumpWriter()"
  },
  {
    "label": "Die()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Die()"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "MOCK_METHOD(void, Die, ())"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(void, DumpEncoderRuntimeConfig, (const AudioEncoderRuntimeConfig& config, int64_t timestamp), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(void, DumpNetworkMetrics, (const Controller::NetworkMetrics& metrics, int64_t timestamp), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (# if WEBRTC_ENABLE_PROTOBUF)",
    "insertText": "MOCK_METHOD(void, DumpControllerManagerConfig, (const audio_network_adaptor::config::ControllerManager& controller_manager_config, int64_t timestamp), (override))"
  }
]