[
  {
    "label": "AActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AActor"
  },
  {
    "label": "ALevelSequenceActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ALevelSequenceActor"
  },
  {
    "label": "FLevelSequenceSpawnRegister",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLevelSequenceSpawnRegister"
  },
  {
    "label": "FViewportClient",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FViewportClient"
  },
  {
    "label": "UCameraComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UCameraComponent"
  },
  {
    "label": "FLevelSequencePlayerSnapshot",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLevelSequencePlayerSnapshot"
  },
  {
    "label": "ULevelSequencePlayer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULevelSequencePlayer"
  },
  {
    "label": "DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Engine / EngineTypes . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / Object . h \" # include \" UObject / ScriptMacros . h \" # include \" Evaluation / CameraCutPlaybackCapability . h \" # include \" Evaluation / MovieScenePlayback . h \" # include \" Evaluation / MovieSceneEvaluationTemplateInstance . h \" # include \" Evaluation / PersistentEvaluationData . h \" # include \" MovieSceneSequencePlayer . h \" # include \" Misc / QualifiedFrameTime . h \" # include \" LevelSequence . h \" # include \" LevelSequenceCameraSettings . h \" # include \" WorldPartition / WorldPartitionActorContainerID . h \" # include \" LevelSequencePlayer . generated . h \" class AActor ; class ALevelSequenceActor ; class FLevelSequenceSpawnRegister ; class FViewportClient ; class UCameraComponent ;)",
    "insertText": "DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FOnLevelSequencePlayerCameraCutEvent , UCameraComponent*, CameraComponent)"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "USTRUCT(BlueprintType)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() UPROPERTY(VisibleAnywhere, BlueprintReadOnly, Category=\"General\")"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "UCLASS(BlueprintType, MinimalAPI)"
  },
  {
    "label": "ULevelSequencePlayer()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "ULevelSequencePlayer(const FObjectInitializer&)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() LEVELSEQUENCE_API void Initialize(ULevelSequence* InLevelSequence, ULevel* InLevel, const FLevelSequenceCameraSettings& InCameraSettings)"
  },
  {
    "label": "SetSourceActorContext()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSourceActorContext(UWorld* InStreamingWorld, FActorContainerID InContainerID, FTopLevelAssetPath InSourceAssetPath)"
  },
  {
    "label": "GetPlaybackContext()",
    "kind": "Method",
    "detail": "Function (} public : UObject*)",
    "insertText": "GetPlaybackContext()"
  },
  {
    "label": "GetEventContexts()",
    "kind": "Method",
    "detail": "Function (TArray<UObject*>)",
    "insertText": "GetEventContexts()"
  },
  {
    "label": "RewindForReplay()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RewindForReplay()"
  },
  {
    "label": "ResolveBoundObjects()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "ResolveBoundObjects(UE::UniversalObjectLocator::FResolveParams& ResolveParams, const FGuid& InBindingId, FMovieSceneSequenceID SequenceID, UMovieSceneSequence& Sequence, TArray<UObject*, TInlineAllocator<1>>& OutObjects)"
  },
  {
    "label": "InitializeRootInstance()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeRootInstance(TSharedRef<UE::MovieScene::FSharedPlaybackState> NewSharedPlaybackState)"
  },
  {
    "label": "CanPlay()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanPlay()"
  },
  {
    "label": "OnStartedPlaying()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnStartedPlaying()"
  },
  {
    "label": "OnStopped()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnStopped()"
  },
  {
    "label": "UpdateMovieSceneInstance()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateMovieSceneInstance(FMovieSceneEvaluationRange InRange, EMovieScenePlayerStatus::Type PlayerStatus, const FMovieSceneUpdateArgs& Args)"
  },
  {
    "label": "ShouldUpdateCameraCut()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldUpdateCameraCut()"
  },
  {
    "label": "GetCameraBlendPlayRate()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetCameraBlendPlayRate()"
  },
  {
    "label": "GetAspectRatioAxisConstraintOverride()",
    "kind": "Method",
    "detail": "Function (TOptional<EAspectRatioAxisConstraint>)",
    "insertText": "GetAspectRatioAxisConstraintOverride()"
  },
  {
    "label": "OnCameraCutUpdated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnCameraCutUpdated(const UE::MovieScene::FOnCameraCutUpdatedParams& Params)"
  },
  {
    "label": "GetEventContexts()",
    "kind": "Method",
    "detail": "Function (public : void)",
    "insertText": "GetEventContexts(UWorld& InWorld, TArray<UObject*>& OutContexts)"
  },
  {
    "label": "TakeFrameSnapshot()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TakeFrameSnapshot(FLevelSequencePlayerSnapshot& OutSnapshot)"
  },
  {
    "label": "SetSnapshotOffsetFrames()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSnapshotOffsetFrames(int32 InFrameOffset)"
  },
  {
    "label": "int32()",
    "kind": "Method",
    "detail": "Function (SnapshotOffsetTime = TOptional<)",
    "insertText": "int32(InFrameOffset)"
  },
  {
    "label": "EnableCinematicMode()",
    "kind": "Method",
    "detail": "Function (} private : void)",
    "insertText": "EnableCinematicMode(bool bEnable)"
  },
  {
    "label": "InitializeLevelSequenceRootInstance()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeLevelSequenceRootInstance(TSharedRef<UE::MovieScene::FSharedPlaybackState> NewSharedPlaybackState)"
  }
]