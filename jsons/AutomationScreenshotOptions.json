[
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FComparisonToleranceAmount",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FComparisonToleranceAmount"
  },
  {
    "label": "FAutomationScreenshotOptions",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAutomationScreenshotOptions"
  },
  {
    "label": "UENUM()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" AutomationViewSettings . h \" # include \" AutomationScreenshotOptions . generated . h \")",
    "insertText": "UENUM(BlueprintType)"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (Zero,Low,Medium,High,Custom } ;)",
    "insertText": "USTRUCT(BlueprintType)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: FComparisonToleranceAmount() : Red(0) , Green(0) , Blue(0) , Alpha(0) , MinBrightness(0) , MaxBrightness(255)"
  },
  {
    "label": "FComparisonToleranceAmount()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FComparisonToleranceAmount(uint8 R, uint8 G, uint8 B, uint8 A, uint8 InMinBrightness, uint8 InMaxBrightness) : Red(R) , Green(G) , Blue(B) , Alpha(A) , MinBrightness(InMinBrightness) , MaxBrightness(InMaxBrightness)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: FAutomationScreenshotOptions() : Resolution(ForceInit) , Delay(0.2f) , FrameDelay(5) , bOverride_OverrideTimeTo(false) , OverrideTimeTo(0.0f) , bDisableNoisyRenderingFeatures(true) , bDisableTonemapping(true) , ViewSettings(nullptr) , VisualizeBuffer(NAME_None) , Tolerance(EComparisonTolerance::Zero) , ToleranceAmount() , MaximumLocalError(0.10f) , MaximumGlobalError(0.02f) , bIgnoreAntiAliasing(true) , bIgnoreColors(false)"
  },
  {
    "label": "FAutomationScreenshotOptions()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FAutomationScreenshotOptions(EComparisonTolerance InTolerance) : Resolution(ForceInit) , Delay(0.2f) , FrameDelay(5) , bOverride_OverrideTimeTo(false) , OverrideTimeTo(0.0f) , bDisableNoisyRenderingFeatures(true) , bDisableTonemapping(true) , ViewSettings(nullptr) , VisualizeBuffer(NAME_None) , Tolerance(InTolerance) , ToleranceAmount() , MaximumLocalError(0.10f) , MaximumGlobalError(0.02f) , bIgnoreAntiAliasing(true) , bIgnoreColors(false)"
  },
  {
    "label": "SetToleranceAmounts()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetToleranceAmounts(InTolerance)"
  },
  {
    "label": "SetToleranceAmounts()",
    "kind": "Method",
    "detail": "Function (public : void)",
    "insertText": "SetToleranceAmounts(EComparisonTolerance InTolerance)"
  },
  {
    "label": "FComparisonToleranceAmount()",
    "kind": "Method",
    "detail": "Function (break ; case EComparisonTolerance::Low : ToleranceAmount =)",
    "insertText": "FComparisonToleranceAmount(16, 16, 16, 16, 16, 240)"
  },
  {
    "label": "FComparisonToleranceAmount()",
    "kind": "Method",
    "detail": "Function (break ; case EComparisonTolerance::Medium : ToleranceAmount =)",
    "insertText": "FComparisonToleranceAmount(24, 24, 24, 24, 24, 220)"
  },
  {
    "label": "FComparisonToleranceAmount()",
    "kind": "Method",
    "detail": "Function (break ; case EComparisonTolerance::High : ToleranceAmount =)",
    "insertText": "FComparisonToleranceAmount(32, 32, 32, 32, 64, 96)"
  }
]