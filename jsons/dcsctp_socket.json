[
  {
    "label": "manages",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "manages"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "DcSctpSocket",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DcSctpSocket"
  },
  {
    "label": "ConnectParameters",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ConnectParameters"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "ToString()",
    "kind": "Method",
    "detail": "Function (absl::string_view)",
    "insertText": "ToString(DcSctpSocket::State state)"
  },
  {
    "label": "CreateTransmissionControlBlock()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateTransmissionControlBlock(const Capabilities& capabilities,\n                                      VerificationTag my_verification_tag,\n                                      TSN my_initial_tsn,\n                                      VerificationTag peer_verification_tag,\n                                      TSN peer_initial_tsn,\n                                      size_t a_rwnd,\n                                      TieTag tie_tag)"
  },
  {
    "label": "SetState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetState(State state, absl::string_view reason)"
  },
  {
    "label": "MakeConnectionParameters()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MakeConnectionParameters()"
  },
  {
    "label": "InternalClose()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InternalClose(ErrorKind error, absl::string_view message)"
  },
  {
    "label": "CloseConnectionBecauseOfTooManyTransmissionErrors()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CloseConnectionBecauseOfTooManyTransmissionErrors()"
  },
  {
    "label": "OnInitTimerExpiry()",
    "kind": "Method",
    "detail": "Function (absl::optional<DurationMs>)",
    "insertText": "OnInitTimerExpiry()"
  },
  {
    "label": "OnCookieTimerExpiry()",
    "kind": "Method",
    "detail": "Function (absl::optional<DurationMs>)",
    "insertText": "OnCookieTimerExpiry()"
  },
  {
    "label": "OnShutdownTimerExpiry()",
    "kind": "Method",
    "detail": "Function (absl::optional<DurationMs>)",
    "insertText": "OnShutdownTimerExpiry()"
  },
  {
    "label": "OnSentPacket()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSentPacket(rtc::ArrayView<const uint8_t> packet,\n                    SendPacketStatus status)"
  },
  {
    "label": "MaybeSendShutdownOrAck()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MaybeSendShutdownOrAck()"
  },
  {
    "label": "MaybeSendShutdownOnPacketReceived()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MaybeSendShutdownOnPacketReceived(const SctpPacket& packet)"
  },
  {
    "label": "MaybeSendResetStreamsRequest()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MaybeSendResetStreamsRequest()"
  },
  {
    "label": "SendInit()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SendInit()"
  },
  {
    "label": "SendShutdown()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SendShutdown()"
  },
  {
    "label": "SendShutdownAck()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SendShutdownAck()"
  },
  {
    "label": "ValidatePacket()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ValidatePacket(const SctpPacket& packet)"
  },
  {
    "label": "DebugPrintOutgoing()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DebugPrintOutgoing(rtc::ArrayView<const uint8_t> payload)"
  },
  {
    "label": "DeliverReassembledMessages()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeliverReassembledMessages()"
  },
  {
    "label": "ValidateHasTCB()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ValidateHasTCB()"
  },
  {
    "label": "ReportFailedToParseChunk()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReportFailedToParseChunk(int chunk_type)"
  },
  {
    "label": "HandleUnrecognizedChunk()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HandleUnrecognizedChunk(const SctpPacket::ChunkDescriptor& descriptor)"
  },
  {
    "label": "Dispatch()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Dispatch(const CommonHeader& header,\n                const SctpPacket::ChunkDescriptor& descriptor)"
  },
  {
    "label": "HandleData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleData(const CommonHeader& header,\n                  const SctpPacket::ChunkDescriptor& descriptor)"
  },
  {
    "label": "HandleIData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleIData(const CommonHeader& header,\n                   const SctpPacket::ChunkDescriptor& descriptor)"
  },
  {
    "label": "HandleDataCommon()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleDataCommon(AnyDataChunk& chunk)"
  },
  {
    "label": "HandleInit()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleInit(const CommonHeader& header,\n                  const SctpPacket::ChunkDescriptor& descriptor)"
  },
  {
    "label": "HandleInitAck()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleInitAck(const CommonHeader& header,\n                     const SctpPacket::ChunkDescriptor& descriptor)"
  },
  {
    "label": "HandleSack()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleSack(const CommonHeader& header,\n                  const SctpPacket::ChunkDescriptor& descriptor)"
  },
  {
    "label": "HandleHeartbeatRequest()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleHeartbeatRequest(const CommonHeader& header,\n                              const SctpPacket::ChunkDescriptor& descriptor)"
  },
  {
    "label": "HandleHeartbeatAck()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleHeartbeatAck(const CommonHeader& header,\n                          const SctpPacket::ChunkDescriptor& descriptor)"
  },
  {
    "label": "HandleAbort()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleAbort(const CommonHeader& header,\n                   const SctpPacket::ChunkDescriptor& descriptor)"
  },
  {
    "label": "HandleError()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleError(const CommonHeader& header,\n                   const SctpPacket::ChunkDescriptor& descriptor)"
  },
  {
    "label": "HandleCookieEcho()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleCookieEcho(const CommonHeader& header,\n                        const SctpPacket::ChunkDescriptor& descriptor)"
  },
  {
    "label": "HandleCookieEchoWithTCB()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HandleCookieEchoWithTCB(const CommonHeader& header,\n                               const StateCookie& cookie)"
  },
  {
    "label": "HandleCookieAck()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleCookieAck(const CommonHeader& header,\n                       const SctpPacket::ChunkDescriptor& descriptor)"
  },
  {
    "label": "HandleShutdown()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleShutdown(const CommonHeader& header,\n                      const SctpPacket::ChunkDescriptor& descriptor)"
  },
  {
    "label": "HandleShutdownAck()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleShutdownAck(const CommonHeader& header,\n                         const SctpPacket::ChunkDescriptor& descriptor)"
  },
  {
    "label": "HandleForwardTsn()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleForwardTsn(const CommonHeader& header,\n                        const SctpPacket::ChunkDescriptor& descriptor)"
  },
  {
    "label": "HandleIForwardTsn()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleIForwardTsn(const CommonHeader& header,\n                         const SctpPacket::ChunkDescriptor& descriptor)"
  },
  {
    "label": "HandleReconfig()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleReconfig(const CommonHeader& header,\n                      const SctpPacket::ChunkDescriptor& descriptor)"
  },
  {
    "label": "HandleForwardTsnCommon()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleForwardTsnCommon(const AnyForwardTsnChunk& chunk)"
  },
  {
    "label": "HandleShutdownComplete()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleShutdownComplete(const CommonHeader& header,\n                              const SctpPacket::ChunkDescriptor& descriptor)"
  }
]