[
  {
    "label": "FEvent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEvent"
  },
  {
    "label": "FRunnableThread",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRunnableThread"
  },
  {
    "label": "FHittestGrid",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FHittestGrid"
  },
  {
    "label": "FSlateRenderer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateRenderer"
  },
  {
    "label": "SVirtualWindow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SVirtualWindow"
  },
  {
    "label": "SWindow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWindow"
  },
  {
    "label": "FPreLoadScreenSlateThreadTask",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPreLoadScreenSlateThreadTask"
  },
  {
    "label": "FPreLoadScreenSlateSynchMechanism",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPreLoadScreenSlateSynchMechanism"
  },
  {
    "label": "FPreLoadSlateWidgetRenderer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPreLoadSlateWidgetRenderer"
  },
  {
    "label": "FPreLoadScreenSlateThreadTask()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" HAL / Runnable . h \" # include \" Misc / ScopeLock . h \" # include \" HAL / PlatformApplicationMisc . h \" # include \" RHI . h \" # include \" RHIResources . h \" class FEvent ; class FRunnableThread ; class FHittestGrid ; class FSlateRenderer ; class SVirtualWindow ; class SWindow ; class FPreLoadScreenSlateThreadTask : public FRunnable { public :)",
    "insertText": "FPreLoadScreenSlateThreadTask(class FPreLoadScreenSlateSynchMechanism& InSyncMechanism) : SyncMechanism(&InSyncMechanism)"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "Init()"
  },
  {
    "label": "Run()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "Run()"
  },
  {
    "label": "Exit()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Exit()"
  },
  {
    "label": "FPreLoadSlateWidgetRenderer()",
    "kind": "Method",
    "detail": "Function (private : class FPreLoadScreenSlateSynchMechanism* SyncMechanism ; } ; class FPreLoadSlateWidgetRenderer { public :)",
    "insertText": "FPreLoadSlateWidgetRenderer(TSharedPtr<SWindow> InMainWindow, TSharedPtr<SVirtualWindow> InVirtualRenderWindowWindow, FSlateRenderer* InRenderer)"
  },
  {
    "label": "DrawWindow()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DrawWindow(float DeltaTime)"
  },
  {
    "label": "GetMainWindow_GameThread()",
    "kind": "Method",
    "detail": "Function (SWindow*)",
    "insertText": "GetMainWindow_GameThread()"
  },
  {
    "label": "FPreLoadScreenSlateSynchMechanism()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FPreLoadScreenSlateSynchMechanism()"
  },
  {
    "label": "FPreLoadScreenSlateSynchMechanism()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FPreLoadScreenSlateSynchMechanism(const FPreLoadScreenSlateSynchMechanism&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FPreLoadScreenSlateSynchMechanism&)",
    "insertText": "operator(const FPreLoadScreenSlateSynchMechanism&)"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Initialize()"
  },
  {
    "label": "DestroySlateThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroySlateThread()"
  },
  {
    "label": "IsSlateMainLoopRunning_AnyThread()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsSlateMainLoopRunning_AnyThread()"
  },
  {
    "label": "HandleWindowBeingDestroyed()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "HandleWindowBeingDestroyed(const SWindow& WindowBeingDestroyed)"
  },
  {
    "label": "RunMainLoop_SlateThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RunMainLoop_SlateThread()"
  }
]