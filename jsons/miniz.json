[
  {
    "label": "members",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "members"
  },
  {
    "label": "mz_internal_state",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "mz_internal_state"
  },
  {
    "label": "mz_stream_s",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "mz_stream_s"
  },
  {
    "label": "mz_internal_state",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "mz_internal_state"
  },
  {
    "label": "mz_dummy_time_t_tag",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "mz_dummy_time_t_tag"
  },
  {
    "label": "tinfl_decompressor_tag",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "tinfl_decompressor_tag"
  },
  {
    "label": "tinfl_decompressor_tag",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "tinfl_decompressor_tag"
  },
  {
    "label": "tinfl_decompressor_tag",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "tinfl_decompressor_tag"
  },
  {
    "label": "mz_zip_internal_state_tag",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "mz_zip_internal_state_tag"
  },
  {
    "label": "mz_zip_internal_state_tag",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "mz_zip_internal_state_tag"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "to"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "to"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "is"
  },
  {
    "label": "mz_zip_reader_locate_file()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "mz_zip_reader_locate_file(mz_zip_archive *pZip, const char *pName,\n   const char *pComment, mz_uint flags)"
  },
  {
    "label": "mz_zip_add_mem_to_archive_file_in_place()",
    "kind": "Method",
    "detail": "Function (mz_bool)",
    "insertText": "mz_zip_add_mem_to_archive_file_in_place(const char *pZip_filename,\n   const char *pArchive_name, const void *pBuf, size_t buf_size, const void\n   *pComment, mz_uint16 comment_size, mz_uint level_and_flags)"
  },
  {
    "label": "mz_free()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "mz_free(void *p)"
  },
  {
    "label": "mz_adler32()",
    "kind": "Method",
    "detail": "Function (mz_ulong)",
    "insertText": "mz_adler32(mz_ulong adler, const unsigned char *ptr, size_t buf_len)"
  },
  {
    "label": "mz_crc32()",
    "kind": "Method",
    "detail": "Function (mz_ulong)",
    "insertText": "mz_crc32(mz_ulong crc, const unsigned char *ptr, size_t buf_len)"
  },
  {
    "label": "mz_deflateInit()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "mz_deflateInit(mz_streamp pStream, int level)"
  },
  {
    "label": "mz_deflateInit2()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "mz_deflateInit2(mz_streamp pStream, int level, int method, int window_bits,\n                    int mem_level, int strategy)"
  },
  {
    "label": "mz_deflateReset()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "mz_deflateReset(mz_streamp pStream)"
  },
  {
    "label": "mz_deflate()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "mz_deflate(mz_streamp pStream, int flush)"
  },
  {
    "label": "mz_deflateEnd()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "mz_deflateEnd(mz_streamp pStream)"
  },
  {
    "label": "mz_deflateBound()",
    "kind": "Method",
    "detail": "Function (mz_ulong)",
    "insertText": "mz_deflateBound(mz_streamp pStream, mz_ulong source_len)"
  },
  {
    "label": "mz_compress()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "mz_compress(unsigned char *pDest, mz_ulong *pDest_len,\n                const unsigned char *pSource, mz_ulong source_len)"
  },
  {
    "label": "mz_compress2()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "mz_compress2(unsigned char *pDest, mz_ulong *pDest_len,\n                 const unsigned char *pSource, mz_ulong source_len, int level)"
  },
  {
    "label": "mz_compressBound()",
    "kind": "Method",
    "detail": "Function (mz_ulong)",
    "insertText": "mz_compressBound(mz_ulong source_len)"
  },
  {
    "label": "mz_inflateInit()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "mz_inflateInit(mz_streamp pStream)"
  },
  {
    "label": "mz_inflateInit2()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "mz_inflateInit2(mz_streamp pStream, int window_bits)"
  },
  {
    "label": "mz_inflateReset()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "mz_inflateReset(mz_streamp pStream)"
  },
  {
    "label": "mz_inflate()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "mz_inflate(mz_streamp pStream, int flush)"
  },
  {
    "label": "mz_inflateEnd()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "mz_inflateEnd(mz_streamp pStream)"
  },
  {
    "label": "mz_uncompress()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "mz_uncompress(unsigned char *pDest, mz_ulong *pDest_len,\n                  const unsigned char *pSource, mz_ulong source_len)"
  },
  {
    "label": "miniz_def_free_func()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "miniz_def_free_func(void *opaque, void *address)"
  },
  {
    "label": "tdefl_compress_mem_to_mem()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "tdefl_compress_mem_to_mem(void *pOut_buf, size_t out_buf_len,\n                                 const void *pSrc_buf, size_t src_buf_len,\n                                 int flags)"
  },
  {
    "label": "tdefl_compress_mem_to_output()",
    "kind": "Method",
    "detail": "Function (mz_bool)",
    "insertText": "tdefl_compress_mem_to_output(const void *pBuf, size_t buf_len,\n                                     tdefl_put_buf_func_ptr pPut_buf_func,\n                                     void *pPut_buf_user, int flags)"
  },
  {
    "label": "tdefl_init()",
    "kind": "Method",
    "detail": "Function (tdefl_status)",
    "insertText": "tdefl_init(tdefl_compressor *d,\n                        tdefl_put_buf_func_ptr pPut_buf_func,\n                        void *pPut_buf_user, int flags)"
  },
  {
    "label": "tdefl_compress()",
    "kind": "Method",
    "detail": "Function (tdefl_status)",
    "insertText": "tdefl_compress(tdefl_compressor *d, const void *pIn_buf,\n                            size_t *pIn_buf_size, void *pOut_buf,\n                            size_t *pOut_buf_size, tdefl_flush flush)"
  },
  {
    "label": "tdefl_compress_buffer()",
    "kind": "Method",
    "detail": "Function (tdefl_status)",
    "insertText": "tdefl_compress_buffer(tdefl_compressor *d, const void *pIn_buf,\n                                   size_t in_buf_size, tdefl_flush flush)"
  },
  {
    "label": "tdefl_get_prev_return_status()",
    "kind": "Method",
    "detail": "Function (tdefl_status)",
    "insertText": "tdefl_get_prev_return_status(tdefl_compressor *d)"
  },
  {
    "label": "tdefl_get_adler32()",
    "kind": "Method",
    "detail": "Function (mz_uint32)",
    "insertText": "tdefl_get_adler32(tdefl_compressor *d)"
  },
  {
    "label": "tdefl_create_comp_flags_from_zip_params()",
    "kind": "Method",
    "detail": "Function (mz_uint)",
    "insertText": "tdefl_create_comp_flags_from_zip_params(int level, int window_bits,\n                                                int strategy)"
  },
  {
    "label": "tdefl_compressor_free()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "tdefl_compressor_free(tdefl_compressor *pComp)"
  },
  {
    "label": "tinfl_decompress_mem_to_mem()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "tinfl_decompress_mem_to_mem(void *pOut_buf, size_t out_buf_len,\n                                   const void *pSrc_buf, size_t src_buf_len,\n                                   int flags)"
  },
  {
    "label": "tinfl_decompress_mem_to_callback()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "tinfl_decompress_mem_to_callback(const void *pIn_buf, size_t *pIn_buf_size,\n                                     tinfl_put_buf_func_ptr pPut_buf_func,\n                                     void *pPut_buf_user, int flags)"
  },
  {
    "label": "tinfl_decompressor_free()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "tinfl_decompressor_free(tinfl_decompressor *pDecomp)"
  },
  {
    "label": "tinfl_decompress()",
    "kind": "Method",
    "detail": "Function (tinfl_status)",
    "insertText": "tinfl_decompress(tinfl_decompressor *r,\n                              const mz_uint8 *pIn_buf_next,\n                              size_t *pIn_buf_size, mz_uint8 *pOut_buf_start,\n                              mz_uint8 *pOut_buf_next, size_t *pOut_buf_size,\n                              const mz_uint32 decomp_flags)"
  },
  {
    "label": "mz_zip_reader_init()",
    "kind": "Method",
    "detail": "Function (mz_bool)",
    "insertText": "mz_zip_reader_init(mz_zip_archive *pZip, mz_uint64 size, mz_uint flags)"
  },
  {
    "label": "mz_zip_reader_init_mem()",
    "kind": "Method",
    "detail": "Function (mz_bool)",
    "insertText": "mz_zip_reader_init_mem(mz_zip_archive *pZip, const void *pMem,\n                               size_t size, mz_uint flags)"
  },
  {
    "label": "mz_zip_reader_init_file()",
    "kind": "Method",
    "detail": "Function (mz_bool)",
    "insertText": "mz_zip_reader_init_file(mz_zip_archive *pZip, const char *pFilename,\n                                mz_uint32 flags)"
  },
  {
    "label": "mz_zip_reader_init_file_v2()",
    "kind": "Method",
    "detail": "Function (mz_bool)",
    "insertText": "mz_zip_reader_init_file_v2(mz_zip_archive *pZip, const char *pFilename,\n                                   mz_uint flags, mz_uint64 file_start_ofs,\n                                   mz_uint64 archive_size)"
  },
  {
    "label": "mz_zip_reader_init_cfile()",
    "kind": "Method",
    "detail": "Function (mz_bool)",
    "insertText": "mz_zip_reader_init_cfile(mz_zip_archive *pZip, MZ_FILE *pFile,\n                                 mz_uint64 archive_size, mz_uint flags)"
  },
  {
    "label": "mz_zip_reader_end()",
    "kind": "Method",
    "detail": "Function (mz_bool)",
    "insertText": "mz_zip_reader_end(mz_zip_archive *pZip)"
  },
  {
    "label": "mz_zip_zero_struct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "mz_zip_zero_struct(mz_zip_archive *pZip)"
  },
  {
    "label": "mz_zip_get_mode()",
    "kind": "Method",
    "detail": "Function (mz_zip_mode)",
    "insertText": "mz_zip_get_mode(mz_zip_archive *pZip)"
  },
  {
    "label": "mz_zip_get_type()",
    "kind": "Method",
    "detail": "Function (mz_zip_type)",
    "insertText": "mz_zip_get_type(mz_zip_archive *pZip)"
  },
  {
    "label": "mz_zip_reader_get_num_files()",
    "kind": "Method",
    "detail": "Function (mz_uint)",
    "insertText": "mz_zip_reader_get_num_files(mz_zip_archive *pZip)"
  },
  {
    "label": "mz_zip_get_archive_size()",
    "kind": "Method",
    "detail": "Function (mz_uint64)",
    "insertText": "mz_zip_get_archive_size(mz_zip_archive *pZip)"
  },
  {
    "label": "mz_zip_get_archive_file_start_offset()",
    "kind": "Method",
    "detail": "Function (mz_uint64)",
    "insertText": "mz_zip_get_archive_file_start_offset(mz_zip_archive *pZip)"
  },
  {
    "label": "mz_zip_read_archive_data()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "mz_zip_read_archive_data(mz_zip_archive *pZip, mz_uint64 file_ofs,\n                                void *pBuf, size_t n)"
  },
  {
    "label": "mz_zip_set_last_error()",
    "kind": "Method",
    "detail": "Function (mz_zip_error)",
    "insertText": "mz_zip_set_last_error(mz_zip_archive *pZip, mz_zip_error err_num)"
  },
  {
    "label": "mz_zip_peek_last_error()",
    "kind": "Method",
    "detail": "Function (mz_zip_error)",
    "insertText": "mz_zip_peek_last_error(mz_zip_archive *pZip)"
  },
  {
    "label": "mz_zip_clear_last_error()",
    "kind": "Method",
    "detail": "Function (mz_zip_error)",
    "insertText": "mz_zip_clear_last_error(mz_zip_archive *pZip)"
  },
  {
    "label": "mz_zip_get_last_error()",
    "kind": "Method",
    "detail": "Function (mz_zip_error)",
    "insertText": "mz_zip_get_last_error(mz_zip_archive *pZip)"
  },
  {
    "label": "mz_zip_reader_is_file_a_directory()",
    "kind": "Method",
    "detail": "Function (mz_bool)",
    "insertText": "mz_zip_reader_is_file_a_directory(mz_zip_archive *pZip,\n                                          mz_uint file_index)"
  },
  {
    "label": "mz_zip_reader_is_file_encrypted()",
    "kind": "Method",
    "detail": "Function (mz_bool)",
    "insertText": "mz_zip_reader_is_file_encrypted(mz_zip_archive *pZip,\n                                        mz_uint file_index)"
  },
  {
    "label": "mz_zip_reader_is_file_supported()",
    "kind": "Method",
    "detail": "Function (mz_bool)",
    "insertText": "mz_zip_reader_is_file_supported(mz_zip_archive *pZip,\n                                        mz_uint file_index)"
  },
  {
    "label": "mz_zip_reader_get_filename()",
    "kind": "Method",
    "detail": "Function (mz_uint)",
    "insertText": "mz_zip_reader_get_filename(mz_zip_archive *pZip, mz_uint file_index,\n                                   char *pFilename, mz_uint filename_buf_size)"
  },
  {
    "label": "mz_zip_reader_locate_file()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "mz_zip_reader_locate_file(mz_zip_archive *pZip, const char *pName,\n                              const char *pComment, mz_uint flags)"
  },
  {
    "label": "mz_zip_reader_locate_file_v2()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "mz_zip_reader_locate_file_v2(mz_zip_archive *pZip, const char *pName,\n                                 const char *pComment, mz_uint flags,\n                                 mz_uint32 *file_index)"
  },
  {
    "label": "mz_zip_reader_file_stat()",
    "kind": "Method",
    "detail": "Function (mz_bool)",
    "insertText": "mz_zip_reader_file_stat(mz_zip_archive *pZip, mz_uint file_index,\n                                mz_zip_archive_file_stat *pStat)"
  },
  {
    "label": "mz_zip_is_zip64()",
    "kind": "Method",
    "detail": "Function (mz_bool)",
    "insertText": "mz_zip_is_zip64(mz_zip_archive *pZip)"
  },
  {
    "label": "mz_zip_get_central_dir_size()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "mz_zip_get_central_dir_size(mz_zip_archive *pZip)"
  },
  {
    "label": "mz_zip_reader_extract_to_mem_no_alloc()",
    "kind": "Method",
    "detail": "Function (mz_bool)",
    "insertText": "mz_zip_reader_extract_to_mem_no_alloc(mz_zip_archive *pZip,\n                                              mz_uint file_index, void *pBuf,\n                                              size_t buf_size, mz_uint flags,\n                                              void *pUser_read_buf,\n                                              size_t user_read_buf_size)"
  },
  {
    "label": "mz_zip_reader_extract_file_to_mem_no_alloc()",
    "kind": "Method",
    "detail": "Function (mz_bool)",
    "insertText": "mz_zip_reader_extract_file_to_mem_no_alloc(\n    mz_zip_archive *pZip, const char *pFilename, void *pBuf, size_t buf_size,\n    mz_uint flags, void *pUser_read_buf, size_t user_read_buf_size)"
  },
  {
    "label": "mz_zip_reader_extract_to_mem()",
    "kind": "Method",
    "detail": "Function (mz_bool)",
    "insertText": "mz_zip_reader_extract_to_mem(mz_zip_archive *pZip, mz_uint file_index,\n                                     void *pBuf, size_t buf_size,\n                                     mz_uint flags)"
  },
  {
    "label": "mz_zip_reader_extract_file_to_mem()",
    "kind": "Method",
    "detail": "Function (mz_bool)",
    "insertText": "mz_zip_reader_extract_file_to_mem(mz_zip_archive *pZip,\n                                          const char *pFilename, void *pBuf,\n                                          size_t buf_size, mz_uint flags)"
  },
  {
    "label": "mz_zip_reader_extract_to_callback()",
    "kind": "Method",
    "detail": "Function (mz_bool)",
    "insertText": "mz_zip_reader_extract_to_callback(mz_zip_archive *pZip,\n                                          mz_uint file_index,\n                                          mz_file_write_func pCallback,\n                                          void *pOpaque, mz_uint flags)"
  },
  {
    "label": "mz_zip_reader_extract_file_to_callback()",
    "kind": "Method",
    "detail": "Function (mz_bool)",
    "insertText": "mz_zip_reader_extract_file_to_callback(mz_zip_archive *pZip,\n                                               const char *pFilename,\n                                               mz_file_write_func pCallback,\n                                               void *pOpaque, mz_uint flags)"
  },
  {
    "label": "mz_zip_reader_extract_iter_read()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "mz_zip_reader_extract_iter_read(mz_zip_reader_extract_iter_state *pState,\n                                       void *pvBuf, size_t buf_size)"
  },
  {
    "label": "mz_zip_reader_extract_iter_free()",
    "kind": "Method",
    "detail": "Function (mz_bool)",
    "insertText": "mz_zip_reader_extract_iter_free(mz_zip_reader_extract_iter_state *pState)"
  },
  {
    "label": "mz_zip_reader_extract_to_file()",
    "kind": "Method",
    "detail": "Function (mz_bool)",
    "insertText": "mz_zip_reader_extract_to_file(mz_zip_archive *pZip, mz_uint file_index,\n                                      const char *pDst_filename, mz_uint flags)"
  },
  {
    "label": "mz_zip_reader_extract_file_to_file()",
    "kind": "Method",
    "detail": "Function (mz_bool)",
    "insertText": "mz_zip_reader_extract_file_to_file(mz_zip_archive *pZip,\n                                           const char *pArchive_filename,\n                                           const char *pDst_filename,\n                                           mz_uint flags)"
  },
  {
    "label": "mz_zip_reader_extract_to_cfile()",
    "kind": "Method",
    "detail": "Function (mz_bool)",
    "insertText": "mz_zip_reader_extract_to_cfile(mz_zip_archive *pZip, mz_uint file_index,\n                                       MZ_FILE *File, mz_uint flags)"
  },
  {
    "label": "mz_zip_reader_extract_file_to_cfile()",
    "kind": "Method",
    "detail": "Function (mz_bool)",
    "insertText": "mz_zip_reader_extract_file_to_cfile(mz_zip_archive *pZip,\n                                            const char *pArchive_filename,\n                                            MZ_FILE *pFile, mz_uint flags)"
  },
  {
    "label": "mz_zip_streaming_extract_begin()",
    "kind": "Method",
    "detail": "Function (mz_zip_streaming_extract_state_ptr)",
    "insertText": "mz_zip_streaming_extract_begin(mz_zip_archive *pZip, mz_uint file_index, mz_uint flags)"
  },
  {
    "label": "mz_zip_streaming_extract_get_size()",
    "kind": "Method",
    "detail": "Function (uint64_t)",
    "insertText": "mz_zip_streaming_extract_get_size(mz_zip_archive *pZip, mz_zip_streaming_extract_state_ptr pState)"
  },
  {
    "label": "mz_zip_streaming_extract_get_cur_ofs()",
    "kind": "Method",
    "detail": "Function (uint64_t)",
    "insertText": "mz_zip_streaming_extract_get_cur_ofs(mz_zip_archive *pZip, mz_zip_streaming_extract_state_ptr pState)"
  },
  {
    "label": "mz_zip_streaming_extract_seek()",
    "kind": "Method",
    "detail": "Function (mz_bool)",
    "insertText": "mz_zip_streaming_extract_seek(mz_zip_archive *pZip, mz_zip_streaming_extract_state_ptr pState, uint64_t new_ofs)"
  },
  {
    "label": "mz_zip_streaming_extract_read()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "mz_zip_streaming_extract_read(mz_zip_archive *pZip, mz_zip_streaming_extract_state_ptr pState, void *pBuf, size_t buf_size)"
  },
  {
    "label": "mz_zip_streaming_extract_end()",
    "kind": "Method",
    "detail": "Function (mz_bool)",
    "insertText": "mz_zip_streaming_extract_end(mz_zip_archive *pZip, mz_zip_streaming_extract_state_ptr pState)"
  },
  {
    "label": "mz_zip_validate_file()",
    "kind": "Method",
    "detail": "Function (mz_bool)",
    "insertText": "mz_zip_validate_file(mz_zip_archive *pZip, mz_uint file_index,\n                             mz_uint flags)"
  },
  {
    "label": "mz_zip_validate_archive()",
    "kind": "Method",
    "detail": "Function (mz_bool)",
    "insertText": "mz_zip_validate_archive(mz_zip_archive *pZip, mz_uint flags)"
  },
  {
    "label": "mz_zip_validate_mem_archive()",
    "kind": "Method",
    "detail": "Function (mz_bool)",
    "insertText": "mz_zip_validate_mem_archive(const void *pMem, size_t size,\n                                    mz_uint flags, mz_zip_error *pErr)"
  },
  {
    "label": "mz_zip_validate_file_archive()",
    "kind": "Method",
    "detail": "Function (mz_bool)",
    "insertText": "mz_zip_validate_file_archive(const char *pFilename, mz_uint flags,\n                                     mz_zip_error *pErr)"
  },
  {
    "label": "mz_zip_end()",
    "kind": "Method",
    "detail": "Function (mz_bool)",
    "insertText": "mz_zip_end(mz_zip_archive *pZip)"
  },
  {
    "label": "mz_zip_writer_init()",
    "kind": "Method",
    "detail": "Function (mz_bool)",
    "insertText": "mz_zip_writer_init(mz_zip_archive *pZip, mz_uint64 existing_size)"
  },
  {
    "label": "mz_zip_writer_init_v2()",
    "kind": "Method",
    "detail": "Function (mz_bool)",
    "insertText": "mz_zip_writer_init_v2(mz_zip_archive *pZip, mz_uint64 existing_size,\n                              mz_uint flags)"
  },
  {
    "label": "mz_zip_writer_init_heap()",
    "kind": "Method",
    "detail": "Function (mz_bool)",
    "insertText": "mz_zip_writer_init_heap(mz_zip_archive *pZip,\n                                size_t size_to_reserve_at_beginning,\n                                size_t initial_allocation_size)"
  },
  {
    "label": "mz_zip_writer_init_heap_v2()",
    "kind": "Method",
    "detail": "Function (mz_bool)",
    "insertText": "mz_zip_writer_init_heap_v2(mz_zip_archive *pZip,\n                                   size_t size_to_reserve_at_beginning,\n                                   size_t initial_allocation_size,\n                                   mz_uint flags)"
  },
  {
    "label": "mz_zip_writer_init_file()",
    "kind": "Method",
    "detail": "Function (mz_bool)",
    "insertText": "mz_zip_writer_init_file(mz_zip_archive *pZip, const char *pFilename,\n                                mz_uint64 size_to_reserve_at_beginning)"
  },
  {
    "label": "mz_zip_writer_init_file_v2()",
    "kind": "Method",
    "detail": "Function (mz_bool)",
    "insertText": "mz_zip_writer_init_file_v2(mz_zip_archive *pZip, const char *pFilename,\n                                   mz_uint64 size_to_reserve_at_beginning,\n                                   mz_uint flags)"
  },
  {
    "label": "mz_zip_writer_init_cfile()",
    "kind": "Method",
    "detail": "Function (mz_bool)",
    "insertText": "mz_zip_writer_init_cfile(mz_zip_archive *pZip, MZ_FILE *pFile,\n                                 mz_uint flags)"
  },
  {
    "label": "mz_zip_writer_init_from_reader()",
    "kind": "Method",
    "detail": "Function (mz_bool)",
    "insertText": "mz_zip_writer_init_from_reader(mz_zip_archive *pZip,\n                                       const char *pFilename)"
  },
  {
    "label": "mz_zip_writer_init_from_reader_v2()",
    "kind": "Method",
    "detail": "Function (mz_bool)",
    "insertText": "mz_zip_writer_init_from_reader_v2(mz_zip_archive *pZip,\n                                          const char *pFilename, mz_uint flags)"
  },
  {
    "label": "mz_zip_writer_add_mem()",
    "kind": "Method",
    "detail": "Function (mz_bool)",
    "insertText": "mz_zip_writer_add_mem(mz_zip_archive *pZip, const char *pArchive_name,\n                              const void *pBuf, size_t buf_size,\n                              mz_uint level_and_flags)"
  },
  {
    "label": "mz_zip_writer_add_mem_ex()",
    "kind": "Method",
    "detail": "Function (mz_bool)",
    "insertText": "mz_zip_writer_add_mem_ex(mz_zip_archive *pZip,\n                                 const char *pArchive_name, const void *pBuf,\n                                 size_t buf_size, const void *pComment,\n                                 mz_uint16 comment_size,\n                                 mz_uint level_and_flags, mz_uint64 uncomp_size,\n                                 mz_uint32 uncomp_crc32)"
  },
  {
    "label": "mz_zip_writer_add_mem_ex_v2()",
    "kind": "Method",
    "detail": "Function (mz_bool)",
    "insertText": "mz_zip_writer_add_mem_ex_v2(\n    mz_zip_archive *pZip, const char *pArchive_name, const void *pBuf,\n    size_t buf_size, const void *pComment, mz_uint16 comment_size,\n    mz_uint level_and_flags, mz_uint64 uncomp_size, mz_uint32 uncomp_crc32,\n    MZ_TIME_T *last_modified, const char *user_extra_data_local,\n    mz_uint user_extra_data_local_len, const char *user_extra_data_central,\n    mz_uint user_extra_data_central_len)"
  },
  {
    "label": "mz_zip_writer_add_read_buf_callback()",
    "kind": "Method",
    "detail": "Function (mz_bool)",
    "insertText": "mz_zip_writer_add_read_buf_callback(\n    mz_zip_archive *pZip, const char *pArchive_name,\n    mz_file_read_func read_callback, void *callback_opaque,\n    mz_uint64 size_to_add, const MZ_TIME_T *pFile_time, const void *pComment,\n    mz_uint16 comment_size, mz_uint level_and_flags,\n    const char *user_extra_data_local, mz_uint user_extra_data_local_len,\n    const char *user_extra_data_central, mz_uint user_extra_data_central_len)"
  },
  {
    "label": "mz_zip_writer_add_file()",
    "kind": "Method",
    "detail": "Function (mz_bool)",
    "insertText": "mz_zip_writer_add_file(mz_zip_archive *pZip, const char *pArchive_name,\n                               const char *pSrc_filename, const void *pComment,\n                               mz_uint16 comment_size, mz_uint level_and_flags)"
  },
  {
    "label": "mz_zip_writer_add_cfile()",
    "kind": "Method",
    "detail": "Function (mz_bool)",
    "insertText": "mz_zip_writer_add_cfile(\n    mz_zip_archive *pZip, const char *pArchive_name, MZ_FILE *pSrc_file,\n    mz_uint64 size_to_add, const MZ_TIME_T *pFile_time, const void *pComment,\n    mz_uint16 comment_size, mz_uint level_and_flags,\n    const char *user_extra_data_local, mz_uint user_extra_data_local_len,\n    const char *user_extra_data_central, mz_uint user_extra_data_central_len)"
  },
  {
    "label": "mz_zip_writer_add_from_zip_reader()",
    "kind": "Method",
    "detail": "Function (mz_bool)",
    "insertText": "mz_zip_writer_add_from_zip_reader(mz_zip_archive *pZip,\n                                          mz_zip_archive *pSource_zip,\n                                          mz_uint src_file_index)"
  },
  {
    "label": "mz_zip_writer_finalize_archive()",
    "kind": "Method",
    "detail": "Function (mz_bool)",
    "insertText": "mz_zip_writer_finalize_archive(mz_zip_archive *pZip)"
  },
  {
    "label": "mz_zip_writer_finalize_heap_archive()",
    "kind": "Method",
    "detail": "Function (mz_bool)",
    "insertText": "mz_zip_writer_finalize_heap_archive(mz_zip_archive *pZip, void **ppBuf,\n                                            size_t *pSize)"
  },
  {
    "label": "mz_zip_writer_end()",
    "kind": "Method",
    "detail": "Function (mz_bool)",
    "insertText": "mz_zip_writer_end(mz_zip_archive *pZip)"
  },
  {
    "label": "mz_zip_add_mem_to_archive_file_in_place()",
    "kind": "Method",
    "detail": "Function (mz_bool)",
    "insertText": "mz_zip_add_mem_to_archive_file_in_place(\n    const char *pZip_filename, const char *pArchive_name, const void *pBuf,\n    size_t buf_size, const void *pComment, mz_uint16 comment_size,\n    mz_uint level_and_flags)"
  },
  {
    "label": "mz_zip_add_mem_to_archive_file_in_place_v2()",
    "kind": "Method",
    "detail": "Function (mz_bool)",
    "insertText": "mz_zip_add_mem_to_archive_file_in_place_v2(\n    const char *pZip_filename, const char *pArchive_name, const void *pBuf,\n    size_t buf_size, const void *pComment, mz_uint16 comment_size,\n    mz_uint level_and_flags, mz_zip_error *pErr)"
  }
]