[
  {
    "label": "SmoothingFilter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SmoothingFilter"
  },
  {
    "label": "SmoothingFilterImpl",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SmoothingFilterImpl"
  },
  {
    "label": "SmoothingFilter()",
    "kind": "Method",
    "detail": "Function (# ifndef COMMON_AUDIO_SMOOTHING_FILTER_H_ # define COMMON_AUDIO_SMOOTHING_FILTER_H_ # include<stdint . h> # include \" absl / types / optional . h \" namespace webrtc { class SmoothingFilter { public : ~)",
    "insertText": "SmoothingFilter()"
  },
  {
    "label": "AddSample()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddSample(float sample)"
  },
  {
    "label": "GetAverage()",
    "kind": "Method",
    "detail": "Function (absl::optional<float>)",
    "insertText": "GetAverage()"
  },
  {
    "label": "SetTimeConstantMs()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetTimeConstantMs(int time_constant_ms)"
  },
  {
    "label": "SmoothingFilterImpl()",
    "kind": "Method",
    "detail": "Function (} ; class SmoothingFilterImpl final : public SmoothingFilter { public :)",
    "insertText": "SmoothingFilterImpl(int init_time_ms)"
  },
  {
    "label": "SmoothingFilterImpl()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SmoothingFilterImpl()"
  },
  {
    "label": "SmoothingFilterImpl()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SmoothingFilterImpl(const SmoothingFilterImpl&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (SmoothingFilterImpl&)",
    "insertText": "operator(const SmoothingFilterImpl&)"
  },
  {
    "label": "alpha()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "alpha()"
  },
  {
    "label": "ExtrapolateLastSample()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExtrapolateLastSample(int64_t time_ms)"
  }
]