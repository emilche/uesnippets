[
  {
    "label": "ArConfig_",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ArConfig_"
  },
  {
    "label": "that",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "that"
  },
  {
    "label": "ArCameraConfig_",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ArCameraConfig_"
  },
  {
    "label": "ArCameraConfigList_",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ArCameraConfigList_"
  },
  {
    "label": "contains",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "contains"
  },
  {
    "label": "ArCameraConfigFilter_",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ArCameraConfigFilter_"
  },
  {
    "label": "that",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "that"
  },
  {
    "label": "ArRecordingConfig_",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ArRecordingConfig_"
  },
  {
    "label": "of",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "of"
  },
  {
    "label": "ArTrack_",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ArTrack_"
  },
  {
    "label": "ArSession_",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ArSession_"
  },
  {
    "label": "ArPose_",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ArPose_"
  },
  {
    "label": "ArCamera_",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ArCamera_"
  },
  {
    "label": "ArCameraIntrinsics_",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ArCameraIntrinsics_"
  },
  {
    "label": "ArFrame_",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ArFrame_"
  },
  {
    "label": "ArLightEstimate_",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ArLightEstimate_"
  },
  {
    "label": "ArPointCloud_",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ArPointCloud_"
  },
  {
    "label": "ArImageMetadata_",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ArImageMetadata_"
  },
  {
    "label": "ArImage_",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ArImage_"
  },
  {
    "label": "ArTrackable_",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ArTrackable_"
  },
  {
    "label": "ArTrackableList_",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ArTrackableList_"
  },
  {
    "label": "ArTrackData_",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ArTrackData_"
  },
  {
    "label": "ArTrackDataList_",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ArTrackDataList_"
  },
  {
    "label": "ArPlane_",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ArPlane_"
  },
  {
    "label": "ArPoint_",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ArPoint_"
  },
  {
    "label": "ArDepthPoint_",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ArDepthPoint_"
  },
  {
    "label": "ArInstantPlacementPoint_",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ArInstantPlacementPoint_"
  },
  {
    "label": "ArAugmentedImage_",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ArAugmentedImage_"
  },
  {
    "label": "ArAugmentedFace_",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ArAugmentedFace_"
  },
  {
    "label": "ArStreetscapeGeometry_",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ArStreetscapeGeometry_"
  },
  {
    "label": "ArEarth_",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ArEarth_"
  },
  {
    "label": "ArGeospatialPose_",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ArGeospatialPose_"
  },
  {
    "label": "ArAugmentedImageDatabase_",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ArAugmentedImageDatabase_"
  },
  {
    "label": "ArAnchor_",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ArAnchor_"
  },
  {
    "label": "ArAnchorList_",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ArAnchorList_"
  },
  {
    "label": "ArMesh_",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ArMesh_"
  },
  {
    "label": "ArHitResult_",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ArHitResult_"
  },
  {
    "label": "ArHitResultList_",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ArHitResultList_"
  },
  {
    "label": "underlying",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "underlying"
  },
  {
    "label": "_type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "_type"
  },
  {
    "label": "ArFuture_",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ArFuture_"
  },
  {
    "label": "ArHostCloudAnchorFuture_",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ArHostCloudAnchorFuture_"
  },
  {
    "label": "ArResolveCloudAnchorFuture_",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ArResolveCloudAnchorFuture_"
  },
  {
    "label": "ArResolveAnchorOnTerrainFuture_",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ArResolveAnchorOnTerrainFuture_"
  },
  {
    "label": "ArResolveAnchorOnRooftopFuture_",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ArResolveAnchorOnRooftopFuture_"
  },
  {
    "label": "value",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "value"
  },
  {
    "label": "label",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "label"
  },
  {
    "label": "prediction",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "prediction"
  },
  {
    "label": "ArVpsAvailabilityFuture_",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ArVpsAvailabilityFuture_"
  },
  {
    "label": "ArImageMetadata_rational",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ArImageMetadata_rational"
  },
  {
    "label": "ArImageMetadata_const_entry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ArImageMetadata_const_entry"
  },
  {
    "label": "obtained",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "obtained"
  },
  {
    "label": "obtained",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "obtained"
  },
  {
    "label": "ArCoreApk_checkAvailability()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArCoreApk_checkAvailability(void *env,\n                                 void *context,\n                                 ArAvailability *out_availability)"
  },
  {
    "label": "ArCoreApk_checkAvailabilityAsync()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArCoreApk_checkAvailabilityAsync(void *env,\n                                      void *application_context,\n                                      void *callback_context,\n                                      ArAvailabilityCallback callback)"
  },
  {
    "label": "ArCoreApk_requestInstall()",
    "kind": "Method",
    "detail": "Function (ArStatus)",
    "insertText": "ArCoreApk_requestInstall(void *env,\n                                  void *application_activity,\n                                  int32_t user_requested_install,\n                                  ArInstallStatus *out_install_status)"
  },
  {
    "label": "ArCoreApk_requestInstallCustom()",
    "kind": "Method",
    "detail": "Function (ArStatus)",
    "insertText": "ArCoreApk_requestInstallCustom(void *env,\n                                        void *application_activity,\n                                        int32_t user_requested_install,\n                                        ArInstallBehavior install_behavior,\n                                        ArInstallUserMessageType message_type,\n                                        ArInstallStatus *out_install_status)"
  },
  {
    "label": "ArSession_create()",
    "kind": "Method",
    "detail": "Function (ArStatus)",
    "insertText": "ArSession_create(void *env,\n                          void *context,\n                          ArSession **out_session_pointer)"
  },
  {
    "label": "ArSession_createWithFeatures()",
    "kind": "Method",
    "detail": "Function (ArStatus)",
    "insertText": "ArSession_createWithFeatures(void *env,\n                                      void *context,\n                                      const ArSessionFeature *features,\n                                      ArSession **out_session_pointer)"
  },
  {
    "label": "ArFuture_getState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArFuture_getState(const ArSession *session,\n                       const ArFuture *future,\n                       ArFutureState *out_state)"
  },
  {
    "label": "ArFuture_cancel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArFuture_cancel(const ArSession *session,\n                     ArFuture *future,\n                     int32_t *out_was_cancelled)"
  },
  {
    "label": "ArFuture_release()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArFuture_release(ArFuture *future)"
  },
  {
    "label": "ArConfig_create()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArConfig_create(const ArSession *session, ArConfig **out_config)"
  },
  {
    "label": "ArConfig_destroy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArConfig_destroy(ArConfig *config)"
  },
  {
    "label": "ArConfig_getLightEstimationMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArConfig_getLightEstimationMode(\n    const ArSession *session,\n    const ArConfig *config,\n    ArLightEstimationMode *light_estimation_mode)"
  },
  {
    "label": "ArConfig_setLightEstimationMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArConfig_setLightEstimationMode(\n    const ArSession *session,\n    ArConfig *config,\n    ArLightEstimationMode light_estimation_mode)"
  },
  {
    "label": "ArConfig_getPlaneFindingMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArConfig_getPlaneFindingMode(const ArSession *session,\n                                  const ArConfig *config,\n                                  ArPlaneFindingMode *plane_finding_mode)"
  },
  {
    "label": "ArConfig_setPlaneFindingMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArConfig_setPlaneFindingMode(const ArSession *session,\n                                  ArConfig *config,\n                                  ArPlaneFindingMode plane_finding_mode)"
  },
  {
    "label": "ArConfig_getUpdateMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArConfig_getUpdateMode(const ArSession *session,\n                            const ArConfig *config,\n                            ArUpdateMode *update_mode)"
  },
  {
    "label": "ArConfig_setUpdateMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArConfig_setUpdateMode(const ArSession *session,\n                            ArConfig *config,\n                            ArUpdateMode update_mode)"
  },
  {
    "label": "ArConfig_getCloudAnchorMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArConfig_getCloudAnchorMode(const ArSession *session,\n                                 const ArConfig *config,\n                                 ArCloudAnchorMode *out_cloud_anchor_mode)"
  },
  {
    "label": "ArConfig_setCloudAnchorMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArConfig_setCloudAnchorMode(const ArSession *session,\n                                 ArConfig *config,\n                                 ArCloudAnchorMode cloud_anchor_mode)"
  },
  {
    "label": "ArConfig_setAugmentedImageDatabase()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArConfig_setAugmentedImageDatabase(\n    const ArSession *session,\n    ArConfig *config,\n    const ArAugmentedImageDatabase *augmented_image_database)"
  },
  {
    "label": "ArConfig_getAugmentedImageDatabase()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArConfig_getAugmentedImageDatabase(\n    const ArSession *session,\n    const ArConfig *config,\n    ArAugmentedImageDatabase *out_augmented_image_database)"
  },
  {
    "label": "ArConfig_getTextureUpdateMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArConfig_getTextureUpdateMode(\n    const ArSession *session,\n    const ArConfig *config,\n    ArTextureUpdateMode *out_texture_update_mode)"
  },
  {
    "label": "ArConfig_setTextureUpdateMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArConfig_setTextureUpdateMode(const ArSession *session,\n                                   ArConfig *config,\n                                   ArTextureUpdateMode texture_update_mode)"
  },
  {
    "label": "ArConfig_getAugmentedFaceMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArConfig_getAugmentedFaceMode(const ArSession *session,\n                                   const ArConfig *config,\n                                   ArAugmentedFaceMode *augmented_face_mode)"
  },
  {
    "label": "ArConfig_setAugmentedFaceMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArConfig_setAugmentedFaceMode(const ArSession *session,\n                                   ArConfig *config,\n                                   ArAugmentedFaceMode augmented_face_mode)"
  },
  {
    "label": "ArConfig_setFocusMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArConfig_setFocusMode(const ArSession *session,\n                           ArConfig *config,\n                           ArFocusMode focus_mode)"
  },
  {
    "label": "ArConfig_getFocusMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArConfig_getFocusMode(const ArSession *session,\n                           ArConfig *config,\n                           ArFocusMode *focus_mode)"
  },
  {
    "label": "ArConfig_getImageStabilizationMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArConfig_getImageStabilizationMode(\n    const ArSession *session,\n    const ArConfig *config,\n    ArImageStabilizationMode *out_image_stabilization_mode)"
  },
  {
    "label": "ArConfig_setImageStabilizationMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArConfig_setImageStabilizationMode(\n    const ArSession *session,\n    ArConfig *config,\n    ArImageStabilizationMode image_stabilization_mode)"
  },
  {
    "label": "ArConfig_setGeospatialMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArConfig_setGeospatialMode(const ArSession *session,\n                                ArConfig *config,\n                                ArGeospatialMode geospatial_mode)"
  },
  {
    "label": "ArConfig_getGeospatialMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArConfig_getGeospatialMode(const ArSession *session,\n                                const ArConfig *config,\n                                ArGeospatialMode *out_geospatial_mode)"
  },
  {
    "label": "ArConfig_setStreetscapeGeometryMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArConfig_setStreetscapeGeometryMode(\n    const ArSession *session,\n    ArConfig *config,\n    ArStreetscapeGeometryMode streetscape_geometry_mode)"
  },
  {
    "label": "ArConfig_getStreetscapeGeometryMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArConfig_getStreetscapeGeometryMode(\n    const ArSession *session,\n    const ArConfig *config,\n    ArStreetscapeGeometryMode *out_streetscape_geometry_mode)"
  },
  {
    "label": "ArConfig_getDepthMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArConfig_getDepthMode(const ArSession *session,\n                           const ArConfig *config,\n                           ArDepthMode *out_depth_mode)"
  },
  {
    "label": "ArConfig_getSemanticMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArConfig_getSemanticMode(const ArSession *session,\n                              const ArConfig *config,\n                              ArSemanticMode *out_semantic_mode)"
  },
  {
    "label": "ArConfig_setDepthMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArConfig_setDepthMode(const ArSession *session,\n                           ArConfig *config,\n                           ArDepthMode mode)"
  },
  {
    "label": "ArConfig_setSemanticMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArConfig_setSemanticMode(const ArSession *session,\n                              ArConfig *config,\n                              ArSemanticMode semantic_mode)"
  },
  {
    "label": "ArConfig_setInstantPlacementMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArConfig_setInstantPlacementMode(\n    const ArSession *session,\n    ArConfig *config,\n    ArInstantPlacementMode instant_placement_mode)"
  },
  {
    "label": "ArConfig_getInstantPlacementMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArConfig_getInstantPlacementMode(\n    const ArSession *session,\n    const ArConfig *config,\n    ArInstantPlacementMode *instant_placement_mode)"
  },
  {
    "label": "ArCameraConfigList_create()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArCameraConfigList_create(const ArSession *session,\n                               ArCameraConfigList **out_list)"
  },
  {
    "label": "ArCameraConfigList_destroy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArCameraConfigList_destroy(ArCameraConfigList *list)"
  },
  {
    "label": "ArCameraConfigList_getSize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArCameraConfigList_getSize(const ArSession *session,\n                                const ArCameraConfigList *list,\n                                int32_t *out_size)"
  },
  {
    "label": "ArCameraConfigList_getItem()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArCameraConfigList_getItem(const ArSession *session,\n                                const ArCameraConfigList *list,\n                                int32_t index,\n                                ArCameraConfig *out_camera_config)"
  },
  {
    "label": "ArCameraConfig_create()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArCameraConfig_create(const ArSession *session,\n                           ArCameraConfig **out_camera_config)"
  },
  {
    "label": "ArCameraConfig_destroy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArCameraConfig_destroy(ArCameraConfig *camera_config)"
  },
  {
    "label": "ArCameraConfig_getImageDimensions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArCameraConfig_getImageDimensions(const ArSession *session,\n                                       const ArCameraConfig *camera_config,\n                                       int32_t *out_width,\n                                       int32_t *out_height)"
  },
  {
    "label": "ArCameraConfig_getTextureDimensions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArCameraConfig_getTextureDimensions(const ArSession *session,\n                                         const ArCameraConfig *camera_config,\n                                         int32_t *out_width,\n                                         int32_t *out_height)"
  },
  {
    "label": "ArCameraConfig_getFpsRange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArCameraConfig_getFpsRange(const ArSession *session,\n                                const ArCameraConfig *camera_config,\n                                int32_t *out_min_fps,\n                                int32_t *out_max_fps)"
  },
  {
    "label": "ArCameraConfig_getDepthSensorUsage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArCameraConfig_getDepthSensorUsage(const ArSession *session,\n                                        const ArCameraConfig *camera_config,\n                                        uint32_t *out_depth_sensor_usage)"
  },
  {
    "label": "ArCameraConfig_getCameraId()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArCameraConfig_getCameraId(const ArSession *session,\n                                const ArCameraConfig *camera_config,\n                                char **out_camera_id)"
  },
  {
    "label": "ArCameraConfig_getFacingDirection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArCameraConfig_getFacingDirection(\n    const ArSession *session,\n    const ArCameraConfig *camera_config,\n    ArCameraConfigFacingDirection *out_facing)"
  },
  {
    "label": "ArCameraConfig_getStereoCameraUsage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArCameraConfig_getStereoCameraUsage(\n    const ArSession *session,\n    const ArCameraConfig *camera_config,\n    ArCameraConfigStereoCameraUsage *out_stereo_camera_usage)"
  },
  {
    "label": "ArCameraConfigFilter_create()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArCameraConfigFilter_create(const ArSession *session,\n                                 ArCameraConfigFilter **out_filter)"
  },
  {
    "label": "ArCameraConfigFilter_destroy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArCameraConfigFilter_destroy(ArCameraConfigFilter *filter)"
  },
  {
    "label": "ArCameraConfigFilter_setTargetFps()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArCameraConfigFilter_setTargetFps(const ArSession *session,\n                                       ArCameraConfigFilter *filter,\n                                       uint32_t fps_filters)"
  },
  {
    "label": "ArCameraConfigFilter_getTargetFps()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArCameraConfigFilter_getTargetFps(const ArSession *session,\n                                       ArCameraConfigFilter *filter,\n                                       uint32_t *out_fps_filters)"
  },
  {
    "label": "ArCameraConfigFilter_setDepthSensorUsage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArCameraConfigFilter_setDepthSensorUsage(\n    const ArSession *session,\n    ArCameraConfigFilter *filter,\n    uint32_t depth_sensor_usage_filters)"
  },
  {
    "label": "ArCameraConfigFilter_getDepthSensorUsage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArCameraConfigFilter_getDepthSensorUsage(const ArSession *session,\n                                              ArCameraConfigFilter *filter,\n                                              uint32_t *out_depth_sensor_usage)"
  },
  {
    "label": "ArCameraConfigFilter_setStereoCameraUsage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArCameraConfigFilter_setStereoCameraUsage(\n    const ArSession *session,\n    ArCameraConfigFilter *filter,\n    uint32_t stereo_camera_usage_filters)"
  },
  {
    "label": "ArCameraConfigFilter_getStereoCameraUsage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArCameraConfigFilter_getStereoCameraUsage(\n    const ArSession *session,\n    ArCameraConfigFilter *filter,\n    uint32_t *out_stereo_camera_usage)"
  },
  {
    "label": "ArCameraConfigFilter_setFacingDirection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArCameraConfigFilter_setFacingDirection(\n    const ArSession *session,\n    ArCameraConfigFilter *filter,\n    ArCameraConfigFacingDirection facing_direction_filter)"
  },
  {
    "label": "ArCameraConfigFilter_getFacingDirection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArCameraConfigFilter_getFacingDirection(\n    const ArSession *session,\n    ArCameraConfigFilter *filter,\n    ArCameraConfigFacingDirection *out_facing_direction_filter)"
  },
  {
    "label": "ArRecordingConfig_create()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArRecordingConfig_create(const ArSession *session,\n                              ArRecordingConfig **out_config)"
  },
  {
    "label": "ArRecordingConfig_destroy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArRecordingConfig_destroy(ArRecordingConfig *config)"
  },
  {
    "label": "ArRecordingConfig_getMp4DatasetUri()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArRecordingConfig_getMp4DatasetUri(const ArSession *session,\n                                        const ArRecordingConfig *config,\n                                        char **out_mp4_dataset_uri)"
  },
  {
    "label": "ArRecordingConfig_setMp4DatasetUri()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArRecordingConfig_setMp4DatasetUri(const ArSession *session,\n                                        ArRecordingConfig *config,\n                                        const char *mp4_dataset_uri)"
  },
  {
    "label": "ArRecordingConfig_getAutoStopOnPause()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArRecordingConfig_getAutoStopOnPause(const ArSession *session,\n                                          const ArRecordingConfig *config,\n                                          int32_t *out_config_enabled)"
  },
  {
    "label": "ArRecordingConfig_setAutoStopOnPause()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArRecordingConfig_setAutoStopOnPause(const ArSession *session,\n                                          ArRecordingConfig *config,\n                                          int32_t config_enabled)"
  },
  {
    "label": "ArRecordingConfig_getRecordingRotation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArRecordingConfig_getRecordingRotation(const ArSession *session,\n                                            const ArRecordingConfig *config,\n                                            int32_t *out_recording_rotation)"
  },
  {
    "label": "ArRecordingConfig_setRecordingRotation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArRecordingConfig_setRecordingRotation(const ArSession *session,\n                                            ArRecordingConfig *config,\n                                            int32_t recording_rotation)"
  },
  {
    "label": "ArRecordingConfig_addTrack()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArRecordingConfig_addTrack(const ArSession *session,\n                                ArRecordingConfig *config,\n                                const ArTrack *track)"
  },
  {
    "label": "ArTrack_create()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArTrack_create(const ArSession *session, ArTrack **out_track)"
  },
  {
    "label": "ArTrack_setId()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArTrack_setId(const ArSession *session,\n                   ArTrack *track,\n                   const uint8_t *track_id_uuid_16)"
  },
  {
    "label": "ArTrack_setMetadata()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArTrack_setMetadata(const ArSession *session,\n                         ArTrack *track,\n                         const uint8_t *track_metadata_buffer,\n                         size_t track_metadata_buffer_size)"
  },
  {
    "label": "ArTrack_setMimeType()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArTrack_setMimeType(const ArSession *session,\n                         ArTrack *track,\n                         const char *mime_type)"
  },
  {
    "label": "ArTrack_destroy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArTrack_destroy(ArTrack *track)"
  },
  {
    "label": "ArSession_destroy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArSession_destroy(ArSession *session)"
  },
  {
    "label": "ArSession_configure()",
    "kind": "Method",
    "detail": "Function (ArStatus)",
    "insertText": "ArSession_configure(ArSession *session, const ArConfig *config)"
  },
  {
    "label": "ArSession_getConfig()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArSession_getConfig(ArSession *session, ArConfig *out_config)"
  },
  {
    "label": "ArSession_resume()",
    "kind": "Method",
    "detail": "Function (ArStatus)",
    "insertText": "ArSession_resume(ArSession *session)"
  },
  {
    "label": "ArSession_pause()",
    "kind": "Method",
    "detail": "Function (ArStatus)",
    "insertText": "ArSession_pause(ArSession *session)"
  },
  {
    "label": "ArSession_setCameraTextureNames()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArSession_setCameraTextureNames(ArSession *session,\n                                     int32_t number_of_textures,\n                                     const uint32_t *texture_ids)"
  },
  {
    "label": "ArSession_setCameraTextureName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArSession_setCameraTextureName(ArSession *session, uint32_t texture_id)"
  },
  {
    "label": "ArSession_setDisplayGeometry()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArSession_setDisplayGeometry(ArSession *session,\n                                  int32_t rotation,\n                                  int32_t width,\n                                  int32_t height)"
  },
  {
    "label": "ArSession_update()",
    "kind": "Method",
    "detail": "Function (ArStatus)",
    "insertText": "ArSession_update(ArSession *session, ArFrame *out_frame)"
  },
  {
    "label": "ArSession_acquireNewAnchor()",
    "kind": "Method",
    "detail": "Function (ArStatus)",
    "insertText": "ArSession_acquireNewAnchor(ArSession *session,\n                                    const ArPose *pose,\n                                    ArAnchor **out_anchor)"
  },
  {
    "label": "ArSession_getAllAnchors()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArSession_getAllAnchors(const ArSession *session,\n                             ArAnchorList *out_anchor_list)"
  },
  {
    "label": "ArSession_getAllTrackables()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArSession_getAllTrackables(const ArSession *session,\n                                ArTrackableType filter_type,\n                                ArTrackableList *out_trackable_list)"
  },
  {
    "label": "ArSession_estimateFeatureMapQualityForHosting()",
    "kind": "Method",
    "detail": "Function (ArStatus)",
    "insertText": "ArSession_estimateFeatureMapQualityForHosting(\n    const ArSession *session,\n    const ArPose *pose,\n    ArFeatureMapQuality *out_feature_map_quality)"
  },
  {
    "label": "ArHostCloudAnchorFuture_acquireResultCloudAnchorId()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArHostCloudAnchorFuture_acquireResultCloudAnchorId(\n    const ArSession *session,\n    const ArHostCloudAnchorFuture *future,\n    char **out_cloud_anchor_id)"
  },
  {
    "label": "ArHostCloudAnchorFuture_getResultCloudAnchorState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArHostCloudAnchorFuture_getResultCloudAnchorState(\n    const ArSession *session,\n    const ArHostCloudAnchorFuture *future,\n    ArCloudAnchorState *out_cloud_anchor_state)"
  },
  {
    "label": "ArSession_hostCloudAnchorAsync()",
    "kind": "Method",
    "detail": "Function (ArStatus)",
    "insertText": "ArSession_hostCloudAnchorAsync(ArSession *session,\n                                        const ArAnchor *anchor,\n                                        int32_t ttl_days,\n                                        void *context,\n                                        ArHostCloudAnchorCallback callback,\n                                        ArHostCloudAnchorFuture **out_future)"
  },
  {
    "label": "ArResolveCloudAnchorFuture_acquireResultAnchor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArResolveCloudAnchorFuture_acquireResultAnchor(\n    const ArSession *session,\n    const ArResolveCloudAnchorFuture *future,\n    ArAnchor **out_anchor)"
  },
  {
    "label": "ArResolveCloudAnchorFuture_getResultCloudAnchorState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArResolveCloudAnchorFuture_getResultCloudAnchorState(\n    const ArSession *session,\n    const ArResolveCloudAnchorFuture *future,\n    ArCloudAnchorState *out_cloud_anchor_state)"
  },
  {
    "label": "ArSession_resolveCloudAnchorAsync()",
    "kind": "Method",
    "detail": "Function (ArStatus)",
    "insertText": "ArSession_resolveCloudAnchorAsync(\n    ArSession *session,\n    const char *cloud_anchor_id,\n    void *context,\n    ArResolveCloudAnchorCallback callback,\n    ArResolveCloudAnchorFuture **out_future)"
  },
  {
    "label": "ArSession_setCameraConfig()",
    "kind": "Method",
    "detail": "Function (ArStatus)",
    "insertText": "ArSession_setCameraConfig(const ArSession *session,\n                                   const ArCameraConfig *camera_config)"
  },
  {
    "label": "ArSession_getCameraConfig()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArSession_getCameraConfig(const ArSession *session,\n                               ArCameraConfig *out_camera_config)"
  },
  {
    "label": "ArSession_getSupportedCameraConfigsWithFilter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArSession_getSupportedCameraConfigsWithFilter(\n    const ArSession *session,\n    const ArCameraConfigFilter *filter,\n    ArCameraConfigList *list)"
  },
  {
    "label": "ArSession_acquireEarth()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArSession_acquireEarth(const ArSession *session, ArEarth **out_earth)"
  },
  {
    "label": "ArSession_setPlaybackDatasetUri()",
    "kind": "Method",
    "detail": "Function (ArStatus)",
    "insertText": "ArSession_setPlaybackDatasetUri(ArSession *session,\n                                         const char *mp4_dataset_uri)"
  },
  {
    "label": "ArSession_getPlaybackStatus()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArSession_getPlaybackStatus(ArSession *session,\n                                 ArPlaybackStatus *out_playback_status)"
  },
  {
    "label": "ArSession_startRecording()",
    "kind": "Method",
    "detail": "Function (ArStatus)",
    "insertText": "ArSession_startRecording(ArSession *session,\n                                  const ArRecordingConfig *recording_config)"
  },
  {
    "label": "ArSession_stopRecording()",
    "kind": "Method",
    "detail": "Function (ArStatus)",
    "insertText": "ArSession_stopRecording(ArSession *session)"
  },
  {
    "label": "ArSession_getRecordingStatus()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArSession_getRecordingStatus(ArSession *session,\n                                  ArRecordingStatus *out_recording_status)"
  },
  {
    "label": "ArFrame_recordTrackData()",
    "kind": "Method",
    "detail": "Function (ArStatus)",
    "insertText": "ArFrame_recordTrackData(ArSession *session,\n                                 const ArFrame *frame,\n                                 const uint8_t *track_id_uuid_16,\n                                 const void *payload,\n                                 size_t payload_size)"
  },
  {
    "label": "ArSession_isDepthModeSupported()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArSession_isDepthModeSupported(const ArSession *session,\n                                    ArDepthMode depth_mode,\n                                    int32_t *out_is_supported)"
  },
  {
    "label": "ArSession_isImageStabilizationModeSupported()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArSession_isImageStabilizationModeSupported(\n    const ArSession *session,\n    ArImageStabilizationMode image_stabilization_mode,\n    int32_t *out_is_supported)"
  },
  {
    "label": "ArSession_isSemanticModeSupported()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArSession_isSemanticModeSupported(const ArSession *session,\n                                       ArSemanticMode semantic_mode,\n                                       int32_t *out_is_supported)"
  },
  {
    "label": "ArSession_isGeospatialModeSupported()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArSession_isGeospatialModeSupported(const ArSession *session,\n                                         ArGeospatialMode geospatial_mode,\n                                         int32_t *out_is_supported)"
  },
  {
    "label": "ArPose_create()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArPose_create(const ArSession *session,\n                   const float *pose_raw,\n                   ArPose **out_pose)"
  },
  {
    "label": "ArPose_destroy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArPose_destroy(ArPose *pose)"
  },
  {
    "label": "ArPose_getPoseRaw()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArPose_getPoseRaw(const ArSession *session,\n                       const ArPose *pose,\n                       float *out_pose_raw_7)"
  },
  {
    "label": "ArPose_getMatrix()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArPose_getMatrix(const ArSession *session,\n                      const ArPose *pose,\n                      float *out_matrix_col_major_4x4)"
  },
  {
    "label": "ArCamera_getPose()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArCamera_getPose(const ArSession *session,\n                      const ArCamera *camera,\n                      ArPose *out_pose)"
  },
  {
    "label": "ArCamera_getDisplayOrientedPose()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArCamera_getDisplayOrientedPose(const ArSession *session,\n                                     const ArCamera *camera,\n                                     ArPose *out_pose)"
  },
  {
    "label": "ArCamera_getViewMatrix()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArCamera_getViewMatrix(const ArSession *session,\n                            const ArCamera *camera,\n                            float *out_col_major_4x4)"
  },
  {
    "label": "ArCamera_getTrackingState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArCamera_getTrackingState(const ArSession *session,\n                               const ArCamera *camera,\n                               ArTrackingState *out_tracking_state)"
  },
  {
    "label": "ArCamera_getTrackingFailureReason()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArCamera_getTrackingFailureReason(\n    const ArSession *session,\n    const ArCamera *camera,\n    ArTrackingFailureReason *out_tracking_failure_reason)"
  },
  {
    "label": "ArCamera_getProjectionMatrix()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArCamera_getProjectionMatrix(const ArSession *session,\n                                  const ArCamera *camera,\n                                  float near,\n                                  float far,\n                                  float *dest_col_major_4x4)"
  },
  {
    "label": "ArCamera_getImageIntrinsics()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArCamera_getImageIntrinsics(const ArSession *session,\n                                 const ArCamera *camera,\n                                 ArCameraIntrinsics *out_camera_intrinsics)"
  },
  {
    "label": "ArCamera_getTextureIntrinsics()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArCamera_getTextureIntrinsics(const ArSession *session,\n                                   const ArCamera *camera,\n                                   ArCameraIntrinsics *out_camera_intrinsics)"
  },
  {
    "label": "ArCamera_release()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArCamera_release(ArCamera *camera)"
  },
  {
    "label": "ArCameraIntrinsics_create()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArCameraIntrinsics_create(const ArSession *session,\n                               ArCameraIntrinsics **out_camera_intrinsics)"
  },
  {
    "label": "ArCameraIntrinsics_getFocalLength()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArCameraIntrinsics_getFocalLength(const ArSession *session,\n                                       const ArCameraIntrinsics *intrinsics,\n                                       float *out_fx,\n                                       float *out_fy)"
  },
  {
    "label": "ArCameraIntrinsics_getPrincipalPoint()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArCameraIntrinsics_getPrincipalPoint(const ArSession *session,\n                                          const ArCameraIntrinsics *intrinsics,\n                                          float *out_cx,\n                                          float *out_cy)"
  },
  {
    "label": "ArCameraIntrinsics_getImageDimensions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArCameraIntrinsics_getImageDimensions(const ArSession *session,\n                                           const ArCameraIntrinsics *intrinsics,\n                                           int32_t *out_width,\n                                           int32_t *out_height)"
  },
  {
    "label": "ArCameraIntrinsics_destroy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArCameraIntrinsics_destroy(ArCameraIntrinsics *camera_intrinsics)"
  },
  {
    "label": "ArFrame_create()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArFrame_create(const ArSession *session, ArFrame **out_frame)"
  },
  {
    "label": "ArFrame_destroy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArFrame_destroy(ArFrame *frame)"
  },
  {
    "label": "ArFrame_getDisplayGeometryChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArFrame_getDisplayGeometryChanged(const ArSession *session,\n                                       const ArFrame *frame,\n                                       int32_t *out_geometry_changed)"
  },
  {
    "label": "ArFrame_getTimestamp()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArFrame_getTimestamp(const ArSession *session,\n                          const ArFrame *frame,\n                          int64_t *out_timestamp_ns)"
  },
  {
    "label": "ArFrame_getAndroidSensorPose()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArFrame_getAndroidSensorPose(const ArSession *session,\n                                  const ArFrame *frame,\n                                  ArPose *out_pose)"
  },
  {
    "label": "ArFrame_transformCoordinates2d()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArFrame_transformCoordinates2d(const ArSession *session,\n                                    const ArFrame *frame,\n                                    ArCoordinates2dType input_coordinates,\n                                    int32_t number_of_vertices,\n                                    const float *vertices_2d,\n                                    ArCoordinates2dType output_coordinates,\n                                    float *out_vertices_2d)"
  },
  {
    "label": "ArFrame_transformCoordinates3d()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArFrame_transformCoordinates3d(const ArSession *session,\n                                    const ArFrame *frame,\n                                    ArCoordinates2dType input_coordinates,\n                                    int32_t number_of_vertices,\n                                    const float *vertices_2d,\n                                    ArCoordinates3dType output_coordinates,\n                                    float *out_vertices_3d)"
  },
  {
    "label": "ArFrame_hitTest()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArFrame_hitTest(const ArSession *session,\n                     const ArFrame *frame,\n                     float pixel_x,\n                     float pixel_y,\n                     ArHitResultList *hit_result_list)"
  },
  {
    "label": "ArFrame_hitTestInstantPlacement()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArFrame_hitTestInstantPlacement(const ArSession *session,\n                                     const ArFrame *frame,\n                                     float pixel_x,\n                                     float pixel_y,\n                                     float approximate_distance_meters,\n                                     ArHitResultList *hit_result_list)"
  },
  {
    "label": "ArFrame_hitTestRay()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArFrame_hitTestRay(const ArSession *session,\n                        const ArFrame *frame,\n                        const float *ray_origin_3,\n                        const float *ray_direction_3,\n                        ArHitResultList *hit_result_list)"
  },
  {
    "label": "ArFrame_getLightEstimate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArFrame_getLightEstimate(const ArSession *session,\n                              const ArFrame *frame,\n                              ArLightEstimate *out_light_estimate)"
  },
  {
    "label": "ArFrame_acquirePointCloud()",
    "kind": "Method",
    "detail": "Function (ArStatus)",
    "insertText": "ArFrame_acquirePointCloud(const ArSession *session,\n                                   const ArFrame *frame,\n                                   ArPointCloud **out_point_cloud)"
  },
  {
    "label": "ArFrame_acquireCamera()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArFrame_acquireCamera(const ArSession *session,\n                           const ArFrame *frame,\n                           ArCamera **out_camera)"
  },
  {
    "label": "ArFrame_acquireImageMetadata()",
    "kind": "Method",
    "detail": "Function (ArStatus)",
    "insertText": "ArFrame_acquireImageMetadata(const ArSession *session,\n                                      const ArFrame *frame,\n                                      ArImageMetadata **out_metadata)"
  },
  {
    "label": "ArFrame_acquireCameraImage()",
    "kind": "Method",
    "detail": "Function (ArStatus)",
    "insertText": "ArFrame_acquireCameraImage(ArSession *session,\n                                    ArFrame *frame,\n                                    ArImage **out_image)"
  },
  {
    "label": "ArFrame_getUpdatedAnchors()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArFrame_getUpdatedAnchors(const ArSession *session,\n                               const ArFrame *frame,\n                               ArAnchorList *out_anchor_list)"
  },
  {
    "label": "ArFrame_getUpdatedTrackables()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArFrame_getUpdatedTrackables(const ArSession *session,\n                                  const ArFrame *frame,\n                                  ArTrackableType filter_type,\n                                  ArTrackableList *out_trackable_list)"
  },
  {
    "label": "ArFrame_getUpdatedTrackData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArFrame_getUpdatedTrackData(const ArSession *session,\n                                 const ArFrame *frame,\n                                 const uint8_t *track_id_uuid_16,\n                                 ArTrackDataList *out_track_data_list)"
  },
  {
    "label": "ArTrackData_getFrameTimestamp()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArTrackData_getFrameTimestamp(const ArSession *session,\n                                   const ArTrackData *track_data,\n                                   int64_t *out_timestamp_ns)"
  },
  {
    "label": "ArTrackData_getData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArTrackData_getData(const ArSession *session,\n                         const ArTrackData *track_data,\n                         const uint8_t **out_data,\n                         int32_t *out_size)"
  },
  {
    "label": "ArTrackData_release()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArTrackData_release(ArTrackData *track_data)"
  },
  {
    "label": "ArTrackDataList_create()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArTrackDataList_create(const ArSession *session,\n                            ArTrackDataList **out_track_data_list)"
  },
  {
    "label": "ArTrackDataList_destroy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArTrackDataList_destroy(ArTrackDataList *track_data_list)"
  },
  {
    "label": "ArTrackDataList_getSize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArTrackDataList_getSize(const ArSession *session,\n                             const ArTrackDataList *track_data_list,\n                             int32_t *out_size)"
  },
  {
    "label": "ArTrackDataList_acquireItem()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArTrackDataList_acquireItem(const ArSession *session,\n                                 const ArTrackDataList *track_data_list,\n                                 int32_t index,\n                                 ArTrackData **out_track_data)"
  },
  {
    "label": "ArFrame_acquireDepthImage16Bits()",
    "kind": "Method",
    "detail": "Function (ArStatus)",
    "insertText": "ArFrame_acquireDepthImage16Bits(const ArSession *session,\n                                         const ArFrame *frame,\n                                         ArImage **out_depth_image)"
  },
  {
    "label": "ArFrame_acquireRawDepthImage16Bits()",
    "kind": "Method",
    "detail": "Function (ArStatus)",
    "insertText": "ArFrame_acquireRawDepthImage16Bits(const ArSession *session,\n                                            const ArFrame *frame,\n                                            ArImage **out_depth_image)"
  },
  {
    "label": "ArFrame_acquireRawDepthConfidenceImage()",
    "kind": "Method",
    "detail": "Function (ArStatus)",
    "insertText": "ArFrame_acquireRawDepthConfidenceImage(const ArSession *session,\n                                                const ArFrame *frame,\n                                                ArImage **out_confidence_image)"
  },
  {
    "label": "ArFrame_acquireSemanticImage()",
    "kind": "Method",
    "detail": "Function (ArStatus)",
    "insertText": "ArFrame_acquireSemanticImage(const ArSession *session,\n                                      const ArFrame *frame,\n                                      ArImage **out_semantic_image)"
  },
  {
    "label": "ArFrame_acquireSemanticConfidenceImage()",
    "kind": "Method",
    "detail": "Function (ArStatus)",
    "insertText": "ArFrame_acquireSemanticConfidenceImage(\n    const ArSession *session,\n    const ArFrame *frame,\n    ArImage **out_semantic_confidence_image)"
  },
  {
    "label": "ArFrame_getSemanticLabelFraction()",
    "kind": "Method",
    "detail": "Function (ArStatus)",
    "insertText": "ArFrame_getSemanticLabelFraction(const ArSession *session,\n                                          const ArFrame *frame,\n                                          ArSemanticLabel query_label,\n                                          float *out_fraction)"
  },
  {
    "label": "ArFrame_getHardwareBuffer()",
    "kind": "Method",
    "detail": "Function (ArStatus)",
    "insertText": "ArFrame_getHardwareBuffer(const ArSession *session,\n                                   const ArFrame *frame,\n                                   void **out_hardware_buffer)"
  },
  {
    "label": "ArFrame_getCameraTextureName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArFrame_getCameraTextureName(const ArSession *session,\n                                  const ArFrame *frame,\n                                  uint32_t *out_texture_id)"
  },
  {
    "label": "ArMesh_release()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArMesh_release(ArMesh *mesh)"
  },
  {
    "label": "ArMesh_getVertexListSize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArMesh_getVertexListSize(const ArSession *session,\n                              const ArMesh *mesh,\n                              int32_t *out_num_vertices)"
  },
  {
    "label": "ArMesh_getVertexList()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArMesh_getVertexList(const ArSession *session,\n                          const ArMesh *mesh,\n                          const float **out_vertex_positions_xyz)"
  },
  {
    "label": "ArMesh_getIndexListSize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArMesh_getIndexListSize(const ArSession *session,\n                             const ArMesh *mesh,\n                             int32_t *out_num_indices)"
  },
  {
    "label": "ArMesh_getIndexList()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArMesh_getIndexList(const ArSession *session,\n                         const ArMesh *mesh,\n                         const uint32_t **out_indices)"
  },
  {
    "label": "ArPointCloud_getNumberOfPoints()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArPointCloud_getNumberOfPoints(const ArSession *session,\n                                    const ArPointCloud *point_cloud,\n                                    int32_t *out_number_of_points)"
  },
  {
    "label": "ArPointCloud_getData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArPointCloud_getData(const ArSession *session,\n                          const ArPointCloud *point_cloud,\n                          const float **out_point_cloud_data)"
  },
  {
    "label": "ArPointCloud_getPointIds()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArPointCloud_getPointIds(const ArSession *session,\n                              const ArPointCloud *point_cloud,\n                              const int32_t **out_point_ids)"
  },
  {
    "label": "ArPointCloud_getTimestamp()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArPointCloud_getTimestamp(const ArSession *session,\n                               const ArPointCloud *point_cloud,\n                               int64_t *out_timestamp_ns)"
  },
  {
    "label": "ArPointCloud_release()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArPointCloud_release(ArPointCloud *point_cloud)"
  },
  {
    "label": "ArImageMetadata_release()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArImageMetadata_release(ArImageMetadata *metadata)"
  },
  {
    "label": "ArImage_getWidth()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArImage_getWidth(const ArSession *session,\n                      const ArImage *image,\n                      int32_t *out_width)"
  },
  {
    "label": "ArImage_getHeight()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArImage_getHeight(const ArSession *session,\n                       const ArImage *image,\n                       int32_t *out_height)"
  },
  {
    "label": "ArImage_getTimestamp()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArImage_getTimestamp(const ArSession *session,\n                          const ArImage *image,\n                          int64_t *out_timestamp_ns)"
  },
  {
    "label": "ArImage_getFormat()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArImage_getFormat(const ArSession *session,\n                       const ArImage *image,\n                       ArImageFormat *out_format)"
  },
  {
    "label": "ArImage_getNumberOfPlanes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArImage_getNumberOfPlanes(const ArSession *session,\n                               const ArImage *image,\n                               int32_t *out_num_planes)"
  },
  {
    "label": "ArImage_getPlanePixelStride()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArImage_getPlanePixelStride(const ArSession *session,\n                                 const ArImage *image,\n                                 int32_t plane_index,\n                                 int32_t *out_pixel_stride)"
  },
  {
    "label": "ArImage_getPlaneRowStride()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArImage_getPlaneRowStride(const ArSession *session,\n                               const ArImage *image,\n                               int32_t plane_index,\n                               int32_t *out_row_stride)"
  },
  {
    "label": "ArImage_getPlaneData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArImage_getPlaneData(const ArSession *session,\n                          const ArImage *image,\n                          int32_t plane_index,\n                          const uint8_t **out_data,\n                          int32_t *out_data_length)"
  },
  {
    "label": "ArImage_release()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArImage_release(ArImage *image)"
  },
  {
    "label": "ArLightEstimate_create()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArLightEstimate_create(const ArSession *session,\n                            ArLightEstimate **out_light_estimate)"
  },
  {
    "label": "ArLightEstimate_destroy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArLightEstimate_destroy(ArLightEstimate *light_estimate)"
  },
  {
    "label": "ArLightEstimate_getState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArLightEstimate_getState(const ArSession *session,\n                              const ArLightEstimate *light_estimate,\n                              ArLightEstimateState *out_light_estimate_state)"
  },
  {
    "label": "ArLightEstimate_getPixelIntensity()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArLightEstimate_getPixelIntensity(const ArSession *session,\n                                       const ArLightEstimate *light_estimate,\n                                       float *out_pixel_intensity)"
  },
  {
    "label": "ArLightEstimate_getColorCorrection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArLightEstimate_getColorCorrection(const ArSession *session,\n                                        const ArLightEstimate *light_estimate,\n                                        float *out_color_correction_4)"
  },
  {
    "label": "ArLightEstimate_getTimestamp()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArLightEstimate_getTimestamp(const ArSession *session,\n                                  const ArLightEstimate *light_estimate,\n                                  int64_t *out_timestamp_ns)"
  },
  {
    "label": "ArLightEstimate_getEnvironmentalHdrMainLightDirection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArLightEstimate_getEnvironmentalHdrMainLightDirection(\n    const ArSession *session,\n    const ArLightEstimate *light_estimate,\n    float *out_direction_3)"
  },
  {
    "label": "ArLightEstimate_getEnvironmentalHdrMainLightIntensity()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArLightEstimate_getEnvironmentalHdrMainLightIntensity(\n    const ArSession *session,\n    const ArLightEstimate *light_estimate,\n    float *out_intensity_3)"
  },
  {
    "label": "ArLightEstimate_getEnvironmentalHdrAmbientSphericalHarmonics()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArLightEstimate_getEnvironmentalHdrAmbientSphericalHarmonics(\n    const ArSession *session,\n    const ArLightEstimate *light_estimate,\n    float *out_coefficients_27)"
  },
  {
    "label": "ArLightEstimate_acquireEnvironmentalHdrCubemap()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArLightEstimate_acquireEnvironmentalHdrCubemap(\n    const ArSession *session,\n    const ArLightEstimate *light_estimate,\n    ArImageCubemap out_textures_6)"
  },
  {
    "label": "ArAnchorList_create()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArAnchorList_create(const ArSession *session,\n                         ArAnchorList **out_anchor_list)"
  },
  {
    "label": "ArAnchorList_destroy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArAnchorList_destroy(ArAnchorList *anchor_list)"
  },
  {
    "label": "ArAnchorList_getSize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArAnchorList_getSize(const ArSession *session,\n                          const ArAnchorList *anchor_list,\n                          int32_t *out_size)"
  },
  {
    "label": "ArAnchorList_acquireItem()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArAnchorList_acquireItem(const ArSession *session,\n                              const ArAnchorList *anchor_list,\n                              int32_t index,\n                              ArAnchor **out_anchor)"
  },
  {
    "label": "ArAnchor_getPose()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArAnchor_getPose(const ArSession *session,\n                      const ArAnchor *anchor,\n                      ArPose *out_pose)"
  },
  {
    "label": "ArAnchor_getTrackingState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArAnchor_getTrackingState(const ArSession *session,\n                               const ArAnchor *anchor,\n                               ArTrackingState *out_tracking_state)"
  },
  {
    "label": "ArAnchor_detach()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArAnchor_detach(ArSession *session, ArAnchor *anchor)"
  },
  {
    "label": "ArAnchor_release()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArAnchor_release(ArAnchor *anchor)"
  },
  {
    "label": "ArTrackableList_create()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArTrackableList_create(const ArSession *session,\n                            ArTrackableList **out_trackable_list)"
  },
  {
    "label": "ArTrackableList_destroy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArTrackableList_destroy(ArTrackableList *trackable_list)"
  },
  {
    "label": "ArTrackableList_getSize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArTrackableList_getSize(const ArSession *session,\n                             const ArTrackableList *trackable_list,\n                             int32_t *out_size)"
  },
  {
    "label": "ArTrackableList_acquireItem()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArTrackableList_acquireItem(const ArSession *session,\n                                 const ArTrackableList *trackable_list,\n                                 int32_t index,\n                                 ArTrackable **out_trackable)"
  },
  {
    "label": "ArTrackable_release()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArTrackable_release(ArTrackable *trackable)"
  },
  {
    "label": "ArTrackable_getType()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArTrackable_getType(const ArSession *session,\n                         const ArTrackable *trackable,\n                         ArTrackableType *out_trackable_type)"
  },
  {
    "label": "ArTrackable_getTrackingState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArTrackable_getTrackingState(const ArSession *session,\n                                  const ArTrackable *trackable,\n                                  ArTrackingState *out_tracking_state)"
  },
  {
    "label": "ArTrackable_acquireNewAnchor()",
    "kind": "Method",
    "detail": "Function (ArStatus)",
    "insertText": "ArTrackable_acquireNewAnchor(ArSession *session,\n                                      ArTrackable *trackable,\n                                      ArPose *pose,\n                                      ArAnchor **out_anchor)"
  },
  {
    "label": "ArTrackable_getAnchors()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArTrackable_getAnchors(const ArSession *session,\n                            const ArTrackable *trackable,\n                            ArAnchorList *out_anchor_list)"
  },
  {
    "label": "ArPlane_acquireSubsumedBy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArPlane_acquireSubsumedBy(const ArSession *session,\n                               const ArPlane *plane,\n                               ArPlane **out_subsumed_by)"
  },
  {
    "label": "ArPlane_getType()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArPlane_getType(const ArSession *session,\n                     const ArPlane *plane,\n                     ArPlaneType *out_plane_type)"
  },
  {
    "label": "ArPlane_getCenterPose()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArPlane_getCenterPose(const ArSession *session,\n                           const ArPlane *plane,\n                           ArPose *out_pose)"
  },
  {
    "label": "ArPlane_getExtentX()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArPlane_getExtentX(const ArSession *session,\n                        const ArPlane *plane,\n                        float *out_extent_x)"
  },
  {
    "label": "ArPlane_getExtentZ()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArPlane_getExtentZ(const ArSession *session,\n                        const ArPlane *plane,\n                        float *out_extent_z)"
  },
  {
    "label": "ArPlane_getPolygonSize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArPlane_getPolygonSize(const ArSession *session,\n                            const ArPlane *plane,\n                            int32_t *out_polygon_size)"
  },
  {
    "label": "ArPlane_getPolygon()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArPlane_getPolygon(const ArSession *session,\n                        const ArPlane *plane,\n                        float *out_polygon_xz)"
  },
  {
    "label": "ArPlane_isPoseInExtents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArPlane_isPoseInExtents(const ArSession *session,\n                             const ArPlane *plane,\n                             const ArPose *pose,\n                             int32_t *out_pose_in_extents)"
  },
  {
    "label": "ArPlane_isPoseInPolygon()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArPlane_isPoseInPolygon(const ArSession *session,\n                             const ArPlane *plane,\n                             const ArPose *pose,\n                             int32_t *out_pose_in_polygon)"
  },
  {
    "label": "ArPoint_getPose()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArPoint_getPose(const ArSession *session,\n                     const ArPoint *point,\n                     ArPose *out_pose)"
  },
  {
    "label": "ArPoint_getOrientationMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArPoint_getOrientationMode(const ArSession *session,\n                                const ArPoint *point,\n                                ArPointOrientationMode *out_orientation_mode)"
  },
  {
    "label": "ArInstantPlacementPoint_getPose()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArInstantPlacementPoint_getPose(\n    const ArSession *session,\n    const ArInstantPlacementPoint *instant_placement_point,\n    ArPose *out_pose)"
  },
  {
    "label": "ArInstantPlacementPoint_getTrackingMethod()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArInstantPlacementPoint_getTrackingMethod(\n    const ArSession *session,\n    const ArInstantPlacementPoint *instant_placement_point,\n    ArInstantPlacementPointTrackingMethod *out_tracking_method)"
  },
  {
    "label": "ArAugmentedImage_getCenterPose()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArAugmentedImage_getCenterPose(const ArSession *session,\n                                    const ArAugmentedImage *augmented_image,\n                                    ArPose *out_pose)"
  },
  {
    "label": "ArAugmentedImage_getExtentX()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArAugmentedImage_getExtentX(const ArSession *session,\n                                 const ArAugmentedImage *augmented_image,\n                                 float *out_extent_x)"
  },
  {
    "label": "ArAugmentedImage_getExtentZ()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArAugmentedImage_getExtentZ(const ArSession *session,\n                                 const ArAugmentedImage *augmented_image,\n                                 float *out_extent_z)"
  },
  {
    "label": "ArAugmentedImage_getIndex()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArAugmentedImage_getIndex(const ArSession *session,\n                               const ArAugmentedImage *augmented_image,\n                               int32_t *out_index)"
  },
  {
    "label": "ArAugmentedImage_acquireName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArAugmentedImage_acquireName(const ArSession *session,\n                                  const ArAugmentedImage *augmented_image,\n                                  char **out_augmented_image_name)"
  },
  {
    "label": "ArAugmentedImage_getTrackingMethod()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArAugmentedImage_getTrackingMethod(\n    const ArSession *session,\n    const ArAugmentedImage *image,\n    ArAugmentedImageTrackingMethod *out_tracking_method)"
  },
  {
    "label": "ArAugmentedFace_getMeshVertices()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArAugmentedFace_getMeshVertices(const ArSession *session,\n                                     const ArAugmentedFace *face,\n                                     const float **out_vertices,\n                                     int32_t *out_number_of_vertices)"
  },
  {
    "label": "ArAugmentedFace_getMeshNormals()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArAugmentedFace_getMeshNormals(const ArSession *session,\n                                    const ArAugmentedFace *face,\n                                    const float **out_normals,\n                                    int32_t *out_number_of_normals)"
  },
  {
    "label": "ArAugmentedFace_getMeshTextureCoordinates()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArAugmentedFace_getMeshTextureCoordinates(\n    const ArSession *session,\n    const ArAugmentedFace *face,\n    const float **out_texture_coordinates,\n    int32_t *out_number_of_texture_coordinates)"
  },
  {
    "label": "ArAugmentedFace_getMeshTriangleIndices()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArAugmentedFace_getMeshTriangleIndices(\n    const ArSession *session,\n    const ArAugmentedFace *face,\n    const uint16_t **out_triangle_indices,\n    int32_t *out_number_of_triangles)"
  },
  {
    "label": "ArAugmentedFace_getRegionPose()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArAugmentedFace_getRegionPose(const ArSession *session,\n                                   const ArAugmentedFace *face,\n                                   const ArAugmentedFaceRegionType region_type,\n                                   ArPose *out_pose)"
  },
  {
    "label": "ArAugmentedFace_getCenterPose()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArAugmentedFace_getCenterPose(const ArSession *session,\n                                   const ArAugmentedFace *face,\n                                   ArPose *out_pose)"
  },
  {
    "label": "ArAugmentedImageDatabase_create()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArAugmentedImageDatabase_create(\n    const ArSession *session,\n    ArAugmentedImageDatabase **out_augmented_image_database)"
  },
  {
    "label": "ArAugmentedImageDatabase_deserialize()",
    "kind": "Method",
    "detail": "Function (ArStatus)",
    "insertText": "ArAugmentedImageDatabase_deserialize(\n    const ArSession *session,\n    const uint8_t *database_raw_bytes,\n    int64_t database_raw_bytes_size,\n    ArAugmentedImageDatabase **out_augmented_image_database)"
  },
  {
    "label": "ArAugmentedImageDatabase_serialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArAugmentedImageDatabase_serialize(\n    const ArSession *session,\n    const ArAugmentedImageDatabase *augmented_image_database,\n    uint8_t **out_image_database_raw_bytes,\n    int64_t *out_image_database_raw_bytes_size)"
  },
  {
    "label": "ArAugmentedImageDatabase_addImage()",
    "kind": "Method",
    "detail": "Function (ArStatus)",
    "insertText": "ArAugmentedImageDatabase_addImage(\n    const ArSession *session,\n    ArAugmentedImageDatabase *augmented_image_database,\n    const char *image_name,\n    const uint8_t *image_grayscale_pixels,\n    int32_t image_width_in_pixels,\n    int32_t image_height_in_pixels,\n    int32_t image_stride_in_pixels,\n    int32_t *out_index)"
  },
  {
    "label": "ArAugmentedImageDatabase_addImageWithPhysicalSize()",
    "kind": "Method",
    "detail": "Function (ArStatus)",
    "insertText": "ArAugmentedImageDatabase_addImageWithPhysicalSize(\n    const ArSession *session,\n    ArAugmentedImageDatabase *augmented_image_database,\n    const char *image_name,\n    const uint8_t *image_grayscale_pixels,\n    int32_t image_width_in_pixels,\n    int32_t image_height_in_pixels,\n    int32_t image_stride_in_pixels,\n    float image_width_in_meters,\n    int32_t *out_index)"
  },
  {
    "label": "ArAugmentedImageDatabase_getNumImages()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArAugmentedImageDatabase_getNumImages(\n    const ArSession *session,\n    const ArAugmentedImageDatabase *augmented_image_database,\n    int32_t *out_number_of_images)"
  },
  {
    "label": "ArAugmentedImageDatabase_destroy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArAugmentedImageDatabase_destroy(\n    ArAugmentedImageDatabase *augmented_image_database)"
  },
  {
    "label": "ArHitResultList_create()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArHitResultList_create(const ArSession *session,\n                            ArHitResultList **out_hit_result_list)"
  },
  {
    "label": "ArHitResultList_destroy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArHitResultList_destroy(ArHitResultList *hit_result_list)"
  },
  {
    "label": "ArHitResultList_getSize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArHitResultList_getSize(const ArSession *session,\n                             const ArHitResultList *hit_result_list,\n                             int32_t *out_size)"
  },
  {
    "label": "ArHitResultList_getItem()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArHitResultList_getItem(const ArSession *session,\n                             const ArHitResultList *hit_result_list,\n                             int32_t index,\n                             ArHitResult *out_hit_result)"
  },
  {
    "label": "ArHitResult_create()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArHitResult_create(const ArSession *session, ArHitResult **out_hit_result)"
  },
  {
    "label": "ArHitResult_destroy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArHitResult_destroy(ArHitResult *hit_result)"
  },
  {
    "label": "ArHitResult_getDistance()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArHitResult_getDistance(const ArSession *session,\n                             const ArHitResult *hit_result,\n                             float *out_distance)"
  },
  {
    "label": "ArHitResult_getHitPose()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArHitResult_getHitPose(const ArSession *session,\n                            const ArHitResult *hit_result,\n                            ArPose *out_pose)"
  },
  {
    "label": "ArHitResult_acquireTrackable()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArHitResult_acquireTrackable(const ArSession *session,\n                                  const ArHitResult *hit_result,\n                                  ArTrackable **out_trackable)"
  },
  {
    "label": "ArHitResult_acquireNewAnchor()",
    "kind": "Method",
    "detail": "Function (ArStatus)",
    "insertText": "ArHitResult_acquireNewAnchor(ArSession *session,\n                                      ArHitResult *hit_result,\n                                      ArAnchor **out_anchor)"
  },
  {
    "label": "ArString_release()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArString_release(char *str)"
  },
  {
    "label": "ArByteArray_release()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArByteArray_release(uint8_t *byte_array)"
  },
  {
    "label": "ArEarth_getEarthState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArEarth_getEarthState(const ArSession *session,\n                           const ArEarth *earth,\n                           ArEarthState *out_state)"
  },
  {
    "label": "ArEarth_getCameraGeospatialPose()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArEarth_getCameraGeospatialPose(\n    const ArSession *session,\n    const ArEarth *earth,\n    ArGeospatialPose *out_camera_geospatial_pose)"
  },
  {
    "label": "ArEarth_getGeospatialPose()",
    "kind": "Method",
    "detail": "Function (ArStatus)",
    "insertText": "ArEarth_getGeospatialPose(const ArSession *session,\n                                   const ArEarth *earth,\n                                   const ArPose *pose,\n                                   ArGeospatialPose *out_geospatial_pose)"
  },
  {
    "label": "ArEarth_getPose()",
    "kind": "Method",
    "detail": "Function (ArStatus)",
    "insertText": "ArEarth_getPose(const ArSession *session,\n                         const ArEarth *earth,\n                         double latitude,\n                         double longitude,\n                         double altitude,\n                         const float *eus_quaternion_4,\n                         ArPose *out_pose)"
  },
  {
    "label": "ArEarth_acquireNewAnchor()",
    "kind": "Method",
    "detail": "Function (ArStatus)",
    "insertText": "ArEarth_acquireNewAnchor(ArSession *session,\n                                  ArEarth *earth,\n                                  double latitude,\n                                  double longitude,\n                                  double altitude,\n                                  const float *eus_quaternion_4,\n                                  ArAnchor **out_anchor)"
  },
  {
    "label": "ArResolveAnchorOnTerrainFuture_acquireResultAnchor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArResolveAnchorOnTerrainFuture_acquireResultAnchor(\n    const ArSession *session,\n    const ArResolveAnchorOnTerrainFuture *future,\n    ArAnchor **out_anchor)"
  },
  {
    "label": "ArResolveAnchorOnTerrainFuture_getResultTerrainAnchorState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArResolveAnchorOnTerrainFuture_getResultTerrainAnchorState(\n    const ArSession *session,\n    const ArResolveAnchorOnTerrainFuture *future,\n    ArTerrainAnchorState *out_terrain_anchor_state)"
  },
  {
    "label": "ArEarth_resolveAnchorOnTerrainAsync()",
    "kind": "Method",
    "detail": "Function (ArStatus)",
    "insertText": "ArEarth_resolveAnchorOnTerrainAsync(\n    ArSession *session,\n    ArEarth *earth,\n    double latitude,\n    double longitude,\n    double altitude_above_terrain,\n    const float *eus_quaternion_4,\n    void *context,\n    ArResolveAnchorOnTerrainCallback callback,\n    ArResolveAnchorOnTerrainFuture **out_future)"
  },
  {
    "label": "ArResolveAnchorOnRooftopFuture_acquireResultAnchor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArResolveAnchorOnRooftopFuture_acquireResultAnchor(\n    const ArSession *session,\n    const ArResolveAnchorOnRooftopFuture *future,\n    ArAnchor **out_anchor)"
  },
  {
    "label": "ArResolveAnchorOnRooftopFuture_getResultRooftopAnchorState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArResolveAnchorOnRooftopFuture_getResultRooftopAnchorState(\n    const ArSession *session,\n    const ArResolveAnchorOnRooftopFuture *future,\n    ArRooftopAnchorState *out_rooftop_anchor_state)"
  },
  {
    "label": "ArEarth_resolveAnchorOnRooftopAsync()",
    "kind": "Method",
    "detail": "Function (ArStatus)",
    "insertText": "ArEarth_resolveAnchorOnRooftopAsync(\n    ArSession *session,\n    ArEarth *earth,\n    double latitude,\n    double longitude,\n    double altitude_above_rooftop,\n    const float *eus_quaternion_4,\n    void *context,\n    ArResolveAnchorOnRooftopCallback callback,\n    ArResolveAnchorOnRooftopFuture **out_future)"
  },
  {
    "label": "AR_DEPRECATED()",
    "kind": "Method",
    "detail": "Function (ArCheckVpsAvailabilityCallback)",
    "insertText": "AR_DEPRECATED(\n    \"Deprecated in release 1.37. \"\n    \"Use ArVpsAvailabilityCallback instead.\")"
  },
  {
    "label": "ArSession_checkVpsAvailabilityAsync()",
    "kind": "Method",
    "detail": "Function (ArStatus)",
    "insertText": "ArSession_checkVpsAvailabilityAsync(\n    ArSession *session,\n    double latitude_degrees,\n    double longitude_degrees,\n    void *context,\n    ArVpsAvailabilityCallback callback,\n    ArVpsAvailabilityFuture **out_future)"
  },
  {
    "label": "ArVpsAvailabilityFuture_getResult()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArVpsAvailabilityFuture_getResult(\n    const ArSession *session,\n    const ArVpsAvailabilityFuture *future,\n    ArVpsAvailability *out_result_availability)"
  },
  {
    "label": "ArGeospatialPose_create()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArGeospatialPose_create(const ArSession *session,\n                             ArGeospatialPose **out_pose)"
  },
  {
    "label": "ArGeospatialPose_destroy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArGeospatialPose_destroy(ArGeospatialPose *pose)"
  },
  {
    "label": "ArGeospatialPose_getLatitudeLongitude()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArGeospatialPose_getLatitudeLongitude(\n    const ArSession *session,\n    const ArGeospatialPose *geospatial_pose,\n    double *out_latitude_degrees,\n    double *out_longitude_degrees)"
  },
  {
    "label": "ArGeospatialPose_getHorizontalAccuracy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArGeospatialPose_getHorizontalAccuracy(\n    const ArSession *session,\n    const ArGeospatialPose *geospatial_pose,\n    double *out_horizontal_accuracy_meters)"
  },
  {
    "label": "ArGeospatialPose_getAltitude()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArGeospatialPose_getAltitude(const ArSession *session,\n                                  const ArGeospatialPose *geospatial_pose,\n                                  double *out_altitude_meters)"
  },
  {
    "label": "ArGeospatialPose_getVerticalAccuracy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArGeospatialPose_getVerticalAccuracy(\n    const ArSession *session,\n    const ArGeospatialPose *geospatial_pose,\n    double *out_vertical_accuracy_meters)"
  },
  {
    "label": "ArGeospatialPose_getEastUpSouthQuaternion()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArGeospatialPose_getEastUpSouthQuaternion(\n    const ArSession *session,\n    const ArGeospatialPose *geospatial_pose,\n    float *out_quaternion_4)"
  },
  {
    "label": "ArGeospatialPose_getOrientationYawAccuracy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArGeospatialPose_getOrientationYawAccuracy(\n    const ArSession *session,\n    const ArGeospatialPose *geospatial_pose,\n    double *out_orientation_yaw_accuracy_degrees)"
  },
  {
    "label": "ArStreetscapeGeometry_getMeshPose()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArStreetscapeGeometry_getMeshPose(\n    const ArSession *session,\n    const ArStreetscapeGeometry *streetscape_geometry,\n    ArPose *out_pose)"
  },
  {
    "label": "ArStreetscapeGeometry_getType()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArStreetscapeGeometry_getType(\n    const ArSession *session,\n    const ArStreetscapeGeometry *streetscape_geometry,\n    ArStreetscapeGeometryType *out_type)"
  },
  {
    "label": "ArStreetscapeGeometry_getQuality()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArStreetscapeGeometry_getQuality(\n    const ArSession *session,\n    const ArStreetscapeGeometry *streetscape_geometry,\n    ArStreetscapeGeometryQuality *out_quality)"
  },
  {
    "label": "ArStreetscapeGeometry_acquireMesh()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArStreetscapeGeometry_acquireMesh(\n    const ArSession *session,\n    const ArStreetscapeGeometry *streetscape_geometry,\n    ArMesh **out_mesh)"
  },
  {
    "label": "ArImageMetadata_getAllKeys()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArImageMetadata_getAllKeys(const ArSession *session,\n                                const ArImageMetadata *image_metadata,\n                                int32_t *out_number_of_tags,\n                                const uint32_t **out_tags)"
  },
  {
    "label": "ArImageMetadata_getConstEntry()",
    "kind": "Method",
    "detail": "Function (ArStatus)",
    "insertText": "ArImageMetadata_getConstEntry(\n    const ArSession *session,\n    const ArImageMetadata *image_metadata,\n    uint32_t tag,\n    ArImageMetadata_const_entry *out_metadata_entry)"
  }
]