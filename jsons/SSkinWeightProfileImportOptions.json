[
  {
    "label": "IDetailsView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDetailsView"
  },
  {
    "label": "USkinWeightImportOptions",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USkinWeightImportOptions"
  },
  {
    "label": "FSkinWeightImportOptionsCustomization",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSkinWeightImportOptionsCustomization"
  },
  {
    "label": "SSkinWeightProfileImportOptions",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SSkinWeightProfileImportOptions"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Widgets / SCompoundWidget . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Widgets / Views / STableViewBase . h \" # include \" Widgets / Views / STableRow . h \" # include \" Widgets / SWindow . h \" # include \" Widgets / Input / SCheckBox . h \" # include \" Widgets / Text / STextBlock . h \" # include \" IDetailCustomization . h \" # include \" Widgets / Input / SEditableTextBox . h \" # include \" PropertyHandle . h \" # include \" Engine / SkeletalMesh . h \" # include \" SSkinWeightProfileImportOptions . generated . h \" class IDetailsView ;)",
    "insertText": "UCLASS(Config = EditorPerProjectUserSettings)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: UPROPERTY(EditAnywhere, Category=SkinWeights, Config)"
  },
  {
    "label": "FSkinWeightImportOptionsCustomization()",
    "kind": "Method",
    "detail": "Function (} ; class FSkinWeightImportOptionsCustomization : public IDetailCustomization { public :)",
    "insertText": "FSkinWeightImportOptionsCustomization(USkeletalMesh* InSkeletalMesh) : WeakSkeletalMesh(InSkeletalMesh)"
  },
  {
    "label": "MakeInstance()",
    "kind": "Method",
    "detail": "Function (} TSharedRef<IDetailCustomization>)",
    "insertText": "MakeInstance(USkeletalMesh* InSkeletalMesh)"
  },
  {
    "label": "CustomizeDetails()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "CustomizeDetails(IDetailLayoutBuilder& DetailBuilder)"
  },
  {
    "label": "OnGetProfileName()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "OnGetProfileName()"
  },
  {
    "label": "IsProfileNameValid()",
    "kind": "Method",
    "detail": "Function (const bool)",
    "insertText": "IsProfileNameValid(const FString& NewName)"
  },
  {
    "label": "UpdateNameRestriction()",
    "kind": "Method",
    "detail": "Function (protected : TSharedPtr<SEditableTextBox> NameEditTextBox ; TSharedPtr<IPropertyHandle> ProfileNameHandle ; TWeakObjectPtr<USkeletalMesh> WeakSkeletalMesh ; TArray<FString> RestrictedNames ; void)",
    "insertText": "UpdateNameRestriction()"
  },
  {
    "label": "OnProfileNameChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnProfileNameChanged(const FText& InNewText)"
  },
  {
    "label": "OnProfileNameCommitted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnProfileNameCommitted(const FText& InNewText, ETextCommit::Type InTextCommit)"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (} ; class SSkinWeightProfileImportOptions : public SCompoundWidget { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SSkinWeightProfileImportOptions) : _ImportSettings(nullptr) , _WidgetWindow() , _SkeletalMesh()"
  },
  {
    "label": "SLATE_ARGUMENT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_ARGUMENT(USkinWeightImportOptions*, ImportSettings) SLATE_ARGUMENT(TSharedPtr<SWindow>, WidgetWindow) SLATE_ARGUMENT(USkeletalMesh*, SkeletalMesh) SLATE_END_ARGS() public: void Construct(const FArguments& InArgs)"
  },
  {
    "label": "SupportsKeyboardFocus()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SupportsKeyboardFocus()"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (bShouldImport = true ;)",
    "insertText": "if(WidgetWindow.IsValid())"
  },
  {
    "label": "Pin()",
    "kind": "Method",
    "detail": "Function (WidgetWindow .)",
    "insertText": "Pin()->RequestDestroyWindow()"
  },
  {
    "label": "Handled()",
    "kind": "Method",
    "detail": "Function (} return)",
    "insertText": "Handled()"
  },
  {
    "label": "OnCancel()",
    "kind": "Method",
    "detail": "Function (} FReply)",
    "insertText": "OnCancel()"
  },
  {
    "label": "OnKeyDown()",
    "kind": "Method",
    "detail": "Function (} FReply)",
    "insertText": "OnKeyDown(const FGeometry& MyGeometry, const FKeyEvent& InKeyEvent)"
  },
  {
    "label": "Unhandled()",
    "kind": "Method",
    "detail": "Function (} return)",
    "insertText": "Unhandled()"
  },
  {
    "label": "ShouldImport()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "ShouldImport()"
  }
]