[
  {
    "label": "FApplicationMode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FApplicationMode"
  },
  {
    "label": "FMenuBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMenuBuilder"
  },
  {
    "label": "FTabInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTabInfo"
  },
  {
    "label": "SToolTip",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SToolTip"
  },
  {
    "label": "FTabPayload",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTabPayload"
  },
  {
    "label": "FWorkflowTabSpawnInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWorkflowTabSpawnInfo"
  },
  {
    "label": "FWorkflowTabFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWorkflowTabFactory"
  },
  {
    "label": "FAssetEditorToolkit",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAssetEditorToolkit"
  },
  {
    "label": "FDocumentTracker",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDocumentTracker"
  },
  {
    "label": "FDocumentTabFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDocumentTabFactory"
  },
  {
    "label": "FGenericTabHistory",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGenericTabHistory"
  },
  {
    "label": "FTabPayload()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Misc / Attribute . h \" # include \" Widgets / SWidget . h \" # include \" Textures / SlateIcon . h \" # include \" Toolkits / AssetEditorToolkit . h \" class FApplicationMode ; class FMenuBuilder ; class FTabInfo ; class SToolTip ; struct FTabPayload { public : const FName PayloadType ; public : ~)",
    "insertText": "FTabPayload()"
  },
  {
    "label": "IsEqual()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsEqual(const TSharedRef<FTabPayload>& OtherPayload)"
  },
  {
    "label": "FWorkflowTabSpawnInfo()",
    "kind": "Method",
    "detail": "Function (} } ; class FWorkflowTabSpawnInfo { public : TSharedPtr<FTabPayload> Payload ; TSharedPtr<class FTabInfo> TabInfo ; TSharedPtr<FTabManager> TabManager ; public :)",
    "insertText": "FWorkflowTabSpawnInfo() : TabInfo(NULL)"
  },
  {
    "label": "FWorkflowTabFactory()",
    "kind": "Method",
    "detail": "Function (} } ; class FWorkflowTabFactory : public TSharedFromThis<FWorkflowTabFactory> { protected : FName TabIdentifier ; ETabRole TabRole ; FText TabLabel ; FSlateIcon TabIcon ; float InsideTabPadding ; bool bIsSingleton ; bool bShouldAutosize ; FText ViewMenuDescription ; FText ViewMenuTooltip ; TWeakPtr<class FAssetEditorToolkit> HostingApp ; public : ~)",
    "insertText": "FWorkflowTabFactory()"
  },
  {
    "label": "SpawnTab()",
    "kind": "Method",
    "detail": "Function (} TSharedRef<SDockTab>)",
    "insertText": "SpawnTab(const FWorkflowTabSpawnInfo& Info)"
  },
  {
    "label": "SpawnBlankTab()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SDockTab>)",
    "insertText": "SpawnBlankTab()"
  },
  {
    "label": "UpdateTab()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateTab(TSharedPtr<SDockTab> InDockTab, const FWorkflowTabSpawnInfo& Info, TSharedPtr< SWidget > InContent)"
  },
  {
    "label": "CreateViewMenuEntry()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateViewMenuEntry(FMenuBuilder& MenuBuilder, const FUIAction& Action)"
  },
  {
    "label": "RegisterTabSpawner()",
    "kind": "Method",
    "detail": "Function (FTabSpawnerEntry&)",
    "insertText": "RegisterTabSpawner(TSharedRef<FTabManager> TabManager, const FApplicationMode* CurrentApplicationMode)"
  },
  {
    "label": "FWorkflowTabFactory()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "FWorkflowTabFactory(FName InIdentifier, TSharedPtr<class FAssetEditorToolkit> InHostingApp)"
  },
  {
    "label": "GetIdentifier()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetIdentifier()"
  },
  {
    "label": "ConstructTabLabelSuffix()",
    "kind": "Method",
    "detail": "Function (TAttribute<FText>)",
    "insertText": "ConstructTabLabelSuffix(const FWorkflowTabSpawnInfo& Info)"
  },
  {
    "label": "IsPayloadValid()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsPayloadValid(TSharedRef<FTabPayload> Payload)"
  },
  {
    "label": "OnSpawnTab()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SDockTab>)",
    "insertText": "OnSpawnTab(const FSpawnTabArgs& SpawnArgs, TWeakPtr<FTabManager> WeakTabManager)"
  },
  {
    "label": "CanSpawnTab()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanSpawnTab(const FSpawnTabArgs& SpawnArgs, TWeakPtr<FTabManager> WeakTabManager)"
  },
  {
    "label": "CreateTabBody()",
    "kind": "Method",
    "detail": "Function (public : TSharedRef<SWidget>)",
    "insertText": "CreateTabBody(const FWorkflowTabSpawnInfo& Info)"
  },
  {
    "label": "GetTabIcon()",
    "kind": "Method",
    "detail": "Function (const FSlateBrush*)",
    "insertText": "GetTabIcon(const FWorkflowTabSpawnInfo& Info)"
  },
  {
    "label": "GetTabSpawnerIcon()",
    "kind": "Method",
    "detail": "Function (const FSlateIcon&)",
    "insertText": "GetTabSpawnerIcon(const FWorkflowTabSpawnInfo& Info)"
  },
  {
    "label": "CreateTabToolTipWidget()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<SToolTip>)",
    "insertText": "CreateTabToolTipWidget(const FWorkflowTabSpawnInfo& Info)"
  },
  {
    "label": "GetTabToolTipText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetTabToolTipText(const FWorkflowTabSpawnInfo& Info)"
  },
  {
    "label": "OnTabActivated()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "OnTabActivated(TSharedPtr<SDockTab> Tab)"
  },
  {
    "label": "OnTabForegrounded()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "OnTabForegrounded(TSharedPtr<SDockTab> Tab)"
  },
  {
    "label": "OnTabBackgrounded()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "OnTabBackgrounded(TSharedPtr<SDockTab> Tab)"
  },
  {
    "label": "OnTabRefreshed()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "OnTabRefreshed(TSharedPtr<SDockTab> Tab)"
  },
  {
    "label": "IsPayloadSupported()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsPayloadSupported(TSharedRef<FTabPayload> Payload)"
  },
  {
    "label": "FDocumentTabFactory()",
    "kind": "Method",
    "detail": "Function (protected :)",
    "insertText": "FDocumentTabFactory(FName InIdentifier, TSharedPtr<class FAssetEditorToolkit> InHostingApp)"
  }
]