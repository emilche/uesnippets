[
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "RadAFileHeader",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RadAFileHeader"
  },
  {
    "label": "RadASeekTableHeader",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RadASeekTableHeader"
  },
  {
    "label": "RADA_SYNC_BYTE()",
    "kind": "Method",
    "detail": "Function (# pragma once # include<stdint . h> # define)",
    "insertText": "RADA_SYNC_BYTE(0b01010101)"
  },
  {
    "label": "RadASampleRateFromEnum()",
    "kind": "Method",
    "detail": "Function (Rate_24000,Rate_32000,Rate_44100,Rate_48000,Rate_COUNT,} ; struct RadAFileHeader { uint32_t tag ; uint32_t bytes_for_first_decode ; uint8_t version ; uint8_t channels ; uint16_t rada_header_bytes ; uint8_t shift_bits_for_seek_table_samples ; uint8_t bits_for_seek_table_bytes ; uint8_t bits_for_seek_table_samples ; ERadASampleRate sample_rate ; uint64_t frame_count ; uint64_t file_size ; uint16_t seek_table_entry_count ; uint16_t max_block_size ; uint16_t PADDING [ 2 ] ; } ; struct RadASeekTableHeader { int64_t byte_line_slope [ 2 ] ; int64_t byte_intercept ; int64_t byte_bias ; int64_t sample_line_slope [ 2 ] ; int64_t sample_intercept ; int64_t sample_bias ; } ; uint32_t)",
    "insertText": "RadASampleRateFromEnum(ERadASampleRate InRate)"
  }
]