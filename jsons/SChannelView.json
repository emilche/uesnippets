[
  {
    "label": "FSequencer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSequencer"
  },
  {
    "label": "FSequencerSelectedKey",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSequencerSelectedKey"
  },
  {
    "label": "ITrackAreaHotspot",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ITrackAreaHotspot"
  },
  {
    "label": "FTrackAreaViewModel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTrackAreaViewModel"
  },
  {
    "label": "FChannelModel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FChannelModel"
  },
  {
    "label": "FSectionModel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSectionModel"
  },
  {
    "label": "STrackLane",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "STrackLane"
  },
  {
    "label": "FChannelViewKeyCachedState",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FChannelViewKeyCachedState"
  },
  {
    "label": "SEQUENCER_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SEQUENCER_API"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct(const FArguments& InArgs, const FViewModelPtr& InViewModel, TSharedPtr<STrackAreaView> InTrackAreaView)"
  },
  {
    "label": "CreateKeysUnderMouse()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateKeysUnderMouse(const FVector2D& MousePosition, const FGeometry& AllottedGeometry, const TSet<FSequencerSelectedKey>& InPressedKeys, TArray<FSequencerSelectedKey>& OutKeys)"
  }
]