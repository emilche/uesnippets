[
  {
    "label": "StrContains()",
    "kind": "Method",
    "detail": "Function (# ifndef ABSL_STRINGS_MATCH_H_ # define ABSL_STRINGS_MATCH_H_ # include<cstring> # include \" absl / strings / string_view . h \" namespace absl { ABSL_NAMESPACE_BEGIN bool)",
    "insertText": "StrContains(absl::string_view haystack, absl::string_view needle)"
  },
  {
    "label": "StrContains()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "StrContains(absl::string_view haystack, char needle)"
  },
  {
    "label": "StartsWith()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "StartsWith(absl::string_view text, absl::string_view prefix)"
  },
  {
    "label": "EndsWith()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "EndsWith(absl::string_view text, absl::string_view suffix)"
  },
  {
    "label": "EqualsIgnoreCase()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "EqualsIgnoreCase(absl::string_view piece1, absl::string_view piece2)"
  },
  {
    "label": "StartsWithIgnoreCase()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "StartsWithIgnoreCase(absl::string_view text, absl::string_view prefix)"
  },
  {
    "label": "EndsWithIgnoreCase()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "EndsWithIgnoreCase(absl::string_view text, absl::string_view suffix)"
  }
]