[
  {
    "label": "PmuProfiler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PmuProfiler"
  },
  {
    "label": "PmuProfiler()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" cpu_profiler . h \" # include \" pmu_counter . h \" namespace hwcpipe { class PmuProfiler : public CpuProfiler { public :)",
    "insertText": "PmuProfiler(const CpuCounterSet &enabled_counters)"
  },
  {
    "label": "PmuProfiler()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "PmuProfiler()"
  },
  {
    "label": "enabled_counters()",
    "kind": "Method",
    "detail": "Function (const CpuCounterSet&)",
    "insertText": "enabled_counters()"
  },
  {
    "label": "run()",
    "kind": "Method",
    "detail": "Function (enabled_counters_ = counters ; } ; void)",
    "insertText": "run()"
  },
  {
    "label": "sample()",
    "kind": "Method",
    "detail": "Function (const CpuMeasurements&)",
    "insertText": "sample()"
  }
]