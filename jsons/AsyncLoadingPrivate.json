[
  {
    "label": "FAsyncArchive",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAsyncArchive"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FLinkerExportArchive",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLinkerExportArchive"
  },
  {
    "label": "FLinkerLoad",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLinkerLoad"
  },
  {
    "label": "PrecacheWithTimeLimit()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PrecacheWithTimeLimit(int64 PrecacheOffset, int64 PrecacheSize, bool bUseTimeLimit, bool bUseFullTimeLimit, double TickStartTime, double TimeLimit)"
  },
  {
    "label": "PrecacheForEvent()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PrecacheForEvent(IAsyncReadRequest* Read, int64 PrecacheOffset, int64 PrecacheSize)"
  },
  {
    "label": "FlushPrecacheBlock()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FlushPrecacheBlock()"
  },
  {
    "label": "ReadyToStartReadingHeader()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ReadyToStartReadingHeader(bool bUseTimeLimit, bool bUseFullTimeLimit, double TickStartTime, double TimeLimit)"
  },
  {
    "label": "StartReadingHeader()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StartReadingHeader()"
  },
  {
    "label": "EndReadingHeader()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EndReadingHeader()"
  },
  {
    "label": "LogItem()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LogItem(const TCHAR* Item, int64 Offset = 0, int64 Size = 0, double StartTime = 0.0)"
  },
  {
    "label": "DiscardInlineBufferAndUpdateCurrentPos()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DiscardInlineBufferAndUpdateCurrentPos()"
  },
  {
    "label": "SetPosAndUpdatePrecacheBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPosAndUpdatePrecacheBuffer(int64 Pos)"
  },
  {
    "label": "FirstExportStarting()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FirstExportStarting()"
  },
  {
    "label": "WaitRead()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "WaitRead(double TimeLimit = 0.0)"
  },
  {
    "label": "CompleteRead()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CompleteRead()"
  },
  {
    "label": "CancelRead()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CancelRead()"
  },
  {
    "label": "CompleteCancel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CompleteCancel()"
  },
  {
    "label": "WaitForIntialPhases()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "WaitForIntialPhases(double TimeLimit = 0.0)"
  },
  {
    "label": "ReadCallback()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReadCallback(bool bWasCancelled, IAsyncReadRequest*)"
  },
  {
    "label": "PrecacheInternal()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PrecacheInternal(int64 PrecacheOffset, int64 PrecacheSize, bool bApplyMinReadSize = true, IAsyncReadRequest* Read = nullptr)"
  },
  {
    "label": "FLinkerExportArchive()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FLinkerExportArchive(class FLinkerLoad& InLinker, int64 InExportSerialOffset, int64 InExportSerialSize)"
  }
]