[
  {
    "label": "Bitstreamstruct",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Bitstreamstruct"
  },
  {
    "label": "ISACBandwidth",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ISACBandwidth"
  },
  {
    "label": "IsacSamplingRate",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "IsacSamplingRate"
  },
  {
    "label": "INSTAT1()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_AUDIO_CODING_CODECS_ISAC_MAIN_SOURCE_STRUCTS_H_ # define MODULES_AUDIO_CODING_CODECS_ISAC_MAIN_SOURCE_STRUCTS_H_ # include \" modules / audio_coding / codecs / isac / bandwidth_info . h \" # include \" modules / audio_coding / codecs / isac / main / source / settings . h \" # include \" modules / third_party / fft / fft . h \" typedef struct Bitstreamstruct { uint8_t stream [ STREAM_SIZE_MAX ] ; uint32_t W_upper ; uint32_t streamval ; uint32_t stream_index ; } Bitstr ; typedef struct { double DataBufferLo [ WINLEN ] ; double DataBufferHi [ WINLEN ] ; double CorrBufLo [ ORDERLO + 1 ] ; double CorrBufHi [ ORDERHI + 1 ] ; float PreStateLoF [ ORDERLO + 1 ] ; float PreStateLoG [ ORDERLO + 1 ] ; float PreStateHiF [ ORDERHI + 1 ] ; float PreStateHiG [ ORDERHI + 1 ] ; float PostStateLoF [ ORDERLO + 1 ] ; float PostStateLoG [ ORDERLO + 1 ] ; float PostStateHiF [ ORDERHI + 1 ] ; float PostStateHiG [ ORDERHI + 1 ] ; double OldEnergy ; } MaskFiltstr ; typedef struct { double)",
    "insertText": "INSTAT1(QORDER - 1)"
  },
  {
    "label": "INSTAT2_float()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "INSTAT2_float(QORDER - 1)"
  },
  {
    "label": "INSTATLA1_float()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "INSTATLA1_float(QORDER - 1)"
  },
  {
    "label": "INSTATLA2_float()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "INSTATLA2_float(QORDER - 1)"
  },
  {
    "label": "LPCcoeffs_lo()",
    "kind": "Method",
    "detail": "Function (float INLABUF1_float [ QLOOKAHEAD ] ; float INLABUF2_float [ QLOOKAHEAD ] ; double HPstates [ HPORDER ] ; float HPstates_float [ HPORDER ] ; } PreFiltBankstr ; typedef struct { double STATE_0_LOWER [ 2* POSTQORDER ] ; double STATE_0_UPPER [ 2* POSTQORDER ] ; double HPstates1 [ HPORDER ] ; double HPstates2 [ HPORDER ] ; float STATE_0_LOWER_float [ 2* POSTQORDER ] ; float STATE_0_UPPER_float [ 2* POSTQORDER ] ; float HPstates1_float [ HPORDER ] ; float HPstates2_float [ HPORDER ] ; } PostFiltBankstr ; typedef struct { double ubuf [ PITCH_BUFFSIZE ] ; double ystate [ PITCH_DAMPORDER ] ; double oldlagp [ 1 ] ; double oldgainp [ 1 ] ; } PitchFiltstr ; typedef struct { double buffer [ PITCH_WLPCBUFLEN ] ; double istate [ PITCH_WLPCORDER ] ; double weostate [ PITCH_WLPCORDER ] ; double whostate [ PITCH_WLPCORDER ] ; double window [ PITCH_WLPCWINLEN ] ; } WeightFiltstr ; typedef struct { double dec_buffer [ PITCH_CORR_LEN2 + PITCH_CORR_STEP2 + PITCH_MAX_LAG / 2 - PITCH_FRAME_LEN / 2 + 2 ] ; double decimator_state [ 2* ALLPASSSECTIONS + 1 ] ; double hp_state [ 2 ] ; double whitened_buf [ QLOOKAHEAD ] ; double inbuf [ QLOOKAHEAD ] ; PitchFiltstr PFstr_wght ; PitchFiltstr PFstr ; WeightFiltstr Wghtstr ; } PitchAnalysisStruct ; typedef struct { int32_t prev_frame_length ; int32_t prev_rec_rtp_number ; uint32_t prev_rec_send_ts ; uint32_t prev_rec_arr_ts ; float prev_rec_rtp_rate ; uint32_t last_update_ts ; uint32_t last_reduction_ts ; int32_t count_tot_updates_rec ; int32_t rec_bw ; float rec_bw_inv ; float rec_bw_avg ; float rec_bw_avg_Q ; float rec_jitter ; float rec_jitter_short_term ; float rec_jitter_short_term_abs ; float rec_max_delay ; float rec_max_delay_avg_Q ; float rec_header_rate ; float send_bw_avg ; float send_max_delay_avg ; int num_pkts_rec ; int num_consec_rec_pkts_over_30k ; int hsn_detect_rec ; int num_consec_snt_pkts_over_30k ; int hsn_detect_snd ; uint32_t start_wait_period ; int in_wait_period ; int change_to_WB ; uint32_t senderTimestamp ; uint32_t receiverTimestamp ; uint16_t numConsecLatePkts ; float consecLatency ; int16_t inWaitLatePkts ; IsacBandwidthInfo external_bw_info ; } BwEstimatorstr ; typedef struct { int PrevExceed ; int ExceedAgo ; int BurstCounter ; int InitCounter ; double StillBuffered ; } RateModel ; typedef struct { int startIdx ; int16_t framelength ; int pitchGain_index [ 2 ] ; double meanGain [ 2 ] ; int pitchIndex [ PITCH_SUBFRAMES* 2 ] ; int LPCindex_s [ 1 0 8* 2 ] ; int LPCindex_g [ 1 2* 2 ] ; double)",
    "insertText": "LPCcoeffs_lo(ORDERLO + 1)"
  }
]