[
  {
    "label": "ITargetPlatform",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITargetPlatform"
  },
  {
    "label": "UCookOnTheFlyServer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UCookOnTheFlyServer"
  },
  {
    "label": "FCookGCDiagnosticContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCookGCDiagnosticContext"
  },
  {
    "label": "FGeneratedPackageResultStruct",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGeneratedPackageResultStruct"
  },
  {
    "label": "FCachedObjectInOuterGeneratorInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCachedObjectInOuterGeneratorInfo"
  },
  {
    "label": "FCookGenerationInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCookGenerationInfo"
  },
  {
    "label": "FGenerationHelper",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGenerationHelper"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" AssetRegistry / AssetData . h \" # include \" AssetRegistry / IAssetRegistry . h \" # include \" Containers / Array . h \" # include \" Containers / ArrayView . h \" # include \" Containers / Map . h \" # include \" Containers / UnrealString . h \" # include \" Cooker / CookPackageData . h \" # include \" Cooker / CookTypes . h \" # include \" Cooker / MPCollector . h \" # include \" CookPackageSplitter . h \" # include \" Hash / Blake3 . h \" # include \" IO / IoHash . h \" # include \" Misc / Optional . h \" # include \" Templates / RefCounting . h \" # include \" Templates / UniquePtr . h \" # include \" UObject / NameTypes . h \" # include \" UObject / Object . h \" # include \" UObject / ObjectPtr . h \" # include \" UObject / Package . h \" # include \" UObject / WeakObjectPtr . h \" class ITargetPlatform ; class UCookOnTheFlyServer ; namespace UE::Cook { class FCookGCDiagnosticContext ; } namespace UE::TargetDomain { struct FGeneratedPackageResultStruct ; } namespace UE::Cook { struct FCachedObjectInOuterGeneratorInfo { public : FString FullName ; bool bInitialized = false ; bool bPublic = false ; bool bMoved = false ; bool bMovedRoot = false ; public : void)",
    "insertText": "Initialize(UObject* Object)"
  },
  {
    "label": "FCookGenerationInfo()",
    "kind": "Method",
    "detail": "Function (} ; struct FCookGenerationInfo { public :)",
    "insertText": "FCookGenerationInfo(FPackageData& InPackageData, bool bInGenerator)"
  },
  {
    "label": "IsCreateAsMap()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsCreateAsMap()"
  },
  {
    "label": "SetIsCreateAsMap()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetIsCreateAsMap(bool bValue)"
  },
  {
    "label": "HasCreatedPackage()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasCreatedPackage()"
  },
  {
    "label": "SetHasCreatedPackage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetHasCreatedPackage(bool bValue)"
  },
  {
    "label": "HasSaved()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasSaved()"
  },
  {
    "label": "SetHasSaved()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetHasSaved(FGenerationHelper& GenerationHelper, bool bValue, FWorkerId SourceWorkerId)"
  },
  {
    "label": "HasTakenOverCachedCookedPlatformData()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasTakenOverCachedCookedPlatformData()"
  },
  {
    "label": "SetHasTakenOverCachedCookedPlatformData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetHasTakenOverCachedCookedPlatformData(bool bValue)"
  },
  {
    "label": "HasIssuedUndeclaredMovedObjectsWarning()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasIssuedUndeclaredMovedObjectsWarning()"
  },
  {
    "label": "SetHasIssuedUndeclaredMovedObjectsWarning()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetHasIssuedUndeclaredMovedObjectsWarning(bool bValue)"
  },
  {
    "label": "IsGenerator()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsGenerator()"
  },
  {
    "label": "SetIsGenerator()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetIsGenerator(bool bValue)"
  },
  {
    "label": "HasCalledPopulate()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasCalledPopulate()"
  },
  {
    "label": "SetHasCalledPopulate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetHasCalledPopulate(bool bValue)"
  },
  {
    "label": "IsIterativelySkipped()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsIterativelySkipped()"
  },
  {
    "label": "SetIterativelySkipped()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetIterativelySkipped(bool bValue)"
  },
  {
    "label": "TakeOverCachedObjectsAndAddMoved()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TakeOverCachedObjectsAndAddMoved(FGenerationHelper& GenerationHelper, TArray<FCachedObjectInOuter>& CachedObjectsInOuter, TArray<UObject*>& MovedObjects)"
  },
  {
    "label": "RefreshPackageObjects()",
    "kind": "Method",
    "detail": "Function (EPollStatus)",
    "insertText": "RefreshPackageObjects(FGenerationHelper& GenerationHelper, UPackage* Package, bool& bOutFoundNewObjects, ESaveSubState DemotionState)"
  },
  {
    "label": "AddKeepReferencedPackages()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddKeepReferencedPackages(FGenerationHelper& GenerationHelper, TArray<UPackage*>& InKeepReferencedPackages)"
  },
  {
    "label": "CreatePackageHash()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreatePackageHash()"
  },
  {
    "label": "IterativeCookValidateOrClear()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "IterativeCookValidateOrClear(FGenerationHelper& GeneratorHelper, TConstArrayView<const ITargetPlatform*> RequestedPlatforms, const FIoHash& PreviousHash, bool& bOutIterativelyUnmodified)"
  },
  {
    "label": "GetDependencies()",
    "kind": "Method",
    "detail": "Function (TConstArrayView<FAssetDependency>)",
    "insertText": "GetDependencies()"
  },
  {
    "label": "GetPackageName()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetPackageName()"
  },
  {
    "label": "Uninitialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Uninitialize()"
  },
  {
    "label": "Invalid()",
    "kind": "Method",
    "detail": "Function (public : FIoHash PackageHash ; FString RelativePath ; FString GeneratedRootPath ; FBlake3Hash GenerationHash ; TArray<FAssetDependency> PackageDependencies ; FPackageData* PackageData ; TArray<TWeakObjectPtr<UPackage>> KeepReferencedPackages ; TMap<UObject*,FCachedObjectInOuterGeneratorInfo> CachedObjectsInOuterInfo ; FWorkerId SavedOnWorker =)",
    "insertText": "Invalid()"
  },
  {
    "label": "FGenerationHelper()",
    "kind": "Method",
    "detail": "Function (private : bool bCreateAsMap : 1 ; bool bHasCreatedPackage : 1 ; bool bHasSaved : 1 ; bool bTakenOverCachedCookedPlatformData : 1 ; bool bIssuedUndeclaredMovedObjectsWarning : 1 ; bool bGenerator : 1 ; bool bHasCalledPopulate : 1 ; bool bIterativelySkipped : 1 ; } ; struct FGenerationHelper : public FThreadSafeRefCountedObject { public :)",
    "insertText": "FGenerationHelper(UE::Cook::FPackageData& InOwner)"
  },
  {
    "label": "FGenerationHelper()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FGenerationHelper()"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Initialize()"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Initialize(const UObject* InSplitDataObject, UE::Cook::Private::FRegisteredCookPackageSplitter* InRegisteredSplitterType, TUniquePtr<ICookPackageSplitter>&& InSplitter)"
  },
  {
    "label": "InitializeAsInvalid()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeAsInvalid()"
  },
  {
    "label": "ClearSelfReferences()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearSelfReferences()"
  },
  {
    "label": "IsInitialized()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsInitialized()"
  },
  {
    "label": "IsValid()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsValid()"
  },
  {
    "label": "GetPackagesToGenerate()",
    "kind": "Method",
    "detail": "Function (TArrayView<FCookGenerationInfo>)",
    "insertText": "GetPackagesToGenerate()"
  },
  {
    "label": "GetOwnerInfo()",
    "kind": "Method",
    "detail": "Function (FCookGenerationInfo&)",
    "insertText": "GetOwnerInfo()"
  },
  {
    "label": "GetOwner()",
    "kind": "Method",
    "detail": "Function (FPackageData&)",
    "insertText": "GetOwner()"
  },
  {
    "label": "FindInfo()",
    "kind": "Method",
    "detail": "Function (FCookGenerationInfo*)",
    "insertText": "FindInfo(const FPackageData& PackageData)"
  },
  {
    "label": "GetCookPackageSplitterInstance()",
    "kind": "Method",
    "detail": "Function (ICookPackageSplitter*)",
    "insertText": "GetCookPackageSplitterInstance()"
  },
  {
    "label": "GetRegisteredSplitterType()",
    "kind": "Method",
    "detail": "Function (UE::Cook::Private::FRegisteredCookPackageSplitter*)",
    "insertText": "GetRegisteredSplitterType()"
  },
  {
    "label": "GetSplitDataObjectName()",
    "kind": "Method",
    "detail": "Function (const FName)",
    "insertText": "GetSplitDataObjectName()"
  },
  {
    "label": "IsUseInternalReferenceToAvoidGarbageCollect()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsUseInternalReferenceToAvoidGarbageCollect()"
  },
  {
    "label": "IsRequiresGeneratorPackageDestructBeforeResplit()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsRequiresGeneratorPackageDestructBeforeResplit()"
  },
  {
    "label": "DoesGeneratedRequireGenerator()",
    "kind": "Method",
    "detail": "Function (ICookPackageSplitter::EGeneratedRequiresGenerator)",
    "insertText": "DoesGeneratedRequireGenerator()"
  },
  {
    "label": "GetWeakSplitDataObject()",
    "kind": "Method",
    "detail": "Function (UObject*)",
    "insertText": "GetWeakSplitDataObject()"
  },
  {
    "label": "FindOrLoadSplitDataObject()",
    "kind": "Method",
    "detail": "Function (UObject*)",
    "insertText": "FindOrLoadSplitDataObject()"
  },
  {
    "label": "GetOwnerObjectsToMove()",
    "kind": "Method",
    "detail": "Function (TConstArrayView<FWeakObjectPtr>)",
    "insertText": "GetOwnerObjectsToMove()"
  },
  {
    "label": "GetOwnerPackage()",
    "kind": "Method",
    "detail": "Function (UPackage*)",
    "insertText": "GetOwnerPackage()"
  },
  {
    "label": "FindOrLoadOwnerPackage()",
    "kind": "Method",
    "detail": "Function (UPackage*)",
    "insertText": "FindOrLoadOwnerPackage(UCookOnTheFlyServer& COTFS)"
  },
  {
    "label": "GetExternalActorDependencies()",
    "kind": "Method",
    "detail": "Function (TConstArrayView<FName>)",
    "insertText": "GetExternalActorDependencies()"
  },
  {
    "label": "ReleaseExternalActorDependencies()",
    "kind": "Method",
    "detail": "Function (TArray<FName>)",
    "insertText": "ReleaseExternalActorDependencies()"
  },
  {
    "label": "TryGenerateList()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TryGenerateList()"
  },
  {
    "label": "TryCallPopulateGeneratorPackage()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TryCallPopulateGeneratorPackage(TArray<ICookPackageSplitter::FGeneratedPackageForPreSave>& InOutGeneratedPackagesForPresave)"
  },
  {
    "label": "TryCallPopulateGeneratedPackage()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TryCallPopulateGeneratedPackage(UE::Cook::FCookGenerationInfo& Info, TArray<UObject*>& OutObjectsToMove)"
  },
  {
    "label": "StartOwnerSave()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StartOwnerSave()"
  },
  {
    "label": "StartQueueGeneratedPackages()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StartQueueGeneratedPackages(UCookOnTheFlyServer& COTFS)"
  },
  {
    "label": "NotifyStartQueueGeneratedPackages()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyStartQueueGeneratedPackages(UCookOnTheFlyServer& COTFS, FWorkerId SourceWorkerId)"
  },
  {
    "label": "EndQueueGeneratedPackages()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EndQueueGeneratedPackages(UCookOnTheFlyServer& COTFS)"
  },
  {
    "label": "EndQueueGeneratedPackagesOnDirector()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EndQueueGeneratedPackagesOnDirector(UCookOnTheFlyServer& COTFS, FWorkerId SourceWorkerId)"
  },
  {
    "label": "OnRequestFencePassed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnRequestFencePassed(UCookOnTheFlyServer& COTFS)"
  },
  {
    "label": "OnQueuedGeneratedPackagesFencePassed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnQueuedGeneratedPackagesFencePassed(UCookOnTheFlyServer& COTFS)"
  },
  {
    "label": "TryCreateGeneratedPackage()",
    "kind": "Method",
    "detail": "Function (UPackage*)",
    "insertText": "TryCreateGeneratedPackage(FCookGenerationInfo& GenerationInfo, bool bResetToEmpty)"
  },
  {
    "label": "FinishGeneratorPlatformSave()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FinishGeneratorPlatformSave(FPackageData& PackageData, bool bFirstPlatform, TArray<FAssetDependency>& OutPackageDependencies)"
  },
  {
    "label": "FinishGeneratedPlatformSave()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FinishGeneratedPlatformSave(FPackageData& PackageData, UE::TargetDomain::FGeneratedPackageResultStruct& GeneratedResult)"
  },
  {
    "label": "GetIncrementalCookAssetPackageData()",
    "kind": "Method",
    "detail": "Function (const FAssetPackageData*)",
    "insertText": "GetIncrementalCookAssetPackageData(FPackageData& PackageData)"
  },
  {
    "label": "GetIncrementalCookAssetPackageData()",
    "kind": "Method",
    "detail": "Function (const FAssetPackageData*)",
    "insertText": "GetIncrementalCookAssetPackageData(FName PackageName)"
  },
  {
    "label": "ResetSaveState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetSaveState(FCookGenerationInfo& Info, UPackage* Package, EStateChangeReason ReleaseSaveReason, EPackageState NewState)"
  },
  {
    "label": "ShouldRetractionStallRatherThanDemote()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldRetractionStallRatherThanDemote(FPackageData& PackageData)"
  },
  {
    "label": "FetchExternalActorDependencies()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FetchExternalActorDependencies()"
  },
  {
    "label": "SetPreviousGeneratedPackages()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPreviousGeneratedPackages(TMap<FName, FAssetPackageData>&& Packages)"
  },
  {
    "label": "GetPreviousGeneratedPackages()",
    "kind": "Method",
    "detail": "Function (const TMap<FName,FAssetPackageData>&)",
    "insertText": "GetPreviousGeneratedPackages()"
  },
  {
    "label": "PreGarbageCollect()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PreGarbageCollect(const TRefCountPtr<FGenerationHelper>& RefcountHeldByCaller, FPackageData& PackageData, TArray<TObjectPtr<UObject>>& GCKeepObjects, TArray<UPackage*>& GCKeepPackages, TArray<FPackageData*>& GCKeepPackageDatas, bool& bOutShouldDemote)"
  },
  {
    "label": "PostGarbageCollect()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostGarbageCollect(const TRefCountPtr<FGenerationHelper>& RefcountHeldByCaller, FCookGCDiagnosticContext& Context)"
  },
  {
    "label": "UpdateSaveAfterGarbageCollect()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateSaveAfterGarbageCollect(const FPackageData& PackageData, bool& bInOutDemote)"
  },
  {
    "label": "SetKeepForIterative()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetKeepForIterative()"
  },
  {
    "label": "ClearKeepForIterative()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearKeepForIterative()"
  },
  {
    "label": "SetKeepForQueueResults()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetKeepForQueueResults()"
  },
  {
    "label": "ClearKeepForQueueResults()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearKeepForQueueResults()"
  },
  {
    "label": "IsWaitingForQueueResults()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsWaitingForQueueResults()"
  },
  {
    "label": "SetKeepForGeneratorSave()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetKeepForGeneratorSave()"
  },
  {
    "label": "ClearKeepForGeneratorSave()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearKeepForGeneratorSave()"
  },
  {
    "label": "SetKeepForAllSavedOrGC()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetKeepForAllSavedOrGC()"
  },
  {
    "label": "ClearKeepForAllSavedOrGC()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearKeepForAllSavedOrGC()"
  },
  {
    "label": "SetKeepForCompletedAllSavesMessage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetKeepForCompletedAllSavesMessage()"
  },
  {
    "label": "ClearKeepForCompletedAllSavesMessage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearKeepForCompletedAllSavesMessage()"
  },
  {
    "label": "GetWorkerIdThatSavedGenerator()",
    "kind": "Method",
    "detail": "Function (FWorkerId)",
    "insertText": "GetWorkerIdThatSavedGenerator()"
  },
  {
    "label": "GetMPCookNextAssignmentIndex()",
    "kind": "Method",
    "detail": "Function (int32&)",
    "insertText": "GetMPCookNextAssignmentIndex()"
  },
  {
    "label": "TrackGeneratedPackageListedRemotely()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TrackGeneratedPackageListedRemotely(UCookOnTheFlyServer& COTFS, FPackageData& PackageData, const FIoHash& CurrentPackageHash)"
  },
  {
    "label": "MarkPackageSavedRemotely()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MarkPackageSavedRemotely(UCookOnTheFlyServer& COTFS, FPackageData& PackageData, FWorkerId SourceWorkerId)"
  },
  {
    "label": "MarkPackageIterativelySkipped()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MarkPackageIterativelySkipped(FPackageData& PackageData)"
  },
  {
    "label": "OnAllSavesCompleted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAllSavesCompleted(UCookOnTheFlyServer& COTFS)"
  },
  {
    "label": "DiagnoseWhyNotShutdown()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DiagnoseWhyNotShutdown()"
  },
  {
    "label": "ForceUninitialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ForceUninitialize()"
  },
  {
    "label": "SearchForRegisteredSplitDataObject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SearchForRegisteredSplitDataObject(UCookOnTheFlyServer& COTFS, FName PackageName, UPackage* Package, TOptional<TConstArrayView<FCachedObjectInOuter>> CachedObjectsInOuter, UObject*& OutSplitDataObject, UE::Cook::Private::FRegisteredCookPackageSplitter*& OutRegisteredSplitterType, TUniquePtr<ICookPackageSplitter>& OutSplitterInstance, bool bCookedPlatformDataIsLoaded, bool& bOutNeedWaitForIsLoaded)"
  },
  {
    "label": "FindOrLoadPackage()",
    "kind": "Method",
    "detail": "Function (UPackage*)",
    "insertText": "FindOrLoadPackage(UCookOnTheFlyServer& COTFS, FPackageData& OwnerPackageData)"
  },
  {
    "label": "SetBeginCookConfigSettings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetBeginCookConfigSettings()"
  },
  {
    "label": "IsGeneratorSavedFirst()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsGeneratorSavedFirst()"
  },
  {
    "label": "IsGeneratedSavedFirst()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsGeneratedSavedFirst()"
  },
  {
    "label": "ConditionalInitialize()",
    "kind": "Method",
    "detail": "Function (private : enum class EInitializeStatus : uint8 { Uninitialized,Invalid,Valid,} ; private : void)",
    "insertText": "ConditionalInitialize()"
  },
  {
    "label": "FindInfoNoInitialize()",
    "kind": "Method",
    "detail": "Function (FCookGenerationInfo*)",
    "insertText": "FindInfoNoInitialize(const FPackageData& PackageData)"
  },
  {
    "label": "NotifyCompletion()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyCompletion(ICookPackageSplitter::ETeardown Status)"
  },
  {
    "label": "PreGarbageCollectGCLifetimeData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PreGarbageCollectGCLifetimeData()"
  },
  {
    "label": "PostGarbageCollectGCLifetimeData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostGarbageCollectGCLifetimeData(FCookGCDiagnosticContext& Context)"
  },
  {
    "label": "ModifyNumSaved()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ModifyNumSaved(int32 Delta)"
  },
  {
    "label": "VerifyGeneratorPackageGarbageCollected()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "VerifyGeneratorPackageGarbageCollected(FCookGCDiagnosticContext& Context)"
  },
  {
    "label": "DemoteStalledPackages()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DemoteStalledPackages(UCookOnTheFlyServer& COTFS)"
  },
  {
    "label": "ModifyNumSaved()",
    "kind": "Method",
    "detail": "Function (bHasSaved = bValue ; GenerationHelper .)",
    "insertText": "ModifyNumSaved(bValue ? 1 : -1)"
  },
  {
    "label": "FGenerationHelper()",
    "kind": "Method",
    "detail": "Function (const_cast<)",
    "insertText": "FGenerationHelper(*this).Initialize()"
  },
  {
    "label": "MoveTemp()",
    "kind": "Method",
    "detail": "Function (TArray<FName> Result =)",
    "insertText": "MoveTemp(ExternalActorDependencies)"
  },
  {
    "label": "Empty()",
    "kind": "Method",
    "detail": "Function (ExternalActorDependencies .)",
    "insertText": "Empty()"
  },
  {
    "label": "SafeRelease()",
    "kind": "Method",
    "detail": "Function (ReferenceFromKeepForIterative .)",
    "insertText": "SafeRelease()"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (bKeepForAllSavedOrGC = false ;)",
    "insertText": "if(!bKeepForAllSavedOrGC && !bKeepForCompletedAllSavesMessage)"
  }
]