[
  {
    "label": "AActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AActor"
  },
  {
    "label": "AController",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AController"
  },
  {
    "label": "APawn",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "APawn"
  },
  {
    "label": "APlayerController",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "APlayerController"
  },
  {
    "label": "UActorChannel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UActorChannel"
  },
  {
    "label": "UChildActorComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UChildActorComponent"
  },
  {
    "label": "UNetDriver",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UNetDriver"
  },
  {
    "label": "UPrimitiveComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPrimitiveComponent"
  },
  {
    "label": "FAttachedActorInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAttachedActorInfo"
  },
  {
    "label": "FNetViewer",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FNetViewer"
  },
  {
    "label": "FNetworkObjectInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FNetworkObjectInfo"
  },
  {
    "label": "FActorTransactionAnnotation",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FActorTransactionAnnotation"
  },
  {
    "label": "FComponentInstanceDataCache",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FComponentInstanceDataCache"
  },
  {
    "label": "UDEPRECATED_DataLayer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UDEPRECATED_DataLayer"
  },
  {
    "label": "UDataLayerAsset",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UDataLayerAsset"
  },
  {
    "label": "UExternalDataLayerAsset",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UExternalDataLayerAsset"
  },
  {
    "label": "UDataLayerInstance",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UDataLayerInstance"
  },
  {
    "label": "AWorldDataLayers",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AWorldDataLayers"
  },
  {
    "label": "IWorldPartitionCell",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IWorldPartitionCell"
  },
  {
    "label": "FActorReplicationParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FActorReplicationParams"
  },
  {
    "label": "UActorFolder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UActorFolder"
  },
  {
    "label": "FActorDataLayer",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FActorDataLayer"
  },
  {
    "label": "FHitResult",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FHitResult"
  },
  {
    "label": "FTearOffSetter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTearOffSetter"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "or",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "or"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "that",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "that"
  },
  {
    "label": "FActorLastRenderTime",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FActorLastRenderTime"
  },
  {
    "label": "UPrimitiveComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPrimitiveComponent"
  },
  {
    "label": "FPrimitiveSceneInfoAdapter",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPrimitiveSceneInfoAdapter"
  },
  {
    "label": "UDamageType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UDamageType"
  },
  {
    "label": "AController",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AController"
  },
  {
    "label": "AController",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AController"
  },
  {
    "label": "UPrimitiveComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPrimitiveComponent"
  },
  {
    "label": "UDamageType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UDamageType"
  },
  {
    "label": "UDamageType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UDamageType"
  },
  {
    "label": "AController",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AController"
  },
  {
    "label": "APawn",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "APawn"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "TInlineComponentArray",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TInlineComponentArray"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "TIsContiguousContainer",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TIsContiguousContainer"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "AActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AActor"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "FActorTickFunction",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FActorTickFunction"
  },
  {
    "label": "UE",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UE"
  },
  {
    "label": "FSetActorIsInLevelInstance",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSetActorIsInLevelInstance"
  },
  {
    "label": "FAddActorLevelInstanceFlags",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAddActorLevelInstanceFlags"
  },
  {
    "label": "FRemoveActorLevelInstanceFlags",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRemoveActorLevelInstanceFlags"
  },
  {
    "label": "has",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "has"
  },
  {
    "label": "FActorDeferredScriptManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FActorDeferredScriptManager"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "default",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "default"
  },
  {
    "label": "when",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "when"
  },
  {
    "label": "in",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "in"
  },
  {
    "label": "ENetRole",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ENetRole"
  },
  {
    "label": "FRepAttachment",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRepAttachment"
  },
  {
    "label": "FRepMovement",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRepMovement"
  },
  {
    "label": "FRepAttachment",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRepAttachment"
  },
  {
    "label": "ENetRole",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ENetRole"
  },
  {
    "label": "ENetDormancy",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ENetDormancy"
  },
  {
    "label": "UInputComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UInputComponent"
  },
  {
    "label": "FActorLastRenderTime",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FActorLastRenderTime"
  },
  {
    "label": "UActorChannel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UActorChannel"
  },
  {
    "label": "FOutBunch",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FOutBunch"
  },
  {
    "label": "APawn",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "APawn"
  },
  {
    "label": "UHLODLayer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UHLODLayer"
  },
  {
    "label": "UHLODLayer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UHLODLayer"
  },
  {
    "label": "UHLODLayer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UHLODLayer"
  },
  {
    "label": "CDO",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CDO"
  },
  {
    "label": "FWorldPartitionActorDesc",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWorldPartitionActorDesc"
  },
  {
    "label": "FWorldPartitionActorDesc",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWorldPartitionActorDesc"
  },
  {
    "label": "FWorldPartitionActorDesc",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWorldPartitionActorDesc"
  },
  {
    "label": "APlayerController",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "APlayerController"
  },
  {
    "label": "APlayerController",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "APlayerController"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "of",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "of"
  },
  {
    "label": "USceneComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USceneComponent"
  },
  {
    "label": "UDamageType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UDamageType"
  },
  {
    "label": "AController",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AController"
  },
  {
    "label": "UDamageType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UDamageType"
  },
  {
    "label": "FHitResult",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FHitResult"
  },
  {
    "label": "AController",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AController"
  },
  {
    "label": "UDamageType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UDamageType"
  },
  {
    "label": "UPrimitiveComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPrimitiveComponent"
  },
  {
    "label": "AController",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AController"
  },
  {
    "label": "or",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "or"
  },
  {
    "label": "or",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "or"
  },
  {
    "label": "UPrimitiveComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPrimitiveComponent"
  },
  {
    "label": "UPrimitiveComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPrimitiveComponent"
  },
  {
    "label": "UPrimitiveComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPrimitiveComponent"
  },
  {
    "label": "UPrimitiveComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPrimitiveComponent"
  },
  {
    "label": "FDuplicationSeedInterface",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDuplicationSeedInterface"
  },
  {
    "label": "UPrimitiveComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPrimitiveComponent"
  },
  {
    "label": "icon",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "icon"
  },
  {
    "label": "AActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AActor"
  },
  {
    "label": "AActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AActor"
  },
  {
    "label": "AActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AActor"
  },
  {
    "label": "FInBunch",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FInBunch"
  },
  {
    "label": "UNetConnection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UNetConnection"
  },
  {
    "label": "FOutBunch",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FOutBunch"
  },
  {
    "label": "UNetConnection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UNetConnection"
  },
  {
    "label": "ELevelTick",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ELevelTick"
  },
  {
    "label": "replication",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "replication"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "FDataValidationContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDataValidationContext"
  },
  {
    "label": "FRigidBodyCollisionInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRigidBodyCollisionInfo"
  },
  {
    "label": "FRigidBodyCollisionInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRigidBodyCollisionInfo"
  },
  {
    "label": "UPlayer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPlayer"
  },
  {
    "label": "UNetConnection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UNetConnection"
  },
  {
    "label": "UNetDriver",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UNetDriver"
  },
  {
    "label": "FHitResult",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FHitResult"
  },
  {
    "label": "FCollisionQueryParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCollisionQueryParams"
  },
  {
    "label": "ULevel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULevel"
  },
  {
    "label": "has",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "has"
  },
  {
    "label": "FRotationConversionCache",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRotationConversionCache"
  },
  {
    "label": "FComponentInstanceDataCache",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FComponentInstanceDataCache"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "FBlueprintCookedComponentInstancingData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBlueprintCookedComponentInstancingData"
  },
  {
    "label": "hierarchy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "hierarchy"
  },
  {
    "label": "AActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AActor"
  },
  {
    "label": "UDamageType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UDamageType"
  },
  {
    "label": "AWorldSettings",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AWorldSettings"
  },
  {
    "label": "APawn",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "APawn"
  },
  {
    "label": "FDamageEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDamageEvent"
  },
  {
    "label": "AController",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AController"
  },
  {
    "label": "FRadialDamageEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRadialDamageEvent"
  },
  {
    "label": "AController",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AController"
  },
  {
    "label": "FPointDamageEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPointDamageEvent"
  },
  {
    "label": "AController",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AController"
  },
  {
    "label": "APlayerController",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "APlayerController"
  },
  {
    "label": "APlayerController",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "APlayerController"
  },
  {
    "label": "APlayerController",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "APlayerController"
  },
  {
    "label": "APlayerController",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "APlayerController"
  },
  {
    "label": "FMinimalViewInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMinimalViewInfo"
  },
  {
    "label": "APlayerController",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "APlayerController"
  },
  {
    "label": "UCanvas",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UCanvas"
  },
  {
    "label": "FTimerManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTimerManager"
  },
  {
    "label": "UGameInstance",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UGameInstance"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "with",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "with"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "ComponentType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ComponentType"
  },
  {
    "label": "ComponentType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ComponentType"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "derived",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "derived"
  },
  {
    "label": "ComponentType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ComponentType"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "derived",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "derived"
  },
  {
    "label": "AllocatorType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AllocatorType"
  },
  {
    "label": "ComponentType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ComponentType"
  },
  {
    "label": "ComponentType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ComponentType"
  },
  {
    "label": "AllocatorType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AllocatorType"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "AllocatorType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AllocatorType"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "AllocatorType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AllocatorType"
  },
  {
    "label": "AllocatorType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AllocatorType"
  },
  {
    "label": "UE",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UE"
  },
  {
    "label": "UCanvas",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UCanvas"
  },
  {
    "label": "FDebugDisplayInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDebugDisplayInfo"
  },
  {
    "label": "instead",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "instead"
  },
  {
    "label": "FMarkActorIsBeingDestroyed",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMarkActorIsBeingDestroyed"
  },
  {
    "label": "FActorParentComponentSetter",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FActorParentComponentSetter"
  },
  {
    "label": "FSetActorWantsDestroyDuringBeginPlay",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSetActorWantsDestroyDuringBeginPlay"
  },
  {
    "label": "FSetActorHiddenInSceneOutliner",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSetActorHiddenInSceneOutliner"
  },
  {
    "label": "FSetActorGuid",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSetActorGuid"
  },
  {
    "label": "FSetActorReplicates",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSetActorReplicates"
  },
  {
    "label": "FSetActorInstanceGuid",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSetActorInstanceGuid"
  },
  {
    "label": "FSetActorContentBundleGuid",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSetActorContentBundleGuid"
  },
  {
    "label": "FAssignActorDataLayer",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAssignActorDataLayer"
  },
  {
    "label": "FSetActorSelectable",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSetActorSelectable"
  },
  {
    "label": "FSetActorFolderPath",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSetActorFolderPath"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "used",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "used"
  },
  {
    "label": "FMarkActorIsBeingDestroyed",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMarkActorIsBeingDestroyed"
  },
  {
    "label": "FSetActorWantsDestroyDuringBeginPlay",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSetActorWantsDestroyDuringBeginPlay"
  },
  {
    "label": "FSetActorHiddenInSceneOutliner",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSetActorHiddenInSceneOutliner"
  },
  {
    "label": "FFoliageHelper",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFoliageHelper"
  },
  {
    "label": "ULevelInstanceSubsystem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULevelInstanceSubsystem"
  },
  {
    "label": "UExternalDataLayerInstance",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UExternalDataLayerInstance"
  },
  {
    "label": "FModelingToolsSetActorHiddenInSceneOutliner",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FModelingToolsSetActorHiddenInSceneOutliner"
  },
  {
    "label": "FSetActorGuid",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSetActorGuid"
  },
  {
    "label": "UWorld",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UWorld"
  },
  {
    "label": "UEngine",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEngine"
  },
  {
    "label": "UExternalActorsCommandlet",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UExternalActorsCommandlet"
  },
  {
    "label": "UWorldPartitionConvertCommandlet",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UWorldPartitionConvertCommandlet"
  },
  {
    "label": "FSetActorReplicates",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSetActorReplicates"
  },
  {
    "label": "FWorldPartitionLevelHelper",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWorldPartitionLevelHelper"
  },
  {
    "label": "FSetActorInstanceGuid",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSetActorInstanceGuid"
  },
  {
    "label": "UEngine",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEngine"
  },
  {
    "label": "ULevelStreamingLevelInstance",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULevelStreamingLevelInstance"
  },
  {
    "label": "FWorldPartitionLevelHelper",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWorldPartitionLevelHelper"
  },
  {
    "label": "FReplaceActorHelperSetActorInstanceGuid",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FReplaceActorHelperSetActorInstanceGuid"
  },
  {
    "label": "FSetActorFolderPath",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSetActorFolderPath"
  },
  {
    "label": "UWorldPartitionRuntimeCell",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UWorldPartitionRuntimeCell"
  },
  {
    "label": "FSetActorContentBundleGuid",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSetActorContentBundleGuid"
  },
  {
    "label": "FContentBundleEditor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FContentBundleEditor"
  },
  {
    "label": "FExternalDataLayerHelper",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FExternalDataLayerHelper"
  },
  {
    "label": "UGameFeatureActionConvertContentBundleWorldPartitionBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UGameFeatureActionConvertContentBundleWorldPartitionBuilder"
  },
  {
    "label": "FAssignActorDataLayer",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAssignActorDataLayer"
  },
  {
    "label": "UEngine",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEngine"
  },
  {
    "label": "FContentBundleEditor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FContentBundleEditor"
  },
  {
    "label": "UDataLayerInstanceWithAsset",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UDataLayerInstanceWithAsset"
  },
  {
    "label": "UDataLayerInstancePrivate",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UDataLayerInstancePrivate"
  },
  {
    "label": "UExternalDataLayerInstance",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UExternalDataLayerInstance"
  },
  {
    "label": "ULevelInstanceSubsystem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULevelInstanceSubsystem"
  },
  {
    "label": "FExternalDataLayerHelper",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FExternalDataLayerHelper"
  },
  {
    "label": "FSetActorIsInLevelInstance",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSetActorIsInLevelInstance"
  },
  {
    "label": "ULevelStreamingLevelInstance",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULevelStreamingLevelInstance"
  },
  {
    "label": "ULevelStreamingLevelInstanceEditor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULevelStreamingLevelInstanceEditor"
  },
  {
    "label": "ULevelStreamingLevelInstanceEditorPropertyOverride",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULevelStreamingLevelInstanceEditorPropertyOverride"
  },
  {
    "label": "FAddActorLevelInstanceFlags",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAddActorLevelInstanceFlags"
  },
  {
    "label": "ULevelStreamingLevelInstance",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULevelStreamingLevelInstance"
  },
  {
    "label": "ULevelStreamingLevelInstanceEditor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULevelStreamingLevelInstanceEditor"
  },
  {
    "label": "ULevelStreamingLevelInstanceEditorPropertyOverride",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULevelStreamingLevelInstanceEditorPropertyOverride"
  },
  {
    "label": "FRemoveActorLevelInstanceFlags",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRemoveActorLevelInstanceFlags"
  },
  {
    "label": "ULevelStreamingLevelInstance",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULevelStreamingLevelInstance"
  },
  {
    "label": "ULevelStreamingLevelInstanceEditor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULevelStreamingLevelInstanceEditor"
  },
  {
    "label": "ULevelStreamingLevelInstanceEditorPropertyOverride",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULevelStreamingLevelInstanceEditorPropertyOverride"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "that",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "that"
  },
  {
    "label": "Set()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Set(AActor* InActor, float LastRenderTime)"
  },
  {
    "label": "DECLARE_LOG_CATEGORY_EXTERN()",
    "kind": "Method",
    "detail": "Function (ENGINE_API)",
    "insertText": "DECLARE_LOG_CATEGORY_EXTERN(LogActor, Log, Warning)"
  },
  {
    "label": "DECLARE_DYNAMIC_MULTICAST_SPARSE_DELEGATE_FiveParams()",
    "kind": "Method",
    "detail": "Function (signatures)",
    "insertText": "DECLARE_DYNAMIC_MULTICAST_SPARSE_DELEGATE_FiveParams( FTakeAnyDamageSignature, AActor, OnTakeAnyDamage, AActor*, DamagedActor, float, Damage, const class UDamageType*, DamageType, class AController*, InstigatedBy, AActor*, DamageCauser )"
  },
  {
    "label": "DECLARE_EVENT_TwoParams()",
    "kind": "Method",
    "detail": "Function (WITH_EDITOR)",
    "insertText": "DECLARE_EVENT_TwoParams(AActor, FActorOnPackagingModeChanged, AActor*, bool /* bExternal */)"
  },
  {
    "label": "DECLARE_DELEGATE_RetVal_ThreeParams()",
    "kind": "Method",
    "detail": "Function (UE_BUILD_SHIPPING)",
    "insertText": "DECLARE_DELEGATE_RetVal_ThreeParams(bool, FOnProcessEvent, AActor*, UFunction*, void*)"
  },
  {
    "label": "AActor()",
    "kind": "Method",
    "detail": "Function (ENGINE_API)",
    "insertText": "AActor()"
  },
  {
    "label": "AActor()",
    "kind": "Method",
    "detail": "Function (ENGINE_API)",
    "insertText": "AActor(const FObjectInitializer& ObjectInitializer)"
  },
  {
    "label": "InitializeDefaults()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeDefaults()"
  },
  {
    "label": "OnRep_ReplicateMovement()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnRep_ReplicateMovement()"
  },
  {
    "label": "SetCallPreReplication()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCallPreReplication(bool bCall)"
  },
  {
    "label": "SetCallPreReplicationForReplay()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCallPreReplicationForReplay(bool bCall)"
  },
  {
    "label": "IsInEditLevelInstance()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "IsInEditLevelInstance()"
  },
  {
    "label": "EnumHasAnyFlags()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "EnumHasAnyFlags(LevelInstanceFlags, ELevelInstanceFlags::IsInEditHierarchy)"
  },
  {
    "label": "EnumHasAnyFlags()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "EnumHasAnyFlags(LevelInstanceFlags, ELevelInstanceFlags::HasPropertyOverrides)"
  },
  {
    "label": "EnumHasAnyFlags()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "EnumHasAnyFlags(LevelInstanceFlags, ELevelInstanceFlags::HasEditablePropertyOverrides)"
  },
  {
    "label": "TearOff()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TearOff()"
  },
  {
    "label": "SetAutoDestroyWhenFinished()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAutoDestroyWhenFinished(bool bVal)"
  },
  {
    "label": "OnRep_Owner()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnRep_Owner()"
  },
  {
    "label": "UpdateInitialOverlaps()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateInitialOverlaps(bool bFromLevelStreaming)"
  },
  {
    "label": "SetReplicates()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetReplicates(bool bInReplicates)"
  },
  {
    "label": "SetReplicateMovement()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetReplicateMovement(bool bInReplicateMovement)"
  },
  {
    "label": "SetAutonomousProxy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAutonomousProxy(const bool bInAutonomousProxy, const bool bAllowForcePropertyCompare=true)"
  },
  {
    "label": "CopyRemoteRoleFrom()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CopyRemoteRoleFrom(const AActor* CopyFromActor)"
  },
  {
    "label": "SetNetAddressable()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetNetAddressable()"
  },
  {
    "label": "OnRep_AttachmentReplication()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnRep_AttachmentReplication()"
  },
  {
    "label": "IsReplicationPausedForConnection()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsReplicationPausedForConnection(const FNetViewer& ConnectionOwnerNetViewer)"
  },
  {
    "label": "OnReplicationPausedChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnReplicationPausedChanged(bool bIsReplicationPaused)"
  },
  {
    "label": "SetPhysicsReplicationMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPhysicsReplicationMode(const EPhysicsReplicationMode ReplicationMode)"
  },
  {
    "label": "GetPhysicsReplicationMode()",
    "kind": "Method",
    "detail": "Function (EPhysicsReplicationMode)",
    "insertText": "GetPhysicsReplicationMode()"
  },
  {
    "label": "SetNetDriverName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetNetDriverName(FName NewNetDriverName)"
  },
  {
    "label": "ReplicateSubobjects()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ReplicateSubobjects(class UActorChannel *Channel, class FOutBunch *Bunch, FReplicationFlags *RepFlags)"
  },
  {
    "label": "OnSubobjectCreatedFromReplication()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSubobjectCreatedFromReplication(UObject *NewSubobject)"
  },
  {
    "label": "OnSubobjectDestroyFromReplication()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSubobjectDestroyFromReplication(UObject *Subobject)"
  },
  {
    "label": "PreReplication()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PreReplication(IRepChangedPropertyTracker & ChangedPropertyTracker)"
  },
  {
    "label": "PreReplicationForReplay()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PreReplicationForReplay(IRepChangedPropertyTracker & ChangedPropertyTracker)"
  },
  {
    "label": "RewindForReplay()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RewindForReplay()"
  },
  {
    "label": "CallPreReplication()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CallPreReplication(UNetDriver* NetDriver)"
  },
  {
    "label": "OnRep_Instigator()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnRep_Instigator()"
  },
  {
    "label": "SetHLODLayer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetHLODLayer(class UHLODLayer* InHLODLayer)"
  },
  {
    "label": "GET_MEMBER_NAME_CHECKED()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GET_MEMBER_NAME_CHECKED(AActor, HLODLayer)"
  },
  {
    "label": "SetRayTracingGroupId()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRayTracingGroupId(int32 InRaytracingGroupId)"
  },
  {
    "label": "SetPackageExternal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPackageExternal(bool bExternal, bool bShouldDirty = true, UPackage* ActorExternalPackage = nullptr)"
  },
  {
    "label": "GET_MEMBER_NAME_CHECKED()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GET_MEMBER_NAME_CHECKED(AActor, RuntimeGrid)"
  },
  {
    "label": "OnPlayFromHere()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPlayFromHere()"
  },
  {
    "label": "StaticCreateClassActorDesc()",
    "kind": "Method",
    "detail": "Function (FWorldPartitionActorDesc>)",
    "insertText": "StaticCreateClassActorDesc(const TSubclassOf<AActor>& ActorClass)"
  },
  {
    "label": "GetName()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetName()"
  },
  {
    "label": "FStringView()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FStringView()"
  },
  {
    "label": "EnableInput()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnableInput(class APlayerController* PlayerController)"
  },
  {
    "label": "CreateInputComponent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateInputComponent(TSubclassOf<UInputComponent> InputComponentToCreate)"
  },
  {
    "label": "DisableInput()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DisableInput(class APlayerController* PlayerController)"
  },
  {
    "label": "AddDataLayer()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AddDataLayer(const UDataLayerInstance* DataLayerInstance)"
  },
  {
    "label": "RemoveDataLayer()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RemoveDataLayer(const UDataLayerInstance* DataLayerInstance)"
  },
  {
    "label": "FixupDataLayers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FixupDataLayers(bool bRevertChangesOnLockedDataLayer = false)"
  },
  {
    "label": "GET_MEMBER_NAME_CHECKED()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GET_MEMBER_NAME_CHECKED(AActor, DataLayerAssets)"
  },
  {
    "label": "GET_MEMBER_NAME_CHECKED()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GET_MEMBER_NAME_CHECKED(AActor, DataLayers)"
  },
  {
    "label": "AddDataLayer()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AddDataLayer(const UDEPRECATED_DataLayer* DataLayer)"
  },
  {
    "label": "RemoveDataLayer()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RemoveDataLayer(const UDEPRECATED_DataLayer* DataLayer)"
  },
  {
    "label": "AddDataLayer()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AddDataLayer(const FActorDataLayer& ActorDataLayer)"
  },
  {
    "label": "RemoveDataLayer()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RemoveDataLayer(const FActorDataLayer& ActorDataLayer)"
  },
  {
    "label": "HasDataLayers()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "HasDataLayers()"
  },
  {
    "label": "ActorToWorld()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "ActorToWorld()"
  },
  {
    "label": "K2_SetActorLocation()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "K2_SetActorLocation(FVector NewLocation, bool bSweep, FHitResult& SweepHitResult, bool bTeleport)"
  },
  {
    "label": "SetActorLocation()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetActorLocation(const FVector& NewLocation, bool bSweep=false, FHitResult* OutSweepHitResult=nullptr, ETeleportType Teleport = ETeleportType::None)"
  },
  {
    "label": "K2_SetActorRotation()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "K2_SetActorRotation(FRotator NewRotation, bool bTeleportPhysics)"
  },
  {
    "label": "SetActorRotation()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetActorRotation(FRotator NewRotation, ETeleportType Teleport = ETeleportType::None)"
  },
  {
    "label": "SetActorRotation()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetActorRotation(const FQuat& NewRotation, ETeleportType Teleport = ETeleportType::None)"
  },
  {
    "label": "K2_SetActorLocationAndRotation()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "K2_SetActorLocationAndRotation(FVector NewLocation, FRotator NewRotation, bool bSweep, FHitResult& SweepHitResult, bool bTeleport)"
  },
  {
    "label": "SetActorLocationAndRotation()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetActorLocationAndRotation(FVector NewLocation, FRotator NewRotation, bool bSweep=false, FHitResult* OutSweepHitResult=nullptr, ETeleportType Teleport = ETeleportType::None)"
  },
  {
    "label": "SetActorLocationAndRotation()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetActorLocationAndRotation(FVector NewLocation, const FQuat& NewRotation, bool bSweep=false, FHitResult* OutSweepHitResult=nullptr, ETeleportType Teleport = ETeleportType::None)"
  },
  {
    "label": "SetActorScale3D()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetActorScale3D(FVector NewScale3D)"
  },
  {
    "label": "K2_AddActorWorldOffset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "K2_AddActorWorldOffset(FVector DeltaLocation, bool bSweep, FHitResult& SweepHitResult, bool bTeleport)"
  },
  {
    "label": "AddActorWorldOffset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddActorWorldOffset(FVector DeltaLocation, bool bSweep=false, FHitResult* OutSweepHitResult=nullptr, ETeleportType Teleport = ETeleportType::None)"
  },
  {
    "label": "K2_AddActorWorldRotation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "K2_AddActorWorldRotation(FRotator DeltaRotation, bool bSweep, FHitResult& SweepHitResult, bool bTeleport)"
  },
  {
    "label": "AddActorWorldRotation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddActorWorldRotation(FRotator DeltaRotation, bool bSweep=false, FHitResult* OutSweepHitResult=nullptr, ETeleportType Teleport = ETeleportType::None)"
  },
  {
    "label": "AddActorWorldRotation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddActorWorldRotation(const FQuat& DeltaRotation, bool bSweep=false, FHitResult* OutSweepHitResult=nullptr, ETeleportType Teleport = ETeleportType::None)"
  },
  {
    "label": "K2_AddActorWorldTransform()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "K2_AddActorWorldTransform(const FTransform& DeltaTransform, bool bSweep, FHitResult& SweepHitResult, bool bTeleport)"
  },
  {
    "label": "AddActorWorldTransform()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddActorWorldTransform(const FTransform& DeltaTransform, bool bSweep=false, FHitResult* OutSweepHitResult=nullptr, ETeleportType Teleport = ETeleportType::None)"
  },
  {
    "label": "K2_AddActorWorldTransformKeepScale()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "K2_AddActorWorldTransformKeepScale(const FTransform& DeltaTransform, bool bSweep, FHitResult& SweepHitResult, bool bTeleport)"
  },
  {
    "label": "AddActorWorldTransformKeepScale()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddActorWorldTransformKeepScale(const FTransform& DeltaTransform, bool bSweep = false, FHitResult* OutSweepHitResult = nullptr, ETeleportType Teleport = ETeleportType::None)"
  },
  {
    "label": "K2_SetActorTransform()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "K2_SetActorTransform(const FTransform& NewTransform, bool bSweep, FHitResult& SweepHitResult, bool bTeleport)"
  },
  {
    "label": "SetActorTransform()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetActorTransform(const FTransform& NewTransform, bool bSweep=false, FHitResult* OutSweepHitResult=nullptr, ETeleportType Teleport = ETeleportType::None)"
  },
  {
    "label": "K2_AddActorLocalOffset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "K2_AddActorLocalOffset(FVector DeltaLocation, bool bSweep, FHitResult& SweepHitResult, bool bTeleport)"
  },
  {
    "label": "AddActorLocalOffset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddActorLocalOffset(FVector DeltaLocation, bool bSweep=false, FHitResult* OutSweepHitResult=nullptr, ETeleportType Teleport = ETeleportType::None)"
  },
  {
    "label": "K2_AddActorLocalRotation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "K2_AddActorLocalRotation(FRotator DeltaRotation, bool bSweep, FHitResult& SweepHitResult, bool bTeleport)"
  },
  {
    "label": "AddActorLocalRotation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddActorLocalRotation(FRotator DeltaRotation, bool bSweep=false, FHitResult* OutSweepHitResult=nullptr, ETeleportType Teleport = ETeleportType::None)"
  },
  {
    "label": "AddActorLocalRotation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddActorLocalRotation(const FQuat& DeltaRotation, bool bSweep=false, FHitResult* OutSweepHitResult=nullptr, ETeleportType Teleport = ETeleportType::None)"
  },
  {
    "label": "K2_AddActorLocalTransform()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "K2_AddActorLocalTransform(const FTransform& NewTransform, bool bSweep, FHitResult& SweepHitResult, bool bTeleport)"
  },
  {
    "label": "AddActorLocalTransform()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddActorLocalTransform(const FTransform& NewTransform, bool bSweep=false, FHitResult* OutSweepHitResult=nullptr, ETeleportType Teleport = ETeleportType::None)"
  },
  {
    "label": "K2_SetActorRelativeLocation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "K2_SetActorRelativeLocation(FVector NewRelativeLocation, bool bSweep, FHitResult& SweepHitResult, bool bTeleport)"
  },
  {
    "label": "SetActorRelativeLocation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetActorRelativeLocation(FVector NewRelativeLocation, bool bSweep=false, FHitResult* OutSweepHitResult=nullptr, ETeleportType Teleport = ETeleportType::None)"
  },
  {
    "label": "K2_SetActorRelativeRotation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "K2_SetActorRelativeRotation(FRotator NewRelativeRotation, bool bSweep, FHitResult& SweepHitResult, bool bTeleport)"
  },
  {
    "label": "SetActorRelativeRotation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetActorRelativeRotation(FRotator NewRelativeRotation, bool bSweep=false, FHitResult* OutSweepHitResult=nullptr, ETeleportType Teleport = ETeleportType::None)"
  },
  {
    "label": "SetActorRelativeRotation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetActorRelativeRotation(const FQuat& NewRelativeRotation, bool bSweep=false, FHitResult* OutSweepHitResult=nullptr, ETeleportType Teleport = ETeleportType::None)"
  },
  {
    "label": "K2_SetActorRelativeTransform()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "K2_SetActorRelativeTransform(const FTransform& NewRelativeTransform, bool bSweep, FHitResult& SweepHitResult, bool bTeleport)"
  },
  {
    "label": "SetActorRelativeTransform()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetActorRelativeTransform(const FTransform& NewRelativeTransform, bool bSweep=false, FHitResult* OutSweepHitResult=nullptr, ETeleportType Teleport = ETeleportType::None)"
  },
  {
    "label": "SetActorRelativeScale3D()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetActorRelativeScale3D(FVector NewRelativeScale)"
  },
  {
    "label": "MarkNeedsRecomputeBoundsOnceForGame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MarkNeedsRecomputeBoundsOnceForGame()"
  },
  {
    "label": "SetActorHiddenInGame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetActorHiddenInGame(bool bNewHidden)"
  },
  {
    "label": "SetActorEnableCollision()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetActorEnableCollision(bool bNewActorEnableCollision)"
  },
  {
    "label": "K2_DestroyActor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "K2_DestroyActor()"
  },
  {
    "label": "FinishAddComponent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FinishAddComponent(UActorComponent* Component, bool bManualAttachment, const FTransform& RelativeTransform)"
  },
  {
    "label": "K2_AttachRootComponentTo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "K2_AttachRootComponentTo(USceneComponent* InParent, FName InSocketName = NAME_None, EAttachLocation::Type AttachLocationType = EAttachLocation::KeepRelativeOffset, bool bWeldSimulatedBodies = true)"
  },
  {
    "label": "K2_AttachToComponent()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "K2_AttachToComponent(USceneComponent* Parent, FName SocketName, EAttachmentRule LocationRule, EAttachmentRule RotationRule, EAttachmentRule ScaleRule, bool bWeldSimulatedBodies)"
  },
  {
    "label": "AttachToComponent()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AttachToComponent(USceneComponent* Parent, const FAttachmentTransformRules& AttachmentRules, FName SocketName = NAME_None)"
  },
  {
    "label": "K2_AttachRootComponentToActor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "K2_AttachRootComponentToActor(AActor* InParentActor, FName InSocketName = NAME_None, EAttachLocation::Type AttachLocationType = EAttachLocation::KeepRelativeOffset, bool bWeldSimulatedBodies = true)"
  },
  {
    "label": "AttachToActor()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AttachToActor(AActor* ParentActor, const FAttachmentTransformRules& AttachmentRules, FName SocketName = NAME_None)"
  },
  {
    "label": "K2_AttachToActor()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "K2_AttachToActor(AActor* ParentActor, FName SocketName, EAttachmentRule LocationRule, EAttachmentRule RotationRule, EAttachmentRule ScaleRule, bool bWeldSimulatedBodies)"
  },
  {
    "label": "DetachRootComponentFromParent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DetachRootComponentFromParent(bool bMaintainWorldPosition = true)"
  },
  {
    "label": "K2_DetachFromActor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "K2_DetachFromActor(EDetachmentRule LocationRule = EDetachmentRule::KeepRelative, EDetachmentRule RotationRule = EDetachmentRule::KeepRelative, EDetachmentRule ScaleRule = EDetachmentRule::KeepRelative)"
  },
  {
    "label": "DetachFromActor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DetachFromActor(const FDetachmentTransformRules& DetachmentRules)"
  },
  {
    "label": "DetachAllSceneComponents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DetachAllSceneComponents(class USceneComponent* InParentComponent, const FDetachmentTransformRules& DetachmentRules)"
  },
  {
    "label": "AddTickPrerequisiteActor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddTickPrerequisiteActor(AActor* PrerequisiteActor)"
  },
  {
    "label": "AddTickPrerequisiteComponent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddTickPrerequisiteComponent(UActorComponent* PrerequisiteComponent)"
  },
  {
    "label": "RemoveTickPrerequisiteActor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveTickPrerequisiteActor(AActor* PrerequisiteActor)"
  },
  {
    "label": "RemoveTickPrerequisiteComponent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveTickPrerequisiteComponent(UActorComponent* PrerequisiteComponent)"
  },
  {
    "label": "GetTickableWhenPaused()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetTickableWhenPaused()"
  },
  {
    "label": "SetTickableWhenPaused()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTickableWhenPaused(bool bTickableWhenPaused)"
  },
  {
    "label": "ReceiveBeginPlay()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReceiveBeginPlay()"
  },
  {
    "label": "BeginPlay()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginPlay()"
  },
  {
    "label": "ReceiveEndPlay()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReceiveEndPlay(EEndPlayReason::Type EndPlayReason)"
  },
  {
    "label": "EndPlay()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EndPlay(const EEndPlayReason::Type EndPlayReason)"
  },
  {
    "label": "DispatchBeginPlay()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DispatchBeginPlay(bool bFromLevelStreaming = false)"
  },
  {
    "label": "ReceiveAnyDamage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReceiveAnyDamage(float Damage, const class UDamageType* DamageType, class AController* InstigatedBy, AActor* DamageCauser)"
  },
  {
    "label": "ReceiveRadialDamage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReceiveRadialDamage(float DamageReceived, const class UDamageType* DamageType, FVector Origin, const struct FHitResult& HitInfo, class AController* InstigatedBy, AActor* DamageCauser)"
  },
  {
    "label": "ReceivePointDamage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReceivePointDamage(float Damage, const class UDamageType* DamageType, FVector HitLocation, FVector HitNormal, class UPrimitiveComponent* HitComponent, FName BoneName, FVector ShotFromDirection, class AController* InstigatedBy, AActor* DamageCauser, const FHitResult& HitInfo)"
  },
  {
    "label": "ReceiveTick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReceiveTick(float DeltaSeconds)"
  },
  {
    "label": "ReceiveAsyncPhysicsTick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReceiveAsyncPhysicsTick(float DeltaSeconds, float SimSeconds)"
  },
  {
    "label": "NotifyActorBeginOverlap()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyActorBeginOverlap(AActor* OtherActor)"
  },
  {
    "label": "ReceiveActorBeginOverlap()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReceiveActorBeginOverlap(AActor* OtherActor)"
  },
  {
    "label": "NotifyActorEndOverlap()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyActorEndOverlap(AActor* OtherActor)"
  },
  {
    "label": "ReceiveActorEndOverlap()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReceiveActorEndOverlap(AActor* OtherActor)"
  },
  {
    "label": "NotifyActorBeginCursorOver()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyActorBeginCursorOver()"
  },
  {
    "label": "ReceiveActorBeginCursorOver()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReceiveActorBeginCursorOver()"
  },
  {
    "label": "NotifyActorEndCursorOver()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyActorEndCursorOver()"
  },
  {
    "label": "ReceiveActorEndCursorOver()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReceiveActorEndCursorOver()"
  },
  {
    "label": "NotifyActorOnClicked()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyActorOnClicked(FKey ButtonPressed = EKeys::LeftMouseButton)"
  },
  {
    "label": "ReceiveActorOnClicked()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReceiveActorOnClicked(FKey ButtonPressed = EKeys::LeftMouseButton)"
  },
  {
    "label": "NotifyActorOnReleased()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyActorOnReleased(FKey ButtonReleased = EKeys::LeftMouseButton)"
  },
  {
    "label": "ReceiveActorOnReleased()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReceiveActorOnReleased(FKey ButtonReleased = EKeys::LeftMouseButton)"
  },
  {
    "label": "NotifyActorOnInputTouchBegin()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyActorOnInputTouchBegin(const ETouchIndex::Type FingerIndex)"
  },
  {
    "label": "ReceiveActorOnInputTouchBegin()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReceiveActorOnInputTouchBegin(const ETouchIndex::Type FingerIndex)"
  },
  {
    "label": "NotifyActorOnInputTouchEnd()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyActorOnInputTouchEnd(const ETouchIndex::Type FingerIndex)"
  },
  {
    "label": "ReceiveActorOnInputTouchEnd()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReceiveActorOnInputTouchEnd(const ETouchIndex::Type FingerIndex)"
  },
  {
    "label": "NotifyActorOnInputTouchEnter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyActorOnInputTouchEnter(const ETouchIndex::Type FingerIndex)"
  },
  {
    "label": "ReceiveActorOnInputTouchEnter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReceiveActorOnInputTouchEnter(const ETouchIndex::Type FingerIndex)"
  },
  {
    "label": "NotifyActorOnInputTouchLeave()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyActorOnInputTouchLeave(const ETouchIndex::Type FingerIndex)"
  },
  {
    "label": "ReceiveActorOnInputTouchLeave()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReceiveActorOnInputTouchLeave(const ETouchIndex::Type FingerIndex)"
  },
  {
    "label": "NotifyHit()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyHit(class UPrimitiveComponent* MyComp, AActor* Other, class UPrimitiveComponent* OtherComp, bool bSelfMoved, FVector HitLocation, FVector HitNormal, FVector NormalImpulse, const FHitResult& Hit)"
  },
  {
    "label": "ReceiveHit()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReceiveHit(class UPrimitiveComponent* MyComp, AActor* Other, class UPrimitiveComponent* OtherComp, bool bSelfMoved, FVector HitLocation, FVector HitNormal, FVector NormalImpulse, const FHitResult& Hit)"
  },
  {
    "label": "SetLifeSpan()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetLifeSpan( float InLifespan )"
  },
  {
    "label": "UserConstructionScript()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UserConstructionScript()"
  },
  {
    "label": "Destroy()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Destroy(bool bNetForce = false, bool bShouldModifyLevel = true )"
  },
  {
    "label": "ReceiveDestroyed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReceiveDestroyed()"
  },
  {
    "label": "AddReferencedObjects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddReferencedObjects(UObject* InThis, FReferenceCollector& Collector)"
  },
  {
    "label": "FDuplicationSeedInterface()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FDuplicationSeedInterface(TMap<UObject*, UObject*>& InDuplicationSeed)"
  },
  {
    "label": "AddEntry()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddEntry(UObject* Source, UObject* Dest)"
  },
  {
    "label": "PostEditMove()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostEditMove(bool bFinished)"
  },
  {
    "label": "GatherCurrentMovement()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GatherCurrentMovement()"
  },
  {
    "label": "GetRootComponent()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetRootComponent()"
  },
  {
    "label": "SetRootComponent()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetRootComponent(USceneComponent* NewRootComponent)"
  },
  {
    "label": "ApplyWorldOffset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyWorldOffset(const FVector& InOffset, bool bWorldShift)"
  },
  {
    "label": "SetLODParent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetLODParent(class UPrimitiveComponent* InLODParent, float InParentDrawDistance)"
  },
  {
    "label": "EditorApplyTranslation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EditorApplyTranslation(const FVector& DeltaTranslation, bool bAltDown, bool bShiftDown, bool bCtrlDown)"
  },
  {
    "label": "EditorApplyRotation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EditorApplyRotation(const FRotator& DeltaRotation, bool bAltDown, bool bShiftDown, bool bCtrlDown)"
  },
  {
    "label": "EditorApplyScale()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EditorApplyScale(const FVector& DeltaScale, const FVector* PivotLocation, bool bAltDown, bool bShiftDown, bool bCtrlDown)"
  },
  {
    "label": "EditorApplyMirror()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EditorApplyMirror(const FVector& MirrorScale, const FVector& PivotLocation)"
  },
  {
    "label": "SetIsTemporarilyHiddenInEditor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetIsTemporarilyHiddenInEditor( bool bIsHidden )"
  },
  {
    "label": "SetIsHiddenEdLayer()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetIsHiddenEdLayer(bool bIsHiddenEdLayer)"
  },
  {
    "label": "GET_MEMBER_NAME_CHECKED()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GET_MEMBER_NAME_CHECKED(AActor, bIsSpatiallyLoaded)"
  },
  {
    "label": "EditorReplacedActor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EditorReplacedActor(AActor* OldActor)"
  },
  {
    "label": "CheckForErrors()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CheckForErrors()"
  },
  {
    "label": "CheckForDeprecated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CheckForDeprecated()"
  },
  {
    "label": "SetActorLabel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetActorLabel( const FString& NewActorLabel, bool bMarkDirty = true )"
  },
  {
    "label": "ClearActorLabel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearActorLabel()"
  },
  {
    "label": "FixupActorFolder()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FixupActorFolder()"
  },
  {
    "label": "CreateOrUpdateActorFolder()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CreateOrUpdateActorFolder()"
  },
  {
    "label": "SetFolderPath()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFolderPath(const FName& NewFolderPath)"
  },
  {
    "label": "SetFolderPath_Recursively()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFolderPath_Recursively(const FName& NewFolderPath)"
  },
  {
    "label": "SetBrowseToAssetOverride()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetBrowseToAssetOverride(const FString& PackageName)"
  },
  {
    "label": "GetNetPriority()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetNetPriority(const FVector& ViewPos, const FVector& ViewDir, class AActor* Viewer, AActor* ViewTarget, UActorChannel* InChannel, float Time, bool bLowBandwidth)"
  },
  {
    "label": "GetReplayPriority()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetReplayPriority(const FVector& ViewPos, const FVector& ViewDir, class AActor* Viewer, AActor* ViewTarget, UActorChannel* const InChannel, float Time)"
  },
  {
    "label": "GetNetDormancy()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetNetDormancy(const FVector& ViewPos, const FVector& ViewDir, class AActor* Viewer, AActor* ViewTarget, UActorChannel* InChannel, float Time, bool bLowBandwidth)"
  },
  {
    "label": "ExchangeNetRoles()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExchangeNetRoles(bool bRemoteOwner)"
  },
  {
    "label": "SwapRoles()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SwapRoles()"
  },
  {
    "label": "RegisterAllActorTickFunctions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterAllActorTickFunctions(bool bRegister, bool bDoComponents)"
  },
  {
    "label": "SetActorTickEnabled()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetActorTickEnabled(bool bEnabled)"
  },
  {
    "label": "SetActorTickInterval()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetActorTickInterval(float TickInterval)"
  },
  {
    "label": "TickActor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TickActor( float DeltaTime, enum ELevelTick TickType, FActorTickFunction& ThisTickFunction )"
  },
  {
    "label": "PostActorCreated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostActorCreated()"
  },
  {
    "label": "LifeSpanExpired()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LifeSpanExpired()"
  },
  {
    "label": "PostNetReceiveRole()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostNetReceiveRole()"
  },
  {
    "label": "PostNetInit()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostNetInit()"
  },
  {
    "label": "OnRep_ReplicatedMovement()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnRep_ReplicatedMovement()"
  },
  {
    "label": "PostNetReceiveLocationAndRotation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostNetReceiveLocationAndRotation()"
  },
  {
    "label": "PostNetReceiveVelocity()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostNetReceiveVelocity(const FVector& NewVelocity)"
  },
  {
    "label": "PostNetReceivePhysicState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostNetReceivePhysicState()"
  },
  {
    "label": "SetFakeNetPhysicsState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFakeNetPhysicsState(bool bShouldSleep)"
  },
  {
    "label": "SyncReplicatedPhysicsSimulation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SyncReplicatedPhysicsSimulation()"
  },
  {
    "label": "SetOwner()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetOwner( AActor* NewOwner )"
  },
  {
    "label": "CheckStillInWorld()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CheckStillInWorld()"
  },
  {
    "label": "ClearComponentOverlaps()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearComponentOverlaps()"
  },
  {
    "label": "UpdateOverlaps()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateOverlaps(bool bDoNotifies=true)"
  },
  {
    "label": "Tick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Tick( float DeltaSeconds )"
  },
  {
    "label": "PostSpawnInitialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostSpawnInitialize(FTransform const& SpawnTransform, AActor* InOwner, APawn* InInstigator, bool bRemoteOwned, bool bNoFail, bool bDeferConstruction, ESpawnActorScaleMethod TransformScaleMethod = ESpawnActorScaleMethod::MultiplyWithRoot)"
  },
  {
    "label": "FinishSpawning()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FinishSpawning(const FTransform& Transform, bool bIsDefaultTransform = false, const FComponentInstanceDataCache* InstanceDataCache = nullptr, ESpawnActorScaleMethod TransformScaleMethod = ESpawnActorScaleMethod::OverrideRootScale)"
  },
  {
    "label": "PostActorConstruction()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostActorConstruction()"
  },
  {
    "label": "PreInitializeComponents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PreInitializeComponents()"
  },
  {
    "label": "PostInitializeComponents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostInitializeComponents()"
  },
  {
    "label": "DispatchPhysicsCollisionHit()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DispatchPhysicsCollisionHit(const struct FRigidBodyCollisionInfo& MyInfo, const struct FRigidBodyCollisionInfo& OtherInfo, const FCollisionImpactData& RigidCollisionData)"
  },
  {
    "label": "DestroyNetworkActorHandled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DestroyNetworkActorHandled()"
  },
  {
    "label": "SetNetDormancy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetNetDormancy(ENetDormancy NewDormancy)"
  },
  {
    "label": "FlushNetDormancy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FlushNetDormancy()"
  },
  {
    "label": "ForcePropertyCompare()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ForcePropertyCompare()"
  },
  {
    "label": "PushSelectionToProxies()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PushSelectionToProxies()"
  },
  {
    "label": "PushLevelInstanceEditingStateToProxies()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PushLevelInstanceEditingStateToProxies(bool bInEditingState)"
  },
  {
    "label": "RegisterAllComponents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterAllComponents()"
  },
  {
    "label": "PreRegisterAllComponents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PreRegisterAllComponents()"
  },
  {
    "label": "PostRegisterAllComponents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostRegisterAllComponents()"
  },
  {
    "label": "HasValidRootComponent()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasValidRootComponent()"
  },
  {
    "label": "UnregisterAllComponents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterAllComponents(bool bForReregister = false)"
  },
  {
    "label": "PostUnregisterAllComponents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostUnregisterAllComponents()"
  },
  {
    "label": "ReregisterAllComponents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReregisterAllComponents()"
  },
  {
    "label": "HandleRegisterComponentWithWorld()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleRegisterComponentWithWorld(UActorComponent* Component)"
  },
  {
    "label": "IncrementalRegisterComponents()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IncrementalRegisterComponents(int32 NumComponentsToRegister, FRegisterComponentContext* Context = nullptr)"
  },
  {
    "label": "MarkComponentsRenderStateDirty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MarkComponentsRenderStateDirty()"
  },
  {
    "label": "UpdateComponentTransforms()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateComponentTransforms()"
  },
  {
    "label": "UpdateComponentVisibility()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateComponentVisibility()"
  },
  {
    "label": "InitializeComponents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeComponents()"
  },
  {
    "label": "UninitializeComponents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UninitializeComponents()"
  },
  {
    "label": "MarkComponentsAsGarbage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MarkComponentsAsGarbage(bool bModify = true)"
  },
  {
    "label": "InvalidateLightingCacheDetailed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InvalidateLightingCacheDetailed(bool bTranslationOnly)"
  },
  {
    "label": "TeleportTo()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TeleportTo( const FVector& DestLocation, const FRotator& DestRotation, bool bIsATest=false, bool bNoCheck=false )"
  },
  {
    "label": "K2_TeleportTo()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "K2_TeleportTo( FVector DestLocation, FRotator DestRotation )"
  },
  {
    "label": "ClearCrossLevelReferences()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearCrossLevelReferences()"
  },
  {
    "label": "RouteEndPlay()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RouteEndPlay(const EEndPlayReason::Type EndPlayReason)"
  },
  {
    "label": "SeedAllRandomStreams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SeedAllRandomStreams()"
  },
  {
    "label": "ResetPropertiesForConstruction()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetPropertiesForConstruction()"
  },
  {
    "label": "RerunConstructionScripts()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RerunConstructionScripts()"
  },
  {
    "label": "DebugShowComponentHierarchy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DebugShowComponentHierarchy( const TCHAR* Info, bool bShowPosition  = true)"
  },
  {
    "label": "DebugShowOneComponentHierarchy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DebugShowOneComponentHierarchy( USceneComponent* SceneComp, int32& NestLevel, bool bShowPosition )"
  },
  {
    "label": "ExecuteConstruction()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ExecuteConstruction(const FTransform& Transform, const struct FRotationConversionCache* TransformRotationCache, const class FComponentInstanceDataCache* InstanceDataCache, bool bIsDefaultTransform = false, ESpawnActorScaleMethod TransformScaleMethod = ESpawnActorScaleMethod::OverrideRootScale)"
  },
  {
    "label": "FinishAndRegisterComponent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FinishAndRegisterComponent(UActorComponent* Component)"
  },
  {
    "label": "DestroyConstructedComponents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyConstructedComponents()"
  },
  {
    "label": "BeginReplication()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginReplication()"
  },
  {
    "label": "EndReplication()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EndReplication(EEndPlayReason::Type EndPlayReason)"
  },
  {
    "label": "UpdateOwningNetConnection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateOwningNetConnection()"
  },
  {
    "label": "BeginReplication()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginReplication(const FActorReplicationParams& Params)"
  },
  {
    "label": "UpdateReplicatePhysicsCondition()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateReplicatePhysicsCondition()"
  },
  {
    "label": "RegisterActorTickFunctions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterActorTickFunctions(bool bRegister)"
  },
  {
    "label": "ProcessUserConstructionScript()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessUserConstructionScript()"
  },
  {
    "label": "PostCreateBlueprintComponent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostCreateBlueprintComponent(UActorComponent* NewActorComp)"
  },
  {
    "label": "CheckComponentInstanceName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CheckComponentInstanceName(const FName InName)"
  },
  {
    "label": "SetTickGroup()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTickGroup(ETickingGroup NewTickGroup)"
  },
  {
    "label": "Destroyed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Destroyed()"
  },
  {
    "label": "DispatchBlockingHit()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DispatchBlockingHit(UPrimitiveComponent* MyComp, UPrimitiveComponent* OtherComp, bool bSelfMoved, FHitResult const& Hit)"
  },
  {
    "label": "FellOutOfWorld()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FellOutOfWorld(const class UDamageType& dmgType)"
  },
  {
    "label": "OutsideWorldBounds()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OutsideWorldBounds()"
  },
  {
    "label": "TornOff()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TornOff()"
  },
  {
    "label": "DisableComponentsSimulatePhysics()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DisableComponentsSimulatePhysics()"
  },
  {
    "label": "TakeDamage()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "TakeDamage(float DamageAmount, struct FDamageEvent const& DamageEvent, class AController* EventInstigator, AActor* DamageCauser)"
  },
  {
    "label": "InternalTakeRadialDamage()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "InternalTakeRadialDamage(float Damage, struct FRadialDamageEvent const& RadialDamageEvent, class AController* EventInstigator, AActor* DamageCauser)"
  },
  {
    "label": "InternalTakePointDamage()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "InternalTakePointDamage(float Damage, struct FPointDamageEvent const& PointDamageEvent, class AController* EventInstigator, AActor* DamageCauser)"
  },
  {
    "label": "BecomeViewTarget()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BecomeViewTarget( class APlayerController* PC )"
  },
  {
    "label": "EndViewTarget()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EndViewTarget( class APlayerController* PC )"
  },
  {
    "label": "K2_OnBecomeViewTarget()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "K2_OnBecomeViewTarget( class APlayerController* PC )"
  },
  {
    "label": "K2_OnEndViewTarget()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "K2_OnEndViewTarget( class APlayerController* PC )"
  },
  {
    "label": "CalcCamera()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CalcCamera(float DeltaTime, struct FMinimalViewInfo& OutResult)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "K2_OnReset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "K2_OnReset()"
  },
  {
    "label": "ForceNetRelevant()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ForceNetRelevant()"
  },
  {
    "label": "ForceNetUpdate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ForceNetUpdate()"
  },
  {
    "label": "PrestreamTextures()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PrestreamTextures( float Seconds, bool bEnableStreaming, int32 CinematicTextureGroups = 0 )"
  },
  {
    "label": "PostRenderFor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostRenderFor(class APlayerController* PC, class UCanvas* Canvas, FVector CameraPosition, FVector CameraDir)"
  },
  {
    "label": "ObjectPtrDecay()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "ObjectPtrDecay(OwnedComponents)"
  },
  {
    "label": "AddOwnedComponent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddOwnedComponent(UActorComponent* Component)"
  },
  {
    "label": "RemoveOwnedComponent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveOwnedComponent(UActorComponent* Component)"
  },
  {
    "label": "ResetOwnedComponents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetOwnedComponents()"
  },
  {
    "label": "UpdateReplicatedComponent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateReplicatedComponent(UActorComponent* Component)"
  },
  {
    "label": "UpdateAllReplicatedComponents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateAllReplicatedComponents()"
  },
  {
    "label": "SetReplicatedComponentNetCondition()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetReplicatedComponentNetCondition(const UActorComponent* ReplicatedComponent, ELifetimeCondition NetCondition)"
  },
  {
    "label": "AddReplicatedSubObject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddReplicatedSubObject(UObject* SubObject, ELifetimeCondition NetCondition = COND_None)"
  },
  {
    "label": "RemoveReplicatedSubObject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveReplicatedSubObject(UObject* SubObject)"
  },
  {
    "label": "DestroyReplicatedSubObjectOnRemotePeers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyReplicatedSubObjectOnRemotePeers(UObject* SubObject)"
  },
  {
    "label": "DestroyReplicatedSubObjectOnRemotePeers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyReplicatedSubObjectOnRemotePeers(UActorComponent* OwnerComponent, UObject* SubObject)"
  },
  {
    "label": "TearOffReplicatedSubObjectOnRemotePeers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TearOffReplicatedSubObjectOnRemotePeers(UObject* SubObject)"
  },
  {
    "label": "TearOffReplicatedSubObjectOnRemotePeers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TearOffReplicatedSubObjectOnRemotePeers(UActorComponent* OwnerComponent, UObject* SubObject)"
  },
  {
    "label": "AddActorComponentReplicatedSubObject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddActorComponentReplicatedSubObject(UActorComponent* OwnerComponent, UObject* SubObject, ELifetimeCondition NetCondition = COND_None)"
  },
  {
    "label": "RemoveActorComponentReplicatedSubObject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveActorComponentReplicatedSubObject(UActorComponent* OwnerComponent, UObject* SubObject)"
  },
  {
    "label": "GetActorClassDefaultComponents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetActorClassDefaultComponents(const TSubclassOf<AActor>& InActorClass, const TSubclassOf<UActorComponent>& InComponentClass, TArray<const UActorComponent*>& OutComponents)"
  },
  {
    "label": "RemoveReplicatedSubObjectFromList()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RemoveReplicatedSubObjectFromList(UObject* SubObject)"
  },
  {
    "label": "RemoveActorComponentReplicatedSubObjectFromList()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RemoveActorComponentReplicatedSubObjectFromList(UActorComponent* OwnerComponent, UObject* SubObject)"
  },
  {
    "label": "AddComponentForReplication()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddComponentForReplication(UActorComponent* Component)"
  },
  {
    "label": "RemoveReplicatedComponent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveReplicatedComponent(UActorComponent* Component)"
  },
  {
    "label": "BuildReplicatedComponentsInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildReplicatedComponentsInfo()"
  },
  {
    "label": "AddInstanceComponent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddInstanceComponent(UActorComponent* Component)"
  },
  {
    "label": "RemoveInstanceComponent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveInstanceComponent(UActorComponent* Component)"
  },
  {
    "label": "ClearInstanceComponents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearInstanceComponents(bool bDestroyComponents)"
  },
  {
    "label": "MakeNoise()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MakeNoise(float Loudness=1.f, APawn* NoiseInstigator=nullptr, FVector NoiseLocation=FVector::ZeroVector, float MaxRange = 0.f, FName Tag = NAME_None)"
  },
  {
    "label": "MakeNoiseImpl()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MakeNoiseImpl(AActor* NoiseMaker, float Loudness, APawn* NoiseInstigator, const FVector& NoiseLocation, float MaxRange, FName Tag)"
  },
  {
    "label": "SetMakeNoiseDelegate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetMakeNoiseDelegate(const FMakeNoiseDelegate& NewDelegate)"
  },
  {
    "label": "DisplayDebug()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DisplayDebug(class UCanvas* Canvas, const class FDebugDisplayInfo& DebugDisplay, float& YL, float& YPos)"
  },
  {
    "label": "InternalDispatchBlockingHit()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InternalDispatchBlockingHit(UPrimitiveComponent* MyComp, UPrimitiveComponent* OtherComp, bool bSelfMoved, FHitResult const& Hit)"
  },
  {
    "label": "InternalPostEditUndo()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "InternalPostEditUndo()"
  },
  {
    "label": "SetFolderPathInternal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFolderPathInternal(const FName& InNewFolderPath, bool bInBroadcastChange = true)"
  },
  {
    "label": "SetFolderGuidInternal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFolderGuidInternal(const FGuid& InFolderGuid, bool bInBroadcastChange = true)"
  },
  {
    "label": "GET_MEMBER_NAME_CHECKED()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GET_MEMBER_NAME_CHECKED(AActor, bHidden)"
  },
  {
    "label": "SetHidden()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetHidden(const bool bInHidden)"
  },
  {
    "label": "GET_MEMBER_NAME_CHECKED()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GET_MEMBER_NAME_CHECKED(AActor, bReplicateMovement)"
  },
  {
    "label": "SetReplicatingMovement()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetReplicatingMovement(bool bInReplicateMovement)"
  },
  {
    "label": "GET_MEMBER_NAME_CHECKED()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GET_MEMBER_NAME_CHECKED(AActor, bCanBeDamaged)"
  },
  {
    "label": "SetCanBeDamaged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCanBeDamaged(bool bInCanBeDamaged)"
  },
  {
    "label": "GET_MEMBER_NAME_CHECKED()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GET_MEMBER_NAME_CHECKED(AActor, Role)"
  },
  {
    "label": "SetRole()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRole(ENetRole InRole)"
  },
  {
    "label": "SetReplicatedMovement()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetReplicatedMovement(const FRepMovement& InReplicatedMovement)"
  },
  {
    "label": "SetNetUpdateFrequency()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetNetUpdateFrequency(float Frequency)"
  },
  {
    "label": "SetMinNetUpdateFrequency()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetMinNetUpdateFrequency(float MinFrequency)"
  },
  {
    "label": "SetNetCullDistanceSquared()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetNetCullDistanceSquared(float DistanceSq)"
  },
  {
    "label": "GET_MEMBER_NAME_CHECKED()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GET_MEMBER_NAME_CHECKED(AActor, Instigator)"
  },
  {
    "label": "SetInstigator()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetInstigator(APawn* InInstigator)"
  },
  {
    "label": "AddDataLayerAsset()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AddDataLayerAsset(AActor* InActor, const UDataLayerAsset* InDataLayerAsset)"
  },
  {
    "label": "RemoveDataLayerAsset()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RemoveDataLayerAsset(AActor* InActor, const UDataLayerAsset* InDataLayerAsset)"
  },
  {
    "label": "ComponentScope()",
    "kind": "Method",
    "detail": "Function (FScopeCycleCounterUObject)",
    "insertText": "ComponentScope(Target)"
  },
  {
    "label": "GetActorLocation()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetActorLocation()"
  },
  {
    "label": "GetActorRotation()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetActorRotation()"
  },
  {
    "label": "GetRootComponent()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetRootComponent()"
  },
  {
    "label": "FVector()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FVector(Radius, Radius, HalfHeight)"
  },
  {
    "label": "InternalGetNetMode()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "InternalGetNetMode()"
  },
  {
    "label": "IsRunningDedicatedServer()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "IsRunningDedicatedServer()"
  },
  {
    "label": "DEFINE_ACTORDESC_TYPE()",
    "kind": "Method",
    "detail": "Function (endif)",
    "insertText": "DEFINE_ACTORDESC_TYPE(AActor, FWorldPartitionActorDesc)"
  }
]