[
  {
    "label": "VP8_COMP",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VP8_COMP"
  },
  {
    "label": "vpx_rational",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "vpx_rational"
  },
  {
    "label": "vpx_codec_pkt_list",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "vpx_codec_pkt_list"
  },
  {
    "label": "VP8_COMP",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VP8_COMP"
  },
  {
    "label": "VP8_COMP",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VP8_COMP"
  },
  {
    "label": "VP8_COMP",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VP8_COMP"
  },
  {
    "label": "VP8_COMP",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VP8_COMP"
  },
  {
    "label": "VP8_COMP",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VP8_COMP"
  },
  {
    "label": "VP8_COMP",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VP8_COMP"
  },
  {
    "label": "VP8_COMP",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VP8_COMP"
  },
  {
    "label": "VP8_COMP",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VP8_COMP"
  },
  {
    "label": "VP8_COMP",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VP8_COMP"
  },
  {
    "label": "VP8_COMP",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VP8_COMP"
  },
  {
    "label": "vpx_ref_frame_type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "vpx_ref_frame_type"
  },
  {
    "label": "VP8_COMP",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VP8_COMP"
  },
  {
    "label": "vpx_ref_frame_type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "vpx_ref_frame_type"
  },
  {
    "label": "VP8_COMP",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VP8_COMP"
  },
  {
    "label": "VP8_COMP",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VP8_COMP"
  },
  {
    "label": "VP8_COMP",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VP8_COMP"
  },
  {
    "label": "VP8_COMP",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VP8_COMP"
  },
  {
    "label": "VP8_COMP",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VP8_COMP"
  },
  {
    "label": "vp8_initialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vp8_initialize()"
  },
  {
    "label": "vp8_remove_compressor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vp8_remove_compressor(struct VP8_COMP **comp)"
  },
  {
    "label": "vp8_init_config()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vp8_init_config(struct VP8_COMP *onyx, VP8_CONFIG *oxcf)"
  },
  {
    "label": "vp8_change_config()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vp8_change_config(struct VP8_COMP *cpi, VP8_CONFIG *oxcf)"
  },
  {
    "label": "vp8_receive_raw_frame()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "vp8_receive_raw_frame(struct VP8_COMP *cpi, unsigned int frame_flags,\n                          YV12_BUFFER_CONFIG *sd, int64_t time_stamp,\n                          int64_t end_time)"
  },
  {
    "label": "vp8_get_compressed_data()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "vp8_get_compressed_data(struct VP8_COMP *cpi, unsigned int *frame_flags,\n                            size_t *size, unsigned char *dest,\n                            unsigned char *dest_end, int64_t *time_stamp,\n                            int64_t *time_end, int flush)"
  },
  {
    "label": "vp8_get_preview_raw_frame()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "vp8_get_preview_raw_frame(struct VP8_COMP *cpi, YV12_BUFFER_CONFIG *dest,\n                              vp8_ppflags_t *flags)"
  },
  {
    "label": "vp8_use_as_reference()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "vp8_use_as_reference(struct VP8_COMP *cpi, int ref_frame_flags)"
  },
  {
    "label": "vp8_update_reference()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "vp8_update_reference(struct VP8_COMP *cpi, int ref_frame_flags)"
  },
  {
    "label": "vp8_get_reference()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "vp8_get_reference(struct VP8_COMP *cpi,\n                      enum vpx_ref_frame_type ref_frame_flag,\n                      YV12_BUFFER_CONFIG *sd)"
  },
  {
    "label": "vp8_set_reference()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "vp8_set_reference(struct VP8_COMP *cpi,\n                      enum vpx_ref_frame_type ref_frame_flag,\n                      YV12_BUFFER_CONFIG *sd)"
  },
  {
    "label": "vp8_update_entropy()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "vp8_update_entropy(struct VP8_COMP *cpi, int update)"
  },
  {
    "label": "vp8_set_roimap()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "vp8_set_roimap(struct VP8_COMP *cpi, unsigned char *map, unsigned int rows,\n                   unsigned int cols, int delta_q[4], int delta_lf[4],\n                   unsigned int threshold[4])"
  },
  {
    "label": "vp8_set_active_map()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "vp8_set_active_map(struct VP8_COMP *cpi, unsigned char *map,\n                       unsigned int rows, unsigned int cols)"
  },
  {
    "label": "vp8_set_internal_size()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "vp8_set_internal_size(struct VP8_COMP *cpi, VPX_SCALING horiz_mode,\n                          VPX_SCALING vert_mode)"
  },
  {
    "label": "vp8_get_quantizer()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "vp8_get_quantizer(struct VP8_COMP *cpi)"
  }
]