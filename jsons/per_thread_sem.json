[
  {
    "label": "Mutex",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Mutex"
  },
  {
    "label": "PerThreadSem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PerThreadSem"
  },
  {
    "label": "PerThreadSemTest",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PerThreadSemTest"
  },
  {
    "label": "absl",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "absl"
  },
  {
    "label": "Tick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Tick(base_internal::ThreadIdentity* identity)"
  },
  {
    "label": "SetThreadBlockedCounter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetThreadBlockedCounter(std::atomic<int> *counter)"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Init(base_internal::ThreadIdentity* identity)"
  },
  {
    "label": "Post()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Post(base_internal::ThreadIdentity* identity)"
  },
  {
    "label": "Wait()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Wait(KernelTimeout t)"
  },
  {
    "label": "OneTimeInitThreadIdentity()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OneTimeInitThreadIdentity(absl::base_internal::ThreadIdentity*)"
  }
]