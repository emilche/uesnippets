[
  {
    "label": "TRACESERVICES_API",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TRACESERVICES_API"
  },
  {
    "label": "FProviderLock",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FProviderLock"
  },
  {
    "label": "FProviderEditScopeLock()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" HAL / CriticalSection . h \" # include \" HAL / Platform . h \" # include \" TraceServices / Model / AnalysisSession . h \" namespace TraceServices { struct FProviderEditScopeLock {)",
    "insertText": "FProviderEditScopeLock(const IEditableProvider& InProvider) : Provider(InProvider)"
  },
  {
    "label": "BeginEdit()",
    "kind": "Method",
    "detail": "Function (Provider .)",
    "insertText": "BeginEdit()"
  },
  {
    "label": "FProviderEditScopeLock()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "FProviderEditScopeLock()"
  },
  {
    "label": "EndEdit()",
    "kind": "Method",
    "detail": "Function (Provider .)",
    "insertText": "EndEdit()"
  },
  {
    "label": "FProviderReadScopeLock()",
    "kind": "Method",
    "detail": "Function (} const IEditableProvider& Provider ; } ; struct FProviderReadScopeLock {)",
    "insertText": "FProviderReadScopeLock(const IProvider& InProvider) : Provider(InProvider)"
  },
  {
    "label": "BeginRead()",
    "kind": "Method",
    "detail": "Function (Provider .)",
    "insertText": "BeginRead()"
  },
  {
    "label": "FProviderReadScopeLock()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "FProviderReadScopeLock()"
  },
  {
    "label": "EndRead()",
    "kind": "Method",
    "detail": "Function (Provider .)",
    "insertText": "EndRead()"
  },
  {
    "label": "ReadAccessCheck()",
    "kind": "Method",
    "detail": "Function (} const IProvider& Provider ; } ; class FProviderLock { public : struct FThreadLocalState { FProviderLock* Lock ; int32 ReadLockCount ; int32 WriteLockCount ; } ; public : void)",
    "insertText": "ReadAccessCheck(FThreadLocalState& State)"
  },
  {
    "label": "WriteAccessCheck()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WriteAccessCheck(FThreadLocalState& State)"
  },
  {
    "label": "BeginRead()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginRead(FThreadLocalState& State)"
  },
  {
    "label": "EndRead()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EndRead(FThreadLocalState& State)"
  },
  {
    "label": "BeginWrite()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginWrite(FThreadLocalState& State)"
  },
  {
    "label": "EndWrite()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EndWrite(FThreadLocalState& State)"
  }
]