[
  {
    "label": "FSlateBrush",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSlateBrush"
  },
  {
    "label": "FInsightsFrontendStyle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FInsightsFrontendStyle"
  },
  {
    "label": "TRACEINSIGHTSFRONTEND_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TRACEINSIGHTSFRONTEND_API"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" Math / Color . h \" # include \" Styling / SlateStyle . h \" # include \" Styling / SlateTypes . h \" # include \" Templates / SharedPointer . h \" # include \" Types / SlateEnums . h \" # include \" UObject / NameTypes . h \" struct FSlateBrush ; namespace UE::Insights { class FInsightsFrontendStyle { public : void)",
    "insertText": "Initialize()"
  },
  {
    "label": "Shutdown()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Shutdown()"
  },
  {
    "label": "GetStyleSetName()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetStyleSetName()"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (const ISlateStyle&)",
    "insertText": "Get()"
  },
  {
    "label": "GetColor()",
    "kind": "Method",
    "detail": "Function (const FLinearColor&)",
    "insertText": "GetColor(FName PropertyName, const ANSICHAR* Specifier = NULL)"
  },
  {
    "label": "GetBrush()",
    "kind": "Method",
    "detail": "Function (} const FSlateBrush*)",
    "insertText": "GetBrush(FName PropertyName, const ANSICHAR* Specifier = NULL)"
  },
  {
    "label": "GetOutlineBrush()",
    "kind": "Method",
    "detail": "Function (} const FSlateBrush*)",
    "insertText": "GetOutlineBrush(EHorizontalAlignment HAlign)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (} else)",
    "insertText": "if(HAlign == HAlign_Right)"
  },
  {
    "label": "GetBrush()",
    "kind": "Method",
    "detail": "Function (} else { return StyleInstance ->)",
    "insertText": "GetBrush(\"Border.TB\")"
  },
  {
    "label": "FStyle()",
    "kind": "Method",
    "detail": "Function (} } class FStyle : public FSlateStyleSet { public :)",
    "insertText": "FStyle(const FName& InStyleSetName)"
  },
  {
    "label": "SyncParentStyles()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SyncParentStyles()"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (public : FTextBlockStyle NormalText ; FButtonStyle Button ; FSlateColor SelectorColor ; FSlateColor SelectionColor ; FSlateColor SelectionColor_Inactive ; FSlateColor SelectionColor_Pressed ; } ; private : TSharedRef<FInsightsFrontendStyle::FStyle>)",
    "insertText": "Create()"
  }
]