[
  {
    "label": "ssl_ctx_st",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ssl_ctx_st"
  },
  {
    "label": "x509_store_ctx_st",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "x509_store_ctx_st"
  },
  {
    "label": "ISslCertificateManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISslCertificateManager"
  },
  {
    "label": "FSslCertificateDelegates",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSslCertificateDelegates"
  },
  {
    "label": "FCertInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCertInfo"
  },
  {
    "label": "ISslCertificateManager()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / ContainerAllocationPolicies . h \" # include \" CoreTypes . h \" # include \" CoreFwd . h \" # include \" Delegates / Delegate . h \" struct ssl_ctx_st ; typedef struct ssl_ctx_st SSL_CTX ; struct x509_store_ctx_st ; typedef struct x509_store_ctx_st X509_STORE_CTX ; class ISslCertificateManager { public : ~)",
    "insertText": "ISslCertificateManager()"
  },
  {
    "label": "AddCertificatesToSslContext()",
    "kind": "Method",
    "detail": "Function (} int PUBLIC_KEY_DIGEST_SIZE = 3 2 ; void)",
    "insertText": "AddCertificatesToSslContext(SSL_CTX* SslContextPtr)"
  },
  {
    "label": "HasCertificatesAvailable()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasCertificatesAvailable()"
  },
  {
    "label": "ClearAllPinnedPublicKeys()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearAllPinnedPublicKeys()"
  },
  {
    "label": "HasPinnedPublicKeys()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasPinnedPublicKeys()"
  },
  {
    "label": "IsDomainPinned()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsDomainPinned(const FString& Domain)"
  },
  {
    "label": "SetPinnedPublicKeys()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPinnedPublicKeys(const FString& Domain, const FString& PinnedKeyDigests)"
  },
  {
    "label": "VerifySslCertificates()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "VerifySslCertificates(X509_STORE_CTX* Context, const FString& Domain)"
  },
  {
    "label": "VerifySslCertificates()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "VerifySslCertificates(TArray<TArray<uint8, TFixedAllocator<PUBLIC_KEY_DIGEST_SIZE>>>& Digests, const FString& Domain)"
  },
  {
    "label": "DECLARE_DELEGATE_RetVal_TwoParams()",
    "kind": "Method",
    "detail": "Function (} ; class FSslCertificateDelegates { public : struct FCertInfo { int CERT_DIGEST_SIZE = 2 0 ; TArray<uint8,TInlineAllocator<ISslCertificateManager::PUBLIC_KEY_DIGEST_SIZE>> KeyDigest ; TArray<uint8,TInlineAllocator<CERT_DIGEST_SIZE>> Thumbprint ; FString Issuer ; FString Subject ; } ;)",
    "insertText": "DECLARE_DELEGATE_RetVal_TwoParams(bool, FVerifySslCertificates, const FString&, const TArray<FCertInfo>&)"
  }
]