[
  {
    "label": "SAFE_SHL()",
    "kind": "Method",
    "detail": "Function (# ifndef SILK_MACROS_ARMv4_H # define SILK_MACROS_ARMv4_H # define)",
    "insertText": "SAFE_SHL(a,b) ((opus_int32)((opus_uint32)(a) << (b))) #undef silk_SMULWB static OPUS_INLINE opus_int32 silk_SMULWB_armv4(opus_int32 a, opus_int16 b)"
  },
  {
    "label": "__asm__()",
    "kind": "Method",
    "detail": "Function (unsigned rd_lo ; int rd_hi ;)",
    "insertText": "__asm__(\"#silk_SMULWB\\n\\t\" \"smull %0, %1, %2, %3\\n\\t\" : \"=&r\"(rd_lo), \"=&r\"(rd_hi) : \"%r\"(a), \"r\"(SAFE_SHL(b,16)))"
  },
  {
    "label": "__asm__()",
    "kind": "Method",
    "detail": "Function (unsigned rd_lo ; int rd_hi ;)",
    "insertText": "__asm__(\"#silk_SMULWT\\n\\t\" \"smull %0, %1, %2, %3\\n\\t\" : \"=&r\"(rd_lo), \"=&r\"(rd_hi) : \"%r\"(a), \"r\"(b&~0xFFFF))"
  },
  {
    "label": "__asm__()",
    "kind": "Method",
    "detail": "Function (unsigned rd_lo ; int rd_hi ;)",
    "insertText": "__asm__(\"#silk_SMULWW\\n\\t\" \"smull %0, %1, %2, %3\\n\\t\" : \"=&r\"(rd_lo), \"=&r\"(rd_hi) : \"%r\"(a), \"r\"(b))"
  },
  {
    "label": "silk_SMULWW()",
    "kind": "Method",
    "detail": "Function (} # define)",
    "insertText": "silk_SMULWW(a, b) (silk_SMULWW_armv4(a, b)) #undef silk_SMLAWW static OPUS_INLINE opus_int32 silk_SMLAWW_armv4(opus_int32 a, opus_int32 b, opus_int32 c)"
  },
  {
    "label": "__asm__()",
    "kind": "Method",
    "detail": "Function (unsigned rd_lo ; int rd_hi ;)",
    "insertText": "__asm__(\"#silk_SMLAWW\\n\\t\" \"smull %0, %1, %2, %3\\n\\t\" : \"=&r\"(rd_lo), \"=&r\"(rd_hi) : \"%r\"(b), \"r\"(c))"
  }
]