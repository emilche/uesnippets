[
  {
    "label": "FVulkanChunkedPipelineCacheManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanChunkedPipelineCacheManager"
  },
  {
    "label": "FVulkanChunkedPipelineCacheManagerImpl",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanChunkedPipelineCacheManagerImpl"
  },
  {
    "label": "FVulkanPipelineCacheEntry",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanPipelineCacheEntry"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "TPipelineState",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TPipelineState"
  },
  {
    "label": "FPSOCreateFuncParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPSOCreateFuncParams"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" VulkanRHIPrivate . h \" # include \" VulkanResources . h \" # include \" VulkanShaderResources . h \" # include \" VulkanDescriptorSets . h \" # include \" ShaderPipelineCache . h \" # include \" Templates / UniquePtr . h \" class FVulkanChunkedPipelineCacheManager { TUniquePtr<class FVulkanChunkedPipelineCacheManagerImpl> VulkanPipelineCacheManagerImpl ; class FVulkanPipelineCacheEntry ; public : void)",
    "insertText": "Init()"
  },
  {
    "label": "Shutdown()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Shutdown()"
  },
  {
    "label": "IsEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsEnabled()"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (FVulkanChunkedPipelineCacheManager&)",
    "insertText": "Get()"
  },
  {
    "label": "FPSOCreateFuncParams()",
    "kind": "Method",
    "detail": "Function (enum class EPSOOperation { CreateIfPresent,CreateAndStorePSO,} ; template<class TPipelineState> struct FPSOCreateFuncParams {)",
    "insertText": "FPSOCreateFuncParams(TPipelineState* PSOIn, VkPipelineCache DestPipelineCacheIn, FVulkanChunkedPipelineCacheManager::EPSOOperation PSOOperationIn, FRWLock& DestPipelineCacheLockIn) : PSO(PSOIn), DestPipelineCache(DestPipelineCacheIn), PSOOperation(PSOOperationIn), DestPipelineCacheLock(DestPipelineCacheLockIn)"
  },
  {
    "label": "VkResult()",
    "kind": "Method",
    "detail": "Function (} TPipelineState* PSO ; VkPipelineCache DestPipelineCache ; FVulkanChunkedPipelineCacheManager::EPSOOperation PSOOperation ; FRWLock& DestPipelineCacheLock ; } ; template<class TPipelineState> using FPSOCreateCallbackFunc = TUniqueFunction<)",
    "insertText": "VkResult(FPSOCreateFuncParams<TPipelineState>& Params)"
  },
  {
    "label": "CreatePSO()",
    "kind": "Method",
    "detail": "Function (template<class TPipelineState> VkResult)",
    "insertText": "CreatePSO(TPipelineState* GraphicsPipelineState, bool bIsPrecompileJob, FPSOCreateCallbackFunc<TPipelineState> PSOCreateFunc)"
  },
  {
    "label": "Tick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Tick()"
  }
]