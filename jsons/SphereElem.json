[
  {
    "label": "FMaterialRenderProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMaterialRenderProxy"
  },
  {
    "label": "FKSphereElem",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FKSphereElem"
  },
  {
    "label": "FPrimitiveDrawInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPrimitiveDrawInterface"
  },
  {
    "label": "FMeshElementCollector",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMeshElementCollector"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" PhysicsEngine / ShapeElem . h \" # include \" SphereElem . generated . h \" class FMaterialRenderProxy ;)",
    "insertText": "USTRUCT()"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() #if WITH_EDITORONLY_DATA UPROPERTY()"
  },
  {
    "label": "FKSphereElem()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FKSphereElem() : FKShapeElem(EAggCollisionShape::Sphere) #if WITH_EDITORONLY_DATA , TM_DEPRECATED(ForceInitToZero) #endif , Center( FVector::ZeroVector ) , Radius(1)"
  },
  {
    "label": "FKSphereElem()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FKSphereElem(float r ) : FKShapeElem(EAggCollisionShape::Sphere) #if WITH_EDITORONLY_DATA , TM_DEPRECATED(ForceInitToZero) #endif , Center( FVector::ZeroVector ) , Radius(r)"
  },
  {
    "label": "FKSphereElem()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "FKSphereElem()"
  },
  {
    "label": "FixupDeprecated()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITORONLY_DATA void)",
    "insertText": "FixupDeprecated(FArchive& Ar)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (# endif bool)",
    "insertText": "operator(const FKSphereElem& LHS, const FKSphereElem& RHS)"
  },
  {
    "label": "GetTransform()",
    "kind": "Method",
    "detail": "Function (} FTransform)",
    "insertText": "GetTransform()"
  },
  {
    "label": "SetTransform()",
    "kind": "Method",
    "detail": "Function (} ; void)",
    "insertText": "SetTransform(const FTransform& InTransform)"
  },
  {
    "label": "GetLocation()",
    "kind": "Method",
    "detail": "Function (Center = InTransform .)",
    "insertText": "GetLocation()"
  },
  {
    "label": "GetScaledVolume()",
    "kind": "Method",
    "detail": "Function (} FVector::FReal)",
    "insertText": "GetScaledVolume(const FVector& Scale)"
  },
  {
    "label": "DrawElemWire()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "DrawElemWire(class FPrimitiveDrawInterface* PDI, const FTransform& ElemTM, float Scale, const FColor Color)"
  },
  {
    "label": "DrawElemSolid()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DrawElemSolid(class FPrimitiveDrawInterface* PDI, const FTransform& ElemTM, float Scale, const FMaterialRenderProxy* MaterialRenderProxy)"
  },
  {
    "label": "DrawElemWire()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DrawElemWire(class FPrimitiveDrawInterface* PDI, const FTransform& ElemTM, const FVector& Scale3D, const FColor Color)"
  },
  {
    "label": "DrawElemSolid()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DrawElemSolid(class FPrimitiveDrawInterface* PDI, const FTransform& ElemTM, const FVector& Scale3D, const FMaterialRenderProxy* MaterialRenderProxy)"
  },
  {
    "label": "GetElemSolid()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetElemSolid(const FTransform& ElemTM, const FVector& Scale3D, const FMaterialRenderProxy* MaterialRenderProxy, int32 ViewIndex, class FMeshElementCollector& Collector)"
  },
  {
    "label": "CalcAABB()",
    "kind": "Method",
    "detail": "Function (FBox)",
    "insertText": "CalcAABB(const FTransform& BoneTM, float Scale)"
  },
  {
    "label": "ScaleElem()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ScaleElem(FVector DeltaSize, float MinSize)"
  },
  {
    "label": "GetFinalScaled()",
    "kind": "Method",
    "detail": "Function (EAggCollisionShape::Type StaticShapeType ; FKSphereElem)",
    "insertText": "GetFinalScaled(const FVector& Scale3D, const FTransform& RelativeTM)"
  },
  {
    "label": "GetShortestDistanceToPoint()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetShortestDistanceToPoint(const FVector& WorldPosition, const FTransform& BodyToWorldTM)"
  },
  {
    "label": "GetClosestPointAndNormal()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetClosestPointAndNormal(const FVector& WorldPosition, const FTransform& BodyToWorldTM, FVector& ClosestWorldPosition, FVector& Normal)"
  }
]