[
  {
    "label": "AActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AActor"
  },
  {
    "label": "AAIController",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AAIController"
  },
  {
    "label": "APawn",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "APawn"
  },
  {
    "label": "APlayerController",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "APlayerController"
  },
  {
    "label": "FDebugRenderSceneProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDebugRenderSceneProxy"
  },
  {
    "label": "FPoly",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPoly"
  },
  {
    "label": "UPrimitiveComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPrimitiveComponent"
  },
  {
    "label": "FDebugDrawDelegateHelper",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDebugDrawDelegateHelper"
  },
  {
    "label": "FNavigationPath",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FNavigationPath"
  },
  {
    "label": "FGameplayDebuggerCategory_AI",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGameplayDebuggerCategory_AI"
  },
  {
    "label": "FRepData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRepData"
  },
  {
    "label": "FRepDataPath",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRepDataPath"
  },
  {
    "label": "FGameplayDebuggerCategory_AI()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # if WITH_GAMEPLAY_DEBUGGER_MENU # include \" GameplayDebuggerCategory . h \" class AActor ; class AAIController ; class APawn ; class APlayerController ; class FDebugRenderSceneProxy ; class FPoly ; class UPrimitiveComponent ; struct FDebugDrawDelegateHelper ; struct FNavigationPath ; class FGameplayDebuggerCategory_AI : public FGameplayDebuggerCategory { public :)",
    "insertText": "FGameplayDebuggerCategory_AI()"
  },
  {
    "label": "CollectData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CollectData(APlayerController* OwnerPC, AActor* DebugActor)"
  },
  {
    "label": "OnDataPackReplicated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDataPackReplicated(int32 DataPackId)"
  },
  {
    "label": "DrawData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DrawData(APlayerController* OwnerPC, FGameplayDebuggerCanvasContext& CanvasContext)"
  },
  {
    "label": "CreateDebugSceneProxy()",
    "kind": "Method",
    "detail": "Function (FDebugRenderSceneProxy*)",
    "insertText": "CreateDebugSceneProxy(const UPrimitiveComponent* InComponent, FDebugDrawDelegateHelper*& OutDelegateHelper)"
  },
  {
    "label": "MakeInstance()",
    "kind": "Method",
    "detail": "Function (TSharedRef<FGameplayDebuggerCategory>)",
    "insertText": "MakeInstance()"
  },
  {
    "label": "CollectPathData()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "CollectPathData(AAIController* DebugAI)"
  },
  {
    "label": "DrawPath()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DrawPath(UWorld* World)"
  },
  {
    "label": "DrawPawnIcons()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DrawPawnIcons(UWorld* World, AActor* DebugActor, APawn* SkipPawn, FGameplayDebuggerCanvasContext& CanvasContext)"
  },
  {
    "label": "DrawOverheadInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DrawOverheadInfo(AActor& DebugActor, FGameplayDebuggerCanvasContext& CanvasContext)"
  },
  {
    "label": "FRepData()",
    "kind": "Method",
    "detail": "Function (struct FRepData { FString ControllerName ; FString PawnName ; FString MovementBaseInfo ; FString MovementModeInfo ; FString PathFollowingInfo ; int32 NextPathPointIndex ; FVector PathGoalLocation ; FString CurrentAITask ; FString CurrentAIState ; FString CurrentAIAssets ; FString NavDataInfo ; FString MontageInfo ; FString TaskQueueInfo ; FString TickingTaskInfo ; int16 NumTasksInQueue ; int16 NumTickingTasks ; uint32 bHasController : 1 ; uint32 bPathHasGoalActor : 1 ; uint32 bIsUsingPathFollowing : 1 ; uint32 bIsUsingCharacter : 1 ; uint32 bIsUsingBehaviorTree : 1 ; uint32 bIsUsingGameplayTasks : 1 ;)",
    "insertText": "FRepData() : NextPathPointIndex(0), NumTasksInQueue(0), NumTickingTasks(0), bHasController(false), bPathHasGoalActor(false), bIsUsingPathFollowing(false), bIsUsingCharacter(false), bIsUsingBehaviorTree(false), bIsUsingGameplayTasks(false)"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Serialize(FArchive& Ar)"
  }
]