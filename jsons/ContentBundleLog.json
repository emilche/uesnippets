[
  {
    "label": "FContentBundleBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FContentBundleBase"
  },
  {
    "label": "FContentBundleClient",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FContentBundleClient"
  },
  {
    "label": "FContentBundleContainer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FContentBundleContainer"
  },
  {
    "label": "UContentBundleDescriptor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UContentBundleDescriptor"
  },
  {
    "label": "UWorld",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UWorld"
  },
  {
    "label": "DECLARE_LOG_CATEGORY_EXTERN()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \")",
    "insertText": "DECLARE_LOG_CATEGORY_EXTERN(LogContentBundle, Log, All)"
  },
  {
    "label": "MakeDebugInfoString()",
    "kind": "Method",
    "detail": "Function (class FContentBundleBase ; class FContentBundleClient ; class FContentBundleContainer ; class UContentBundleDescriptor ; class UWorld ; namespace ContentBundle { namespace Log { FString)",
    "insertText": "MakeDebugInfoString(const FContentBundleBase& ContentBundle)"
  },
  {
    "label": "MakeDebugInfoString()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "MakeDebugInfoString(const FContentBundleClient& ContentBundleClient)"
  },
  {
    "label": "MakeDebugInfoString()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "MakeDebugInfoString(const FContentBundleContainer& ContentBundleContainer)"
  },
  {
    "label": "MakeDebugInfoString()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "MakeDebugInfoString(const FContentBundleClient& ContentBundleClient, UWorld* World)"
  }
]