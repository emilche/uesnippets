[
  {
    "label": "TStringView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TStringView"
  },
  {
    "label": "ProcessPath()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessPath(FStringView Path)"
  },
  {
    "label": "UseString()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UseString(FStringView InString)"
  },
  {
    "label": "Mid()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "Mid(Position, CharCount)"
  },
  {
    "label": "PrivateEquals()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "PrivateEquals(Other, SearchCase)"
  },
  {
    "label": "PrivateCompare()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "PrivateCompare(Other, SearchCase)"
  },
  {
    "label": "PrivateEquals()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PrivateEquals(TStringView Lhs, const CharType* Rhs)"
  },
  {
    "label": "PrivateEquals()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PrivateEquals(TStringView Lhs, TStringView Rhs)"
  },
  {
    "label": "PrivateLess()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PrivateLess(TStringView Lhs, TStringView Rhs)"
  },
  {
    "label": "FStringView()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FStringView(String, Size)"
  },
  {
    "label": "FAnsiStringView()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FAnsiStringView(String, Size)"
  },
  {
    "label": "FWideStringView()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FWideStringView(String, Size)"
  },
  {
    "label": "ViewType()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "ViewType(DataPtr + Size - OutLen, OutLen)"
  },
  {
    "label": "ViewType()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "ViewType(DataPtr + Size - OutLen, OutLen)"
  },
  {
    "label": "ViewType()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "ViewType(DataPtr + SpaceCount, Size - SpaceCount)"
  },
  {
    "label": "ViewType()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "ViewType(DataPtr, NewSize)"
  }
]