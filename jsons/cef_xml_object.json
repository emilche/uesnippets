[
  {
    "label": "CefStreamReader",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CefStreamReader"
  },
  {
    "label": "CefXmlObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CefXmlObject"
  },
  {
    "label": "base",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "base"
  },
  {
    "label": "CefXmlObject()",
    "kind": "Method",
    "detail": "Function (# ifndef CEF_INCLUDE_WRAPPER_CEF_XML_OBJECT_H_ # define CEF_INCLUDE_WRAPPER_CEF_XML_OBJECT_H_ # pragma once # include<map> # include<vector> # include \" include / base / cef_lock . h \" # include \" include / base / cef_macros . h \" # include \" include / base / cef_ref_counted . h \" # include \" include / cef_base . h \" # include \" include / cef_xml_reader . h \" class CefStreamReader ; class CefXmlObject : public base::RefCountedThreadSafe<CefXmlObject> { public : typedef std::vector<CefRefPtr<CefXmlObject>> ObjectVector ; typedef std::map<CefString,CefString> AttributeMap ;)",
    "insertText": "CefXmlObject(const CefString& name)"
  },
  {
    "label": "Load()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Load(CefRefPtr<CefStreamReader> stream, CefXmlReader::EncodingType encodingType, const CefString& URI, CefString* loadError)"
  },
  {
    "label": "Set()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Set(CefRefPtr<CefXmlObject> object)"
  },
  {
    "label": "Append()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Append(CefRefPtr<CefXmlObject> object, bool overwriteAttributes)"
  },
  {
    "label": "Duplicate()",
    "kind": "Method",
    "detail": "Function (CefRefPtr<CefXmlObject>)",
    "insertText": "Duplicate()"
  },
  {
    "label": "Clear()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Clear()"
  },
  {
    "label": "GetName()",
    "kind": "Method",
    "detail": "Function (CefString)",
    "insertText": "GetName()"
  },
  {
    "label": "SetName()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetName(const CefString& name)"
  },
  {
    "label": "HasParent()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasParent()"
  },
  {
    "label": "GetParent()",
    "kind": "Method",
    "detail": "Function (CefRefPtr<CefXmlObject>)",
    "insertText": "GetParent()"
  },
  {
    "label": "HasValue()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasValue()"
  },
  {
    "label": "GetValue()",
    "kind": "Method",
    "detail": "Function (CefString)",
    "insertText": "GetValue()"
  },
  {
    "label": "SetValue()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetValue(const CefString& value)"
  },
  {
    "label": "HasAttributes()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasAttributes()"
  },
  {
    "label": "GetAttributeCount()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "GetAttributeCount()"
  },
  {
    "label": "HasAttribute()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasAttribute(const CefString& name)"
  },
  {
    "label": "GetAttributeValue()",
    "kind": "Method",
    "detail": "Function (CefString)",
    "insertText": "GetAttributeValue(const CefString& name)"
  },
  {
    "label": "SetAttributeValue()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetAttributeValue(const CefString& name, const CefString& value)"
  },
  {
    "label": "GetAttributes()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "GetAttributes(AttributeMap& attributes)"
  },
  {
    "label": "ClearAttributes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearAttributes()"
  },
  {
    "label": "HasChildren()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasChildren()"
  },
  {
    "label": "GetChildCount()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "GetChildCount()"
  },
  {
    "label": "HasChild()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasChild(CefRefPtr<CefXmlObject> child)"
  },
  {
    "label": "AddChild()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AddChild(CefRefPtr<CefXmlObject> child)"
  },
  {
    "label": "RemoveChild()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RemoveChild(CefRefPtr<CefXmlObject> child)"
  },
  {
    "label": "GetChildren()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "GetChildren(ObjectVector& children)"
  },
  {
    "label": "ClearChildren()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearChildren()"
  },
  {
    "label": "FindChild()",
    "kind": "Method",
    "detail": "Function (CefRefPtr<CefXmlObject>)",
    "insertText": "FindChild(const CefString& name)"
  },
  {
    "label": "FindChildren()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "FindChildren(const CefString& name, ObjectVector& children)"
  },
  {
    "label": "CefXmlObject()",
    "kind": "Method",
    "detail": "Function (private : class base::RefCountedThreadSafe<CefXmlObject> ; ~)",
    "insertText": "CefXmlObject()"
  },
  {
    "label": "SetParent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetParent(CefXmlObject* parent)"
  },
  {
    "label": "DISALLOW_COPY_AND_ASSIGN()",
    "kind": "Method",
    "detail": "Function (CefString name_ ; CefXmlObject* parent_ ; CefString value_ ; AttributeMap attributes_ ; ObjectVector children_ ; base::Lock lock_ ;)",
    "insertText": "DISALLOW_COPY_AND_ASSIGN(CefXmlObject)"
  }
]