[
  {
    "label": "AActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AActor"
  },
  {
    "label": "SPropertySceneOutliner",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SPropertySceneOutliner"
  },
  {
    "label": "SMenuAnchor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SMenuAnchor"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Input / Reply . h \" # include \" Widgets / SWidget . h \" # include \" Widgets / SCompoundWidget . h \" # include \" PropertyCustomizationHelpers . h \" # include \" Widgets / Input / SMenuAnchor . h \" class AActor ; class SPropertySceneOutliner : public SCompoundWidget { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SPropertySceneOutliner)"
  },
  {
    "label": "SLATE_EVENT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_EVENT(FOnGetActorFilters, OnGetActorFilters ) SLATE_EVENT( FOnActorSelected, OnActorSelected ) SLATE_END_ARGS() void Construct( const FArguments& InArgs)"
  },
  {
    "label": "OnClicked()",
    "kind": "Method",
    "detail": "Function (private : FReply)",
    "insertText": "OnClicked()"
  },
  {
    "label": "OnGenerateSceneOutliner()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "OnGenerateSceneOutliner()"
  },
  {
    "label": "OnActorSelectedFromOutliner()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnActorSelectedFromOutliner(AActor* InActor)"
  }
]