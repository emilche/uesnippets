[
  {
    "label": "RTCStatsMemberInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RTCStatsMemberInterface"
  },
  {
    "label": "RTC_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RTC_EXPORT"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "RTCStatsMember",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RTCStatsMember"
  },
  {
    "label": "RTC_EXPORT_TEMPLATE_DECLARE",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RTC_EXPORT_TEMPLATE_DECLARE"
  },
  {
    "label": "RTCRestrictedStatsMember",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RTCRestrictedStatsMember"
  },
  {
    "label": "RTCNonStandardStatsMember",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RTCNonStandardStatsMember"
  },
  {
    "label": "RTCStats()",
    "kind": "Method",
    "detail": "Function (# ifndef API_STATS_RTC_STATS_H_ # define API_STATS_RTC_STATS_H_ # include<stddef . h> # include<stdint . h> # include<map> # include<memory> # include<string> # include<utility> # include<vector> # include \" absl / types / optional . h \" # include \" rtc_base / checks . h \" # include \" rtc_base / system / rtc_export . h \" # include \" rtc_base / system / rtc_export_template . h \" namespace webrtc { class RTCStatsMemberInterface ; class RTC_EXPORT RTCStats { public :)",
    "insertText": "RTCStats(const std::string& id, int64_t timestamp_us) : id_(id), timestamp_us_(timestamp_us)"
  },
  {
    "label": "RTCStats()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "RTCStats(std::string&& id, int64_t timestamp_us) : id_(std::move(id)), timestamp_us_(timestamp_us)"
  },
  {
    "label": "RTCStats()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "RTCStats()"
  },
  {
    "label": "copy()",
    "kind": "Method",
    "detail": "Function (} std::unique_ptr<RTCStats>)",
    "insertText": "copy()"
  },
  {
    "label": "id()",
    "kind": "Method",
    "detail": "Function (const std::string&)",
    "insertText": "id()"
  },
  {
    "label": "Members()",
    "kind": "Method",
    "detail": "Function (std::vector<const RTCStatsMemberInterface*>)",
    "insertText": "Members()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "operator(const RTCStats& other)"
  },
  {
    "label": "ToJson()",
    "kind": "Method",
    "detail": "Function (std::string)",
    "insertText": "ToJson()"
  },
  {
    "label": "cast_to()",
    "kind": "Method",
    "detail": "Function (template<T> const T&)",
    "insertText": "cast_to()"
  },
  {
    "label": "RTC_DCHECK_EQ()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RTC_DCHECK_EQ(type(), T::kType)"
  },
  {
    "label": "MembersOfThisObjectAndAncestors()",
    "kind": "Method",
    "detail": "Function (} protected : std::vector<const RTCStatsMemberInterface*>)",
    "insertText": "MembersOfThisObjectAndAncestors(size_t additional_capacity)"
  },
  {
    "label": "WEBRTC_RTCSTATS_DECL()",
    "kind": "Method",
    "detail": "Function (std::string const id_ ; int64_t timestamp_us_ ; } ; # define)",
    "insertText": "WEBRTC_RTCSTATS_DECL() \\ protected: \\ std::vector<const webrtc::RTCStatsMemberInterface*> \\ MembersOfThisObjectAndAncestors(size_t local_var_additional_capacity)"
  },
  {
    "label": "type()",
    "kind": "Method",
    "detail": "Function (\\ const char*)",
    "insertText": "type() const override #define WEBRTC_RTCSTATS_IMPL(this_class, parent_class, type_str, ...)"
  },
  {
    "label": "this_class()",
    "kind": "Method",
    "detail": "Function (\\ return std::make_unique<)",
    "insertText": "this_class(*this)"
  },
  {
    "label": "type()",
    "kind": "Method",
    "detail": "Function (\\ } \\ \\ const char*)",
    "insertText": "type()"
  },
  {
    "label": "sizeof()",
    "kind": "Method",
    "detail": "Function (\\ const webrtc::RTCStatsMemberInterface* local_var_members [ ] = { \\ __VA_ARGS__ } ; \\ size_t local_var_members_count = \\)",
    "insertText": "sizeof(local_var_members) / sizeof(local_var_members[0])"
  },
  {
    "label": "MembersOfThisObjectAndAncestors()",
    "kind": "Method",
    "detail": "Function (\\ std::vector<const webrtc::RTCStatsMemberInterface*> \\ local_var_members_vec =)",
    "insertText": "MembersOfThisObjectAndAncestors(\\ local_var_members_count + local_var_additional_capacity)"
  },
  {
    "label": "RTC_DCHECK_GE()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "RTC_DCHECK_GE(\\ local_var_members_vec.capacity() - local_var_members_vec.size(), \\ local_var_members_count + local_var_additional_capacity)"
  },
  {
    "label": "insert()",
    "kind": "Method",
    "detail": "Function (\\ local_var_members_vec .)",
    "insertText": "insert(local_var_members_vec.end(), \\ &local_var_members[0], \\ &local_var_members[local_var_members_count])"
  },
  {
    "label": "WEBRTC_RTCSTATS_IMPL_NO_MEMBERS()",
    "kind": "Method",
    "detail": "Function (\\ return local_var_members_vec ; \\ } # define)",
    "insertText": "WEBRTC_RTCSTATS_IMPL_NO_MEMBERS(this_class, parent_class, type_str)"
  },
  {
    "label": "MembersOfThisObjectAndAncestors()",
    "kind": "Method",
    "detail": "Function (\\ return)",
    "insertText": "MembersOfThisObjectAndAncestors(0)"
  },
  {
    "label": "RTCStatsMemberInterface()",
    "kind": "Method",
    "detail": "Function (\\ } enum class NonStandardGroupId { kGroupIdForTesting,kRtcAudioJitterBufferMaxPackets,kRtcStatsRelativePacketArrivalDelay,} ; enum class StatExposureCriteria : uint8_t { kAlways,kHardwareCapability,} ; class RTCStatsMemberInterface { public : enum Type { kBool,kInt32,kUint32,kInt64,kUint64,kDouble,kString,kSequenceBool,kSequenceInt32,kSequenceUint32,kSequenceInt64,kSequenceUint64,kSequenceDouble,kSequenceString,kMapStringUint64,kMapStringDouble,} ; ~)",
    "insertText": "RTCStatsMemberInterface()"
  },
  {
    "label": "name()",
    "kind": "Method",
    "detail": "Function (} const char*)",
    "insertText": "name()"
  },
  {
    "label": "is_sequence()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "is_sequence()"
  },
  {
    "label": "is_string()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "is_string()"
  },
  {
    "label": "is_defined()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "is_defined()"
  },
  {
    "label": "is_standardized()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "is_standardized()"
  },
  {
    "label": "group_ids()",
    "kind": "Method",
    "detail": "Function (std::vector<NonStandardGroupId>)",
    "insertText": "group_ids()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "operator(const RTCStatsMemberInterface& other)"
  },
  {
    "label": "ValueToString()",
    "kind": "Method",
    "detail": "Function (} std::string)",
    "insertText": "ValueToString()"
  },
  {
    "label": "ValueToJson()",
    "kind": "Method",
    "detail": "Function (std::string)",
    "insertText": "ValueToJson()"
  },
  {
    "label": "RTC_DCHECK_EQ()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RTC_DCHECK_EQ(type(), T::StaticType())"
  },
  {
    "label": "RTCStatsMemberInterface()",
    "kind": "Method",
    "detail": "Function (} protected :)",
    "insertText": "RTCStatsMemberInterface(const char* name) : name_(name)"
  },
  {
    "label": "IsEqual()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsEqual(const RTCStatsMemberInterface& other)"
  },
  {
    "label": "RTCStatsMember()",
    "kind": "Method",
    "detail": "Function (const char* const name_ ; } ; template<T> class RTCStatsMember : public RTCStatsMemberInterface { public :)",
    "insertText": "RTCStatsMember(const char* name) : RTCStatsMemberInterface(name), value_()"
  },
  {
    "label": "RTCStatsMember()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "RTCStatsMember(const char* name, const T& value) : RTCStatsMemberInterface(name), value_(value)"
  },
  {
    "label": "RTCStatsMember()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "RTCStatsMember(const char* name, T&& value) : RTCStatsMemberInterface(name), value_(std::move(value))"
  },
  {
    "label": "RTCStatsMember()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "RTCStatsMember(const RTCStatsMember<T>& other) : RTCStatsMemberInterface(other.name_), value_(other.value_)"
  },
  {
    "label": "RTCStatsMember()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "RTCStatsMember(RTCStatsMember<T>&& other) : RTCStatsMemberInterface(other.name_), value_(std::move(other.value_))"
  },
  {
    "label": "StaticType()",
    "kind": "Method",
    "detail": "Function (} Type)",
    "insertText": "StaticType()"
  },
  {
    "label": "ValueOrDefault()",
    "kind": "Method",
    "detail": "Function (template<U> T)",
    "insertText": "ValueOrDefault(U default_value)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} T&)",
    "insertText": "operator(const T& value)"
  },
  {
    "label": "value()",
    "kind": "Method",
    "detail": "Function (value_ = value ; return value_ .)",
    "insertText": "value()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} T&)",
    "insertText": "operator(const T&& value)"
  },
  {
    "label": "move()",
    "kind": "Method",
    "detail": "Function (value_ =)",
    "insertText": "move(value)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} T&)",
    "insertText": "operator()"
  },
  {
    "label": "RTC_DCHECK()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RTC_DCHECK(value_)"
  },
  {
    "label": "T()",
    "kind": "Method",
    "detail": "Function (const RTCStatsMember<T>& other_t = static_cast<const RTCStatsMember<)",
    "insertText": "T(other)"
  },
  {
    "label": "RTC_EXPORT_TEMPLATE_DECLARE()",
    "kind": "Method",
    "detail": "Function (\\ template class)",
    "insertText": "RTC_EXPORT_TEMPLATE_DECLARE(RTC_EXPORT) \\ RTCStatsMember<T> WEBRTC_DECLARE_RTCSTATSMEMBER(bool)"
  },
  {
    "label": "WEBRTC_DECLARE_RTCSTATSMEMBER()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WEBRTC_DECLARE_RTCSTATSMEMBER(int32_t)"
  },
  {
    "label": "WEBRTC_DECLARE_RTCSTATSMEMBER()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WEBRTC_DECLARE_RTCSTATSMEMBER(uint32_t)"
  },
  {
    "label": "WEBRTC_DECLARE_RTCSTATSMEMBER()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WEBRTC_DECLARE_RTCSTATSMEMBER(int64_t)"
  },
  {
    "label": "WEBRTC_DECLARE_RTCSTATSMEMBER()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WEBRTC_DECLARE_RTCSTATSMEMBER(uint64_t)"
  },
  {
    "label": "WEBRTC_DECLARE_RTCSTATSMEMBER()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WEBRTC_DECLARE_RTCSTATSMEMBER(double)"
  },
  {
    "label": "WEBRTC_DECLARE_RTCSTATSMEMBER()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WEBRTC_DECLARE_RTCSTATSMEMBER(std::string)"
  },
  {
    "label": "WEBRTC_DECLARE_RTCSTATSMEMBER()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WEBRTC_DECLARE_RTCSTATSMEMBER(std::vector<bool>)"
  },
  {
    "label": "WEBRTC_DECLARE_RTCSTATSMEMBER()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WEBRTC_DECLARE_RTCSTATSMEMBER(std::vector<int32_t>)"
  },
  {
    "label": "WEBRTC_DECLARE_RTCSTATSMEMBER()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WEBRTC_DECLARE_RTCSTATSMEMBER(std::vector<uint32_t>)"
  },
  {
    "label": "WEBRTC_DECLARE_RTCSTATSMEMBER()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WEBRTC_DECLARE_RTCSTATSMEMBER(std::vector<int64_t>)"
  },
  {
    "label": "WEBRTC_DECLARE_RTCSTATSMEMBER()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WEBRTC_DECLARE_RTCSTATSMEMBER(std::vector<uint64_t>)"
  },
  {
    "label": "WEBRTC_DECLARE_RTCSTATSMEMBER()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WEBRTC_DECLARE_RTCSTATSMEMBER(std::vector<double>)"
  },
  {
    "label": "WEBRTC_DECLARE_RTCSTATSMEMBER()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WEBRTC_DECLARE_RTCSTATSMEMBER(std::vector<std::string>)"
  },
  {
    "label": "WEBRTC_DECLARE_RTCSTATSMEMBER()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WEBRTC_DECLARE_RTCSTATSMEMBER(rtc_stats_internal::MapStringUint64)"
  },
  {
    "label": "WEBRTC_DECLARE_RTCSTATSMEMBER()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WEBRTC_DECLARE_RTCSTATSMEMBER(rtc_stats_internal::MapStringDouble)"
  },
  {
    "label": "RTCRestrictedStatsMember()",
    "kind": "Method",
    "detail": "Function (template<T,StatExposureCriteria E> class RTCRestrictedStatsMember : public RTCStatsMember<T> { public :)",
    "insertText": "RTCRestrictedStatsMember(const char* name) : RTCStatsMember<T>(name)"
  },
  {
    "label": "RTCRestrictedStatsMember()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "RTCRestrictedStatsMember(const char* name, const T& value) : RTCStatsMember<T>(name, value)"
  },
  {
    "label": "RTCRestrictedStatsMember()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "RTCRestrictedStatsMember(const char* name, T&& value) : RTCStatsMember<T>(name, std::move(value))"
  },
  {
    "label": "RTCRestrictedStatsMember()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "RTCRestrictedStatsMember(const RTCRestrictedStatsMember<T, E>& other) : RTCStatsMember<T>(other)"
  },
  {
    "label": "RTCRestrictedStatsMember()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "RTCRestrictedStatsMember(RTCRestrictedStatsMember<T, E>&& other) : RTCStatsMember<T>(std::move(other))"
  },
  {
    "label": "exposure_criteria()",
    "kind": "Method",
    "detail": "Function (} StatExposureCriteria)",
    "insertText": "exposure_criteria()"
  },
  {
    "label": "static_assert()",
    "kind": "Method",
    "detail": "Function (} private :)",
    "insertText": "static_assert(E != StatExposureCriteria::kAlways, \"kAlways is the default exposure criteria. Use \" \"RTCStatMember<T> instead.\")"
  },
  {
    "label": "RTC_EXPORT_TEMPLATE_DECLARE()",
    "kind": "Method",
    "detail": "Function (} ; template class)",
    "insertText": "RTC_EXPORT_TEMPLATE_DECLARE(RTC_EXPORT)"
  },
  {
    "label": "RTCNonStandardStatsMember()",
    "kind": "Method",
    "detail": "Function (template<T> class RTCNonStandardStatsMember : public RTCStatsMember<T> { public :)",
    "insertText": "RTCNonStandardStatsMember(const char* name) : RTCStatsMember<T>(name)"
  },
  {
    "label": "RTCNonStandardStatsMember()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "RTCNonStandardStatsMember(const char* name, std::initializer_list<NonStandardGroupId> group_ids) : RTCStatsMember<T>(name), group_ids_(group_ids)"
  },
  {
    "label": "RTCNonStandardStatsMember()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "RTCNonStandardStatsMember(const char* name, const T& value) : RTCStatsMember<T>(name, value)"
  },
  {
    "label": "RTCNonStandardStatsMember()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "RTCNonStandardStatsMember(const char* name, T&& value) : RTCStatsMember<T>(name, std::move(value))"
  },
  {
    "label": "RTCNonStandardStatsMember()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "RTCNonStandardStatsMember(const RTCNonStandardStatsMember<T>& other) : RTCStatsMember<T>(other), group_ids_(other.group_ids_)"
  },
  {
    "label": "RTCNonStandardStatsMember()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "RTCNonStandardStatsMember(RTCNonStandardStatsMember<T>&& other) : RTCStatsMember<T>(std::move(other)), group_ids_(std::move(other.group_ids_))"
  }
]