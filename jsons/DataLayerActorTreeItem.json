[
  {
    "label": "FDataLayerActorTreeItemData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDataLayerActorTreeItemData"
  },
  {
    "label": "FDataLayerActorTreeItem",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDataLayerActorTreeItem"
  },
  {
    "label": "FDataLayerActorTreeItemData()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" GameFramework / Actor . h \" # include \" SceneOutlinerFwd . h \" # include \" ActorTreeItem . h \" # include \" Engine / World . h \" # include \" WorldPartition / DataLayer / DataLayerInstance . h \" # include \" LevelInstance / LevelInstanceSubsystem . h \" # include \" Misc / ArchiveMD5 . h \" # include \" Misc / SecureHash . h \" # include \" UObject / ObjectKey . h \" struct FDataLayerActorTreeItemData {)",
    "insertText": "FDataLayerActorTreeItemData(AActor* InActor, UDataLayerInstance* InDataLayerInstance) : Actor(InActor) , DataLayerInstance(InDataLayerInstance)"
  },
  {
    "label": "DECLARE_DELEGATE_RetVal_TwoParams()",
    "kind": "Method",
    "detail": "Function (} TWeakObjectPtr<AActor> Actor ; TWeakObjectPtr<UDataLayerInstance> DataLayerInstance ; } ; struct FDataLayerActorTreeItem : public FActorTreeItem { public :)",
    "insertText": "DECLARE_DELEGATE_RetVal_TwoParams(bool, FFilterPredicate, const AActor*, const UDataLayerInstance* InDataLayerInstance)"
  },
  {
    "label": "DECLARE_DELEGATE_RetVal_TwoParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DELEGATE_RetVal_TwoParams(bool, FInteractivePredicate, const AActor*, const UDataLayerInstance* InDataLayerInstance)"
  },
  {
    "label": "FDataLayerActorTreeItem()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FDataLayerActorTreeItem(const FDataLayerActorTreeItemData& InData) : FActorTreeItem(InData.Actor.Get()) , DataLayerInstance(InData.DataLayerInstance) , IDDataLayerActor(FDataLayerActorTreeItem::ComputeTreeItemID(Actor.Get(), DataLayerInstance.Get()))"
  },
  {
    "label": "UpdateDisplayStringInternal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateDisplayStringInternal()"
  },
  {
    "label": "GetDataLayer()",
    "kind": "Method",
    "detail": "Function (} UDataLayerInstance*)",
    "insertText": "GetDataLayer()"
  },
  {
    "label": "GetActor()",
    "kind": "Method",
    "detail": "Function (} const AActor*)",
    "insertText": "GetActor()"
  },
  {
    "label": "ComputeTreeItemID()",
    "kind": "Method",
    "detail": "Function (} FSceneOutlinerTreeItemID)",
    "insertText": "ComputeTreeItemID(AActor* InActor, const UDataLayerInstance* InDataLayerInstance)"
  },
  {
    "label": "ActorKey()",
    "kind": "Method",
    "detail": "Function (FObjectKey)",
    "insertText": "ActorKey(InActor)"
  },
  {
    "label": "DataLayerInstanceKey()",
    "kind": "Method",
    "detail": "Function (FObjectKey)",
    "insertText": "DataLayerInstanceKey(InDataLayerInstance)"
  },
  {
    "label": "FSceneOutlinerTreeItemID()",
    "kind": "Method",
    "detail": "Function (FArchiveMD5 Ar ; Ar<<ActorKey<<DataLayerInstanceKey ; return)",
    "insertText": "FSceneOutlinerTreeItemID(Ar.GetGuidFromHash())"
  },
  {
    "label": "Filter()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "Filter(FFilterPredicate Pred)"
  },
  {
    "label": "GetInteractiveState()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "GetInteractiveState(FInteractivePredicate Pred)"
  },
  {
    "label": "IsValid()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsValid()"
  },
  {
    "label": "GetID()",
    "kind": "Method",
    "detail": "Function (} FSceneOutlinerTreeItemID)",
    "insertText": "GetID()"
  },
  {
    "label": "GetVisibility()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "GetVisibility()"
  },
  {
    "label": "UpdateDisplayString()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateDisplayString()"
  },
  {
    "label": "IsValid()",
    "kind": "Method",
    "detail": "Function (ULevel* Level = Actor .)",
    "insertText": "IsValid() ? Actor->GetLevel()"
  },
  {
    "label": "ULevelInstanceSubsystem()",
    "kind": "Method",
    "detail": "Function (ULevelInstanceSubsystem* LevelInstanceSubsystem = UWorld::GetSubsystem<)",
    "insertText": "ULevelInstanceSubsystem(OwningWorld)"
  },
  {
    "label": "PrefixWithParentLevelInstanceActorLabels()",
    "kind": "Method",
    "detail": "Function (DisplayString = LevelInstanceSubsystem ->)",
    "insertText": "PrefixWithParentLevelInstanceActorLabels(DisplayString, Level)"
  }
]