[
  {
    "label": "FVisualLoggerCommands",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVisualLoggerCommands"
  },
  {
    "label": "FVisualLoggerCommands()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Framework / Commands / InputChord . h \" # include \" Framework / Commands / Commands . h \" # define LOCTEXT_NAMESPACE \" FVisualLoggerCommands \" class FVisualLoggerCommands : public TCommands<FVisualLoggerCommands> { public :)",
    "insertText": "FVisualLoggerCommands() : TCommands<FVisualLoggerCommands>(\"VisualLogger\", NSLOCTEXT(\"Contexts\", \"VisualLogger\", \"Visual Logger\"), NAME_None, \"LogVisualizerStyle\")"
  },
  {
    "label": "RegisterCommands()",
    "kind": "Method",
    "detail": "Function (} public : void)",
    "insertText": "RegisterCommands()"
  },
  {
    "label": "UI_COMMAND()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UI_COMMAND(StartRecording, \"Start\", \"Start the debugger\", EUserInterfaceActionType::Button, FInputChord())"
  },
  {
    "label": "UI_COMMAND()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UI_COMMAND(StopRecording, \"Stop\", \"Step over the current message\", EUserInterfaceActionType::Button, FInputChord())"
  },
  {
    "label": "UI_COMMAND()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UI_COMMAND(Pause, \"Pause\", \"Stop the debugger\", EUserInterfaceActionType::Button, FInputChord())"
  },
  {
    "label": "UI_COMMAND()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UI_COMMAND(Resume, \"Resume\", \"Resume\", EUserInterfaceActionType::Button, FInputChord())"
  },
  {
    "label": "UI_COMMAND()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UI_COMMAND(FreeCamera, \"FreeCamera\", \"Enable free camera\", EUserInterfaceActionType::ToggleButton, FInputChord())"
  },
  {
    "label": "UI_COMMAND()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UI_COMMAND(LoadFromVLog, \"Load\", \"Load external vlogs\", EUserInterfaceActionType::Button, FInputChord())"
  },
  {
    "label": "UI_COMMAND()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UI_COMMAND(SaveToVLog, \"Save\", \"Save selected data to vlog file\", EUserInterfaceActionType::Button, FInputChord())"
  },
  {
    "label": "UI_COMMAND()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UI_COMMAND(SaveAllToVLog, \"SaveAll\", \"Save all to vlog file\", EUserInterfaceActionType::Button, FInputChord())"
  },
  {
    "label": "UI_COMMAND()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UI_COMMAND(ToggleGraphs, \"ToggleGraphs\", \"Toggle graphs visualization on/off\", EUserInterfaceActionType::ToggleButton, FInputChord())"
  },
  {
    "label": "UI_COMMAND()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UI_COMMAND(ResetData, \"Clear\", \"Clear all data\", EUserInterfaceActionType::Button, FInputChord())"
  },
  {
    "label": "UI_COMMAND()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UI_COMMAND(Refresh, \"Refresh\", \"Refresh UI from memory buffer\", EUserInterfaceActionType::Button, FInputChord())"
  },
  {
    "label": "UI_COMMAND()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UI_COMMAND(HideEmpty, \"HideEmpty\", \"Hide logs without text information\", EUserInterfaceActionType::ToggleButton, FInputChord())"
  }
]