[
  {
    "label": "SGraphPanel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SGraphPanel"
  },
  {
    "label": "SToolTip",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SToolTip"
  },
  {
    "label": "UAIGraphNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAIGraphNode"
  },
  {
    "label": "FDragAIGraphNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDragAIGraphNode"
  },
  {
    "label": "AIGRAPH_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AIGRAPH_API"
  },
  {
    "label": "AIGRAPH_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AIGRAPH_API"
  },
  {
    "label": "New()",
    "kind": "Method",
    "detail": "Function (TSharedRef<FDragAIGraphNode>)",
    "insertText": "New(const TSharedRef<SGraphPanel>& InGraphPanel, const TSharedRef<SGraphNode>& InDraggedNode)"
  },
  {
    "label": "New()",
    "kind": "Method",
    "detail": "Function (TSharedRef<FDragAIGraphNode>)",
    "insertText": "New(const TSharedRef<SGraphPanel>& InGraphPanel, const TArray< TSharedRef<SGraphNode> >& InDraggedNodes)"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct(const FArguments& InArgs, UAIGraphNode* InNode)"
  },
  {
    "label": "OnMouseDown()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnMouseDown(const FGeometry& SenderGeometry, const FPointerEvent& MouseEvent)"
  },
  {
    "label": "AddSubNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddSubNode(TSharedPtr<SGraphNode> SubNodeWidget)"
  },
  {
    "label": "GetSubNodeUnderCursor()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<SGraphNode>)",
    "insertText": "GetSubNodeUnderCursor(const FGeometry& WidgetGeometry, const FPointerEvent& MouseEvent)"
  },
  {
    "label": "SetDragMarker()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDragMarker(bool bEnabled)"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct(const FArguments& InArgs, UEdGraphPin* InPin)"
  }
]