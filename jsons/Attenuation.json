[
  {
    "label": "FGlobalFocusSettings",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGlobalFocusSettings"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "FBaseAttenuationSettings",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBaseAttenuationSettings"
  },
  {
    "label": "EAttenuationShape",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EAttenuationShape"
  },
  {
    "label": "AttenuationShapeDetails",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "AttenuationShapeDetails"
  },
  {
    "label": "UENUM()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / Object . h \" # include \" UObject / Class . h \" # include \" Engine / EngineTypes . h \" # include \" Curves / CurveFloat . h \" # include \" Attenuation . generated . h \" struct FGlobalFocusSettings ;)",
    "insertText": "UENUM(BlueprintType)"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (Continues,Silent,Hold,} ;)",
    "insertText": "USTRUCT(BlueprintType)"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() ENGINE_API virtual ~FBaseAttenuationSettings()"
  },
  {
    "label": "FBaseAttenuationSettings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FBaseAttenuationSettings()"
  },
  {
    "label": "CollectAttenuationShapesForVisualization()",
    "kind": "Method",
    "detail": "Function (struct AttenuationShapeDetails { FVector Extents ; float Falloff ; float ConeOffset ; float ConeSphereRadius ; float ConeSphereFalloff ; } ; void)",
    "insertText": "CollectAttenuationShapesForVisualization(TMultiMap<EAttenuationShape::Type, AttenuationShapeDetails>& ShapeDetailsMap)"
  },
  {
    "label": "GetMaxDimension()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetMaxDimension()"
  },
  {
    "label": "GetMaxFalloffDistance()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetMaxFalloffDistance()"
  },
  {
    "label": "Evaluate()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "Evaluate(const FTransform& Origin, FVector Location, float DistanceScale = 1.f)"
  },
  {
    "label": "AttenuationEval()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "AttenuationEval(float Distance, float Falloff, float DistanceScale = 1.f)"
  },
  {
    "label": "AttenuationEvalBox()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "AttenuationEvalBox(const FTransform& Origin, FVector Location, float DistanceScale = 1.f)"
  },
  {
    "label": "AttenuationEvalCapsule()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "AttenuationEvalCapsule(const FTransform& Origin, FVector Location, float DistanceScale = 1.f)"
  },
  {
    "label": "AttenuationEvalCone()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "AttenuationEvalCone(const FTransform& Origin, FVector Location, float DistanceScale = 1.f)"
  }
]