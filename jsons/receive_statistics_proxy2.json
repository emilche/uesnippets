[
  {
    "label": "Clock",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Clock"
  },
  {
    "label": "CodecSpecificInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "CodecSpecificInfo"
  },
  {
    "label": "VideoFrameMetaData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VideoFrameMetaData"
  },
  {
    "label": "ReceiveStatisticsProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ReceiveStatisticsProxy"
  },
  {
    "label": "QpCounters",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "QpCounters"
  },
  {
    "label": "ContentSpecificStats",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ContentSpecificStats"
  },
  {
    "label": "ReceiveStatisticsProxy()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "ReceiveStatisticsProxy(uint32_t remote_ssrc,\n                         Clock* clock,\n                         TaskQueueBase* worker_thread)"
  },
  {
    "label": "OnDecodedFrame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDecodedFrame(const VideoFrame& frame,\n                      absl::optional<uint8_t> qp,\n                      TimeDelta decode_time,\n                      VideoContentType content_type)"
  },
  {
    "label": "OnDecodedFrame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDecodedFrame(const VideoFrameMetaData& frame_meta,\n                      absl::optional<uint8_t> qp,\n                      TimeDelta decode_time,\n                      TimeDelta processing_delay,\n                      TimeDelta assembly_time,\n                      VideoContentType content_type)"
  },
  {
    "label": "OnSyncOffsetUpdated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSyncOffsetUpdated(int64_t video_playout_ntp_ms,\n                           int64_t sync_offset_ms,\n                           double estimated_freq_khz)"
  },
  {
    "label": "OnRenderedFrame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnRenderedFrame(const VideoFrameMetaData& frame_meta)"
  },
  {
    "label": "OnIncomingPayloadType()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnIncomingPayloadType(int payload_type)"
  },
  {
    "label": "OnDecoderInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDecoderInfo(const VideoDecoder::DecoderInfo& decoder_info)"
  },
  {
    "label": "OnPreDecode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPreDecode(VideoCodecType codec_type, int qp)"
  },
  {
    "label": "OnUniqueFramesCounted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnUniqueFramesCounted(int num_unique_frames)"
  },
  {
    "label": "OnStreamInactive()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnStreamInactive()"
  },
  {
    "label": "OnRttUpdate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnRttUpdate(int64_t avg_rtt_ms)"
  },
  {
    "label": "DecoderThreadStarting()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DecoderThreadStarting()"
  },
  {
    "label": "DecoderThreadStopped()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DecoderThreadStopped()"
  },
  {
    "label": "UpdateHistograms()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateHistograms(absl::optional<int> fraction_lost,\n                        const StreamDataCounters& rtp_stats,\n                        const StreamDataCounters* rtx_stats)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Add(const ContentSpecificStats& other)"
  },
  {
    "label": "QualitySample()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "QualitySample(Timestamp now)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (last_sample_time_)",
    "insertText": "RTC_GUARDED_BY(main_thread_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (fps_threshold_)",
    "insertText": "RTC_GUARDED_BY(main_thread_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (qp_threshold_)",
    "insertText": "RTC_GUARDED_BY(main_thread_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (variance_threshold_)",
    "insertText": "RTC_GUARDED_BY(main_thread_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (qp_sample_)",
    "insertText": "RTC_GUARDED_BY(main_thread_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (num_bad_states_)",
    "insertText": "RTC_GUARDED_BY(main_thread_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (num_certain_states_)",
    "insertText": "RTC_GUARDED_BY(main_thread_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (stats_)",
    "insertText": "RTC_GUARDED_BY(main_thread_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (decode_fps_estimator_)",
    "insertText": "RTC_GUARDED_BY(main_thread_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (renders_fps_estimator_)",
    "insertText": "RTC_GUARDED_BY(main_thread_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (render_fps_tracker_)",
    "insertText": "RTC_GUARDED_BY(main_thread_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (render_pixel_tracker_)",
    "insertText": "RTC_GUARDED_BY(main_thread_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (sync_offset_counter_)",
    "insertText": "RTC_GUARDED_BY(main_thread_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (decode_time_counter_)",
    "insertText": "RTC_GUARDED_BY(main_thread_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (jitter_buffer_delay_counter_)",
    "insertText": "RTC_GUARDED_BY(main_thread_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (target_delay_counter_)",
    "insertText": "RTC_GUARDED_BY(main_thread_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (current_delay_counter_)",
    "insertText": "RTC_GUARDED_BY(main_thread_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (delay_counter_)",
    "insertText": "RTC_GUARDED_BY(main_thread_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (video_quality_observer_)",
    "insertText": "RTC_GUARDED_BY(main_thread_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (interframe_delay_max_moving_)",
    "insertText": "RTC_GUARDED_BY(main_thread_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (content_specific_stats_)",
    "insertText": "RTC_GUARDED_BY(main_thread_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (freq_offset_counter_)",
    "insertText": "RTC_GUARDED_BY(main_thread_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (qp_counters_)",
    "insertText": "RTC_GUARDED_BY(main_thread_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (frame_window_)",
    "insertText": "RTC_GUARDED_BY(main_thread_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (last_content_type_)",
    "insertText": "RTC_GUARDED_BY(&main_thread_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (last_codec_type_)",
    "insertText": "RTC_GUARDED_BY(main_thread_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (first_frame_received_time_ms_)",
    "insertText": "RTC_GUARDED_BY(main_thread_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (first_decoded_frame_time_ms_)",
    "insertText": "RTC_GUARDED_BY(main_thread_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (last_decoded_frame_time_ms_)",
    "insertText": "RTC_GUARDED_BY(main_thread_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (num_delayed_frames_rendered_)",
    "insertText": "RTC_GUARDED_BY(main_thread_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (sum_missed_render_deadline_ms_)",
    "insertText": "RTC_GUARDED_BY(main_thread_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (timing_frame_info_counter_)",
    "insertText": "RTC_GUARDED_BY(main_thread_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (num_unique_frames_)",
    "insertText": "RTC_GUARDED_BY(main_thread_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (last_estimated_playout_ntp_timestamp_ms_)",
    "insertText": "RTC_GUARDED_BY(main_thread_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (last_estimated_playout_time_ms_)",
    "insertText": "RTC_GUARDED_BY(main_thread_)"
  }
]