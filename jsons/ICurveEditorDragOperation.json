[
  {
    "label": "FCurveEditor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCurveEditor"
  },
  {
    "label": "FSlateWindowElementList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateWindowElementList"
  },
  {
    "label": "FCurvePointHandle",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCurvePointHandle"
  },
  {
    "label": "FGeometry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGeometry"
  },
  {
    "label": "FPointerEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPointerEvent"
  },
  {
    "label": "ICurveEditorDragOperation",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ICurveEditorDragOperation"
  },
  {
    "label": "ICurveEditorKeyDragOperation",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ICurveEditorKeyDragOperation"
  },
  {
    "label": "FCurveEditorDelayedDrag",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCurveEditorDelayedDrag"
  },
  {
    "label": "ICurveEditorDragOperation()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CurveEditorSnapMetrics . h \" # include \" CurveEditorTypes . h \" # include \" Framework / DelayedDrag . h \" # include \" HAL / Platform . h \" # include \" Input / Reply . h \" # include \" InputCoreTypes . h \" # include \" Math / Vector2D . h \" # include \" Misc / OptionalFwd . h \" # include \" ScopedTransaction . h \" # include \" Templates / UniquePtr . h \" class FCurveEditor ; class FSlateWindowElementList ; struct FCurvePointHandle ; struct FGeometry ; struct FPointerEvent ; class ICurveEditorDragOperation { public :)",
    "insertText": "ICurveEditorDragOperation()"
  },
  {
    "label": "BeginDrag()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "BeginDrag(FVector2D InitialPosition, FVector2D CurrentPosition, const FPointerEvent& MouseEvent)"
  },
  {
    "label": "Drag()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Drag(FVector2D InitialPosition, FVector2D CurrentPosition, const FPointerEvent& MouseEvent)"
  },
  {
    "label": "MouseWheel()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "MouseWheel(FVector2D InitialPosition, FVector2D CurrentPosition, const FPointerEvent& MouseEvent)"
  },
  {
    "label": "EndDrag()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EndDrag(FVector2D InitialPosition, FVector2D CurrentPosition, const FPointerEvent& MouseEvent)"
  },
  {
    "label": "Paint()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Paint(const FGeometry& AllottedGeometry, FSlateWindowElementList& OutDrawElements, int32 PaintOnLayerId)"
  },
  {
    "label": "CancelDrag()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CancelDrag()"
  },
  {
    "label": "OnBeginDrag()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "OnBeginDrag(FVector2D InitialPosition, FVector2D CurrentPosition, const FPointerEvent& MouseEvent)"
  },
  {
    "label": "OnDrag()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "OnDrag(FVector2D InitialPosition, FVector2D CurrentPosition, const FPointerEvent& MouseEvent)"
  },
  {
    "label": "OnMouseWheel()",
    "kind": "Method",
    "detail": "Function (} FReply)",
    "insertText": "OnMouseWheel(FVector2D InitialPosition, FVector2D CurrentPosition, const FPointerEvent& MouseEvent)"
  },
  {
    "label": "OnEndDrag()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "OnEndDrag(FVector2D InitialPosition, FVector2D CurrentPosition, const FPointerEvent& MouseEvent)"
  },
  {
    "label": "OnPaint()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "OnPaint(const FGeometry& AllottedGeometry, FSlateWindowElementList& OutDrawElements, int32 PaintOnLayerId)"
  },
  {
    "label": "OnCancelDrag()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "OnCancelDrag()"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (} protected : } ; class ICurveEditorKeyDragOperation : public ICurveEditorDragOperation { public : void)",
    "insertText": "Initialize(FCurveEditor* InCurveEditor, const TOptional<FCurvePointHandle>& CardinalPoint)"
  },
  {
    "label": "OnInitialize()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "OnInitialize(FCurveEditor* InCurveEditor, const TOptional<FCurvePointHandle>& CardinalPoint)"
  },
  {
    "label": "Cancel()",
    "kind": "Method",
    "detail": "Function (Transaction ->)",
    "insertText": "Cancel()"
  },
  {
    "label": "FCurveEditorDelayedDrag()",
    "kind": "Method",
    "detail": "Function (} } TUniquePtr<FScopedTransaction> Transaction ; } ; struct FCurveEditorDelayedDrag : FDelayedDrag { TUniquePtr<ICurveEditorDragOperation> DragImpl ;)",
    "insertText": "FCurveEditorDelayedDrag(FVector2D InInitialPosition, FKey InEffectiveKey) : FDelayedDrag(InInitialPosition, InEffectiveKey)"
  },
  {
    "label": "SetTriggerScaleFactor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTriggerScaleFactor(0.1f)"
  }
]