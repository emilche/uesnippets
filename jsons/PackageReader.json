[
  {
    "label": "FAssetData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAssetData"
  },
  {
    "label": "FAssetPackageData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAssetPackageData"
  },
  {
    "label": "FLinkerTables",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLinkerTables"
  },
  {
    "label": "FPackageDependencyData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPackageDependencyData"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FGatherableTextData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGatherableTextData"
  },
  {
    "label": "FObjectFullNameAndThumbnail",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FObjectFullNameAndThumbnail"
  },
  {
    "label": "FPackageReader",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPackageReader"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FObjectData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FObjectData"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "name",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "name"
  },
  {
    "label": "FPackageReader()",
    "kind": "Method",
    "detail": "Function (ASSETREGISTRY_API)",
    "insertText": "FPackageReader()"
  },
  {
    "label": "OpenPackageFile()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "OpenPackageFile(FStringView PackageFilename, EOpenPackageResult* OutErrorCode = nullptr)"
  },
  {
    "label": "OpenPackageFile()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "OpenPackageFile(FStringView LongPackageName, FStringView PackageFilename,\n\t\tEOpenPackageResult* OutErrorCode = nullptr)"
  },
  {
    "label": "OpenPackageFile()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "OpenPackageFile(FArchive* Loader, EOpenPackageResult* OutErrorCode = nullptr)"
  },
  {
    "label": "OpenPackageFile()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "OpenPackageFile(TUniquePtr<FArchive> Loader, EOpenPackageResult* OutErrorCode = nullptr)"
  },
  {
    "label": "OpenPackageFile()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "OpenPackageFile(EOpenPackageResult& OutErrorCode)"
  },
  {
    "label": "GetNames()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetNames(TArray<FName>& OutNames)"
  },
  {
    "label": "GetImports()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetImports(TArray<FObjectImport>& OutImportMap)"
  },
  {
    "label": "GetExports()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetExports(TArray<FObjectExport>& OutExportMap)"
  },
  {
    "label": "GetDependsMap()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetDependsMap(TArray<TArray<FPackageIndex>>& OutDependsMap)"
  },
  {
    "label": "GetSoftPackageReferenceList()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetSoftPackageReferenceList(TArray<FName>& OutSoftPackageReferenceList)"
  },
  {
    "label": "GetSoftObjectPaths()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetSoftObjectPaths(TArray<FSoftObjectPath>& OutSoftObjectPaths)"
  },
  {
    "label": "ReadEditorOnlyFlags()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ReadEditorOnlyFlags(TBitArray<>& OutImportUsedInGame, TBitArray<>& OutSoftPackageUsedInGame)"
  },
  {
    "label": "GetGatherableTextData()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetGatherableTextData(TArray<FGatherableTextData>& OutText)"
  },
  {
    "label": "GetThumbnails()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetThumbnails(TArray<FObjectFullNameAndThumbnail>& OutThumbnails)"
  },
  {
    "label": "ReadAssetRegistryData()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ReadAssetRegistryData(TArray<FAssetData*>& AssetDataList, bool& bOutIsCookedWithoutAssetData)"
  },
  {
    "label": "ReadImportedClasses()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ReadImportedClasses(TArray<FName>& OutClassNames)"
  },
  {
    "label": "ReadLinkerObjects()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ReadLinkerObjects(TMap<FSoftObjectPath, FObjectData>& OutExports,\n\t\tTMap<FSoftObjectPath, FObjectData>& OutImports, TMap<FName, bool>& OutSoftPackageReferences)"
  },
  {
    "label": "ReadDependencyData()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ReadDependencyData(FPackageDependencyData& OutDependencyData, EReadOptions Options)"
  },
  {
    "label": "ReadAssetDataFromThumbnailCache()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ReadAssetDataFromThumbnailCache(TArray<FAssetData*>& AssetDataList)"
  },
  {
    "label": "ReadAssetRegistryDataFromCookedPackage()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ReadAssetRegistryDataFromCookedPackage(TArray<FAssetData*>& AssetDataList, bool& bOutIsCookedWithoutAssetData)"
  },
  {
    "label": "StartSerializeSection()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "StartSerializeSection(int64 Offset)"
  },
  {
    "label": "SerializeNameMap()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SerializeNameMap()"
  },
  {
    "label": "SerializeImportMap()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SerializeImportMap()"
  },
  {
    "label": "SerializeExportMap()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SerializeExportMap()"
  },
  {
    "label": "SerializeDependsMap()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SerializeDependsMap()"
  },
  {
    "label": "SerializeImportedClasses()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SerializeImportedClasses(const TArray<FObjectImport>& InImportMap, TArray<FName>& OutClassNames)"
  },
  {
    "label": "SerializeSoftPackageReferenceList()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SerializeSoftPackageReferenceList()"
  },
  {
    "label": "SerializeSoftObjectPathMap()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SerializeSoftObjectPathMap()"
  },
  {
    "label": "SerializeGatherableTextDataMap()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SerializeGatherableTextDataMap()"
  },
  {
    "label": "SerializeThumbnailMap()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SerializeThumbnailMap()"
  },
  {
    "label": "SerializeEditorOnlyFlags()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SerializeEditorOnlyFlags(TBitArray<>& OutImportUsedInGame, TBitArray<>& OutSoftPackageUsedInGame)"
  },
  {
    "label": "SerializeSearchableNamesMap()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SerializeSearchableNamesMap(FLinkerTables& OutSearchableNames)"
  },
  {
    "label": "SerializeAssetRegistryDependencyData()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SerializeAssetRegistryDependencyData(TBitArray<>& OutImportUsedInGame, TBitArray<>& OutSoftPackageUsedInGame,\n\t\tTArray<TPair<FName, UE::AssetRegistry::EExtraDependencyFlags>>& OutExtraPackageDependencies)"
  },
  {
    "label": "SerializePackageTrailer()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SerializePackageTrailer(FAssetPackageData& PackageData)"
  },
  {
    "label": "ApplyRelocationToImportMapAndSoftPackageReferenceList()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyRelocationToImportMapAndSoftPackageReferenceList(FStringView LoadedPackageName,\n\t\tTArray<FName>& InOutSoftPackageReferenceList, \n\t\tTArray<TPair<FName, UE::AssetRegistry::EExtraDependencyFlags>>& InOutExtraPackageDependencies)"
  },
  {
    "label": "ConvertLinkerTableToPaths()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConvertLinkerTableToPaths(FName PackageName, TArray<FObjectExport>& ExportMap,\n\t\tTArray<FObjectImport>& ImportMap, TArray<FSoftObjectPath>& OutExports, TArray<FSoftObjectPath>& OutImports)"
  }
]