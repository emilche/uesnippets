[
  {
    "label": "IsOk()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_AUDIO_CODING_CODECS_ISAC_AUDIO_DECODER_ISAC_T_IMPL_H_ # define MODULES_AUDIO_CODING_CODECS_ISAC_AUDIO_DECODER_ISAC_T_IMPL_H_ # include \" modules / audio_coding / codecs / isac / audio_decoder_isac_t . h \" # include \" rtc_base / checks . h \" namespace webrtc { template<T> bool AudioDecoderIsacT<T>::)",
    "insertText": "IsOk()"
  },
  {
    "label": "AudioDecoderIsacT()",
    "kind": "Method",
    "detail": "Function (} template<T> AudioDecoderIsacT<T)",
    "insertText": "AudioDecoderIsacT(const Config& config) : sample_rate_hz_(config.sample_rate_hz)"
  },
  {
    "label": "RTC_CHECK()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RTC_CHECK(config.IsOk())"
  },
  {
    "label": "RTC_CHECK_EQ()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RTC_CHECK_EQ(0, T::Create(&isac_state_))"
  },
  {
    "label": "DecoderInit()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DecoderInit(isac_state_)"
  },
  {
    "label": "RTC_CHECK_EQ()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RTC_CHECK_EQ(0, T::SetDecSampRate(isac_state_, sample_rate_hz_))"
  },
  {
    "label": "AudioDecoderIsacT()",
    "kind": "Method",
    "detail": "Function (} template<T> AudioDecoderIsacT<T>::~)",
    "insertText": "AudioDecoderIsacT()"
  },
  {
    "label": "RTC_CHECK_EQ()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RTC_CHECK_EQ(0, T::Free(isac_state_))"
  },
  {
    "label": "DecodeInternal()",
    "kind": "Method",
    "detail": "Function (} template<T> int AudioDecoderIsacT<T)",
    "insertText": "DecodeInternal(const uint8_t* encoded, size_t encoded_len, int sample_rate_hz, int16_t* decoded, SpeechType* speech_type)"
  },
  {
    "label": "RTC_CHECK_EQ()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RTC_CHECK_EQ(sample_rate_hz_, sample_rate_hz)"
  },
  {
    "label": "DecodeInternal()",
    "kind": "Method",
    "detail": "Function (int16_t temp_type = 1 ; int ret =)",
    "insertText": "DecodeInternal(isac_state_, encoded, encoded_len, decoded, &temp_type)"
  },
  {
    "label": "ConvertSpeechType()",
    "kind": "Method",
    "detail": "Function (* speech_type =)",
    "insertText": "ConvertSpeechType(temp_type)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (} template<T> void AudioDecoderIsacT<T)",
    "insertText": "Reset()"
  },
  {
    "label": "ErrorCode()",
    "kind": "Method",
    "detail": "Function (} template<T> int AudioDecoderIsacT<T)",
    "insertText": "ErrorCode()"
  },
  {
    "label": "SampleRateHz()",
    "kind": "Method",
    "detail": "Function (} template<T> int AudioDecoderIsacT<T)",
    "insertText": "SampleRateHz()"
  }
]