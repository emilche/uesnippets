[
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "ITargetPlatform",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITargetPlatform"
  },
  {
    "label": "UActorComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UActorComponent"
  },
  {
    "label": "UEdGraph",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEdGraph"
  },
  {
    "label": "FKismetCompilerContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FKismetCompilerContext"
  },
  {
    "label": "UInheritableComponentHandler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UInheritableComponentHandler"
  },
  {
    "label": "UBlueprintExtension",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBlueprintExtension"
  },
  {
    "label": "UBlueprintGeneratedClass",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBlueprintGeneratedClass"
  },
  {
    "label": "FBlueprintActionDatabaseRegistrar",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBlueprintActionDatabaseRegistrar"
  },
  {
    "label": "FBPComponentClassOverride",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBPComponentClassOverride"
  },
  {
    "label": "FDiffResults",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDiffResults"
  },
  {
    "label": "EBlueprintStatus",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EBlueprintStatus"
  },
  {
    "label": "EBlueprintType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EBlueprintType"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "UDEPRECATED_Breakpoint",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UDEPRECATED_Breakpoint"
  },
  {
    "label": "FBlueprintMacroCosmeticInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBlueprintMacroCosmeticInfo"
  },
  {
    "label": "FKismetCompilerOptions",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FKismetCompilerOptions"
  },
  {
    "label": "FBPVariableMetaDataEntry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBPVariableMetaDataEntry"
  },
  {
    "label": "FBPVariableDescription",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBPVariableDescription"
  },
  {
    "label": "FEdGraphPinType",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FEdGraphPinType"
  },
  {
    "label": "FBPInterfaceDescription",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBPInterfaceDescription"
  },
  {
    "label": "UInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UInterface"
  },
  {
    "label": "FEditedDocumentInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FEditedDocumentInfo"
  },
  {
    "label": "TStructOpsTypeTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TStructOpsTypeTraits"
  },
  {
    "label": "FBPEditorBookmarkNode",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBPEditorBookmarkNode"
  },
  {
    "label": "UBlueprint",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBlueprint"
  },
  {
    "label": "USimpleConstructionScript",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USimpleConstructionScript"
  },
  {
    "label": "UTimelineTemplate",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UTimelineTemplate"
  },
  {
    "label": "UEdGraphPin_Deprecated",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEdGraphPin_Deprecated"
  },
  {
    "label": "PREDICATE_CLASS",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PREDICATE_CLASS"
  },
  {
    "label": "UWorld",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UWorld"
  },
  {
    "label": "UThumbnailInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UThumbnailInfo"
  },
  {
    "label": "FDataValidationContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDataValidationContext"
  },
  {
    "label": "TFieldType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TFieldType"
  },
  {
    "label": "UENUM()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / Object . h \" # include \" Misc / Guid . h \" # include \" UObject / Class . h \" # include \" Templates / SubclassOf . h \" # include \" Engine / EngineTypes . h \" # include \" EdGraph / EdGraphPin . h \" # include \" Engine / BlueprintCore . h \" # include \" Blueprint / BlueprintPropertyGuidProvider . h \" # include \" UObject / SoftObjectPath . h \" # include \" Blueprint / BlueprintSupport . h \" # if WITH_EDITOR # include \" EngineLogs . h \" # include \" Kismet2 / CompilerResultsLog . h \" # endif # include \" Blueprint . generated . h \" enum class EBlueprintCompileOptions ; class ITargetPlatform ; class UActorComponent ; class UEdGraph ; class FKismetCompilerContext ; class UInheritableComponentHandler ; class UBlueprintExtension ; class UBlueprintGeneratedClass ; class FBlueprintActionDatabaseRegistrar ; struct FBPComponentClassOverride ; struct FDiffResults ;)",
    "insertText": "UENUM()"
  },
  {
    "label": "UMETA()",
    "kind": "Method",
    "detail": "Function (BPTYPE_Normal)",
    "insertText": "UMETA(DisplayName=\"Blueprint Class\"), BPTYPE_Const UMETA(DisplayName=\"Const Blueprint Class\"), BPTYPE_MacroLibrary UMETA(DisplayName=\"Blueprint Macro Library\"), BPTYPE_Interface UMETA(DisplayName=\"Blueprint Interface\"), BPTYPE_LevelScript UMETA(DisplayName=\"Level Blueprint\"), BPTYPE_FunctionLibrary UMETA(DisplayName=\"Blueprint Function Library\")"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (namespace EKismetCompileType { enum Type { SkeletonOnly,Full,StubAfterFailure,BytecodeOnly,} ; } ;)",
    "insertText": "UCLASS(deprecated)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY()"
  },
  {
    "label": "UMETA()",
    "kind": "Method",
    "detail": "Function (Default)",
    "insertText": "UMETA(DisplayName=\"Use Default\", ToolTip=\"Use the default setting.\"), Development UMETA(ToolTip=\"Always compile in development mode (even when cooking).\"), FinalRelease UMETA(ToolTip=\"Always compile in final release mode.\")"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "USTRUCT()"
  },
  {
    "label": "FBlueprintMacroCosmeticInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FBlueprintMacroCosmeticInfo() : bContainsLatentNodes(false)"
  },
  {
    "label": "DoesRequireBytecodeGeneration()",
    "kind": "Method",
    "detail": "Function (} } ; struct FKismetCompilerOptions { public : EKismetCompileType::Type CompileType ; bool bSaveIntermediateProducts ; bool bRegenerateSkelton ; bool bIsDuplicationInstigated ; bool bReinstanceAndStubOnFailure ; bool bSkipDefaultObjectValidation ; bool bSkipFiBSearchMetaUpdate ; bool bUseDeltaSerializationDuringReinstancing ; bool bSkipNewVariableDefaultsDetection ; TSharedPtr<FString> OutHeaderSourceCode ; TSharedPtr<FString> OutCppSourceCode ; bool)",
    "insertText": "DoesRequireBytecodeGeneration()"
  },
  {
    "label": "FKismetCompilerOptions()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FKismetCompilerOptions() : CompileType(EKismetCompileType::Full) , bSaveIntermediateProducts(false) , bRegenerateSkelton(true) , bIsDuplicationInstigated(false) , bReinstanceAndStubOnFailure(true) , bSkipDefaultObjectValidation(false) , bSkipFiBSearchMetaUpdate(false)"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() UPROPERTY(EditAnywhere, Category=BPVariableMetaDataEntry)"
  },
  {
    "label": "FBPVariableMetaDataEntry()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FBPVariableMetaDataEntry()"
  },
  {
    "label": "FBPVariableMetaDataEntry()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FBPVariableMetaDataEntry(const FName InKey, FString InValue) : DataKey(InKey) , DataValue(MoveTemp(InValue))"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() UPROPERTY(EditAnywhere, Category=BPVariableDescription)"
  },
  {
    "label": "FBPVariableDescription()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FBPVariableDescription()"
  },
  {
    "label": "SetMetaData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetMetaData(FName Key, FString Value)"
  },
  {
    "label": "GetMetaData()",
    "kind": "Method",
    "detail": "Function (const FString&)",
    "insertText": "GetMetaData(FName Key)"
  },
  {
    "label": "RemoveMetaData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveMetaData(FName Key)"
  },
  {
    "label": "FindMetaDataEntryIndexForKey()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "FindMetaDataEntryIndexForKey(FName Key)"
  },
  {
    "label": "HasMetaData()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasMetaData(FName Key)"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() UPROPERTY()"
  },
  {
    "label": "FBPInterfaceDescription()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FBPInterfaceDescription() : Interface(nullptr)"
  },
  {
    "label": "FEditedDocumentInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FEditedDocumentInfo() : SavedViewOffset(0.0f, 0.0f) , SavedZoomAmount(-1.0f) , EditedObject_DEPRECATED(nullptr)"
  },
  {
    "label": "FEditedDocumentInfo()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FEditedDocumentInfo(UObject* InEditedObject) : EditedObjectPath(InEditedObject) , SavedViewOffset(0.0f, 0.0f) , SavedZoomAmount(-1.0f) , EditedObject_DEPRECATED(nullptr)"
  },
  {
    "label": "FEditedDocumentInfo()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FEditedDocumentInfo(UObject* InEditedObject, FVector2D& InSavedViewOffset, float InSavedZoomAmount) : EditedObjectPath(InEditedObject) , SavedViewOffset(InSavedViewOffset) , SavedZoomAmount(InSavedZoomAmount) , EditedObject_DEPRECATED(nullptr)"
  },
  {
    "label": "PostSerialize()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "PostSerialize(const FArchive& Ar)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (EditedObjectPath = EditedObject_DEPRECATED ; EditedObject_DEPRECATED = nullptr ; } } bool)",
    "insertText": "operator(const FEditedDocumentInfo& LHS, const FEditedDocumentInfo& RHS)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "operator(const FBPEditorBookmarkNode& LHS, const FBPEditorBookmarkNode& RHS)"
  },
  {
    "label": "ENUM_CLASS_FLAGS()",
    "kind": "Method",
    "detail": "Function (No,Yes,Inherit,} ; # if WITH_EDITOR enum class EGetObjectOrWorldBeingDebuggedFlags { None = 0,IgnorePendingKill = 1<<0 } ;)",
    "insertText": "ENUM_CLASS_FLAGS(EGetObjectOrWorldBeingDebuggedFlags)"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# endif)",
    "insertText": "UCLASS(config=Engine, MinimalAPI)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() UPROPERTY(meta=(NoResetToDefault))"
  },
  {
    "label": "ShouldCookPropertyGuids()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldCookPropertyGuids()"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITORONLY_DATA)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_OneParam(FOnExtensionAdded, UBlueprintExtension*)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_OneParam(FOnExtensionRemoved, UBlueprintExtension*)"
  },
  {
    "label": "DECLARE_EVENT_OneParam()",
    "kind": "Method",
    "detail": "Function (FOnExtensionAdded OnExtensionAdded ; FOnExtensionRemoved OnExtensionRemoved ; # endif public : # if WITH_EDITOR)",
    "insertText": "DECLARE_EVENT_OneParam(UBlueprint, FChangedEvent, class UBlueprint*)"
  },
  {
    "label": "OnChanged()",
    "kind": "Method",
    "detail": "Function (FChangedEvent&)",
    "insertText": "OnChanged()"
  },
  {
    "label": "Broadcast()",
    "kind": "Method",
    "detail": "Function (ChangedEvent .)",
    "insertText": "Broadcast(this)"
  },
  {
    "label": "DECLARE_EVENT_OneParam()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "DECLARE_EVENT_OneParam(UBlueprint, FCompiledEvent, class UBlueprint*)"
  },
  {
    "label": "OnCompiled()",
    "kind": "Method",
    "detail": "Function (FCompiledEvent&)",
    "insertText": "OnCompiled()"
  },
  {
    "label": "GetExtensions()",
    "kind": "Method",
    "detail": "Function (} TArrayView<const TObjectPtr<UBlueprintExtension>>)",
    "insertText": "GetExtensions()"
  },
  {
    "label": "AddExtension()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "AddExtension(const TObjectPtr<UBlueprintExtension>& InExtension)"
  },
  {
    "label": "RemoveExtension()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "RemoveExtension(const TObjectPtr<UBlueprintExtension>& InExtension)"
  },
  {
    "label": "RemoveAllExtension()",
    "kind": "Method",
    "detail": "Function (PRAGMA_DISABLE_DEPRECATION_WARNINGS template<class PREDICATE_CLASS> int32)",
    "insertText": "RemoveAllExtension(const PREDICATE_CLASS& Predicate)"
  },
  {
    "label": "this()",
    "kind": "Method",
    "detail": "Function (auto BroadcastRemovePredicate = [& Predicate,)",
    "insertText": "this(UBlueprintExtension* InExtension)"
  },
  {
    "label": "Invoke()",
    "kind": "Method",
    "detail": "Function (bool NotMatch =)",
    "insertText": "Invoke(Predicate, InExtension)"
  },
  {
    "label": "Broadcast()",
    "kind": "Method",
    "detail": "Function (OnExtensionRemoved .)",
    "insertText": "Broadcast(InExtension)"
  },
  {
    "label": "RemoveAll()",
    "kind": "Method",
    "detail": "Function (} return ! NotMatch ; } ; return Extensions .)",
    "insertText": "RemoveAll(BroadcastRemovePredicate)"
  },
  {
    "label": "IsValidForBytecodeOnlyRecompile()",
    "kind": "Method",
    "detail": "Function (} PRAGMA_ENABLE_DEPRECATION_WARNINGS # endif bool)",
    "insertText": "IsValidForBytecodeOnlyRecompile()"
  },
  {
    "label": "OnSetObjectBeingDebugged()",
    "kind": "Method",
    "detail": "Function (FOnSetObjectBeingDebugged&)",
    "insertText": "OnSetObjectBeingDebugged()"
  },
  {
    "label": "IsUpToDate()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsUpToDate()"
  },
  {
    "label": "RequiresForceLoadMembers()",
    "kind": "Method",
    "detail": "Function (} # endif # if WITH_EDITOR bool)",
    "insertText": "RequiresForceLoadMembers(UObject* InObject)"
  },
  {
    "label": "ForceLoadMembers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ForceLoadMembers(UObject* InObject)"
  },
  {
    "label": "ForceLoadMembers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ForceLoadMembers(UObject* InObject, const UBlueprint* InBlueprint)"
  },
  {
    "label": "ForceLoadMetaData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ForceLoadMetaData(UObject* InObject)"
  },
  {
    "label": "ValidateGeneratedClass()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ValidateGeneratedClass(const UClass* InClass)"
  },
  {
    "label": "FindTemplateByName()",
    "kind": "Method",
    "detail": "Function (UActorComponent*)",
    "insertText": "FindTemplateByName(const FName& TemplateName)"
  },
  {
    "label": "FindTimelineTemplateByVariableName()",
    "kind": "Method",
    "detail": "Function (class UTimelineTemplate*)",
    "insertText": "FindTimelineTemplateByVariableName(const FName& TimelineName)"
  },
  {
    "label": "GetBlueprintClassNames()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetBlueprintClassNames(FName& GeneratedClassName, FName& SkeletonClassName, FName NameOverride = NAME_None)"
  },
  {
    "label": "NameToUse()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "NameToUse(NameOverride != NAME_None) ? NameOverride : GetFName()"
  },
  {
    "label": "Printf()",
    "kind": "Method",
    "detail": "Function (const FString GeneratedClassNameString =)",
    "insertText": "Printf(TEXT(\"%s_C\"), *NameToUse.ToString())"
  },
  {
    "label": "FName()",
    "kind": "Method",
    "detail": "Function (GeneratedClassName =)",
    "insertText": "FName(*GeneratedClassNameString)"
  },
  {
    "label": "Printf()",
    "kind": "Method",
    "detail": "Function (const FString SkeletonClassNameString =)",
    "insertText": "Printf(TEXT(\"SKEL_%s_C\"), *NameToUse.ToString())"
  },
  {
    "label": "FName()",
    "kind": "Method",
    "detail": "Function (SkeletonClassName =)",
    "insertText": "FName(*SkeletonClassNameString)"
  },
  {
    "label": "GetBlueprintCDONames()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "GetBlueprintCDONames(FName& GeneratedClassName, FName& SkeletonClassName, FName NameOverride = NAME_None)"
  },
  {
    "label": "Printf()",
    "kind": "Method",
    "detail": "Function (const FString GeneratedClassNameString =)",
    "insertText": "Printf(TEXT(\"Default__%s_C\"), *NameToUse.ToString())"
  },
  {
    "label": "Printf()",
    "kind": "Method",
    "detail": "Function (const FString SkeletonClassNameString =)",
    "insertText": "Printf(TEXT(\"Default__SKEL_%s_C\"), *NameToUse.ToString())"
  },
  {
    "label": "GetBlueprintClass()",
    "kind": "Method",
    "detail": "Function (} UClass*)",
    "insertText": "GetBlueprintClass()"
  },
  {
    "label": "SupportedByDefaultBlueprintFactory()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SupportedByDefaultBlueprintFactory()"
  },
  {
    "label": "SetObjectBeingDebugged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetObjectBeingDebugged(UObject* NewObject)"
  },
  {
    "label": "UnregisterObjectBeingDebugged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterObjectBeingDebugged()"
  },
  {
    "label": "SetWorldBeingDebugged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetWorldBeingDebugged(UWorld* NewWorld)"
  },
  {
    "label": "GetReparentingRules()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetReparentingRules(TSet< const UClass* >& AllowedChildrenOfClasses, TSet< const UClass* >& DisallowedChildrenOfClasses)"
  },
  {
    "label": "AlwaysCompileOnLoad()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AlwaysCompileOnLoad()"
  },
  {
    "label": "GetObjectBeingDebugged()",
    "kind": "Method",
    "detail": "Function (public : UObject*)",
    "insertText": "GetObjectBeingDebugged(EGetObjectOrWorldBeingDebuggedFlags InFlags = EGetObjectOrWorldBeingDebuggedFlags::None)"
  },
  {
    "label": "EnumHasAnyFlags()",
    "kind": "Method",
    "detail": "Function (const bool bEvenIfPendingKill =)",
    "insertText": "EnumHasAnyFlags(InFlags, EGetObjectOrWorldBeingDebuggedFlags::IgnorePendingKill)"
  },
  {
    "label": "GetObjectPathToDebug()",
    "kind": "Method",
    "detail": "Function (} const FString&)",
    "insertText": "GetObjectPathToDebug()"
  },
  {
    "label": "RenameGeneratedClasses()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "RenameGeneratedClasses(const TCHAR* NewName = nullptr, UObject* NewOuter = nullptr, ERenameFlags Flags = REN_None)"
  },
  {
    "label": "PostDuplicate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostDuplicate(bool bDuplicateForPIE)"
  },
  {
    "label": "Rename()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Rename(const TCHAR* NewName = nullptr, UObject* NewOuter = nullptr, ERenameFlags Flags = REN_None)"
  },
  {
    "label": "RegenerateClass()",
    "kind": "Method",
    "detail": "Function (UClass*)",
    "insertText": "RegenerateClass(UClass* ClassToRegenerate, UObject* PreviousCDO)"
  },
  {
    "label": "PostLoad()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostLoad()"
  },
  {
    "label": "DeclareConstructClasses()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITORONLY_DATA void)",
    "insertText": "DeclareConstructClasses(TArray<FTopLevelAssetPath>& OutConstructClasses, const UClass* SpecificSubclass)"
  },
  {
    "label": "Modify()",
    "kind": "Method",
    "detail": "Function (# endif bool)",
    "insertText": "Modify(bool bAlwaysMarkDirty = true)"
  },
  {
    "label": "GetAssetRegistryTags()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetAssetRegistryTags(FAssetRegistryTagsContext Context)"
  },
  {
    "label": "ThreadedPostLoadAssetRegistryTagsOverride()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "ThreadedPostLoadAssetRegistryTagsOverride(FPostLoadAssetRegistryTagsContext& Context)"
  },
  {
    "label": "PostLoadBlueprintAssetRegistryTags()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostLoadBlueprintAssetRegistryTags(FPostLoadAssetRegistryTagsContext& Context)"
  },
  {
    "label": "GetPrimaryAssetId()",
    "kind": "Method",
    "detail": "Function (FPrimaryAssetId)",
    "insertText": "GetPrimaryAssetId()"
  },
  {
    "label": "BeginCacheForCookedPlatformData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginCacheForCookedPlatformData(const ITargetPlatform *TargetPlatform)"
  },
  {
    "label": "IsCachedCookedPlatformDataLoaded()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsCachedCookedPlatformDataLoaded(const ITargetPlatform* TargetPlatform)"
  },
  {
    "label": "ClearAllCachedCookedPlatformData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearAllCachedCookedPlatformData()"
  },
  {
    "label": "BeginDestroy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginDestroy()"
  },
  {
    "label": "RemoveChildRedirectors()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveChildRedirectors()"
  },
  {
    "label": "RemoveGeneratedClasses()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveGeneratedClasses()"
  },
  {
    "label": "GetFriendlyName()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetFriendlyName()"
  },
  {
    "label": "AllowsDynamicBinding()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AllowsDynamicBinding()"
  },
  {
    "label": "SupportsInputEvents()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SupportsInputEvents()"
  },
  {
    "label": "ChangeOwnerOfTemplates()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ChangeOwnerOfTemplates()"
  },
  {
    "label": "GetInheritableComponentHandler()",
    "kind": "Method",
    "detail": "Function (UInheritableComponentHandler*)",
    "insertText": "GetInheritableComponentHandler(bool bCreateIfNecessary)"
  },
  {
    "label": "GatherDependencies()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GatherDependencies(TSet<TWeakObjectPtr<UBlueprint>>& InDependencies)"
  },
  {
    "label": "ReplaceDeprecatedNodes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReplaceDeprecatedNodes()"
  },
  {
    "label": "ClearEditorReferences()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearEditorReferences()"
  },
  {
    "label": "IsDataValid()",
    "kind": "Method",
    "detail": "Function (EDataValidationResult)",
    "insertText": "IsDataValid(class FDataValidationContext& Context)"
  },
  {
    "label": "FindDiffs()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "FindDiffs(const UBlueprint* OtherBlueprint, FDiffResults& Results)"
  },
  {
    "label": "ConformNativeComponents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConformNativeComponents()"
  },
  {
    "label": "FindBlueprintPropertyNameFromGuid()",
    "kind": "Method",
    "detail": "Function (# endif FName)",
    "insertText": "FindBlueprintPropertyNameFromGuid(const FGuid& PropertyGuid)"
  },
  {
    "label": "FindBlueprintPropertyGuidFromName()",
    "kind": "Method",
    "detail": "Function (FGuid)",
    "insertText": "FindBlueprintPropertyGuidFromName(const FName PropertyName)"
  },
  {
    "label": "PreSave()",
    "kind": "Method",
    "detail": "Function (PRAGMA_ENABLE_DEPRECATION_WARNINGS void)",
    "insertText": "PreSave(FObjectPreSaveContext ObjectSaveContext)"
  },
  {
    "label": "GetPreloadDependencies()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetPreloadDependencies(TArray<UObject*>& OutDeps)"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (# endif void)",
    "insertText": "Serialize(FArchive& Ar)"
  },
  {
    "label": "GetDesc()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetDesc(void)"
  },
  {
    "label": "TagSubobjects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TagSubobjects(EObjectFlags NewFlags)"
  },
  {
    "label": "NeedsLoadForClient()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "NeedsLoadForClient()"
  },
  {
    "label": "NeedsLoadForServer()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "NeedsLoadForServer()"
  },
  {
    "label": "NeedsLoadForEditorGame()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "NeedsLoadForEditorGame()"
  },
  {
    "label": "HasNonEditorOnlyReferences()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasNonEditorOnlyReferences()"
  },
  {
    "label": "GetBlueprintFromClass()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITORONLY_DATA UBlueprint*)",
    "insertText": "GetBlueprintFromClass(const UClass* InClass)"
  },
  {
    "label": "GetBlueprintHierarchyFromClass()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetBlueprintHierarchyFromClass(const UClass* InClass, TArray<UBlueprint*>& OutBlueprintParents)"
  },
  {
    "label": "GetBlueprintHierarchyFromClass()",
    "kind": "Method",
    "detail": "Function (# endif bool)",
    "insertText": "GetBlueprintHierarchyFromClass(const UClass* InClass, TArray<UBlueprintGeneratedClass*>& OutBlueprintParents)"
  },
  {
    "label": "GetBlueprintHierarchyFromClass()",
    "kind": "Method",
    "detail": "Function (private : bool)",
    "insertText": "GetBlueprintHierarchyFromClass(const UClass* InClass, TArray<IBlueprintPropertyGuidProvider*>& OutBlueprintParents)"
  },
  {
    "label": "IsBlueprintHierarchyErrorFree()",
    "kind": "Method",
    "detail": "Function (public : # if WITH_EDITOR bool)",
    "insertText": "IsBlueprintHierarchyErrorFree(const UClass* InClass)"
  },
  {
    "label": "GetFieldNameFromClassByGuid()",
    "kind": "Method",
    "detail": "Function (# endif template<class TFieldType> FName)",
    "insertText": "GetFieldNameFromClassByGuid(const UClass* InClass, const FGuid VarGuid)"
  },
  {
    "label": "AssertPropertyType()",
    "kind": "Method",
    "detail": "Function (FProperty*)",
    "insertText": "AssertPropertyType(TFieldType*)"
  },
  {
    "label": "GetBlueprintHierarchyFromClass()",
    "kind": "Method",
    "detail": "Function (TArray<IBlueprintPropertyGuidProvider*> BlueprintPropertyGuidProviders ;)",
    "insertText": "GetBlueprintHierarchyFromClass(InClass, BlueprintPropertyGuidProviders)"
  },
  {
    "label": "FindBlueprintPropertyNameFromGuid()",
    "kind": "Method",
    "detail": "Function (const FName FoundPropertyName = BlueprintPropertyGuidProvider ->)",
    "insertText": "FindBlueprintPropertyNameFromGuid(VarGuid)"
  },
  {
    "label": "FindBlueprintPropertyGuidFromName()",
    "kind": "Method",
    "detail": "Function (const FGuid FoundPropertyGuid = BlueprintPropertyGuidProvider ->)",
    "insertText": "FindBlueprintPropertyGuidFromName(VarName)"
  },
  {
    "label": "GetFunctionNameFromClassByGuid()",
    "kind": "Method",
    "detail": "Function (VarGuid = FoundPropertyGuid ; return true ; } } return false ; } # if WITH_EDITOR FName)",
    "insertText": "GetFunctionNameFromClassByGuid(const UClass* InClass, const FGuid FunctionGuid)"
  },
  {
    "label": "GetFunctionGuidFromClassByFieldName()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetFunctionGuidFromClassByFieldName(const UClass* InClass, const FName FunctionName, FGuid& FunctionGuid)"
  },
  {
    "label": "GetLastEditedUberGraph()",
    "kind": "Method",
    "detail": "Function (UEdGraph*)",
    "insertText": "GetLastEditedUberGraph()"
  },
  {
    "label": "NotifyGraphRenamed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyGraphRenamed(class UEdGraph* Graph, FName OldName, FName NewName)"
  },
  {
    "label": "GetBlueprintParentClassFromAssetTags()",
    "kind": "Method",
    "detail": "Function (} # endif # if WITH_EDITOR UClass*)",
    "insertText": "GetBlueprintParentClassFromAssetTags(const FAssetData& BlueprintAsset)"
  },
  {
    "label": "GetTimelineSignatureForFunctionByName()",
    "kind": "Method",
    "detail": "Function (# endif ETimelineSigType)",
    "insertText": "GetTimelineSignatureForFunctionByName(const FName& FunctionName, const FName& ObjectPropertyName)"
  },
  {
    "label": "GetCurrentBlueprintSystemVersion()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetCurrentBlueprintSystemVersion()"
  },
  {
    "label": "GetTypeActions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetTypeActions(FBlueprintActionDatabaseRegistrar& ActionRegistrar)"
  },
  {
    "label": "GetInstanceActions()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "GetInstanceActions(FBlueprintActionDatabaseRegistrar& ActionRegistrar)"
  },
  {
    "label": "ShouldBeMarkedDirtyUponTransaction()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "ShouldBeMarkedDirtyUponTransaction()"
  },
  {
    "label": "Note()",
    "kind": "Method",
    "detail": "Function (CurrentMessageLog ->)",
    "insertText": "Note(*MessageToLog, Forward<ArgTypes>(Args)...)"
  },
  {
    "label": "UE_LOG()",
    "kind": "Method",
    "detail": "Function (} else {)",
    "insertText": "UE_LOG(LogBlueprint, Log, TEXT(\"[%s] %s\"), *GetName(), *MessageToLog)"
  },
  {
    "label": "Message_Warn()",
    "kind": "Method",
    "detail": "Function (} } template<. . . ArgTypes> void)",
    "insertText": "Message_Warn(const FString& MessageToLog, ArgTypes... Args)"
  },
  {
    "label": "Warning()",
    "kind": "Method",
    "detail": "Function (CurrentMessageLog ->)",
    "insertText": "Warning(*MessageToLog, Forward<ArgTypes>(Args)...)"
  },
  {
    "label": "UE_LOG()",
    "kind": "Method",
    "detail": "Function (} else {)",
    "insertText": "UE_LOG(LogBlueprint, Warning, TEXT(\"[%s] %s\"), *GetName(), *MessageToLog)"
  },
  {
    "label": "Message_Error()",
    "kind": "Method",
    "detail": "Function (} } template<. . . ArgTypes> void)",
    "insertText": "Message_Error(const FString& MessageToLog, ArgTypes... Args)"
  },
  {
    "label": "Error()",
    "kind": "Method",
    "detail": "Function (CurrentMessageLog ->)",
    "insertText": "Error(*MessageToLog, Forward<ArgTypes>(Args)...)"
  },
  {
    "label": "UE_LOG()",
    "kind": "Method",
    "detail": "Function (} else {)",
    "insertText": "UE_LOG(LogBlueprint, Error, TEXT(\"[%s] %s\"), *GetName(), *MessageToLog)"
  },
  {
    "label": "LoadModulesRequiredForCompilation()",
    "kind": "Method",
    "detail": "Function (} } # endif # if WITH_EDITORONLY_DATA protected : void)",
    "insertText": "LoadModulesRequiredForCompilation()"
  },
  {
    "label": "SupportsGlobalVariables()",
    "kind": "Method",
    "detail": "Function (# endif # if WITH_EDITOR public : bool)",
    "insertText": "SupportsGlobalVariables()"
  },
  {
    "label": "GetFunctionNameFromClassByGuid()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR return)",
    "insertText": "GetFunctionNameFromClassByGuid(InClass, FunctionGuid)"
  },
  {
    "label": "UFunction()",
    "kind": "Method",
    "detail": "Function (# else return NAME_None ; # endif } template<> bool UBlueprint::GetGuidFromClassByFieldName<)",
    "insertText": "UFunction(const UClass* InClass, const FName FunctionName, FGuid& FunctionGuid)"
  },
  {
    "label": "GetFunctionGuidFromClassByFieldName()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR return)",
    "insertText": "GetFunctionGuidFromClassByFieldName(InClass, FunctionName, FunctionGuid)"
  }
]