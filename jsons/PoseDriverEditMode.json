[
  {
    "label": "FEditorViewportClient",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEditorViewportClient"
  },
  {
    "label": "FPrimitiveDrawInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPrimitiveDrawInterface"
  },
  {
    "label": "FSceneView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSceneView"
  },
  {
    "label": "FViewport",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FViewport"
  },
  {
    "label": "HHitProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "HHitProxy"
  },
  {
    "label": "FViewportClick",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FViewportClick"
  },
  {
    "label": "FPoseDriverEditMode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPoseDriverEditMode"
  },
  {
    "label": "UAnimGraphNode_Base",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimGraphNode_Base"
  },
  {
    "label": "FAnimNode_Base",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimNode_Base"
  },
  {
    "label": "FAnimNode_PoseDriver",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimNode_PoseDriver"
  },
  {
    "label": "UAnimGraphNode_PoseDriver",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimGraphNode_PoseDriver"
  },
  {
    "label": "EnterMode()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" AnimNodeEditMode . h \" class FEditorViewportClient ; class FPrimitiveDrawInterface ; class FSceneView ; class FViewport ; class HHitProxy ; struct FViewportClick ; class FPoseDriverEditMode : public FAnimNodeEditMode { public : void)",
    "insertText": "EnterMode(class UAnimGraphNode_Base* InEditorNode, struct FAnimNode_Base* InRuntimeNode)"
  },
  {
    "label": "ExitMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExitMode()"
  },
  {
    "label": "Render()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Render(const FSceneView* View, FViewport* Viewport, FPrimitiveDrawInterface* PDI)"
  },
  {
    "label": "HandleClick()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HandleClick(FEditorViewportClient* InViewportClient, HHitProxy* HitProxy, const FViewportClick& Click)"
  }
]