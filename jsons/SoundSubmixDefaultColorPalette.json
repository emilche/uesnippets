[
  {
    "label": "USoundSubmixBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USoundSubmixBase"
  },
  {
    "label": "FColor()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" HAL / Platform . h \" # include \" Math / Color . h \" # include \" Sound / SoundSubmix . h \" # include \" UObject / NameTypes . h \" class USoundSubmixBase ; namespace Audio { const FColor DefaultSubmixColor =)",
    "insertText": "FColor(143, 190, 0)"
  },
  {
    "label": "FColor()",
    "kind": "Method",
    "detail": "Function (const FColor SoundfieldDefaultSubmixColor =)",
    "insertText": "FColor(0, 168, 198)"
  },
  {
    "label": "FColor()",
    "kind": "Method",
    "detail": "Function (const FColor EndpointDefaultSubmixColor =)",
    "insertText": "FColor(249, 242, 231)"
  },
  {
    "label": "FColor()",
    "kind": "Method",
    "detail": "Function (const FColor SoundfieldEndpointDefaultSubmixColor =)",
    "insertText": "FColor(64, 192, 203)"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (const FName SoundSubmixName =)",
    "insertText": "TEXT(\"SoundSubmix\")"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (const FName SoundfieldSubmixName =)",
    "insertText": "TEXT(\"SoundfieldSubmix\")"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (const FName EndpointSubmixName =)",
    "insertText": "TEXT(\"EndpointSubmix\")"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (const FName SoundfieldEndpointSubmixName =)",
    "insertText": "TEXT(\"SoundfieldEndpointSubmix\")"
  },
  {
    "label": "GetNameForSubmixType()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetNameForSubmixType(const USoundSubmixBase* InSubmix)"
  },
  {
    "label": "GetColorForSubmixType()",
    "kind": "Method",
    "detail": "Function (FColor)",
    "insertText": "GetColorForSubmixType(const USoundSubmixBase* InSubmix)"
  },
  {
    "label": "GetColorForSubmixType()",
    "kind": "Method",
    "detail": "Function (FColor)",
    "insertText": "GetColorForSubmixType(const FName& InSubmixName)"
  },
  {
    "label": "IsConnectionPerformingSoundfieldConversion()",
    "kind": "Method",
    "detail": "Function (const bool)",
    "insertText": "IsConnectionPerformingSoundfieldConversion(const USoundSubmixBase* InputSubmix, const USoundSubmixBase* OutputSubmix)"
  }
]