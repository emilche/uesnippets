[
  {
    "label": "FPrimitiveSceneProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPrimitiveSceneProxy"
  },
  {
    "label": "UCapsuleComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UCapsuleComponent"
  },
  {
    "label": "FCollisionShape",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCollisionShape"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" Components / ShapeComponent . h \" # include \" CapsuleComponent . generated . h \" class FPrimitiveSceneProxy ;)",
    "insertText": "UCLASS(ClassGroup=\"Collision\", editinlinenew, hidecategories=(Object,LOD,Lighting,TextureStreaming), meta=(DisplayName=\"Capsule Collision\", BlueprintSpawnableComponent), MinimalAPI)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() protected: UPROPERTY(EditAnywhere, BlueprintReadOnly, export, Category=Shape, meta=(ClampMin=\"0\", UIMin=\"0\"))"
  },
  {
    "label": "PostLoad()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostLoad()"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITORONLY_DATA void)",
    "insertText": "Serialize(FArchive& Ar)"
  },
  {
    "label": "PostEditChangeProperty()",
    "kind": "Method",
    "detail": "Function (# endif # if WITH_EDITOR void)",
    "insertText": "PostEditChangeProperty(FPropertyChangedEvent& PropertyChangedEvent)"
  },
  {
    "label": "CalcBounds()",
    "kind": "Method",
    "detail": "Function (# endif FBoxSphereBounds)",
    "insertText": "CalcBounds(const FTransform& LocalToWorld)"
  },
  {
    "label": "CalcBoundingCylinder()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CalcBoundingCylinder(float& CylinderRadius, float& CylinderHalfHeight)"
  },
  {
    "label": "CreateSceneProxy()",
    "kind": "Method",
    "detail": "Function (FPrimitiveSceneProxy*)",
    "insertText": "CreateSceneProxy()"
  },
  {
    "label": "IsZeroExtent()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsZeroExtent()"
  },
  {
    "label": "GetCollisionShape()",
    "kind": "Method",
    "detail": "Function (struct FCollisionShape)",
    "insertText": "GetCollisionShape(float Inflation = 0.0f)"
  },
  {
    "label": "AreSymmetricRotations()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AreSymmetricRotations(const FQuat& A, const FQuat& B, const FVector& Scale3D)"
  },
  {
    "label": "UpdateBodySetup()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateBodySetup()"
  },
  {
    "label": "Max()",
    "kind": "Method",
    "detail": "Function (CapsuleRadius =)",
    "insertText": "Max(0.f, InRadius)"
  },
  {
    "label": "Max3()",
    "kind": "Method",
    "detail": "Function (CapsuleHalfHeight =)",
    "insertText": "Max3(0.f, InHalfHeight, InRadius)"
  },
  {
    "label": "SetCapsuleRadius()",
    "kind": "Method",
    "detail": "Function (} } ; void)",
    "insertText": "SetCapsuleRadius(float Radius, bool bUpdateOverlaps)"
  },
  {
    "label": "SetCapsuleSize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCapsuleSize(Radius, GetUnscaledCapsuleHalfHeight(), bUpdateOverlaps)"
  },
  {
    "label": "SetCapsuleHalfHeight()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetCapsuleHalfHeight(float HalfHeight, bool bUpdateOverlaps)"
  },
  {
    "label": "SetCapsuleSize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCapsuleSize(GetUnscaledCapsuleRadius(), HalfHeight, bUpdateOverlaps)"
  },
  {
    "label": "GetScaledCapsuleRadius()",
    "kind": "Method",
    "detail": "Function (} float)",
    "insertText": "GetScaledCapsuleRadius()"
  },
  {
    "label": "GetComponentTransform()",
    "kind": "Method",
    "detail": "Function (const FVector& ComponentScale =)",
    "insertText": "GetComponentTransform().GetScale3D()"
  },
  {
    "label": "GetScaledCapsuleHalfHeight()",
    "kind": "Method",
    "detail": "Function (} float)",
    "insertText": "GetScaledCapsuleHalfHeight()"
  },
  {
    "label": "GetScaledCapsuleHalfHeight_WithoutHemisphere()",
    "kind": "Method",
    "detail": "Function (} float)",
    "insertText": "GetScaledCapsuleHalfHeight_WithoutHemisphere()"
  },
  {
    "label": "GetScaledCapsuleSize()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "GetScaledCapsuleSize(float& OutRadius, float& OutHalfHeight)"
  },
  {
    "label": "GetScaledCapsuleSize_WithoutHemisphere()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "GetScaledCapsuleSize_WithoutHemisphere(float& OutRadius, float& OutHalfHeightWithoutHemisphere)"
  },
  {
    "label": "GetUnscaledCapsuleRadius()",
    "kind": "Method",
    "detail": "Function (} float)",
    "insertText": "GetUnscaledCapsuleRadius()"
  },
  {
    "label": "GetUnscaledCapsuleSize_WithoutHemisphere()",
    "kind": "Method",
    "detail": "Function (OutRadius = CapsuleRadius ; OutHalfHeight = CapsuleHalfHeight ; } void)",
    "insertText": "GetUnscaledCapsuleSize_WithoutHemisphere(float& OutRadius, float& OutHalfHeightWithoutHemisphere)"
  },
  {
    "label": "GetShapeScale()",
    "kind": "Method",
    "detail": "Function (OutRadius = CapsuleRadius ; OutHalfHeightWithoutHemisphere = CapsuleHalfHeight - CapsuleRadius ; } float)",
    "insertText": "GetShapeScale()"
  }
]