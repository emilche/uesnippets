[
  {
    "label": "Metadata",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Metadata"
  },
  {
    "label": "MetadataAsValue",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MetadataAsValue"
  },
  {
    "label": "MetadataTracking",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MetadataTracking"
  },
  {
    "label": "track()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "track(Ref, MD, &Owner)"
  },
  {
    "label": "track()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "track(Ref, MD, &Owner)"
  },
  {
    "label": "untrack()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "untrack(void *Ref, Metadata &MD)"
  },
  {
    "label": "retrack()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "retrack(&MD, *MD, &New)"
  },
  {
    "label": "retrack()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "retrack(void *Ref, Metadata &MD, void *New)"
  },
  {
    "label": "isReplaceable()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "isReplaceable(const Metadata &MD)"
  },
  {
    "label": "track()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "track(void *Ref, Metadata &MD, OwnerTy Owner)"
  }
]