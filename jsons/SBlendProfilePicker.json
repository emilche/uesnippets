[
  {
    "label": "UBlendProfile",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBlendProfile"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "SBlendProfilePicker",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SBlendProfilePicker"
  },
  {
    "label": "IPropertyHandle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPropertyHandle"
  },
  {
    "label": "IEditableSkeleton",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IEditableSkeleton"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Widgets / SWidget . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" IEditableSkeleton . h \" # include \" Widgets / SCompoundWidget . h \" # include \" EditorUndoClient . h \" # include \" BlendProfilePicker . h \" class UBlendProfile ; enum class EBlendProfileMode : uint8 ; class SBlendProfilePicker : public SCompoundWidget,public FEditorUndoClient { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SBlendProfilePicker) : _InitialProfile(nullptr) , _OnBlendProfileSelected() , _SupportedBlendProfileModes(EBlendProfilePickerMode::AllModes) , _AllowNew(true) , _AllowClear(true) , _AllowModify(true) , _Standalone(false)"
  },
  {
    "label": "SLATE_ARGUMENT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_ARGUMENT(UBlendProfile*, InitialProfile) SLATE_EVENT(FOnBlendProfileSelected, OnBlendProfileSelected) SLATE_ARGUMENT(EBlendProfilePickerMode, SupportedBlendProfileModes) SLATE_ARGUMENT(bool, AllowNew) SLATE_ARGUMENT(bool, AllowClear) SLATE_ARGUMENT(bool, AllowModify) SLATE_ARGUMENT(bool, Standalone) SLATE_ARGUMENT(TSharedPtr<class IPropertyHandle>, PropertyHandle) SLATE_END_ARGS() ~SBlendProfilePicker()"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct(const FArguments& InArgs, TSharedRef<class IEditableSkeleton> InEditableSkeleton)"
  },
  {
    "label": "SetSelectedProfile()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSelectedProfile(UBlendProfile* InProfile, bool bBroadcast = true)"
  },
  {
    "label": "GetSelectedBlendProfile()",
    "kind": "Method",
    "detail": "Function (UBlendProfile* const)",
    "insertText": "GetSelectedBlendProfile()"
  },
  {
    "label": "GetSelectedBlendProfileName()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetSelectedBlendProfileName()"
  },
  {
    "label": "OnCreateNewProfileComitted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnCreateNewProfileComitted(const FText& NewName, ETextCommit::Type CommitType, EBlendProfileMode InMode)"
  },
  {
    "label": "OnClearSelection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnClearSelection()"
  },
  {
    "label": "PostUndo()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "PostUndo(bool bSuccess)"
  },
  {
    "label": "PostRedo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostRedo(bool bSuccess)"
  },
  {
    "label": "OnCreateNewProfile()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnCreateNewProfile(EBlendProfileMode InMode)"
  },
  {
    "label": "OnProfileSelected()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnProfileSelected(FName InBlendProfileName)"
  },
  {
    "label": "OnProfileRemoved()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnProfileRemoved(FName InBlendProfileName)"
  },
  {
    "label": "OnProfileModeChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnProfileModeChanged(EBlendProfileMode ProfileMode, FName InBlendProfileName)"
  },
  {
    "label": "GetSelectedProfileName()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetSelectedProfileName()"
  },
  {
    "label": "GetMenuContent()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "GetMenuContent()"
  }
]