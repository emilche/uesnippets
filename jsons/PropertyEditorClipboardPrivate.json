[
  {
    "label": "FClipboardData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FClipboardData"
  },
  {
    "label": "IsJsonString()",
    "kind": "Method",
    "detail": "Function (\ufeff # pragma once # include \" Containers / Map . h \" # include \" Containers / UnrealString . h \" # include \" CoreTypes . h \" # include \" Templates / Function . h \" # include \" Templates / SharedPointerFwd . h \" # include \" UObject / NameTypes . h \" namespace UE::PropertyEditor::Internal { bool)",
    "insertText": "IsJsonString(const FString& InStr)"
  },
  {
    "label": "TryWriteClipboard()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TryWriteClipboard(const TMap<FName, FString>& InTaggedClipboardPairs, FString& OutClipboardStr)"
  },
  {
    "label": "TryParseClipboard()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TryParseClipboard(const FString& InClipboardStr, TMap<FName, FString>& OutTaggedClipboard)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (struct FClipboardData { TOptional<FString> Content ; bool bIsApplicable = false ; int32 PreviousPropertyHandleNum = INDEX_NONE ; TMap<FName,FString> PropertyValues ; TArray<FName> PropertyNames ; void)",
    "insertText": "Reset()"
  },
  {
    "label": "Reserve()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Reserve(const int32& InNum)"
  },
  {
    "label": "Reserve()",
    "kind": "Method",
    "detail": "Function (PropertyValues .)",
    "insertText": "Reserve(InNum)"
  }
]