[
  {
    "label": "APlayerController",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "APlayerController"
  },
  {
    "label": "UNetConnection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UNetConnection"
  },
  {
    "label": "FReplayHelper",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FReplayHelper"
  },
  {
    "label": "FReplayResultHandler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FReplayResultHandler"
  },
  {
    "label": "FReplayHelper",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FReplayHelper"
  },
  {
    "label": "FReplayHelper",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FReplayHelper"
  },
  {
    "label": "UDemoNetDriver",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UDemoNetDriver"
  },
  {
    "label": "UDemoNetConnection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UDemoNetConnection"
  },
  {
    "label": "UReplayNetConnection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UReplayNetConnection"
  },
  {
    "label": "FReplayResultHandler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FReplayResultHandler"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FRepActorsCheckpointParams",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRepActorsCheckpointParams"
  },
  {
    "label": "FExternalDataWrapper",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FExternalDataWrapper"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FCheckpointStepHelper",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCheckpointStepHelper"
  },
  {
    "label": "FPendingCheckPointActor",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPendingCheckPointActor"
  },
  {
    "label": "FNetGuidCacheItem",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FNetGuidCacheItem"
  },
  {
    "label": "FCheckpointSaveStateContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCheckpointSaveStateContext"
  },
  {
    "label": "FLevelStatus",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLevelStatus"
  },
  {
    "label": "ULevel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULevel"
  },
  {
    "label": "InitResultHandler()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitResultHandler(FReplayHelper* InReplayHelper)"
  },
  {
    "label": "FReplayHelper()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FReplayHelper()"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Serialize(FArchive& Ar)"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<INetworkReplayStreamer>)",
    "insertText": "Init(const FURL& URL)"
  },
  {
    "label": "SetPlaybackNetworkVersions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPlaybackNetworkVersions(FArchive& Ar)"
  },
  {
    "label": "SetPlaybackNetworkVersions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPlaybackNetworkVersions(UNetConnection* Connection)"
  },
  {
    "label": "StartRecording()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StartRecording(UNetConnection* Connection)"
  },
  {
    "label": "StopReplay()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StopReplay()"
  },
  {
    "label": "OnStartRecordingComplete()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnStartRecordingComplete(const FStartStreamingResult& Result)"
  },
  {
    "label": "WriteNetworkDemoHeader()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WriteNetworkDemoHeader(UNetConnection* Connection)"
  },
  {
    "label": "ReadPlaybackDemoHeader()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ReadPlaybackDemoHeader(FString& Error)"
  },
  {
    "label": "FlushNetChecked()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FlushNetChecked(UNetConnection& NetConnection)"
  },
  {
    "label": "WritePacket()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WritePacket(FArchive& Ar, uint8* Data, int32 Count)"
  },
  {
    "label": "OnSeamlessTravelStart()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSeamlessTravelStart(UWorld* InWorld, const FString& LevelName, UNetConnection* Connection)"
  },
  {
    "label": "AddNewLevel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddNewLevel(const FString& NewLevelName)"
  },
  {
    "label": "TickRecording()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TickRecording(float DeltaSeconds, UNetConnection* Connection)"
  },
  {
    "label": "SaveCheckpoint()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SaveCheckpoint(UNetConnection* Connection)"
  },
  {
    "label": "TickCheckpoint()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TickCheckpoint(UNetConnection* Connection)"
  },
  {
    "label": "GetClampedDeltaSeconds()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetClampedDeltaSeconds(UWorld* World, const float DeltaSeconds)"
  },
  {
    "label": "ResetState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetState()"
  },
  {
    "label": "AddOrUpdateEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddOrUpdateEvent(const FString& Name, const FString& Group, const FString& Meta, const TArray<uint8>& Data)"
  },
  {
    "label": "SetAnalyticsProvider()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAnalyticsProvider(TSharedPtr<IAnalyticsProvider> InProvider)"
  },
  {
    "label": "RequestCheckpoint()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RequestCheckpoint()"
  },
  {
    "label": "RemoveActorFromCheckpoint()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveActorFromCheckpoint(UNetConnection* Connection, AActor* Actor)"
  },
  {
    "label": "NotifyActorDestroyed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyActorDestroyed(UNetConnection* Connection, AActor* Actor)"
  },
  {
    "label": "OnLevelAddedToWorld()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnLevelAddedToWorld(ULevel* Level, UWorld* World)"
  },
  {
    "label": "OnLevelRemovedFromWorld()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnLevelRemovedFromWorld(ULevel* Level, UWorld* World)"
  },
  {
    "label": "RecordFrame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RecordFrame(float DeltaSeconds, UNetConnection* Connection)"
  },
  {
    "label": "WriteDemoFrame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WriteDemoFrame(UNetConnection* Connection, FArchive& Ar, TArray<FQueuedDemoPacket>& QueuedPackets, float FrameTime, EWriteDemoFrameFlags Flags)"
  },
  {
    "label": "ReadDemoFrame()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ReadDemoFrame(UNetConnection* Connection, FArchive& Ar, TArray<FPlaybackPacket>& InPlaybackPackets, const bool bForLevelFastForward, const FArchivePos MaxArchiveReadPos, float* OutTime)"
  },
  {
    "label": "ReadPacket()",
    "kind": "Method",
    "detail": "Function (EReadPacketState)",
    "insertText": "ReadPacket(FArchive& Archive, TArray<uint8>& OutBuffer, const EReadPacketMode Mode)"
  },
  {
    "label": "CacheNetGuids()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CacheNetGuids(UNetConnection* Connection)"
  },
  {
    "label": "SerializeGuidCache()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SerializeGuidCache(UNetConnection* Connection, const FRepActorsCheckpointParams& Params, FArchive* CheckpointArchive)"
  },
  {
    "label": "SerializeDeletedStartupActors()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SerializeDeletedStartupActors(UNetConnection* Connection, const FRepActorsCheckpointParams& Params, FArchive* CheckpointArchive)"
  },
  {
    "label": "SerializeDeltaDynamicDestroyed()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SerializeDeltaDynamicDestroyed(UNetConnection* Connection, const FRepActorsCheckpointParams& Params, FArchive* CheckpointArchive)"
  },
  {
    "label": "SerializeDeltaClosedChannels()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SerializeDeltaClosedChannels(UNetConnection* Connection, const FRepActorsCheckpointParams& Params, FArchive* CheckpointArchive)"
  },
  {
    "label": "ReplicateCheckpointActor()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ReplicateCheckpointActor(AActor* ToReplicate, UNetConnection* Connection, class FRepActorsCheckpointParams& Params)"
  },
  {
    "label": "ReplicateActor()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ReplicateActor(AActor* Actor, UNetConnection* Connection, bool bMustReplicate)"
  },
  {
    "label": "SaveExternalData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SaveExternalData(UNetConnection* Connection, FArchive& Ar)"
  },
  {
    "label": "LoadExternalData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LoadExternalData(FArchive& Ar, const float TimeSeconds)"
  },
  {
    "label": "SetExternalDataForObject()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetExternalDataForObject(UNetConnection* Connection, UObject* OwningObject, const uint8* Src, const int32 NumBits)"
  },
  {
    "label": "ResetDeltaCheckpointTracking()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetDeltaCheckpointTracking(UNetConnection* Connection)"
  },
  {
    "label": "ResetLevelMap()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetLevelMap()"
  },
  {
    "label": "ClearLevelMap()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearLevelMap()"
  },
  {
    "label": "GetLevelPackageName()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetLevelPackageName(const ULevel& InLevel)"
  },
  {
    "label": "ResetLevelStatuses()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetLevelStatuses()"
  },
  {
    "label": "ReadDeletedStartupActors()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReadDeletedStartupActors(UNetConnection* Connection, FArchive& Ar, TSet<FString>& DeletedStartupActors)"
  },
  {
    "label": "ProcessCheckpointActors()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessCheckpointActors(UNetConnection* Connection, TArrayView<FPendingCheckPointActor> PendingActors, int32& NextIndex, FRepActorsCheckpointParams& Params)"
  },
  {
    "label": "NotifyReplayError()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyReplayError(UE::Net::TNetResult<EReplayResult>&& Result)"
  }
]