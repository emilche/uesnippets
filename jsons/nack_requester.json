[
  {
    "label": "NackRequesterBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "NackRequesterBase"
  },
  {
    "label": "NackPeriodicProcessor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "NackPeriodicProcessor"
  },
  {
    "label": "ScopedNackPeriodicProcessorRegistration",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ScopedNackPeriodicProcessorRegistration"
  },
  {
    "label": "NackRequester",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "NackRequester"
  },
  {
    "label": "NackFilterOptions",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "NackFilterOptions"
  },
  {
    "label": "holds",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "holds"
  },
  {
    "label": "NackInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "NackInfo"
  },
  {
    "label": "NackPeriodicProcessor()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "NackPeriodicProcessor(TimeDelta update_interval = kUpdateInterval)"
  },
  {
    "label": "RegisterNackModule()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterNackModule(NackRequesterBase* module)"
  },
  {
    "label": "UnregisterNackModule()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterNackModule(NackRequesterBase* module)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (repeating_task_)",
    "insertText": "RTC_GUARDED_BY(sequence_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (modules_)",
    "insertText": "RTC_GUARDED_BY(sequence_)"
  },
  {
    "label": "ScopedNackPeriodicProcessorRegistration()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "ScopedNackPeriodicProcessorRegistration(NackRequesterBase* module,\n                                          NackPeriodicProcessor* processor)"
  },
  {
    "label": "NackRequester()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "NackRequester(TaskQueueBase* current_queue,\n                NackPeriodicProcessor* periodic_processor,\n                Clock* clock,\n                NackSender* nack_sender,\n                KeyFrameRequestSender* keyframe_request_sender,\n                const FieldTrialsView& field_trials)"
  },
  {
    "label": "OnReceivedPacket()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "OnReceivedPacket(uint16_t seq_num, bool is_keyframe)"
  },
  {
    "label": "OnReceivedPacket()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "OnReceivedPacket(uint16_t seq_num, bool is_keyframe, bool is_recovered)"
  },
  {
    "label": "ClearUpTo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearUpTo(uint16_t seq_num)"
  },
  {
    "label": "UpdateRtt()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateRtt(int64_t rtt_ms)"
  },
  {
    "label": "RTC_EXCLUSIVE_LOCKS_REQUIRED()",
    "kind": "Method",
    "detail": "Function (const)",
    "insertText": "RTC_EXCLUSIVE_LOCKS_REQUIRED(worker_thread_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (nack_list_)",
    "insertText": "RTC_GUARDED_BY(worker_thread_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (keyframe_list_)",
    "insertText": "RTC_GUARDED_BY(worker_thread_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (recovered_list_)",
    "insertText": "RTC_GUARDED_BY(worker_thread_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (reordering_histogram_)",
    "insertText": "RTC_GUARDED_BY(worker_thread_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (initialized_)",
    "insertText": "RTC_GUARDED_BY(worker_thread_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (rtt_)",
    "insertText": "RTC_GUARDED_BY(worker_thread_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (newest_seq_num_)",
    "insertText": "RTC_GUARDED_BY(worker_thread_)"
  }
]