[
  {
    "label": "UParticleSystem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UParticleSystem"
  },
  {
    "label": "USkeletalMeshComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USkeletalMeshComponent"
  },
  {
    "label": "UAnimNotifyState_TimedParticleEffect",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimNotifyState_TimedParticleEffect"
  },
  {
    "label": "UAnimSequenceBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimSequenceBase"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" Animation / AnimNotifies / AnimNotifyState . h \" # include \" AnimNotifyState_TimedParticleEffect . generated . h \" class UParticleSystem ; class USkeletalMeshComponent ;)",
    "insertText": "UCLASS(Blueprintable, meta = (DisplayName = \"Timed Particle Effect\"), MinimalAPI)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() UPROPERTY(EditAnywhere, Category = ParticleSystem, meta = (ToolTip = \"The particle system to spawn for the notify state\"))"
  },
  {
    "label": "PreEditChange()",
    "kind": "Method",
    "detail": "Function (# endif # if WITH_EDITOR void)",
    "insertText": "PreEditChange(FProperty* PropertyAboutToChange)"
  },
  {
    "label": "NotifyBegin()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyBegin(class USkeletalMeshComponent * MeshComp, class UAnimSequenceBase * Animation, float TotalDuration, const FAnimNotifyEventReference& EventReference)"
  },
  {
    "label": "NotifyTick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyTick(class USkeletalMeshComponent * MeshComp, class UAnimSequenceBase * Animation, float FrameDeltaTime, const FAnimNotifyEventReference& EventReference)"
  },
  {
    "label": "NotifyEnd()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyEnd(class USkeletalMeshComponent * MeshComp, class UAnimSequenceBase * Animation, const FAnimNotifyEventReference& EventReference)"
  },
  {
    "label": "GetNotifyName_Implementation()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetNotifyName_Implementation()"
  },
  {
    "label": "ValidateParameters()",
    "kind": "Method",
    "detail": "Function (protected : bool)",
    "insertText": "ValidateParameters(USkeletalMeshComponent* MeshComp)"
  }
]