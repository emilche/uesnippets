[
  {
    "label": "ClientDownloadImageCallback",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ClientDownloadImageCallback"
  },
  {
    "label": "ClientHandler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ClientHandler"
  },
  {
    "label": "will",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "will"
  },
  {
    "label": "Delegate",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Delegate"
  },
  {
    "label": "ClientDownloadImageCallback",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ClientDownloadImageCallback"
  },
  {
    "label": "TestMenuState",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TestMenuState"
  },
  {
    "label": "DetachDelegate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DetachDelegate()"
  },
  {
    "label": "ShowDevTools()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ShowDevTools(CefRefPtr<CefBrowser> browser,\n                    const CefPoint& inspect_element_at)"
  },
  {
    "label": "CloseDevTools()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CloseDevTools(CefRefPtr<CefBrowser> browser)"
  },
  {
    "label": "HasSSLInformation()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasSSLInformation(CefRefPtr<CefBrowser> browser)"
  },
  {
    "label": "ShowSSLInformation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ShowSSLInformation(CefRefPtr<CefBrowser> browser)"
  },
  {
    "label": "SetStringResource()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetStringResource(const std::string& page, const std::string& data)"
  },
  {
    "label": "CreatePopupWindow()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CreatePopupWindow(CefRefPtr<CefBrowser> browser,\n                         bool is_devtools,\n                         const CefPopupFeatures& popupFeatures,\n                         CefWindowInfo& windowInfo,\n                         CefRefPtr<CefClient>& client,\n                         CefBrowserSettings& settings)"
  },
  {
    "label": "NotifyBrowserCreated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyBrowserCreated(CefRefPtr<CefBrowser> browser)"
  },
  {
    "label": "NotifyBrowserClosing()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyBrowserClosing(CefRefPtr<CefBrowser> browser)"
  },
  {
    "label": "NotifyBrowserClosed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyBrowserClosed(CefRefPtr<CefBrowser> browser)"
  },
  {
    "label": "NotifyAddress()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyAddress(const CefString& url)"
  },
  {
    "label": "NotifyTitle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyTitle(const CefString& title)"
  },
  {
    "label": "NotifyFavicon()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyFavicon(CefRefPtr<CefImage> image)"
  },
  {
    "label": "NotifyFullscreen()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyFullscreen(bool fullscreen)"
  },
  {
    "label": "NotifyAutoResize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyAutoResize(const CefSize& new_size)"
  },
  {
    "label": "NotifyLoadingState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyLoadingState(bool isLoading, bool canGoBack, bool canGoForward)"
  },
  {
    "label": "NotifyDraggableRegions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyDraggableRegions(const std::vector<CefDraggableRegion>& regions)"
  },
  {
    "label": "NotifyTakeFocus()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyTakeFocus(bool next)"
  },
  {
    "label": "BuildTestMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildTestMenu(CefRefPtr<CefMenuModel> model)"
  },
  {
    "label": "ExecuteTestMenu()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ExecuteTestMenu(int command_id)"
  },
  {
    "label": "SetOfflineState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetOfflineState(CefRefPtr<CefBrowser> browser, bool offline)"
  }
]