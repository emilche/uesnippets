[
  {
    "label": "FWorldPartitionCookPackage",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FWorldPartitionCookPackage"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "MakeCookPackageID()",
    "kind": "Method",
    "detail": "Function (# pragma once # if WITH_EDITOR # include \" CoreMinimal . h \" # include \" Hash / CityHash . h \" # include \" Misc / Paths . h \" # include \" WorldPartition / WorldPartitionLog . h \" # include \" UObject / Package . h \" # else # include \" Containers / StringView . h \" # endif struct FWorldPartitionCookPackage { # if WITH_EDITOR enum class EType { Unknown,Level,Generic } ; using IDType = uint64 ; IDType)",
    "insertText": "MakeCookPackageID(const FString& InRoot, const FString& InRelativeFilename)"
  },
  {
    "label": "CityHash64()",
    "kind": "Method",
    "detail": "Function (uint64 RootHash =)",
    "insertText": "CityHash64(reinterpret_cast<const char*>(*InRoot), InRoot.Len() * sizeof(TCHAR))"
  },
  {
    "label": "CityHash64()",
    "kind": "Method",
    "detail": "Function (uint64 RelativePathHash =)",
    "insertText": "CityHash64(reinterpret_cast<const char*>(*InRelativeFilename), InRelativeFilename.Len() * sizeof(TCHAR))"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (FString SanitizedPath =)",
    "insertText": "TEXT(\"/\")"
  },
  {
    "label": "RemoveDuplicateSlashes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveDuplicateSlashes(SanitizedPath)"
  },
  {
    "label": "RemoveAt()",
    "kind": "Method",
    "detail": "Function (SanitizedPath .)",
    "insertText": "RemoveAt(SanitizedPath.Len() - 1, 1)"
  },
  {
    "label": "MakeGeneratedFullPath()",
    "kind": "Method",
    "detail": "Function (} return SanitizedPath ; } FString)",
    "insertText": "MakeGeneratedFullPath(const FString& InRoot, const FString& InRelativeFilename)"
  },
  {
    "label": "RemoveDuplicateSlashes()",
    "kind": "Method",
    "detail": "Function (FullPath + = InRoot ; FullPath + = GeneratedFolder ; FullPath + = InRelativeFilename ; return)",
    "insertText": "RemoveDuplicateSlashes(*FullPath)"
  },
  {
    "label": "FWorldPartitionCookPackage()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FWorldPartitionCookPackage(const FString& InRoot, const FString& InRelativePath, EType InType) : Root(SanitizePathComponent(InRoot)), RelativePath(SanitizePathComponent(InRelativePath)), PackageId(MakeCookPackageID(Root, RelativePath)), Type(InType)"
  },
  {
    "label": "GetFullGeneratedPath()",
    "kind": "Method",
    "detail": "Function (} FString)",
    "insertText": "GetFullGeneratedPath()"
  },
  {
    "label": "GetPackage()",
    "kind": "Method",
    "detail": "Function (} UPackage*)",
    "insertText": "GetPackage()"
  },
  {
    "label": "GetGeneratedFolderName()",
    "kind": "Method",
    "detail": "Function (} const FString Root ; const FString RelativePath ; const IDType PackageId ; const EType Type ; # endif FStringView)",
    "insertText": "GetGeneratedFolderName()"
  },
  {
    "label": "TEXTVIEW()",
    "kind": "Method",
    "detail": "Function (} private : FStringView GeneratedFolder =)",
    "insertText": "TEXTVIEW(\"/_Generated_/\")"
  }
]