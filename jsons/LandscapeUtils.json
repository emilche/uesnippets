[
  {
    "label": "ULevel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULevel"
  },
  {
    "label": "EShaderPlatform",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EShaderPlatform"
  },
  {
    "label": "ULandscapeComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULandscapeComponent"
  },
  {
    "label": "ULandscapeLayerInfoObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULandscapeLayerInfoObject"
  },
  {
    "label": "UTexture2D",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UTexture2D"
  },
  {
    "label": "UTexture",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UTexture"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FTextureCopyRequest",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTextureCopyRequest"
  },
  {
    "label": "FTextureCopyChannelMapping",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTextureCopyChannelMapping"
  },
  {
    "label": "FBatchTextureCopy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBatchTextureCopy"
  },
  {
    "label": "FLayerInfoFinder",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLayerInfoFinder"
  },
  {
    "label": "DoesPlatformSupportEditLayers()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / UnrealString . h \" # include \" CoreMinimal . h \" # include \" UObject / NameTypes . h \" # include \" AssetRegistry / AssetData . h \" class ULevel ; enum EShaderPlatform : uint16 ; class ULandscapeComponent ; class ULandscapeLayerInfoObject ; class UTexture2D ; class UTexture ; enum class ELandscapeToolTargetType : uint8 ; enum class ELandscapeToolTargetTypeFlags : uint8 ; namespace UE::Landscape { bool)",
    "insertText": "DoesPlatformSupportEditLayers(EShaderPlatform InShaderPlatform)"
  },
  {
    "label": "GetLandscapeToolTargetTypeAsFlags()",
    "kind": "Method",
    "detail": "Function (ELandscapeToolTargetTypeFlags)",
    "insertText": "GetLandscapeToolTargetTypeAsFlags(ELandscapeToolTargetType InTargetType)"
  },
  {
    "label": "GetLandscapeToolTargetTypeSingleFlagAsType()",
    "kind": "Method",
    "detail": "Function (ELandscapeToolTargetType)",
    "insertText": "GetLandscapeToolTargetTypeSingleFlagAsType(ELandscapeToolTargetTypeFlags InSingleFlag)"
  },
  {
    "label": "GetLandscapeToolTargetTypeFlagsAsString()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetLandscapeToolTargetTypeFlagsAsString(ELandscapeToolTargetTypeFlags InTargetTypeFlags)"
  },
  {
    "label": "GetTypeHash()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR struct FTextureCopyRequest { UTexture2D* Source = nullptr ; UTexture* Destination = nullptr ; int8 DestinationSlice = 0 ; } ; uint32)",
    "insertText": "GetTypeHash(const FTextureCopyRequest& InKey)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "operator(const FTextureCopyRequest& InEntryA, const FTextureCopyRequest& InEntryB)"
  },
  {
    "label": "FTextureCopyChannelMapping()",
    "kind": "Method",
    "detail": "Function (struct FTextureCopyChannelMapping {)",
    "insertText": "FTextureCopyChannelMapping()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (INDEX_NONE,INDEX_NONE,INDEX_NONE,INDEX_NONE } { } int8&)",
    "insertText": "operator(int32 Index)"
  },
  {
    "label": "ProcessTextureCopies()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ProcessTextureCopies()"
  },
  {
    "label": "GetSharedAssetsPath()",
    "kind": "Method",
    "detail": "Function (private : using FTextureCopyChannelMappingMap = TMap<FTextureCopyRequest,FTextureCopyChannelMapping> ; FTextureCopyChannelMappingMap CopyRequests ; } ; FString)",
    "insertText": "GetSharedAssetsPath(const FString& InPath)"
  },
  {
    "label": "GetSharedAssetsPath()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetSharedAssetsPath(const ULevel* InLevel)"
  },
  {
    "label": "GetLayerInfoObjectPackageName()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetLayerInfoObjectPackageName(const ULevel* InLevel, const FName& InLayerName, FName& OutLayerObjectName)"
  },
  {
    "label": "IsVisibilityLayer()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsVisibilityLayer(const ULandscapeLayerInfoObject* InLayerInfoObject)"
  },
  {
    "label": "FLayerInfoFinder()",
    "kind": "Method",
    "detail": "Function (struct FLayerInfoFinder {)",
    "insertText": "FLayerInfoFinder()"
  },
  {
    "label": "Find()",
    "kind": "Method",
    "detail": "Function (ULandscapeLayerInfoObject*)",
    "insertText": "Find(const FName& LayerName)"
  }
]