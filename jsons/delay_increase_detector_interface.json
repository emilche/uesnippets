[
  {
    "label": "DelayIncreaseDetectorInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DelayIncreaseDetectorInterface"
  },
  {
    "label": "DelayIncreaseDetectorInterface()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_CONGESTION_CONTROLLER_GOOG_CC_DELAY_INCREASE_DETECTOR_INTERFACE_H_ # define MODULES_CONGESTION_CONTROLLER_GOOG_CC_DELAY_INCREASE_DETECTOR_INTERFACE_H_ # include<stdint . h> # include \" api / network_state_predictor . h \" namespace webrtc { class DelayIncreaseDetectorInterface { public :)",
    "insertText": "DelayIncreaseDetectorInterface()"
  },
  {
    "label": "DelayIncreaseDetectorInterface()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "DelayIncreaseDetectorInterface(const DelayIncreaseDetectorInterface&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (DelayIncreaseDetectorInterface&)",
    "insertText": "operator(const DelayIncreaseDetectorInterface&)"
  },
  {
    "label": "Update()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Update(double recv_delta_ms, double send_delta_ms, int64_t send_time_ms, int64_t arrival_time_ms, size_t packet_size, bool calculated_deltas)"
  },
  {
    "label": "State()",
    "kind": "Method",
    "detail": "Function (BandwidthUsage)",
    "insertText": "State()"
  }
]