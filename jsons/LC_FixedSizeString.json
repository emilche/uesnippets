[
  {
    "label": "FixedSizeString",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FixedSizeString"
  },
  {
    "label": "FixedSizeString()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" LC_Platform . h \" # include \" LC_Foundation_Windows . h \" template<T,unsigned int N> class FixedSizeString { public : const unsigned int CAPACITY = N ;)",
    "insertText": "FixedSizeString(void)"
  },
  {
    "label": "FixedSizeString()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FixedSizeString(const T* other)"
  },
  {
    "label": "FixedSizeString()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FixedSizeString(const FixedSizeString<T, N>& other)"
  },
  {
    "label": "FixedSizeString()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FixedSizeString(const T* other, unsigned int length)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FixedSizeString<T,N>&)",
    "insertText": "operator(const FixedSizeString<T, N>& other)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FixedSizeString<T,N>&)",
    "insertText": "operator(const T* other)"
  },
  {
    "label": "ToLower()",
    "kind": "Method",
    "detail": "Function (FixedSizeString<T,N>)",
    "insertText": "ToLower(void)"
  },
  {
    "label": "ToUpper()",
    "kind": "Method",
    "detail": "Function (FixedSizeString<T,N>)",
    "insertText": "ToUpper(void)"
  },
  {
    "label": "GetLength()",
    "kind": "Method",
    "detail": "Function (unsigned int)",
    "insertText": "GetLength(void)"
  }
]