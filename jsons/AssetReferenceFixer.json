[
  {
    "label": "IFixer",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IFixer"
  },
  {
    "label": "IAssetReferenceFixer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IAssetReferenceFixer"
  },
  {
    "label": "IAssetReferenceFixer()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" AssetRegistry / AssetData . h \" # include \" Internationalization / Text . h \" namespace UE::DataValidation { struct IFixer ; } class IAssetReferenceFixer { public : ~)",
    "insertText": "IAssetReferenceFixer()"
  },
  {
    "label": "CreateFixer()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<UE::DataValidation::IFixer>)",
    "insertText": "CreateFixer(const FAssetData& AssetData)"
  },
  {
    "label": "GetFixerLabel()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetFixerLabel(const FAssetData& AssetData)"
  },
  {
    "label": "GetFixerLabelImpl()",
    "kind": "Method",
    "detail": "Function (FText FixerLabel =)",
    "insertText": "GetFixerLabelImpl(AssetData)"
  },
  {
    "label": "FromName()",
    "kind": "Method",
    "detail": "Function (FixerLabel =)",
    "insertText": "FromName(AssetData.AssetName)"
  },
  {
    "label": "GetFixerLabelImpl()",
    "kind": "Method",
    "detail": "Function (} return FixerLabel ; } protected : FText)",
    "insertText": "GetFixerLabelImpl(const FAssetData& AssetData)"
  }
]