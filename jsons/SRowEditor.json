[
  {
    "label": "FProperty",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FProperty"
  },
  {
    "label": "FStructOnScope",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStructOnScope"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "UDataTable",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UDataTable"
  },
  {
    "label": "UScriptStruct",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UScriptStruct"
  },
  {
    "label": "FPropertyChangedEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPropertyChangedEvent"
  },
  {
    "label": "SRowEditor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SRowEditor"
  },
  {
    "label": "UUserDefinedStruct",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UUserDefinedStruct"
  },
  {
    "label": "IStructureDetailsView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IStructureDetailsView"
  },
  {
    "label": "DECLARE_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" Containers / BitArray . h \" # include \" Containers / Set . h \" # include \" Containers / SparseArray . h \" # include \" Containers / UnrealString . h \" # include \" DataTableEditorUtils . h \" # include \" Delegates / Delegate . h \" # include \" HAL / PlatformCrt . h \" # include \" Input / Reply . h \" # include \" Internationalization / Text . h \" # include \" Kismet2 / StructureEditorUtils . h \" # include \" Layout / Visibility . h \" # include \" Misc / NotifyHook . h \" # include \" Misc / Optional . h \" # include \" Serialization / Archive . h \" # include \" Templates / SharedPointer . h \" # include \" Templates / TypeHash . h \" # include \" Templates / UnrealTemplate . h \" # include \" Types / SlateEnums . h \" # include \" UObject / NameTypes . h \" # include \" UObject / SoftObjectPtr . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Widgets / Input / SComboBox . h \" # include \" Widgets / SCompoundWidget . h \" class FProperty ; class FStructOnScope ; class SWidget ; class UDataTable ; class UScriptStruct ; struct FPropertyChangedEvent ;)",
    "insertText": "DECLARE_DELEGATE_OneParam(FOnRowModified, FName)"
  },
  {
    "label": "DECLARE_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DELEGATE_OneParam(FOnRowSelected, FName)"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (class SRowEditor : public SCompoundWidget,public FNotifyHook,public FStructureEditorUtils::INotifyOnStructChanged,public FDataTableEditorUtils::INotifyOnDataTableChanged { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SRowEditor)"
  },
  {
    "label": "SLATE_END_ARGS()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_END_ARGS() SRowEditor()"
  },
  {
    "label": "SRowEditor()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "SRowEditor()"
  },
  {
    "label": "NotifyPreChange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyPreChange(FProperty* PropertyAboutToChange)"
  },
  {
    "label": "NotifyPostChange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyPostChange(const FPropertyChangedEvent& PropertyChangedEvent, FProperty* PropertyThatChanged)"
  },
  {
    "label": "PreChange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PreChange(const class UUserDefinedStruct* Struct, FStructureEditorUtils::EStructureEditorChangeInfo Info)"
  },
  {
    "label": "PostChange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostChange(const class UUserDefinedStruct* Struct, FStructureEditorUtils::EStructureEditorChangeInfo Info)"
  },
  {
    "label": "PreChange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PreChange(const UDataTable* Changed, FDataTableEditorUtils::EDataTableChangeInfo Info)"
  },
  {
    "label": "PostChange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostChange(const UDataTable* Changed, FDataTableEditorUtils::EDataTableChangeInfo Info)"
  },
  {
    "label": "RefreshNameList()",
    "kind": "Method",
    "detail": "Function (FOnRowSelected RowSelectedCallback ; protected : TArray<TSharedPtr<FName>> CachedRowNames ; TSharedPtr<FStructOnScope> CurrentRow ; TSoftObjectPtr<UDataTable> DataTable ; TSharedPtr<class IStructureDetailsView> StructureDetailsView ; TSharedPtr<FName> SelectedName ; TSharedPtr<SComboBox<TSharedPtr<FName>>> RowComboBox ; void)",
    "insertText": "RefreshNameList()"
  },
  {
    "label": "CleanBeforeChange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CleanBeforeChange()"
  },
  {
    "label": "Restore()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Restore()"
  },
  {
    "label": "IsMoveRowUpEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsMoveRowUpEnabled()"
  },
  {
    "label": "IsMoveRowDownEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsMoveRowDownEnabled()"
  },
  {
    "label": "IsAddRowEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsAddRowEnabled()"
  },
  {
    "label": "IsRemoveRowEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsRemoveRowEnabled()"
  },
  {
    "label": "GetRenameVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "GetRenameVisibility()"
  },
  {
    "label": "GetScriptStruct()",
    "kind": "Method",
    "detail": "Function (UScriptStruct*)",
    "insertText": "GetScriptStruct()"
  },
  {
    "label": "GetCurrentName()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetCurrentName()"
  },
  {
    "label": "GetCurrentNameAsText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetCurrentNameAsText()"
  },
  {
    "label": "GetStructureDisplayName()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetStructureDisplayName()"
  },
  {
    "label": "OnGenerateWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "OnGenerateWidget(TSharedPtr<FName> InItem)"
  },
  {
    "label": "OnSelectionChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSelectionChanged(TSharedPtr<FName> InItem, ESelectInfo::Type InSeletionInfo)"
  },
  {
    "label": "OnAddClicked()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnAddClicked()"
  },
  {
    "label": "OnRemoveClicked()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnRemoveClicked()"
  },
  {
    "label": "OnMoveRowClicked()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnMoveRowClicked(FDataTableEditorUtils::ERowMoveDirection MoveDirection)"
  },
  {
    "label": "OnMoveToExtentClicked()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnMoveToExtentClicked(FDataTableEditorUtils::ERowMoveDirection MoveDirection)"
  },
  {
    "label": "OnRowRenamed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnRowRenamed(const FText& Text, ETextCommit::Type CommitType)"
  },
  {
    "label": "OnResetToDefaultClicked()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnResetToDefaultClicked()"
  },
  {
    "label": "GetResetToDefaultVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "GetResetToDefaultVisibility()"
  },
  {
    "label": "ConstructInternal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConstructInternal(UDataTable* Changed)"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (public : void)",
    "insertText": "Construct(const FArguments& InArgs, UDataTable* Changed)"
  },
  {
    "label": "SelectRow()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SelectRow(FName Name)"
  },
  {
    "label": "HandleUndoRedo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleUndoRedo()"
  }
]