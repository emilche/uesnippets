[
  {
    "label": "FMinimalSceneTextures",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMinimalSceneTextures"
  },
  {
    "label": "FSortedLightSetSceneInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSortedLightSetSceneInfo"
  },
  {
    "label": "FNaniteVisibilityQuery",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FNaniteVisibilityQuery"
  },
  {
    "label": "FViewInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FViewInfo"
  },
  {
    "label": "FProjectedShadowInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FProjectedShadowInfo"
  },
  {
    "label": "FVisibleLightInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVisibleLightInfo"
  },
  {
    "label": "FVirtualShadowMapCacheEntry",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVirtualShadowMapCacheEntry"
  },
  {
    "label": "FVirtualShadowMapArrayCacheManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVirtualShadowMapArrayCacheManager"
  },
  {
    "label": "FSortedLightSetSceneInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSortedLightSetSceneInfo"
  },
  {
    "label": "FVirtualShadowMapClipmap",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVirtualShadowMapClipmap"
  },
  {
    "label": "FScreenPassTexture",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FScreenPassTexture"
  },
  {
    "label": "FSingleLayerWaterPrePassResult",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSingleLayerWaterPrePassResult"
  },
  {
    "label": "FNaniteVisibilityResults",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNaniteVisibilityResults"
  },
  {
    "label": "FSceneRenderer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSceneRenderer"
  },
  {
    "label": "FSceneUniformBuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSceneUniformBuffer"
  },
  {
    "label": "FShaderCompilerEnvironment",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FShaderCompilerEnvironment"
  },
  {
    "label": "FFrontLayerTranslucencyData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFrontLayerTranslucencyData"
  },
  {
    "label": "FSceneInstanceCullingQuery",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSceneInstanceCullingQuery"
  },
  {
    "label": "FRenderer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRenderer"
  },
  {
    "label": "FPackedView",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPackedView"
  },
  {
    "label": "FPackedViewArray",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPackedViewArray"
  },
  {
    "label": "FRasterResults",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRasterResults"
  },
  {
    "label": "FVirtualShadowMap",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVirtualShadowMap"
  },
  {
    "label": "FVirtualShadowMapProjectionShaderData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FVirtualShadowMapProjectionShaderData"
  },
  {
    "label": "FVirtualShadowMapHZBMetadata",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FVirtualShadowMapHZBMetadata"
  },
  {
    "label": "FVirtualShadowMapVisualizeLightSearch",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FVirtualShadowMapVisualizeLightSearch"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FVirtualShadowMapArray",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVirtualShadowMapArray"
  },
  {
    "label": "DoesVSMWantFroxels()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DoesVSMWantFroxels(EShaderPlatform ShaderPlatform)"
  },
  {
    "label": "CalcTranslatedWorldToShadowUVMatrix()",
    "kind": "Method",
    "detail": "Function (FMatrix)",
    "insertText": "CalcTranslatedWorldToShadowUVMatrix(const FMatrix& TranslatedWorldToShadowView, const FMatrix& ViewToClip)"
  },
  {
    "label": "CalcTranslatedWorldToShadowUVNormalMatrix()",
    "kind": "Method",
    "detail": "Function (FMatrix)",
    "insertText": "CalcTranslatedWorldToShadowUVNormalMatrix(const FMatrix& TranslatedWorldToShadowView, const FMatrix& ViewToClip)"
  },
  {
    "label": "CheckLight()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CheckLight(const FLightSceneProxy* CheckProxy, int CheckVirtualShadowMapId)"
  },
  {
    "label": "ChooseLight()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ChooseLight()"
  },
  {
    "label": "FVirtualShadowMapArray()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FVirtualShadowMapArray(FScene& InScene)"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Initialize(\n\t\tFRDGBuilder& GraphBuilder,\n\t\tFVirtualShadowMapArrayCacheManager* InCacheManager,\n\t\tbool bInEnabled,\n\t\tconst FEngineShowFlags& EngineShowFlags)"
  },
  {
    "label": "Allocate()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "Allocate(bool bSinglePageShadowMap, int32 Count)"
  },
  {
    "label": "SetShaderDefines()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetShaderDefines(FShaderCompilerEnvironment& OutEnvironment)"
  },
  {
    "label": "MergeStaticPhysicalPages()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MergeStaticPhysicalPages(FRDGBuilder& GraphBuilder)"
  },
  {
    "label": "UpdatePhysicalPageAddresses()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdatePhysicalPageAddresses(FRDGBuilder& GraphBuilder)"
  },
  {
    "label": "BuildPageAllocations()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildPageAllocations(\n\t\tFRDGBuilder& GraphBuilder,\n\t\tconst FMinimalSceneTextures& SceneTextures,\n\t\tconst TConstArrayView<FViewInfo> &Views,\n\t\tconst FSortedLightSetSceneInfo& SortedLights, \n\t\tconst TConstArrayView<FVisibleLightInfo>& VisibleLightInfos,\n\t\tconst FSingleLayerWaterPrePassResult* SingleLayerWaterPrePassResult,\n\t\tconst FFrontLayerTranslucencyData& FrontLayerTranslucencyData,\n\t\tconst Froxel::FRenderer& FroxelRenderer,\n\t\tbool bAnyLocalLightsWithVSMs)"
  },
  {
    "label": "RenderVirtualShadowMapsNanite()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenderVirtualShadowMapsNanite(FRDGBuilder& GraphBuilder, FSceneRenderer& SceneRenderer, bool bUpdateNaniteStreaming, const FNaniteVisibilityQuery* VisibilityQuery, Nanite::FPackedViewArray* VirtualShadowMapViews, FSceneInstanceCullingQuery* SceneInstanceCullingQuery)"
  },
  {
    "label": "RenderVirtualShadowMapsNonNanite()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenderVirtualShadowMapsNonNanite(FRDGBuilder& GraphBuilder, FSceneUniformBuffer& SceneUniformBuffer, const TArray<FProjectedShadowInfo*, SceneRenderingAllocator>& VirtualSmMeshCommandPasses, TArrayView<FViewInfo> Views)"
  },
  {
    "label": "RenderDebugInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenderDebugInfo(FRDGBuilder& GraphBuilder, TArrayView<FViewInfo> Views)"
  },
  {
    "label": "LogStats()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LogStats(FRDGBuilder& GraphBuilder, const FViewInfo& View)"
  },
  {
    "label": "UpdateHZB()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateHZB(FRDGBuilder& GraphBuilder)"
  },
  {
    "label": "AddRenderViews()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "AddRenderViews(const FProjectedShadowInfo* ProjectedShadowInfo, TConstArrayView<FViewInfo> Views, float LODScaleFactor, bool bSetHzbParams, bool bUpdateHZBMetaData, bool bClampToNearPlane, TArray<Nanite::FPackedView, SceneRenderingAllocator>& OutVirtualShadowViews)"
  },
  {
    "label": "AddVisualizePass()",
    "kind": "Method",
    "detail": "Function (FScreenPassTexture)",
    "insertText": "AddVisualizePass(FRDGBuilder& GraphBuilder, const FViewInfo& View, int32 ViewIndex, EVSMVisualizationPostPass Pass, FScreenPassTexture& SceneColor, FScreenPassRenderTarget& Output)"
  },
  {
    "label": "InterpolateResolutionBias()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "InterpolateResolutionBias(float BiasNonMoving, float BiasMoving, float LightMobilityFactor)"
  },
  {
    "label": "UpdateVisualizeLight()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateVisualizeLight(\n\t\tconst TConstArrayView<FViewInfo> &Views,\n\t\tconst TConstArrayView<FVisibleLightInfo>& VisibleLightInfos)"
  },
  {
    "label": "AppendPhysicalPageList()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AppendPhysicalPageList(FRDGBuilder& GraphBuilder, bool bEmptyToAvailable)"
  },
  {
    "label": "AddRenderViews()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "AddRenderViews(const TSharedPtr<FVirtualShadowMapClipmap>& Clipmap, const FViewInfo* CullingView, float LODScaleFactor, bool bSetHzbParams, bool bUpdateHZBMetaData, TArray<Nanite::FPackedView, SceneRenderingAllocator>& OutVirtualShadowViews)"
  },
  {
    "label": "UpdateCachedUniformBuffers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateCachedUniformBuffers(FRDGBuilder& GraphBuilder)"
  }
]