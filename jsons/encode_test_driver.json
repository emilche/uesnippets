[
  {
    "label": "CodecFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CodecFactory"
  },
  {
    "label": "VideoSource",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "VideoSource"
  },
  {
    "label": "TestMode",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "TestMode"
  },
  {
    "label": "CxDataIterator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CxDataIterator"
  },
  {
    "label": "TwopassStatsStore",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TwopassStatsStore"
  },
  {
    "label": "Encoder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Encoder"
  },
  {
    "label": "vpx_scaling_mode",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "vpx_scaling_mode"
  },
  {
    "label": "vpx_svc_layer_id",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "vpx_svc_layer_id"
  },
  {
    "label": "vpx_svc_ref_frame_config",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "vpx_svc_ref_frame_config"
  },
  {
    "label": "vpx_svc_parameters",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "vpx_svc_parameters"
  },
  {
    "label": "vpx_svc_frame_drop",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "vpx_svc_frame_drop"
  },
  {
    "label": "vpx_svc_spatial_layer_sync",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "vpx_svc_spatial_layer_sync"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "EncoderTest",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "EncoderTest"
  },
  {
    "label": "to",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "to"
  },
  {
    "label": "vpx_codec_get_cx_data()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "vpx_codec_get_cx_data(encoder_, &iter_)"
  },
  {
    "label": "CxDataIterator()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "CxDataIterator(&encoder_)"
  },
  {
    "label": "InitEncoder()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitEncoder(VideoSource *video)"
  },
  {
    "label": "vpx_codec_get_preview_frame()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "vpx_codec_get_preview_frame(&encoder_)"
  },
  {
    "label": "EncodeFrame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EncodeFrame(VideoSource *video, vpx_enc_frame_flags_t frame_flags)"
  },
  {
    "label": "EncodeFrameInternal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EncodeFrameInternal(const VideoSource &video,\n                           vpx_enc_frame_flags_t frame_flags)"
  },
  {
    "label": "Flush()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Flush()"
  },
  {
    "label": "InitializeConfig()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeConfig()"
  },
  {
    "label": "SetMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetMode(TestMode mode)"
  },
  {
    "label": "RunLoop()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RunLoop(VideoSource *video)"
  },
  {
    "label": "MismatchHook()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MismatchHook(const vpx_image_t *img1, const vpx_image_t *img2)"
  }
]