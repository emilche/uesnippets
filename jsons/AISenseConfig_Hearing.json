[
  {
    "label": "FGameplayDebuggerCategory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGameplayDebuggerCategory"
  },
  {
    "label": "UAIPerceptionComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAIPerceptionComponent"
  },
  {
    "label": "UAISenseConfig_Hearing",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAISenseConfig_Hearing"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" Templates / SubclassOf . h \" # include \" Perception / AIPerceptionTypes . h \" # include \" Perception / AISense . h \" # include \" Perception / AISenseConfig . h \" # include \" Perception / AISense_Hearing . h \" # include \" AISenseConfig_Hearing . generated . h \" class FGameplayDebuggerCategory ; class UAIPerceptionComponent ;)",
    "insertText": "UCLASS(meta = (DisplayName = \"AI Hearing config\"), MinimalAPI)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() public: UPROPERTY(EditAnywhere, BlueprintReadOnly, Category = \"Sense\", NoClear, config)"
  },
  {
    "label": "GetSenseImplementation()",
    "kind": "Method",
    "detail": "Function (TSubclassOf<UAISense>)",
    "insertText": "GetSenseImplementation()"
  },
  {
    "label": "DescribeSelfToGameplayDebugger()",
    "kind": "Method",
    "detail": "Function (# if WITH_GAMEPLAY_DEBUGGER_MENU void)",
    "insertText": "DescribeSelfToGameplayDebugger(const UAIPerceptionComponent* PerceptionComponent, FGameplayDebuggerCategory* DebuggerCategory)"
  }
]