[
  {
    "label": "AddSimpleElementCollectorPass()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" SceneRendering . h \" template<PassParametersType> void)",
    "insertText": "AddSimpleElementCollectorPass(const FSimpleElementCollector& SimpleElementCollector, FRDGBuilder& GraphBuilder, PassParametersType* PassParameters, const FViewInfo& View, const FMeshPassProcessorRenderState& DrawRenderState)"
  },
  {
    "label": "AddPass()",
    "kind": "Method",
    "detail": "Function (GraphBuilder .)",
    "insertText": "AddPass(RDG_EVENT_NAME(\"EditorPrimitives\"), PassParameters, ERDGPassFlags::Raster, [&View, &SimpleElementCollector, DrawRenderState](FRHICommandListImmediate& RHICmdList) { RHICmdList.SetViewport(View.ViewRect.Min.X, View.ViewRect.Min.Y, 0.0f, View.ViewRect.Max.X, View.ViewRect.Max.Y, 1.0f); SimpleElementCollector.DrawBatchedElements(RHICmdList, DrawRenderState, View, EBlendModeFilter::OpaqueAndMasked, SDPG_World); SimpleElementCollector.DrawBatchedElements(RHICmdList, DrawRenderState, View, EBlendModeFilter::OpaqueAndMasked, SDPG_Foreground); })"
  },
  {
    "label": "AddSimpleElementCollectorPass()",
    "kind": "Method",
    "detail": "Function (} template<PassParametersType> void)",
    "insertText": "AddSimpleElementCollectorPass(const FSimpleElementCollector& SimpleElementCollector, FRDGBuilder& GraphBuilder, PassParametersType* PassParameters, const FViewInfo& View, const FMeshPassProcessorRenderState& DrawRenderState, ESceneDepthPriorityGroup SceneDepthPriorityGroup)"
  },
  {
    "label": "AddPass()",
    "kind": "Method",
    "detail": "Function (GraphBuilder .)",
    "insertText": "AddPass(RDG_EVENT_NAME(\"EditorPrimitives\"), PassParameters, ERDGPassFlags::Raster, [&View, &SimpleElementCollector, DrawRenderState, SceneDepthPriorityGroup](FRHICommandListImmediate& RHICmdList) { RHICmdList.SetViewport(View.ViewRect.Min.X, View.ViewRect.Min.Y, 0.0f, View.ViewRect.Max.X, View.ViewRect.Max.Y, 1.0f); SimpleElementCollector.DrawBatchedElements(RHICmdList, DrawRenderState, View, EBlendModeFilter::OpaqueAndMasked, SceneDepthPriorityGroup); })"
  },
  {
    "label": "AddBatchedElementsPass()",
    "kind": "Method",
    "detail": "Function (} template<PassParametersType> void)",
    "insertText": "AddBatchedElementsPass(const FBatchedElements& BatchedElements, FRDGBuilder& GraphBuilder, PassParametersType* PassParameters, const FViewInfo& View, const FMeshPassProcessorRenderState& DrawRenderState)"
  },
  {
    "label": "AddPass()",
    "kind": "Method",
    "detail": "Function (GraphBuilder .)",
    "insertText": "AddPass(RDG_EVENT_NAME(\"BatchedElements\"), PassParameters, ERDGPassFlags::Raster, [&View, &BatchedElements, DrawRenderState](FRHICommandListImmediate& RHICmdList) { RHICmdList.SetViewport(View.ViewRect.Min.X, View.ViewRect.Min.Y, 0.0f, View.ViewRect.Max.X, View.ViewRect.Max.Y, 1.0f); BatchedElements.Draw(RHICmdList, DrawRenderState, View.FeatureLevel, View, false); })"
  }
]