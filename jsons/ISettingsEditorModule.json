[
  {
    "label": "ISettingsContainer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISettingsContainer"
  },
  {
    "label": "ISettingsEditorModel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISettingsEditorModel"
  },
  {
    "label": "UDeveloperSettings",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UDeveloperSettings"
  },
  {
    "label": "ISettingsEditorModule",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISettingsEditorModule"
  },
  {
    "label": "DECLARE_DELEGATE_RetVal_OneParam()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Delegates / DelegateCombinations . h \" # include \" Modules / ModuleInterface . h \" # include \" Widgets / SWidget . h \" class ISettingsContainer ; class ISettingsEditorModel ; class UDeveloperSettings ;)",
    "insertText": "DECLARE_DELEGATE_RetVal_OneParam(bool, FShouldRegisterSettingsDelegate , UDeveloperSettings*)"
  },
  {
    "label": "CreateEditor()",
    "kind": "Method",
    "detail": "Function (class ISettingsEditorModule : public IModuleInterface { public : TSharedRef<SWidget>)",
    "insertText": "CreateEditor(const TSharedRef<ISettingsEditorModel>& Model)"
  },
  {
    "label": "CreateModel()",
    "kind": "Method",
    "detail": "Function (TSharedRef<ISettingsEditorModel>)",
    "insertText": "CreateModel(const TSharedRef<ISettingsContainer>& SettingsContainer)"
  },
  {
    "label": "OnApplicationRestartRequired()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnApplicationRestartRequired()"
  },
  {
    "label": "SetRestartApplicationCallback()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRestartApplicationCallback(FSimpleDelegate InRestartApplicationDelegate)"
  },
  {
    "label": "SetShouldRegisterSettingCallback()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetShouldRegisterSettingCallback(FShouldRegisterSettingsDelegate InShouldRegisterSettingDelegate)"
  },
  {
    "label": "ISettingsEditorModule()",
    "kind": "Method",
    "detail": "Function (public : ~)",
    "insertText": "ISettingsEditorModule()"
  }
]