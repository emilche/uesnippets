[
  {
    "label": "FBlueprintActionDatabaseRegistrar",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBlueprintActionDatabaseRegistrar"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "UK2Node_ExecutionSequence",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UK2Node_ExecutionSequence"
  },
  {
    "label": "FNodeHandlingFunctor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNodeHandlingFunctor"
  },
  {
    "label": "FKismetCompilerContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FKismetCompilerContext"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" CoreMinimal . h \" # include \" EdGraph / EdGraphNode . h \" # include \" EdGraph / EdGraphPin . h \" # include \" HAL / Platform . h \" # include \" Internationalization / Text . h \" # include \" K2Node . h \" # include \" K2Node_AddPinInterface . h \" # include \" KismetCompilerMisc . h \" # include \" Math / Color . h \" # include \" Textures / SlateIcon . h \" # include \" UObject / NameTypes . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / UObjectGlobals . h \" # include \" K2Node_ExecutionSequence . generated . h \" class FBlueprintActionDatabaseRegistrar ; class UObject ;)",
    "insertText": "UCLASS(MinimalAPI, meta = (Keywords = \"sequence\"))"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() virtual void AllocateDefaultPins()"
  },
  {
    "label": "GetTooltipText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetTooltipText()"
  },
  {
    "label": "GetNodeTitleColor()",
    "kind": "Method",
    "detail": "Function (FLinearColor)",
    "insertText": "GetNodeTitleColor()"
  },
  {
    "label": "GetNodeTitle()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetNodeTitle(ENodeTitleType::Type TitleType)"
  },
  {
    "label": "GetIconAndTint()",
    "kind": "Method",
    "detail": "Function (FSlateIcon)",
    "insertText": "GetIconAndTint(FLinearColor& OutColor)"
  },
  {
    "label": "ReallocatePinsDuringReconstruction()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReallocatePinsDuringReconstruction(TArray<UEdGraphPin*>& OldPins)"
  },
  {
    "label": "CreateNodeHandler()",
    "kind": "Method",
    "detail": "Function (class FNodeHandlingFunctor*)",
    "insertText": "CreateNodeHandler(class FKismetCompilerContext& CompilerContext)"
  },
  {
    "label": "GetMenuActions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetMenuActions(FBlueprintActionDatabaseRegistrar& ActionRegistrar)"
  },
  {
    "label": "GetMenuCategory()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetMenuCategory()"
  },
  {
    "label": "CanEverInsertExecutionPin()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanEverInsertExecutionPin()"
  },
  {
    "label": "GetUniquePinName()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetUniquePinName()"
  },
  {
    "label": "InsertPinIntoExecutionNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InsertPinIntoExecutionNode(UEdGraphPin* PinToInsertBefore, EPinInsertPosition Position)"
  },
  {
    "label": "RemovePinFromExecutionNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemovePinFromExecutionNode(UEdGraphPin* TargetPin)"
  },
  {
    "label": "CanRemoveExecutionPin()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanRemoveExecutionPin()"
  },
  {
    "label": "GetThenPinGivenIndex()",
    "kind": "Method",
    "detail": "Function (UEdGraphPin*)",
    "insertText": "GetThenPinGivenIndex(int32 Index)"
  },
  {
    "label": "GetPinNameGivenIndex()",
    "kind": "Method",
    "detail": "Function (private : FName)",
    "insertText": "GetPinNameGivenIndex(int32 Index)"
  }
]