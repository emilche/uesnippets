[
  {
    "label": "WgcDesktopFrame",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "WgcDesktopFrame"
  },
  {
    "label": "WgcDesktopFrame()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_DESKTOP_CAPTURE_WIN_WGC_DESKTOP_FRAME_H_ # define MODULES_DESKTOP_CAPTURE_WIN_WGC_DESKTOP_FRAME_H_ # include<d3d11 . h> # include<wrl / client . h> # include<memory> # include<vector> # include \" modules / desktop_capture / desktop_frame . h \" # include \" modules / desktop_capture / desktop_geometry . h \" namespace webrtc { class WgcDesktopFrame final : public DesktopFrame { public :)",
    "insertText": "WgcDesktopFrame(DesktopSize size, int stride, std::vector<uint8_t>&& image_data)"
  },
  {
    "label": "WgcDesktopFrame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WgcDesktopFrame(const WgcDesktopFrame&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (WgcDesktopFrame&)",
    "insertText": "operator(const WgcDesktopFrame&)"
  },
  {
    "label": "WgcDesktopFrame()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "WgcDesktopFrame()"
  }
]