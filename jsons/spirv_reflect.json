[
  {
    "label": "SpvReflectResult",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "SpvReflectResult"
  },
  {
    "label": "SpvReflectReturnFlagBits",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "SpvReflectReturnFlagBits"
  },
  {
    "label": "SpvReflectTypeFlagBits",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "SpvReflectTypeFlagBits"
  },
  {
    "label": "SpvReflectDecorationFlagBits",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "SpvReflectDecorationFlagBits"
  },
  {
    "label": "SpvReflectResourceType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "SpvReflectResourceType"
  },
  {
    "label": "SpvReflectFormat",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "SpvReflectFormat"
  },
  {
    "label": "SpvReflectVariableFlagBits",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "SpvReflectVariableFlagBits"
  },
  {
    "label": "SpvReflectDescriptorType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "SpvReflectDescriptorType"
  },
  {
    "label": "SpvReflectShaderStageFlagBits",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "SpvReflectShaderStageFlagBits"
  },
  {
    "label": "SpvReflectGenerator",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "SpvReflectGenerator"
  },
  {
    "label": "SpvReflectNumericTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SpvReflectNumericTraits"
  },
  {
    "label": "Scalar",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Scalar"
  },
  {
    "label": "Vector",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Vector"
  },
  {
    "label": "Matrix",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Matrix"
  },
  {
    "label": "SpvReflectImageTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SpvReflectImageTraits"
  },
  {
    "label": "SpvReflectArrayTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SpvReflectArrayTraits"
  },
  {
    "label": "SpvReflectBindingArrayTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SpvReflectBindingArrayTraits"
  },
  {
    "label": "SpvReflectTypeDescription",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SpvReflectTypeDescription"
  },
  {
    "label": "Traits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Traits"
  },
  {
    "label": "SpvReflectInterfaceVariable",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SpvReflectInterfaceVariable"
  },
  {
    "label": "SpvReflectBlockVariable",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SpvReflectBlockVariable"
  },
  {
    "label": "SpvReflectDescriptorBinding",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SpvReflectDescriptorBinding"
  },
  {
    "label": "SpvReflectDescriptorSet",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SpvReflectDescriptorSet"
  },
  {
    "label": "SpvReflectExecutionMode",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SpvReflectExecutionMode"
  },
  {
    "label": "SpvReflectEntryPoint",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SpvReflectEntryPoint"
  },
  {
    "label": "LocalSize",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "LocalSize"
  },
  {
    "label": "SpvReflectBindingAssociation",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SpvReflectBindingAssociation"
  },
  {
    "label": "SpvReflectShaderModule",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SpvReflectShaderModule"
  },
  {
    "label": "Internal",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Internal"
  },
  {
    "label": "ShaderModule",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ShaderModule"
  },
  {
    "label": "SPV_REFLECT_DEPRECATED()",
    "kind": "Method",
    "detail": "Function (# ifndef SPIRV_REFLECT_H # define SPIRV_REFLECT_H # include \" . / include / spirv / unified1 / spirv . h \" # include<stdint . h> # include<string . h> # ifdef _MSC_VER # define)",
    "insertText": "SPV_REFLECT_DEPRECATED(msg_str) __declspec(deprecated(\"This symbol is deprecated. Details: \" msg_str)) #elif defined(__clang__) #define SPV_REFLECT_DEPRECATED(msg_str) __attribute__((deprecated(msg_str))) #elif defined(__GNUC__) #if GCC_VERSION >= 40500 #define SPV_REFLECT_DEPRECATED(msg_str) __attribute__((deprecated(msg_str))) #else #define SPV_REFLECT_DEPRECATED(msg_str) __attribute__((deprecated)) #endif #else #define SPV_REFLECT_DEPRECATED(msg_str)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (SPV_REFLECT_RESULT_SUCCESS,SPV_REFLECT_RESULT_NOT_READY,SPV_REFLECT_RESULT_ERROR_PARSE_FAILED,SPV_REFLECT_RESULT_ERROR_ALLOC_FAILED,SPV_REFLECT_RESULT_ERROR_RANGE_EXCEEDED,SPV_REFLECT_RESULT_ERROR_NULL_POINTER,SPV_REFLECT_RESULT_ERROR_INTERNAL_ERROR,SPV_REFLECT_RESULT_ERROR_COUNT_MISMATCH,SPV_REFLECT_RESULT_ERROR_ELEMENT_NOT_FOUND,SPV_REFLECT_RESULT_ERROR_SPIRV_INVALID_CODE_SIZE,SPV_REFLECT_RESULT_ERROR_SPIRV_INVALID_MAGIC_NUMBER,SPV_REFLECT_RESULT_ERROR_SPIRV_UNEXPECTED_EOF,SPV_REFLECT_RESULT_ERROR_SPIRV_INVALID_ID_REFERENCE,SPV_REFLECT_RESULT_ERROR_SPIRV_SET_NUMBER_OVERFLOW,SPV_REFLECT_RESULT_ERROR_SPIRV_INVALID_STORAGE_CLASS,SPV_REFLECT_RESULT_ERROR_SPIRV_RECURSION,SPV_REFLECT_RESULT_ERROR_SPIRV_INVALID_INSTRUCTION,SPV_REFLECT_RESULT_ERROR_SPIRV_UNEXPECTED_BLOCK_DATA,SPV_REFLECT_RESULT_ERROR_SPIRV_INVALID_BLOCK_MEMBER_REFERENCE,SPV_REFLECT_RESULT_ERROR_SPIRV_INVALID_ENTRY_POINT,SPV_REFLECT_RESULT_ERROR_SPIRV_INVALID_EXECUTION_MODE,} SpvReflectResult ; typedef enum SpvReflectReturnFlagBits { SPV_REFLECT_RETURN_FLAG_SAMPLER_IMAGE_USAGE = 0 x00000001,} SpvReflectReturnFlagBits ; typedef uint32_t SpvReflectReturnFlags ; typedef enum SpvReflectTypeFlagBits { SPV_REFLECT_TYPE_FLAG_UNDEFINED = 0 x00000000,SPV_REFLECT_TYPE_FLAG_VOID = 0 x00000001,SPV_REFLECT_TYPE_FLAG_BOOL = 0 x00000002,SPV_REFLECT_TYPE_FLAG_INT = 0 x00000004,SPV_REFLECT_TYPE_FLAG_FLOAT = 0 x00000008,SPV_REFLECT_TYPE_FLAG_VECTOR = 0 x00000100,SPV_REFLECT_TYPE_FLAG_MATRIX = 0 x00000200,SPV_REFLECT_TYPE_FLAG_EXTERNAL_IMAGE = 0 x00010000,SPV_REFLECT_TYPE_FLAG_EXTERNAL_SAMPLER = 0 x00020000,SPV_REFLECT_TYPE_FLAG_EXTERNAL_SAMPLED_IMAGE = 0 x00040000,SPV_REFLECT_TYPE_FLAG_EXTERNAL_BLOCK = 0 x00080000,SPV_REFLECT_TYPE_FLAG_EXTERNAL_ACCELERATION_STRUCTURE = 0 x00100000,SPV_REFLECT_TYPE_FLAG_EXTERNAL_MASK = 0 x00FF0000,SPV_REFLECT_TYPE_FLAG_STRUCT = 0 x10000000,SPV_REFLECT_TYPE_FLAG_ARRAY = 0 x20000000,} SpvReflectTypeFlagBits ; typedef uint32_t SpvReflectTypeFlags ; typedef enum SpvReflectDecorationFlagBits { SPV_REFLECT_DECORATION_NONE = 0 x00000000,SPV_REFLECT_DECORATION_BLOCK = 0 x00000001,SPV_REFLECT_DECORATION_BUFFER_BLOCK = 0 x00000002,SPV_REFLECT_DECORATION_ROW_MAJOR = 0 x00000004,SPV_REFLECT_DECORATION_COLUMN_MAJOR = 0 x00000008,SPV_REFLECT_DECORATION_BUILT_IN = 0 x00000010,SPV_REFLECT_DECORATION_NOPERSPECTIVE = 0 x00000020,SPV_REFLECT_DECORATION_FLAT = 0 x00000040,SPV_REFLECT_DECORATION_NON_WRITABLE = 0 x00000080,SPV_REFLECT_DECORATION_RELAXED_PRECISION = 0 x00000100,} SpvReflectDecorationFlagBits ; typedef uint32_t SpvReflectDecorationFlags ; typedef enum SpvReflectResourceType { SPV_REFLECT_RESOURCE_FLAG_UNDEFINED = 0 x00000000,SPV_REFLECT_RESOURCE_FLAG_SAMPLER = 0 x00000001,SPV_REFLECT_RESOURCE_FLAG_CBV = 0 x00000002,SPV_REFLECT_RESOURCE_FLAG_SRV = 0 x00000004,SPV_REFLECT_RESOURCE_FLAG_UAV = 0 x00000008,} SpvReflectResourceType ; typedef enum SpvReflectFormat { SPV_REFLECT_FORMAT_UNDEFINED = 0,SPV_REFLECT_FORMAT_R32_UINT = 9 8,SPV_REFLECT_FORMAT_R32_SINT = 9 9,SPV_REFLECT_FORMAT_R32_SFLOAT = 1 0 0,SPV_REFLECT_FORMAT_R32G32_UINT = 1 0 1,SPV_REFLECT_FORMAT_R32G32_SINT = 1 0 2,SPV_REFLECT_FORMAT_R32G32_SFLOAT = 1 0 3,SPV_REFLECT_FORMAT_R32G32B32_UINT = 1 0 4,SPV_REFLECT_FORMAT_R32G32B32_SINT = 1 0 5,SPV_REFLECT_FORMAT_R32G32B32_SFLOAT = 1 0 6,SPV_REFLECT_FORMAT_R32G32B32A32_UINT = 1 0 7,SPV_REFLECT_FORMAT_R32G32B32A32_SINT = 1 0 8,SPV_REFLECT_FORMAT_R32G32B32A32_SFLOAT = 1 0 9,SPV_REFLECT_FORMAT_R64_UINT = 1 1 0,SPV_REFLECT_FORMAT_R64_SINT = 1 1 1,SPV_REFLECT_FORMAT_R64_SFLOAT = 1 1 2,SPV_REFLECT_FORMAT_R64G64_UINT = 1 1 3,SPV_REFLECT_FORMAT_R64G64_SINT = 1 1 4,SPV_REFLECT_FORMAT_R64G64_SFLOAT = 1 1 5,SPV_REFLECT_FORMAT_R64G64B64_UINT = 1 1 6,SPV_REFLECT_FORMAT_R64G64B64_SINT = 1 1 7,SPV_REFLECT_FORMAT_R64G64B64_SFLOAT = 1 1 8,SPV_REFLECT_FORMAT_R64G64B64A64_UINT = 1 1 9,SPV_REFLECT_FORMAT_R64G64B64A64_SINT = 1 2 0,SPV_REFLECT_FORMAT_R64G64B64A64_SFLOAT = 1 2 1,} SpvReflectFormat ; enum SpvReflectVariableFlagBits { SPV_REFLECT_VARIABLE_FLAGS_NONE = 0 x00000000,SPV_REFLECT_VARIABLE_FLAGS_UNUSED = 0 x00000001,} ; typedef uint32_t SpvReflectVariableFlags ; typedef enum SpvReflectDescriptorType { SPV_REFLECT_DESCRIPTOR_TYPE_SAMPLER = 0,SPV_REFLECT_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER = 1,SPV_REFLECT_DESCRIPTOR_TYPE_SAMPLED_IMAGE = 2,SPV_REFLECT_DESCRIPTOR_TYPE_STORAGE_IMAGE = 3,SPV_REFLECT_DESCRIPTOR_TYPE_UNIFORM_TEXEL_BUFFER = 4,SPV_REFLECT_DESCRIPTOR_TYPE_STORAGE_TEXEL_BUFFER = 5,SPV_REFLECT_DESCRIPTOR_TYPE_UNIFORM_BUFFER = 6,SPV_REFLECT_DESCRIPTOR_TYPE_STORAGE_BUFFER = 7,SPV_REFLECT_DESCRIPTOR_TYPE_UNIFORM_BUFFER_DYNAMIC = 8,SPV_REFLECT_DESCRIPTOR_TYPE_STORAGE_BUFFER_DYNAMIC = 9,SPV_REFLECT_DESCRIPTOR_TYPE_INPUT_ATTACHMENT = 1 0,SPV_REFLECT_DESCRIPTOR_TYPE_ACCELERATION_STRUCTURE_KHR = 1 0 0 0 1 5 0 0 0 0 } SpvReflectDescriptorType ; typedef enum SpvReflectShaderStageFlagBits { SPV_REFLECT_SHADER_STAGE_VERTEX_BIT = 0 x00000001,SPV_REFLECT_SHADER_STAGE_TESSELLATION_CONTROL_BIT = 0 x00000002,SPV_REFLECT_SHADER_STAGE_TESSELLATION_EVALUATION_BIT = 0 x00000004,SPV_REFLECT_SHADER_STAGE_GEOMETRY_BIT = 0 x00000008,SPV_REFLECT_SHADER_STAGE_FRAGMENT_BIT = 0 x00000010,SPV_REFLECT_SHADER_STAGE_COMPUTE_BIT = 0 x00000020,SPV_REFLECT_SHADER_STAGE_TASK_BIT_NV = 0 x00000040,SPV_REFLECT_SHADER_STAGE_MESH_BIT_NV = 0 x00000080,SPV_REFLECT_SHADER_STAGE_RAYGEN_BIT_KHR = 0 x00000100,SPV_REFLECT_SHADER_STAGE_ANY_HIT_BIT_KHR = 0 x00000200,SPV_REFLECT_SHADER_STAGE_CLOSEST_HIT_BIT_KHR = 0 x00000400,SPV_REFLECT_SHADER_STAGE_MISS_BIT_KHR = 0 x00000800,SPV_REFLECT_SHADER_STAGE_INTERSECTION_BIT_KHR = 0 x00001000,SPV_REFLECT_SHADER_STAGE_CALLABLE_BIT_KHR = 0 x00002000,} SpvReflectShaderStageFlagBits ; typedef enum SpvReflectGenerator { SPV_REFLECT_GENERATOR_KHRONOS_LLVM_SPIRV_TRANSLATOR = 6,SPV_REFLECT_GENERATOR_KHRONOS_SPIRV_TOOLS_ASSEMBLER = 7,SPV_REFLECT_GENERATOR_KHRONOS_GLSLANG_REFERENCE_FRONT_END = 8,SPV_REFLECT_GENERATOR_GOOGLE_SHADERC_OVER_GLSLANG = 1 3,SPV_REFLECT_GENERATOR_GOOGLE_SPIREGG = 1 4,SPV_REFLECT_GENERATOR_GOOGLE_RSPIRV = 1 5,SPV_REFLECT_GENERATOR_X_LEGEND_MESA_MESAIR_SPIRV_TRANSLATOR = 1 6,SPV_REFLECT_GENERATOR_KHRONOS_SPIRV_TOOLS_LINKER = 1 7,SPV_REFLECT_GENERATOR_WINE_VKD3D_SHADER_COMPILER = 1 8,SPV_REFLECT_GENERATOR_CLAY_CLAY_SHADER_COMPILER = 1 9,} SpvReflectGenerator ; enum { SPV_REFLECT_MAX_ARRAY_DIMS = 3 2,SPV_REFLECT_MAX_DESCRIPTOR_SETS = 6 4,} ; enum { SPV_REFLECT_BINDING_NUMBER_DONT_CHANGE = ~ 0,SPV_REFLECT_SET_NUMBER_DONT_CHANGE = ~ 0 } ; typedef struct SpvReflectNumericTraits { struct Scalar { uint32_t width ; uint32_t signedness ; } scalar ; struct Vector { uint32_t component_count ; } vector ; struct Matrix { uint32_t column_count ; uint32_t row_count ; uint32_t stride ; } matrix ; } SpvReflectNumericTraits ; typedef struct SpvReflectImageTraits { SpvDim dim ; uint32_t depth ; uint32_t arrayed ; uint32_t ms ; uint32_t sampled ; SpvImageFormat image_format ; } SpvReflectImageTraits ; typedef struct SpvReflectArrayTraits { uint32_t dims_count ; uint32_t dims [ SPV_REFLECT_MAX_ARRAY_DIMS ] ; uint32_t stride ; } SpvReflectArrayTraits ; typedef struct SpvReflectBindingArrayTraits { uint32_t dims_count ; uint32_t dims [ SPV_REFLECT_MAX_ARRAY_DIMS ] ; } SpvReflectBindingArrayTraits ; typedef struct SpvReflectTypeDescription { uint32_t id ; SpvOp op ; const char* type_name ; const char* struct_member_name ; SpvStorageClass storage_class ; SpvReflectTypeFlags type_flags ; SpvReflectDecorationFlags decoration_flags ; struct Traits { SpvReflectNumericTraits numeric ; SpvReflectImageTraits image ; SpvReflectArrayTraits array ; } traits ; uint32_t member_count ; struct SpvReflectTypeDescription* members ; } SpvReflectTypeDescription ; typedef struct SpvReflectInterfaceVariable { uint32_t spirv_id ; const char* name ; uint32_t location ; SpvStorageClass storage_class ; const char* semantic ; SpvReflectDecorationFlags decoration_flags ; SpvBuiltIn built_in ; SpvReflectNumericTraits numeric ; SpvReflectArrayTraits array ; uint32_t member_count ; struct SpvReflectInterfaceVariable* members ; SpvReflectFormat format ; uint32_t sampled_image_count ; struct SpvReflectInterfaceVariable** sampled_image_refs ; SpvReflectTypeDescription* type_description ; struct { uint32_t location ; } word_offset ; } SpvReflectInterfaceVariable ; typedef struct SpvReflectBlockVariable { uint32_t spirv_id ; const char* name ; uint32_t offset ; uint32_t absolute_offset ; uint32_t size ; uint32_t padded_size ; SpvReflectDecorationFlags decoration_flags ; SpvReflectNumericTraits numeric ; SpvReflectArrayTraits array ; SpvReflectVariableFlags flags ; uint32_t member_count ; struct SpvReflectBlockVariable* members ; SpvReflectTypeDescription* type_description ; } SpvReflectBlockVariable ; typedef struct SpvReflectDescriptorBinding { uint32_t spirv_id ; const char* name ; uint32_t binding ; uint32_t input_attachment_index ; uint32_t set ; SpvReflectDescriptorType descriptor_type ; SpvReflectResourceType resource_type ; SpvReflectImageTraits image ; SpvReflectBlockVariable block ; SpvReflectBindingArrayTraits array ; uint32_t count ; uint32_t accessed ; uint32_t uav_counter_id ; struct SpvReflectDescriptorBinding* uav_counter_binding ; SpvReflectTypeDescription* type_description ; uint32_t usage_binding_count ; struct SpvReflectDescriptorBinding** usage_bindings ; struct { uint32_t binding ; uint32_t set ; } word_offset ; } SpvReflectDescriptorBinding ; typedef struct SpvReflectDescriptorSet { uint32_t set ; uint32_t binding_count ; SpvReflectDescriptorBinding** bindings ; } SpvReflectDescriptorSet ; typedef struct SpvReflectExecutionMode { uint32_t id ; SpvExecutionMode mode ; uint32_t operands_count ; uint32_t* operands ; } SpvReflectExecutionMode ; typedef struct SpvReflectEntryPoint { const char* name ; uint32_t id ; SpvExecutionModel spirv_execution_model ; SpvReflectShaderStageFlagBits shader_stage ; uint32_t execution_modes_count ; SpvReflectExecutionMode* execution_modes ; uint32_t input_variable_count ; SpvReflectInterfaceVariable** input_variables ; uint32_t output_variable_count ; SpvReflectInterfaceVariable** output_variables ; uint32_t interface_variable_count ; SpvReflectInterfaceVariable* interface_variables ; uint32_t descriptor_set_count ; SpvReflectDescriptorSet* descriptor_sets ; uint32_t used_uniform_count ; uint32_t* used_uniforms ; uint32_t used_push_constant_count ; uint32_t* used_push_constants ; struct { uint32_t name ; } word_offset ; struct { uint32_t name ; } word_count ; uint32_t name_length_with_terminator ; struct LocalSize { uint32_t x ; uint32_t y ; uint32_t z ; } local_size ; } SpvReflectEntryPoint ; typedef struct SpvReflectBindingAssociation { SpvReflectDescriptorBinding* resource ; size_t usage_binding_count ; } SpvReflectBindingAssociation ; typedef struct SpvReflectShaderModule { SpvReflectGenerator generator ; const char* entry_point_name ; uint32_t entry_point_id ; uint32_t entry_point_count ; SpvReflectEntryPoint* entry_points ; SpvSourceLanguage source_language ; uint32_t source_language_version ; const char* source_file ; const char* source_source ; SpvExecutionModel spirv_execution_model ; SpvReflectShaderStageFlagBits shader_stage ; uint32_t descriptor_binding_count ; SpvReflectDescriptorBinding* descriptor_bindings ; uint32_t descriptor_set_count ; SpvReflectDescriptorSet descriptor_sets [ SPV_REFLECT_MAX_DESCRIPTOR_SETS ] ; uint32_t input_variable_count ; SpvReflectInterfaceVariable** input_variables ; uint32_t output_variable_count ; SpvReflectInterfaceVariable** output_variables ; uint32_t interface_variable_count ; SpvReflectInterfaceVariable* interface_variables ; uint32_t push_constant_block_count ; SpvReflectBlockVariable* push_constant_blocks ; uint32_t execution_modes_count ; SpvReflectExecutionMode* execution_modes ; struct Internal { size_t spirv_size ; uint32_t* spirv_code ; uint32_t spirv_word_count ; size_t type_description_count ; SpvReflectTypeDescription* type_descriptions ; SpvReflectBindingAssociation* binding_associations ; size_t binding_association_count ; SpvReflectDescriptorBinding** usage_bindings ; }* _internal ; } SpvReflectShaderModule ; # if)",
    "insertText": "defined(__cplusplus)"
  },
  {
    "label": "spvReflectCreateShaderModule()",
    "kind": "Method",
    "detail": "Function (# endif SpvReflectResult)",
    "insertText": "spvReflectCreateShaderModule(size_t size, const void* p_code, SpvReflectShaderModule* p_module, SpvReflectReturnFlags flags)"
  },
  {
    "label": "SPV_REFLECT_DEPRECATED()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SPV_REFLECT_DEPRECATED(\"renamed to spvReflectCreateShaderModule\") SpvReflectResult spvReflectGetShaderModule( size_t size, const void* p_code, SpvReflectShaderModule* p_module)"
  },
  {
    "label": "spvReflectDestroyShaderModule()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "spvReflectDestroyShaderModule(SpvReflectShaderModule* p_module)"
  },
  {
    "label": "spvReflectGetCodeSize()",
    "kind": "Method",
    "detail": "Function (uint32_t)",
    "insertText": "spvReflectGetCodeSize(const SpvReflectShaderModule* p_module)"
  },
  {
    "label": "spvReflectGetCode()",
    "kind": "Method",
    "detail": "Function (const uint32_t*)",
    "insertText": "spvReflectGetCode(const SpvReflectShaderModule* p_module)"
  },
  {
    "label": "spvReflectGetEntryPoint()",
    "kind": "Method",
    "detail": "Function (const SpvReflectEntryPoint*)",
    "insertText": "spvReflectGetEntryPoint(const SpvReflectShaderModule* p_module, const char* entry_point)"
  },
  {
    "label": "spvReflectEnumerateDescriptorBindings()",
    "kind": "Method",
    "detail": "Function (SpvReflectResult)",
    "insertText": "spvReflectEnumerateDescriptorBindings(const SpvReflectShaderModule* p_module, uint32_t* p_count, SpvReflectDescriptorBinding** pp_bindings)"
  },
  {
    "label": "spvReflectEnumerateEntryPointDescriptorBindings()",
    "kind": "Method",
    "detail": "Function (SpvReflectResult)",
    "insertText": "spvReflectEnumerateEntryPointDescriptorBindings(const SpvReflectShaderModule* p_module, const char* entry_point, uint32_t* p_count, SpvReflectDescriptorBinding** pp_bindings)"
  },
  {
    "label": "spvReflectEnumerateDescriptorSets()",
    "kind": "Method",
    "detail": "Function (SpvReflectResult)",
    "insertText": "spvReflectEnumerateDescriptorSets(const SpvReflectShaderModule* p_module, uint32_t* p_count, SpvReflectDescriptorSet** pp_sets)"
  },
  {
    "label": "spvReflectEnumerateEntryPointDescriptorSets()",
    "kind": "Method",
    "detail": "Function (SpvReflectResult)",
    "insertText": "spvReflectEnumerateEntryPointDescriptorSets(const SpvReflectShaderModule* p_module, const char* entry_point, uint32_t* p_count, SpvReflectDescriptorSet** pp_sets)"
  },
  {
    "label": "spvReflectEnumerateInterfaceVariables()",
    "kind": "Method",
    "detail": "Function (SpvReflectResult)",
    "insertText": "spvReflectEnumerateInterfaceVariables(const SpvReflectShaderModule* p_module, uint32_t* p_count, SpvReflectInterfaceVariable** pp_variables)"
  },
  {
    "label": "spvReflectEnumerateEntryPointInterfaceVariables()",
    "kind": "Method",
    "detail": "Function (SpvReflectResult)",
    "insertText": "spvReflectEnumerateEntryPointInterfaceVariables(const SpvReflectShaderModule* p_module, const char* entry_point, uint32_t* p_count, SpvReflectInterfaceVariable** pp_variables)"
  },
  {
    "label": "spvReflectEnumerateInputVariables()",
    "kind": "Method",
    "detail": "Function (SpvReflectResult)",
    "insertText": "spvReflectEnumerateInputVariables(const SpvReflectShaderModule* p_module, uint32_t* p_count, SpvReflectInterfaceVariable** pp_variables)"
  },
  {
    "label": "spvReflectEnumerateEntryPointInputVariables()",
    "kind": "Method",
    "detail": "Function (SpvReflectResult)",
    "insertText": "spvReflectEnumerateEntryPointInputVariables(const SpvReflectShaderModule* p_module, const char* entry_point, uint32_t* p_count, SpvReflectInterfaceVariable** pp_variables)"
  },
  {
    "label": "spvReflectEnumerateOutputVariables()",
    "kind": "Method",
    "detail": "Function (SpvReflectResult)",
    "insertText": "spvReflectEnumerateOutputVariables(const SpvReflectShaderModule* p_module, uint32_t* p_count, SpvReflectInterfaceVariable** pp_variables)"
  },
  {
    "label": "spvReflectEnumerateEntryPointOutputVariables()",
    "kind": "Method",
    "detail": "Function (SpvReflectResult)",
    "insertText": "spvReflectEnumerateEntryPointOutputVariables(const SpvReflectShaderModule* p_module, const char* entry_point, uint32_t* p_count, SpvReflectInterfaceVariable** pp_variables)"
  },
  {
    "label": "spvReflectEnumerateExecutionModes()",
    "kind": "Method",
    "detail": "Function (SpvReflectResult)",
    "insertText": "spvReflectEnumerateExecutionModes(const SpvReflectShaderModule* p_module, uint32_t* p_count, SpvReflectExecutionMode** pp_modes)"
  },
  {
    "label": "spvReflectEnumerateEntryPointExecutionModes()",
    "kind": "Method",
    "detail": "Function (SpvReflectResult)",
    "insertText": "spvReflectEnumerateEntryPointExecutionModes(const SpvReflectShaderModule* p_module, const char* entry_point, uint32_t* p_count, SpvReflectExecutionMode** pp_modes)"
  },
  {
    "label": "spvReflectEnumeratePushConstantBlocks()",
    "kind": "Method",
    "detail": "Function (SpvReflectResult)",
    "insertText": "spvReflectEnumeratePushConstantBlocks(const SpvReflectShaderModule* p_module, uint32_t* p_count, SpvReflectBlockVariable** pp_blocks)"
  },
  {
    "label": "SPV_REFLECT_DEPRECATED()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SPV_REFLECT_DEPRECATED(\"renamed to spvReflectEnumeratePushConstantBlocks\") SpvReflectResult spvReflectEnumeratePushConstants( const SpvReflectShaderModule* p_module, uint32_t* p_count, SpvReflectBlockVariable** pp_blocks)"
  },
  {
    "label": "spvReflectEnumerateEntryPointPushConstantBlocks()",
    "kind": "Method",
    "detail": "Function (SpvReflectResult)",
    "insertText": "spvReflectEnumerateEntryPointPushConstantBlocks(const SpvReflectShaderModule* p_module, const char* entry_point, uint32_t* p_count, SpvReflectBlockVariable** pp_blocks)"
  },
  {
    "label": "spvReflectGetDescriptorBinding()",
    "kind": "Method",
    "detail": "Function (const SpvReflectDescriptorBinding*)",
    "insertText": "spvReflectGetDescriptorBinding(const SpvReflectShaderModule* p_module, uint32_t binding_number, uint32_t set_number, SpvReflectResult* p_result)"
  },
  {
    "label": "spvReflectGetEntryPointDescriptorBinding()",
    "kind": "Method",
    "detail": "Function (const SpvReflectDescriptorBinding*)",
    "insertText": "spvReflectGetEntryPointDescriptorBinding(const SpvReflectShaderModule* p_module, const char* entry_point, uint32_t binding_number, uint32_t set_number, SpvReflectResult* p_result)"
  },
  {
    "label": "spvReflectGetDescriptorSet()",
    "kind": "Method",
    "detail": "Function (const SpvReflectDescriptorSet*)",
    "insertText": "spvReflectGetDescriptorSet(const SpvReflectShaderModule* p_module, uint32_t set_number, SpvReflectResult* p_result)"
  },
  {
    "label": "spvReflectGetEntryPointDescriptorSet()",
    "kind": "Method",
    "detail": "Function (const SpvReflectDescriptorSet*)",
    "insertText": "spvReflectGetEntryPointDescriptorSet(const SpvReflectShaderModule* p_module, const char* entry_point, uint32_t set_number, SpvReflectResult* p_result)"
  },
  {
    "label": "spvReflectGetInputVariableByLocation()",
    "kind": "Method",
    "detail": "Function (const SpvReflectInterfaceVariable*)",
    "insertText": "spvReflectGetInputVariableByLocation(const SpvReflectShaderModule* p_module, uint32_t location, SpvReflectResult* p_result)"
  },
  {
    "label": "SPV_REFLECT_DEPRECATED()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SPV_REFLECT_DEPRECATED(\"renamed to spvReflectGetInputVariableByLocation\") const SpvReflectInterfaceVariable* spvReflectGetInputVariable( const SpvReflectShaderModule* p_module, uint32_t location, SpvReflectResult* p_result)"
  },
  {
    "label": "spvReflectGetEntryPointInputVariableByLocation()",
    "kind": "Method",
    "detail": "Function (const SpvReflectInterfaceVariable*)",
    "insertText": "spvReflectGetEntryPointInputVariableByLocation(const SpvReflectShaderModule* p_module, const char* entry_point, uint32_t location, SpvReflectResult* p_result)"
  },
  {
    "label": "spvReflectGetInputVariableBySemantic()",
    "kind": "Method",
    "detail": "Function (const SpvReflectInterfaceVariable*)",
    "insertText": "spvReflectGetInputVariableBySemantic(const SpvReflectShaderModule* p_module, const char* semantic, SpvReflectResult* p_result)"
  },
  {
    "label": "spvReflectGetEntryPointInputVariableBySemantic()",
    "kind": "Method",
    "detail": "Function (const SpvReflectInterfaceVariable*)",
    "insertText": "spvReflectGetEntryPointInputVariableBySemantic(const SpvReflectShaderModule* p_module, const char* entry_point, const char* semantic, SpvReflectResult* p_result)"
  },
  {
    "label": "spvReflectGetOutputVariableByLocation()",
    "kind": "Method",
    "detail": "Function (const SpvReflectInterfaceVariable*)",
    "insertText": "spvReflectGetOutputVariableByLocation(const SpvReflectShaderModule* p_module, uint32_t location, SpvReflectResult* p_result)"
  },
  {
    "label": "SPV_REFLECT_DEPRECATED()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SPV_REFLECT_DEPRECATED(\"renamed to spvReflectGetOutputVariableByLocation\") const SpvReflectInterfaceVariable* spvReflectGetOutputVariable( const SpvReflectShaderModule* p_module, uint32_t location, SpvReflectResult* p_result)"
  },
  {
    "label": "spvReflectGetEntryPointOutputVariableByLocation()",
    "kind": "Method",
    "detail": "Function (const SpvReflectInterfaceVariable*)",
    "insertText": "spvReflectGetEntryPointOutputVariableByLocation(const SpvReflectShaderModule* p_module, const char* entry_point, uint32_t location, SpvReflectResult* p_result)"
  },
  {
    "label": "spvReflectGetOutputVariableBySemantic()",
    "kind": "Method",
    "detail": "Function (const SpvReflectInterfaceVariable*)",
    "insertText": "spvReflectGetOutputVariableBySemantic(const SpvReflectShaderModule* p_module, const char* semantic, SpvReflectResult* p_result)"
  },
  {
    "label": "spvReflectGetEntryPointOutputVariableBySemantic()",
    "kind": "Method",
    "detail": "Function (const SpvReflectInterfaceVariable*)",
    "insertText": "spvReflectGetEntryPointOutputVariableBySemantic(const SpvReflectShaderModule* p_module, const char* entry_point, const char* semantic, SpvReflectResult* p_result)"
  },
  {
    "label": "spvReflectGetPushConstantBlock()",
    "kind": "Method",
    "detail": "Function (const SpvReflectBlockVariable*)",
    "insertText": "spvReflectGetPushConstantBlock(const SpvReflectShaderModule* p_module, uint32_t index, SpvReflectResult* p_result)"
  },
  {
    "label": "SPV_REFLECT_DEPRECATED()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SPV_REFLECT_DEPRECATED(\"renamed to spvReflectGetPushConstantBlock\") const SpvReflectBlockVariable* spvReflectGetPushConstant( const SpvReflectShaderModule* p_module, uint32_t index, SpvReflectResult* p_result)"
  },
  {
    "label": "spvReflectGetEntryPointPushConstantBlock()",
    "kind": "Method",
    "detail": "Function (const SpvReflectBlockVariable*)",
    "insertText": "spvReflectGetEntryPointPushConstantBlock(const SpvReflectShaderModule* p_module, const char* entry_point, SpvReflectResult* p_result)"
  },
  {
    "label": "spvReflectChangeDescriptorBindingNumbers()",
    "kind": "Method",
    "detail": "Function (SpvReflectResult)",
    "insertText": "spvReflectChangeDescriptorBindingNumbers(SpvReflectShaderModule* p_module, const SpvReflectDescriptorBinding* p_binding, uint32_t new_binding_number, uint32_t new_set_number)"
  },
  {
    "label": "SPV_REFLECT_DEPRECATED()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SPV_REFLECT_DEPRECATED(\"Renamed to spvReflectChangeDescriptorBindingNumbers\") SpvReflectResult spvReflectChangeDescriptorBindingNumber( SpvReflectShaderModule* p_module, const SpvReflectDescriptorBinding* p_descriptor_binding, uint32_t new_binding_number, uint32_t optional_new_set_number)"
  },
  {
    "label": "spvReflectChangeDescriptorSetNumber()",
    "kind": "Method",
    "detail": "Function (SpvReflectResult)",
    "insertText": "spvReflectChangeDescriptorSetNumber(SpvReflectShaderModule* p_module, const SpvReflectDescriptorSet* p_set, uint32_t new_set_number)"
  },
  {
    "label": "spvReflectChangeInputVariableLocation()",
    "kind": "Method",
    "detail": "Function (SpvReflectResult)",
    "insertText": "spvReflectChangeInputVariableLocation(SpvReflectShaderModule* p_module, const SpvReflectInterfaceVariable* p_input_variable, uint32_t new_location)"
  },
  {
    "label": "spvReflectChangeOutputVariableLocation()",
    "kind": "Method",
    "detail": "Function (SpvReflectResult)",
    "insertText": "spvReflectChangeOutputVariableLocation(SpvReflectShaderModule* p_module, const SpvReflectInterfaceVariable* p_output_variable, uint32_t new_location)"
  },
  {
    "label": "spvReflectChangeEntryPointName()",
    "kind": "Method",
    "detail": "Function (SpvReflectResult)",
    "insertText": "spvReflectChangeEntryPointName(SpvReflectShaderModule* p_module, uint32_t index, const char* new_name)"
  },
  {
    "label": "spvReflectSourceLanguage()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "spvReflectSourceLanguage(SpvSourceLanguage source_lang)"
  },
  {
    "label": "ShaderModule()",
    "kind": "Method",
    "detail": "Function (class ShaderModule { public :)",
    "insertText": "ShaderModule()"
  },
  {
    "label": "ShaderModule()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ShaderModule(size_t size, const void* p_code, SpvReflectReturnFlags flags = 0)"
  },
  {
    "label": "ShaderModule()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ShaderModule(const std::vector<uint8_t>& code, SpvReflectReturnFlags flags = 0)"
  },
  {
    "label": "ShaderModule()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ShaderModule(const std::vector<uint32_t>& code, SpvReflectReturnFlags flags = 0)"
  },
  {
    "label": "GetResult()",
    "kind": "Method",
    "detail": "Function (SpvReflectResult)",
    "insertText": "GetResult()"
  },
  {
    "label": "GetShaderModule()",
    "kind": "Method",
    "detail": "Function (const SpvReflectShaderModule&)",
    "insertText": "GetShaderModule()"
  },
  {
    "label": "GetCodeSize()",
    "kind": "Method",
    "detail": "Function (uint32_t)",
    "insertText": "GetCodeSize()"
  },
  {
    "label": "GetCode()",
    "kind": "Method",
    "detail": "Function (const uint32_t*)",
    "insertText": "GetCode()"
  },
  {
    "label": "GetEntryPointName()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "GetEntryPointName()"
  },
  {
    "label": "GetSourceFile()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "GetSourceFile()"
  },
  {
    "label": "GetEntryPointCount()",
    "kind": "Method",
    "detail": "Function (uint32_t)",
    "insertText": "GetEntryPointCount()"
  },
  {
    "label": "GetEntryPointName()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "GetEntryPointName(uint32_t index)"
  },
  {
    "label": "GetEntryPointShaderStage()",
    "kind": "Method",
    "detail": "Function (SpvReflectShaderStageFlagBits)",
    "insertText": "GetEntryPointShaderStage(uint32_t index)"
  },
  {
    "label": "GetShaderStage()",
    "kind": "Method",
    "detail": "Function (SpvReflectShaderStageFlagBits)",
    "insertText": "GetShaderStage()"
  },
  {
    "label": "SPV_REFLECT_DEPRECATED()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SPV_REFLECT_DEPRECATED(\"Renamed to GetShaderStage\") SpvReflectShaderStageFlagBits GetVulkanShaderStage()"
  },
  {
    "label": "EnumerateDescriptorBindings()",
    "kind": "Method",
    "detail": "Function (} SpvReflectResult)",
    "insertText": "EnumerateDescriptorBindings(uint32_t* p_count, SpvReflectDescriptorBinding** pp_bindings)"
  },
  {
    "label": "EnumerateEntryPointDescriptorBindings()",
    "kind": "Method",
    "detail": "Function (SpvReflectResult)",
    "insertText": "EnumerateEntryPointDescriptorBindings(const char* entry_point, uint32_t* p_count, SpvReflectDescriptorBinding** pp_bindings)"
  },
  {
    "label": "EnumerateDescriptorSets()",
    "kind": "Method",
    "detail": "Function (SpvReflectResult)",
    "insertText": "EnumerateDescriptorSets(uint32_t* p_count, SpvReflectDescriptorSet** pp_sets)"
  },
  {
    "label": "EnumerateEntryPointDescriptorSets()",
    "kind": "Method",
    "detail": "Function (SpvReflectResult)",
    "insertText": "EnumerateEntryPointDescriptorSets(const char* entry_point, uint32_t* p_count, SpvReflectDescriptorSet** pp_sets)"
  },
  {
    "label": "EnumerateInterfaceVariables()",
    "kind": "Method",
    "detail": "Function (SpvReflectResult)",
    "insertText": "EnumerateInterfaceVariables(uint32_t* p_count, SpvReflectInterfaceVariable** pp_variables)"
  },
  {
    "label": "EnumerateEntryPointInterfaceVariables()",
    "kind": "Method",
    "detail": "Function (SpvReflectResult)",
    "insertText": "EnumerateEntryPointInterfaceVariables(const char* entry_point, uint32_t* p_count, SpvReflectInterfaceVariable** pp_variables)"
  },
  {
    "label": "EnumerateInputVariables()",
    "kind": "Method",
    "detail": "Function (SpvReflectResult)",
    "insertText": "EnumerateInputVariables(uint32_t* p_count,SpvReflectInterfaceVariable** pp_variables)"
  },
  {
    "label": "EnumerateEntryPointInputVariables()",
    "kind": "Method",
    "detail": "Function (SpvReflectResult)",
    "insertText": "EnumerateEntryPointInputVariables(const char* entry_point, uint32_t* p_count, SpvReflectInterfaceVariable** pp_variables)"
  },
  {
    "label": "EnumerateOutputVariables()",
    "kind": "Method",
    "detail": "Function (SpvReflectResult)",
    "insertText": "EnumerateOutputVariables(uint32_t* p_count,SpvReflectInterfaceVariable** pp_variables)"
  },
  {
    "label": "EnumerateEntryPointOutputVariables()",
    "kind": "Method",
    "detail": "Function (SpvReflectResult)",
    "insertText": "EnumerateEntryPointOutputVariables(const char* entry_point, uint32_t* p_count, SpvReflectInterfaceVariable** pp_variables)"
  },
  {
    "label": "EnumerateExecutionModes()",
    "kind": "Method",
    "detail": "Function (SpvReflectResult)",
    "insertText": "EnumerateExecutionModes(uint32_t* p_count, SpvReflectExecutionMode** pp_modes)"
  },
  {
    "label": "EnumerateEntryPointExecutionModes()",
    "kind": "Method",
    "detail": "Function (SpvReflectResult)",
    "insertText": "EnumerateEntryPointExecutionModes(const char* entry_point, uint32_t* p_count, SpvReflectExecutionMode** pp_modes)"
  },
  {
    "label": "EnumeratePushConstantBlocks()",
    "kind": "Method",
    "detail": "Function (SpvReflectResult)",
    "insertText": "EnumeratePushConstantBlocks(uint32_t* p_count, SpvReflectBlockVariable** pp_blocks)"
  },
  {
    "label": "EnumerateEntryPointPushConstantBlocks()",
    "kind": "Method",
    "detail": "Function (SpvReflectResult)",
    "insertText": "EnumerateEntryPointPushConstantBlocks(const char* entry_point, uint32_t* p_count, SpvReflectBlockVariable** pp_blocks)"
  },
  {
    "label": "SPV_REFLECT_DEPRECATED()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SPV_REFLECT_DEPRECATED(\"Renamed to EnumeratePushConstantBlocks\") SpvReflectResult EnumeratePushConstants(uint32_t* p_count, SpvReflectBlockVariable** pp_blocks)"
  },
  {
    "label": "GetDescriptorBinding()",
    "kind": "Method",
    "detail": "Function (} const SpvReflectDescriptorBinding*)",
    "insertText": "GetDescriptorBinding(uint32_t binding_number, uint32_t set_number, SpvReflectResult* p_result = nullptr)"
  },
  {
    "label": "GetEntryPointDescriptorBinding()",
    "kind": "Method",
    "detail": "Function (const SpvReflectDescriptorBinding*)",
    "insertText": "GetEntryPointDescriptorBinding(const char* entry_point, uint32_t binding_number, uint32_t set_number, SpvReflectResult* p_result = nullptr)"
  },
  {
    "label": "GetDescriptorSet()",
    "kind": "Method",
    "detail": "Function (const SpvReflectDescriptorSet*)",
    "insertText": "GetDescriptorSet(uint32_t set_number, SpvReflectResult* p_result = nullptr)"
  },
  {
    "label": "GetEntryPointDescriptorSet()",
    "kind": "Method",
    "detail": "Function (const SpvReflectDescriptorSet*)",
    "insertText": "GetEntryPointDescriptorSet(const char* entry_point, uint32_t set_number, SpvReflectResult* p_result = nullptr)"
  },
  {
    "label": "GetInputVariableByLocation()",
    "kind": "Method",
    "detail": "Function (const SpvReflectInterfaceVariable*)",
    "insertText": "GetInputVariableByLocation(uint32_t location, SpvReflectResult* p_result = nullptr)"
  },
  {
    "label": "SPV_REFLECT_DEPRECATED()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SPV_REFLECT_DEPRECATED(\"Renamed to GetInputVariableByLocation\") const SpvReflectInterfaceVariable* GetInputVariable(uint32_t location, SpvReflectResult* p_result = nullptr)"
  },
  {
    "label": "GetEntryPointInputVariableByLocation()",
    "kind": "Method",
    "detail": "Function (} const SpvReflectInterfaceVariable*)",
    "insertText": "GetEntryPointInputVariableByLocation(const char* entry_point, uint32_t location, SpvReflectResult* p_result = nullptr)"
  },
  {
    "label": "GetInputVariableBySemantic()",
    "kind": "Method",
    "detail": "Function (const SpvReflectInterfaceVariable*)",
    "insertText": "GetInputVariableBySemantic(const char* semantic, SpvReflectResult* p_result = nullptr)"
  },
  {
    "label": "GetEntryPointInputVariableBySemantic()",
    "kind": "Method",
    "detail": "Function (const SpvReflectInterfaceVariable*)",
    "insertText": "GetEntryPointInputVariableBySemantic(const char* entry_point, const char* semantic, SpvReflectResult* p_result = nullptr)"
  },
  {
    "label": "GetOutputVariableByLocation()",
    "kind": "Method",
    "detail": "Function (const SpvReflectInterfaceVariable*)",
    "insertText": "GetOutputVariableByLocation(uint32_t location, SpvReflectResult* p_result = nullptr)"
  },
  {
    "label": "SPV_REFLECT_DEPRECATED()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SPV_REFLECT_DEPRECATED(\"Renamed to GetOutputVariableByLocation\") const SpvReflectInterfaceVariable* GetOutputVariable(uint32_t location, SpvReflectResult* p_result = nullptr)"
  },
  {
    "label": "GetEntryPointOutputVariableByLocation()",
    "kind": "Method",
    "detail": "Function (} const SpvReflectInterfaceVariable*)",
    "insertText": "GetEntryPointOutputVariableByLocation(const char* entry_point, uint32_t location, SpvReflectResult* p_result = nullptr)"
  },
  {
    "label": "GetOutputVariableBySemantic()",
    "kind": "Method",
    "detail": "Function (const SpvReflectInterfaceVariable*)",
    "insertText": "GetOutputVariableBySemantic(const char* semantic, SpvReflectResult* p_result = nullptr)"
  },
  {
    "label": "GetEntryPointOutputVariableBySemantic()",
    "kind": "Method",
    "detail": "Function (const SpvReflectInterfaceVariable*)",
    "insertText": "GetEntryPointOutputVariableBySemantic(const char* entry_point, const char* semantic, SpvReflectResult* p_result = nullptr)"
  },
  {
    "label": "GetPushConstantBlock()",
    "kind": "Method",
    "detail": "Function (const SpvReflectBlockVariable*)",
    "insertText": "GetPushConstantBlock(uint32_t index, SpvReflectResult* p_result = nullptr)"
  },
  {
    "label": "SPV_REFLECT_DEPRECATED()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SPV_REFLECT_DEPRECATED(\"Renamed to GetPushConstantBlock\") const SpvReflectBlockVariable* GetPushConstant(uint32_t index, SpvReflectResult* p_result = nullptr)"
  },
  {
    "label": "GetEntryPointPushConstantBlock()",
    "kind": "Method",
    "detail": "Function (} const SpvReflectBlockVariable*)",
    "insertText": "GetEntryPointPushConstantBlock(const char* entry_point, SpvReflectResult* p_result = nullptr)"
  },
  {
    "label": "ChangeDescriptorBindingNumbers()",
    "kind": "Method",
    "detail": "Function (SpvReflectResult)",
    "insertText": "ChangeDescriptorBindingNumbers(const SpvReflectDescriptorBinding* p_binding, uint32_t new_binding_number = SPV_REFLECT_BINDING_NUMBER_DONT_CHANGE, uint32_t optional_new_set_number = SPV_REFLECT_SET_NUMBER_DONT_CHANGE)"
  },
  {
    "label": "SPV_REFLECT_DEPRECATED()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SPV_REFLECT_DEPRECATED(\"Renamed to ChangeDescriptorBindingNumbers\") SpvReflectResult ChangeDescriptorBindingNumber(const SpvReflectDescriptorBinding* p_binding, uint32_t new_binding_number = SPV_REFLECT_BINDING_NUMBER_DONT_CHANGE, uint32_t new_set_number = SPV_REFLECT_SET_NUMBER_DONT_CHANGE)"
  },
  {
    "label": "ChangeDescriptorSetNumber()",
    "kind": "Method",
    "detail": "Function (} SpvReflectResult)",
    "insertText": "ChangeDescriptorSetNumber(const SpvReflectDescriptorSet* p_set, uint32_t new_set_number = SPV_REFLECT_SET_NUMBER_DONT_CHANGE)"
  },
  {
    "label": "ChangeInputVariableLocation()",
    "kind": "Method",
    "detail": "Function (SpvReflectResult)",
    "insertText": "ChangeInputVariableLocation(const SpvReflectInterfaceVariable* p_input_variable, uint32_t new_location)"
  },
  {
    "label": "ChangeOutputVariableLocation()",
    "kind": "Method",
    "detail": "Function (SpvReflectResult)",
    "insertText": "ChangeOutputVariableLocation(const SpvReflectInterfaceVariable* p_output_variable, uint32_t new_location)"
  },
  {
    "label": "ChangeEntryPointName()",
    "kind": "Method",
    "detail": "Function (SpvReflectResult)",
    "insertText": "ChangeEntryPointName(uint32_t index, const char* new_name)"
  },
  {
    "label": "ShaderModule()",
    "kind": "Method",
    "detail": "Function (private :)",
    "insertText": "ShaderModule(const ShaderModule&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (ShaderModule&)",
    "insertText": "operator(const ShaderModule&)"
  },
  {
    "label": "ShaderModule()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "ShaderModule(size_t size, const void* p_code, SpvReflectReturnFlags flags)"
  },
  {
    "label": "spvReflectCreateShaderModule()",
    "kind": "Method",
    "detail": "Function (m_result =)",
    "insertText": "spvReflectCreateShaderModule(size, p_code, &m_module, flags)"
  },
  {
    "label": "ShaderModule()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "ShaderModule(const std::vector<uint8_t>& code, SpvReflectReturnFlags flags)"
  },
  {
    "label": "spvReflectCreateShaderModule()",
    "kind": "Method",
    "detail": "Function (m_result =)",
    "insertText": "spvReflectCreateShaderModule(code.size(), code.data(), &m_module, flags)"
  },
  {
    "label": "ShaderModule()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "ShaderModule(const std::vector<uint32_t>& code, SpvReflectReturnFlags flags)"
  },
  {
    "label": "spvReflectCreateShaderModule()",
    "kind": "Method",
    "detail": "Function (m_result =)",
    "insertText": "spvReflectCreateShaderModule(code.size() * sizeof(uint32_t), code.data(), &m_module, flags)"
  },
  {
    "label": "spvReflectDestroyShaderModule()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "spvReflectDestroyShaderModule(&m_module)"
  },
  {
    "label": "spvReflectEnumerateDescriptorBindings()",
    "kind": "Method",
    "detail": "Function (m_result =)",
    "insertText": "spvReflectEnumerateDescriptorBindings(&m_module, p_count, pp_bindings)"
  },
  {
    "label": "spvReflectEnumerateEntryPointDescriptorBindings()",
    "kind": "Method",
    "detail": "Function (m_result =)",
    "insertText": "spvReflectEnumerateEntryPointDescriptorBindings(&m_module, entry_point, p_count, pp_bindings)"
  },
  {
    "label": "spvReflectEnumerateDescriptorSets()",
    "kind": "Method",
    "detail": "Function (m_result =)",
    "insertText": "spvReflectEnumerateDescriptorSets(&m_module, p_count, pp_sets)"
  },
  {
    "label": "spvReflectEnumerateEntryPointDescriptorSets()",
    "kind": "Method",
    "detail": "Function (m_result =)",
    "insertText": "spvReflectEnumerateEntryPointDescriptorSets(&m_module, entry_point, p_count, pp_sets)"
  },
  {
    "label": "spvReflectEnumerateInterfaceVariables()",
    "kind": "Method",
    "detail": "Function (m_result =)",
    "insertText": "spvReflectEnumerateInterfaceVariables(&m_module, p_count, pp_variables)"
  },
  {
    "label": "spvReflectEnumerateEntryPointInterfaceVariables()",
    "kind": "Method",
    "detail": "Function (m_result =)",
    "insertText": "spvReflectEnumerateEntryPointInterfaceVariables(&m_module, entry_point, p_count, pp_variables)"
  },
  {
    "label": "spvReflectEnumerateInputVariables()",
    "kind": "Method",
    "detail": "Function (m_result =)",
    "insertText": "spvReflectEnumerateInputVariables(&m_module, p_count, pp_variables)"
  },
  {
    "label": "spvReflectEnumerateEntryPointInputVariables()",
    "kind": "Method",
    "detail": "Function (m_result =)",
    "insertText": "spvReflectEnumerateEntryPointInputVariables(&m_module, entry_point, p_count, pp_variables)"
  },
  {
    "label": "spvReflectEnumerateOutputVariables()",
    "kind": "Method",
    "detail": "Function (m_result =)",
    "insertText": "spvReflectEnumerateOutputVariables(&m_module, p_count, pp_variables)"
  },
  {
    "label": "spvReflectEnumerateEntryPointOutputVariables()",
    "kind": "Method",
    "detail": "Function (m_result =)",
    "insertText": "spvReflectEnumerateEntryPointOutputVariables(&m_module, entry_point, p_count, pp_variables)"
  },
  {
    "label": "spvReflectEnumerateExecutionModes()",
    "kind": "Method",
    "detail": "Function (m_result =)",
    "insertText": "spvReflectEnumerateExecutionModes(&m_module, p_count, pp_modes)"
  },
  {
    "label": "spvReflectEnumerateEntryPointExecutionModes()",
    "kind": "Method",
    "detail": "Function (m_result =)",
    "insertText": "spvReflectEnumerateEntryPointExecutionModes(&m_module, entry_point, p_count, pp_modes)"
  },
  {
    "label": "spvReflectEnumeratePushConstantBlocks()",
    "kind": "Method",
    "detail": "Function (m_result =)",
    "insertText": "spvReflectEnumeratePushConstantBlocks(&m_module, p_count, pp_blocks)"
  },
  {
    "label": "spvReflectEnumerateEntryPointPushConstantBlocks()",
    "kind": "Method",
    "detail": "Function (m_result =)",
    "insertText": "spvReflectEnumerateEntryPointPushConstantBlocks(&m_module, entry_point, p_count, pp_blocks)"
  },
  {
    "label": "GetEntryPointDescriptorBinding()",
    "kind": "Method",
    "detail": "Function (} const SpvReflectDescriptorBinding*)",
    "insertText": "GetEntryPointDescriptorBinding(const char* entry_point, uint32_t binding_number, uint32_t set_number, SpvReflectResult* p_result)"
  },
  {
    "label": "GetDescriptorSet()",
    "kind": "Method",
    "detail": "Function (} const SpvReflectDescriptorSet*)",
    "insertText": "GetDescriptorSet(uint32_t set_number, SpvReflectResult* p_result)"
  },
  {
    "label": "GetEntryPointDescriptorSet()",
    "kind": "Method",
    "detail": "Function (} const SpvReflectDescriptorSet*)",
    "insertText": "GetEntryPointDescriptorSet(const char* entry_point, uint32_t set_number, SpvReflectResult* p_result)"
  },
  {
    "label": "GetInputVariableByLocation()",
    "kind": "Method",
    "detail": "Function (} const SpvReflectInterfaceVariable*)",
    "insertText": "GetInputVariableByLocation(uint32_t location, SpvReflectResult* p_result)"
  },
  {
    "label": "GetInputVariableBySemantic()",
    "kind": "Method",
    "detail": "Function (} const SpvReflectInterfaceVariable*)",
    "insertText": "GetInputVariableBySemantic(const char* semantic, SpvReflectResult* p_result)"
  },
  {
    "label": "GetEntryPointInputVariableByLocation()",
    "kind": "Method",
    "detail": "Function (} const SpvReflectInterfaceVariable*)",
    "insertText": "GetEntryPointInputVariableByLocation(const char* entry_point, uint32_t location, SpvReflectResult* p_result)"
  },
  {
    "label": "GetEntryPointInputVariableBySemantic()",
    "kind": "Method",
    "detail": "Function (} const SpvReflectInterfaceVariable*)",
    "insertText": "GetEntryPointInputVariableBySemantic(const char* entry_point, const char* semantic, SpvReflectResult* p_result)"
  },
  {
    "label": "GetOutputVariableByLocation()",
    "kind": "Method",
    "detail": "Function (} const SpvReflectInterfaceVariable*)",
    "insertText": "GetOutputVariableByLocation(uint32_t location, SpvReflectResult* p_result)"
  },
  {
    "label": "GetOutputVariableBySemantic()",
    "kind": "Method",
    "detail": "Function (} const SpvReflectInterfaceVariable*)",
    "insertText": "GetOutputVariableBySemantic(const char* semantic, SpvReflectResult* p_result)"
  },
  {
    "label": "GetEntryPointOutputVariableByLocation()",
    "kind": "Method",
    "detail": "Function (} const SpvReflectInterfaceVariable*)",
    "insertText": "GetEntryPointOutputVariableByLocation(const char* entry_point, uint32_t location, SpvReflectResult* p_result)"
  },
  {
    "label": "GetEntryPointOutputVariableBySemantic()",
    "kind": "Method",
    "detail": "Function (} const SpvReflectInterfaceVariable*)",
    "insertText": "GetEntryPointOutputVariableBySemantic(const char* entry_point, const char* semantic, SpvReflectResult* p_result)"
  },
  {
    "label": "GetPushConstantBlock()",
    "kind": "Method",
    "detail": "Function (} const SpvReflectBlockVariable*)",
    "insertText": "GetPushConstantBlock(uint32_t index, SpvReflectResult* p_result)"
  },
  {
    "label": "GetEntryPointPushConstantBlock()",
    "kind": "Method",
    "detail": "Function (} const SpvReflectBlockVariable*)",
    "insertText": "GetEntryPointPushConstantBlock(const char* entry_point, SpvReflectResult* p_result)"
  },
  {
    "label": "ChangeDescriptorBindingNumbers()",
    "kind": "Method",
    "detail": "Function (} SpvReflectResult)",
    "insertText": "ChangeDescriptorBindingNumbers(const SpvReflectDescriptorBinding* p_binding, uint32_t new_binding_number, uint32_t new_set_number)"
  },
  {
    "label": "ChangeDescriptorSetNumber()",
    "kind": "Method",
    "detail": "Function (} SpvReflectResult)",
    "insertText": "ChangeDescriptorSetNumber(const SpvReflectDescriptorSet* p_set, uint32_t new_set_number)"
  }
]