[
  {
    "label": "FTaskExecutionFlags",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTaskExecutionFlags"
  },
  {
    "label": "FEntitySystemScheduler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEntitySystemScheduler"
  },
  {
    "label": "FTaskPrerequisiteCache",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTaskPrerequisiteCache"
  },
  {
    "label": "FScheduledTaskFuncionPtr",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FScheduledTaskFuncionPtr"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FScheduledTask",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FScheduledTask"
  },
  {
    "label": "FLockedComponentData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLockedComponentData"
  },
  {
    "label": "FEntitySystemScheduler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEntitySystemScheduler"
  },
  {
    "label": "FExecute",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FExecute"
  },
  {
    "label": "FScheduledTask()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "FScheduledTask(FEntityAllocationWriteContext InWriteContextOffset)"
  },
  {
    "label": "SetFunction()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFunction(TaskFunctionPtr InFunction)"
  },
  {
    "label": "FEntitySystemScheduler()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "FEntitySystemScheduler(FEntityManager* InEntityManager)"
  },
  {
    "label": "IsCustomSchedulingEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsCustomSchedulingEnabled()"
  },
  {
    "label": "BeginConstruction()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginConstruction()"
  },
  {
    "label": "BeginSystem()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginSystem(uint16 NodeID)"
  },
  {
    "label": "PropagatePrerequisite()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PropagatePrerequisite(uint16 ToNodeID)"
  },
  {
    "label": "EndSystem()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EndSystem(uint16 NodeID)"
  },
  {
    "label": "EndConstruction()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EndConstruction()"
  },
  {
    "label": "AddNullTask()",
    "kind": "Method",
    "detail": "Function (FTaskID)",
    "insertText": "AddNullTask()"
  },
  {
    "label": "AddTask()",
    "kind": "Method",
    "detail": "Function (FTaskID)",
    "insertText": "AddTask(const FTaskParams& InParams, TSharedPtr<ITaskContext> InTaskContext, TaskFunctionPtr InTaskFunction)"
  },
  {
    "label": "AddPrerequisite()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddPrerequisite(FTaskID Prerequisite, FTaskID Subsequent)"
  },
  {
    "label": "AddChildBack()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddChildBack(FTaskID Parent, FTaskID Child)"
  },
  {
    "label": "AddChildFront()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddChildFront(FTaskID Parent, FTaskID Child)"
  },
  {
    "label": "ShuffleTasks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ShuffleTasks()"
  },
  {
    "label": "ExecuteTasks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExecuteTasks()"
  }
]