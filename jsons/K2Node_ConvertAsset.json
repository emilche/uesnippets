[
  {
    "label": "FBlueprintActionDatabaseRegistrar",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBlueprintActionDatabaseRegistrar"
  },
  {
    "label": "FString",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FString"
  },
  {
    "label": "UClass",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UClass"
  },
  {
    "label": "UEdGraph",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEdGraph"
  },
  {
    "label": "UEdGraphPin",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEdGraphPin"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "UK2Node_ConvertAsset",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UK2Node_ConvertAsset"
  },
  {
    "label": "FKismetCompilerContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FKismetCompilerContext"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" EdGraph / EdGraphNode . h \" # include \" HAL / Platform . h \" # include \" Internationalization / Text . h \" # include \" K2Node . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / UObjectGlobals . h \" # include \" K2Node_ConvertAsset . generated . h \" class FBlueprintActionDatabaseRegistrar ; class FString ; class UClass ; class UEdGraph ; class UEdGraphPin ; class UObject ;)",
    "insertText": "UCLASS(MinimalAPI)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: UClass* GetTargetClass()"
  },
  {
    "label": "IsClassType()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsClassType()"
  },
  {
    "label": "IsConvertToSoft()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsConvertToSoft()"
  },
  {
    "label": "GetInputPin()",
    "kind": "Method",
    "detail": "Function (UEdGraphPin*)",
    "insertText": "GetInputPin()"
  },
  {
    "label": "GetOutputPin()",
    "kind": "Method",
    "detail": "Function (UEdGraphPin*)",
    "insertText": "GetOutputPin()"
  },
  {
    "label": "AllocateDefaultPins()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AllocateDefaultPins()"
  },
  {
    "label": "GetNodeTitle()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetNodeTitle(ENodeTitleType::Type TitleType)"
  },
  {
    "label": "GetKeywords()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetKeywords()"
  },
  {
    "label": "GetTooltipText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetTooltipText()"
  },
  {
    "label": "PostReconstructNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostReconstructNode()"
  },
  {
    "label": "IsNodePure()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsNodePure()"
  },
  {
    "label": "GetCompactNodeTitle()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetCompactNodeTitle()"
  },
  {
    "label": "IsConnectionDisallowed()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsConnectionDisallowed(const UEdGraphPin* MyPin, const UEdGraphPin* OtherPin, FString& OutReason)"
  },
  {
    "label": "NotifyPinConnectionListChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyPinConnectionListChanged(UEdGraphPin* Pin)"
  },
  {
    "label": "GetMenuActions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetMenuActions(FBlueprintActionDatabaseRegistrar& ActionRegistrar)"
  },
  {
    "label": "GetMenuCategory()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetMenuCategory()"
  },
  {
    "label": "DoPinsMatchForReconstruction()",
    "kind": "Method",
    "detail": "Function (ERedirectType)",
    "insertText": "DoPinsMatchForReconstruction(const UEdGraphPin* NewPin, int32 NewPinIndex, const UEdGraphPin* OldPin, int32 OldPinIndex)"
  },
  {
    "label": "RefreshPinTypes()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "RefreshPinTypes()"
  }
]