[
  {
    "label": "OCIOEXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "OCIOEXPORT"
  },
  {
    "label": "ColorSpaceMenuHelper",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ColorSpaceMenuHelper"
  },
  {
    "label": "ColorSpaceMenuParameters",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ColorSpaceMenuParameters"
  },
  {
    "label": "MixingColorSpaceManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MixingColorSpaceManager"
  },
  {
    "label": "LegacyViewingPipeline",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "LegacyViewingPipeline"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "U",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "U"
  },
  {
    "label": "LoggingLevel",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "LoggingLevel"
  },
  {
    "label": "ReferenceSpaceType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ReferenceSpaceType"
  },
  {
    "label": "SearchReferenceSpaceType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "SearchReferenceSpaceType"
  },
  {
    "label": "ColorSpaceVisibility",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ColorSpaceVisibility"
  },
  {
    "label": "NamedTransformVisibility",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "NamedTransformVisibility"
  },
  {
    "label": "ViewType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ViewType"
  },
  {
    "label": "ColorSpaceDirection",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ColorSpaceDirection"
  },
  {
    "label": "ViewTransformDirection",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ViewTransformDirection"
  },
  {
    "label": "TransformDirection",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "TransformDirection"
  },
  {
    "label": "TransformType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "TransformType"
  },
  {
    "label": "Interpolation",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Interpolation"
  },
  {
    "label": "BitDepth",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "BitDepth"
  },
  {
    "label": "Lut1DHueAdjust",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Lut1DHueAdjust"
  },
  {
    "label": "ChannelOrdering",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ChannelOrdering"
  },
  {
    "label": "Allocation",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Allocation"
  },
  {
    "label": "GpuLanguage",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "GpuLanguage"
  },
  {
    "label": "EnvironmentMode",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EnvironmentMode"
  },
  {
    "label": "RangeStyle",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "RangeStyle"
  },
  {
    "label": "FixedFunctionStyle",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "FixedFunctionStyle"
  },
  {
    "label": "ExposureContrastStyle",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ExposureContrastStyle"
  },
  {
    "label": "CDLStyle",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "CDLStyle"
  },
  {
    "label": "NegativeStyle",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "NegativeStyle"
  },
  {
    "label": "GradingStyle",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "GradingStyle"
  },
  {
    "label": "DynamicPropertyType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "DynamicPropertyType"
  },
  {
    "label": "RGBCurveType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "RGBCurveType"
  },
  {
    "label": "UniformDataType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "UniformDataType"
  },
  {
    "label": "OptimizationFlags",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "OptimizationFlags"
  },
  {
    "label": "ProcessorCacheFlags",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ProcessorCacheFlags"
  },
  {
    "label": "DynamicPtrCast()",
    "kind": "Method",
    "detail": "Function (# ifndef INCLUDED_OCIO_OPENCOLORTYPES_H # define INCLUDED_OCIO_OPENCOLORTYPES_H # include \" OpenColorABI . h \" # ifndef OCIO_NAMESPACE # error This header cannot be used directly . Use<OpenColorIO / OpenColorIO . h> instead . # endif # include<array> # include<limits> # include<string> # include<functional> namespace OCIO_NAMESPACE { class OCIOEXPORT Config ; typedef OCIO_SHARED_PTR<const Config> ConstConfigRcPtr ; typedef OCIO_SHARED_PTR<Config> ConfigRcPtr ; class OCIOEXPORT FileRules ; typedef OCIO_SHARED_PTR<const FileRules> ConstFileRulesRcPtr ; typedef OCIO_SHARED_PTR<FileRules> FileRulesRcPtr ; class OCIOEXPORT ViewingRules ; typedef OCIO_SHARED_PTR<const ViewingRules> ConstViewingRulesRcPtr ; typedef OCIO_SHARED_PTR<ViewingRules> ViewingRulesRcPtr ; class OCIOEXPORT ColorSpace ; typedef OCIO_SHARED_PTR<const ColorSpace> ConstColorSpaceRcPtr ; typedef OCIO_SHARED_PTR<ColorSpace> ColorSpaceRcPtr ; class OCIOEXPORT ColorSpaceSet ; typedef OCIO_SHARED_PTR<const ColorSpaceSet> ConstColorSpaceSetRcPtr ; typedef OCIO_SHARED_PTR<ColorSpaceSet> ColorSpaceSetRcPtr ; class OCIOEXPORT Look ; typedef OCIO_SHARED_PTR<const Look> ConstLookRcPtr ; typedef OCIO_SHARED_PTR<Look> LookRcPtr ; class OCIOEXPORT NamedTransform ; typedef OCIO_SHARED_PTR<const NamedTransform> ConstNamedTransformRcPtr ; typedef OCIO_SHARED_PTR<NamedTransform> NamedTransformRcPtr ; class OCIOEXPORT ViewTransform ; typedef OCIO_SHARED_PTR<const ViewTransform> ConstViewTransformRcPtr ; typedef OCIO_SHARED_PTR<ViewTransform> ViewTransformRcPtr ; class OCIOEXPORT Context ; typedef OCIO_SHARED_PTR<const Context> ConstContextRcPtr ; typedef OCIO_SHARED_PTR<Context> ContextRcPtr ; class OCIOEXPORT Processor ; typedef OCIO_SHARED_PTR<const Processor> ConstProcessorRcPtr ; typedef OCIO_SHARED_PTR<Processor> ProcessorRcPtr ; class OCIOEXPORT CPUProcessor ; typedef OCIO_SHARED_PTR<const CPUProcessor> ConstCPUProcessorRcPtr ; typedef OCIO_SHARED_PTR<CPUProcessor> CPUProcessorRcPtr ; class OCIOEXPORT GPUProcessor ; typedef OCIO_SHARED_PTR<const GPUProcessor> ConstGPUProcessorRcPtr ; typedef OCIO_SHARED_PTR<GPUProcessor> GPUProcessorRcPtr ; class OCIOEXPORT ProcessorMetadata ; typedef OCIO_SHARED_PTR<const ProcessorMetadata> ConstProcessorMetadataRcPtr ; typedef OCIO_SHARED_PTR<ProcessorMetadata> ProcessorMetadataRcPtr ; class OCIOEXPORT Baker ; typedef OCIO_SHARED_PTR<const Baker> ConstBakerRcPtr ; typedef OCIO_SHARED_PTR<Baker> BakerRcPtr ; class OCIOEXPORT ImageDesc ; typedef OCIO_SHARED_PTR<ImageDesc> ImageDescRcPtr ; typedef OCIO_SHARED_PTR<const ImageDesc> ConstImageDescRcPtr ; class OCIOEXPORT Exception ; class OCIOEXPORT GpuShaderCreator ; typedef OCIO_SHARED_PTR<GpuShaderCreator> GpuShaderCreatorRcPtr ; typedef OCIO_SHARED_PTR<const GpuShaderCreator> ConstGpuShaderCreatorRcPtr ; class OCIOEXPORT GpuShaderDesc ; typedef OCIO_SHARED_PTR<GpuShaderDesc> GpuShaderDescRcPtr ; typedef OCIO_SHARED_PTR<const GpuShaderDesc> ConstGpuShaderDescRcPtr ; class OCIOEXPORT BuiltinTransformRegistry ; typedef OCIO_SHARED_PTR<BuiltinTransformRegistry> BuiltinTransformRegistryRcPtr ; typedef OCIO_SHARED_PTR<const BuiltinTransformRegistry> ConstBuiltinTransformRegistryRcPtr ; class OCIOEXPORT SystemMonitors ; typedef OCIO_SHARED_PTR<SystemMonitors> SystemMonitorsRcPtr ; typedef OCIO_SHARED_PTR<const SystemMonitors> ConstSystemMonitorsRcPtr ; class OCIOEXPORT GradingBSplineCurve ; typedef OCIO_SHARED_PTR<const GradingBSplineCurve> ConstGradingBSplineCurveRcPtr ; typedef OCIO_SHARED_PTR<GradingBSplineCurve> GradingBSplineCurveRcPtr ; class OCIOEXPORT GradingRGBCurve ; typedef OCIO_SHARED_PTR<const GradingRGBCurve> ConstGradingRGBCurveRcPtr ; typedef OCIO_SHARED_PTR<GradingRGBCurve> GradingRGBCurveRcPtr ; class OCIOEXPORT ConfigIOProxy ; typedef OCIO_SHARED_PTR<const ConfigIOProxy> ConstConfigIOProxyRcPtr ; typedef OCIO_SHARED_PTR<ConfigIOProxy> ConfigIOProxyRcPtr ; typedef std::array<float,3> Float3 ; class OCIOEXPORT Transform ; typedef OCIO_SHARED_PTR<const Transform> ConstTransformRcPtr ; typedef OCIO_SHARED_PTR<Transform> TransformRcPtr ; class OCIOEXPORT AllocationTransform ; typedef OCIO_SHARED_PTR<const AllocationTransform> ConstAllocationTransformRcPtr ; typedef OCIO_SHARED_PTR<AllocationTransform> AllocationTransformRcPtr ; class OCIOEXPORT BuiltinTransform ; typedef OCIO_SHARED_PTR<const BuiltinTransform> ConstBuiltinTransformRcPtr ; typedef OCIO_SHARED_PTR<BuiltinTransform> BuiltinTransformRcPtr ; class OCIOEXPORT CDLTransform ; typedef OCIO_SHARED_PTR<const CDLTransform> ConstCDLTransformRcPtr ; typedef OCIO_SHARED_PTR<CDLTransform> CDLTransformRcPtr ; class OCIOEXPORT ColorSpaceTransform ; typedef OCIO_SHARED_PTR<const ColorSpaceTransform> ConstColorSpaceTransformRcPtr ; typedef OCIO_SHARED_PTR<ColorSpaceTransform> ColorSpaceTransformRcPtr ; class OCIOEXPORT DisplayViewTransform ; typedef OCIO_SHARED_PTR<const DisplayViewTransform> ConstDisplayViewTransformRcPtr ; typedef OCIO_SHARED_PTR<DisplayViewTransform> DisplayViewTransformRcPtr ; class OCIOEXPORT DynamicProperty ; typedef OCIO_SHARED_PTR<const DynamicProperty> ConstDynamicPropertyRcPtr ; typedef OCIO_SHARED_PTR<DynamicProperty> DynamicPropertyRcPtr ; class OCIOEXPORT DynamicPropertyDouble ; typedef OCIO_SHARED_PTR<const DynamicPropertyDouble> ConstDynamicPropertyDoubleRcPtr ; typedef OCIO_SHARED_PTR<DynamicPropertyDouble> DynamicPropertyDoubleRcPtr ; class OCIOEXPORT DynamicPropertyGradingPrimary ; typedef OCIO_SHARED_PTR<const DynamicPropertyGradingPrimary> ConstDynamicPropertyGradingPrimaryRcPtr ; typedef OCIO_SHARED_PTR<DynamicPropertyGradingPrimary> DynamicPropertyGradingPrimaryRcPtr ; class OCIOEXPORT DynamicPropertyGradingRGBCurve ; typedef OCIO_SHARED_PTR<const DynamicPropertyGradingRGBCurve> ConstDynamicPropertyGradingRGBCurveRcPtr ; typedef OCIO_SHARED_PTR<DynamicPropertyGradingRGBCurve> DynamicPropertyGradingRGBCurveRcPtr ; class OCIOEXPORT DynamicPropertyGradingTone ; typedef OCIO_SHARED_PTR<const DynamicPropertyGradingTone> ConstDynamicPropertyGradingToneRcPtr ; typedef OCIO_SHARED_PTR<DynamicPropertyGradingTone> DynamicPropertyGradingToneRcPtr ; class OCIOEXPORT ExponentTransform ; typedef OCIO_SHARED_PTR<const ExponentTransform> ConstExponentTransformRcPtr ; typedef OCIO_SHARED_PTR<ExponentTransform> ExponentTransformRcPtr ; class OCIOEXPORT ExponentWithLinearTransform ; typedef OCIO_SHARED_PTR<const ExponentWithLinearTransform> ConstExponentWithLinearTransformRcPtr ; typedef OCIO_SHARED_PTR<ExponentWithLinearTransform> ExponentWithLinearTransformRcPtr ; class OCIOEXPORT ExposureContrastTransform ; typedef OCIO_SHARED_PTR<const ExposureContrastTransform> ConstExposureContrastTransformRcPtr ; typedef OCIO_SHARED_PTR<ExposureContrastTransform> ExposureContrastTransformRcPtr ; class OCIOEXPORT FileTransform ; typedef OCIO_SHARED_PTR<const FileTransform> ConstFileTransformRcPtr ; typedef OCIO_SHARED_PTR<FileTransform> FileTransformRcPtr ; class OCIOEXPORT FixedFunctionTransform ; typedef OCIO_SHARED_PTR<const FixedFunctionTransform> ConstFixedFunctionTransformRcPtr ; typedef OCIO_SHARED_PTR<FixedFunctionTransform> FixedFunctionTransformRcPtr ; class OCIOEXPORT GradingPrimaryTransform ; typedef OCIO_SHARED_PTR<const GradingPrimaryTransform> ConstGradingPrimaryTransformRcPtr ; typedef OCIO_SHARED_PTR<GradingPrimaryTransform> GradingPrimaryTransformRcPtr ; class OCIOEXPORT GradingRGBCurveTransform ; typedef OCIO_SHARED_PTR<const GradingRGBCurveTransform> ConstGradingRGBCurveTransformRcPtr ; typedef OCIO_SHARED_PTR<GradingRGBCurveTransform> GradingRGBCurveTransformRcPtr ; class OCIOEXPORT GradingToneTransform ; typedef OCIO_SHARED_PTR<const GradingToneTransform> ConstGradingToneTransformRcPtr ; typedef OCIO_SHARED_PTR<GradingToneTransform> GradingToneTransformRcPtr ; class OCIOEXPORT GroupTransform ; typedef OCIO_SHARED_PTR<const GroupTransform> ConstGroupTransformRcPtr ; typedef OCIO_SHARED_PTR<GroupTransform> GroupTransformRcPtr ; class OCIOEXPORT LogAffineTransform ; typedef OCIO_SHARED_PTR<const LogAffineTransform> ConstLogAffineTransformRcPtr ; typedef OCIO_SHARED_PTR<LogAffineTransform> LogAffineTransformRcPtr ; class OCIOEXPORT LogCameraTransform ; typedef OCIO_SHARED_PTR<const LogCameraTransform> ConstLogCameraTransformRcPtr ; typedef OCIO_SHARED_PTR<LogCameraTransform> LogCameraTransformRcPtr ; class OCIOEXPORT LookTransform ; typedef OCIO_SHARED_PTR<const LookTransform> ConstLookTransformRcPtr ; typedef OCIO_SHARED_PTR<LookTransform> LookTransformRcPtr ; class OCIOEXPORT LogTransform ; typedef OCIO_SHARED_PTR<const LogTransform> ConstLogTransformRcPtr ; typedef OCIO_SHARED_PTR<LogTransform> LogTransformRcPtr ; class OCIOEXPORT Lut1DTransform ; typedef OCIO_SHARED_PTR<const Lut1DTransform> ConstLut1DTransformRcPtr ; typedef OCIO_SHARED_PTR<Lut1DTransform> Lut1DTransformRcPtr ; class OCIOEXPORT Lut3DTransform ; typedef OCIO_SHARED_PTR<const Lut3DTransform> ConstLut3DTransformRcPtr ; typedef OCIO_SHARED_PTR<Lut3DTransform> Lut3DTransformRcPtr ; class OCIOEXPORT MatrixTransform ; typedef OCIO_SHARED_PTR<const MatrixTransform> ConstMatrixTransformRcPtr ; typedef OCIO_SHARED_PTR<MatrixTransform> MatrixTransformRcPtr ; class OCIOEXPORT RangeTransform ; typedef OCIO_SHARED_PTR<const RangeTransform> ConstRangeTransformRcPtr ; typedef OCIO_SHARED_PTR<RangeTransform> RangeTransformRcPtr ; class ColorSpaceMenuHelper ; typedef OCIO_SHARED_PTR<ColorSpaceMenuHelper> ColorSpaceMenuHelperRcPtr ; typedef OCIO_SHARED_PTR<const ColorSpaceMenuHelper> ConstColorSpaceMenuHelperRcPtr ; class ColorSpaceMenuParameters ; typedef OCIO_SHARED_PTR<ColorSpaceMenuParameters> ColorSpaceMenuParametersRcPtr ; typedef OCIO_SHARED_PTR<const ColorSpaceMenuParameters> ConstColorSpaceMenuParametersRcPtr ; class MixingColorSpaceManager ; typedef OCIO_SHARED_PTR<MixingColorSpaceManager> MixingColorSpaceManagerRcPtr ; typedef OCIO_SHARED_PTR<const MixingColorSpaceManager> ConstMixingColorSpaceManagerRcPtr ; class LegacyViewingPipeline ; typedef OCIO_SHARED_PTR<LegacyViewingPipeline> LegacyViewingPipelineRcPtr ; typedef OCIO_SHARED_PTR<const LegacyViewingPipeline> ConstLegacyViewingPipelineRcPtr ; template<class T,class U> OCIO_SHARED_PTR<T>)",
    "insertText": "DynamicPtrCast(OCIO_SHARED_PTR<U> const & ptr)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (} using LoggingFunction = std::function<)",
    "insertText": "void(const char*)"
  },
  {
    "label": "string()",
    "kind": "Method",
    "detail": "Function (enum LoggingLevel { LOGGING_LEVEL_NONE = 0,LOGGING_LEVEL_WARNING = 1,LOGGING_LEVEL_INFO = 2,LOGGING_LEVEL_DEBUG = 3,LOGGING_LEVEL_UNKNOWN = 2 5 5,LOGGING_LEVEL_DEFAULT = LOGGING_LEVEL_INFO } ; using ComputeHashFunction = std::function<)",
    "insertText": "string(const std::string &)"
  },
  {
    "label": "OPTIMIZATION_LOSSLESS()",
    "kind": "Method",
    "detail": "Function (enum ReferenceSpaceType { REFERENCE_SPACE_SCENE = 0,REFERENCE_SPACE_DISPLAY } ; enum SearchReferenceSpaceType { SEARCH_REFERENCE_SPACE_SCENE = 0,SEARCH_REFERENCE_SPACE_DISPLAY,SEARCH_REFERENCE_SPACE_ALL } ; enum ColorSpaceVisibility { COLORSPACE_ACTIVE = 0,COLORSPACE_INACTIVE,COLORSPACE_ALL } ; enum NamedTransformVisibility { NAMEDTRANSFORM_ACTIVE = 0,NAMEDTRANSFORM_INACTIVE,NAMEDTRANSFORM_ALL } ; enum ViewType { VIEW_SHARED = 0,VIEW_DISPLAY_DEFINED } ; enum ColorSpaceDirection { COLORSPACE_DIR_TO_REFERENCE = 0,COLORSPACE_DIR_FROM_REFERENCE } ; enum ViewTransformDirection { VIEWTRANSFORM_DIR_TO_REFERENCE = 0,VIEWTRANSFORM_DIR_FROM_REFERENCE } ; enum TransformDirection { TRANSFORM_DIR_FORWARD = 0,TRANSFORM_DIR_INVERSE } ; enum TransformType { TRANSFORM_TYPE_ALLOCATION = 0,TRANSFORM_TYPE_BUILTIN,TRANSFORM_TYPE_CDL,TRANSFORM_TYPE_COLORSPACE,TRANSFORM_TYPE_DISPLAY_VIEW,TRANSFORM_TYPE_EXPONENT,TRANSFORM_TYPE_EXPONENT_WITH_LINEAR,TRANSFORM_TYPE_EXPOSURE_CONTRAST,TRANSFORM_TYPE_FILE,TRANSFORM_TYPE_FIXED_FUNCTION,TRANSFORM_TYPE_GRADING_PRIMARY,TRANSFORM_TYPE_GRADING_RGB_CURVE,TRANSFORM_TYPE_GRADING_TONE,TRANSFORM_TYPE_GROUP,TRANSFORM_TYPE_LOG_AFFINE,TRANSFORM_TYPE_LOG_CAMERA,TRANSFORM_TYPE_LOG,TRANSFORM_TYPE_LOOK,TRANSFORM_TYPE_LUT1D,TRANSFORM_TYPE_LUT3D,TRANSFORM_TYPE_MATRIX,TRANSFORM_TYPE_RANGE } ; enum Interpolation { INTERP_UNKNOWN = 0,INTERP_NEAREST = 1,INTERP_LINEAR = 2,INTERP_TETRAHEDRAL = 3,INTERP_CUBIC = 4,INTERP_DEFAULT = 2 5 4,INTERP_BEST = 2 5 5 } ; enum BitDepth { BIT_DEPTH_UNKNOWN = 0,BIT_DEPTH_UINT8,BIT_DEPTH_UINT10,BIT_DEPTH_UINT12,BIT_DEPTH_UINT14,BIT_DEPTH_UINT16,BIT_DEPTH_UINT32,BIT_DEPTH_F16,BIT_DEPTH_F32 } ; enum Lut1DHueAdjust { HUE_NONE = 0,HUE_DW3,HUE_WYPN } ; enum ChannelOrdering { CHANNEL_ORDERING_RGBA = 0,CHANNEL_ORDERING_BGRA,CHANNEL_ORDERING_ABGR,CHANNEL_ORDERING_RGB,CHANNEL_ORDERING_BGR } ; enum Allocation { ALLOCATION_UNKNOWN = 0,ALLOCATION_UNIFORM,ALLOCATION_LG2 } ; enum GpuLanguage { GPU_LANGUAGE_CG = 0,GPU_LANGUAGE_GLSL_1_2,GPU_LANGUAGE_GLSL_1_3,GPU_LANGUAGE_GLSL_4_0,GPU_LANGUAGE_HLSL_DX11,LANGUAGE_OSL_1,GPU_LANGUAGE_GLSL_ES_1_0,GPU_LANGUAGE_GLSL_ES_3_0,GPU_LANGUAGE_MSL_2_0 } ; enum EnvironmentMode { ENV_ENVIRONMENT_UNKNOWN = 0,ENV_ENVIRONMENT_LOAD_PREDEFINED,ENV_ENVIRONMENT_LOAD_ALL } ; enum RangeStyle { RANGE_NO_CLAMP = 0,RANGE_CLAMP } ; enum FixedFunctionStyle { FIXED_FUNCTION_ACES_RED_MOD_03 = 0,FIXED_FUNCTION_ACES_RED_MOD_10,FIXED_FUNCTION_ACES_GLOW_03,FIXED_FUNCTION_ACES_GLOW_10,FIXED_FUNCTION_ACES_DARK_TO_DIM_10,FIXED_FUNCTION_REC2100_SURROUND,FIXED_FUNCTION_RGB_TO_HSV,FIXED_FUNCTION_XYZ_TO_xyY,FIXED_FUNCTION_XYZ_TO_uvY,FIXED_FUNCTION_XYZ_TO_LUV,FIXED_FUNCTION_ACES_GAMUTMAP_02,FIXED_FUNCTION_ACES_GAMUTMAP_07,FIXED_FUNCTION_ACES_GAMUT_COMP_13 } ; enum ExposureContrastStyle { EXPOSURE_CONTRAST_LINEAR = 0,EXPOSURE_CONTRAST_VIDEO,EXPOSURE_CONTRAST_LOGARITHMIC } ; enum CDLStyle { CDL_ASC = 0,CDL_NO_CLAMP,CDL_TRANSFORM_DEFAULT = CDL_NO_CLAMP } ; enum NegativeStyle { NEGATIVE_CLAMP = 0,NEGATIVE_MIRROR,NEGATIVE_PASS_THRU,NEGATIVE_LINEAR } ; enum GradingStyle { GRADING_LOG = 0,GRADING_LIN,GRADING_VIDEO } ; enum DynamicPropertyType { DYNAMIC_PROPERTY_EXPOSURE = 0,DYNAMIC_PROPERTY_CONTRAST,DYNAMIC_PROPERTY_GAMMA,DYNAMIC_PROPERTY_GRADING_PRIMARY,DYNAMIC_PROPERTY_GRADING_RGBCURVE,DYNAMIC_PROPERTY_GRADING_TONE } ; enum RGBCurveType { RGB_RED = 0,RGB_GREEN,RGB_BLUE,RGB_MASTER,RGB_NUM_CURVES } ; enum UniformDataType { UNIFORM_DOUBLE = 0,UNIFORM_BOOL,UNIFORM_FLOAT3,UNIFORM_VECTOR_FLOAT,UNIFORM_VECTOR_INT,UNIFORM_UNKNOWN } ; enum OptimizationFlags : unsigned long { OPTIMIZATION_NONE = 0 x00000000,OPTIMIZATION_IDENTITY = 0 x00000001,OPTIMIZATION_IDENTITY_GAMMA = 0 x00000002,OPTIMIZATION_PAIR_IDENTITY_CDL = 0 x00000040,OPTIMIZATION_PAIR_IDENTITY_EXPOSURE_CONTRAST = 0 x00000080,OPTIMIZATION_PAIR_IDENTITY_FIXED_FUNCTION = 0 x00000100,OPTIMIZATION_PAIR_IDENTITY_GAMMA = 0 x00000200,OPTIMIZATION_PAIR_IDENTITY_LUT1D = 0 x00000400,OPTIMIZATION_PAIR_IDENTITY_LUT3D = 0 x00000800,OPTIMIZATION_PAIR_IDENTITY_LOG = 0 x00001000,OPTIMIZATION_PAIR_IDENTITY_GRADING = 0 x00002000,OPTIMIZATION_COMP_EXPONENT = 0 x00040000,OPTIMIZATION_COMP_GAMMA = 0 x00080000,OPTIMIZATION_COMP_MATRIX = 0 x00100000,OPTIMIZATION_COMP_LUT1D = 0 x00200000,OPTIMIZATION_COMP_LUT3D = 0 x00400000,OPTIMIZATION_COMP_RANGE = 0 x00800000,OPTIMIZATION_COMP_SEPARABLE_PREFIX = 0 x01000000,OPTIMIZATION_LUT_INV_FAST = 0 x02000000,OPTIMIZATION_FAST_LOG_EXP_POW = 0 x04000000,OPTIMIZATION_SIMPLIFY_OPS = 0 x08000000,OPTIMIZATION_NO_DYNAMIC_PROPERTIES = 0 x10000000,OPTIMIZATION_ALL = 0 xFFFFFFFF,)",
    "insertText": "OPTIMIZATION_LOSSLESS(OPTIMIZATION_IDENTITY | OPTIMIZATION_IDENTITY_GAMMA | OPTIMIZATION_PAIR_IDENTITY_CDL | OPTIMIZATION_PAIR_IDENTITY_EXPOSURE_CONTRAST | OPTIMIZATION_PAIR_IDENTITY_FIXED_FUNCTION | OPTIMIZATION_PAIR_IDENTITY_GAMMA | OPTIMIZATION_PAIR_IDENTITY_GRADING | OPTIMIZATION_PAIR_IDENTITY_LOG | OPTIMIZATION_PAIR_IDENTITY_LUT1D | OPTIMIZATION_PAIR_IDENTITY_LUT3D | OPTIMIZATION_COMP_EXPONENT | OPTIMIZATION_COMP_GAMMA | OPTIMIZATION_COMP_MATRIX | OPTIMIZATION_COMP_RANGE | OPTIMIZATION_SIMPLIFY_OPS), OPTIMIZATION_VERY_GOOD = (OPTIMIZATION_LOSSLESS | OPTIMIZATION_COMP_LUT1D | OPTIMIZATION_LUT_INV_FAST | OPTIMIZATION_FAST_LOG_EXP_POW | OPTIMIZATION_COMP_SEPARABLE_PREFIX)"
  },
  {
    "label": "PROCESSOR_CACHE_DEFAULT()",
    "kind": "Method",
    "detail": "Function (enum ProcessorCacheFlags : unsigned int { PROCESSOR_CACHE_OFF = 0 x00,PROCESSOR_CACHE_ENABLED = 0 x01,PROCESSOR_CACHE_SHARE_DYN_PROPERTIES = 0 x02,)",
    "insertText": "PROCESSOR_CACHE_DEFAULT(PROCESSOR_CACHE_ENABLED | PROCESSOR_CACHE_SHARE_DYN_PROPERTIES)"
  },
  {
    "label": "BoolToString()",
    "kind": "Method",
    "detail": "Function (OCIOEXPORT const char*)",
    "insertText": "BoolToString(bool val)"
  },
  {
    "label": "BoolFromString()",
    "kind": "Method",
    "detail": "Function (OCIOEXPORT bool)",
    "insertText": "BoolFromString(const char * s)"
  },
  {
    "label": "LoggingLevelToString()",
    "kind": "Method",
    "detail": "Function (OCIOEXPORT const char*)",
    "insertText": "LoggingLevelToString(LoggingLevel level)"
  },
  {
    "label": "LoggingLevelFromString()",
    "kind": "Method",
    "detail": "Function (OCIOEXPORT LoggingLevel)",
    "insertText": "LoggingLevelFromString(const char * s)"
  },
  {
    "label": "TransformDirectionToString()",
    "kind": "Method",
    "detail": "Function (OCIOEXPORT const char*)",
    "insertText": "TransformDirectionToString(TransformDirection dir)"
  },
  {
    "label": "TransformDirectionFromString()",
    "kind": "Method",
    "detail": "Function (OCIOEXPORT TransformDirection)",
    "insertText": "TransformDirectionFromString(const char * s)"
  },
  {
    "label": "GetInverseTransformDirection()",
    "kind": "Method",
    "detail": "Function (OCIOEXPORT TransformDirection)",
    "insertText": "GetInverseTransformDirection(TransformDirection dir)"
  },
  {
    "label": "CombineTransformDirections()",
    "kind": "Method",
    "detail": "Function (OCIOEXPORT TransformDirection)",
    "insertText": "CombineTransformDirections(TransformDirection d1, TransformDirection d2)"
  },
  {
    "label": "BitDepthToString()",
    "kind": "Method",
    "detail": "Function (OCIOEXPORT const char*)",
    "insertText": "BitDepthToString(BitDepth bitDepth)"
  },
  {
    "label": "BitDepthFromString()",
    "kind": "Method",
    "detail": "Function (OCIOEXPORT BitDepth)",
    "insertText": "BitDepthFromString(const char * s)"
  },
  {
    "label": "BitDepthIsFloat()",
    "kind": "Method",
    "detail": "Function (OCIOEXPORT bool)",
    "insertText": "BitDepthIsFloat(BitDepth bitDepth)"
  },
  {
    "label": "BitDepthToInt()",
    "kind": "Method",
    "detail": "Function (OCIOEXPORT int)",
    "insertText": "BitDepthToInt(BitDepth bitDepth)"
  },
  {
    "label": "AllocationToString()",
    "kind": "Method",
    "detail": "Function (OCIOEXPORT const char*)",
    "insertText": "AllocationToString(Allocation allocation)"
  },
  {
    "label": "AllocationFromString()",
    "kind": "Method",
    "detail": "Function (OCIOEXPORT Allocation)",
    "insertText": "AllocationFromString(const char * s)"
  },
  {
    "label": "InterpolationToString()",
    "kind": "Method",
    "detail": "Function (OCIOEXPORT const char*)",
    "insertText": "InterpolationToString(Interpolation interp)"
  },
  {
    "label": "InterpolationFromString()",
    "kind": "Method",
    "detail": "Function (OCIOEXPORT Interpolation)",
    "insertText": "InterpolationFromString(const char * s)"
  },
  {
    "label": "GpuLanguageToString()",
    "kind": "Method",
    "detail": "Function (OCIOEXPORT const char*)",
    "insertText": "GpuLanguageToString(GpuLanguage language)"
  },
  {
    "label": "GpuLanguageFromString()",
    "kind": "Method",
    "detail": "Function (OCIOEXPORT GpuLanguage)",
    "insertText": "GpuLanguageFromString(const char * s)"
  },
  {
    "label": "EnvironmentModeToString()",
    "kind": "Method",
    "detail": "Function (OCIOEXPORT const char*)",
    "insertText": "EnvironmentModeToString(EnvironmentMode mode)"
  },
  {
    "label": "EnvironmentModeFromString()",
    "kind": "Method",
    "detail": "Function (OCIOEXPORT EnvironmentMode)",
    "insertText": "EnvironmentModeFromString(const char * s)"
  },
  {
    "label": "CDLStyleToString()",
    "kind": "Method",
    "detail": "Function (OCIOEXPORT const char*)",
    "insertText": "CDLStyleToString(CDLStyle style)"
  },
  {
    "label": "CDLStyleFromString()",
    "kind": "Method",
    "detail": "Function (OCIOEXPORT CDLStyle)",
    "insertText": "CDLStyleFromString(const char * style)"
  },
  {
    "label": "RangeStyleToString()",
    "kind": "Method",
    "detail": "Function (OCIOEXPORT const char*)",
    "insertText": "RangeStyleToString(RangeStyle style)"
  },
  {
    "label": "RangeStyleFromString()",
    "kind": "Method",
    "detail": "Function (OCIOEXPORT RangeStyle)",
    "insertText": "RangeStyleFromString(const char * style)"
  },
  {
    "label": "FixedFunctionStyleToString()",
    "kind": "Method",
    "detail": "Function (OCIOEXPORT const char*)",
    "insertText": "FixedFunctionStyleToString(FixedFunctionStyle style)"
  },
  {
    "label": "FixedFunctionStyleFromString()",
    "kind": "Method",
    "detail": "Function (OCIOEXPORT FixedFunctionStyle)",
    "insertText": "FixedFunctionStyleFromString(const char * style)"
  },
  {
    "label": "GradingStyleToString()",
    "kind": "Method",
    "detail": "Function (OCIOEXPORT const char*)",
    "insertText": "GradingStyleToString(GradingStyle style)"
  },
  {
    "label": "GradingStyleFromString()",
    "kind": "Method",
    "detail": "Function (OCIOEXPORT GradingStyle)",
    "insertText": "GradingStyleFromString(const char * s)"
  },
  {
    "label": "ExposureContrastStyleToString()",
    "kind": "Method",
    "detail": "Function (OCIOEXPORT const char*)",
    "insertText": "ExposureContrastStyleToString(ExposureContrastStyle style)"
  },
  {
    "label": "ExposureContrastStyleFromString()",
    "kind": "Method",
    "detail": "Function (OCIOEXPORT ExposureContrastStyle)",
    "insertText": "ExposureContrastStyleFromString(const char * style)"
  },
  {
    "label": "NegativeStyleToString()",
    "kind": "Method",
    "detail": "Function (OCIOEXPORT const char*)",
    "insertText": "NegativeStyleToString(NegativeStyle style)"
  },
  {
    "label": "NegativeStyleFromString()",
    "kind": "Method",
    "detail": "Function (OCIOEXPORT NegativeStyle)",
    "insertText": "NegativeStyleFromString(const char * style)"
  }
]