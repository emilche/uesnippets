[
  {
    "label": "UCPMap",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "UCPMap"
  },
  {
    "label": "UCPMapRangeOption",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "UCPMapRangeOption"
  },
  {
    "label": "ucpmap_get()",
    "kind": "Method",
    "detail": "Function (# ifndef __UCPMAP_H__ # define __UCPMAP_H__ # include \" unicode / utypes . h \" # ifndef U_CDECL_BEGIN typedef struct UCPMap UCPMap ; enum UCPMapRangeOption { UCPMAP_RANGE_NORMAL,UCPMAP_RANGE_FIXED_LEAD_SURROGATES,UCPMAP_RANGE_FIXED_ALL_SURROGATES } ; # ifndef U_IN_DOXYGEN typedef enum UCPMapRangeOption UCPMapRangeOption ; # endif U_CAPI uint32_t U_EXPORT2)",
    "insertText": "ucpmap_get(const UCPMap *map, UChar32 c)"
  },
  {
    "label": "UCPMapValueFilter()",
    "kind": "Method",
    "detail": "Function (typedef uint32_t U_CALLCONV)",
    "insertText": "UCPMapValueFilter(const void *context, uint32_t value)"
  },
  {
    "label": "ucpmap_getRange()",
    "kind": "Method",
    "detail": "Function (U_CAPI UChar32 U_EXPORT2)",
    "insertText": "ucpmap_getRange(const UCPMap *map, UChar32 start, UCPMapRangeOption option, uint32_t surrogateValue, UCPMapValueFilter *filter, const void *context, uint32_t *pValue)"
  }
]