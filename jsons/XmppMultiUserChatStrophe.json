[
  {
    "label": "FXmppConnectionStrophe",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FXmppConnectionStrophe"
  },
  {
    "label": "FStropheStanza",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStropheStanza"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FXmppRoomStrophe",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FXmppRoomStrophe"
  },
  {
    "label": "FXmppStropheErrorPair",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FXmppStropheErrorPair"
  },
  {
    "label": "FXmppStropheSubjectUpdate",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FXmppStropheSubjectUpdate"
  },
  {
    "label": "FXmppMultiUserChatStrophe",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FXmppMultiUserChatStrophe"
  },
  {
    "label": "FString",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FString"
  },
  {
    "label": "LexToString()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" XmppMultiUserChat . h \" # include \" Containers / Ticker . h \" # include \" Containers / Queue . h \" # if WITH_XMPP_STROPHE class FXmppConnectionStrophe ; class FStropheStanza ; # define MAX_MESSAGE_HISTORY 5 0 enum class ERoomStatusStrophe : uint8 { NotJoined,Joined,CreatePending,JoinPrivatePending,JoinPublicPending,ExitPending } ; const TCHAR*)",
    "insertText": "LexToString(ERoomStatusStrophe Value)"
  },
  {
    "label": "checkf()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "checkf(false, TEXT(\"Unhandled ERoomStatusStrophe %d\"), static_cast<int32>(Value))"
  },
  {
    "label": "FXmppRoomStrophe()",
    "kind": "Method",
    "detail": "Function (} class FXmppRoomStrophe { public :)",
    "insertText": "FXmppRoomStrophe() : Status(ERoomStatusStrophe::NotJoined)"
  },
  {
    "label": "AddNewMessage()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "AddNewMessage(const TSharedRef<FXmppChatMessage>& ChatMessage)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (LastMessages .)",
    "insertText": "Add(ChatMessage)"
  },
  {
    "label": "RemoveAt()",
    "kind": "Method",
    "detail": "Function (LastMessages .)",
    "insertText": "RemoveAt(0)"
  },
  {
    "label": "HasMember()",
    "kind": "Method",
    "detail": "Function (} } bool)",
    "insertText": "HasMember(const FXmppUserJid& RoomMemberJid)"
  },
  {
    "label": "GetMember()",
    "kind": "Method",
    "detail": "Function (FXmppChatMemberPtr FoundMember =)",
    "insertText": "GetMember(RoomMemberJid)"
  },
  {
    "label": "GetMember()",
    "kind": "Method",
    "detail": "Function (} FXmppChatMemberPtr)",
    "insertText": "GetMember(const FXmppUserJid& RoomMemberJid)"
  },
  {
    "label": "GetRoomId()",
    "kind": "Method",
    "detail": "Function (} FXmppRoomId&)",
    "insertText": "GetRoomId()"
  },
  {
    "label": "FXmppMultiUserChatStrophe()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FXmppMultiUserChatStrophe()"
  },
  {
    "label": "ReceiveStanza()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ReceiveStanza(const FStropheStanza& IncomingStanza)"
  },
  {
    "label": "HandlePresenceStanza()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HandlePresenceStanza(const FStropheStanza& IncomingStanza)"
  },
  {
    "label": "HandlePresenceErrorStanza()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HandlePresenceErrorStanza(const FStropheStanza& IncomingStanza)"
  },
  {
    "label": "HandleGroupChatStanza()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HandleGroupChatStanza(const FStropheStanza& IncomingStanza)"
  },
  {
    "label": "HandleGroupChatErrorStanza()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HandleGroupChatErrorStanza(const FStropheStanza& IncomingStanza)"
  },
  {
    "label": "HandleRoomConfigStanza()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HandleRoomConfigStanza(const FStropheStanza& IncomingStanza)"
  },
  {
    "label": "HandleRoomConfigErrorStanza()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HandleRoomConfigErrorStanza(const FStropheStanza& IncomingStanza)"
  },
  {
    "label": "OnDisconnect()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDisconnect()"
  },
  {
    "label": "OnReconnect()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnReconnect()"
  },
  {
    "label": "CreateRoom()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CreateRoom(const FXmppRoomId& RoomId, const FString& Nickname, const FXmppRoomConfig& RoomConfig)"
  },
  {
    "label": "ConfigureRoom()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ConfigureRoom(const FXmppRoomId& RoomId, const FXmppRoomConfig& RoomConfig)"
  },
  {
    "label": "RefreshRoomInfo()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RefreshRoomInfo(const FXmppRoomId& RoomId)"
  },
  {
    "label": "JoinPublicRoom()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "JoinPublicRoom(const FXmppRoomId& RoomId, const FString& Nickname)"
  },
  {
    "label": "JoinPrivateRoom()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "JoinPrivateRoom(const FXmppRoomId& RoomId, const FString& Nickname, const FString& Password)"
  },
  {
    "label": "RegisterMember()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RegisterMember(const FXmppRoomId& RoomId, const FString& Nickname)"
  },
  {
    "label": "UnregisterMember()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UnregisterMember(const FXmppRoomId& RoomId, const FString& Nickname)"
  },
  {
    "label": "ExitRoom()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ExitRoom(const FXmppRoomId& RoomId)"
  },
  {
    "label": "SendChat()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SendChat(const FXmppRoomId& RoomId, const class FString& MsgBody, const FString& ChatInfo)"
  },
  {
    "label": "GetJoinedRooms()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetJoinedRooms(TArray<FXmppRoomId>& OutRooms)"
  },
  {
    "label": "GetRoomInfo()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetRoomInfo(const FXmppRoomId& RoomId, FXmppRoomInfo& OutRoomInfo)"
  },
  {
    "label": "GetMembers()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetMembers(const FXmppRoomId& RoomId, TArray<FXmppChatMemberRef>& OutMembers)"
  },
  {
    "label": "GetMember()",
    "kind": "Method",
    "detail": "Function (FXmppChatMemberPtr)",
    "insertText": "GetMember(const FXmppRoomId& RoomId, const FXmppUserJid& MemberJid)"
  },
  {
    "label": "GetLastMessages()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetLastMessages(const FXmppRoomId& RoomId, int32 NumMessages, TArray< TSharedRef<FXmppChatMessage> >& OutMessages)"
  },
  {
    "label": "HandleMucPresence()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleMucPresence(const FXmppMucPresence& MemberPresence)"
  },
  {
    "label": "DumpMultiUserChatState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DumpMultiUserChatState()"
  },
  {
    "label": "OnRoomCreated()",
    "kind": "Method",
    "detail": "Function (FOnXmppRoomCreateComplete&)",
    "insertText": "OnRoomCreated()"
  },
  {
    "label": "OnReceiveMucPresence()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "OnReceiveMucPresence(FXmppMucPresence&& MemberPresence)"
  },
  {
    "label": "OnReceiveMucPresenceError()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnReceiveMucPresenceError(FXmppStropheErrorPair&& PresenceError)"
  },
  {
    "label": "OnReceiveGroupChatMessage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnReceiveGroupChatMessage(TUniquePtr<FXmppChatMessage>&& GroupChatMessage)"
  },
  {
    "label": "OnReceiveGroupChatSubject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnReceiveGroupChatSubject(FXmppStropheSubjectUpdate&& GroupChatMessage)"
  },
  {
    "label": "OnReceiveRoomConfigError()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnReceiveRoomConfigError(FXmppStropheErrorPair&& RoomConfigError)"
  },
  {
    "label": "OnReceiveRoomConfigSuccess()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnReceiveRoomConfigSuccess(FXmppRoomId&& RoomId)"
  },
  {
    "label": "OnReceieveRoomInfoUpdate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnReceieveRoomInfoUpdate(FXmppRoomId&& RoomId)"
  },
  {
    "label": "SendJoinRoomStanza()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SendJoinRoomStanza(const FXmppRoomStrophe& Room, const FString& Password = FString())"
  },
  {
    "label": "SendExitRoomStanza()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SendExitRoomStanza(const FXmppRoomStrophe& Room)"
  },
  {
    "label": "SendRequestRoomInfoConfigStanza()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SendRequestRoomInfoConfigStanza(const FXmppRoomStrophe& Room)"
  },
  {
    "label": "InternalConfigureRoom()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "InternalConfigureRoom(const FXmppRoomStrophe& Room, const FXmppRoomConfig& RoomConfig, EConfigureRoomTypeStrophe CallbackType)"
  },
  {
    "label": "HandleCreateRoomComplete()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleCreateRoomComplete(FXmppRoomStrophe& Room, FXmppMucPresence&& MemberPresence)"
  },
  {
    "label": "HandleJoinPrivateRoomComplete()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleJoinPrivateRoomComplete(FXmppRoomStrophe& Room, FXmppMucPresence&& MemberPresence)"
  },
  {
    "label": "HandleJoinPublicRoomComplete()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleJoinPublicRoomComplete(FXmppRoomStrophe& Room, FXmppMucPresence&& MemberPresence)"
  },
  {
    "label": "HandleExitRoomComplete()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleExitRoomComplete(FXmppRoomStrophe& Room, FXmppMucPresence&& MemberPresence)"
  },
  {
    "label": "HandleRoomMemberJoined()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleRoomMemberJoined(FXmppRoomStrophe& Room, FXmppMucPresence&& MemberPresence)"
  },
  {
    "label": "HandleRoomMemberChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleRoomMemberChanged(FXmppRoomStrophe& Room, FXmppMucPresence&& MemberPresence)"
  },
  {
    "label": "HandleRoomMemberLeft()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleRoomMemberLeft(FXmppRoomStrophe& Room, FXmppMucPresence&& MemberPresence)"
  },
  {
    "label": "CleanupMessages()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CleanupMessages()"
  }
]