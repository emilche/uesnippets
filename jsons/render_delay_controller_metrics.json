[
  {
    "label": "RenderDelayControllerMetrics",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RenderDelayControllerMetrics"
  },
  {
    "label": "RenderDelayControllerMetrics()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_AUDIO_PROCESSING_AEC3_RENDER_DELAY_CONTROLLER_METRICS_H_ # define MODULES_AUDIO_PROCESSING_AEC3_RENDER_DELAY_CONTROLLER_METRICS_H_ # include<stddef . h> # include \" absl / types / optional . h \" # include \" modules / audio_processing / aec3 / clockdrift_detector . h \" namespace webrtc { class RenderDelayControllerMetrics { public :)",
    "insertText": "RenderDelayControllerMetrics()"
  },
  {
    "label": "RenderDelayControllerMetrics()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenderDelayControllerMetrics(const RenderDelayControllerMetrics&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (RenderDelayControllerMetrics&)",
    "insertText": "operator(const RenderDelayControllerMetrics&)"
  },
  {
    "label": "Update()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Update(absl::optional<size_t> delay_samples, absl::optional<size_t> buffer_delay_blocks, ClockdriftDetector::Level clockdrift)"
  },
  {
    "label": "ResetMetrics()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "ResetMetrics()"
  }
]