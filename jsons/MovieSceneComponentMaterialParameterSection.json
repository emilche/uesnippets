[
  {
    "label": "FScalarMaterialParameterInfoAndCurve",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FScalarMaterialParameterInfoAndCurve"
  },
  {
    "label": "FColorMaterialParameterInfoAndCurves",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FColorMaterialParameterInfoAndCurves"
  },
  {
    "label": "UMovieSceneComponentMaterialParameterSection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieSceneComponentMaterialParameterSection"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" UObject / ObjectMacros . h \" # include \" Curves / KeyHandle . h \" # include \" Curves / RichCurve . h \" # include \" MovieSceneSection . h \" # include \" Channels / MovieSceneFloatChannel . h \" # include \" EntitySystem / IMovieSceneEntityProvider . h \" # include \" MaterialTypes . h \" # include \" MovieSceneComponentMaterialParameterSection . generated . h \")",
    "insertText": "USTRUCT()"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() FScalarMaterialParameterInfoAndCurve()"
  },
  {
    "label": "FScalarMaterialParameterInfoAndCurve()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FScalarMaterialParameterInfoAndCurve(const FMaterialParameterInfo& InParameterInfo)"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() FColorMaterialParameterInfoAndCurves()"
  },
  {
    "label": "FColorMaterialParameterInfoAndCurves()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FColorMaterialParameterInfoAndCurves(const FMaterialParameterInfo& InParameterInfo)"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# endif } ;)",
    "insertText": "UCLASS(MinimalAPI)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() public: UFUNCTION(BlueprintCallable, Category = \"Sequencer|Section\") MOVIESCENETRACKS_API void AddScalarParameterKey(const FMaterialParameterInfo& InParameterInfo, FFrameNumber InTime, float InValue, const FString& InLayerName, const FString& InAssetName)"
  },
  {
    "label": "RemoveScalarParameter()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR bool)",
    "insertText": "RemoveScalarParameter(FName InParameterPath)"
  },
  {
    "label": "RemoveColorParameter()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RemoveColorParameter(FName InParameterPath)"
  },
  {
    "label": "ImportEntityImpl()",
    "kind": "Method",
    "detail": "Function (# endif void)",
    "insertText": "ImportEntityImpl(UMovieSceneEntitySystemLinker* EntityLinker, const FEntityImportParams& Params, FImportedEntity* OutImportedEntity)"
  },
  {
    "label": "PopulateEvaluationFieldImpl()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PopulateEvaluationFieldImpl(const TRange<FFrameNumber>& EffectiveRange, const FMovieSceneEvaluationFieldEntityMetaData& InMetaData, FMovieSceneEntityComponentFieldBuilder* OutFieldBuilder)"
  },
  {
    "label": "ExternalPopulateEvaluationField()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExternalPopulateEvaluationField(const TRange<FFrameNumber>& EffectiveRange, const FMovieSceneEvaluationFieldEntityMetaData& InMetaData, FMovieSceneEntityComponentFieldBuilder* OutFieldBuilder)"
  },
  {
    "label": "CacheChannelProxy()",
    "kind": "Method",
    "detail": "Function (protected : EMovieSceneChannelProxyType)",
    "insertText": "CacheChannelProxy()"
  },
  {
    "label": "PostEditImport()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostEditImport()"
  },
  {
    "label": "PostEditUndo()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR void)",
    "insertText": "PostEditUndo()"
  }
]