[
  {
    "label": "UEnumCookedMetaData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEnumCookedMetaData"
  },
  {
    "label": "UUserDefinedEnum",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UUserDefinedEnum"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / Class . h \" # include \" Templates / SubclassOf . h \" # include \" UserDefinedEnum . generated . h \" class UEnumCookedMetaData ;)",
    "insertText": "UCLASS(MinimalAPI)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() #if WITH_EDITORONLY_DATA UPROPERTY()"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (public : void)",
    "insertText": "Serialize(FArchive& Ar)"
  },
  {
    "label": "GenerateFullEnumName()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GenerateFullEnumName(const TCHAR* InEnumName)"
  },
  {
    "label": "ResolveEnumerator()",
    "kind": "Method",
    "detail": "Function (int64)",
    "insertText": "ResolveEnumerator(FArchive& Ar, int64 EnumeratorValue)"
  },
  {
    "label": "GetDisplayNameTextByIndex()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetDisplayNameTextByIndex(int32 InIndex)"
  },
  {
    "label": "GetAuthoredNameStringByIndex()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetAuthoredNameStringByIndex(int32 InIndex)"
  },
  {
    "label": "SetEnums()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetEnums(TArray<TPair<FName, int64>>& InNames, ECppForm InCppForm, EEnumFlags InFlags = EEnumFlags::None, bool bAddMaxKeyIfMissing = true)"
  },
  {
    "label": "Rename()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR bool)",
    "insertText": "Rename(const TCHAR* NewName = NULL, UObject* NewOuter = NULL, ERenameFlags Flags = REN_None)"
  },
  {
    "label": "PostDuplicate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostDuplicate(bool bDuplicateForPIE)"
  },
  {
    "label": "PostLoad()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostLoad()"
  },
  {
    "label": "IsPostLoadThreadSafe()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsPostLoadThreadSafe()"
  },
  {
    "label": "PostEditUndo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostEditUndo()"
  },
  {
    "label": "PostEditChangeProperty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostEditChangeProperty(FPropertyChangedEvent& PropertyChangedEvent)"
  },
  {
    "label": "GetAssetRegistryTags()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetAssetRegistryTags(FAssetRegistryTagsContext Context)"
  },
  {
    "label": "PreSaveRoot()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PreSaveRoot(FObjectPreSaveRootContext ObjectSaveContext)"
  },
  {
    "label": "PostSaveRoot()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostSaveRoot(FObjectPostSaveRootContext ObjectSaveContext)"
  },
  {
    "label": "GenerateNewEnumeratorName()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GenerateNewEnumeratorName()"
  },
  {
    "label": "GetCookedMetaDataClass()",
    "kind": "Method",
    "detail": "Function (# endif # if WITH_EDITORONLY_DATA protected : TSubclassOf<UEnumCookedMetaData>)",
    "insertText": "GetCookedMetaDataClass()"
  },
  {
    "label": "NewCookedMetaData()",
    "kind": "Method",
    "detail": "Function (private : UEnumCookedMetaData*)",
    "insertText": "NewCookedMetaData()"
  },
  {
    "label": "FindCookedMetaData()",
    "kind": "Method",
    "detail": "Function (const UEnumCookedMetaData*)",
    "insertText": "FindCookedMetaData()"
  },
  {
    "label": "PurgeCookedMetaData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PurgeCookedMetaData()"
  }
]