[
  {
    "label": "FAnimInstanceProxy",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimInstanceProxy"
  },
  {
    "label": "UUserDefinedStruct",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UUserDefinedStruct"
  },
  {
    "label": "FAnimBlueprintFunction",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimBlueprintFunction"
  },
  {
    "label": "IAnimClassInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IAnimClassInterface"
  },
  {
    "label": "FAnimNode_LinkedAnimGraph",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimNode_LinkedAnimGraph"
  },
  {
    "label": "UAnimInstance",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimInstance"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" Templates / SubclassOf . h \" # include \" Animation / AnimCurveTypes . h \" # include \" Animation / AnimNode_CustomProperty . h \" # include \" Animation / AnimInstance . h \" # include \" Animation / AnimLayerInterface . h \" # include \" AnimNode_LinkedAnimGraph . generated . h \" struct FAnimInstanceProxy ; class UUserDefinedStruct ; struct FAnimBlueprintFunction ; class IAnimClassInterface ;)",
    "insertText": "USTRUCT(BlueprintInternalUseOnly)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: ENGINE_API FAnimNode_LinkedAnimGraph()"
  },
  {
    "label": "SetAnimClass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAnimClass(TSubclassOf<UAnimInstance> InClass, const UAnimInstance* InOwningAnimInstance)"
  },
  {
    "label": "GetDynamicLinkFunctionName()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetDynamicLinkFunctionName()"
  },
  {
    "label": "GetDynamicLinkTarget()",
    "kind": "Method",
    "detail": "Function (UAnimInstance*)",
    "insertText": "GetDynamicLinkTarget(UAnimInstance* InOwningAnimInstance)"
  },
  {
    "label": "Initialize_AnyThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Initialize_AnyThread(const FAnimationInitializeContext& Context)"
  },
  {
    "label": "CacheBones_AnyThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CacheBones_AnyThread(const FAnimationCacheBonesContext& Context)"
  },
  {
    "label": "Update_AnyThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Update_AnyThread(const FAnimationUpdateContext& Context)"
  },
  {
    "label": "Evaluate_AnyThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Evaluate_AnyThread(FPoseContext& Output)"
  },
  {
    "label": "GatherDebugData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GatherDebugData(FNodeDebugData& DebugData)"
  },
  {
    "label": "InitializeSubGraph_AnyThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeSubGraph_AnyThread(const FAnimationInitializeContext& Context)"
  },
  {
    "label": "CacheBonesSubGraph_AnyThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CacheBonesSubGraph_AnyThread(const FAnimationCacheBonesContext& Context)"
  },
  {
    "label": "OnInitializeAnimInstance()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "OnInitializeAnimInstance(const FAnimInstanceProxy* InProxy, const UAnimInstance* InAnimInstance)"
  },
  {
    "label": "NeedsOnInitializeAnimInstance()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "NeedsOnInitializeAnimInstance()"
  },
  {
    "label": "TeardownInstance()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TeardownInstance(const UAnimInstance* InOwningAnimInstance)"
  },
  {
    "label": "CanTeardownLinkedInstance()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanTeardownLinkedInstance(const UAnimInstance* LinkedInstance)"
  },
  {
    "label": "DynamicLink()",
    "kind": "Method",
    "detail": "Function (# endif void)",
    "insertText": "DynamicLink(UAnimInstance* InOwningAnimInstance)"
  },
  {
    "label": "DynamicUnlink()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DynamicUnlink(UAnimInstance* InOwningAnimInstance)"
  },
  {
    "label": "FindFunctionInputIndex()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "FindFunctionInputIndex(const FAnimBlueprintFunction& AnimBlueprintFunction, const FName& InInputName)"
  },
  {
    "label": "RequestBlend()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RequestBlend(const IAnimClassInterface* PriorAnimBPClass, const IAnimClassInterface* NewAnimBPClass)"
  },
  {
    "label": "InitializeStatID()",
    "kind": "Method",
    "detail": "Function (class UAnimInstance ; # if ANIMNODE_STATS_VERBOSE void)",
    "insertText": "InitializeStatID()"
  }
]