[
  {
    "label": "FAnimInstanceProxy",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimInstanceProxy"
  },
  {
    "label": "UUserDefinedStruct",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UUserDefinedStruct"
  },
  {
    "label": "FAnimBlueprintFunction",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimBlueprintFunction"
  },
  {
    "label": "IAnimClassInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IAnimClassInterface"
  },
  {
    "label": "FAnimNode_LinkedAnimGraph",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimNode_LinkedAnimGraph"
  },
  {
    "label": "we",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "we"
  },
  {
    "label": "spawned",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "spawned"
  },
  {
    "label": "of",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "of"
  },
  {
    "label": "UAnimInstance",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimInstance"
  },
  {
    "label": "FAnimNode_LinkedAnimGraph()",
    "kind": "Method",
    "detail": "Function (ENGINE_API)",
    "insertText": "FAnimNode_LinkedAnimGraph()"
  },
  {
    "label": "SetAnimClass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAnimClass(TSubclassOf<UAnimInstance> InClass, const UAnimInstance* InOwningAnimInstance)"
  },
  {
    "label": "InitializeSubGraph_AnyThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeSubGraph_AnyThread(const FAnimationInitializeContext& Context)"
  },
  {
    "label": "CacheBonesSubGraph_AnyThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CacheBonesSubGraph_AnyThread(const FAnimationCacheBonesContext& Context)"
  },
  {
    "label": "ReinitializeLinkedAnimInstance()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReinitializeLinkedAnimInstance(const UAnimInstance* InOwningAnimInstance, UAnimInstance* InNewAnimInstance = nullptr)"
  },
  {
    "label": "TeardownInstance()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TeardownInstance(const UAnimInstance* InOwningAnimInstance)"
  },
  {
    "label": "DynamicLink()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DynamicLink(UAnimInstance* InOwningAnimInstance)"
  },
  {
    "label": "DynamicUnlink()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DynamicUnlink(UAnimInstance* InOwningAnimInstance)"
  },
  {
    "label": "FindFunctionInputIndex()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "FindFunctionInputIndex(const FAnimBlueprintFunction& AnimBlueprintFunction, const FName& InInputName)"
  },
  {
    "label": "RequestBlend()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RequestBlend(const IAnimClassInterface* PriorAnimBPClass, const IAnimClassInterface* NewAnimBPClass)"
  }
]