[
  {
    "label": "ITableRow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITableRow"
  },
  {
    "label": "SToolTip",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SToolTip"
  },
  {
    "label": "SVerticalBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SVerticalBox"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "FGeometry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGeometry"
  },
  {
    "label": "FKeyEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FKeyEvent"
  },
  {
    "label": "FProjectCategory",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FProjectCategory"
  },
  {
    "label": "FProjectItem",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FProjectItem"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "SProjectBrowser",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SProjectBrowser"
  },
  {
    "label": "SSearchBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SSearchBox"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct(const FArguments& InArgs)"
  },
  {
    "label": "OpenSelectedProject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OpenSelectedProject()"
  },
  {
    "label": "OnBrowseToProject()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnBrowseToProject()"
  },
  {
    "label": "OnOpenMarketplace()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnOpenMarketplace()"
  },
  {
    "label": "OnOpenProject()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnOpenProject()"
  },
  {
    "label": "OnAutoloadLastProjectChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAutoloadLastProjectChanged(ECheckBoxState NewState)"
  },
  {
    "label": "MakeProjectViewWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<ITableRow>)",
    "insertText": "MakeProjectViewWidget(TSharedPtr<FProjectItem> ProjectItem, const TSharedRef<STableViewBase>& OwnerTable)"
  },
  {
    "label": "FindProjects()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "FindProjects()"
  },
  {
    "label": "OpenProject()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "OpenProject(const FString& ProjectFile)"
  },
  {
    "label": "PopulateFilteredProjects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PopulateFilteredProjects()"
  },
  {
    "label": "HandleProjectItemDoubleClick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleProjectItemDoubleClick(TSharedPtr<FProjectItem> ProjectItem)"
  },
  {
    "label": "HandleProjectViewSelectionChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleProjectViewSelectionChanged(TSharedPtr<FProjectItem> ProjectItem, ESelectInfo::Type SelectInfo)"
  },
  {
    "label": "OnFilterTextChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnFilterTextChanged(const FText& InText)"
  },
  {
    "label": "SortProjectTiles()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SortProjectTiles(EProjectSortOption NewSortOption)"
  }
]