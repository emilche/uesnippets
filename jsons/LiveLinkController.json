[
  {
    "label": "AActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AActor"
  },
  {
    "label": "ULiveLinkController",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULiveLinkController"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / UObjectGlobals . h \" # include \" UObject / Object . h \" # include \" LiveLinkRole . h \" # include \" Templates / SubclassOf . h \" # include \" LiveLinkController . generated . h \" class AActor ;)",
    "insertText": "UCLASS(Abstract, MinimalAPI)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: LIVELINKINTERFACE_API virtual TSubclassOf<ULiveLinkRole> GetRole() const PURE_VIRTUAL(ULiveLinkController::GetRole, return TSubclassOf<ULiveLinkRole>();)"
  },
  {
    "label": "OnRegistered()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnRegistered()"
  },
  {
    "label": "Tick()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Tick(float DeltaTime, const FLiveLinkSubjectRepresentation& SubjectRepresentation)"
  },
  {
    "label": "InitializeInEditor()",
    "kind": "Method",
    "detail": "Function (} # if WITH_EDITOR void)",
    "insertText": "InitializeInEditor(UObject* FromObject)"
  }
]