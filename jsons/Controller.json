[
  {
    "label": "Controller",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Controller"
  },
  {
    "label": "NetworkMetrics",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "NetworkMetrics"
  },
  {
    "label": "NetworkMetrics()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_AUDIO_CODING_AUDIO_NETWORK_ADAPTOR_CONTROLLER_H_ # define MODULES_AUDIO_CODING_AUDIO_NETWORK_ADAPTOR_CONTROLLER_H_ # include \" absl / types / optional . h \" # include \" modules / audio_coding / audio_network_adaptor / include / audio_network_adaptor . h \" namespace webrtc { class Controller { public : struct NetworkMetrics {)",
    "insertText": "NetworkMetrics()"
  },
  {
    "label": "Controller()",
    "kind": "Method",
    "detail": "Function (absl::optional<int> uplink_bandwidth_bps ; absl::optional<float> uplink_packet_loss_fraction ; absl::optional<int> target_audio_bitrate_bps ; absl::optional<int> rtt_ms ; absl::optional<size_t> overhead_bytes_per_packet ; } ; ~)",
    "insertText": "Controller()"
  },
  {
    "label": "UpdateNetworkMetrics()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateNetworkMetrics(const NetworkMetrics& network_metrics)"
  },
  {
    "label": "MakeDecision()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MakeDecision(AudioEncoderRuntimeConfig* config)"
  }
]