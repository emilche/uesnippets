[
  {
    "label": "FilterPacketLossMode",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "FilterPacketLossMode"
  },
  {
    "label": "VCMProtectionParameters",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VCMProtectionParameters"
  },
  {
    "label": "VCMProtectionMethodEnum",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "VCMProtectionMethodEnum"
  },
  {
    "label": "VCMLossProbabilitySample",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "VCMLossProbabilitySample"
  },
  {
    "label": "VCMProtectionMethod",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "VCMProtectionMethod"
  },
  {
    "label": "VCMNackMethod",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "VCMNackMethod"
  },
  {
    "label": "VCMFecMethod",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "VCMFecMethod"
  },
  {
    "label": "VCMNackFecMethod",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "VCMNackFecMethod"
  },
  {
    "label": "VCMLossProtectionLogic",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "VCMLossProtectionLogic"
  },
  {
    "label": "VCMProtectionMethod()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "VCMProtectionMethod()"
  },
  {
    "label": "RequiredPacketLossER()",
    "kind": "Method",
    "detail": "Function (uint8_t)",
    "insertText": "RequiredPacketLossER()"
  },
  {
    "label": "RequiredProtectionFactorK()",
    "kind": "Method",
    "detail": "Function (uint8_t)",
    "insertText": "RequiredProtectionFactorK()"
  },
  {
    "label": "RequiredProtectionFactorD()",
    "kind": "Method",
    "detail": "Function (uint8_t)",
    "insertText": "RequiredProtectionFactorD()"
  },
  {
    "label": "RequiredUepProtectionK()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RequiredUepProtectionK()"
  },
  {
    "label": "RequiredUepProtectionD()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RequiredUepProtectionD()"
  },
  {
    "label": "VCMNackMethod()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "VCMNackMethod()"
  },
  {
    "label": "EffectivePacketLoss()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "EffectivePacketLoss(const VCMProtectionParameters* parameter)"
  },
  {
    "label": "VCMFecMethod()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "VCMFecMethod()"
  },
  {
    "label": "EffectivePacketLoss()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "EffectivePacketLoss(const VCMProtectionParameters* parameters)"
  },
  {
    "label": "ProtectionFactor()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ProtectionFactor(const VCMProtectionParameters* parameters)"
  },
  {
    "label": "UpdateProtectionFactorD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateProtectionFactorD(uint8_t protectionFactorD)"
  },
  {
    "label": "UpdateProtectionFactorK()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateProtectionFactorK(uint8_t protectionFactorK)"
  },
  {
    "label": "BitsPerFrame()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BitsPerFrame(const VCMProtectionParameters* parameters)"
  },
  {
    "label": "VCMNackFecMethod()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "VCMNackFecMethod(int64_t lowRttNackThresholdMs,\n                   int64_t highRttNackThresholdMs)"
  },
  {
    "label": "EffectivePacketLoss()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "EffectivePacketLoss(const VCMProtectionParameters* parameters)"
  },
  {
    "label": "ProtectionFactor()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ProtectionFactor(const VCMProtectionParameters* parameters)"
  },
  {
    "label": "BitRateTooLowForFec()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "BitRateTooLowForFec(const VCMProtectionParameters* parameters)"
  },
  {
    "label": "ComputeMaxFramesFec()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ComputeMaxFramesFec(const VCMProtectionParameters* parameters)"
  },
  {
    "label": "VCMLossProtectionLogic()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "VCMLossProtectionLogic(int64_t nowMs)"
  },
  {
    "label": "SetMethod()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetMethod(VCMProtectionMethodEnum newMethodType)"
  },
  {
    "label": "UpdateRtt()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateRtt(int64_t rtt)"
  },
  {
    "label": "UpdateFilteredLossPr()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateFilteredLossPr(uint8_t packetLossEnc)"
  },
  {
    "label": "UpdateBitRate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateBitRate(float bitRate)"
  },
  {
    "label": "UpdatePacketsPerFrame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdatePacketsPerFrame(float nPackets, int64_t nowMs)"
  },
  {
    "label": "UpdatePacketsPerFrameKey()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdatePacketsPerFrameKey(float nPackets, int64_t nowMs)"
  },
  {
    "label": "UpdateKeyFrameSize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateKeyFrameSize(float keyFrameSize)"
  },
  {
    "label": "UpdateFrameSize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateFrameSize(size_t width, size_t height)"
  },
  {
    "label": "UpdateNumLayers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateNumLayers(int numLayers)"
  },
  {
    "label": "UpdateMethod()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UpdateMethod()"
  },
  {
    "label": "FilteredLoss()",
    "kind": "Method",
    "detail": "Function (uint8_t)",
    "insertText": "FilteredLoss(int64_t nowMs,\n                       FilterPacketLossMode filter_mode,\n                       uint8_t lossPr255)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset(int64_t nowMs)"
  },
  {
    "label": "Release()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Release()"
  },
  {
    "label": "UpdateMaxLossHistory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateMaxLossHistory(uint8_t lossPr255, int64_t now)"
  }
]