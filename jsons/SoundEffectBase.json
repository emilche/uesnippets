[
  {
    "label": "USoundEffectPreset",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USoundEffectPreset"
  },
  {
    "label": "ENGINE_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ENGINE_API"
  },
  {
    "label": "EFFECT_SETTINGS_NAME2()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" AudioResampler . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / Object . h \" # include \" UObject / WeakObjectPtr . h \" # include \" UObject / WeakObjectPtrTemplates . h \" # include \" HAL / ThreadSafeBool . h \" # include \" Containers / Queue . h \" # include \" Misc / ScopeLock . h \" class USoundEffectPreset ; # define)",
    "insertText": "EFFECT_SETTINGS_NAME2(CLASS_NAME, SUFFIX) F ## CLASS_NAME ## SUFFIX #define EFFECT_SETTINGS_NAME1(CLASS_NAME, SUFFIX) EFFECT_SETTINGS_NAME2(CLASS_NAME, SUFFIX) #define EFFECT_SETTINGS_NAME(CLASS_NAME) EFFECT_SETTINGS_NAME1(CLASS_NAME, Settings) #define EFFECT_PRESET_NAME2(CLASS_NAME, SUFFIX) U ## CLASS_NAME ## SUFFIX #define EFFECT_PRESET_NAME1(CLASS_NAME, SUFFIX) EFFECT_PRESET_NAME2(CLASS_NAME, SUFFIX) #define EFFECT_PRESET_NAME(CLASS_NAME) EFFECT_PRESET_NAME1(CLASS_NAME, Preset) #define GET_EFFECT_SETTINGS(EFFECT_NAME) \\ U##EFFECT_NAME##Preset* _Preset = Cast<U##EFFECT_NAME##Preset>(Preset)"
  },
  {
    "label": "GetSettings()",
    "kind": "Method",
    "detail": "Function (\\ F # # EFFECT_NAME # # Settings Settings = _Preset ! = nullptr ? _Preset ->)",
    "insertText": "GetSettings() : F##EFFECT_NAME##Settings()"
  },
  {
    "label": "EFFECT_PRESET_METHODS()",
    "kind": "Method",
    "detail": "Function (\\ # define)",
    "insertText": "EFFECT_PRESET_METHODS(EFFECT_NAME) \\ virtual bool CanFilter()"
  },
  {
    "label": "GetSupportedClass()",
    "kind": "Method",
    "detail": "Function (} \\ UClass*)",
    "insertText": "GetSupportedClass()"
  },
  {
    "label": "CreateNewEffect()",
    "kind": "Method",
    "detail": "Function (} \\ FSoundEffectBase*)",
    "insertText": "CreateNewEffect()"
  },
  {
    "label": "EFFECT_PRESET_NAME()",
    "kind": "Method",
    "detail": "Function (\\ USoundEffectPreset* NewPreset = NewObject<)",
    "insertText": "EFFECT_PRESET_NAME(EFFECT_NAME)>(InParent, GetSupportedClass(), Name, Flags)"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (\\ NewPreset ->)",
    "insertText": "Init()"
  },
  {
    "label": "ScopeLock()",
    "kind": "Method",
    "detail": "Function (\\ FScopeLock)",
    "insertText": "ScopeLock(&SettingsCritSect)"
  },
  {
    "label": "UpdateSettings()",
    "kind": "Method",
    "detail": "Function (\\ SettingsCopy = Settings ; \\ } \\ void)",
    "insertText": "UpdateSettings(const F##EFFECT_NAME##Settings& InSettings)"
  },
  {
    "label": "Update()",
    "kind": "Method",
    "detail": "Function (\\ SettingsCopy = InSettings ; \\)",
    "insertText": "Update()"
  },
  {
    "label": "UpdateSettings()",
    "kind": "Method",
    "detail": "Function (\\ } \\ void)",
    "insertText": "UpdateSettings(TUniqueFunction<void(F##EFFECT_NAME##Settings&)> InCommand)"
  },
  {
    "label": "InCommand()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "InCommand(SettingsCopy)"
  },
  {
    "label": "GetSettings()",
    "kind": "Method",
    "detail": "Function (\\ } \\ F # # EFFECT_NAME # # Settings)",
    "insertText": "GetSettings()"
  },
  {
    "label": "FSoundEffectBase()",
    "kind": "Method",
    "detail": "Function (\\ return SettingsCopy ; \\ } \\ FCriticalSection SettingsCritSect ; \\ F # # EFFECT_NAME # # Settings SettingsCopy ; \\ class FSoundEffectBase { public : ~)",
    "insertText": "FSoundEffectBase()"
  },
  {
    "label": "OnPresetChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPresetChanged()"
  },
  {
    "label": "IsActive()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsActive()"
  },
  {
    "label": "SetEnabled()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetEnabled(const bool bInIsEnabled)"
  },
  {
    "label": "GetPreset()",
    "kind": "Method",
    "detail": "Function (USoundEffectPreset*)",
    "insertText": "GetPreset()"
  },
  {
    "label": "GetPresetPtr()",
    "kind": "Method",
    "detail": "Function (TWeakObjectPtr<USoundEffectPreset>&)",
    "insertText": "GetPresetPtr()"
  },
  {
    "label": "IsPreset()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsPreset(USoundEffectPreset* InPreset)"
  },
  {
    "label": "EffectCommand()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EffectCommand(TUniqueFunction<void()> Command)"
  },
  {
    "label": "GetParentPresetId()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetParentPresetId()"
  },
  {
    "label": "PumpPendingMessages()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PumpPendingMessages()"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (FCriticalSection SettingsCritSect ; TArray<uint8> CurrentAudioThreadSettingsData ; FThreadSafeBool bChanged ; TWeakObjectPtr<USoundEffectPreset> Preset ; uint32 ParentPresetUniqueId = INDEX_NONE ; FThreadSafeBool bIsRunning ; FThreadSafeBool bIsActive ; TQueue<TUniqueFunction<)",
    "insertText": "void()"
  },
  {
    "label": "ClearPreset()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "ClearPreset()"
  }
]