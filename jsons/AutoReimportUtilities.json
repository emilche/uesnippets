[
  {
    "label": "IAssetRegistry",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IAssetRegistry"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "FAssetData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAssetData"
  },
  {
    "label": "DECLARE_LOG_CATEGORY_EXTERN()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" Containers / UnrealString . h \" # include \" Logging / LogMacros . h \" class IAssetRegistry ; class UObject ; struct FAssetData ;)",
    "insertText": "DECLARE_LOG_CATEGORY_EXTERN(LogAutoReimportManager, Log, All)"
  },
  {
    "label": "Reduce()",
    "kind": "Method",
    "detail": "Function (namespace Utils { template<T,P,A> A)",
    "insertText": "Reduce(const TArray<T>& InArray, P Predicate, A Accumulator)"
  },
  {
    "label": "Predicate()",
    "kind": "Method",
    "detail": "Function (Accumulator =)",
    "insertText": "Predicate(X, Accumulator)"
  },
  {
    "label": "FindAssetsPertainingToFile()",
    "kind": "Method",
    "detail": "Function (} return Accumulator ; } TArray<FAssetData>)",
    "insertText": "FindAssetsPertainingToFile(const IAssetRegistry& Registry, const FString& AbsoluteFilename)"
  },
  {
    "label": "ExtractSourceFilePaths()",
    "kind": "Method",
    "detail": "Function (TArray<FString>)",
    "insertText": "ExtractSourceFilePaths(UObject* Object)"
  },
  {
    "label": "ExtractSourceFilePaths()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExtractSourceFilePaths(UObject* Object, TArray<FString>& OutSourceFiles)"
  }
]