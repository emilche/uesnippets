[
  {
    "label": "UnescapeRule",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UnescapeRule"
  },
  {
    "label": "EscapeAllExceptUnreserved()",
    "kind": "Method",
    "detail": "Function (std::string)",
    "insertText": "EscapeAllExceptUnreserved(StringPiece text)"
  },
  {
    "label": "EscapeQueryParamValue()",
    "kind": "Method",
    "detail": "Function (std::string)",
    "insertText": "EscapeQueryParamValue(StringPiece text, bool use_plus)"
  },
  {
    "label": "EscapePath()",
    "kind": "Method",
    "detail": "Function (std::string)",
    "insertText": "EscapePath(StringPiece path)"
  },
  {
    "label": "EscapeNSURLPrecursor()",
    "kind": "Method",
    "detail": "Function (std::string)",
    "insertText": "EscapeNSURLPrecursor(StringPiece precursor)"
  },
  {
    "label": "EscapeUrlEncodedData()",
    "kind": "Method",
    "detail": "Function (std::string)",
    "insertText": "EscapeUrlEncodedData(StringPiece path, bool use_plus)"
  },
  {
    "label": "EscapeNonASCIIAndPercent()",
    "kind": "Method",
    "detail": "Function (std::string)",
    "insertText": "EscapeNonASCIIAndPercent(StringPiece input)"
  },
  {
    "label": "EscapeNonASCII()",
    "kind": "Method",
    "detail": "Function (std::string)",
    "insertText": "EscapeNonASCII(StringPiece input)"
  },
  {
    "label": "EscapeExternalHandlerValue()",
    "kind": "Method",
    "detail": "Function (std::string)",
    "insertText": "EscapeExternalHandlerValue(StringPiece text)"
  },
  {
    "label": "AppendEscapedCharForHTML()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AppendEscapedCharForHTML(char c, std::string* output)"
  },
  {
    "label": "EscapeForHTML()",
    "kind": "Method",
    "detail": "Function (std::string)",
    "insertText": "EscapeForHTML(StringPiece text)"
  },
  {
    "label": "EscapeForHTML()",
    "kind": "Method",
    "detail": "Function (std::u16string)",
    "insertText": "EscapeForHTML(StringPiece16 text)"
  },
  {
    "label": "UnescapeURLComponent()",
    "kind": "Method",
    "detail": "Function (std::string)",
    "insertText": "UnescapeURLComponent(StringPiece escaped_text,\n                                             UnescapeRule::Type rules)"
  },
  {
    "label": "UnescapeAndDecodeUTF8URLComponentWithAdjustments()",
    "kind": "Method",
    "detail": "Function (std::u16string)",
    "insertText": "UnescapeAndDecodeUTF8URLComponentWithAdjustments(\n    StringPiece text,\n    UnescapeRule::Type rules,\n    OffsetAdjuster::Adjustments* adjustments)"
  },
  {
    "label": "UnescapeBinaryURLComponent()",
    "kind": "Method",
    "detail": "Function (std::string)",
    "insertText": "UnescapeBinaryURLComponent(\n    StringPiece escaped_text,\n    UnescapeRule::Type rules = UnescapeRule::NORMAL)"
  },
  {
    "label": "UnescapeBinaryURLComponentSafe()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UnescapeBinaryURLComponentSafe(StringPiece escaped_text,\n                                                bool fail_on_path_separators,\n                                                std::string* unescaped_text)"
  },
  {
    "label": "ContainsEncodedBytes()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ContainsEncodedBytes(StringPiece escaped_text,\n                                      const std::set<unsigned char>& bytes)"
  },
  {
    "label": "UnescapeForHTML()",
    "kind": "Method",
    "detail": "Function (std::u16string)",
    "insertText": "UnescapeForHTML(StringPiece16 text)"
  }
]