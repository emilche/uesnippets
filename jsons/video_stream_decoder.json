[
  {
    "label": "VideoStreamDecoderInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "VideoStreamDecoderInterface"
  },
  {
    "label": "Callbacks",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Callbacks"
  },
  {
    "label": "FrameInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FrameInfo"
  },
  {
    "label": "Callbacks()",
    "kind": "Method",
    "detail": "Function (# ifndef API_VIDEO_VIDEO_STREAM_DECODER_H_ # define API_VIDEO_VIDEO_STREAM_DECODER_H_ # include<map> # include<memory> # include<utility> # include \" api / units / time_delta . h \" # include \" api / video / encoded_frame . h \" # include \" api / video / video_content_type . h \" # include \" api / video / video_frame . h \" # include \" api / video_codecs / sdp_video_format . h \" # include \" api / video_codecs / video_decoder_factory . h \" namespace webrtc { class VideoStreamDecoderInterface { public : class Callbacks { public : ~)",
    "insertText": "Callbacks()"
  },
  {
    "label": "OnNonDecodableState()",
    "kind": "Method",
    "detail": "Function (struct FrameInfo { absl::optional<int> qp ; VideoContentType content_type ; } ; void)",
    "insertText": "OnNonDecodableState()"
  },
  {
    "label": "OnContinuousUntil()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnContinuousUntil(int64_t frame_id)"
  },
  {
    "label": "OnDecodedFrame()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "OnDecodedFrame(VideoFrame frame, const FrameInfo& frame_info)"
  },
  {
    "label": "VideoStreamDecoderInterface()",
    "kind": "Method",
    "detail": "Function (} ; ~)",
    "insertText": "VideoStreamDecoderInterface()"
  },
  {
    "label": "OnFrame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnFrame(std::unique_ptr<EncodedFrame> frame)"
  },
  {
    "label": "SetMinPlayoutDelay()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetMinPlayoutDelay(TimeDelta min_delay)"
  },
  {
    "label": "SetMaxPlayoutDelay()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetMaxPlayoutDelay(TimeDelta max_delay)"
  }
]