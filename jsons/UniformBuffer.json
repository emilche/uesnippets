[
  {
    "label": "FShaderUniformBufferParameter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FShaderUniformBufferParameter"
  },
  {
    "label": "TShaderUniformBufferParameter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TShaderUniformBufferParameter"
  },
  {
    "label": "TUniformBuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TUniformBuffer"
  },
  {
    "label": "CreateUniformBufferImmediate()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" ShaderParameterMacros . h \" # include \" RenderingThread . h \" # include \" RenderResource . h \" # include \" Templates / IsArrayOrRefOfType . h \" class FShaderUniformBufferParameter ; template<TBufferStruct> class TShaderUniformBufferParameter ; template<TBufferStruct> TUniformBufferRef<TBufferStruct>)",
    "insertText": "CreateUniformBufferImmediate(const TBufferStruct& Value, EUniformBufferUsage Usage, EUniformBufferValidation Validation = EUniformBufferValidation::ValidateResources)"
  },
  {
    "label": "static_assert()",
    "kind": "Method",
    "detail": "Function (} template<TBufferStruct> class TUniformBuffer : public FRenderResource {)",
    "insertText": "static_assert(!TIsUECoreVariant<TBufferStruct, double>::Value, \"UniformBufferRHIRef cannot be double core variants! Switch to float variant.\")"
  },
  {
    "label": "TUniformBuffer()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "TUniformBuffer() : BufferUsage(UniformBuffer_MultiFrame) , Contents(nullptr)"
  },
  {
    "label": "TUniformBuffer()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "TUniformBuffer()"
  },
  {
    "label": "Free()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Free(Contents)"
  },
  {
    "label": "SetContents()",
    "kind": "Method",
    "detail": "Function (} } void)",
    "insertText": "SetContents(FRHICommandListBase& RHICmdList, const TBufferStruct& NewContents)"
  },
  {
    "label": "SetContentsNoUpdate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetContentsNoUpdate(NewContents)"
  },
  {
    "label": "UpdateRHI()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateRHI(RHICmdList)"
  },
  {
    "label": "SetContents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetContents(FRenderResource::GetImmediateCommandList(), NewContents)"
  },
  {
    "label": "SetContentsToZero()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetContentsToZero(FRHICommandListBase& RHICmdList)"
  },
  {
    "label": "Contents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Contents(uint8*)FMemory::Malloc(sizeof(TBufferStruct), SHADER_PARAMETER_STRUCT_ALIGNMENT)"
  },
  {
    "label": "Memzero()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "Memzero(Contents, sizeof(TBufferStruct))"
  },
  {
    "label": "SetContentsToZero()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetContentsToZero(FRenderResource::GetImmediateCommandList())"
  },
  {
    "label": "GetContents()",
    "kind": "Method",
    "detail": "Function (} const uint8*)",
    "insertText": "GetContents()"
  },
  {
    "label": "SafeRelease()",
    "kind": "Method",
    "detail": "Function (UniformBufferRHI .)",
    "insertText": "SafeRelease()"
  },
  {
    "label": "TBufferStruct()",
    "kind": "Method",
    "detail": "Function (UniformBufferRHI = CreateUniformBufferImmediate<)",
    "insertText": "TBufferStruct(*((const TBufferStruct*)Contents), BufferUsage)"
  },
  {
    "label": "ReleaseRHI()",
    "kind": "Method",
    "detail": "Function (} } void)",
    "insertText": "ReleaseRHI()"
  },
  {
    "label": "GetUniformBufferRHI()",
    "kind": "Method",
    "detail": "Function (} FRHIUniformBuffer*)",
    "insertText": "GetUniformBufferRHI()"
  },
  {
    "label": "Memcpy()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "Memcpy(Contents,&NewContents,sizeof(TBufferStruct))"
  },
  {
    "label": "BeginSetUniformBufferContents()",
    "kind": "Method",
    "detail": "Function (} private : TUniformBufferRef<TBufferStruct> UniformBufferRHI ; uint8* Contents ; } ; template<TBufferStruct> void)",
    "insertText": "BeginSetUniformBufferContents(TUniformBuffer<TBufferStruct>& UniformBuffer, const TBufferStruct& Struct)"
  },
  {
    "label": "ENQUEUE_RENDER_COMMAND()",
    "kind": "Method",
    "detail": "Function (TUniformBuffer<TBufferStruct>* UniformBufferPtr =& UniformBuffer ;)",
    "insertText": "ENQUEUE_RENDER_COMMAND(SetUniformBufferContents)( [UniformBufferPtr, Struct](FRHICommandListImmediate& RHICmdList) { UniformBufferPtr->SetContents(RHICmdList, Struct); })"
  }
]