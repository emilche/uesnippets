[
  {
    "label": "VideoStreamEncoderInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "VideoStreamEncoderInterface"
  },
  {
    "label": "EncoderRtcpFeedback",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "EncoderRtcpFeedback"
  },
  {
    "label": "EncoderRtcpFeedback()",
    "kind": "Method",
    "detail": "Function (# ifndef VIDEO_ENCODER_RTCP_FEEDBACK_H_ # define VIDEO_ENCODER_RTCP_FEEDBACK_H_ # include<functional> # include<vector> # include \" api / sequence_checker . h \" # include \" api / units / time_delta . h \" # include \" api / units / timestamp . h \" # include \" call / rtp_video_sender_interface . h \" # include \" modules / rtp_rtcp / include / rtp_rtcp_defines . h \" # include \" rtc_base / system / no_unique_address . h \" # include \" system_wrappers / include / clock . h \" # include \" video / video_stream_encoder_interface . h \" namespace webrtc { class VideoStreamEncoderInterface ; class EncoderRtcpFeedback : public RtcpIntraFrameObserver,public RtcpLossNotificationObserver { public :)",
    "insertText": "EncoderRtcpFeedback(Clock* clock, const std::vector<uint32_t>& ssrcs, VideoStreamEncoderInterface* encoder, std::function<std::vector<RtpSequenceNumberMap::Info>( uint32_t ssrc, const std::vector<uint16_t>& seq_nums)> get_packet_infos)"
  },
  {
    "label": "EncoderRtcpFeedback()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "EncoderRtcpFeedback()"
  },
  {
    "label": "OnReceivedIntraFrameRequest()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnReceivedIntraFrameRequest(uint32_t ssrc)"
  },
  {
    "label": "OnReceivedLossNotification()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnReceivedLossNotification(uint32_t ssrc, uint16_t seq_num_of_last_decodable, uint16_t seq_num_of_last_received, bool decodability_flag)"
  },
  {
    "label": "Info()",
    "kind": "Method",
    "detail": "Function (private : Clock* const clock_ ; const std::vector<uint32_t> ssrcs_ ; const std::function<std::vector<)",
    "insertText": "Info(uint32_t ssrc, const std::vector<uint16_t>& seq_nums)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (VideoStreamEncoderInterface* const video_stream_encoder_ ; RTC_NO_UNIQUE_ADDRESS SequenceChecker packet_delivery_queue_ ; Timestamp time_last_packet_delivery_queue_)",
    "insertText": "RTC_GUARDED_BY(packet_delivery_queue_)"
  }
]