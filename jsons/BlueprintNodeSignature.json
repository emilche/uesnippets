[
  {
    "label": "UEdGraphNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEdGraphNode"
  },
  {
    "label": "BLUEPRINTGRAPH_API",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "BLUEPRINTGRAPH_API"
  },
  {
    "label": "FBlueprintNodeSignature()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Map . h \" # include \" Containers / UnrealString . h \" # include \" CoreMinimal . h \" # include \" EdGraph / EdGraphNode . h \" # include \" Misc / Guid . h \" # include \" Templates / SubclassOf . h \" # include \" UObject / Field . h \" # include \" UObject / NameTypes . h \" # include \" UObject / Object . h \" class UEdGraphNode ; struct FBlueprintNodeSignature { public :)",
    "insertText": "FBlueprintNodeSignature()"
  },
  {
    "label": "FBlueprintNodeSignature()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FBlueprintNodeSignature(FString const& UserString)"
  },
  {
    "label": "FBlueprintNodeSignature()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FBlueprintNodeSignature(TSubclassOf<UEdGraphNode> NodeClass)"
  },
  {
    "label": "SetNodeClass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetNodeClass(TSubclassOf<UEdGraphNode> NodeClass)"
  },
  {
    "label": "AddSubObject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddSubObject(FFieldVariant SignatureObj)"
  },
  {
    "label": "AddKeyValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddKeyValue(FString const& KeyValue)"
  },
  {
    "label": "AddNamedValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddNamedValue(FName SignatureKey, FString const& Value)"
  },
  {
    "label": "IsValid()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsValid()"
  },
  {
    "label": "ToString()",
    "kind": "Method",
    "detail": "Function (FString const&)",
    "insertText": "ToString()"
  },
  {
    "label": "AsGuid()",
    "kind": "Method",
    "detail": "Function (FGuid const&)",
    "insertText": "AsGuid()"
  },
  {
    "label": "MarkDirty()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "MarkDirty()"
  }
]