[
  {
    "label": "UModel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UModel"
  },
  {
    "label": "ABrush",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ABrush"
  },
  {
    "label": "UStaticMesh",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UStaticMesh"
  },
  {
    "label": "UStaticMeshComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UStaticMeshComponent"
  },
  {
    "label": "USkeletalMesh",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USkeletalMesh"
  },
  {
    "label": "USkeletalMeshComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USkeletalMeshComponent"
  },
  {
    "label": "FLightMap",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLightMap"
  },
  {
    "label": "FLightmapResourceCluster",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLightmapResourceCluster"
  },
  {
    "label": "UFbxExportOption",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UFbxExportOption"
  },
  {
    "label": "FMaterialPropertyEx",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMaterialPropertyEx"
  },
  {
    "label": "UMaterialInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialInterface"
  },
  {
    "label": "FbxScene",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FbxScene"
  },
  {
    "label": "FbxSurfaceMaterial",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FbxSurfaceMaterial"
  },
  {
    "label": "FFbxMaterialBakingMeshData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFbxMaterialBakingMeshData"
  },
  {
    "label": "FFbxMaterialBakingMeshData()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" MeshDescription . h \" # include \" SceneTypes . h \" class UModel ; class ABrush ; class UStaticMesh ; class UStaticMeshComponent ; class USkeletalMesh ; class USkeletalMeshComponent ; class FLightMap ; class FLightmapResourceCluster ; class UFbxExportOption ; struct FMaterialPropertyEx ; class UMaterialInterface ; namespace fbxsdk { class FbxScene ; class FbxSurfaceMaterial ; } namespace UnFbx { struct FFbxMaterialBakingMeshData {)",
    "insertText": "FFbxMaterialBakingMeshData()"
  },
  {
    "label": "FFbxMaterialBakingMeshData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FFbxMaterialBakingMeshData(UModel* Model, ABrush* Actor = nullptr, int32 LODIndex = 0)"
  },
  {
    "label": "FFbxMaterialBakingMeshData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FFbxMaterialBakingMeshData(const UStaticMesh* StaticMesh, const UStaticMeshComponent* StaticMeshComponent = nullptr, int32 LODIndex = 0)"
  },
  {
    "label": "FFbxMaterialBakingMeshData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FFbxMaterialBakingMeshData(const USkeletalMesh* SkeletalMesh, const USkeletalMeshComponent* SkeletalMeshComponent = nullptr, int32 LODIndex = 0)"
  },
  {
    "label": "GetSectionIndices()",
    "kind": "Method",
    "detail": "Function (bool bHasMeshData = false ; FMeshDescription Description ; FLightMapRef LightMap = nullptr ; const FLightmapResourceCluster* LightMapResourceCluster = nullptr ; int32 LightMapTexCoord = 0 ; int32 BakeUsingTexCoord = 0 ; const UStaticMeshComponent* StaticMeshComponent = nullptr ; const UStaticMesh* StaticMesh = nullptr ; const USkeletalMesh* SkeletalMesh = nullptr ; int32 LODIndex = 0 ; TArray<int32>)",
    "insertText": "GetSectionIndices(const int32& MaterialIndex)"
  },
  {
    "label": "GetUModelStaticMeshMaterialIndex()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetUModelStaticMeshMaterialIndex(const UMaterialInterface* MaterialInterface)"
  },
  {
    "label": "GetInterchangeShadingModel()",
    "kind": "Method",
    "detail": "Function (} ; namespace FFbxMaterialExportUtilities { bool)",
    "insertText": "GetInterchangeShadingModel(const UMaterialInterface* MaterialInterface, bool& bLambert)"
  },
  {
    "label": "BakeMaterialProperty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BakeMaterialProperty(const UFbxExportOption* FbxExportOptions, fbxsdk::FbxScene* Scene, fbxsdk::FbxSurfaceMaterial* FbxMaterial, const char* FbxPropertyName, const FMaterialPropertyEx& Property, const UMaterialInterface* MaterialInterface, const int32& MaterialIndex, const FFbxMaterialBakingMeshData& MeshData, const FString& ExportFolderPath)"
  },
  {
    "label": "ProcessInterchangeMaterials()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessInterchangeMaterials(UMaterialInterface* MaterialInterface, fbxsdk::FbxScene* Scene, fbxsdk::FbxSurfaceMaterial* FbxMaterial)"
  }
]