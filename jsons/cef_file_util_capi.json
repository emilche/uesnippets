[
  {
    "label": "cef_create_directory()",
    "kind": "Method",
    "detail": "Function (# ifndef CEF_INCLUDE_CAPI_CEF_FILE_UTIL_CAPI_H_ # define CEF_INCLUDE_CAPI_CEF_FILE_UTIL_CAPI_H_ # pragma once # include \" include / capi / cef_base_capi . h \" # ifdef __cplusplus \" C \" { # endif CEF_EXPORT int)",
    "insertText": "cef_create_directory(const cef_string_t* full_path)"
  },
  {
    "label": "cef_get_temp_directory()",
    "kind": "Method",
    "detail": "Function (CEF_EXPORT int)",
    "insertText": "cef_get_temp_directory(cef_string_t* temp_dir)"
  },
  {
    "label": "cef_create_new_temp_directory()",
    "kind": "Method",
    "detail": "Function (CEF_EXPORT int)",
    "insertText": "cef_create_new_temp_directory(const cef_string_t* prefix, cef_string_t* new_temp_path)"
  },
  {
    "label": "cef_create_temp_directory_in_directory()",
    "kind": "Method",
    "detail": "Function (CEF_EXPORT int)",
    "insertText": "cef_create_temp_directory_in_directory(const cef_string_t* base_dir, const cef_string_t* prefix, cef_string_t* new_dir)"
  },
  {
    "label": "cef_directory_exists()",
    "kind": "Method",
    "detail": "Function (CEF_EXPORT int)",
    "insertText": "cef_directory_exists(const cef_string_t* path)"
  },
  {
    "label": "cef_delete_file()",
    "kind": "Method",
    "detail": "Function (CEF_EXPORT int)",
    "insertText": "cef_delete_file(const cef_string_t* path, int recursive)"
  },
  {
    "label": "cef_zip_directory()",
    "kind": "Method",
    "detail": "Function (CEF_EXPORT int)",
    "insertText": "cef_zip_directory(const cef_string_t* src_dir, const cef_string_t* dest_file, int include_hidden_files)"
  },
  {
    "label": "cef_load_crlsets_file()",
    "kind": "Method",
    "detail": "Function (CEF_EXPORT void)",
    "insertText": "cef_load_crlsets_file(const cef_string_t* path)"
  }
]