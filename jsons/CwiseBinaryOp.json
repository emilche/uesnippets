[
  {
    "label": "traits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "traits"
  },
  {
    "label": "CwiseBinaryOpImpl",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CwiseBinaryOpImpl"
  },
  {
    "label": "CwiseBinaryOp",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CwiseBinaryOp"
  },
  {
    "label": "BinaryOp()",
    "kind": "Method",
    "detail": "Function (# ifndef EIGEN_CWISE_BINARY_OP_H # define EIGEN_CWISE_BINARY_OP_H namespace Eigen { namespace internal { template<BinaryOp,Lhs,Rhs> struct traits<CwiseBinaryOp<BinaryOp,Lhs,Rhs>> { typedef remove_all<Lhs>::type Ancestor ; typedef traits<Ancestor>::XprKind XprKind ; enum { RowsAtCompileTime = traits<Ancestor>::RowsAtCompileTime,ColsAtCompileTime = traits<Ancestor>::ColsAtCompileTime,MaxRowsAtCompileTime = traits<Ancestor>::MaxRowsAtCompileTime,MaxColsAtCompileTime = traits<Ancestor>::MaxColsAtCompileTime } ; typedef result_of<)",
    "insertText": "BinaryOp(const typename Lhs::Scalar&, const typename Rhs::Scalar&)"
  },
  {
    "label": "EIGEN_GENERIC_PUBLIC_INTERFACE()",
    "kind": "Method",
    "detail": "Function (typedef cwise_promote_storage_type<traits<Lhs>::StorageKind,traits<Rhs>::StorageKind,BinaryOp>::ret StorageKind ; typedef promote_index_type<traits<Lhs>::StorageIndex,traits<Rhs>::StorageIndex>::type StorageIndex ; typedef Lhs::Nested LhsNested ; typedef Rhs::Nested RhsNested ; typedef remove_reference<LhsNested>::type _LhsNested ; typedef remove_reference<RhsNested>::type _RhsNested ; enum { Flags = cwise_promote_storage_order<traits<Lhs>::StorageKind,traits<Rhs>::StorageKind,_LhsNested::Flags& RowMajorBit,_RhsNested::Flags& RowMajorBit>::value } ; } ; } template<BinaryOp,Lhs,Rhs,StorageKind> class CwiseBinaryOpImpl ; template<BinaryOp,LhsType,RhsType> class CwiseBinaryOp : public CwiseBinaryOpImpl<BinaryOp,LhsType,RhsType,internal::cwise_promote_storage_type<internal::traits<LhsType>::StorageKind,internal::traits<RhsType>::StorageKind,BinaryOp>::ret>,internal::no_assignment_operator { public : typedef internal::remove_all<BinaryOp>::type Functor ; typedef internal::remove_all<LhsType>::type Lhs ; typedef internal::remove_all<RhsType>::type Rhs ; typedef CwiseBinaryOpImpl<BinaryOp,LhsType,RhsType,internal::cwise_promote_storage_type<internal::traits<LhsType>::StorageKind,internal::traits<Rhs>::StorageKind,BinaryOp>::ret>::Base Base ;)",
    "insertText": "EIGEN_GENERIC_PUBLIC_INTERFACE(CwiseBinaryOp)"
  },
  {
    "label": "CwiseBinaryOp()",
    "kind": "Method",
    "detail": "Function (typedef internal::ref_selector<RhsType>::type RhsNested ; typedef internal::remove_reference<LhsNested>::type _LhsNested ; typedef internal::remove_reference<RhsNested>::type _RhsNested ; # if EIGEN_COMP_MSVC&& EIGEN_HAS_CXX11 EIGEN_STRONG_INLINE)",
    "insertText": "CwiseBinaryOp(const CwiseBinaryOp<BinaryOp,LhsType,RhsType>&)"
  },
  {
    "label": "CwiseBinaryOp()",
    "kind": "Method",
    "detail": "Function (# endif EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE)",
    "insertText": "CwiseBinaryOp(const Lhs& aLhs, const Rhs& aRhs, const BinaryOp& func = BinaryOp()) : m_lhs(aLhs), m_rhs(aRhs), m_functor(func)"
  },
  {
    "label": "EIGEN_CHECK_BINARY_COMPATIBILIY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EIGEN_CHECK_BINARY_COMPATIBILIY(BinaryOp,typename Lhs::Scalar,typename Rhs::Scalar)"
  },
  {
    "label": "EIGEN_STATIC_ASSERT_SAME_MATRIX_SIZE()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EIGEN_STATIC_ASSERT_SAME_MATRIX_SIZE(Lhs, Rhs) eigen_assert(aLhs.rows() == aRhs.rows() && aLhs.cols() == aRhs.cols())"
  },
  {
    "label": "rows()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE EIGEN_CONSTEXPR Index)",
    "insertText": "rows()"
  },
  {
    "label": "cols()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE EIGEN_CONSTEXPR Index)",
    "insertText": "cols()"
  },
  {
    "label": "lhs()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const _LhsNested&)",
    "insertText": "lhs()"
  },
  {
    "label": "call_assignment()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "call_assignment(derived(), other.derived(), internal::sub_assign_op<Scalar,typename OtherDerived::Scalar>())"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} template<Derived> template<OtherDerived> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Derived& MatrixBase<Derived)",
    "insertText": "operator(const MatrixBase<OtherDerived>& other)"
  },
  {
    "label": "call_assignment()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "call_assignment(derived(), other.derived(), internal::add_assign_op<Scalar,typename OtherDerived::Scalar>())"
  }
]