[
  {
    "label": "EOS_PlayerDataStorageHandle",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "EOS_PlayerDataStorageHandle"
  },
  {
    "label": "EOS_PlayerDataStorageFileTransferRequestHandle",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "EOS_PlayerDataStorageFileTransferRequestHandle"
  },
  {
    "label": "pack()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" eos_common . h \" # pragma)",
    "insertText": "pack(push, 8)"
  },
  {
    "label": "EOS_STRUCT()",
    "kind": "Method",
    "detail": "Function (# define EOS_PLAYERDATASTORAGE_TIME_UNDEFINED - 1 # define EOS_PLAYERDATASTORAGE_FILEMETADATA_API_LATEST 3)",
    "insertText": "EOS_STRUCT(EOS_PlayerDataStorage_FileMetadata, ( int32_t ApiVersion; uint32_t FileSizeBytes; const char* MD5Hash; const char* Filename; int64_t LastModifiedTime; uint32_t UnencryptedDataSizeBytes; ))"
  },
  {
    "label": "EOS_DECLARE_FUNC()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EOS_DECLARE_FUNC(void) EOS_PlayerDataStorage_FileMetadata_Release(EOS_PlayerDataStorage_FileMetadata* FileMetadata)"
  },
  {
    "label": "EOS_STRUCT()",
    "kind": "Method",
    "detail": "Function (# define EOS_PLAYERDATASTORAGE_QUERYFILE_API_LATEST 1 # define EOS_PLAYERDATASTORAGE_QUERYFILEOPTIONS_API_LATEST EOS_PLAYERDATASTORAGE_QUERYFILE_API_LATEST)",
    "insertText": "EOS_STRUCT(EOS_PlayerDataStorage_QueryFileOptions, ( int32_t ApiVersion; EOS_ProductUserId LocalUserId; const char* Filename; ))"
  },
  {
    "label": "EOS_STRUCT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EOS_STRUCT(EOS_PlayerDataStorage_QueryFileCallbackInfo, ( EOS_EResult ResultCode; void* ClientData; EOS_ProductUserId LocalUserId; ))"
  },
  {
    "label": "EOS_DECLARE_CALLBACK()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EOS_DECLARE_CALLBACK(EOS_PlayerDataStorage_OnQueryFileCompleteCallback, const EOS_PlayerDataStorage_QueryFileCallbackInfo* Data)"
  },
  {
    "label": "EOS_STRUCT()",
    "kind": "Method",
    "detail": "Function (# define EOS_PLAYERDATASTORAGE_QUERYFILELIST_API_LATEST 2 # define EOS_PLAYERDATASTORAGE_QUERYFILELISTOPTIONS_API_LATEST EOS_PLAYERDATASTORAGE_QUERYFILELIST_API_LATEST)",
    "insertText": "EOS_STRUCT(EOS_PlayerDataStorage_QueryFileListOptions, ( int32_t ApiVersion; EOS_ProductUserId LocalUserId; ))"
  },
  {
    "label": "EOS_STRUCT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EOS_STRUCT(EOS_PlayerDataStorage_QueryFileListCallbackInfo, ( EOS_EResult ResultCode; void* ClientData; EOS_ProductUserId LocalUserId; uint32_t FileCount; ))"
  },
  {
    "label": "EOS_DECLARE_CALLBACK()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EOS_DECLARE_CALLBACK(EOS_PlayerDataStorage_OnQueryFileListCompleteCallback, const EOS_PlayerDataStorage_QueryFileListCallbackInfo* Data)"
  },
  {
    "label": "EOS_STRUCT()",
    "kind": "Method",
    "detail": "Function (# define EOS_PLAYERDATASTORAGE_GETFILEMETADATACOUNT_API_LATEST 1 # define EOS_PLAYERDATASTORAGE_GETFILEMETADATACOUNTOPTIONS_API_LATEST EOS_PLAYERDATASTORAGE_GETFILEMETADATACOUNT_API_LATEST)",
    "insertText": "EOS_STRUCT(EOS_PlayerDataStorage_GetFileMetadataCountOptions, ( int32_t ApiVersion; EOS_ProductUserId LocalUserId; ))"
  },
  {
    "label": "EOS_STRUCT()",
    "kind": "Method",
    "detail": "Function (# define EOS_PLAYERDATASTORAGE_COPYFILEMETADATAATINDEX_API_LATEST 1 # define EOS_PLAYERDATASTORAGE_COPYFILEMETADATAATINDEXOPTIONS_API_LATEST EOS_PLAYERDATASTORAGE_COPYFILEMETADATAATINDEX_API_LATEST)",
    "insertText": "EOS_STRUCT(EOS_PlayerDataStorage_CopyFileMetadataAtIndexOptions, ( int32_t ApiVersion; EOS_ProductUserId LocalUserId; uint32_t Index; ))"
  },
  {
    "label": "EOS_STRUCT()",
    "kind": "Method",
    "detail": "Function (# define EOS_PLAYERDATASTORAGE_COPYFILEMETADATABYFILENAME_API_LATEST 1 # define EOS_PLAYERDATASTORAGE_COPYFILEMETADATABYFILENAMEOPTIONS_API_LATEST EOS_PLAYERDATASTORAGE_COPYFILEMETADATABYFILENAME_API_LATEST)",
    "insertText": "EOS_STRUCT(EOS_PlayerDataStorage_CopyFileMetadataByFilenameOptions, ( int32_t ApiVersion; EOS_ProductUserId LocalUserId; const char* Filename; ))"
  },
  {
    "label": "EOS_STRUCT()",
    "kind": "Method",
    "detail": "Function (# define EOS_PLAYERDATASTORAGE_DUPLICATEFILE_API_LATEST 1 # define EOS_PLAYERDATASTORAGE_DUPLICATEFILEOPTIONS_API_LATEST EOS_PLAYERDATASTORAGE_DUPLICATEFILE_API_LATEST)",
    "insertText": "EOS_STRUCT(EOS_PlayerDataStorage_DuplicateFileOptions, ( int32_t ApiVersion; EOS_ProductUserId LocalUserId; const char* SourceFilename; const char* DestinationFilename; ))"
  },
  {
    "label": "EOS_STRUCT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EOS_STRUCT(EOS_PlayerDataStorage_DuplicateFileCallbackInfo, ( EOS_EResult ResultCode; void* ClientData; EOS_ProductUserId LocalUserId; ))"
  },
  {
    "label": "EOS_DECLARE_CALLBACK()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EOS_DECLARE_CALLBACK(EOS_PlayerDataStorage_OnDuplicateFileCompleteCallback, const EOS_PlayerDataStorage_DuplicateFileCallbackInfo* Data)"
  },
  {
    "label": "EOS_STRUCT()",
    "kind": "Method",
    "detail": "Function (# define EOS_PLAYERDATASTORAGE_DELETEFILE_API_LATEST 1 # define EOS_PLAYERDATASTORAGE_DELETEFILEOPTIONS_API_LATEST EOS_PLAYERDATASTORAGE_DELETEFILE_API_LATEST)",
    "insertText": "EOS_STRUCT(EOS_PlayerDataStorage_DeleteFileOptions, ( int32_t ApiVersion; EOS_ProductUserId LocalUserId; const char* Filename; ))"
  },
  {
    "label": "EOS_STRUCT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EOS_STRUCT(EOS_PlayerDataStorage_DeleteFileCallbackInfo, ( EOS_EResult ResultCode; void* ClientData; EOS_ProductUserId LocalUserId; ))"
  },
  {
    "label": "EOS_DECLARE_CALLBACK()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EOS_DECLARE_CALLBACK(EOS_PlayerDataStorage_OnDeleteFileCompleteCallback, const EOS_PlayerDataStorage_DeleteFileCallbackInfo* Data)"
  },
  {
    "label": "EOS_DECLARE_FUNC()",
    "kind": "Method",
    "detail": "Function (EXTERN_C typedef struct EOS_PlayerDataStorageFileTransferRequestHandle* EOS_HPlayerDataStorageFileTransferRequest ;)",
    "insertText": "EOS_DECLARE_FUNC(void) EOS_PlayerDataStorageFileTransferRequest_Release(EOS_HPlayerDataStorageFileTransferRequest PlayerDataStorageFileTransferHandle)"
  },
  {
    "label": "EOS_STRUCT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EOS_STRUCT(EOS_PlayerDataStorage_FileTransferProgressCallbackInfo, ( void* ClientData; EOS_ProductUserId LocalUserId; const char* Filename; uint32_t BytesTransferred; uint32_t TotalFileSizeBytes; ))"
  },
  {
    "label": "EOS_DECLARE_CALLBACK()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EOS_DECLARE_CALLBACK(EOS_PlayerDataStorage_OnFileTransferProgressCallback, const EOS_PlayerDataStorage_FileTransferProgressCallbackInfo* Data)"
  },
  {
    "label": "EOS_ENUM()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EOS_ENUM(EOS_PlayerDataStorage_EReadResult, EOS_RR_ContinueReading = 1, EOS_RR_FailRequest = 2, EOS_RR_CancelRequest = 3)"
  },
  {
    "label": "EOS_STRUCT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EOS_STRUCT(EOS_PlayerDataStorage_ReadFileDataCallbackInfo, ( void* ClientData; EOS_ProductUserId LocalUserId; const char* Filename; uint32_t TotalFileSizeBytes; EOS_Bool bIsLastChunk; uint32_t DataChunkLengthBytes; const void* DataChunk; ))"
  },
  {
    "label": "EOS_DECLARE_CALLBACK_RETVALUE()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EOS_DECLARE_CALLBACK_RETVALUE(EOS_PlayerDataStorage_EReadResult, EOS_PlayerDataStorage_OnReadFileDataCallback, const EOS_PlayerDataStorage_ReadFileDataCallbackInfo* Data)"
  },
  {
    "label": "EOS_STRUCT()",
    "kind": "Method",
    "detail": "Function (# define EOS_PLAYERDATASTORAGE_READFILE_API_LATEST 1 # define EOS_PLAYERDATASTORAGE_READFILEOPTIONS_API_LATEST EOS_PLAYERDATASTORAGE_READFILE_API_LATEST)",
    "insertText": "EOS_STRUCT(EOS_PlayerDataStorage_ReadFileOptions, ( int32_t ApiVersion; EOS_ProductUserId LocalUserId; const char* Filename; uint32_t ReadChunkLengthBytes; EOS_PlayerDataStorage_OnReadFileDataCallback ReadFileDataCallback; EOS_PlayerDataStorage_OnFileTransferProgressCallback FileTransferProgressCallback; ))"
  },
  {
    "label": "EOS_STRUCT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EOS_STRUCT(EOS_PlayerDataStorage_ReadFileCallbackInfo, ( EOS_EResult ResultCode; void* ClientData; EOS_ProductUserId LocalUserId; const char* Filename; ))"
  },
  {
    "label": "EOS_DECLARE_CALLBACK()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EOS_DECLARE_CALLBACK(EOS_PlayerDataStorage_OnReadFileCompleteCallback, const EOS_PlayerDataStorage_ReadFileCallbackInfo* Data)"
  },
  {
    "label": "EOS_ENUM()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EOS_ENUM(EOS_PlayerDataStorage_EWriteResult, EOS_WR_ContinueWriting = 1, EOS_WR_CompleteRequest = 2, EOS_WR_FailRequest = 3, EOS_WR_CancelRequest = 4)"
  },
  {
    "label": "EOS_STRUCT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EOS_STRUCT(EOS_PlayerDataStorage_WriteFileDataCallbackInfo, ( void* ClientData; EOS_ProductUserId LocalUserId; const char* Filename; uint32_t DataBufferLengthBytes; ))"
  },
  {
    "label": "EOS_DECLARE_CALLBACK_RETVALUE()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EOS_DECLARE_CALLBACK_RETVALUE(EOS_PlayerDataStorage_EWriteResult, EOS_PlayerDataStorage_OnWriteFileDataCallback, const EOS_PlayerDataStorage_WriteFileDataCallbackInfo* Data, void* OutDataBuffer, uint32_t* OutDataWritten)"
  },
  {
    "label": "EOS_STRUCT()",
    "kind": "Method",
    "detail": "Function (# define EOS_PLAYERDATASTORAGE_WRITEFILE_API_LATEST 1 # define EOS_PLAYERDATASTORAGE_WRITEFILEOPTIONS_API_LATEST EOS_PLAYERDATASTORAGE_WRITEFILE_API_LATEST)",
    "insertText": "EOS_STRUCT(EOS_PlayerDataStorage_WriteFileOptions, ( int32_t ApiVersion; EOS_ProductUserId LocalUserId; const char* Filename; uint32_t ChunkLengthBytes; EOS_PlayerDataStorage_OnWriteFileDataCallback WriteFileDataCallback; EOS_PlayerDataStorage_OnFileTransferProgressCallback FileTransferProgressCallback; ))"
  },
  {
    "label": "EOS_STRUCT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EOS_STRUCT(EOS_PlayerDataStorage_WriteFileCallbackInfo, ( EOS_EResult ResultCode; void* ClientData; EOS_ProductUserId LocalUserId; const char* Filename; ))"
  },
  {
    "label": "EOS_DECLARE_CALLBACK()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EOS_DECLARE_CALLBACK(EOS_PlayerDataStorage_OnWriteFileCompleteCallback, const EOS_PlayerDataStorage_WriteFileCallbackInfo* Data)"
  },
  {
    "label": "EOS_STRUCT()",
    "kind": "Method",
    "detail": "Function (# define EOS_PLAYERDATASTORAGE_DELETECACHE_API_LATEST 1 # define EOS_PLAYERDATASTORAGE_DELETECACHEOPTIONS_API_LATEST EOS_PLAYERDATASTORAGE_DELETECACHE_API_LATEST)",
    "insertText": "EOS_STRUCT(EOS_PlayerDataStorage_DeleteCacheOptions, ( int32_t ApiVersion; EOS_ProductUserId LocalUserId; ))"
  },
  {
    "label": "EOS_STRUCT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EOS_STRUCT(EOS_PlayerDataStorage_DeleteCacheCallbackInfo, ( EOS_EResult ResultCode; void* ClientData; EOS_ProductUserId LocalUserId; ))"
  },
  {
    "label": "EOS_DECLARE_CALLBACK()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EOS_DECLARE_CALLBACK(EOS_PlayerDataStorage_OnDeleteCacheCompleteCallback, const EOS_PlayerDataStorage_DeleteCacheCallbackInfo* Data)"
  }
]