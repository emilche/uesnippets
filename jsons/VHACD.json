[
  {
    "label": "IVHACD",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IVHACD"
  },
  {
    "label": "IUserCallback",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IUserCallback"
  },
  {
    "label": "IUserLogger",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IUserLogger"
  },
  {
    "label": "IUserProfiler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IUserProfiler"
  },
  {
    "label": "IUserTaskRunner",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IUserTaskRunner"
  },
  {
    "label": "ConvexHull",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ConvexHull"
  },
  {
    "label": "Parameters",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Parameters"
  },
  {
    "label": "ProfilerEventScope",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ProfilerEventScope"
  },
  {
    "label": "VHACD_PREPROCESSOR_JOIN()",
    "kind": "Method",
    "detail": "Function (# pragma once # ifndef VHACD_H # define VHACD_H # define VHACD_VERSION_MAJOR 2 # define VHACD_VERSION_MINOR 3 # include<stdint . h> # include<functional> # define)",
    "insertText": "VHACD_PREPROCESSOR_JOIN(x, y) VHACD_PREPROCESSOR_JOIN_INNER(x, y) #define VHACD_PREPROCESSOR_JOIN_INNER(x, y) x##y #define VHACD_TRACE_CPUPROFILER_EVENT_SCOPE(Profiler, Name) \\ static int32_t VHACD_PREPROCESSOR_JOIN(__CpuProfilerEventSpecId, __LINE__)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "if(Profiler && VHACD_PREPROCESSOR_JOIN(__CpuProfilerEventSpecId, __LINE__) == 0)"
  },
  {
    "label": "VHACD_PREPROCESSOR_JOIN()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "VHACD_PREPROCESSOR_JOIN(__CpuProfilerEventSpecId, __LINE__) = Profiler->AllocTagId(#Name)"
  },
  {
    "label": "VHACD_PREPROCESSOR_JOIN()",
    "kind": "Method",
    "detail": "Function (\\ } \\::VHACD::ProfilerEventScope)",
    "insertText": "VHACD_PREPROCESSOR_JOIN(__CpuProfilerEventScope, __LINE__)(Profiler, VHACD_PREPROCESSOR_JOIN(__CpuProfilerEventSpecId, __LINE__))"
  },
  {
    "label": "VHACD_TRACE_BOOKMARK()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "VHACD_TRACE_BOOKMARK(Profiler, Text) \\ if (Profiler)"
  },
  {
    "label": "Bookmark()",
    "kind": "Method",
    "detail": "Function (\\ Profiler ->)",
    "insertText": "Bookmark(Text)"
  },
  {
    "label": "IUserCallback()",
    "kind": "Method",
    "detail": "Function (\\ } \\ namespace VHACD { class IVHACD { public : class IUserCallback { public : ~)",
    "insertText": "IUserCallback()"
  },
  {
    "label": "Update()",
    "kind": "Method",
    "detail": "Function (} ; void)",
    "insertText": "Update(const double overallProgress, const double stageProgress, const double operationProgress, const char* const stage, const char* const operation)"
  },
  {
    "label": "IUserLogger()",
    "kind": "Method",
    "detail": "Function (} ; class IUserLogger { public : ~)",
    "insertText": "IUserLogger()"
  },
  {
    "label": "Log()",
    "kind": "Method",
    "detail": "Function (} ; void)",
    "insertText": "Log(const char* const msg)"
  },
  {
    "label": "IUserProfiler()",
    "kind": "Method",
    "detail": "Function (} ; class IUserProfiler { public : ~)",
    "insertText": "IUserProfiler()"
  },
  {
    "label": "AllocTagId()",
    "kind": "Method",
    "detail": "Function (} ; uint32_t)",
    "insertText": "AllocTagId(const char* const tagName)"
  },
  {
    "label": "EnterTag()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnterTag(uint32_t tagId)"
  },
  {
    "label": "ExitTag()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExitTag()"
  },
  {
    "label": "Bookmark()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Bookmark(const char* const text)"
  },
  {
    "label": "IUserTaskRunner()",
    "kind": "Method",
    "detail": "Function (} ; class IUserTaskRunner { public : ~)",
    "insertText": "IUserTaskRunner()"
  },
  {
    "label": "StartTask()",
    "kind": "Method",
    "detail": "Function (} ; void*)",
    "insertText": "StartTask(std::function<void()> func)"
  },
  {
    "label": "JoinTask()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "JoinTask(void* Task)"
  },
  {
    "label": "Parameters()",
    "kind": "Method",
    "detail": "Function (} ; class ConvexHull { public : double* m_points ; uint32_t* m_triangles ; uint32_t m_nPoints ; uint32_t m_nTriangles ; double m_volume ; double m_center [ 3 ] ; } ; class Parameters { public :)",
    "insertText": "Parameters(void)"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Init()"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Init(void)"
  },
  {
    "label": "Cancel()",
    "kind": "Method",
    "detail": "Function (m_resolution = 1 0 0 0 0 0 ; m_concavity = 0 . 0 0 1 ; m_planeDownsampling = 4 ; m_convexhullDownsampling = 4 ; m_alpha = 0 . 0 5 ; m_beta = 0 . 0 5 ; m_pca = 0 ; m_mode = 0 ; m_maxNumVerticesPerCH = 6 4 ; m_minVolumePerCH = 0 . 0 0 0 1 ; m_callback = 0 ; m_logger = 0 ; m_profiler = 0 ; m_taskRunner = 0 ; m_convexhullApproximation = true ; m_oclAcceleration = true ; m_maxConvexHulls = 1 0 2 4 ; m_projectHullVertices = true ; } double m_concavity ; double m_alpha ; double m_beta ; double m_minVolumePerCH ; IUserCallback* m_callback ; IUserLogger* m_logger ; IUserProfiler* m_profiler ; IUserTaskRunner* m_taskRunner ; uint32_t m_resolution ; uint32_t m_maxNumVerticesPerCH ; uint32_t m_planeDownsampling ; uint32_t m_convexhullDownsampling ; uint32_t m_pca ; uint32_t m_mode ; uint32_t m_convexhullApproximation ; uint32_t m_oclAcceleration ; uint32_t m_maxConvexHulls ; bool m_projectHullVertices ; } ; void)",
    "insertText": "Cancel()"
  },
  {
    "label": "Compute()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Compute(const float* const points, const uint32_t countPoints, const uint32_t* const triangles, const uint32_t countTriangles, const Parameters& params)"
  },
  {
    "label": "Compute()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Compute(const double* const points, const uint32_t countPoints, const uint32_t* const triangles, const uint32_t countTriangles, const Parameters& params)"
  },
  {
    "label": "GetNConvexHulls()",
    "kind": "Method",
    "detail": "Function (uint32_t)",
    "insertText": "GetNConvexHulls()"
  },
  {
    "label": "GetConvexHull()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetConvexHull(const uint32_t index, ConvexHull& ch)"
  },
  {
    "label": "Clean()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Clean(void)"
  },
  {
    "label": "Release()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Release(void)"
  },
  {
    "label": "OCLInit()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "OCLInit(void* const oclDevice, IUserLogger* const logger = 0)"
  },
  {
    "label": "OCLRelease()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "OCLRelease(IUserLogger* const logger = 0)"
  },
  {
    "label": "ComputeCenterOfMass()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ComputeCenterOfMass(double centerOfMass[3])"
  },
  {
    "label": "IsReady()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsReady(void)"
  },
  {
    "label": "ProfilerEventScope()",
    "kind": "Method",
    "detail": "Function (} } ; struct ProfilerEventScope { IVHACD::IUserProfiler* mProfiler ;)",
    "insertText": "ProfilerEventScope(IVHACD::IUserProfiler* InProfiler, uint32_t InTagId) : mProfiler(InProfiler)"
  },
  {
    "label": "EnterTag()",
    "kind": "Method",
    "detail": "Function (mProfiler ->)",
    "insertText": "EnterTag(InTagId)"
  },
  {
    "label": "ProfilerEventScope()",
    "kind": "Method",
    "detail": "Function (} } ~)",
    "insertText": "ProfilerEventScope()"
  },
  {
    "label": "CreateVHACD()",
    "kind": "Method",
    "detail": "Function (} } } ; IVHACD*)",
    "insertText": "CreateVHACD(void)"
  },
  {
    "label": "CreateVHACD_ASYNC()",
    "kind": "Method",
    "detail": "Function (IVHACD*)",
    "insertText": "CreateVHACD_ASYNC(void)"
  }
]