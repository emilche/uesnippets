[
  {
    "label": "FResourceSizeEx",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FResourceSizeEx"
  },
  {
    "label": "UWorldPartitionRuntimeLevelStreamingCell",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UWorldPartitionRuntimeLevelStreamingCell"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "UWorldPartitionLevelStreamingPolicy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UWorldPartitionLevelStreamingPolicy"
  },
  {
    "label": "UCanvas",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UCanvas"
  },
  {
    "label": "UWorldPartitionRuntimeCell",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UWorldPartitionRuntimeCell"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" WorldPartition / WorldPartitionStreamingPolicy . h \" # include \" WorldPartition / WorldPartitionRuntimeContainerResolving . h \" # include \" WorldPartitionLevelStreamingPolicy . generated . h \" struct FResourceSizeEx ; class UWorldPartitionRuntimeLevelStreamingCell ; enum class EWorldPartitionRuntimeCellState : uint8 ;)",
    "insertText": "UCLASS()"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: virtual void DrawRuntimeCellsDetails(class UCanvas* Canvas, FVector2D& Offset)"
  },
  {
    "label": "IsStreamingCompleted()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsStreamingCompleted(const TArray<FWorldPartitionStreamingSource>* InStreamingSources)"
  },
  {
    "label": "GetRuntimeCellClass()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR TSubclassOf<class UWorldPartitionRuntimeCell>)",
    "insertText": "GetRuntimeCellClass()"
  },
  {
    "label": "PrepareActorToCellRemapping()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PrepareActorToCellRemapping()"
  },
  {
    "label": "SetContainerResolver()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetContainerResolver(const FWorldPartitionRuntimeContainerResolver& InContainerResolver)"
  },
  {
    "label": "RemapSoftObjectPath()",
    "kind": "Method",
    "detail": "Function (ContainerResolver = InContainerResolver ; } void)",
    "insertText": "RemapSoftObjectPath(FSoftObjectPath& ObjectPath)"
  },
  {
    "label": "GetCellPackagePath()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetCellPackagePath(const FName& InCellName, const UWorld* InWorld)"
  },
  {
    "label": "StoreStreamingContentToExternalStreamingObject()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "StoreStreamingContentToExternalStreamingObject(URuntimeHashExternalStreamingObjectBase& OutExternalStreamingObject)"
  },
  {
    "label": "ConvertContainerPathToEditorPath()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ConvertContainerPathToEditorPath(const FActorContainerID& InContainerID, const FSoftObjectPath& InPath, FSoftObjectPath& OutPath)"
  },
  {
    "label": "ConvertEditorPathToRuntimePath()",
    "kind": "Method",
    "detail": "Function (# endif bool)",
    "insertText": "ConvertEditorPathToRuntimePath(const FSoftObjectPath& InPath, FSoftObjectPath& OutPath)"
  },
  {
    "label": "GetSubObject()",
    "kind": "Method",
    "detail": "Function (UObject*)",
    "insertText": "GetSubObject(const TCHAR* SubObjectPath)"
  },
  {
    "label": "InjectExternalStreamingObject()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "InjectExternalStreamingObject(URuntimeHashExternalStreamingObjectBase* ExternalStreamingObject)"
  },
  {
    "label": "RemoveExternalStreamingObject()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RemoveExternalStreamingObject(URuntimeHashExternalStreamingObjectBase* ExternalStreamingObject)"
  },
  {
    "label": "GetResourceSizeEx()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetResourceSizeEx(FResourceSizeEx& CumulativeResourceSize)"
  },
  {
    "label": "ForEachActiveRuntimeCell()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "ForEachActiveRuntimeCell(TFunctionRef<void(const UWorldPartitionRuntimeCell*)> Func)"
  },
  {
    "label": "FindCellNameForSubObject()",
    "kind": "Method",
    "detail": "Function (private : const FName*)",
    "insertText": "FindCellNameForSubObject(const FString& InSubObjectString, bool bInResolveContainers, FString& OutSubObjectString, const UObject*& OutLevelMountPointContext)"
  },
  {
    "label": "FindCellForSubObject()",
    "kind": "Method",
    "detail": "Function (const UWorldPartitionRuntimeLevelStreamingCell*)",
    "insertText": "FindCellForSubObject(FName SubObjectName)"
  }
]