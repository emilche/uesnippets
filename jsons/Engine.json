[
  {
    "label": "ENGINE_CMD_DEFN_st",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ENGINE_CMD_DEFN_st"
  },
  {
    "label": "st_dynamic_MEM_fns",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "st_dynamic_MEM_fns"
  },
  {
    "label": "st_dynamic_fns",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "st_dynamic_fns"
  },
  {
    "label": "ENGINE_METHOD_RSA()",
    "kind": "Method",
    "detail": "Function (# ifndef HEADER_ENGINE_H # define HEADER_ENGINE_H # include<openssl / opensslconf . h> # ifndef OPENSSL_NO_ENGINE # if OPENSSL_API_COMPAT<0 x10100000L # include<openssl / bn . h> # include<openssl / rsa . h> # include<openssl / dsa . h> # include<openssl / dh . h> # include<openssl / ec . h> # include<openssl / rand . h> # include<openssl / ui . h> # include<openssl / err . h> # endif # include<openssl / ossl_typ . h> # include<openssl / symhacks . h> # include<openssl / x509 . h> # include<openssl / engineerr . h> # ifdef __cplusplus \" C \" { # endif # define)",
    "insertText": "ENGINE_METHOD_RSA(unsigned int)0x0001 # define ENGINE_METHOD_DSA (unsigned int)0x0002 # define ENGINE_METHOD_DH (unsigned int)0x0004 # define ENGINE_METHOD_RAND (unsigned int)0x0008 # define ENGINE_METHOD_CIPHERS (unsigned int)0x0040 # define ENGINE_METHOD_DIGESTS (unsigned int)0x0080 # define ENGINE_METHOD_PKEY_METHS (unsigned int)0x0200 # define ENGINE_METHOD_PKEY_ASN1_METHS (unsigned int)0x0400 # define ENGINE_METHOD_EC (unsigned int)0x0800 # define ENGINE_METHOD_ALL (unsigned int)0xFFFF # define ENGINE_METHOD_NONE (unsigned int)0x0000 # define ENGINE_TABLE_FLAG_NOINIT (unsigned int)0x0001 # define ENGINE_FLAGS_MANUAL_CMD_CTRL (int)0x0002 # define ENGINE_FLAGS_BY_ID_COPY (int)0x0004 # define ENGINE_FLAGS_NO_REGISTER_ALL (int)0x0008 # define ENGINE_CMD_FLAG_NUMERIC (unsigned int)0x0001 # define ENGINE_CMD_FLAG_STRING (unsigned int)0x0002 # define ENGINE_CMD_FLAG_NO_INPUT (unsigned int)0x0004 # define ENGINE_CMD_FLAG_INTERNAL (unsigned int)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (unsigned int cmd_num ; const char* cmd_name ; const char* cmd_desc ; unsigned int cmd_flags ; } ENGINE_CMD_DEFN ; typedef)",
    "insertText": "int(*ENGINE_GEN_FUNC_PTR) (void)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "int(*ENGINE_GEN_INT_FUNC_PTR) (ENGINE *)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "int(*ENGINE_CTRL_FUNC_PTR) (ENGINE *, int, long, void *, void (*f) (void))"
  },
  {
    "label": "EVP_PKEY()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "EVP_PKEY(*ENGINE_LOAD_KEY_PTR)(ENGINE *, const char *, UI_METHOD *ui_method, void *callback_data)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "int(*ENGINE_SSL_CLIENT_CERT_PTR) (ENGINE *, SSL *ssl, STACK_OF(X509_NAME) *ca_dn, X509 **pcert, EVP_PKEY **pkey, STACK_OF(X509) **pother, UI_METHOD *ui_method, void *callback_data)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "int(*ENGINE_CIPHERS_PTR) (ENGINE *, const EVP_CIPHER **, const int **, int)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "int(*ENGINE_DIGESTS_PTR) (ENGINE *, const EVP_MD **, const int **, int)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "int(*ENGINE_PKEY_METHS_PTR) (ENGINE *, EVP_PKEY_METHOD **, const int **, int)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "int(*ENGINE_PKEY_ASN1_METHS_PTR) (ENGINE *, EVP_PKEY_ASN1_METHOD **, const int **, int)"
  },
  {
    "label": "ENGINE_get_first()",
    "kind": "Method",
    "detail": "Function (ENGINE*)",
    "insertText": "ENGINE_get_first(void)"
  },
  {
    "label": "ENGINE_get_last()",
    "kind": "Method",
    "detail": "Function (ENGINE*)",
    "insertText": "ENGINE_get_last(void)"
  },
  {
    "label": "ENGINE_get_next()",
    "kind": "Method",
    "detail": "Function (ENGINE*)",
    "insertText": "ENGINE_get_next(ENGINE *e)"
  },
  {
    "label": "ENGINE_get_prev()",
    "kind": "Method",
    "detail": "Function (ENGINE*)",
    "insertText": "ENGINE_get_prev(ENGINE *e)"
  },
  {
    "label": "ENGINE_add()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ENGINE_add(ENGINE *e)"
  },
  {
    "label": "ENGINE_remove()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ENGINE_remove(ENGINE *e)"
  },
  {
    "label": "ENGINE_by_id()",
    "kind": "Method",
    "detail": "Function (ENGINE*)",
    "insertText": "ENGINE_by_id(const char *id)"
  },
  {
    "label": "ENGINE_load_openssl()",
    "kind": "Method",
    "detail": "Function (# if OPENSSL_API_COMPAT<0 x10100000L # define)",
    "insertText": "ENGINE_load_openssl() \\ OPENSSL_init_crypto(OPENSSL_INIT_ENGINE_OPENSSL, NULL) # define ENGINE_load_dynamic() \\ OPENSSL_init_crypto(OPENSSL_INIT_ENGINE_DYNAMIC, NULL) # ifndef OPENSSL_NO_STATIC_ENGINE # define ENGINE_load_padlock() \\ OPENSSL_init_crypto(OPENSSL_INIT_ENGINE_PADLOCK, NULL) # define ENGINE_load_capi() \\ OPENSSL_init_crypto(OPENSSL_INIT_ENGINE_CAPI, NULL) # define ENGINE_load_afalg() \\ OPENSSL_init_crypto(OPENSSL_INIT_ENGINE_AFALG, NULL) # endif # define ENGINE_load_cryptodev() \\ OPENSSL_init_crypto(OPENSSL_INIT_ENGINE_CRYPTODEV, NULL) # define ENGINE_load_rdrand() \\ OPENSSL_init_crypto(OPENSSL_INIT_ENGINE_RDRAND, NULL) #endif void ENGINE_load_builtin_engines(void)"
  },
  {
    "label": "ENGINE_get_table_flags()",
    "kind": "Method",
    "detail": "Function (unsigned int)",
    "insertText": "ENGINE_get_table_flags(void)"
  },
  {
    "label": "ENGINE_set_table_flags()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ENGINE_set_table_flags(unsigned int flags)"
  },
  {
    "label": "ENGINE_register_RSA()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ENGINE_register_RSA(ENGINE *e)"
  },
  {
    "label": "ENGINE_unregister_RSA()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ENGINE_unregister_RSA(ENGINE *e)"
  },
  {
    "label": "ENGINE_register_all_RSA()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ENGINE_register_all_RSA(void)"
  },
  {
    "label": "ENGINE_register_DSA()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ENGINE_register_DSA(ENGINE *e)"
  },
  {
    "label": "ENGINE_unregister_DSA()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ENGINE_unregister_DSA(ENGINE *e)"
  },
  {
    "label": "ENGINE_register_all_DSA()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ENGINE_register_all_DSA(void)"
  },
  {
    "label": "ENGINE_register_EC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ENGINE_register_EC(ENGINE *e)"
  },
  {
    "label": "ENGINE_unregister_EC()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ENGINE_unregister_EC(ENGINE *e)"
  },
  {
    "label": "ENGINE_register_all_EC()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ENGINE_register_all_EC(void)"
  },
  {
    "label": "ENGINE_register_DH()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ENGINE_register_DH(ENGINE *e)"
  },
  {
    "label": "ENGINE_unregister_DH()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ENGINE_unregister_DH(ENGINE *e)"
  },
  {
    "label": "ENGINE_register_all_DH()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ENGINE_register_all_DH(void)"
  },
  {
    "label": "ENGINE_register_RAND()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ENGINE_register_RAND(ENGINE *e)"
  },
  {
    "label": "ENGINE_unregister_RAND()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ENGINE_unregister_RAND(ENGINE *e)"
  },
  {
    "label": "ENGINE_register_all_RAND()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ENGINE_register_all_RAND(void)"
  },
  {
    "label": "ENGINE_register_ciphers()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ENGINE_register_ciphers(ENGINE *e)"
  },
  {
    "label": "ENGINE_unregister_ciphers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ENGINE_unregister_ciphers(ENGINE *e)"
  },
  {
    "label": "ENGINE_register_all_ciphers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ENGINE_register_all_ciphers(void)"
  },
  {
    "label": "ENGINE_register_digests()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ENGINE_register_digests(ENGINE *e)"
  },
  {
    "label": "ENGINE_unregister_digests()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ENGINE_unregister_digests(ENGINE *e)"
  },
  {
    "label": "ENGINE_register_all_digests()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ENGINE_register_all_digests(void)"
  },
  {
    "label": "ENGINE_register_pkey_meths()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ENGINE_register_pkey_meths(ENGINE *e)"
  },
  {
    "label": "ENGINE_unregister_pkey_meths()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ENGINE_unregister_pkey_meths(ENGINE *e)"
  },
  {
    "label": "ENGINE_register_all_pkey_meths()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ENGINE_register_all_pkey_meths(void)"
  },
  {
    "label": "ENGINE_register_pkey_asn1_meths()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ENGINE_register_pkey_asn1_meths(ENGINE *e)"
  },
  {
    "label": "ENGINE_unregister_pkey_asn1_meths()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ENGINE_unregister_pkey_asn1_meths(ENGINE *e)"
  },
  {
    "label": "ENGINE_register_all_pkey_asn1_meths()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ENGINE_register_all_pkey_asn1_meths(void)"
  },
  {
    "label": "ENGINE_register_complete()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ENGINE_register_complete(ENGINE *e)"
  },
  {
    "label": "ENGINE_register_all_complete()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ENGINE_register_all_complete(void)"
  },
  {
    "label": "ENGINE_ctrl()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ENGINE_ctrl(ENGINE *e, int cmd, long i, void *p, void (*f) (void))"
  },
  {
    "label": "ENGINE_cmd_is_executable()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ENGINE_cmd_is_executable(ENGINE *e, int cmd)"
  },
  {
    "label": "ENGINE_ctrl_cmd()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ENGINE_ctrl_cmd(ENGINE *e, const char *cmd_name, long i, void *p, void (*f) (void), int cmd_optional)"
  },
  {
    "label": "ENGINE_ctrl_cmd_string()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ENGINE_ctrl_cmd_string(ENGINE *e, const char *cmd_name, const char *arg, int cmd_optional)"
  },
  {
    "label": "ENGINE_new()",
    "kind": "Method",
    "detail": "Function (ENGINE*)",
    "insertText": "ENGINE_new(void)"
  },
  {
    "label": "ENGINE_free()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ENGINE_free(ENGINE *e)"
  },
  {
    "label": "ENGINE_up_ref()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ENGINE_up_ref(ENGINE *e)"
  },
  {
    "label": "ENGINE_set_id()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ENGINE_set_id(ENGINE *e, const char *id)"
  },
  {
    "label": "ENGINE_set_name()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ENGINE_set_name(ENGINE *e, const char *name)"
  },
  {
    "label": "ENGINE_set_RSA()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ENGINE_set_RSA(ENGINE *e, const RSA_METHOD *rsa_meth)"
  },
  {
    "label": "ENGINE_set_DSA()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ENGINE_set_DSA(ENGINE *e, const DSA_METHOD *dsa_meth)"
  },
  {
    "label": "ENGINE_set_EC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ENGINE_set_EC(ENGINE *e, const EC_KEY_METHOD *ecdsa_meth)"
  },
  {
    "label": "ENGINE_set_DH()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ENGINE_set_DH(ENGINE *e, const DH_METHOD *dh_meth)"
  },
  {
    "label": "ENGINE_set_RAND()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ENGINE_set_RAND(ENGINE *e, const RAND_METHOD *rand_meth)"
  },
  {
    "label": "ENGINE_set_destroy_function()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ENGINE_set_destroy_function(ENGINE *e, ENGINE_GEN_INT_FUNC_PTR destroy_f)"
  },
  {
    "label": "ENGINE_set_init_function()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ENGINE_set_init_function(ENGINE *e, ENGINE_GEN_INT_FUNC_PTR init_f)"
  },
  {
    "label": "ENGINE_set_finish_function()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ENGINE_set_finish_function(ENGINE *e, ENGINE_GEN_INT_FUNC_PTR finish_f)"
  },
  {
    "label": "ENGINE_set_ctrl_function()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ENGINE_set_ctrl_function(ENGINE *e, ENGINE_CTRL_FUNC_PTR ctrl_f)"
  },
  {
    "label": "ENGINE_set_load_privkey_function()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ENGINE_set_load_privkey_function(ENGINE *e, ENGINE_LOAD_KEY_PTR loadpriv_f)"
  },
  {
    "label": "ENGINE_set_load_pubkey_function()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ENGINE_set_load_pubkey_function(ENGINE *e, ENGINE_LOAD_KEY_PTR loadpub_f)"
  },
  {
    "label": "ENGINE_set_load_ssl_client_cert_function()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ENGINE_set_load_ssl_client_cert_function(ENGINE *e, ENGINE_SSL_CLIENT_CERT_PTR loadssl_f)"
  },
  {
    "label": "ENGINE_set_ciphers()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ENGINE_set_ciphers(ENGINE *e, ENGINE_CIPHERS_PTR f)"
  },
  {
    "label": "ENGINE_set_digests()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ENGINE_set_digests(ENGINE *e, ENGINE_DIGESTS_PTR f)"
  },
  {
    "label": "ENGINE_set_pkey_meths()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ENGINE_set_pkey_meths(ENGINE *e, ENGINE_PKEY_METHS_PTR f)"
  },
  {
    "label": "ENGINE_set_pkey_asn1_meths()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ENGINE_set_pkey_asn1_meths(ENGINE *e, ENGINE_PKEY_ASN1_METHS_PTR f)"
  },
  {
    "label": "ENGINE_set_flags()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ENGINE_set_flags(ENGINE *e, int flags)"
  },
  {
    "label": "ENGINE_set_cmd_defns()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ENGINE_set_cmd_defns(ENGINE *e, const ENGINE_CMD_DEFN *defns)"
  },
  {
    "label": "ENGINE_get_ex_new_index()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "ENGINE_get_ex_new_index(l, p, newf, dupf, freef) \\ CRYPTO_get_ex_new_index(CRYPTO_EX_INDEX_ENGINE, l, p, newf, dupf, freef) int ENGINE_set_ex_data(ENGINE *e, int idx, void *arg)"
  },
  {
    "label": "ENGINE_get_ex_data()",
    "kind": "Method",
    "detail": "Function (void*)",
    "insertText": "ENGINE_get_ex_data(const ENGINE *e, int idx)"
  },
  {
    "label": "ENGINE_cleanup()",
    "kind": "Method",
    "detail": "Function (# if OPENSSL_API_COMPAT<0 x10100000L # define)",
    "insertText": "ENGINE_cleanup() while(0) continue #endif const char *ENGINE_get_id(const ENGINE *e)"
  },
  {
    "label": "ENGINE_get_name()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "ENGINE_get_name(const ENGINE *e)"
  },
  {
    "label": "ENGINE_get_RSA()",
    "kind": "Method",
    "detail": "Function (const RSA_METHOD*)",
    "insertText": "ENGINE_get_RSA(const ENGINE *e)"
  },
  {
    "label": "ENGINE_get_DSA()",
    "kind": "Method",
    "detail": "Function (const DSA_METHOD*)",
    "insertText": "ENGINE_get_DSA(const ENGINE *e)"
  },
  {
    "label": "ENGINE_get_EC()",
    "kind": "Method",
    "detail": "Function (const EC_KEY_METHOD*)",
    "insertText": "ENGINE_get_EC(const ENGINE *e)"
  },
  {
    "label": "ENGINE_get_DH()",
    "kind": "Method",
    "detail": "Function (const DH_METHOD*)",
    "insertText": "ENGINE_get_DH(const ENGINE *e)"
  },
  {
    "label": "ENGINE_get_RAND()",
    "kind": "Method",
    "detail": "Function (const RAND_METHOD*)",
    "insertText": "ENGINE_get_RAND(const ENGINE *e)"
  },
  {
    "label": "ENGINE_get_destroy_function()",
    "kind": "Method",
    "detail": "Function (ENGINE_GEN_INT_FUNC_PTR)",
    "insertText": "ENGINE_get_destroy_function(const ENGINE *e)"
  },
  {
    "label": "ENGINE_get_init_function()",
    "kind": "Method",
    "detail": "Function (ENGINE_GEN_INT_FUNC_PTR)",
    "insertText": "ENGINE_get_init_function(const ENGINE *e)"
  },
  {
    "label": "ENGINE_get_finish_function()",
    "kind": "Method",
    "detail": "Function (ENGINE_GEN_INT_FUNC_PTR)",
    "insertText": "ENGINE_get_finish_function(const ENGINE *e)"
  },
  {
    "label": "ENGINE_get_ctrl_function()",
    "kind": "Method",
    "detail": "Function (ENGINE_CTRL_FUNC_PTR)",
    "insertText": "ENGINE_get_ctrl_function(const ENGINE *e)"
  },
  {
    "label": "ENGINE_get_load_privkey_function()",
    "kind": "Method",
    "detail": "Function (ENGINE_LOAD_KEY_PTR)",
    "insertText": "ENGINE_get_load_privkey_function(const ENGINE *e)"
  },
  {
    "label": "ENGINE_get_load_pubkey_function()",
    "kind": "Method",
    "detail": "Function (ENGINE_LOAD_KEY_PTR)",
    "insertText": "ENGINE_get_load_pubkey_function(const ENGINE *e)"
  },
  {
    "label": "ENGINE_get_ssl_client_cert_function()",
    "kind": "Method",
    "detail": "Function (ENGINE_SSL_CLIENT_CERT_PTR)",
    "insertText": "ENGINE_get_ssl_client_cert_function(const ENGINE *e)"
  },
  {
    "label": "ENGINE_get_ciphers()",
    "kind": "Method",
    "detail": "Function (ENGINE_CIPHERS_PTR)",
    "insertText": "ENGINE_get_ciphers(const ENGINE *e)"
  },
  {
    "label": "ENGINE_get_digests()",
    "kind": "Method",
    "detail": "Function (ENGINE_DIGESTS_PTR)",
    "insertText": "ENGINE_get_digests(const ENGINE *e)"
  },
  {
    "label": "ENGINE_get_pkey_meths()",
    "kind": "Method",
    "detail": "Function (ENGINE_PKEY_METHS_PTR)",
    "insertText": "ENGINE_get_pkey_meths(const ENGINE *e)"
  },
  {
    "label": "ENGINE_get_pkey_asn1_meths()",
    "kind": "Method",
    "detail": "Function (ENGINE_PKEY_ASN1_METHS_PTR)",
    "insertText": "ENGINE_get_pkey_asn1_meths(const ENGINE *e)"
  },
  {
    "label": "ENGINE_get_cipher()",
    "kind": "Method",
    "detail": "Function (const EVP_CIPHER*)",
    "insertText": "ENGINE_get_cipher(ENGINE *e, int nid)"
  },
  {
    "label": "ENGINE_get_digest()",
    "kind": "Method",
    "detail": "Function (const EVP_MD*)",
    "insertText": "ENGINE_get_digest(ENGINE *e, int nid)"
  },
  {
    "label": "ENGINE_get_pkey_meth()",
    "kind": "Method",
    "detail": "Function (const EVP_PKEY_METHOD*)",
    "insertText": "ENGINE_get_pkey_meth(ENGINE *e, int nid)"
  },
  {
    "label": "ENGINE_get_pkey_asn1_meth()",
    "kind": "Method",
    "detail": "Function (const EVP_PKEY_ASN1_METHOD*)",
    "insertText": "ENGINE_get_pkey_asn1_meth(ENGINE *e, int nid)"
  },
  {
    "label": "ENGINE_get_pkey_asn1_meth_str()",
    "kind": "Method",
    "detail": "Function (const EVP_PKEY_ASN1_METHOD*)",
    "insertText": "ENGINE_get_pkey_asn1_meth_str(ENGINE *e, const char *str, int len)"
  },
  {
    "label": "ENGINE_pkey_asn1_find_str()",
    "kind": "Method",
    "detail": "Function (const EVP_PKEY_ASN1_METHOD*)",
    "insertText": "ENGINE_pkey_asn1_find_str(ENGINE **pe, const char *str, int len)"
  },
  {
    "label": "ENGINE_get_cmd_defns()",
    "kind": "Method",
    "detail": "Function (const ENGINE_CMD_DEFN*)",
    "insertText": "ENGINE_get_cmd_defns(const ENGINE *e)"
  },
  {
    "label": "ENGINE_get_flags()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ENGINE_get_flags(const ENGINE *e)"
  },
  {
    "label": "ENGINE_init()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ENGINE_init(ENGINE *e)"
  },
  {
    "label": "ENGINE_finish()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ENGINE_finish(ENGINE *e)"
  },
  {
    "label": "ENGINE_load_private_key()",
    "kind": "Method",
    "detail": "Function (EVP_PKEY*)",
    "insertText": "ENGINE_load_private_key(ENGINE *e, const char *key_id, UI_METHOD *ui_method, void *callback_data)"
  },
  {
    "label": "ENGINE_load_public_key()",
    "kind": "Method",
    "detail": "Function (EVP_PKEY*)",
    "insertText": "ENGINE_load_public_key(ENGINE *e, const char *key_id, UI_METHOD *ui_method, void *callback_data)"
  },
  {
    "label": "ENGINE_load_ssl_client_cert()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ENGINE_load_ssl_client_cert(ENGINE *e, SSL *s, STACK_OF(X509_NAME) *ca_dn, X509 **pcert, EVP_PKEY **ppkey, STACK_OF(X509) **pother, UI_METHOD *ui_method, void *callback_data)"
  },
  {
    "label": "ENGINE_get_default_RSA()",
    "kind": "Method",
    "detail": "Function (ENGINE*)",
    "insertText": "ENGINE_get_default_RSA(void)"
  },
  {
    "label": "ENGINE_get_default_DSA()",
    "kind": "Method",
    "detail": "Function (ENGINE*)",
    "insertText": "ENGINE_get_default_DSA(void)"
  },
  {
    "label": "ENGINE_get_default_EC()",
    "kind": "Method",
    "detail": "Function (ENGINE*)",
    "insertText": "ENGINE_get_default_EC(void)"
  },
  {
    "label": "ENGINE_get_default_DH()",
    "kind": "Method",
    "detail": "Function (ENGINE*)",
    "insertText": "ENGINE_get_default_DH(void)"
  },
  {
    "label": "ENGINE_get_default_RAND()",
    "kind": "Method",
    "detail": "Function (ENGINE*)",
    "insertText": "ENGINE_get_default_RAND(void)"
  },
  {
    "label": "ENGINE_get_cipher_engine()",
    "kind": "Method",
    "detail": "Function (ENGINE*)",
    "insertText": "ENGINE_get_cipher_engine(int nid)"
  },
  {
    "label": "ENGINE_get_digest_engine()",
    "kind": "Method",
    "detail": "Function (ENGINE*)",
    "insertText": "ENGINE_get_digest_engine(int nid)"
  },
  {
    "label": "ENGINE_get_pkey_meth_engine()",
    "kind": "Method",
    "detail": "Function (ENGINE*)",
    "insertText": "ENGINE_get_pkey_meth_engine(int nid)"
  },
  {
    "label": "ENGINE_get_pkey_asn1_meth_engine()",
    "kind": "Method",
    "detail": "Function (ENGINE*)",
    "insertText": "ENGINE_get_pkey_asn1_meth_engine(int nid)"
  },
  {
    "label": "ENGINE_set_default_RSA()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ENGINE_set_default_RSA(ENGINE *e)"
  },
  {
    "label": "ENGINE_set_default_string()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ENGINE_set_default_string(ENGINE *e, const char *def_list)"
  },
  {
    "label": "ENGINE_set_default_DSA()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ENGINE_set_default_DSA(ENGINE *e)"
  },
  {
    "label": "ENGINE_set_default_EC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ENGINE_set_default_EC(ENGINE *e)"
  },
  {
    "label": "ENGINE_set_default_DH()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ENGINE_set_default_DH(ENGINE *e)"
  },
  {
    "label": "ENGINE_set_default_RAND()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ENGINE_set_default_RAND(ENGINE *e)"
  },
  {
    "label": "ENGINE_set_default_ciphers()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ENGINE_set_default_ciphers(ENGINE *e)"
  },
  {
    "label": "ENGINE_set_default_digests()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ENGINE_set_default_digests(ENGINE *e)"
  },
  {
    "label": "ENGINE_set_default_pkey_meths()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ENGINE_set_default_pkey_meths(ENGINE *e)"
  },
  {
    "label": "ENGINE_set_default_pkey_asn1_meths()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ENGINE_set_default_pkey_asn1_meths(ENGINE *e)"
  },
  {
    "label": "ENGINE_set_default()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ENGINE_set_default(ENGINE *e, unsigned int flags)"
  },
  {
    "label": "ENGINE_add_conf_module()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ENGINE_add_conf_module(void)"
  },
  {
    "label": "OSSL_DYNAMIC_VERSION()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "OSSL_DYNAMIC_VERSION(unsigned long)0x00030000 # define OSSL_DYNAMIC_OLDEST (unsigned long)0x00030000 typedef void *(*dyn_MEM_malloc_fn) (size_t, const char *, int)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "void(*dyn_MEM_realloc_fn) (void *, size_t, const char *, int)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "void(*dyn_MEM_free_fn) (void *, const char *, int)"
  },
  {
    "label": "long()",
    "kind": "Method",
    "detail": "Function (typedef struct st_dynamic_MEM_fns { dyn_MEM_malloc_fn malloc_fn ; dyn_MEM_realloc_fn realloc_fn ; dyn_MEM_free_fn free_fn ; } dynamic_MEM_fns ; typedef struct st_dynamic_fns { void* static_state ; dynamic_MEM_fns mem_fns ; } dynamic_fns ; typedef unsigned)",
    "insertText": "long(*dynamic_v_check_fn) (unsigned long ossl_version)"
  },
  {
    "label": "IMPLEMENT_DYNAMIC_CHECK_FN()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "IMPLEMENT_DYNAMIC_CHECK_FN() \\ OPENSSL_EXPORT unsigned long v_check(unsigned long v)"
  },
  {
    "label": "v_check()",
    "kind": "Method",
    "detail": "Function (\\ OPENSSL_EXPORT unsigned long)",
    "insertText": "v_check(unsigned long v)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "if(v >= OSSL_DYNAMIC_OLDEST)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (\\ return 0 ; } typedef)",
    "insertText": "int(*dynamic_bind_engine) (ENGINE *e, const char *id, const dynamic_fns *fns)"
  },
  {
    "label": "IMPLEMENT_DYNAMIC_BIND_FN()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "IMPLEMENT_DYNAMIC_BIND_FN(fn) \\ OPENSSL_EXPORT \\ int bind_engine(ENGINE *e, const char *id, const dynamic_fns *fns)"
  },
  {
    "label": "bind_engine()",
    "kind": "Method",
    "detail": "Function (\\ OPENSSL_EXPORT \\ int)",
    "insertText": "bind_engine(ENGINE *e, const char *id, const dynamic_fns *fns)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "if(ENGINE_get_static_state() == fns->static_state)"
  },
  {
    "label": "CRYPTO_set_mem_functions()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "CRYPTO_set_mem_functions(fns->mem_fns.malloc_fn, \\ fns->mem_fns.realloc_fn, \\ fns->mem_fns.free_fn)"
  },
  {
    "label": "OPENSSL_init_crypto()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "OPENSSL_init_crypto(OPENSSL_INIT_NO_ATEXIT, NULL)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (\\ skip_cbs : \\)",
    "insertText": "if(!fn(e, id))"
  },
  {
    "label": "ENGINE_get_static_state()",
    "kind": "Method",
    "detail": "Function (\\ return 1 ; } void*)",
    "insertText": "ENGINE_get_static_state(void)"
  }
]