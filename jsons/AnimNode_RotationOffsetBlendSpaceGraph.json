[
  {
    "label": "FAnimNode_RotationOffsetBlendSpaceGraph",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimNode_RotationOffsetBlendSpaceGraph"
  },
  {
    "label": "UAnimGraphNode_RotationOffsetBlendSpaceGraph",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimGraphNode_RotationOffsetBlendSpaceGraph"
  },
  {
    "label": "FAnimNodeAlphaOptions",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimNodeAlphaOptions"
  },
  {
    "label": "FAnimGraphNodeAlphaOptions",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimGraphNodeAlphaOptions"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" AnimNode_BlendSpaceGraphBase . h \" # include \" Animation / InputScaleBias . h \" # include \" AnimNode_RotationOffsetBlendSpaceGraph . generated . h \")",
    "insertText": "USTRUCT(BlueprintInternalUseOnly)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY()"
  },
  {
    "label": "GetGroupName()",
    "kind": "Method",
    "detail": "Function (struct FAnimNodeAlphaOptions ; struct FAnimGraphNodeAlphaOptions ; FName)",
    "insertText": "GetGroupName()"
  },
  {
    "label": "Initialize_AnyThread()",
    "kind": "Method",
    "detail": "Function (bool bIsLODEnabled = false ; private : void)",
    "insertText": "Initialize_AnyThread(const FAnimationInitializeContext& Context)"
  },
  {
    "label": "CacheBones_AnyThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CacheBones_AnyThread(const FAnimationCacheBonesContext& Context)"
  },
  {
    "label": "Update_AnyThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Update_AnyThread(const FAnimationUpdateContext& Context)"
  },
  {
    "label": "Evaluate_AnyThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Evaluate_AnyThread(FPoseContext& Output)"
  },
  {
    "label": "GatherDebugData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GatherDebugData(FNodeDebugData& DebugData)"
  },
  {
    "label": "GetLODThreshold()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetLODThreshold()"
  }
]