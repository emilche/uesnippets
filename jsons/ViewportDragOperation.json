[
  {
    "label": "VIEWPORTINTERACTION_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "VIEWPORTINTERACTION_API"
  },
  {
    "label": "UViewportInteractor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UViewportInteractor"
  },
  {
    "label": "IViewportInteractableInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IViewportInteractableInterface"
  },
  {
    "label": "FDraggingTransformableData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDraggingTransformableData"
  },
  {
    "label": "UViewportWorldInteraction",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UViewportWorldInteraction"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Components / ActorComponent . h \" # include \" CoreMinimal . h \" # include \" CoreTypes . h \" # include \" Math / Box . h \" # include \" Math / MathFwd . h \" # include \" Math / Transform . h \" # include \" Math / Vector . h \" # include \" Misc / Optional . h \" # include \" Templates / SubclassOf . h \" # include \" UObject / Object . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / ObjectPtr . h \" # include \" UObject / UObjectGlobals . h \" # include \" UnrealWidgetFwd . h \" # include \" ViewportInteractionTypes . h \" # include \" ViewportDragOperation . generated . h \")",
    "insertText": "UCLASS()"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: virtual void ExecuteDrag(class UViewportInteractor* Interactor, class IViewportInteractableInterface* Interactable)"
  },
  {
    "label": "ExecuteDrag()",
    "kind": "Method",
    "detail": "Function (} ; void)",
    "insertText": "ExecuteDrag(struct FDraggingTransformableData& DraggingData)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: UViewportDragOperationComponent()"
  },
  {
    "label": "GetDragOperation()",
    "kind": "Method",
    "detail": "Function (UViewportDragOperation*)",
    "insertText": "GetDragOperation()"
  },
  {
    "label": "SetDragOperationClass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDragOperationClass(const TSubclassOf<UViewportDragOperation> InDragOperation)"
  },
  {
    "label": "StartDragOperation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StartDragOperation()"
  },
  {
    "label": "ClearDragOperation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearDragOperation()"
  },
  {
    "label": "IsDragging()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsDragging()"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "USTRUCT()"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() FDraggingTransformableData() : Interactor(nullptr), WorldInteraction(nullptr), PassDraggedTo(FVector::ZeroVector), OptionalHandlePlacement(), DragDelta(FVector::ZeroVector), ConstrainedDragDelta(FVector::ZeroVector), OtherHandDragDelta(FVector::ZeroVector), DraggedTo(FVector::ZeroVector), OtherHandDraggedTo(FVector::ZeroVector), DragDeltaFromStart(FVector::ZeroVector), OtherHandDragDeltaFromStart(FVector::ZeroVector), LaserPointerStart(FVector::ZeroVector), LaserPointerDirection(FVector::ZeroVector), GizmoStartTransform(FTransform::Identity), GizmoLastTransform(FTransform::Identity), OutGizmoUnsnappedTargetTransform(FTransform::Identity), GizmoStartLocalBounds(ForceInitToZero), GizmoCoordinateSpace(ECoordSystem::COORD_World), bOutMovedTransformGizmo(false), bOutShouldApplyVelocitiesFromDrag(false), OutUnsnappedDraggedTo(FVector::ZeroVector), bOutTranslated(false), bOutRotated(false), bOutScaled(false), bAllowSnap(true)"
  }
]