[
  {
    "label": "AudioBuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AudioBuffer"
  },
  {
    "label": "MockEchoControl",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MockEchoControl"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_AUDIO_PROCESSING_TEST_ECHO_CONTROL_MOCK_H_ # define MODULES_AUDIO_PROCESSING_TEST_ECHO_CONTROL_MOCK_H_ # include \" api / audio / echo_control . h \" # include \" test / gmock . h \" namespace webrtc { class AudioBuffer ; class MockEchoControl : public EchoControl { public :)",
    "insertText": "MOCK_METHOD(void, AnalyzeRender, (AudioBuffer * render), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(void, AnalyzeCapture, (AudioBuffer * capture), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(void, ProcessCapture, (AudioBuffer * capture, bool echo_path_change), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(void, ProcessCapture, (AudioBuffer * capture, AudioBuffer* linear_output, bool echo_path_change), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(EchoControl::Metrics, GetMetrics, (), (const, override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(void, SetAudioBufferDelay, (int delay_ms), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(void, SetCaptureOutputUsage, (bool capture_output_used), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(bool, ActiveProcessing, (), (const, override))"
  }
]