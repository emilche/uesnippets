[
  {
    "label": "CriticalSection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CriticalSection"
  },
  {
    "label": "ScopedLock",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ScopedLock"
  },
  {
    "label": "CriticalSection()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" Windows / MinimalWindowsApi . h \" # include \" LC_Platform . h \" # include \" LC_Foundation_Windows . h \" class CriticalSection { public :)",
    "insertText": "CriticalSection(void)"
  },
  {
    "label": "Enter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Enter(void)"
  },
  {
    "label": "Leave()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Leave(void)"
  },
  {
    "label": "ScopedLock()",
    "kind": "Method",
    "detail": "Function (class ScopedLock { public :)",
    "insertText": "ScopedLock(CriticalSection* cs) : m_cs(cs)"
  },
  {
    "label": "Enter()",
    "kind": "Method",
    "detail": "Function (cs ->)",
    "insertText": "Enter()"
  },
  {
    "label": "ScopedLock()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "ScopedLock(void)"
  },
  {
    "label": "Leave()",
    "kind": "Method",
    "detail": "Function (m_cs ->)",
    "insertText": "Leave()"
  },
  {
    "label": "LC_DISABLE_COPY()",
    "kind": "Method",
    "detail": "Function (} private :)",
    "insertText": "LC_DISABLE_COPY(ScopedLock)"
  },
  {
    "label": "LC_DISABLE_MOVE()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LC_DISABLE_MOVE(ScopedLock)"
  },
  {
    "label": "LC_DISABLE_ASSIGNMENT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LC_DISABLE_ASSIGNMENT(ScopedLock)"
  },
  {
    "label": "LC_DISABLE_MOVE_ASSIGNMENT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LC_DISABLE_MOVE_ASSIGNMENT(ScopedLock)"
  }
]