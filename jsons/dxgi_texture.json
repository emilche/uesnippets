[
  {
    "label": "DesktopRegion",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DesktopRegion"
  },
  {
    "label": "DxgiTexture",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DxgiTexture"
  },
  {
    "label": "DxgiTexture()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_DESKTOP_CAPTURE_WIN_DXGI_TEXTURE_H_ # define MODULES_DESKTOP_CAPTURE_WIN_DXGI_TEXTURE_H_ # include<d3d11 . h> # include<dxgi1_2 . h> # include<memory> # include \" modules / desktop_capture / desktop_frame . h \" # include \" modules / desktop_capture / desktop_geometry . h \" namespace webrtc { class DesktopRegion ; class DxgiTexture { public :)",
    "insertText": "DxgiTexture()"
  },
  {
    "label": "CopyFrom()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CopyFrom(const DXGI_OUTDUPL_FRAME_INFO& frame_info, IDXGIResource* resource)"
  },
  {
    "label": "desktop_size()",
    "kind": "Method",
    "detail": "Function (const DesktopSize&)",
    "insertText": "desktop_size()"
  },
  {
    "label": "pitch()",
    "kind": "Method",
    "detail": "Function (} int)",
    "insertText": "pitch()"
  },
  {
    "label": "Release()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "Release()"
  },
  {
    "label": "AsDesktopFrame()",
    "kind": "Method",
    "detail": "Function (const DesktopFrame&)",
    "insertText": "AsDesktopFrame()"
  },
  {
    "label": "rect()",
    "kind": "Method",
    "detail": "Function (protected : DXGI_MAPPED_RECT*)",
    "insertText": "rect()"
  },
  {
    "label": "CopyFromTexture()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CopyFromTexture(const DXGI_OUTDUPL_FRAME_INFO& frame_info, ID3D11Texture2D* texture)"
  },
  {
    "label": "DoRelease()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DoRelease()"
  }
]