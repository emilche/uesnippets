[
  {
    "label": "BUILDFLAG()",
    "kind": "Method",
    "detail": "Function (# ifndef BASE_MESSAGE_LOOP_MESSAGE_PUMP_FOR_UI_H_ # define BASE_MESSAGE_LOOP_MESSAGE_PUMP_FOR_UI_H_ # include \" build / build_config . h \" # if)",
    "insertText": "BUILDFLAG(IS_WIN) #include \"base/message_loop/message_pump_win.h\" #elif BUILDFLAG(IS_ANDROID) #include \"base/message_loop/message_pump_android.h\" #elif BUILDFLAG(IS_APPLE) #include \"base/message_loop/message_pump.h\" #elif BUILDFLAG(IS_NACL) || BUILDFLAG(IS_AIX) #elif defined(USE_GLIB) #include \"base/message_loop/message_pump_glib.h\" #elif BUILDFLAG(IS_LINUX) || BUILDFLAG(IS_CHROMEOS) || BUILDFLAG(IS_BSD) #include \"base/message_loop/message_pump_libevent.h\" #elif BUILDFLAG(IS_FUCHSIA)"
  },
  {
    "label": "BUILDFLAG()",
    "kind": "Method",
    "detail": "Function (# if)",
    "insertText": "BUILDFLAG(IS_WIN)"
  },
  {
    "label": "BUILDFLAG()",
    "kind": "Method",
    "detail": "Function (# elif)",
    "insertText": "BUILDFLAG(IS_ANDROID)"
  },
  {
    "label": "BUILDFLAG()",
    "kind": "Method",
    "detail": "Function (# elif)",
    "insertText": "BUILDFLAG(IS_APPLE)"
  },
  {
    "label": "BUILDFLAG()",
    "kind": "Method",
    "detail": "Function (# elif)",
    "insertText": "BUILDFLAG(IS_NACL) || BUILDFLAG(IS_AIX) #elif defined(USE_GLIB)"
  },
  {
    "label": "BUILDFLAG()",
    "kind": "Method",
    "detail": "Function (# elif)",
    "insertText": "BUILDFLAG(IS_LINUX) || BUILDFLAG(IS_CHROMEOS) || BUILDFLAG(IS_BSD)"
  },
  {
    "label": "BUILDFLAG()",
    "kind": "Method",
    "detail": "Function (# elif)",
    "insertText": "BUILDFLAG(IS_FUCHSIA)"
  }
]