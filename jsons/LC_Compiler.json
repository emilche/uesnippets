[
  {
    "label": "CompilerType",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "CompilerType"
  },
  {
    "label": "Enum",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Enum"
  },
  {
    "label": "LinkerType",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "LinkerType"
  },
  {
    "label": "CreateEnvironmentCacheEntry()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" LC_ProcessTypes . h \" namespace compiler { Process::Environment)",
    "insertText": "CreateEnvironmentCacheEntry(const wchar_t* absolutePathToCompilerExe)"
  },
  {
    "label": "GetEnvironmentFromCache()",
    "kind": "Method",
    "detail": "Function (Process::Environment)",
    "insertText": "GetEnvironmentFromCache(const wchar_t* absolutePathToCompilerExe)"
  },
  {
    "label": "UpdateEnvironmentCache()",
    "kind": "Method",
    "detail": "Function (Process::Environment)",
    "insertText": "UpdateEnvironmentCache(const wchar_t* absolutePathToCompilerExe)"
  },
  {
    "label": "AddEnvironmentToCache()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddEnvironmentToCache(const wchar_t* absolutePathToCompilerExe, Process::Environment* environment)"
  },
  {
    "label": "DetermineCompilerType()",
    "kind": "Method",
    "detail": "Function (struct CompilerType { enum Enum { CL,CLANG } ; } ; struct LinkerType { enum Enum { LINK,LLD } ; } ; CompilerType::Enum)",
    "insertText": "DetermineCompilerType(const wchar_t* compilerPath)"
  },
  {
    "label": "DetermineLinkerType()",
    "kind": "Method",
    "detail": "Function (LinkerType::Enum)",
    "insertText": "DetermineLinkerType(const wchar_t* linkerPath)"
  }
]