[
  {
    "label": "IAssetTools",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IAssetTools"
  },
  {
    "label": "FAssetToolsModule",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAssetToolsModule"
  },
  {
    "label": "UAssetToolsImpl",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAssetToolsImpl"
  },
  {
    "label": "FAssetToolsConsoleCommands",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAssetToolsConsoleCommands"
  },
  {
    "label": "StartupModule()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Modules / ModuleInterface . h \" # include \" Modules / ModuleManager . h \" # include \" IAssetTools . h \" class IAssetTools ; class FAssetToolsModule : public IModuleInterface { public : void)",
    "insertText": "StartupModule()"
  },
  {
    "label": "ShutdownModule()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ShutdownModule()"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (IAssetTools&)",
    "insertText": "Get()"
  },
  {
    "label": "GetModule()",
    "kind": "Method",
    "detail": "Function (FAssetToolsModule&)",
    "insertText": "GetModule()"
  },
  {
    "label": "FAssetToolsModule()",
    "kind": "Method",
    "detail": "Function (const FName ModuleName = \" AssetTools \" ; return FModuleManager::LoadModuleChecked<)",
    "insertText": "FAssetToolsModule(ModuleName)"
  },
  {
    "label": "IsModuleLoaded()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsModuleLoaded()"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (const FName ModuleName = \" AssetTools \" ; return)",
    "insertText": "Get().IsModuleLoaded(ModuleName)"
  }
]