[
  {
    "label": "sycl_packet_traits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "sycl_packet_traits"
  },
  {
    "label": "packet_traits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "packet_traits"
  },
  {
    "label": "is_arithmetic",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "is_arithmetic"
  },
  {
    "label": "unpacket_traits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "unpacket_traits"
  },
  {
    "label": "PacketWrapper",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "PacketWrapper"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# ifndef EIGEN_INTEROP_HEADERS_SYCL_H # define EIGEN_INTEROP_HEADERS_SYCL_H namespace Eigen { # if !)",
    "insertText": "defined(EIGEN_DONT_VECTORIZE_SYCL)"
  },
  {
    "label": "SYCL_PACKET_TRAITS()",
    "kind": "Method",
    "detail": "Function (template<int has_blend,int lengths> struct sycl_packet_traits : default_packet_traits { enum { Vectorizable = 1,AlignedOnScalar = 1,size = lengths,HasHalfPacket = 0,HasDiv = 1,HasLog = 1,HasExp = 1,HasSqrt = 1,HasRsqrt = 1,HasSin = 1,HasCos = 1,HasTan = 1,HasASin = 1,HasACos = 1,HasATan = 1,HasSinh = 1,HasCosh = 1,HasTanh = 1,HasLGamma = 0,HasDiGamma = 0,HasZeta = 0,HasPolygamma = 0,HasErf = 0,HasErfc = 0,HasNdtri = 0,HasIGamma = 0,HasIGammac = 0,HasBetaInc = 0,HasBlend = has_blend,HasCmp = 1,HasMax = 1,HasMin = 1,HasMul = 1,HasAdd = 1,HasFloor = 1,HasRound = 1,HasRint = 1,HasLog1p = 1,HasExpm1 = 1,HasCeil = 1,} ; } ; # ifdef SYCL_DEVICE_ONLY # define)",
    "insertText": "SYCL_PACKET_TRAITS(packet_type, has_blend, unpacket_type, lengths)"
  },
  {
    "label": "SYCL_PACKET_TRAITS()",
    "kind": "Method",
    "detail": "Function (\\ typedef packet_type type ; \\ typedef packet_type half ; \\ } ;)",
    "insertText": "SYCL_PACKET_TRAITS(cl::sycl::cl_float4, 1, float, 4) SYCL_PACKET_TRAITS(cl::sycl::cl_float4, 1, const float, 4) SYCL_PACKET_TRAITS(cl::sycl::cl_double2, 0, double, 2) SYCL_PACKET_TRAITS(cl::sycl::cl_double2, 0, const double, 2) #undef SYCL_PACKET_TRAITS #define SYCL_ARITHMETIC(packet_type)"
  },
  {
    "label": "SYCL_ARITHMETIC()",
    "kind": "Method",
    "detail": "Function (\\ enum { value = true } ; \\ } ;)",
    "insertText": "SYCL_ARITHMETIC(cl::sycl::cl_float4) SYCL_ARITHMETIC(cl::sycl::cl_double2) #undef SYCL_ARITHMETIC #define SYCL_UNPACKET_TRAITS(packet_type, unpacket_type, lengths)"
  },
  {
    "label": "SYCL_UNPACKET_TRAITS()",
    "kind": "Method",
    "detail": "Function (\\ typedef unpacket_type type ; \\ enum { size = lengths,vectorizable = true,alignment = Aligned16 } ; \\ typedef packet_type half ; \\ } ;)",
    "insertText": "SYCL_UNPACKET_TRAITS(cl::sycl::cl_float4, float, 4) SYCL_UNPACKET_TRAITS(cl::sycl::cl_double2, double, 2)"
  },
  {
    "label": "scalarize()",
    "kind": "Method",
    "detail": "Function (namespace internal { template<PacketReturnType,int PacketSize> struct PacketWrapper ; # ifndef SYCL_DEVICE_ONLY template<PacketReturnType,int PacketSize> struct PacketWrapper { typedef::Eigen::internal::unpacket_traits<PacketReturnType>::type Scalar ; template<Index> EIGEN_DEVICE_FUNC Scalar)",
    "insertText": "scalarize(Index, PacketReturnType &)"
  },
  {
    "label": "eigen_assert()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "eigen_assert(false && \"THERE IS NO PACKETIZE VERSION FOR THE CHOSEN TYPE\")"
  },
  {
    "label": "abort()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "abort()"
  },
  {
    "label": "convert_to_packet_type()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC PacketReturnType)",
    "insertText": "convert_to_packet_type(Scalar in, Scalar)"
  },
  {
    "label": "set_packet()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC void)",
    "insertText": "set_packet(PacketReturnType, Scalar *)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (} } ; # elif)",
    "insertText": "defined(SYCL_DEVICE_ONLY)"
  },
  {
    "label": "scalarize()",
    "kind": "Method",
    "detail": "Function (typedef::Eigen::internal::unpacket_traits<PacketReturnType>::type Scalar ; template<Index> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Scalar)",
    "insertText": "scalarize(Index index, PacketReturnType &in)"
  },
  {
    "label": "__builtin_unreachable()",
    "kind": "Method",
    "detail": "Function (default :)",
    "insertText": "__builtin_unreachable()"
  },
  {
    "label": "convert_to_packet_type()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE PacketReturnType)",
    "insertText": "convert_to_packet_type(Scalar in, Scalar other)"
  },
  {
    "label": "set_packet()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE void)",
    "insertText": "set_packet(PacketReturnType &lhs, Scalar *rhs)"
  },
  {
    "label": "PacketReturnType()",
    "kind": "Method",
    "detail": "Function (lhs =)",
    "insertText": "PacketReturnType(rhs[0], rhs[1], rhs[2], rhs[3])"
  },
  {
    "label": "scalarize()",
    "kind": "Method",
    "detail": "Function (} } ; template<PacketReturnType> struct PacketWrapper<PacketReturnType,1> { typedef::Eigen::internal::unpacket_traits<PacketReturnType>::type Scalar ; template<Index> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Scalar)",
    "insertText": "scalarize(Index, PacketReturnType &in)"
  },
  {
    "label": "PacketReturnType()",
    "kind": "Method",
    "detail": "Function (lhs =)",
    "insertText": "PacketReturnType(rhs[0], rhs[1])"
  }
]