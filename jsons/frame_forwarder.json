[
  {
    "label": "FrameForwarder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FrameForwarder"
  },
  {
    "label": "FrameForwarder()",
    "kind": "Method",
    "detail": "Function (# ifndef TEST_FRAME_FORWARDER_H_ # define TEST_FRAME_FORWARDER_H_ # include \" api / video / video_frame . h \" # include \" api / video / video_source_interface . h \" # include \" rtc_base / synchronization / mutex . h \" namespace webrtc { namespace test { class FrameForwarder : public rtc::VideoSourceInterface<VideoFrame> { public :)",
    "insertText": "FrameForwarder()"
  },
  {
    "label": "IncomingCapturedFrame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "IncomingCapturedFrame(const VideoFrame& video_frame) RTC_LOCKS_EXCLUDED(mutex_)"
  },
  {
    "label": "sink_wants()",
    "kind": "Method",
    "detail": "Function (rtc::VideoSinkWants)",
    "insertText": "sink_wants() const RTC_LOCKS_EXCLUDED(mutex_)"
  },
  {
    "label": "has_sinks()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "has_sinks() const RTC_LOCKS_EXCLUDED(mutex_)"
  },
  {
    "label": "sink_wants_locked()",
    "kind": "Method",
    "detail": "Function (protected : rtc::VideoSinkWants)",
    "insertText": "sink_wants_locked() const RTC_EXCLUSIVE_LOCKS_REQUIRED(mutex_)"
  },
  {
    "label": "AddOrUpdateSink()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddOrUpdateSink(rtc::VideoSinkInterface<VideoFrame>* sink, const rtc::VideoSinkWants& wants) RTC_LOCKS_EXCLUDED(mutex_)"
  },
  {
    "label": "AddOrUpdateSinkLocked()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddOrUpdateSinkLocked(rtc::VideoSinkInterface<VideoFrame>* sink, const rtc::VideoSinkWants& wants) RTC_EXCLUSIVE_LOCKS_REQUIRED(mutex_)"
  },
  {
    "label": "RemoveSink()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveSink(rtc::VideoSinkInterface<VideoFrame>* sink) RTC_LOCKS_EXCLUDED(mutex_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (Mutex mutex_ ; rtc::VideoSinkInterface<VideoFrame>* sink_)",
    "insertText": "RTC_GUARDED_BY(mutex_)"
  }
]