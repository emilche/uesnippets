[
  {
    "label": "STextBlock",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "STextBlock"
  },
  {
    "label": "UMaterialInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialInterface"
  },
  {
    "label": "UTextBlock",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UTextBlock"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" Fonts / SlateFontInfo . h \" # include \" Styling / SlateColor . h \" # include \" Widgets / SWidget . h \" # include \" Components / TextWidgetTypes . h \" # include \" TextBlock . generated . h \" class STextBlock ; class UMaterialInterface ;)",
    "insertText": "UCLASS(meta=(DisplayName=\"Text\"), MinimalAPI)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() public: UE_DEPRECATED(5.1, \"Direct access to Text is deprecated. Please use the getter or setter.\") UPROPERTY(EditAnywhere, BlueprintReadWrite, Getter, Setter, BlueprintGetter=\"GetText\", BlueprintSetter=\"SetText\", Category=\"Content\", meta = (MultiLine = \"true\"))"
  },
  {
    "label": "GetColorAndOpacity()",
    "kind": "Method",
    "detail": "Function (FSlateColor)",
    "insertText": "GetColorAndOpacity()"
  },
  {
    "label": "GetShadowColorAndOpacity()",
    "kind": "Method",
    "detail": "Function (FLinearColor)",
    "insertText": "GetShadowColorAndOpacity()"
  },
  {
    "label": "GetShadowOffset()",
    "kind": "Method",
    "detail": "Function (FVector2D)",
    "insertText": "GetShadowOffset()"
  },
  {
    "label": "GetFont()",
    "kind": "Method",
    "detail": "Function (const FSlateFontInfo&)",
    "insertText": "GetFont()"
  },
  {
    "label": "GetStrikeBrush()",
    "kind": "Method",
    "detail": "Function (const FSlateBrush&)",
    "insertText": "GetStrikeBrush()"
  },
  {
    "label": "GetMinDesiredWidth()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetMinDesiredWidth()"
  },
  {
    "label": "GetTextTransformPolicy()",
    "kind": "Method",
    "detail": "Function (ETextTransformPolicy)",
    "insertText": "GetTextTransformPolicy()"
  },
  {
    "label": "GetTextOverflowPolicy()",
    "kind": "Method",
    "detail": "Function (ETextOverflowPolicy)",
    "insertText": "GetTextOverflowPolicy()"
  },
  {
    "label": "OnTextChanged()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "OnTextChanged()"
  },
  {
    "label": "OnFontChanged()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "OnFontChanged()"
  },
  {
    "label": "SynchronizeProperties()",
    "kind": "Method",
    "detail": "Function (} public : void)",
    "insertText": "SynchronizeProperties()"
  },
  {
    "label": "ReleaseSlateResources()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseSlateResources(bool bReleaseChildren)"
  },
  {
    "label": "GetPaletteCategory()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR const FText)",
    "insertText": "GetPaletteCategory()"
  },
  {
    "label": "OnCreationFromPalette()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnCreationFromPalette()"
  },
  {
    "label": "CanEditChange()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanEditChange(const FProperty* InProperty)"
  },
  {
    "label": "GetLabelMetadata()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetLabelMetadata()"
  },
  {
    "label": "HandleTextCommitted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleTextCommitted(const FText& InText, ETextCommit::Type CommitteType)"
  },
  {
    "label": "OnShapedTextOptionsChanged()",
    "kind": "Method",
    "detail": "Function (# endif protected : void)",
    "insertText": "OnShapedTextOptionsChanged(FShapedTextOptions InShapedTextOptions)"
  },
  {
    "label": "OnJustificationChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnJustificationChanged(ETextJustify::Type InJustification)"
  },
  {
    "label": "OnWrappingPolicyChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnWrappingPolicyChanged(ETextWrappingPolicy InWrappingPolicy)"
  },
  {
    "label": "OnAutoWrapTextChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAutoWrapTextChanged(bool InAutoWrapText)"
  },
  {
    "label": "OnWrapTextAtChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnWrapTextAtChanged(float InWrapTextAt)"
  },
  {
    "label": "OnLineHeightPercentageChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnLineHeightPercentageChanged(float InLineHeightPercentage)"
  },
  {
    "label": "OnApplyLineHeightToBottomLineChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnApplyLineHeightToBottomLineChanged(bool InApplyLineHeightToBottomLine)"
  },
  {
    "label": "OnMarginChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnMarginChanged(const FMargin& InMargin)"
  },
  {
    "label": "RebuildWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "RebuildWidget()"
  },
  {
    "label": "OnBindingChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnBindingChanged(const FName& Property)"
  },
  {
    "label": "GetDisplayText()",
    "kind": "Method",
    "detail": "Function (TAttribute<FText>)",
    "insertText": "GetDisplayText()"
  },
  {
    "label": "GetTextWarningImageVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "GetTextWarningImageVisibility()"
  },
  {
    "label": "GetAccessibleWidget()",
    "kind": "Method",
    "detail": "Function (# if WITH_ACCESSIBILITY TSharedPtr<SWidget>)",
    "insertText": "GetAccessibleWidget()"
  },
  {
    "label": "PROPERTY_BINDING_IMPLEMENTATION()",
    "kind": "Method",
    "detail": "Function (# endif protected : TSharedPtr<STextBlock> MyTextBlock ;)",
    "insertText": "PROPERTY_BINDING_IMPLEMENTATION(FText, Text)"
  },
  {
    "label": "PROPERTY_BINDING_IMPLEMENTATION()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PROPERTY_BINDING_IMPLEMENTATION(FSlateColor, ColorAndOpacity)"
  },
  {
    "label": "PROPERTY_BINDING_IMPLEMENTATION()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PROPERTY_BINDING_IMPLEMENTATION(FLinearColor, ShadowColorAndOpacity)"
  }
]