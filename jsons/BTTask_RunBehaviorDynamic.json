[
  {
    "label": "UBehaviorTree",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBehaviorTree"
  },
  {
    "label": "UBTTask_RunBehaviorDynamic",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBTTask_RunBehaviorDynamic"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" GameplayTagContainer . h \" # include \" BehaviorTree / BTTaskNode . h \" # include \" BTTask_RunBehaviorDynamic . generated . h \" class UBehaviorTree ;)",
    "insertText": "UCLASS(MinimalAPI)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() AIMODULE_API virtual EBTNodeResult::Type ExecuteTask(UBehaviorTreeComponent& OwnerComp, uint8* NodeMemory)"
  },
  {
    "label": "OnInstanceCreated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnInstanceCreated(UBehaviorTreeComponent& OwnerComp)"
  },
  {
    "label": "GetStaticDescription()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetStaticDescription()"
  },
  {
    "label": "DescribeRuntimeValues()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DescribeRuntimeValues(const UBehaviorTreeComponent& OwnerComp, uint8* NodeMemory, EBTDescriptionVerbosity::Type Verbosity, TArray<FString>& Values)"
  },
  {
    "label": "GetNodeIconName()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR FName)",
    "insertText": "GetNodeIconName()"
  },
  {
    "label": "GetBehaviorAssetFromRuntimeValue()",
    "kind": "Method",
    "detail": "Function (UBehaviorTree*)",
    "insertText": "GetBehaviorAssetFromRuntimeValue(const FString& RuntimeValue)"
  },
  {
    "label": "HasMatchingTag()",
    "kind": "Method",
    "detail": "Function (# endif bool)",
    "insertText": "HasMatchingTag(const FGameplayTag& Tag)"
  },
  {
    "label": "GetInjectionTag()",
    "kind": "Method",
    "detail": "Function (const FGameplayTag&)",
    "insertText": "GetInjectionTag()"
  },
  {
    "label": "SetBehaviorAsset()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetBehaviorAsset(UBehaviorTree* NewBehaviorAsset)"
  },
  {
    "label": "GetDefaultBehaviorAsset()",
    "kind": "Method",
    "detail": "Function (UBehaviorTree*)",
    "insertText": "GetDefaultBehaviorAsset()"
  },
  {
    "label": "OnSubtreeDeactivated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSubtreeDeactivated(UBehaviorTreeComponent& OwnerComp, EBTNodeResult::Type NodeResult)"
  }
]