[
  {
    "label": "TestBitrateObserver",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TestBitrateObserver"
  },
  {
    "label": "RtpStream",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RtpStream"
  },
  {
    "label": "RtpPacket",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RtpPacket"
  },
  {
    "label": "RtcpPacket",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RtcpPacket"
  },
  {
    "label": "StreamGenerator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "StreamGenerator"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "RemoteBitrateEstimatorTest",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RemoteBitrateEstimatorTest"
  },
  {
    "label": "set_rtp_timestamp_offset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "set_rtp_timestamp_offset(uint32_t offset)"
  },
  {
    "label": "GenerateFrame()",
    "kind": "Method",
    "detail": "Function (int64_t)",
    "insertText": "GenerateFrame(int64_t time_now_us, PacketList* packets)"
  },
  {
    "label": "set_bitrate_bps()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "set_bitrate_bps(int bitrate_bps)"
  },
  {
    "label": "Compare()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Compare(const std::pair<uint32_t, RtpStream*>& left,\n                      const std::pair<uint32_t, RtpStream*>& right)"
  },
  {
    "label": "AddStream()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddStream(RtpStream* stream)"
  },
  {
    "label": "set_capacity_bps()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "set_capacity_bps(int capacity_bps)"
  },
  {
    "label": "SetBitrateBps()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetBitrateBps(int bitrate_bps)"
  },
  {
    "label": "set_rtp_timestamp_offset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "set_rtp_timestamp_offset(uint32_t ssrc, uint32_t offset)"
  },
  {
    "label": "GenerateFrame()",
    "kind": "Method",
    "detail": "Function (int64_t)",
    "insertText": "GenerateFrame(RtpStream::PacketList* packets, int64_t time_now_us)"
  },
  {
    "label": "RemoteBitrateEstimatorTest()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "RemoteBitrateEstimatorTest()"
  },
  {
    "label": "AddDefaultStream()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddDefaultStream()"
  },
  {
    "label": "AbsSendTime()",
    "kind": "Method",
    "detail": "Function (uint32_t)",
    "insertText": "AbsSendTime(int64_t t, int64_t denom)"
  },
  {
    "label": "AddAbsSendTime()",
    "kind": "Method",
    "detail": "Function (uint32_t)",
    "insertText": "AddAbsSendTime(uint32_t t1, uint32_t t2)"
  },
  {
    "label": "IncomingPacket()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "IncomingPacket(uint32_t ssrc,\n                      size_t payload_size,\n                      int64_t arrival_time,\n                      uint32_t rtp_timestamp,\n                      uint32_t absolute_send_time)"
  },
  {
    "label": "GenerateAndProcessFrame()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GenerateAndProcessFrame(uint32_t ssrc, uint32_t bitrate_bps)"
  },
  {
    "label": "SteadyStateRun()",
    "kind": "Method",
    "detail": "Function (uint32_t)",
    "insertText": "SteadyStateRun(uint32_t ssrc,\n                          int number_of_frames,\n                          uint32_t start_bitrate,\n                          uint32_t min_bitrate,\n                          uint32_t max_bitrate,\n                          uint32_t target_bitrate)"
  },
  {
    "label": "TestTimestampGroupingTestHelper()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TestTimestampGroupingTestHelper()"
  },
  {
    "label": "TestWrappingHelper()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TestWrappingHelper(int silence_time_s)"
  },
  {
    "label": "InitialBehaviorTestHelper()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitialBehaviorTestHelper(uint32_t expected_converge_bitrate)"
  },
  {
    "label": "RateIncreaseReorderingTestHelper()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RateIncreaseReorderingTestHelper(uint32_t expected_bitrate)"
  },
  {
    "label": "RateIncreaseRtpTimestampsTestHelper()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RateIncreaseRtpTimestampsTestHelper(int expected_iterations)"
  },
  {
    "label": "CapacityDropTestHelper()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CapacityDropTestHelper(int number_of_streams,\n                              bool wrap_time_stamp,\n                              uint32_t expected_bitrate_drop_delta,\n                              int64_t receiver_clock_offset_change_ms)"
  }
]