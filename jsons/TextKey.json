[
  {
    "label": "FTextKey",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTextKey"
  },
  {
    "label": "FTextKeyState",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTextKeyState"
  },
  {
    "label": "FTextId",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTextId"
  },
  {
    "label": "UE_TEXTKEY_STORE_EMBEDDED_HASH()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" Templates / TypeHash . h \" # include \" Containers / StringConv . h \" # include \" Containers / StringView . h \" # include \" Containers / UnrealString . h \" # include \" Serialization / StructuredArchive . h \" # ifndef UE_TEXTKEY_STORE_EMBEDDED_HASH # define)",
    "insertText": "UE_TEXTKEY_STORE_EMBEDDED_HASH(0)"
  },
  {
    "label": "HashString()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "HashString(const FTCHARToUTF16& InStr)"
  },
  {
    "label": "HashString()",
    "kind": "Method",
    "detail": "Function (} uint32)",
    "insertText": "HashString(const TCHAR* InStr)"
  },
  {
    "label": "UTF16String()",
    "kind": "Method",
    "detail": "Function (FTCHARToUTF16)",
    "insertText": "UTF16String(InStr)"
  },
  {
    "label": "HashString()",
    "kind": "Method",
    "detail": "Function (} uint32)",
    "insertText": "HashString(const TCHAR* InStr, const uint32 InBaseHash)"
  },
  {
    "label": "HashString()",
    "kind": "Method",
    "detail": "Function (} uint32)",
    "insertText": "HashString(const TCHAR* InStr, const int32 InStrLen)"
  },
  {
    "label": "UTF16String()",
    "kind": "Method",
    "detail": "Function (FTCHARToUTF16)",
    "insertText": "UTF16String(InStr, InStrLen)"
  },
  {
    "label": "HashString()",
    "kind": "Method",
    "detail": "Function (} uint32)",
    "insertText": "HashString(const TCHAR* InStr, const int32 InStrLen, const uint32 InBaseHash)"
  },
  {
    "label": "HashString()",
    "kind": "Method",
    "detail": "Function (} uint32)",
    "insertText": "HashString(const FString& InStr)"
  },
  {
    "label": "HashString()",
    "kind": "Method",
    "detail": "Function (} uint32)",
    "insertText": "HashString(const FString& InStr, const uint32 InBaseHash)"
  },
  {
    "label": "HashString()",
    "kind": "Method",
    "detail": "Function (} uint32)",
    "insertText": "HashString(FStringView InStr)"
  },
  {
    "label": "HashString()",
    "kind": "Method",
    "detail": "Function (} uint32)",
    "insertText": "HashString(FStringView InStr, const uint32 InBaseHash)"
  },
  {
    "label": "FTextKey()",
    "kind": "Method",
    "detail": "Function (} } class FTextKey { public :)",
    "insertText": "FTextKey()"
  },
  {
    "label": "FTextKey()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FTextKey(FStringView InStr)"
  },
  {
    "label": "FTextKey()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FTextKey(const TCHAR* InStr) : FTextKey(FStringView(InStr))"
  },
  {
    "label": "FTextKey()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FTextKey(const FString& InStr) : FTextKey(FStringView(InStr))"
  },
  {
    "label": "ToString()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "ToString()"
  },
  {
    "label": "ToString()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ToString(FString& Out)"
  },
  {
    "label": "ToString()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ToString(FStringBuilderBase& Out)"
  },
  {
    "label": "AppendString()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AppendString(FString& Out)"
  },
  {
    "label": "AppendString()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AppendString(FStringBuilderBase& Out)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "operator(const FTextKey& A, const FTextKey& B)"
  },
  {
    "label": "SerializeAsString()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SerializeAsString(FArchive& Ar)"
  },
  {
    "label": "SerializeWithHash()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SerializeWithHash(FArchive& Ar)"
  },
  {
    "label": "SerializeDiscardHash()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SerializeDiscardHash(FArchive& Ar)"
  },
  {
    "label": "SerializeAsString()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SerializeAsString(FStructuredArchiveSlot Slot)"
  },
  {
    "label": "SerializeWithHash()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SerializeWithHash(FStructuredArchiveSlot Slot)"
  },
  {
    "label": "SerializeDiscardHash()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SerializeDiscardHash(FStructuredArchiveSlot Slot)"
  },
  {
    "label": "CompactDataStructures()",
    "kind": "Method",
    "detail": "Function (Index = INDEX_NONE ; # if UE_TEXTKEY_STORE_EMBEDDED_HASH StrHash = 0 ; # endif } void)",
    "insertText": "CompactDataStructures()"
  },
  {
    "label": "TearDown()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TearDown()"
  },
  {
    "label": "FTextId()",
    "kind": "Method",
    "detail": "Function (private : int32 Index = INDEX_NONE ; # if UE_TEXTKEY_STORE_EMBEDDED_HASH uint32 StrHash = 0 ; # endif class FTextKeyState ; } ; class FTextId { public :)",
    "insertText": "FTextId()"
  },
  {
    "label": "FTextId()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FTextId(const FTextKey& InNamespace, const FTextKey& InKey) : Namespace(InNamespace) , Key(InKey)"
  },
  {
    "label": "GetNamespace()",
    "kind": "Method",
    "detail": "Function (} FTextKey)",
    "insertText": "GetNamespace()"
  },
  {
    "label": "SerializeAsString()",
    "kind": "Method",
    "detail": "Function (Namespace .)",
    "insertText": "SerializeAsString(Ar)"
  },
  {
    "label": "SerializeWithHash()",
    "kind": "Method",
    "detail": "Function (Namespace .)",
    "insertText": "SerializeWithHash(Ar)"
  },
  {
    "label": "SerializeDiscardHash()",
    "kind": "Method",
    "detail": "Function (Namespace .)",
    "insertText": "SerializeDiscardHash(Ar)"
  },
  {
    "label": "EnterRecord()",
    "kind": "Method",
    "detail": "Function (FStructuredArchiveRecord Record = Slot .)",
    "insertText": "EnterRecord()"
  },
  {
    "label": "SerializeAsString()",
    "kind": "Method",
    "detail": "Function (Namespace .)",
    "insertText": "SerializeAsString(Record.EnterField(TEXT(\"Namespace\")))"
  },
  {
    "label": "SerializeAsString()",
    "kind": "Method",
    "detail": "Function (Key .)",
    "insertText": "SerializeAsString(Record.EnterField(TEXT(\"Key\")))"
  },
  {
    "label": "SerializeWithHash()",
    "kind": "Method",
    "detail": "Function (Namespace .)",
    "insertText": "SerializeWithHash(Record.EnterField(TEXT(\"Namespace\")))"
  },
  {
    "label": "SerializeWithHash()",
    "kind": "Method",
    "detail": "Function (Key .)",
    "insertText": "SerializeWithHash(Record.EnterField(TEXT(\"Key\")))"
  },
  {
    "label": "SerializeDiscardHash()",
    "kind": "Method",
    "detail": "Function (Namespace .)",
    "insertText": "SerializeDiscardHash(Record.EnterField(TEXT(\"Namespace\")))"
  },
  {
    "label": "SerializeDiscardHash()",
    "kind": "Method",
    "detail": "Function (Key .)",
    "insertText": "SerializeDiscardHash(Record.EnterField(TEXT(\"Key\")))"
  },
  {
    "label": "IsEmpty()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsEmpty()"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Reset()"
  }
]