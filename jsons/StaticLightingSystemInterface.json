[
  {
    "label": "FMaterialRenderProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMaterialRenderProxy"
  },
  {
    "label": "IStaticLightingSystem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IStaticLightingSystem"
  },
  {
    "label": "FMeshMapBuildData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMeshMapBuildData"
  },
  {
    "label": "FLightComponentMapBuildData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLightComponentMapBuildData"
  },
  {
    "label": "FPrecomputedVolumetricLightmap",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPrecomputedVolumetricLightmap"
  },
  {
    "label": "IStaticLightingSystemImpl",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IStaticLightingSystemImpl"
  },
  {
    "label": "FStaticLightingSystemInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStaticLightingSystemInterface"
  },
  {
    "label": "GetPrimitiveMeshMapBuildData()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Components / PrimitiveComponent . h \" # include \" Components / LightComponent . h \" # include \" Components / SkyAtmosphereComponent . h \" class FMaterialRenderProxy ; class IStaticLightingSystem { public : const class FMeshMapBuildData*)",
    "insertText": "GetPrimitiveMeshMapBuildData(const UPrimitiveComponent* Component, int32 LODIndex)"
  },
  {
    "label": "GetStaticLightingSystemForWorld()",
    "kind": "Method",
    "detail": "Function (} } ; class IStaticLightingSystemImpl { public : IStaticLightingSystem*)",
    "insertText": "GetStaticLightingSystemForWorld(UWorld* InWorld)"
  },
  {
    "label": "IsStaticLightingSystemRunning()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsStaticLightingSystemRunning()"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_OneParam(FLightComponentBasedSignature, ULightComponentBase*)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_TwoParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_TwoParams(FStationaryLightChannelReassignmentSignature, ULightComponentBase* , int32)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_MULTICAST_DELEGATE(FLightmassImportanceVolumeModifiedSignature)"
  },
  {
    "label": "DECLARE_TS_MULTICAST_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_TS_MULTICAST_DELEGATE_OneParam(FMaterialInvalidationSignature, FMaterialRenderProxy*)"
  },
  {
    "label": "GetPrimitiveMeshMapBuildData()",
    "kind": "Method",
    "detail": "Function (FPrimitiveComponentBasedSignature OnPrimitiveComponentRegistered ; FPrimitiveComponentBasedSignature OnPrimitiveComponentUnregistered ; FLightComponentBasedSignature OnLightComponentRegistered ; FLightComponentBasedSignature OnLightComponentUnregistered ; FStationaryLightChannelReassignmentSignature OnStationaryLightChannelReassigned ; FLightmassImportanceVolumeModifiedSignature OnLightmassImportanceVolumeModified ; FMaterialInvalidationSignature OnMaterialInvalidated ; FSimpleMulticastDelegate OnSkyAtmosphereModified ; const class FMeshMapBuildData*)",
    "insertText": "GetPrimitiveMeshMapBuildData(const UPrimitiveComponent* Component, int32 LODIndex = 0)"
  },
  {
    "label": "GetLightComponentMapBuildData()",
    "kind": "Method",
    "detail": "Function (const class FLightComponentMapBuildData*)",
    "insertText": "GetLightComponentMapBuildData(const ULightComponent* Component)"
  },
  {
    "label": "GetPrecomputedVolumetricLightmap()",
    "kind": "Method",
    "detail": "Function (const class FPrecomputedVolumetricLightmap*)",
    "insertText": "GetPrecomputedVolumetricLightmap(UWorld* World)"
  },
  {
    "label": "EditorTick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EditorTick()"
  },
  {
    "label": "GameTick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GameTick(float DeltaSeconds)"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (FStaticLightingSystemInterface*)",
    "insertText": "Get()"
  },
  {
    "label": "RegisterImplementation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterImplementation(FName Name, IStaticLightingSystemImpl* Impl)"
  },
  {
    "label": "UnregisterImplementation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterImplementation(FName Name)"
  },
  {
    "label": "GetPreferredImplementation()",
    "kind": "Method",
    "detail": "Function (IStaticLightingSystemImpl*)",
    "insertText": "GetPreferredImplementation()"
  }
]