[
  {
    "label": "CefWindowCToCpp",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CefWindowCToCpp"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# ifndef CEF_LIBCEF_DLL_CTOCPP_VIEWS_WINDOW_CTOCPP_H_ # define CEF_LIBCEF_DLL_CTOCPP_VIEWS_WINDOW_CTOCPP_H_ # pragma once # if !)",
    "insertText": "defined(WRAPPING_CEF_SHARED)"
  },
  {
    "label": "CefWindowCToCpp()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "CefWindowCToCpp()"
  },
  {
    "label": "Show()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Show()"
  },
  {
    "label": "Hide()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Hide()"
  },
  {
    "label": "CenterWindow()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CenterWindow(const CefSize& size)"
  },
  {
    "label": "Close()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Close()"
  },
  {
    "label": "IsClosed()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsClosed()"
  },
  {
    "label": "Activate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Activate()"
  },
  {
    "label": "Deactivate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Deactivate()"
  },
  {
    "label": "IsActive()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsActive()"
  },
  {
    "label": "BringToTop()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BringToTop()"
  },
  {
    "label": "SetAlwaysOnTop()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAlwaysOnTop(bool on_top)"
  },
  {
    "label": "IsAlwaysOnTop()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsAlwaysOnTop()"
  },
  {
    "label": "Maximize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Maximize()"
  },
  {
    "label": "Minimize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Minimize()"
  },
  {
    "label": "Restore()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Restore()"
  },
  {
    "label": "SetFullscreen()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFullscreen(bool fullscreen)"
  },
  {
    "label": "IsMaximized()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsMaximized()"
  },
  {
    "label": "IsMinimized()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsMinimized()"
  },
  {
    "label": "IsFullscreen()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsFullscreen()"
  },
  {
    "label": "SetTitle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTitle(const CefString& title)"
  },
  {
    "label": "GetTitle()",
    "kind": "Method",
    "detail": "Function (CefString)",
    "insertText": "GetTitle()"
  },
  {
    "label": "SetWindowIcon()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetWindowIcon(CefRefPtr<CefImage> image)"
  },
  {
    "label": "GetWindowIcon()",
    "kind": "Method",
    "detail": "Function (CefRefPtr<CefImage>)",
    "insertText": "GetWindowIcon()"
  },
  {
    "label": "SetWindowAppIcon()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetWindowAppIcon(CefRefPtr<CefImage> image)"
  },
  {
    "label": "GetWindowAppIcon()",
    "kind": "Method",
    "detail": "Function (CefRefPtr<CefImage>)",
    "insertText": "GetWindowAppIcon()"
  },
  {
    "label": "ShowMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ShowMenu(CefRefPtr<CefMenuModel> menu_model, const CefPoint& screen_point, cef_menu_anchor_position_t anchor_position)"
  },
  {
    "label": "CancelMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CancelMenu()"
  },
  {
    "label": "GetDisplay()",
    "kind": "Method",
    "detail": "Function (CefRefPtr<CefDisplay>)",
    "insertText": "GetDisplay()"
  },
  {
    "label": "GetClientAreaBoundsInScreen()",
    "kind": "Method",
    "detail": "Function (CefRect)",
    "insertText": "GetClientAreaBoundsInScreen()"
  },
  {
    "label": "SetDraggableRegions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDraggableRegions(const std::vector<CefDraggableRegion>& regions)"
  },
  {
    "label": "GetWindowHandle()",
    "kind": "Method",
    "detail": "Function (CefWindowHandle)",
    "insertText": "GetWindowHandle()"
  },
  {
    "label": "SendKeyPress()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SendKeyPress(int key_code, uint32 event_flags)"
  },
  {
    "label": "SendMouseMove()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SendMouseMove(int screen_x, int screen_y)"
  },
  {
    "label": "SendMouseEvents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SendMouseEvents(cef_mouse_button_type_t button, bool mouse_down, bool mouse_up)"
  },
  {
    "label": "SetAccelerator()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAccelerator(int command_id, int key_code, bool shift_pressed, bool ctrl_pressed, bool alt_pressed)"
  },
  {
    "label": "RemoveAccelerator()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveAccelerator(int command_id)"
  },
  {
    "label": "RemoveAllAccelerators()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveAllAccelerators()"
  },
  {
    "label": "AsWindow()",
    "kind": "Method",
    "detail": "Function (CefRefPtr<CefWindow>)",
    "insertText": "AsWindow()"
  },
  {
    "label": "SetToFillLayout()",
    "kind": "Method",
    "detail": "Function (CefRefPtr<CefFillLayout>)",
    "insertText": "SetToFillLayout()"
  },
  {
    "label": "SetToBoxLayout()",
    "kind": "Method",
    "detail": "Function (CefRefPtr<CefBoxLayout>)",
    "insertText": "SetToBoxLayout(const CefBoxLayoutSettings& settings)"
  },
  {
    "label": "GetLayout()",
    "kind": "Method",
    "detail": "Function (CefRefPtr<CefLayout>)",
    "insertText": "GetLayout()"
  },
  {
    "label": "Layout()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Layout()"
  },
  {
    "label": "AddChildView()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddChildView(CefRefPtr<CefView> view)"
  },
  {
    "label": "AddChildViewAt()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddChildViewAt(CefRefPtr<CefView> view, int index)"
  },
  {
    "label": "ReorderChildView()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReorderChildView(CefRefPtr<CefView> view, int index)"
  },
  {
    "label": "RemoveChildView()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveChildView(CefRefPtr<CefView> view)"
  },
  {
    "label": "RemoveAllChildViews()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveAllChildViews()"
  },
  {
    "label": "GetChildViewCount()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "GetChildViewCount()"
  },
  {
    "label": "GetChildViewAt()",
    "kind": "Method",
    "detail": "Function (CefRefPtr<CefView>)",
    "insertText": "GetChildViewAt(int index)"
  },
  {
    "label": "AsBrowserView()",
    "kind": "Method",
    "detail": "Function (CefRefPtr<CefBrowserView>)",
    "insertText": "AsBrowserView()"
  },
  {
    "label": "AsButton()",
    "kind": "Method",
    "detail": "Function (CefRefPtr<CefButton>)",
    "insertText": "AsButton()"
  },
  {
    "label": "AsPanel()",
    "kind": "Method",
    "detail": "Function (CefRefPtr<CefPanel>)",
    "insertText": "AsPanel()"
  },
  {
    "label": "AsScrollView()",
    "kind": "Method",
    "detail": "Function (CefRefPtr<CefScrollView>)",
    "insertText": "AsScrollView()"
  },
  {
    "label": "AsTextfield()",
    "kind": "Method",
    "detail": "Function (CefRefPtr<CefTextfield>)",
    "insertText": "AsTextfield()"
  },
  {
    "label": "GetTypeString()",
    "kind": "Method",
    "detail": "Function (CefString)",
    "insertText": "GetTypeString()"
  },
  {
    "label": "ToString()",
    "kind": "Method",
    "detail": "Function (CefString)",
    "insertText": "ToString(bool include_children)"
  },
  {
    "label": "IsValid()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsValid()"
  },
  {
    "label": "IsAttached()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsAttached()"
  },
  {
    "label": "IsSame()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsSame(CefRefPtr<CefView> that)"
  },
  {
    "label": "GetDelegate()",
    "kind": "Method",
    "detail": "Function (CefRefPtr<CefViewDelegate>)",
    "insertText": "GetDelegate()"
  },
  {
    "label": "GetWindow()",
    "kind": "Method",
    "detail": "Function (CefRefPtr<CefWindow>)",
    "insertText": "GetWindow()"
  },
  {
    "label": "GetID()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "GetID()"
  },
  {
    "label": "SetID()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetID(int id)"
  },
  {
    "label": "GetGroupID()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "GetGroupID()"
  },
  {
    "label": "SetGroupID()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetGroupID(int group_id)"
  },
  {
    "label": "GetParentView()",
    "kind": "Method",
    "detail": "Function (CefRefPtr<CefView>)",
    "insertText": "GetParentView()"
  },
  {
    "label": "GetViewForID()",
    "kind": "Method",
    "detail": "Function (CefRefPtr<CefView>)",
    "insertText": "GetViewForID(int id)"
  },
  {
    "label": "SetBounds()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetBounds(const CefRect& bounds)"
  },
  {
    "label": "GetBounds()",
    "kind": "Method",
    "detail": "Function (CefRect)",
    "insertText": "GetBounds()"
  },
  {
    "label": "GetBoundsInScreen()",
    "kind": "Method",
    "detail": "Function (CefRect)",
    "insertText": "GetBoundsInScreen()"
  },
  {
    "label": "SetSize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSize(const CefSize& size)"
  },
  {
    "label": "GetSize()",
    "kind": "Method",
    "detail": "Function (CefSize)",
    "insertText": "GetSize()"
  },
  {
    "label": "SetPosition()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPosition(const CefPoint& position)"
  },
  {
    "label": "GetPosition()",
    "kind": "Method",
    "detail": "Function (CefPoint)",
    "insertText": "GetPosition()"
  },
  {
    "label": "GetPreferredSize()",
    "kind": "Method",
    "detail": "Function (CefSize)",
    "insertText": "GetPreferredSize()"
  },
  {
    "label": "SizeToPreferredSize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SizeToPreferredSize()"
  },
  {
    "label": "GetMinimumSize()",
    "kind": "Method",
    "detail": "Function (CefSize)",
    "insertText": "GetMinimumSize()"
  },
  {
    "label": "GetMaximumSize()",
    "kind": "Method",
    "detail": "Function (CefSize)",
    "insertText": "GetMaximumSize()"
  },
  {
    "label": "GetHeightForWidth()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "GetHeightForWidth(int width)"
  },
  {
    "label": "InvalidateLayout()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InvalidateLayout()"
  },
  {
    "label": "SetVisible()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetVisible(bool visible)"
  },
  {
    "label": "IsVisible()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsVisible()"
  },
  {
    "label": "IsDrawn()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsDrawn()"
  },
  {
    "label": "SetEnabled()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetEnabled(bool enabled)"
  },
  {
    "label": "IsEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsEnabled()"
  },
  {
    "label": "SetFocusable()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFocusable(bool focusable)"
  },
  {
    "label": "IsFocusable()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsFocusable()"
  },
  {
    "label": "IsAccessibilityFocusable()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsAccessibilityFocusable()"
  },
  {
    "label": "RequestFocus()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RequestFocus()"
  },
  {
    "label": "SetBackgroundColor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetBackgroundColor(cef_color_t color)"
  },
  {
    "label": "GetBackgroundColor()",
    "kind": "Method",
    "detail": "Function (cef_color_t)",
    "insertText": "GetBackgroundColor()"
  },
  {
    "label": "ConvertPointToScreen()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ConvertPointToScreen(CefPoint& point)"
  },
  {
    "label": "ConvertPointFromScreen()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ConvertPointFromScreen(CefPoint& point)"
  },
  {
    "label": "ConvertPointToWindow()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ConvertPointToWindow(CefPoint& point)"
  },
  {
    "label": "ConvertPointFromWindow()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ConvertPointFromWindow(CefPoint& point)"
  },
  {
    "label": "ConvertPointToView()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ConvertPointToView(CefRefPtr<CefView> view, CefPoint& point)"
  },
  {
    "label": "ConvertPointFromView()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ConvertPointFromView(CefRefPtr<CefView> view, CefPoint& point)"
  }
]