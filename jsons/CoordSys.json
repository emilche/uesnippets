[
  {
    "label": "ST_DLL_LINK",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ST_DLL_LINK"
  },
  {
    "label": "ST_DLL_LINK",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ST_DLL_LINK"
  },
  {
    "label": "ECoordSysType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ECoordSysType"
  },
  {
    "label": "will",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "will"
  },
  {
    "label": "CDefaultCoordinateSystem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CDefaultCoordinateSystem"
  },
  {
    "label": "CRHCS_Yup",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CRHCS_Yup"
  },
  {
    "label": "CLHCS_Yup",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CLHCS_Yup"
  },
  {
    "label": "CLHCS_Zup",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CLHCS_Zup"
  },
  {
    "label": "ConvertToStd()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "ConvertToStd(afCoord[0], afCoord[1], afCoord[2])"
  },
  {
    "label": "ConvertFromStd()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "ConvertFromStd(afCoord[0], afCoord[1], afCoord[2])"
  },
  {
    "label": "SetCoordSys()",
    "kind": "Method",
    "detail": "Function (ST_CALL_CONV)",
    "insertText": "SetCoordSys(ECoordSysType eType, const CCoordSysBase* pCustomConverter = NULL)"
  },
  {
    "label": "CoordSysName()",
    "kind": "Method",
    "detail": "Function (ST_CALL_CONV)",
    "insertText": "CoordSysName(ECoordSysType eType)"
  },
  {
    "label": "GetCoordSysType()",
    "kind": "Method",
    "detail": "Function (ST_CALL_CONV)",
    "insertText": "GetCoordSysType(void)"
  },
  {
    "label": "IsDefaultCoordSys()",
    "kind": "Method",
    "detail": "Function (ST_CALL_CONV)",
    "insertText": "IsDefaultCoordSys(void)"
  },
  {
    "label": "GetBuiltInConverter()",
    "kind": "Method",
    "detail": "Function (ST_CALL_CONV)",
    "insertText": "GetBuiltInConverter(ECoordSysType eType)"
  },
  {
    "label": "IsLeftHanded()",
    "kind": "Method",
    "detail": "Function (ST_CALL_CONV)",
    "insertText": "IsLeftHanded(void)"
  },
  {
    "label": "IsYAxisUp()",
    "kind": "Method",
    "detail": "Function (ST_CALL_CONV)",
    "insertText": "IsYAxisUp(void)"
  },
  {
    "label": "ConvertToStd()",
    "kind": "Method",
    "detail": "Function (ST_CALL_CONV)",
    "insertText": "ConvertToStd(const st_float32 afCoord[3])"
  },
  {
    "label": "ConvertToStd()",
    "kind": "Method",
    "detail": "Function (ST_CALL_CONV)",
    "insertText": "ConvertToStd(st_float32 x, st_float32 y, st_float32 z)"
  },
  {
    "label": "ConvertFromStd()",
    "kind": "Method",
    "detail": "Function (ST_CALL_CONV)",
    "insertText": "ConvertFromStd(const st_float32 afCoord[3])"
  },
  {
    "label": "ConvertFromStd()",
    "kind": "Method",
    "detail": "Function (ST_CALL_CONV)",
    "insertText": "ConvertFromStd(st_float32 x, st_float32 y, st_float32 z)"
  },
  {
    "label": "OutAxis()",
    "kind": "Method",
    "detail": "Function (ST_CALL_CONV)",
    "insertText": "OutAxis(void)"
  },
  {
    "label": "RightAxis()",
    "kind": "Method",
    "detail": "Function (ST_CALL_CONV)",
    "insertText": "RightAxis(void)"
  },
  {
    "label": "UpAxis()",
    "kind": "Method",
    "detail": "Function (ST_CALL_CONV)",
    "insertText": "UpAxis(void)"
  },
  {
    "label": "OutComponent()",
    "kind": "Method",
    "detail": "Function (ST_CALL_CONV)",
    "insertText": "OutComponent(const st_float32 afCoord[3])"
  },
  {
    "label": "OutComponent()",
    "kind": "Method",
    "detail": "Function (ST_CALL_CONV)",
    "insertText": "OutComponent(st_float32 x, st_float32 y, st_float32 z)"
  },
  {
    "label": "RightComponent()",
    "kind": "Method",
    "detail": "Function (ST_CALL_CONV)",
    "insertText": "RightComponent(const st_float32 afCoord[3])"
  },
  {
    "label": "RightComponent()",
    "kind": "Method",
    "detail": "Function (ST_CALL_CONV)",
    "insertText": "RightComponent(st_float32 x, st_float32 y, st_float32 z)"
  },
  {
    "label": "UpComponent()",
    "kind": "Method",
    "detail": "Function (ST_CALL_CONV)",
    "insertText": "UpComponent(const st_float32 afCoord[3])"
  },
  {
    "label": "UpComponent()",
    "kind": "Method",
    "detail": "Function (ST_CALL_CONV)",
    "insertText": "UpComponent(st_float32 x, st_float32 y, st_float32 z)"
  },
  {
    "label": "RotateUpAxis()",
    "kind": "Method",
    "detail": "Function (ST_CALL_CONV)",
    "insertText": "RotateUpAxis(Mat3x3& mMatrix, st_float32 fRadians)"
  },
  {
    "label": "RotateUpAxis()",
    "kind": "Method",
    "detail": "Function (ST_CALL_CONV)",
    "insertText": "RotateUpAxis(Mat4x4& mMatrix, st_float32 fRadians)"
  },
  {
    "label": "RotateOutAxis()",
    "kind": "Method",
    "detail": "Function (ST_CALL_CONV)",
    "insertText": "RotateOutAxis(Mat3x3& mMatrix, st_float32 fRadians)"
  },
  {
    "label": "RotateOutAxis()",
    "kind": "Method",
    "detail": "Function (ST_CALL_CONV)",
    "insertText": "RotateOutAxis(Mat4x4& mMatrix, st_float32 fRadians)"
  },
  {
    "label": "Vec3()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "Vec3(x, y, z)"
  },
  {
    "label": "ConvertToStd()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "ConvertToStd(x, y, z)"
  },
  {
    "label": "Vec3()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "Vec3(x, -z, y)"
  },
  {
    "label": "Vec3()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "Vec3(x, z, -y)"
  },
  {
    "label": "Vec3()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "Vec3(x, z, y)"
  },
  {
    "label": "ConvertToStd()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "ConvertToStd(x, y, z)"
  },
  {
    "label": "Vec3()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "Vec3(x, -y, z)"
  },
  {
    "label": "ConvertToStd()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "ConvertToStd(x, y, z)"
  }
]