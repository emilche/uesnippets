[
  {
    "label": "FArchive",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FArchive"
  },
  {
    "label": "FEditPropertyChain",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEditPropertyChain"
  },
  {
    "label": "FField",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FField"
  },
  {
    "label": "FOutputDevice",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FOutputDevice"
  },
  {
    "label": "FProperty",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FProperty"
  },
  {
    "label": "FStructProperty",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStructProperty"
  },
  {
    "label": "UPropertyWrapper",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPropertyWrapper"
  },
  {
    "label": "CGetTypeHashable",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "CGetTypeHashable"
  },
  {
    "label": "FAssetData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAssetData"
  },
  {
    "label": "FBlake3Hash",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBlake3Hash"
  },
  {
    "label": "FColor",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FColor"
  },
  {
    "label": "FCustomPropertyListNode",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCustomPropertyListNode"
  },
  {
    "label": "FDoubleInterval",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDoubleInterval"
  },
  {
    "label": "FDoubleRange",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDoubleRange"
  },
  {
    "label": "FDoubleRangeBound",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDoubleRangeBound"
  },
  {
    "label": "FFallbackStruct",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFallbackStruct"
  },
  {
    "label": "FFloatInterval",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFloatInterval"
  },
  {
    "label": "FFloatRange",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFloatRange"
  },
  {
    "label": "FFloatRangeBound",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFloatRangeBound"
  },
  {
    "label": "FFrame",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFrame"
  },
  {
    "label": "FInt32Interval",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInt32Interval"
  },
  {
    "label": "FInt32Range",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInt32Range"
  },
  {
    "label": "FInt32RangeBound",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInt32RangeBound"
  },
  {
    "label": "FLinearColor",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLinearColor"
  },
  {
    "label": "FNetDeltaSerializeInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FNetDeltaSerializeInfo"
  },
  {
    "label": "FObjectInstancingGraph",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FObjectInstancingGraph"
  },
  {
    "label": "FPropertyTag",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPropertyTag"
  },
  {
    "label": "FRandomStream",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRandomStream"
  },
  {
    "label": "FUObjectSerializeContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FUObjectSerializeContext"
  },
  {
    "label": "TFunctionRef",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TFunctionRef"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FRepRecord",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRepRecord"
  },
  {
    "label": "of",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "of"
  },
  {
    "label": "UField",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UField"
  },
  {
    "label": "value",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "value"
  },
  {
    "label": "FStructBaseChain",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStructBaseChain"
  },
  {
    "label": "UStruct",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UStruct"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "UStruct",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UStruct"
  },
  {
    "label": "Z_Construct_UClass_UStruct_Statics",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Z_Construct_UClass_UStruct_Statics"
  },
  {
    "label": "properties",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "properties"
  },
  {
    "label": "FUnversionedStructSchema",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FUnversionedStructSchema"
  },
  {
    "label": "FUnversionedStructSchema",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FUnversionedStructSchema"
  },
  {
    "label": "has",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "has"
  },
  {
    "label": "path",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "path"
  },
  {
    "label": "FName",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FName"
  },
  {
    "label": "corresponding",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "corresponding"
  },
  {
    "label": "properties",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "properties"
  },
  {
    "label": "properties",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "properties"
  },
  {
    "label": "properties",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "properties"
  },
  {
    "label": "corresponding",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "corresponding"
  },
  {
    "label": "over",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "over"
  },
  {
    "label": "in",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "in"
  },
  {
    "label": "prefix",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "prefix"
  },
  {
    "label": "either",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "either"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "either",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "either"
  },
  {
    "label": "pointer",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "pointer"
  },
  {
    "label": "has",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "has"
  },
  {
    "label": "or",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "or"
  },
  {
    "label": "has",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "has"
  },
  {
    "label": "and",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "and"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "to"
  },
  {
    "label": "UObjectBaseUtility",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObjectBaseUtility"
  },
  {
    "label": "FStructBaseChain",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStructBaseChain"
  },
  {
    "label": "FBlueprintCompileReinstancer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBlueprintCompileReinstancer"
  },
  {
    "label": "EStructFlags",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EStructFlags"
  },
  {
    "label": "will",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "will"
  },
  {
    "label": "should",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "should"
  },
  {
    "label": "uses",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "uses"
  },
  {
    "label": "without",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "without"
  },
  {
    "label": "should",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "should"
  },
  {
    "label": "will",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "will"
  },
  {
    "label": "will",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "will"
  },
  {
    "label": "will",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "will"
  },
  {
    "label": "will",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "will"
  },
  {
    "label": "has",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "has"
  },
  {
    "label": "will",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "will"
  },
  {
    "label": "will",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "will"
  },
  {
    "label": "will",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "will"
  },
  {
    "label": "will",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "will"
  },
  {
    "label": "will",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "will"
  },
  {
    "label": "can",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "can"
  },
  {
    "label": "has",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "has"
  },
  {
    "label": "will",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "will"
  },
  {
    "label": "will",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "will"
  },
  {
    "label": "CPPSTRUCT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CPPSTRUCT"
  },
  {
    "label": "TStructOpsTypeTraitsBase2",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TStructOpsTypeTraitsBase2"
  },
  {
    "label": "can",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "can"
  },
  {
    "label": "has",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "has"
  },
  {
    "label": "will",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "will"
  },
  {
    "label": "can",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "can"
  },
  {
    "label": "can",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "can"
  },
  {
    "label": "can",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "can"
  },
  {
    "label": "has",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "has"
  },
  {
    "label": "has",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "has"
  },
  {
    "label": "has",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "has"
  },
  {
    "label": "has",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "has"
  },
  {
    "label": "has",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "has"
  },
  {
    "label": "has",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "has"
  },
  {
    "label": "has",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "has"
  },
  {
    "label": "has",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "has"
  },
  {
    "label": "has",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "has"
  },
  {
    "label": "has",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "has"
  },
  {
    "label": "has",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "has"
  },
  {
    "label": "has",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "has"
  },
  {
    "label": "has",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "has"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "is"
  },
  {
    "label": "has",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "has"
  },
  {
    "label": "has",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "has"
  },
  {
    "label": "has",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "has"
  },
  {
    "label": "should",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "should"
  },
  {
    "label": "has",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "has"
  },
  {
    "label": "with",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "with"
  },
  {
    "label": "CPPSTRUCT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CPPSTRUCT"
  },
  {
    "label": "TStructOpsTypeTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TStructOpsTypeTraits"
  },
  {
    "label": "CPPSTRUCT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CPPSTRUCT"
  },
  {
    "label": "UScriptStruct",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UScriptStruct"
  },
  {
    "label": "construction",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "construction"
  },
  {
    "label": "ICppStructOps",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ICppStructOps"
  },
  {
    "label": "FCapabilities",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCapabilities"
  },
  {
    "label": "capabilities",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "capabilities"
  },
  {
    "label": "has",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "has"
  },
  {
    "label": "can",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "can"
  },
  {
    "label": "can",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "can"
  },
  {
    "label": "serialization",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "serialization"
  },
  {
    "label": "implements",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "implements"
  },
  {
    "label": "can",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "can"
  },
  {
    "label": "was",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "was"
  },
  {
    "label": "net",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "net"
  },
  {
    "label": "UPackageMap",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPackageMap"
  },
  {
    "label": "can",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "can"
  },
  {
    "label": "was",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "was"
  },
  {
    "label": "net",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "net"
  },
  {
    "label": "implements",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "implements"
  },
  {
    "label": "should",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "should"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "is"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "is"
  },
  {
    "label": "can",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "can"
  },
  {
    "label": "can",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "can"
  },
  {
    "label": "can",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "can"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "can",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "can"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "has",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "has"
  },
  {
    "label": "FReferenceCollector",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FReferenceCollector"
  },
  {
    "label": "wants",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "wants"
  },
  {
    "label": "FPropertyTag",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPropertyTag"
  },
  {
    "label": "FPropertyTag",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPropertyTag"
  },
  {
    "label": "has",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "has"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "is"
  },
  {
    "label": "has",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "has"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "is"
  },
  {
    "label": "wants",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "wants"
  },
  {
    "label": "would",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "would"
  },
  {
    "label": "wants",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "wants"
  },
  {
    "label": "construction",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "construction"
  },
  {
    "label": "CPPSTRUCT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CPPSTRUCT"
  },
  {
    "label": "TCppStructOps",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TCppStructOps"
  },
  {
    "label": "UPackageMap",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPackageMap"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "FPropertyTag",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPropertyTag"
  },
  {
    "label": "FPropertyTag",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPropertyTag"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "is"
  },
  {
    "label": "CPPSTRUCT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CPPSTRUCT"
  },
  {
    "label": "TAutoCppStructOps",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TAutoCppStructOps"
  },
  {
    "label": "package",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "package"
  },
  {
    "label": "name",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "name"
  },
  {
    "label": "name",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "name"
  },
  {
    "label": "path",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "path"
  },
  {
    "label": "CPPSTRUCT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CPPSTRUCT"
  },
  {
    "label": "has",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "has"
  },
  {
    "label": "should",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "should"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "is"
  },
  {
    "label": "has",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "has"
  },
  {
    "label": "should",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "should"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "to"
  },
  {
    "label": "being",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "being"
  },
  {
    "label": "based",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "based"
  },
  {
    "label": "based",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "based"
  },
  {
    "label": "name",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "name"
  },
  {
    "label": "over",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "over"
  },
  {
    "label": "in",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "in"
  },
  {
    "label": "members",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "members"
  },
  {
    "label": "and",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "and"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "for"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "to"
  },
  {
    "label": "UFunction",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UFunction"
  },
  {
    "label": "property",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "property"
  },
  {
    "label": "parameters",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "parameters"
  },
  {
    "label": "parameters",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "parameters"
  },
  {
    "label": "UDelegateFunction",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UDelegateFunction"
  },
  {
    "label": "USparseDelegateFunction",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USparseDelegateFunction"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "lookup",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "lookup"
  },
  {
    "label": "UEnum",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEnum"
  },
  {
    "label": "is",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "is"
  },
  {
    "label": "values",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "values"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "as",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "as"
  },
  {
    "label": "value",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "value"
  },
  {
    "label": "value",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "value"
  },
  {
    "label": "name",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "name"
  },
  {
    "label": "name",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "name"
  },
  {
    "label": "value",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "value"
  },
  {
    "label": "value",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "value"
  },
  {
    "label": "index",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "index"
  },
  {
    "label": "Value",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Value"
  },
  {
    "label": "value",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "value"
  },
  {
    "label": "value",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "value"
  },
  {
    "label": "at",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "at"
  },
  {
    "label": "value",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "value"
  },
  {
    "label": "has",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "has"
  },
  {
    "label": "has",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "has"
  },
  {
    "label": "is",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "is"
  },
  {
    "label": "has",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "has"
  },
  {
    "label": "from",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "from"
  },
  {
    "label": "from",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "from"
  },
  {
    "label": "index",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "index"
  },
  {
    "label": "changes",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "changes"
  },
  {
    "label": "or",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "or"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "type"
  },
  {
    "label": "name",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "name"
  },
  {
    "label": "name",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "name"
  },
  {
    "label": "name",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "name"
  },
  {
    "label": "name",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "name"
  },
  {
    "label": "value",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "value"
  },
  {
    "label": "was",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "was"
  },
  {
    "label": "value",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "value"
  },
  {
    "label": "value",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "value"
  },
  {
    "label": "name",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "name"
  },
  {
    "label": "package",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "package"
  },
  {
    "label": "value",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "value"
  },
  {
    "label": "was",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "was"
  },
  {
    "label": "value",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "value"
  },
  {
    "label": "value",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "value"
  },
  {
    "label": "name",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "name"
  },
  {
    "label": "package",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "package"
  },
  {
    "label": "name",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "name"
  },
  {
    "label": "contains",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "contains"
  },
  {
    "label": "contains",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "contains"
  },
  {
    "label": "names",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "names"
  },
  {
    "label": "already",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "already"
  },
  {
    "label": "names",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "names"
  },
  {
    "label": "value",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "value"
  },
  {
    "label": "has",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "has"
  },
  {
    "label": "itself",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "itself"
  },
  {
    "label": "value",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "value"
  },
  {
    "label": "itself",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "itself"
  },
  {
    "label": "value",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "value"
  },
  {
    "label": "itself",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "itself"
  },
  {
    "label": "value",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "value"
  },
  {
    "label": "itself",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "itself"
  },
  {
    "label": "path",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "path"
  },
  {
    "label": "value",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "value"
  },
  {
    "label": "specified",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "specified"
  },
  {
    "label": "types",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "types"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "types",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "types"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "path",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "path"
  },
  {
    "label": "value",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "value"
  },
  {
    "label": "specified",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "specified"
  },
  {
    "label": "types",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "types"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "value",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "value"
  },
  {
    "label": "specified",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "specified"
  },
  {
    "label": "types",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "types"
  },
  {
    "label": "value",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "value"
  },
  {
    "label": "specified",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "specified"
  },
  {
    "label": "types",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "types"
  },
  {
    "label": "value",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "value"
  },
  {
    "label": "specified",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "specified"
  },
  {
    "label": "types",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "types"
  },
  {
    "label": "types",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "types"
  },
  {
    "label": "value",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "value"
  },
  {
    "label": "specified",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "specified"
  },
  {
    "label": "types",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "types"
  },
  {
    "label": "names",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "names"
  },
  {
    "label": "was",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "was"
  },
  {
    "label": "was",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "was"
  },
  {
    "label": "to",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "to"
  },
  {
    "label": "to",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "to"
  },
  {
    "label": "value",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "value"
  },
  {
    "label": "value",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "value"
  },
  {
    "label": "was",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "was"
  },
  {
    "label": "value",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "value"
  },
  {
    "label": "value",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "value"
  },
  {
    "label": "values",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "values"
  },
  {
    "label": "name",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "name"
  },
  {
    "label": "type",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "type"
  },
  {
    "label": "FCppClassTypeTraitsBase",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCppClassTypeTraitsBase"
  },
  {
    "label": "types",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "types"
  },
  {
    "label": "CPPCLASS",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CPPCLASS"
  },
  {
    "label": "TCppClassTypeTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TCppClassTypeTraits"
  },
  {
    "label": "types",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "types"
  },
  {
    "label": "ICppClassTypeInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ICppClassTypeInfo"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "FCppClassTypeInfoStatic",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCppClassTypeInfoStatic"
  },
  {
    "label": "types",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "types"
  },
  {
    "label": "FCppClassTypeInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCppClassTypeInfo"
  },
  {
    "label": "implements",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "implements"
  },
  {
    "label": "FImplementedInterface",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FImplementedInterface"
  },
  {
    "label": "that",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "that"
  },
  {
    "label": "FNativeFunctionLookup",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FNativeFunctionLookup"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "FClassFunctionLinkInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FClassFunctionLinkInfo"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "doesn",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "doesn"
  },
  {
    "label": "doesn",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "doesn"
  },
  {
    "label": "doesn",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "doesn"
  },
  {
    "label": "UClass",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UClass"
  },
  {
    "label": "FRestoreClassInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRestoreClassInfo"
  },
  {
    "label": "FBlueprintEditorUtils",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBlueprintEditorUtils"
  },
  {
    "label": "FBlueprintCompileReinstancer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBlueprintCompileReinstancer"
  },
  {
    "label": "was",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "was"
  },
  {
    "label": "layout",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "layout"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "after",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "after"
  },
  {
    "label": "type",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "type"
  },
  {
    "label": "default",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "default"
  },
  {
    "label": "instead",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "instead"
  },
  {
    "label": "used",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "used"
  },
  {
    "label": "data",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "data"
  },
  {
    "label": "data",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "data"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "for"
  },
  {
    "label": "data",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "data"
  },
  {
    "label": "aside",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "aside"
  },
  {
    "label": "or",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "or"
  },
  {
    "label": "implements",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "implements"
  },
  {
    "label": "isn",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "isn"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "of",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "of"
  },
  {
    "label": "of",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "of"
  },
  {
    "label": "UClass",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UClass"
  },
  {
    "label": "UClass",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UClass"
  },
  {
    "label": "that",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "that"
  },
  {
    "label": "path",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "path"
  },
  {
    "label": "FName",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FName"
  },
  {
    "label": "names",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "names"
  },
  {
    "label": "names",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "names"
  },
  {
    "label": "names",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "names"
  },
  {
    "label": "names",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "names"
  },
  {
    "label": "name",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "name"
  },
  {
    "label": "path",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "path"
  },
  {
    "label": "exists",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "exists"
  },
  {
    "label": "name",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "name"
  },
  {
    "label": "name",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "name"
  },
  {
    "label": "name",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "name"
  },
  {
    "label": "name",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "name"
  },
  {
    "label": "path",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "path"
  },
  {
    "label": "exists",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "exists"
  },
  {
    "label": "name",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "name"
  },
  {
    "label": "name",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "name"
  },
  {
    "label": "name",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "name"
  },
  {
    "label": "name",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "name"
  },
  {
    "label": "name",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "name"
  },
  {
    "label": "name",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "name"
  },
  {
    "label": "name",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "name"
  },
  {
    "label": "specific",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "specific"
  },
  {
    "label": "FFeedbackContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFeedbackContext"
  },
  {
    "label": "specific",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "specific"
  },
  {
    "label": "specific",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "specific"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "subobjects",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "subobjects"
  },
  {
    "label": "and",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "and"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "of",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "of"
  },
  {
    "label": "check",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "check"
  },
  {
    "label": "or",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "or"
  },
  {
    "label": "flags",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "flags"
  },
  {
    "label": "flags",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "flags"
  },
  {
    "label": "only",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "only"
  },
  {
    "label": "in",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "in"
  },
  {
    "label": "hierarchy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "hierarchy"
  },
  {
    "label": "implements",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "implements"
  },
  {
    "label": "implements",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "implements"
  },
  {
    "label": "UClass",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UClass"
  },
  {
    "label": "data",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "data"
  },
  {
    "label": "has",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "has"
  },
  {
    "label": "default",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "default"
  },
  {
    "label": "in",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "in"
  },
  {
    "label": "that",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "that"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "or",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "or"
  },
  {
    "label": "that",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "that"
  },
  {
    "label": "or",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "or"
  },
  {
    "label": "or",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "or"
  },
  {
    "label": "data",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "data"
  },
  {
    "label": "used",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "used"
  },
  {
    "label": "data",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "data"
  },
  {
    "label": "data",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "data"
  },
  {
    "label": "default",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "default"
  },
  {
    "label": "default",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "default"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "was",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "was"
  },
  {
    "label": "almost",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "almost"
  },
  {
    "label": "almost",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "almost"
  },
  {
    "label": "it",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "it"
  },
  {
    "label": "it",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "it"
  },
  {
    "label": "path",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "path"
  },
  {
    "label": "objects",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "objects"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "UClass",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UClass"
  },
  {
    "label": "UClass",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UClass"
  },
  {
    "label": "UClass",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UClass"
  },
  {
    "label": "will",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "will"
  },
  {
    "label": "function",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "function"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FObjectInstancingGraph",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FObjectInstancingGraph"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "default",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "default"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "default",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "default"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "FStructUtils",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FStructUtils"
  },
  {
    "label": "pointers",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "pointers"
  },
  {
    "label": "metadata",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "metadata"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "to"
  },
  {
    "label": "FTestUninitializedScriptStructMembersTest",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTestUninitializedScriptStructMembersTest"
  },
  {
    "label": "TBaseStructureBase",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TBaseStructureBase"
  },
  {
    "label": "TBaseStructureBase",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TBaseStructureBase"
  },
  {
    "label": "TBaseStructure",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TBaseStructure"
  },
  {
    "label": "TBaseStructure",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TBaseStructure"
  },
  {
    "label": "TBaseStructure",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TBaseStructure"
  },
  {
    "label": "TBaseStructure",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TBaseStructure"
  },
  {
    "label": "TBaseStructure",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TBaseStructure"
  },
  {
    "label": "TBaseStructure",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TBaseStructure"
  },
  {
    "label": "TBaseStructure",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TBaseStructure"
  },
  {
    "label": "TBaseStructure",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TBaseStructure"
  },
  {
    "label": "TBaseStructure",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TBaseStructure"
  },
  {
    "label": "TBaseStructure",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TBaseStructure"
  },
  {
    "label": "TBaseStructure",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TBaseStructure"
  },
  {
    "label": "TBaseStructure",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TBaseStructure"
  },
  {
    "label": "TBaseStructure",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TBaseStructure"
  },
  {
    "label": "TBaseStructure",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TBaseStructure"
  },
  {
    "label": "TBaseStructure",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TBaseStructure"
  },
  {
    "label": "TBaseStructure",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TBaseStructure"
  },
  {
    "label": "TBaseStructure",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TBaseStructure"
  },
  {
    "label": "TBaseStructure",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TBaseStructure"
  },
  {
    "label": "TBaseStructure",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TBaseStructure"
  },
  {
    "label": "TBaseStructure",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TBaseStructure"
  },
  {
    "label": "TBaseStructure",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TBaseStructure"
  },
  {
    "label": "TBaseStructure",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TBaseStructure"
  },
  {
    "label": "TBaseStructure",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TBaseStructure"
  },
  {
    "label": "TBaseStructure",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TBaseStructure"
  },
  {
    "label": "TBaseStructure",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TBaseStructure"
  },
  {
    "label": "FFrameNumber",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFrameNumber"
  },
  {
    "label": "TBaseStructure",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TBaseStructure"
  },
  {
    "label": "FFrameTime",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFrameTime"
  },
  {
    "label": "TBaseStructure",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TBaseStructure"
  },
  {
    "label": "FFrameRate",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFrameRate"
  },
  {
    "label": "TBaseStructure",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TBaseStructure"
  },
  {
    "label": "FSoftObjectPath",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSoftObjectPath"
  },
  {
    "label": "TBaseStructure",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TBaseStructure"
  },
  {
    "label": "FSoftClassPath",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSoftClassPath"
  },
  {
    "label": "TBaseStructure",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TBaseStructure"
  },
  {
    "label": "FPrimaryAssetType",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPrimaryAssetType"
  },
  {
    "label": "TBaseStructure",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TBaseStructure"
  },
  {
    "label": "FPrimaryAssetId",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPrimaryAssetId"
  },
  {
    "label": "TBaseStructure",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TBaseStructure"
  },
  {
    "label": "FDateTime",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDateTime"
  },
  {
    "label": "TBaseStructure",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TBaseStructure"
  },
  {
    "label": "FPolyglotTextData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPolyglotTextData"
  },
  {
    "label": "TBaseStructure",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TBaseStructure"
  },
  {
    "label": "FAssetBundleData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAssetBundleData"
  },
  {
    "label": "TBaseStructure",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TBaseStructure"
  },
  {
    "label": "TBaseStructure",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TBaseStructure"
  },
  {
    "label": "FTopLevelAssetPath",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTopLevelAssetPath"
  },
  {
    "label": "TBaseStructure",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TBaseStructure"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "TVariantStructure",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TVariantStructure"
  },
  {
    "label": "TBaseStructure",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TBaseStructure"
  },
  {
    "label": "TVariantStructure",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TVariantStructure"
  },
  {
    "label": "TVariantStructure",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TVariantStructure"
  },
  {
    "label": "DECLARE_LOG_CATEGORY_EXTERN()",
    "kind": "Method",
    "detail": "Function (COREUOBJECT_API)",
    "insertText": "DECLARE_LOG_CATEGORY_EXTERN(LogClass, Log, All)"
  },
  {
    "label": "DECLARE_LOG_CATEGORY_EXTERN()",
    "kind": "Method",
    "detail": "Function (COREUOBJECT_API)",
    "insertText": "DECLARE_LOG_CATEGORY_EXTERN(LogScriptSerialization, Log, All)"
  },
  {
    "label": "AddCppProperty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddCppProperty(FProperty* Property)"
  },
  {
    "label": "Bind()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Bind()"
  },
  {
    "label": "FormatNativeToolTip()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FormatNativeToolTip(FString& ToolTipString, bool bRemoveExtraSections = true)"
  },
  {
    "label": "SetMetaData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetMetaData(const TCHAR* Key, const TCHAR* InValue)"
  },
  {
    "label": "SetMetaData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetMetaData(const FName& Key, const TCHAR* InValue)"
  },
  {
    "label": "return()",
    "kind": "Method",
    "detail": "Function (comparison)",
    "insertText": "return(BoolString == \"true\")"
  },
  {
    "label": "return()",
    "kind": "Method",
    "detail": "Function (comparison)",
    "insertText": "return(BoolString == \"true\")"
  },
  {
    "label": "RemoveMetaData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveMetaData(const TCHAR* Key)"
  },
  {
    "label": "RemoveMetaData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveMetaData(const FName& Key)"
  },
  {
    "label": "SetAssociatedFField()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAssociatedFField(FField* InField)"
  },
  {
    "label": "FStructBaseChain()",
    "kind": "Method",
    "detail": "Function (COREUOBJECT_API)",
    "insertText": "FStructBaseChain()"
  },
  {
    "label": "ReinitializeBaseChainArray()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReinitializeBaseChainArray()"
  },
  {
    "label": "UStruct()",
    "kind": "Method",
    "detail": "Function (COREUOBJECT_API)",
    "insertText": "UStruct( EStaticConstructor, int32 InSize, int32 InAlignment, EObjectFlags InFlags )"
  },
  {
    "label": "UStruct()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "UStruct(UStruct* InSuperStruct, SIZE_T ParamsSize = 0, SIZE_T Alignment = 0)"
  },
  {
    "label": "UStruct()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "UStruct(const FObjectInitializer& ObjectInitializer, UStruct* InSuperStruct, SIZE_T ParamsSize = 0, SIZE_T Alignment = 0 )"
  },
  {
    "label": "AddReferencedObjects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddReferencedObjects(UObject* InThis, FReferenceCollector& Collector)"
  },
  {
    "label": "InstanceSubobjectTemplates()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InstanceSubobjectTemplates( void* Data, void const* DefaultData, UStruct* DefaultStruct, UObject* Owner, FObjectInstancingGraph* InstanceGraph )"
  },
  {
    "label": "GetSuperStruct()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetSuperStruct()"
  },
  {
    "label": "StaticLink()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StaticLink(bool bRelinkExistingProperties = false)"
  },
  {
    "label": "Link()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Link(FArchive& Ar, bool bRelinkExistingProperties)"
  },
  {
    "label": "PreloadChildren()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PreloadChildren(FArchive& Ar)"
  },
  {
    "label": "SerializeExpr()",
    "kind": "Method",
    "detail": "Function (EExprToken)",
    "insertText": "SerializeExpr(int32& iCode, FArchive& Ar)"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT(\"F\")"
  },
  {
    "label": "Align()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "Align(PropertiesSize,MinAlignment)"
  },
  {
    "label": "SetSuperStruct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSuperStruct(UStruct* NewSuperStruct)"
  },
  {
    "label": "DestroyChildPropertiesAndResetPropertyLinks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyChildPropertiesAndResetPropertyLinks()"
  },
  {
    "label": "FUnresolvedScriptPropertiesArray()",
    "kind": "Method",
    "detail": "Function (new)",
    "insertText": "FUnresolvedScriptPropertiesArray()"
  },
  {
    "label": "CollectBytecodeReferencedObjects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CollectBytecodeReferencedObjects(TArray<UObject*>& OutReferencedObjects)"
  },
  {
    "label": "CollectPropertyReferencedObjects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CollectPropertyReferencedObjects(TArray<UObject*>& OutReferencedObjects)"
  },
  {
    "label": "CollectBytecodeAndPropertyReferencedObjects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CollectBytecodeAndPropertyReferencedObjects()"
  },
  {
    "label": "CollectBytecodeAndPropertyReferencedObjectsRecursively()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CollectBytecodeAndPropertyReferencedObjectsRecursively()"
  },
  {
    "label": "FGuid()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FGuid()"
  },
  {
    "label": "SerializeProperties()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SerializeProperties(FArchive& Ar)"
  },
  {
    "label": "ConvertUFieldsToFFields()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConvertUFieldsToFFields()"
  },
  {
    "label": "UScriptStruct()",
    "kind": "Method",
    "detail": "Function (COREUOBJECT_API)",
    "insertText": "UScriptStruct( EStaticConstructor, int32 InSize, int32 InAlignment, EObjectFlags InFlags )"
  },
  {
    "label": "UScriptStruct()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "UScriptStruct(const FObjectInitializer& ObjectInitializer, UScriptStruct* InSuperStruct, ICppStructOps* InCppStructOps = nullptr, EStructFlags InStructFlags = STRUCT_NoFlags, SIZE_T ExplicitSize = 0, SIZE_T ExplicitAlignment = 0)"
  },
  {
    "label": "SetStructTrashed()",
    "kind": "Method",
    "detail": "Function (COREUOBJECT_API)",
    "insertText": "SetStructTrashed(bool bIsTrash)"
  },
  {
    "label": "DeferCppStructOps()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeferCppStructOps(FTopLevelAssetPath Target, ICppStructOps* InCppStructOps)"
  },
  {
    "label": "PrepareCppStructOps()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PrepareCppStructOps()"
  },
  {
    "label": "SerializeItem()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SerializeItem(FArchive& Ar, void* Value, void const* Defaults)"
  },
  {
    "label": "SerializeItem()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SerializeItem(FStructuredArchive::FSlot Slot, void* Value, void const* Defaults)"
  },
  {
    "label": "RecursivelyPreload()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RecursivelyPreload()"
  },
  {
    "label": "Invoke()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Invoke(UObject* Obj, FFrame& Stack, RESULT_DECL)"
  },
  {
    "label": "UFunction()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "UFunction(const FObjectInitializer& ObjectInitializer, UFunction* InSuperFunction, EFunctionFlags InFunctionFlags = FUNC_None, SIZE_T ParamsSize = 0 )"
  },
  {
    "label": "UFunction()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "UFunction(UFunction* InSuperFunction, EFunctionFlags InFunctionFlags = FUNC_None, SIZE_T ParamsSize = 0)"
  },
  {
    "label": "InitializeDerivedMembers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeDerivedMembers()"
  },
  {
    "label": "UDelegateFunction()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "UDelegateFunction(const FObjectInitializer& ObjectInitializer, UFunction* InSuperFunction, EFunctionFlags InFunctionFlags = FUNC_None, SIZE_T ParamsSize = 0)"
  },
  {
    "label": "UDelegateFunction()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "UDelegateFunction(UFunction* InSuperFunction, EFunctionFlags InFunctionFlags = FUNC_None, SIZE_T ParamsSize = 0)"
  },
  {
    "label": "USparseDelegateFunction()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "USparseDelegateFunction(const FObjectInitializer& ObjectInitializer, UFunction* InSuperFunction, EFunctionFlags InFunctionFlags = FUNC_None, SIZE_T ParamsSize = 0)"
  },
  {
    "label": "USparseDelegateFunction()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "USparseDelegateFunction(UFunction* InSuperFunction, EFunctionFlags InFunctionFlags = FUNC_None, SIZE_T ParamsSize = 0)"
  },
  {
    "label": "UEnum()",
    "kind": "Method",
    "detail": "Function (COREUOBJECT_API)",
    "insertText": "UEnum(const FObjectInitializer& ObjectInitialzer)"
  },
  {
    "label": "RemoveNamesFromPrimaryList()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveNamesFromPrimaryList()"
  },
  {
    "label": "EnumHasAnyFlags()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "EnumHasAnyFlags(EnumFlags, InFlags)"
  },
  {
    "label": "LookupEnumName()",
    "kind": "Method",
    "detail": "Function (int64)",
    "insertText": "LookupEnumName(FName PackageName, FName TestName, EFindFirstObjectOptions Options = EFindFirstObjectOptions::None, UEnum** OutFoundEnum = nullptr)"
  },
  {
    "label": "LookupEnumNameSlow()",
    "kind": "Method",
    "detail": "Function (int64)",
    "insertText": "LookupEnumNameSlow(FName PackageName, const TCHAR* InTestShortName, EFindFirstObjectOptions Options = EFindFirstObjectOptions::None, UEnum** OutFoundEnum = nullptr)"
  },
  {
    "label": "ParseEnum()",
    "kind": "Method",
    "detail": "Function (int64)",
    "insertText": "ParseEnum(const TCHAR*& Str)"
  },
  {
    "label": "SetEnums()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetEnums(TArray<TPair<FName, int64>>& InNames, ECppForm InCppForm, EEnumFlags InFlags = EEnumFlags::None, bool bAddMaxKeyIfMissing = true)"
  },
  {
    "label": "AddNamesToPrimaryList()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddNamesToPrimaryList()"
  },
  {
    "label": "RenameNamesAfterDuplication()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenameNamesAfterDuplication()"
  },
  {
    "label": "DestroyPropertiesPendingDestruction()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyPropertiesPendingDestruction()"
  },
  {
    "label": "SetSparseClassDataStruct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSparseClassDataStruct(UScriptStruct* InSparseClassDataStruct)"
  },
  {
    "label": "ClearSparseClassDataStruct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearSparseClassDataStruct(bool bInRecomplingOnLoad)"
  },
  {
    "label": "AssembleReferenceTokenStreams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AssembleReferenceTokenStreams()"
  },
  {
    "label": "ScopeLock()",
    "kind": "Method",
    "detail": "Function (FUClassFuncScopeReadLock)",
    "insertText": "ScopeLock(FuncMapLock)"
  },
  {
    "label": "CleanupSparseClassData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CleanupSparseClassData()"
  },
  {
    "label": "UClass()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "UClass(const FObjectInitializer& ObjectInitializer, UClass* InSuperClass)"
  },
  {
    "label": "UClass()",
    "kind": "Method",
    "detail": "Function (COREUOBJECT_API)",
    "insertText": "UClass( EStaticConstructor, FName InName, uint32 InSize, uint32 InAlignment, EClassFlags InClassFlags, EClassCastFlags InClassCastFlags,\n\t\tconst TCHAR* InClassConfigName, EObjectFlags InFlags, ClassConstructorType InClassConstructor,\n\t\tClassVTableHelperCtorCallerType InClassVTableHelperCtorCaller,\n\t\tFUObjectCppClassStaticFunctions&& InCppClassStaticFunctions)"
  },
  {
    "label": "HotReloadPrivateStaticClass()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HotReloadPrivateStaticClass(\n\t\tuint32\t\t\tInSize,\n\t\tEClassFlags\t\tInClassFlags,\n\t\tEClassCastFlags\tInClassCastFlags,\n\t\tconst TCHAR*    InConfigName,\n\t\tClassConstructorType InClassConstructor,\n\t\tClassVTableHelperCtorCallerType InClassVTableHelperCtorCaller,\n\t\tFUObjectCppClassStaticFunctions&& InCppClassStaticFunctions,\n\t\tclass UClass* TClass_Super_StaticClass,\n\t\tclass UClass* TClass_WithinClass_StaticClass\n\t\t)"
  },
  {
    "label": "ReplaceNativeFunction()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ReplaceNativeFunction(FName InName, FNativeFuncPtr InPointer, bool bAddToFunctionRemapTable)"
  },
  {
    "label": "AddNativeFunction()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddNativeFunction(const ANSICHAR* InName, FNativeFuncPtr InPointer)"
  },
  {
    "label": "AddNativeFunction()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddNativeFunction(const WIDECHAR* InName, FNativeFuncPtr InPointer)"
  },
  {
    "label": "ScopeLock()",
    "kind": "Method",
    "detail": "Function (FUClassFuncScopeWriteLock)",
    "insertText": "ScopeLock(FuncMapLock)"
  },
  {
    "label": "ScopeLock()",
    "kind": "Method",
    "detail": "Function (FUClassFuncScopeWriteLock)",
    "insertText": "ScopeLock(AllFunctionsCacheLock)"
  },
  {
    "label": "CreateLinkAndAddChildFunctionsToMap()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateLinkAndAddChildFunctionsToMap(const FClassFunctionLinkInfo* Functions, uint32 NumFunctions)"
  },
  {
    "label": "ScopeLock()",
    "kind": "Method",
    "detail": "Function (FUClassFuncScopeWriteLock)",
    "insertText": "ScopeLock(FuncMapLock)"
  },
  {
    "label": "ScopeLock()",
    "kind": "Method",
    "detail": "Function (FUClassFuncScopeWriteLock)",
    "insertText": "ScopeLock(AllFunctionsCacheLock)"
  },
  {
    "label": "ClearFunctionMapsCaches()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearFunctionMapsCaches()"
  },
  {
    "label": "AddReferencedObjects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddReferencedObjects(UObject* InThis, FReferenceCollector& Collector)"
  },
  {
    "label": "GetStructPathName()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetStructPathName()"
  },
  {
    "label": "TryConvertShortTypeNameToPathName()",
    "kind": "Method",
    "detail": "Function (FTopLevelAssetPath)",
    "insertText": "TryConvertShortTypeNameToPathName(UClass* TypeClass, const FString& InShortTypeName, ELogVerbosity::Type AmbiguousMessageVerbosity = ELogVerbosity::NoLogging, const TCHAR* AmbiguousClassMessage = nullptr)"
  },
  {
    "label": "TryFixShortClassNameExportPath()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TryFixShortClassNameExportPath(FString& InOutExportPathToFix,\n\t\tELogVerbosity::Type AmbiguousMessageVerbosity = ELogVerbosity::NoLogging,\n\t\tconst TCHAR* AmbiguousClassMessage = nullptr, bool bClearOnError = false)"
  },
  {
    "label": "ConvertPathNameToShortTypeName()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "ConvertPathNameToShortTypeName(FStringView InClassPathOrShortTypeName)"
  },
  {
    "label": "ConvertFullNameToShortTypeFullName()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "ConvertFullNameToShortTypeFullName(FStringView InFullName)"
  },
  {
    "label": "IsShortTypeName()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsShortTypeName(FStringView ClassPathOrShortTypeName)"
  },
  {
    "label": "check()",
    "kind": "Method",
    "detail": "Function (WITH_EDITOR)",
    "insertText": "check(InCppTypeInfoStatic)"
  },
  {
    "label": "GetDefaultObjectSubobjects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetDefaultObjectSubobjects(TArray<UObject*>& OutDefaultSubobjects)"
  },
  {
    "label": "EnumHasAllFlags()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "EnumHasAllFlags(ClassFlags, FlagsToCheck)"
  },
  {
    "label": "AssembleReferenceTokenStream()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AssembleReferenceTokenStream(bool bForce = false)"
  },
  {
    "label": "SerializeDefaultObject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SerializeDefaultObject(UObject* Object, FStructuredArchive::FSlot Slot)"
  },
  {
    "label": "SerializeSparseClassData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SerializeSparseClassData(FStructuredArchive::FSlot Slot)"
  },
  {
    "label": "PurgeClass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PurgeClass(bool bRecompilingOnLoad)"
  },
  {
    "label": "SetUpRuntimeReplicationData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetUpRuntimeReplicationData()"
  },
  {
    "label": "IsSafeToSerializeToStructuredArchives()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsSafeToSerializeToStructuredArchives(UClass* InClass)"
  },
  {
    "label": "ValidateRuntimeReplicationData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ValidateRuntimeReplicationData()"
  },
  {
    "label": "AssembleReferenceTokenStreamInternal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AssembleReferenceTokenStreamInternal(bool bForce = false)"
  },
  {
    "label": "InitializePrivateStaticClass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializePrivateStaticClass(\n\tclass UClass* TClass_Super_StaticClass,\n\tclass UClass* TClass_PrivateStaticClass,\n\tclass UClass* TClass_WithinClass_StaticClass,\n\tconst TCHAR* PackageName,\n\tconst TCHAR* Name\n\t)"
  },
  {
    "label": "FObjectInstancingGraph()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "FObjectInstancingGraph(bool bDisableInstancing = false)"
  },
  {
    "label": "FObjectInstancingGraph()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "FObjectInstancingGraph(EObjectInstancingGraphOptions InOptions)"
  },
  {
    "label": "FObjectInstancingGraph()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "FObjectInstancingGraph( class UObject* DestinationSubobjectRoot, EObjectInstancingGraphOptions InOptions = EObjectInstancingGraphOptions::None)"
  },
  {
    "label": "SetDestinationRoot()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDestinationRoot( class UObject* DestinationSubobjectRoot, class UObject* InSourceRoot = nullptr )"
  },
  {
    "label": "InstancePropertyValue()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "InstancePropertyValue(SourceComponent, CurrentValue, CurrentObject, Flags)"
  },
  {
    "label": "AddNewObject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddNewObject(class UObject* ObjectInstance, class UObject* InArchetype = nullptr)"
  },
  {
    "label": "AddNewInstance()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddNewInstance(class UObject* ObjectInstance, class UObject* InArchetype = nullptr)"
  },
  {
    "label": "RetrieveObjectInstances()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RetrieveObjectInstances( class UObject* SearchOuter, TArray<class UObject*>& out_Objects )"
  },
  {
    "label": "It()",
    "kind": "Method",
    "detail": "Function (TIterator)",
    "insertText": "It(SourceToDestinationMap)"
  },
  {
    "label": "ArePropertiesTheSame()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ArePropertiesTheSame(const FProperty* A, const FProperty* B, bool bCheckPropertiesNames)"
  },
  {
    "label": "TheSameLayout()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TheSameLayout(const UStruct* StructA, const UStruct* StructB, bool bCheckPropertiesNames = false)"
  },
  {
    "label": "AttemptToFindUninitializedScriptStructMembers()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "AttemptToFindUninitializedScriptStructMembers()"
  },
  {
    "label": "AttemptToFindShortTypeNamesInMetaData()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "AttemptToFindShortTypeNamesInMetaData()"
  }
]