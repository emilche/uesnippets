[
  {
    "label": "FSceneViewport",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSceneViewport"
  },
  {
    "label": "FUICommandList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FUICommandList"
  },
  {
    "label": "IPersonaToolkit",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPersonaToolkit"
  },
  {
    "label": "SMenuAnchor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SMenuAnchor"
  },
  {
    "label": "SViewport",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SViewport"
  },
  {
    "label": "UAnimationAsset",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimationAsset"
  },
  {
    "label": "UDebugSkelMeshComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UDebugSkelMeshComponent"
  },
  {
    "label": "USoundWave",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USoundWave"
  },
  {
    "label": "FFrontendFilter_Folder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFrontendFilter_Folder"
  },
  {
    "label": "FFrontendFilter_SkeletonNotify",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFrontendFilter_SkeletonNotify"
  },
  {
    "label": "FAnimationAssetViewportClient",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAnimationAssetViewportClient"
  },
  {
    "label": "SAnimationSequenceBrowser",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SAnimationSequenceBrowser"
  },
  {
    "label": "IPersonaToolkit",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPersonaToolkit"
  },
  {
    "label": "IPersonaToolkit",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPersonaToolkit"
  },
  {
    "label": "FAnimationAssetViewportClient()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FAnimationAssetViewportClient(FPreviewScene& InPreviewScene)"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct(const FArguments& InArgs, const TSharedRef<class IPersonaToolkit>& InPersonaToolkit)"
  },
  {
    "label": "OnRequestOpenAssets()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnRequestOpenAssets(const TArray<FAssetData>& SelectedAssets, bool bFromHistory)"
  },
  {
    "label": "OnRequestOpenAsset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnRequestOpenAsset(const FAssetData& AssetData, bool bFromHistory)"
  },
  {
    "label": "OnGetAssetContextMenu()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<SWidget>)",
    "insertText": "OnGetAssetContextMenu(const TArray<FAssetData>& SelectedAssets)"
  },
  {
    "label": "OpenInNewWindow()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OpenInNewWindow(TArray<FAssetData> AnimationAssets)"
  },
  {
    "label": "FindInContentBrowser()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FindInContentBrowser()"
  },
  {
    "label": "OnApplyCompression()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnApplyCompression(TArray<FAssetData> SelectedAssets)"
  },
  {
    "label": "OnExportToFBX()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnExportToFBX(TArray<FAssetData> SelectedAssets)"
  },
  {
    "label": "OnAddLoopingInterpolation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAddLoopingInterpolation(TArray<FAssetData> SelectedAssets)"
  },
  {
    "label": "OnSetCurrentPreviewMesh()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSetCurrentPreviewMesh(TArray<FAssetData> SelectedAssets)"
  },
  {
    "label": "OnReimportAnimation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnReimportAnimation(TArray<FAssetData> SelectedAssets)"
  },
  {
    "label": "OnCreateCopy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnCreateCopy(TArray<FAssetData> Selected)"
  },
  {
    "label": "AddAssetToHistory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddAssetToHistory(const FAssetData& AssetData)"
  },
  {
    "label": "CacheOriginalAnimAssetHistory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CacheOriginalAnimAssetHistory()"
  },
  {
    "label": "OnGoForwardInHistory()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnGoForwardInHistory()"
  },
  {
    "label": "OnGoBackInHistory()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnGoBackInHistory()"
  },
  {
    "label": "GoToHistoryIndex()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GoToHistoryIndex(int32 InHistoryIdx)"
  },
  {
    "label": "OnMouseDownHistory()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnMouseDownHistory( const FGeometry& MyGeometry, const FPointerEvent& MouseEvent, TWeakPtr< SMenuAnchor > InMenuAnchor )"
  },
  {
    "label": "CreateAssetTooltipResources()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateAssetTooltipResources()"
  },
  {
    "label": "CreateCustomAssetToolTip()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SToolTip>)",
    "insertText": "CreateCustomAssetToolTip(FAssetData& AssetData)"
  },
  {
    "label": "OnVisualizeAssetToolTip()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "OnVisualizeAssetToolTip(const TSharedPtr<SWidget>& TooltipContent, FAssetData& AssetData)"
  },
  {
    "label": "OnAssetToolTipClosing()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAssetToolTipClosing()"
  },
  {
    "label": "CleanupPreviewSceneComponent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CleanupPreviewSceneComponent(USceneComponent* Component)"
  },
  {
    "label": "IsToolTipPreviewVisible()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsToolTipPreviewVisible()"
  },
  {
    "label": "HandlePlayAudio()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandlePlayAudio(FAssetData InAssetData)"
  },
  {
    "label": "HandleStopAudio()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleStopAudio()"
  },
  {
    "label": "PlayPreviewAudio()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PlayPreviewAudio(USoundWave* InSoundWave)"
  },
  {
    "label": "UpdateTootipPreview()",
    "kind": "Method",
    "detail": "Function (EActiveTimerReturnType)",
    "insertText": "UpdateTootipPreview( double InCurrentTime, float InDeltaTime )"
  }
]