[
  {
    "label": "FRegistryValue",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRegistryValue"
  },
  {
    "label": "FRegistryKey",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRegistryKey"
  },
  {
    "label": "FRegistryRootedKey",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRegistryRootedKey"
  },
  {
    "label": "FRegistryValue()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Containers / Array . h \" # include \" Containers / Map . h \" # include \" Containers / UnrealString . h \" # include \" Windows / WindowsHWrapper . h \" # include \" Templates / UniquePtr . h \" struct FRegistryValue { uint32 Type ; TArray<uint8> Data ;)",
    "insertText": "FRegistryValue()"
  },
  {
    "label": "Set()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Set(const FString &NewValue)"
  },
  {
    "label": "Set()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Set(uint32 NewValue)"
  },
  {
    "label": "Read()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Read(HKEY hKey, const FString &Name)"
  },
  {
    "label": "Write()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Write(HKEY hKey, const FString &Name)"
  },
  {
    "label": "IsUpToDate()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsUpToDate(HKEY hKey, const FString &Name)"
  },
  {
    "label": "FRegistryKey()",
    "kind": "Method",
    "detail": "Function (} ; struct FRegistryKey : FNoncopyable { TMap<FString,FRegistryKey*> Keys ; TMap<FString,FRegistryValue*> Values ;)",
    "insertText": "FRegistryKey()"
  },
  {
    "label": "FindOrAddKey()",
    "kind": "Method",
    "detail": "Function (FRegistryKey*)",
    "insertText": "FindOrAddKey(const FString &Name)"
  },
  {
    "label": "FindOrAddValue()",
    "kind": "Method",
    "detail": "Function (FRegistryValue*)",
    "insertText": "FindOrAddValue(const FString &Name)"
  },
  {
    "label": "SetValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetValue(const FString &Name, const FString &Value)"
  },
  {
    "label": "SetValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetValue(const FString &Name, uint32 Value)"
  },
  {
    "label": "Read()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Read(HKEY hKey)"
  },
  {
    "label": "Read()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Read(HKEY hKey, const FString &Path)"
  },
  {
    "label": "Write()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Write(HKEY hKey, bool bRemoveDifferences)"
  },
  {
    "label": "Write()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Write(HKEY hKey, const FString &Path, bool bRemoveDifferences)"
  },
  {
    "label": "IsUpToDate()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsUpToDate(HKEY hKey, bool bRemoveDifferences)"
  },
  {
    "label": "IsUpToDate()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsUpToDate(HKEY hKey, const FString &Path, bool bRemoveDifferences)"
  },
  {
    "label": "FRegistryRootedKey()",
    "kind": "Method",
    "detail": "Function (} ; struct FRegistryRootedKey { HKEY hRootKey ; FString Path ; TUniquePtr<FRegistryKey> Key ;)",
    "insertText": "FRegistryRootedKey(HKEY hInKeyRoot, const FString &InPath)"
  },
  {
    "label": "Exists()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Exists()"
  },
  {
    "label": "Read()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Read()"
  },
  {
    "label": "Write()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Write(bool bRemoveDifferences)"
  },
  {
    "label": "IsUpToDate()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsUpToDate(bool bRemoveDifferences)"
  },
  {
    "label": "EnumerateRegistryKeys()",
    "kind": "Method",
    "detail": "Function (} ; bool)",
    "insertText": "EnumerateRegistryKeys(HKEY hKey, TArray<FString> &OutNames)"
  },
  {
    "label": "EnumerateRegistryValues()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "EnumerateRegistryValues(HKEY hKey, TArray<FString> &OutNames)"
  }
]