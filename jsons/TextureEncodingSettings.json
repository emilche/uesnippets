[
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FResolvedTextureEncodingSettings",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FResolvedTextureEncodingSettings"
  },
  {
    "label": "FTextureEditorCustomEncode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTextureEditorCustomEncode"
  },
  {
    "label": "UENUM()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Engine / DeveloperSettings . h \" # include \" Engine / TextureDefines . h \" # include \" TextureEncodingSettings . generated . h \")",
    "insertText": "UENUM()"
  },
  {
    "label": "UMETA()",
    "kind": "Method",
    "detail": "Function (Default = 0)",
    "insertText": "UMETA(ToolTip = \"Let the encoder decide what's best.\"), Low = 10 UMETA(ToolTip = \"Faster encoding, lower quality. Probably don't ship textures encoded at this effort level\"), Normal = 20 UMETA(ToolTip = \"Reasonable compromise\"), High = 30 UMETA(ToolTip = \"More time, better quality - good for nightlies / unattended cooks.\")"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (Disabled = 2 5 5,Final = 0,FinalIfAvailable = 1,Fast = 2 } ; struct FResolvedTextureEncodingSettings { struct { ETextureEncodeSpeedOverride ForceEncodeSpeed ; } User ; struct { uint32 bSharedLinearTextureEncoding : 1 ; uint32 bFinalUsesRDO : 1 ; uint32 bFastUsesRDO : 1 ; int8 FinalRDOLambda ; int8 FastRDOLambda ; ETextureEncodeEffort FinalEffortLevel ; ETextureUniversalTiling FinalUniversalTiling ; ETextureEncodeEffort FastEffortLevel ; ETextureUniversalTiling FastUniversalTiling ; ETextureEncodeSpeed CookUsesSpeed ; ETextureEncodeSpeed EditorUsesSpeed ; } Project ; ETextureEncodeSpeed EncodeSpeed ; FResolvedTextureEncodingSettings const&)",
    "insertText": "Get()"
  }
]