[
  {
    "label": "FExpressionInput",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FExpressionInput"
  },
  {
    "label": "FExtraShaderCompilerSettings",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FExtraShaderCompilerSettings"
  },
  {
    "label": "FCbFieldView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCbFieldView"
  },
  {
    "label": "FCbWriter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCbWriter"
  },
  {
    "label": "FMaterial",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMaterial"
  },
  {
    "label": "FMaterialCompiler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMaterialCompiler"
  },
  {
    "label": "FMaterialRenderProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMaterialRenderProxy"
  },
  {
    "label": "FMaterialShaderType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMaterialShaderType"
  },
  {
    "label": "FMaterialShaderParameters",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMaterialShaderParameters"
  },
  {
    "label": "FMaterialUniformExpression",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMaterialUniformExpression"
  },
  {
    "label": "FMaterialUniformExpressionTexture",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMaterialUniformExpressionTexture"
  },
  {
    "label": "FUniformExpressionCache",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FUniformExpressionCache"
  },
  {
    "label": "FUniformExpressionSet",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FUniformExpressionSet"
  },
  {
    "label": "FMeshMaterialShaderType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMeshMaterialShaderType"
  },
  {
    "label": "FSceneView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSceneView"
  },
  {
    "label": "FShaderCommonCompileJob",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FShaderCommonCompileJob"
  },
  {
    "label": "FShaderKeyGenerator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FShaderKeyGenerator"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FVirtualTexture2DResource",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVirtualTexture2DResource"
  },
  {
    "label": "IAllocatedVirtualTexture",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IAllocatedVirtualTexture"
  },
  {
    "label": "UMaterial",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterial"
  },
  {
    "label": "UMaterialExpression",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialExpression"
  },
  {
    "label": "UMaterialExpressionMaterialFunctionCall",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialExpressionMaterialFunctionCall"
  },
  {
    "label": "UMaterialInstance",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialInstance"
  },
  {
    "label": "UMaterialInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialInterface"
  },
  {
    "label": "URuntimeVirtualTexture",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "URuntimeVirtualTexture"
  },
  {
    "label": "USparseVolumeTexture",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USparseVolumeTexture"
  },
  {
    "label": "USubsurfaceProfile",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USubsurfaceProfile"
  },
  {
    "label": "UTexture",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UTexture"
  },
  {
    "label": "UTexture2D",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UTexture2D"
  },
  {
    "label": "FMaterialTextureParameterInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMaterialTextureParameterInfo"
  },
  {
    "label": "FMaterialExternalTextureParameterInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMaterialExternalTextureParameterInfo"
  },
  {
    "label": "FMeshMaterialShaderMapLayout",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMeshMaterialShaderMapLayout"
  },
  {
    "label": "FMaterialShaderTypes",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMaterialShaderTypes"
  },
  {
    "label": "FMaterialShaders",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMaterialShaders"
  },
  {
    "label": "FMaterialCachedExpressionData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMaterialCachedExpressionData"
  },
  {
    "label": "FMaterialHLSLGenerator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMaterialHLSLGenerator"
  },
  {
    "label": "FShaderMapLayout",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FShaderMapLayout"
  },
  {
    "label": "FMaterialCachedHLSLTree",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMaterialCachedHLSLTree"
  },
  {
    "label": "FMaterialKeyGeneratorContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMaterialKeyGeneratorContext"
  },
  {
    "label": "EMaterialDomain",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EMaterialDomain"
  },
  {
    "label": "FEmitContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEmitContext"
  },
  {
    "label": "FExpressionStaticTerrainLayerWeight",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FExpressionStaticTerrainLayerWeight"
  },
  {
    "label": "FEmitter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEmitter"
  },
  {
    "label": "FODSCClientData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FODSCClientData"
  },
  {
    "label": "ElementType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ElementType"
  },
  {
    "label": "TLinkedList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TLinkedList"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "EMaterialCommonBasis",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EMaterialCommonBasis"
  },
  {
    "label": "struct",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "struct"
  },
  {
    "label": "FMaterialCompileTargetParameters",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMaterialCompileTargetParameters"
  },
  {
    "label": "FMaterialRenderContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMaterialRenderContext"
  },
  {
    "label": "FMaterialVirtualTextureStack",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMaterialVirtualTextureStack"
  },
  {
    "label": "FMaterialUniformPreshaderField",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMaterialUniformPreshaderField"
  },
  {
    "label": "FMaterialUniformPreshaderHeader",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMaterialUniformPreshaderHeader"
  },
  {
    "label": "FMaterialNumericParameterInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMaterialNumericParameterInfo"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FMaterialTextureParameterInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMaterialTextureParameterInfo"
  },
  {
    "label": "FMaterialTextureCollectionParameterInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMaterialTextureCollectionParameterInfo"
  },
  {
    "label": "FMaterialExternalTextureParameterInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMaterialExternalTextureParameterInfo"
  },
  {
    "label": "FUniformParameterOverrides",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FUniformParameterOverrides"
  },
  {
    "label": "FNumericParameterKey",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FNumericParameterKey"
  },
  {
    "label": "FTextureParameterKey",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTextureParameterKey"
  },
  {
    "label": "FUniformExpressionSet",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FUniformExpressionSet"
  },
  {
    "label": "UMaterialParameterCollection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialParameterCollection"
  },
  {
    "label": "FMaterial",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMaterial"
  },
  {
    "label": "FHLSLMaterialTranslator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FHLSLMaterialTranslator"
  },
  {
    "label": "FMaterialShaderMap",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMaterialShaderMap"
  },
  {
    "label": "FMaterialShader",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMaterialShader"
  },
  {
    "label": "FMaterialRenderProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMaterialRenderProxy"
  },
  {
    "label": "FMaterialVirtualTextureStack",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMaterialVirtualTextureStack"
  },
  {
    "label": "FDebugUniformExpressionSet",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDebugUniformExpressionSet"
  },
  {
    "label": "UE",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UE"
  },
  {
    "label": "UE",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UE"
  },
  {
    "label": "FMaterialCompilationOutput",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMaterialCompilationOutput"
  },
  {
    "label": "FDebugShaderPipelineInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDebugShaderPipelineInfo"
  },
  {
    "label": "FDebugShaderTypeInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDebugShaderTypeInfo"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "FMaterialShaderParameters",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMaterialShaderParameters"
  },
  {
    "label": "FMaterialShaderMapId",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMaterialShaderMapId"
  },
  {
    "label": "FMeshMaterialShaderMap",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMeshMaterialShaderMap"
  },
  {
    "label": "FMaterialProcessedSource",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMaterialProcessedSource"
  },
  {
    "label": "FMaterialShaderMapContent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMaterialShaderMapContent"
  },
  {
    "label": "FMaterialShaderMap",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMaterialShaderMap"
  },
  {
    "label": "FProjectMeshShaderMapToKey",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FProjectMeshShaderMapToKey"
  },
  {
    "label": "FMaterialShaderMap",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMaterialShaderMap"
  },
  {
    "label": "FAsyncLoadContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAsyncLoadContext"
  },
  {
    "label": "FStableShaderKeyAndValue",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FStableShaderKeyAndValue"
  },
  {
    "label": "FShaderCompileJob",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FShaderCompileJob"
  },
  {
    "label": "FShaderCompilingManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FShaderCompilingManager"
  },
  {
    "label": "UE",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UE"
  },
  {
    "label": "contains",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "contains"
  },
  {
    "label": "ECompiledMaterialProperty",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ECompiledMaterialProperty"
  },
  {
    "label": "ECompiledPartialDerivativeVariation",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ECompiledPartialDerivativeVariation"
  },
  {
    "label": "FMaterialExpressionKey",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMaterialExpressionKey"
  },
  {
    "label": "FMaterialFunctionCompileState",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMaterialFunctionCompileState"
  },
  {
    "label": "UMaterialExpressionMaterialFunctionCall",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialExpressionMaterialFunctionCall"
  },
  {
    "label": "UMaterialExpressionMaterialFunctionCall",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialExpressionMaterialFunctionCall"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "FMaterial",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMaterial"
  },
  {
    "label": "EMaterialFloatPrecisionMode",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EMaterialFloatPrecisionMode"
  },
  {
    "label": "EBlendMode",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EBlendMode"
  },
  {
    "label": "ERefractionMode",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ERefractionMode"
  },
  {
    "label": "ETranslucencyLightingMode",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ETranslucencyLightingMode"
  },
  {
    "label": "FMaterialShaderMap",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMaterialShaderMap"
  },
  {
    "label": "FMaterialShaderMap",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMaterialShaderMap"
  },
  {
    "label": "FShaderPipelineType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FShaderPipelineType"
  },
  {
    "label": "FStableShaderKeyAndValue",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FStableShaderKeyAndValue"
  },
  {
    "label": "UMaterialExpressionCustomOutput",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialExpressionCustomOutput"
  },
  {
    "label": "UMaterialExpression",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialExpression"
  },
  {
    "label": "FMaterialCompiler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMaterialCompiler"
  },
  {
    "label": "FMaterialCompiler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMaterialCompiler"
  },
  {
    "label": "FMaterialCompiler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMaterialCompiler"
  },
  {
    "label": "FMeshMaterialShaderType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMeshMaterialShaderType"
  },
  {
    "label": "FMaterialShaderMap",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMaterialShaderMap"
  },
  {
    "label": "FShaderCompilingManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FShaderCompilingManager"
  },
  {
    "label": "FHLSLMaterialTranslator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FHLSLMaterialTranslator"
  },
  {
    "label": "FMaterialHLSLErrorHandler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMaterialHLSLErrorHandler"
  },
  {
    "label": "UE",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UE"
  },
  {
    "label": "FMaterialResource",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMaterialResource"
  },
  {
    "label": "EMaterialFloatPrecisionMode",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EMaterialFloatPrecisionMode"
  },
  {
    "label": "EBlendMode",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EBlendMode"
  },
  {
    "label": "ERefractionMode",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ERefractionMode"
  },
  {
    "label": "ETranslucencyLightingMode",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ETranslucencyLightingMode"
  },
  {
    "label": "FMaterialCompiler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMaterialCompiler"
  },
  {
    "label": "UMaterialExpressionCustomOutput",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialExpressionCustomOutput"
  },
  {
    "label": "UMaterialExpression",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialExpression"
  },
  {
    "label": "takes",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "takes"
  },
  {
    "label": "should",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "should"
  },
  {
    "label": "FMaterialUpdateContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMaterialUpdateContext"
  },
  {
    "label": "FGlobalComponentReregisterContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGlobalComponentReregisterContext"
  },
  {
    "label": "FGlobalComponentRecreateRenderStateContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGlobalComponentRecreateRenderStateContext"
  },
  {
    "label": "EOptions",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "EOptions"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "FMaterialResourceLocOnDisk",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMaterialResourceLocOnDisk"
  },
  {
    "label": "FMaterialResourceMemoryWriter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMaterialResourceMemoryWriter"
  },
  {
    "label": "FName",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FName"
  },
  {
    "label": "FMaterialResourceWriteScope",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMaterialResourceWriteScope"
  },
  {
    "label": "FMaterialResourceProxyReader",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMaterialResourceProxyReader"
  },
  {
    "label": "FName",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FName"
  },
  {
    "label": "FMaterialResourceForCooking",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMaterialResourceForCooking"
  },
  {
    "label": "DECLARE_LOG_CATEGORY_EXTERN()",
    "kind": "Method",
    "detail": "Function (PLATFORM_WINDOWS)",
    "insertText": "DECLARE_LOG_CATEGORY_EXTERN(LogMaterial, Log, All)"
  },
  {
    "label": "GetMaterialQualityLevelName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetMaterialQualityLevelName(EMaterialQualityLevel::Type InMaterialQualityLevel, FString& OutName)"
  },
  {
    "label": "GetMaterialQualityLevelFName()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetMaterialQualityLevelFName(EMaterialQualityLevel::Type InMaterialQualityLevel)"
  },
  {
    "label": "AllowDitheredLODTransition()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AllowDitheredLODTransition(ERHIFeatureLevel::Type FeatureLevel)"
  },
  {
    "label": "IsOpaqueBlendMode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsOpaqueBlendMode(EBlendMode BlendMode)"
  },
  {
    "label": "IsOpaqueBlendMode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsOpaqueBlendMode(const FMaterial& In)"
  },
  {
    "label": "IsOpaqueBlendMode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsOpaqueBlendMode(const UMaterialInterface& In)"
  },
  {
    "label": "IsOpaqueBlendMode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsOpaqueBlendMode(const FMaterialShaderParameters& In)"
  },
  {
    "label": "IsOpaqueOrMaskedBlendMode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsOpaqueOrMaskedBlendMode(EBlendMode BlendMode)"
  },
  {
    "label": "IsOpaqueOrMaskedBlendMode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsOpaqueOrMaskedBlendMode(const FMaterial& In)"
  },
  {
    "label": "IsOpaqueOrMaskedBlendMode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsOpaqueOrMaskedBlendMode(const UMaterialInterface& In)"
  },
  {
    "label": "IsOpaqueOrMaskedBlendMode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsOpaqueOrMaskedBlendMode(const FMaterialShaderParameters& In)"
  },
  {
    "label": "IsMaskedBlendMode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsMaskedBlendMode(EBlendMode BlendMode)"
  },
  {
    "label": "IsMaskedBlendMode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsMaskedBlendMode(const FMaterial& In)"
  },
  {
    "label": "IsMaskedBlendMode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsMaskedBlendMode(const UMaterialInterface& In)"
  },
  {
    "label": "IsMaskedBlendMode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsMaskedBlendMode(const FMaterialShaderParameters& In)"
  },
  {
    "label": "IsTranslucentOnlyBlendMode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsTranslucentOnlyBlendMode(EBlendMode BlendMode)"
  },
  {
    "label": "IsTranslucentOnlyBlendMode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsTranslucentOnlyBlendMode(const FMaterial& In)"
  },
  {
    "label": "IsTranslucentOnlyBlendMode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsTranslucentOnlyBlendMode(const UMaterialInterface& In)"
  },
  {
    "label": "IsTranslucentOnlyBlendMode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsTranslucentOnlyBlendMode(const FMaterialShaderParameters& In)"
  },
  {
    "label": "IsTranslucentBlendMode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsTranslucentBlendMode(EBlendMode BlendMode)"
  },
  {
    "label": "IsTranslucentBlendMode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsTranslucentBlendMode(const FMaterial& In)"
  },
  {
    "label": "IsTranslucentBlendMode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsTranslucentBlendMode(const UMaterialInterface& In)"
  },
  {
    "label": "IsTranslucentBlendMode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsTranslucentBlendMode(const FMaterialShaderParameters& In)"
  },
  {
    "label": "IsAlphaHoldoutBlendMode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsAlphaHoldoutBlendMode(EBlendMode BlendMode)"
  },
  {
    "label": "IsAlphaHoldoutBlendMode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsAlphaHoldoutBlendMode(const FMaterial& In)"
  },
  {
    "label": "IsAlphaHoldoutBlendMode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsAlphaHoldoutBlendMode(const UMaterialInterface& In)"
  },
  {
    "label": "IsAlphaHoldoutBlendMode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsAlphaHoldoutBlendMode(const FMaterialShaderParameters& In)"
  },
  {
    "label": "IsModulateBlendMode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsModulateBlendMode(EBlendMode BlendMode)"
  },
  {
    "label": "IsModulateBlendMode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsModulateBlendMode(const FMaterial& In)"
  },
  {
    "label": "IsModulateBlendMode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsModulateBlendMode(const UMaterialInterface& In)"
  },
  {
    "label": "IsModulateBlendMode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsModulateBlendMode(const FMaterialShaderParameters& In)"
  },
  {
    "label": "IsAdditiveBlendMode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsAdditiveBlendMode(EBlendMode BlendMode)"
  },
  {
    "label": "IsAdditiveBlendMode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsAdditiveBlendMode(const FMaterial& In)"
  },
  {
    "label": "IsAdditiveBlendMode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsAdditiveBlendMode(const UMaterialInterface& In)"
  },
  {
    "label": "IsAdditiveBlendMode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsAdditiveBlendMode(const FMaterialShaderParameters& In)"
  },
  {
    "label": "IsAlphaCompositeBlendMode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsAlphaCompositeBlendMode(EBlendMode BlendMode)"
  },
  {
    "label": "IsAlphaCompositeBlendMode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsAlphaCompositeBlendMode(const FMaterial& In)"
  },
  {
    "label": "IsAlphaCompositeBlendMode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsAlphaCompositeBlendMode(const UMaterialInterface& In)"
  },
  {
    "label": "IsAlphaCompositeBlendMode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsAlphaCompositeBlendMode(const FMaterialShaderParameters& In)"
  },
  {
    "label": "IsUsingNewMaterialTranslatorPrototype()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsUsingNewMaterialTranslatorPrototype()"
  },
  {
    "label": "GetCmdLineFilterShaderFormats()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetCmdLineFilterShaderFormats(TArray<FName>& InOutShderFormats)"
  },
  {
    "label": "GetCmdLineMaterialQualityToCache()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetCmdLineMaterialQualityToCache()"
  },
  {
    "label": "IsMaterialValueType()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "IsMaterialValueType(InType, MCT_LWCType)"
  },
  {
    "label": "IsMaterialValueType()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "IsMaterialValueType(InType, MCT_UInt)"
  },
  {
    "label": "FMaterialRenderContext()",
    "kind": "Method",
    "detail": "Function (ENGINE_API)",
    "insertText": "FMaterialRenderContext(\n\t\tconst FMaterialRenderProxy* InMaterialRenderProxy,\n\t\tconst FMaterial& InMaterial,\n\t\tconst FSceneView* InView)"
  },
  {
    "label": "FMaterialVirtualTextureStack()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FMaterialVirtualTextureStack()"
  },
  {
    "label": "AddLayer()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "AddLayer()"
  },
  {
    "label": "SetLayer()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "SetLayer(int32 LayerIndex, int32 UniformExpressionIndex)"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Serialize(FArchive& Ar)"
  },
  {
    "label": "LAYOUT_FIELD()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "LAYOUT_FIELD(uint32, BufferOffset)"
  },
  {
    "label": "ScriptNameToName()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "ScriptNameToName(ParameterInfo.Name)"
  },
  {
    "label": "SetNumericOverride()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetNumericOverride(EMaterialParameterType Type, const FHashedMaterialParameterInfo& ParameterInfo, const UE::Shader::FValue& Value, bool bOverride)"
  },
  {
    "label": "SetTextureOverride()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTextureOverride(EMaterialTextureParameterType Type, const FMaterialTextureParameterInfo& ParameterInfo, UTexture* Texture)"
  },
  {
    "label": "SetParameterCollections()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetParameterCollections(TConstArrayView<const class UMaterialParameterCollection*> Collections)"
  },
  {
    "label": "FindOrAddTextureParameter()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "FindOrAddTextureParameter(EMaterialTextureParameterType Type, const FMaterialTextureParameterInfo& Info)"
  },
  {
    "label": "FindOrAddTextureCollectionParameter()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "FindOrAddTextureCollectionParameter(const FMaterialTextureCollectionParameterInfo& Info)"
  },
  {
    "label": "FindOrAddExternalTextureParameter()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "FindOrAddExternalTextureParameter(const FMaterialExternalTextureParameterInfo& Info)"
  },
  {
    "label": "FindOrAddNumericParameter()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "FindOrAddNumericParameter(EMaterialParameterType Type, const FMaterialParameterInfo& ParameterInfo, uint32 DefaultValueOffset)"
  },
  {
    "label": "AddDefaultParameterValue()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "AddDefaultParameterValue(const UE::Shader::FValue& Value)"
  },
  {
    "label": "AddVTStack()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "AddVTStack(int32 InPreallocatedStackTextureIndex)"
  },
  {
    "label": "AddVTLayer()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "AddVTLayer(int32 StackIndex, int32 TextureIndex)"
  },
  {
    "label": "SetVTLayer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetVTLayer(int32 StackIndex, int32 VTLayerIndex, int32 TextureIndex)"
  },
  {
    "label": "FindOrAddUserSceneTexture()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "FindOrAddUserSceneTexture(FName UserSceneTexture)"
  },
  {
    "label": "IsSceneTextureUsed()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "IsSceneTextureUsed(PPI_SceneColor)"
  },
  {
    "label": "IsSceneTextureUsed()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "IsSceneTextureUsed(PPI_SceneDepth)"
  },
  {
    "label": "IsSceneTextureUsed()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "IsSceneTextureUsed(PPI_Velocity)"
  },
  {
    "label": "TryLoad()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TryLoad(FCbFieldView Field)"
  },
  {
    "label": "LoadFromCompactBinary()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "LoadFromCompactBinary(FCbFieldView Field, FMaterialShaderParameters& OutValue)"
  },
  {
    "label": "SetShaderDependencies()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetShaderDependencies(const TArray<FShaderType*>& ShaderTypes, const TArray<const FShaderPipelineType*>& ShaderPipelineTypes, const TArray<FVertexFactoryType*>& VFTypes, EShaderPlatform ShaderPlatform)"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Serialize(FArchive& Ar, bool bLoadingCooked)"
  },
  {
    "label": "Equals()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "Equals(ReferenceSet, true)"
  },
  {
    "label": "GetShaderPermutationFlags()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetShaderPermutationFlags(LayoutParams)"
  },
  {
    "label": "UpdateFromParameterSet()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateFromParameterSet(const FStaticParameterSet& StaticParameters)"
  },
  {
    "label": "RecordAndEmit()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RecordAndEmit(FMaterialKeyGeneratorContext& Context)"
  },
  {
    "label": "LoadMissingShadersFromMemory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LoadMissingShadersFromMemory(\n\t\tconst FSHAHash& MaterialShaderMapHash, \n\t\tconst FMaterial* Material, \n\t\tEShaderPlatform Platform)"
  },
  {
    "label": "Finalize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Finalize(const FShaderMapResourceCode* Code)"
  },
  {
    "label": "AddMeshShaderMap()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddMeshShaderMap(const FHashedName& VertexFactoryTypeName, FMeshMaterialShaderMap* MeshShaderMap)"
  },
  {
    "label": "RemoveMeshShaderMap()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveMeshShaderMap(const FHashedName& VertexFactoryTypeName)"
  },
  {
    "label": "FindId()",
    "kind": "Method",
    "detail": "Function (TRefCountPtr<FMaterialShaderMap>)",
    "insertText": "FindId(const FMaterialShaderMapId& ShaderMapId, EShaderPlatform Platform)"
  },
  {
    "label": "GetAllOutdatedTypes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetAllOutdatedTypes(TArray<const FShaderType*>& OutdatedShaderTypes, TArray<const FShaderPipelineType*>& OutdatedShaderPipelineTypes, TArray<const FVertexFactoryType*>& OutdatedFactoryTypes)"
  },
  {
    "label": "LoadFromDerivedDataCache()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LoadFromDerivedDataCache(const FMaterial* Material, const FMaterialShaderMapId& ShaderMapId, EShaderPlatform Platform, const ITargetPlatform* TargetPlatform, TRefCountPtr<FMaterialShaderMap>& InOutShaderMap, FString& OutDDCKeyDesc)"
  },
  {
    "label": "BeginLoadFromDerivedDataCache()",
    "kind": "Method",
    "detail": "Function (TSharedRef<FAsyncLoadContext>)",
    "insertText": "BeginLoadFromDerivedDataCache(const FMaterial* Material, const FMaterialShaderMapId& ShaderMapId, EShaderPlatform Platform, const ITargetPlatform* TargetPlatform, TRefCountPtr<FMaterialShaderMap>& InOutShaderMap, FString& OutDDCKeyDesc)"
  },
  {
    "label": "FMaterialShaderMap()",
    "kind": "Method",
    "detail": "Function (endif)",
    "insertText": "FMaterialShaderMap()"
  },
  {
    "label": "Compile()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Compile(\n\t\tFMaterial* Material,\n\t\tconst FMaterialShaderMapId& ShaderMapId, \n\t\tconst TRefCountPtr<FSharedShaderCompilerEnvironment>& MaterialEnvironment,\n\t\tconst FMaterialCompilationOutput& InMaterialCompilationOutput,\n\t\tEShaderPlatform Platform,\n\t\tEMaterialShaderPrecompileMode PrecompileMode\n\t\t)"
  },
  {
    "label": "ProcessCompilationResults()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessCompilationResults(const TArray<TRefCountPtr<FShaderCommonCompileJob>>& ICompilationResults, int32& InOutJobIndex, float& TimeBudget)"
  },
  {
    "label": "IsComplete()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsComplete(const FMaterial* Material, bool bSilent)"
  },
  {
    "label": "CollectPSOPrecacheData()",
    "kind": "Method",
    "detail": "Function (FPSOPrecacheDataArray)",
    "insertText": "CollectPSOPrecacheData(const FMaterialPSOPrecacheParams& PrecacheParams)"
  },
  {
    "label": "LoadMissingShadersFromMemory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LoadMissingShadersFromMemory(const FMaterial* Material)"
  },
  {
    "label": "Register()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Register(EShaderPlatform InShaderPlatform)"
  },
  {
    "label": "RegisterForODSC()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterForODSC(EShaderPlatform InShaderPlatform)"
  },
  {
    "label": "AddRef()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddRef()"
  },
  {
    "label": "Release()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Release()"
  },
  {
    "label": "Ctx()",
    "kind": "Method",
    "detail": "Function (FShaderSerializeContext)",
    "insertText": "Ctx(Ar)"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "Serialize(Ctx)"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Serialize(FShaderSerializeContext& Ctx)"
  },
  {
    "label": "SaveToDerivedDataCache()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SaveToDerivedDataCache(const FMaterialShaderParameters& ShaderParameters)"
  },
  {
    "label": "SaveForRemoteRecompile()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SaveForRemoteRecompile(FArchive& Ar, const TMap<FString, TArray<TRefCountPtr<FMaterialShaderMap> > >& CompiledShaderMaps)"
  },
  {
    "label": "LoadForRemoteRecompile()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LoadForRemoteRecompile(FArchive& Ar, EShaderPlatform ShaderPlatform, TArray<UMaterialInterface*>& OutLoadedMaterials)"
  },
  {
    "label": "SaveShaderStableKeys()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SaveShaderStableKeys(EShaderPlatform TargetShaderPlatform, const struct FStableShaderKeyAndValue& SaveKeyVal)"
  },
  {
    "label": "AcquireCompilingId()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "AcquireCompilingId(const TRefCountPtr<FSharedShaderCompilerEnvironment>& InMaterialEnvironment)"
  },
  {
    "label": "ReleaseCompilingId()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseCompilingId()"
  },
  {
    "label": "AddCompilingDependency()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddCompilingDependency(FMaterial* Material)"
  },
  {
    "label": "RemoveCompilingDependency()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveCompilingDependency(FMaterial* Material)"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT(\"\")"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT(\"\")"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT(\"\")"
  },
  {
    "label": "InitalizeForODSC()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitalizeForODSC(EShaderPlatform TargetShaderPlatform, const FMaterialCompilationOutput& NewCompilationOutput)"
  },
  {
    "label": "CheckReleaseCompilingId()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CheckReleaseCompilingId()"
  },
  {
    "label": "ShaderMapResourceExplicitRelease()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ShaderMapResourceExplicitRelease(const FShaderMapResource* ShaderMapResource)"
  },
  {
    "label": "DumpMaterialStats()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DumpMaterialStats( EShaderPlatform Platform )"
  },
  {
    "label": "PointerHash()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "PointerHash(ExpressionKey.Expression)"
  },
  {
    "label": "IsAllowedExpressionType()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsAllowedExpressionType(const UClass* const Class, const bool bMaterialFunction)"
  },
  {
    "label": "ConvertToMultilineToolTip()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConvertToMultilineToolTip(const FString& InToolTip, const int32 TargetLineLength, TArray<FString>& OutToolTip)"
  },
  {
    "label": "GetMaterialValueTypeDescriptions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetMaterialValueTypeDescriptions(const uint32 MaterialValueType, TArray<FText>& OutDescriptions)"
  },
  {
    "label": "CanConnectMaterialValueTypes()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanConnectMaterialValueTypes(const uint32 InputType, const uint32 OutputType)"
  },
  {
    "label": "SetShaderMapsOnMaterialResources()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetShaderMapsOnMaterialResources(const TMap<TRefCountPtr<FMaterial>, TRefCountPtr<FMaterialShaderMap>>& MaterialsToUpdate)"
  },
  {
    "label": "DeferredDelete()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeferredDelete(FMaterial* Material)"
  },
  {
    "label": "DeleteMaterialsOnRenderThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeleteMaterialsOnRenderThread(TArray<TRefCountPtr<FMaterial>>& MaterialsRenderThread)"
  },
  {
    "label": "PrepareDestroy_GameThread()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PrepareDestroy_GameThread()"
  },
  {
    "label": "PrepareDestroy_RenderThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PrepareDestroy_RenderThread()"
  },
  {
    "label": "CacheShaders()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CacheShaders(EShaderPlatform Platform, EMaterialShaderPrecompileMode PrecompileMode = EMaterialShaderPrecompileMode::Default, const ITargetPlatform* TargetPlatform = nullptr)"
  },
  {
    "label": "CacheShaders()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CacheShaders(const FMaterialShaderMapId& ShaderMapId, EShaderPlatform Platform, EMaterialShaderPrecompileMode PrecompileMode = EMaterialShaderPrecompileMode::Default, const ITargetPlatform* TargetPlatform = nullptr)"
  },
  {
    "label": "CacheGivenTypes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CacheGivenTypes(EShaderPlatform ShaderPlatform, const TArray<const FVertexFactoryType*>& VFTypes, const TArray<const FShaderPipelineType*>& PipelineTypes, const TArray<const FShaderType*>& ShaderTypes)"
  },
  {
    "label": "CollectPSOs()",
    "kind": "Method",
    "detail": "Function (FGraphEventArray)",
    "insertText": "CollectPSOs(ERHIFeatureLevel::Type InFeatureLevel, const FPSOPrecacheVertexFactoryDataList& VertexFactoryDataList, const FPSOPrecacheParams& PreCacheParams, EPSOPrecachePriority Priority, TArray<FMaterialPSOPrecacheRequestID>& OutMaterialPSORequestIDs)"
  },
  {
    "label": "ClearPrecachedPSORequestIDs()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearPrecachedPSORequestIDs()"
  },
  {
    "label": "LegacySerialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LegacySerialize(FArchive& Ar)"
  },
  {
    "label": "SerializeInlineShaderMap()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SerializeInlineShaderMap(FArchive& Ar, const FName& SerializingAsset = NAME_None)"
  },
  {
    "label": "RegisterInlineShaderMap()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterInlineShaderMap(bool bLoadingCooked)"
  },
  {
    "label": "ReleaseShaderMap()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseShaderMap()"
  },
  {
    "label": "DiscardShaderMap()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DiscardShaderMap()"
  },
  {
    "label": "FDisplacementScaling()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FDisplacementScaling()"
  },
  {
    "label": "FDisplacementFadeRange()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FDisplacementFadeRange()"
  },
  {
    "label": "GetFriendlyName()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetFriendlyName()"
  },
  {
    "label": "GetAssetName()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetAssetName()"
  },
  {
    "label": "CancelCompilation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CancelCompilation()"
  },
  {
    "label": "FinishCompilation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FinishCompilation()"
  },
  {
    "label": "FinishCompilation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FinishCompilation(const TCHAR* MaterialName, const TArray<FMaterial*>& MaterialsToCompile)"
  },
  {
    "label": "SetSubstrateCompilationConfig()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSubstrateCompilationConfig(FSubstrateCompilationConfig& SubstrateCompilationConfig)"
  },
  {
    "label": "GetUniformTextureExpressions()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetUniformTextureExpressions(EMaterialTextureParameterType::Standard2D)"
  },
  {
    "label": "GetUniformTextureExpressions()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetUniformTextureExpressions(EMaterialTextureParameterType::Cube)"
  },
  {
    "label": "GetUniformTextureExpressions()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetUniformTextureExpressions(EMaterialTextureParameterType::Array2D)"
  },
  {
    "label": "GetUniformTextureExpressions()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetUniformTextureExpressions(EMaterialTextureParameterType::Volume)"
  },
  {
    "label": "GetUniformTextureExpressions()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetUniformTextureExpressions(EMaterialTextureParameterType::Virtual)"
  },
  {
    "label": "GetUniformTextureExpressions()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetUniformTextureExpressions(EMaterialTextureParameterType::SparseVolume)"
  },
  {
    "label": "ObjectPtrDecay()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "ObjectPtrDecay(ErrorExpressions)"
  },
  {
    "label": "MaterialUsesWorldPositionOffset_GameThread()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "MaterialUsesWorldPositionOffset_GameThread()"
  },
  {
    "label": "MaterialUsesPixelDepthOffset_RenderThread()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "MaterialUsesPixelDepthOffset_RenderThread()"
  },
  {
    "label": "SetGameThreadShaderMap()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetGameThreadShaderMap(FMaterialShaderMap* InMaterialShaderMap)"
  },
  {
    "label": "SetInlineShaderMap()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetInlineShaderMap(FMaterialShaderMap* InMaterialShaderMap)"
  },
  {
    "label": "UpdateInlineShaderMapIsComplete()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateInlineShaderMapIsComplete()"
  },
  {
    "label": "SetRenderingThreadShaderMap()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRenderingThreadShaderMap(TRefCountPtr<FMaterialShaderMap>& InMaterialShaderMap)"
  },
  {
    "label": "AddReferencedObjects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddReferencedObjects(FReferenceCollector& Collector)"
  },
  {
    "label": "SubmitCompileJobs_GameThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SubmitCompileJobs_GameThread(EShaderCompileJobPriority Priority)"
  },
  {
    "label": "GetMaterialExpressionSource()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetMaterialExpressionSource(FString& OutSource)"
  },
  {
    "label": "DumpDebugInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DumpDebugInfo(FOutputDevice& OutputDevice)"
  },
  {
    "label": "SaveShaderStableKeys()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SaveShaderStableKeys(EShaderPlatform TargetShaderPlatform, struct FStableShaderKeyAndValue& SaveKeyVal)"
  },
  {
    "label": "UpdateEditorLoadedMaterialResources()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateEditorLoadedMaterialResources(EShaderPlatform InShaderPlatform)"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT(\"\")"
  },
  {
    "label": "AddShaderMapIDsWithUnfinishedCompilation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddShaderMapIDsWithUnfinishedCompilation(TArray<int32>& ShaderMapIds)"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT(\"\")"
  },
  {
    "label": "GetBaseMaterialPathName()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetBaseMaterialPathName()"
  },
  {
    "label": "SetCompilingShaderMap()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCompilingShaderMap(FMaterialShaderMap* InMaterialShaderMap)"
  },
  {
    "label": "ReleaseGameThreadCompilingShaderMap()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ReleaseGameThreadCompilingShaderMap()"
  },
  {
    "label": "ReleaseRenderThreadCompilingShaderMap()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseRenderThreadCompilingShaderMap()"
  },
  {
    "label": "BeginCompileShaderMap()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "BeginCompileShaderMap(\n\t\tconst FMaterialShaderMapId& ShaderMapId,\n\t\tconst FStaticParameterSet &StaticParameterSet,\n\t\tEShaderPlatform Platform,\n\t\tEMaterialShaderPrecompileMode PrecompileMode,\n\t\tconst ITargetPlatform* TargetPlatform = nullptr)"
  },
  {
    "label": "Translate_Legacy()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Translate_Legacy(const FMaterialShaderMapId& InShaderMapId,\n\t\tconst FStaticParameterSet& InStaticParameters,\n\t\tEShaderPlatform InPlatform,\n\t\tconst ITargetPlatform* InTargetPlatform,\n\t\tFMaterialCompilationOutput& OutCompilationOutput,\n\t\tTRefCountPtr<FSharedShaderCompilerEnvironment>& OutMaterialEnvironment)"
  },
  {
    "label": "Translate_New()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Translate_New(const FMaterialShaderMapId& InShaderMapId,\n\t\tconst FStaticParameterSet& InStaticParameters,\n\t\tEShaderPlatform InPlatform,\n\t\tconst ITargetPlatform* InTargetPlatform,\n\t\tFMaterialCompilationOutput& OutCompilationOutput,\n\t\tTRefCountPtr<FSharedShaderCompilerEnvironment>& OutMaterialEnvironment)"
  },
  {
    "label": "Translate()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Translate(const FMaterialShaderMapId& InShaderMapId,\n\t\tconst FStaticParameterSet& InStaticParameters,\n\t\tEShaderPlatform InPlatform,\n\t\tconst ITargetPlatform* InTargetPlatform,\n\t\tFMaterialCompilationOutput& OutCompilationOutput,\n\t\tTRefCountPtr<FSharedShaderCompilerEnvironment>& OutMaterialEnvironment)"
  },
  {
    "label": "GetOutputPrecision()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetOutputPrecision(EMaterialFloatPrecisionMode FloatPrecisionMode, bool& bFullPrecisionInPS, bool& bFullPrecisionInMaterial)"
  },
  {
    "label": "FMaterialResource()",
    "kind": "Method",
    "detail": "Function (ENGINE_API)",
    "insertText": "FMaterialResource()"
  },
  {
    "label": "GetResourceSizeEx()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetResourceSizeEx(FResourceSizeEx& CumulativeResourceSize)"
  },
  {
    "label": "FMaterialUpdateContext()",
    "kind": "Method",
    "detail": "Function (ENGINE_API)",
    "insertText": "FMaterialUpdateContext(uint32 Options = EOptions::Default, EShaderPlatform InShaderPlatform = GMaxRHIShaderPlatform)"
  },
  {
    "label": "AddMaterial()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddMaterial(UMaterial* Material)"
  },
  {
    "label": "AddMaterialInstance()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddMaterialInstance(UMaterialInstance* Instance)"
  },
  {
    "label": "AddMaterialInterface()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddMaterialInterface(UMaterialInterface* Instance)"
  },
  {
    "label": "DoesMaterialUseTexture()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DoesMaterialUseTexture(const UMaterialInterface* Material,const UTexture* CheckTexture)"
  },
  {
    "label": "DoMaterialAttributeReorder()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DoMaterialAttributeReorder(FExpressionInput* Input, const FPackageFileVersion&, int32 RenderObjVer, int32 UE5MainVer)"
  },
  {
    "label": "FMaterialResourceMemoryWriter()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FMaterialResourceMemoryWriter(FArchive& Ar)"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT(\"FMaterialResourceMemoryWriter\")"
  },
  {
    "label": "SerializeToParentArchive()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SerializeToParentArchive()"
  },
  {
    "label": "FMaterialResourceProxyReader()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FMaterialResourceProxyReader(\n\t\tFArchive& Ar,\n\t\tERHIFeatureLevel::Type FeatureLevel = ERHIFeatureLevel::Num,\n\t\tEMaterialQualityLevel::Type QualityLevel = EMaterialQualityLevel::Num)"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT(\"FMaterialResourceProxyReader\")"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Initialize(\n\t\tERHIFeatureLevel::Type FeatureLevel,\n\t\tEMaterialQualityLevel::Type QualityLevel,\n\t\tbool bSeekToEnd = false)"
  },
  {
    "label": "GetRayTracingMaskFromMaterial()",
    "kind": "Method",
    "detail": "Function (uint8)",
    "insertText": "GetRayTracingMaskFromMaterial(const EBlendMode BlendMode)"
  }
]