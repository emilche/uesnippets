[
  {
    "label": "FTransformFileHeader",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTransformFileHeader"
  },
  {
    "label": "FSerializedTransform",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSerializedTransform"
  },
  {
    "label": "FTransformFileHeader()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Misc / FrameRate . h \" # include \" UObject / UnrealType . h \" # include \" MovieSceneSectionSerialization . h \" struct FTransformFileHeader { const int32 cVersion = 1 ;)",
    "insertText": "FTransformFileHeader() : Version(cVersion)"
  },
  {
    "label": "FTransformFileHeader()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FTransformFileHeader(FFrameRate &InTickResolution, const FName& InSerializedType, const FGuid& InGuid) : Version(cVersion) , SerializedType(InSerializedType) , Guid(InGuid) , TickResolution(InTickResolution)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} ; FArchive&)",
    "insertText": "operator(FArchive& Ar, FTransformFileHeader& Header)"
  },
  {
    "label": "FSerializedTransform()",
    "kind": "Method",
    "detail": "Function (Ar<<Header . Version ; Ar<<Header . SerializedType ; Ar<<Header . Guid ; Ar<<Header . TickResolution . Numerator ; Ar<<Header . TickResolution . Denominator ; return Ar ; } int32 Version ; FName SerializedType ; FGuid Guid ; FFrameRate TickResolution ; } ; struct FSerializedTransform {)",
    "insertText": "FSerializedTransform()"
  },
  {
    "label": "FSerializedTransform()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FSerializedTransform(const FTransform& InTransform, FFrameNumber InKeyTime)"
  },
  {
    "label": "Set()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Set(InTransform, InKeyTime)"
  },
  {
    "label": "Set()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Set(const FTransform& InTransform, FFrameNumber InKeyTime)"
  },
  {
    "label": "GetTranslation()",
    "kind": "Method",
    "detail": "Function (Time = InKeyTime ; Values [ 0 ] = InTransform .)",
    "insertText": "GetTranslation()"
  },
  {
    "label": "Rotator()",
    "kind": "Method",
    "detail": "Function (FRotator WoundRoation = InTransform .)",
    "insertText": "Rotator()"
  },
  {
    "label": "GetScale3D()",
    "kind": "Method",
    "detail": "Function (Values [ 3 ] = WoundRoation . Roll ; Values [ 4 ] = WoundRoation . Pitch ; Values [ 5 ] = WoundRoation . Yaw ; Values [ 6 ] = InTransform .)",
    "insertText": "GetScale3D()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} FArchive&)",
    "insertText": "operator(FArchive& Ar, FSerializedTransform& Transform)"
  }
]