[
  {
    "label": "FGuid",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGuid"
  },
  {
    "label": "SEQUENCERCORE_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SEQUENCERCORE_API"
  },
  {
    "label": "UE_SEQUENCER_DECLARE_VIEW_MODEL_TYPE_ID()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / UnrealString . h \" # include \" Misc / StringBuilder . h \" # include \" MVVM / ViewModelTypeID . h \" struct FGuid ; namespace UE { namespace Sequencer { class IGroupableExtension { public :)",
    "insertText": "UE_SEQUENCER_DECLARE_VIEW_MODEL_TYPE_ID(IGroupableExtension) virtual ~IGroupableExtension()"
  },
  {
    "label": "GetIdentifierForGrouping()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "GetIdentifierForGrouping(TStringBuilder<128>& OutString)"
  },
  {
    "label": "GetIdentifierForGrouping()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetIdentifierForGrouping()"
  },
  {
    "label": "GetIdentifierForGrouping()",
    "kind": "Method",
    "detail": "Function (TStringBuilder<1 2 8> Builder ;)",
    "insertText": "GetIdentifierForGrouping(Builder)"
  }
]