[
  {
    "label": "AActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AActor"
  },
  {
    "label": "ISequencer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISequencer"
  },
  {
    "label": "FMenuBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMenuBuilder"
  },
  {
    "label": "FActorSchema",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FActorSchema"
  },
  {
    "label": "GetPrettyName()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" ISequencerObjectSchema . h \" class AActor ; class ISequencer ; class FMenuBuilder ; namespace UE::Sequencer { class FActorSchema : public IObjectSchema { FText)",
    "insertText": "GetPrettyName(const UObject* Object)"
  },
  {
    "label": "GetParentObject()",
    "kind": "Method",
    "detail": "Function (UObject*)",
    "insertText": "GetParentObject(UObject* Object)"
  },
  {
    "label": "GetRelevancy()",
    "kind": "Method",
    "detail": "Function (FObjectSchemaRelevancy)",
    "insertText": "GetRelevancy(const UObject* InObject)"
  },
  {
    "label": "ExtendObjectBindingMenu()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FExtender>)",
    "insertText": "ExtendObjectBindingMenu(TSharedRef<FUICommandList> CommandList, TWeakPtr<ISequencer> WeakSequencer, TArrayView<UObject* const> ContextSensitiveObjects)"
  },
  {
    "label": "HandleTrackMenuExtensionAddTrack()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "HandleTrackMenuExtensionAddTrack(FMenuBuilder& AddTrackMenuBuilder, TWeakPtr<ISequencer> WeakSequencer, TArray<AActor*> Actors)"
  },
  {
    "label": "HandleAddComponentActionExecute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleAddComponentActionExecute(FText ComponentName, TWeakPtr<ISequencer> WeakSequencer, TArray<AActor*> Actors)"
  }
]