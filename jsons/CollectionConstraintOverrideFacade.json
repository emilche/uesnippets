[
  {
    "label": "FConstraintOverridesCandidateData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FConstraintOverridesCandidateData"
  },
  {
    "label": "FConstraintOverridesTargetData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FConstraintOverridesTargetData"
  },
  {
    "label": "FConstraintOverrideCandidateFacade",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FConstraintOverrideCandidateFacade"
  },
  {
    "label": "FConstraintOverrideTargetFacade",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FConstraintOverrideTargetFacade"
  },
  {
    "label": "FConstraintOverridesCandidateData()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" GeometryCollection / ManagedArrayAccessor . h \" # include \" GeometryCollection / ManagedArrayCollection . h \" # include \" GeometryCollection / Facades / CollectionSelectionFacade . h \" namespace GeometryCollection::Facades { struct FConstraintOverridesCandidateData {)",
    "insertText": "FConstraintOverridesCandidateData() : VertexIndex(INDEX_NONE) , BoneIndex(INDEX_NONE)"
  },
  {
    "label": "FConstraintOverridesTargetData()",
    "kind": "Method",
    "detail": "Function (} int32 VertexIndex ; int32 BoneIndex ; } ; struct FConstraintOverridesTargetData {)",
    "insertText": "FConstraintOverridesTargetData() : VertexIndex(INDEX_NONE)"
  },
  {
    "label": "FConstraintOverrideCandidateFacade()",
    "kind": "Method",
    "detail": "Function (} int32 VertexIndex ; FVector3f PositionTarget ; } ; class FConstraintOverrideCandidateFacade { public : const FName GroupName ; const FName TargetIndex ; const FName BoneIndex ;)",
    "insertText": "FConstraintOverrideCandidateFacade(FManagedArrayCollection& InCollection)"
  },
  {
    "label": "FConstraintOverrideCandidateFacade()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FConstraintOverrideCandidateFacade(const FManagedArrayCollection& InCollection)"
  },
  {
    "label": "DefineSchema()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DefineSchema()"
  },
  {
    "label": "IsConst()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsConst()"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "Add(FConstraintOverridesCandidateData& InputData)"
  },
  {
    "label": "Clear()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Clear()"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (FConstraintOverridesCandidateData)",
    "insertText": "Get(const int32 Index)"
  },
  {
    "label": "Num()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "Num()"
  },
  {
    "label": "FConstraintOverrideTargetFacade()",
    "kind": "Method",
    "detail": "Function (} private : const FManagedArrayCollection& ConstCollection ; FManagedArrayCollection* Collection = nullptr ; TManagedArrayAccessor<int32> TargetIndexAttribute ; TManagedArrayAccessor<int32> BoneIndexAttribute ; } ; class FConstraintOverrideTargetFacade { public : const FName GroupName ; const FName TargetIndex ; const FName TargetPosition ;)",
    "insertText": "FConstraintOverrideTargetFacade(FManagedArrayCollection& InCollection)"
  },
  {
    "label": "FConstraintOverrideTargetFacade()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FConstraintOverrideTargetFacade(const FManagedArrayCollection& InCollection)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "Add(FConstraintOverridesTargetData& InputData)"
  },
  {
    "label": "GetIndex()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetIndex(const int32 Index)"
  },
  {
    "label": "GetPosition()",
    "kind": "Method",
    "detail": "Function (const FVector3f&)",
    "insertText": "GetPosition(const int32 Index)"
  }
]