[
  {
    "label": "FXmppMessage",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FXmppMessage"
  },
  {
    "label": "IXmppMessages",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IXmppMessages"
  },
  {
    "label": "FJsonObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FJsonObject"
  },
  {
    "label": "FXmppMessage()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" XmppConnection . h \" class FXmppMessage { public :)",
    "insertText": "FXmppMessage()"
  },
  {
    "label": "IXmppMessages()",
    "kind": "Method",
    "detail": "Function (} FXmppUserJid FromJid ; FXmppUserJid ToJid ; FString Payload ; FString Type ; FDateTime Timestamp ; } ; class IXmppMessages { public : ~)",
    "insertText": "IXmppMessages()"
  },
  {
    "label": "SendMessage()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "SendMessage(const FXmppUserJid& RecipientId, const FString& Type, const FString& Payload, bool bPayloadIsSerializedJson = false)"
  },
  {
    "label": "SendMessage()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SendMessage(const FXmppUserJid& RecipientId, const FString& Type, const TSharedRef<class FJsonObject>& Payload)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_ThreeParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_ThreeParams(FOnXmppMessageReceived, const TSharedRef<IXmppConnection>& , const FXmppUserJid& , const TSharedRef<FXmppMessage>&)"
  },
  {
    "label": "OnReceiveMessage()",
    "kind": "Method",
    "detail": "Function (FOnXmppMessageReceived&)",
    "insertText": "OnReceiveMessage()"
  }
]