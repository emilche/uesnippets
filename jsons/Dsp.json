[
  {
    "label": "FSinOsc2DRotation",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSinOsc2DRotation"
  },
  {
    "label": "FExponentialEase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FExponentialEase"
  },
  {
    "label": "FLinearEase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLinearEase"
  },
  {
    "label": "TParams",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TParams"
  },
  {
    "label": "DisjointedArrayView",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DisjointedArrayView"
  },
  {
    "label": "DisjointedArrayView",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DisjointedArrayView"
  },
  {
    "label": "TCircularAudioBuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TCircularAudioBuffer"
  },
  {
    "label": "TGetPower",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TGetPower"
  },
  {
    "label": "TGetPower",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TGetPower"
  },
  {
    "label": "TSample",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TSample"
  },
  {
    "label": "TSampleRef",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TSampleRef"
  },
  {
    "label": "VectorSinCos()",
    "kind": "Method",
    "detail": "Function (it)",
    "insertText": "VectorSinCos(&YVector, &XVector, &PhaseVec)"
  },
  {
    "label": "UE_REAL_TO_FLOAT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "UE_REAL_TO_FLOAT(Range.X)"
  },
  {
    "label": "UE_REAL_TO_FLOAT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "UE_REAL_TO_FLOAT(Range.Y)"
  },
  {
    "label": "UE_REAL_TO_FLOAT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "UE_REAL_TO_FLOAT(Range.X)"
  },
  {
    "label": "UE_REAL_TO_FLOAT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "UE_REAL_TO_FLOAT(Domain.X)"
  },
  {
    "label": "UE_REAL_TO_FLOAT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "UE_REAL_TO_FLOAT(Domain.Y)"
  },
  {
    "label": "UE_REAL_TO_FLOAT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "UE_REAL_TO_FLOAT(Domain.X)"
  },
  {
    "label": "EncodeMidSide()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EncodeMidSide(\n\t\tconst FAlignedFloatBuffer& InLeftChannel,\n\t\tconst FAlignedFloatBuffer& InRightChannel,\n\t\tFAlignedFloatBuffer& OutMidChannel,\n\t\tFAlignedFloatBuffer& OutSideChannel)"
  },
  {
    "label": "DecodeMidSide()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DecodeMidSide(\n\t\tconst FAlignedFloatBuffer& InMidChannel,\n\t\tconst FAlignedFloatBuffer& InSideChannel,\n\t\tFAlignedFloatBuffer& OutLeftChannel,\n\t\tFAlignedFloatBuffer& OutRightChannel)"
  },
  {
    "label": "Lock()",
    "kind": "Method",
    "detail": "Function (FScopeLock)",
    "insertText": "Lock(&CritSect)"
  },
  {
    "label": "Lock()",
    "kind": "Method",
    "detail": "Function (FScopeLock)",
    "insertText": "Lock(&CritSect)"
  },
  {
    "label": "Lock()",
    "kind": "Method",
    "detail": "Function (FScopeLock)",
    "insertText": "Lock(&CritSect)"
  },
  {
    "label": "Num()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "Num()"
  }
]