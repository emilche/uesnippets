[
  {
    "label": "FObjectRef",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FObjectRef"
  },
  {
    "label": "FPackedObjectRef",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPackedObjectRef"
  },
  {
    "label": "FObjectPathId",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FObjectPathId"
  },
  {
    "label": "DECLARE_LOG_CATEGORY_EXTERN()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Misc / StringBuilder . h \" # include \" UObject / ObjectHandleDefines . h \" # include \" UObject / ObjectFwd . h \" # include \" UObject / ObjectMacros . h \" # if UE_WITH_OBJECT_HANDLE_LATE_RESOLVE | | UE_WITH_OBJECT_HANDLE_TRACKING)",
    "insertText": "DECLARE_LOG_CATEGORY_EXTERN(LogObjectRef, Log, All)"
  },
  {
    "label": "MakePackedObjectRef()",
    "kind": "Method",
    "detail": "Function (struct FObjectRef ; namespace UE::CoreUObject::Private { struct FPackedObjectRef ; class FObjectPathId ; FPackedObjectRef)",
    "insertText": "MakePackedObjectRef(const FObjectRef& ObjectRef)"
  },
  {
    "label": "FObjectRef()",
    "kind": "Method",
    "detail": "Function (} struct FObjectRef {)",
    "insertText": "FObjectRef()"
  },
  {
    "label": "FObjectRef()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FObjectRef(FName PackageName, FName ClassPackageName, FName ClassName, UE::CoreUObject::Private::FObjectPathId ObjectPath)"
  },
  {
    "label": "FObjectRef()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FObjectRef(const UObject* Object)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "operator(const FObjectRef&& Other)"
  },
  {
    "label": "GetClassPathName()",
    "kind": "Method",
    "detail": "Function (} FString)",
    "insertText": "GetClassPathName(EObjectFullNameFlags Flags = EObjectFullNameFlags::IncludeClassPackage)"
  },
  {
    "label": "AppendClassPathName()",
    "kind": "Method",
    "detail": "Function (TStringBuilder<FName::StringBufferSize> Result ;)",
    "insertText": "AppendClassPathName(Result, Flags)"
  },
  {
    "label": "AppendClassPathName()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "AppendClassPathName(FStringBuilderBase& OutClassPathNameBuilder, EObjectFullNameFlags Flags = EObjectFullNameFlags::IncludeClassPackage)"
  },
  {
    "label": "GetFName()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetFName()"
  },
  {
    "label": "GetPathName()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetPathName()"
  },
  {
    "label": "AppendPathName()",
    "kind": "Method",
    "detail": "Function (TStringBuilder<FName::StringBufferSize> Result ;)",
    "insertText": "AppendPathName(Result)"
  },
  {
    "label": "AppendPathName()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "AppendPathName(FStringBuilderBase& OutPathNameBuilder)"
  },
  {
    "label": "GetFullName()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetFullName(EObjectFullNameFlags Flags = EObjectFullNameFlags::None)"
  },
  {
    "label": "GetFullName()",
    "kind": "Method",
    "detail": "Function (TStringBuilder<2 5 6> FullName ;)",
    "insertText": "GetFullName(FullName, Flags)"
  },
  {
    "label": "GetFullName()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "GetFullName(FStringBuilderBase& OutFullNameBuilder, EObjectFullNameFlags Flags = EObjectFullNameFlags::None)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (OutFullNameBuilder .)",
    "insertText": "Reset()"
  },
  {
    "label": "AppendClassPathName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AppendClassPathName(OutFullNameBuilder, Flags)"
  },
  {
    "label": "AppendChar()",
    "kind": "Method",
    "detail": "Function (OutFullNameBuilder .)",
    "insertText": "AppendChar(TEXT(' '))"
  },
  {
    "label": "AppendPathName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AppendPathName(OutFullNameBuilder)"
  },
  {
    "label": "GetExportTextName()",
    "kind": "Method",
    "detail": "Function (} FString)",
    "insertText": "GetExportTextName()"
  },
  {
    "label": "GetExportTextName()",
    "kind": "Method",
    "detail": "Function (TStringBuilder<2 5 6> ExportTextName ;)",
    "insertText": "GetExportTextName(ExportTextName)"
  },
  {
    "label": "GetExportTextName()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "GetExportTextName(FStringBuilderBase& OutExportTextNameBuilder)"
  },
  {
    "label": "AppendClassPathName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AppendClassPathName(OutExportTextNameBuilder)"
  },
  {
    "label": "AppendChar()",
    "kind": "Method",
    "detail": "Function (OutExportTextNameBuilder .)",
    "insertText": "AppendChar(TEXT('\\''))"
  },
  {
    "label": "AppendPathName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AppendPathName(OutExportTextNameBuilder)"
  },
  {
    "label": "IsNull()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsNull()"
  },
  {
    "label": "ResolveObjectRefClass()",
    "kind": "Method",
    "detail": "Function (} UClass*)",
    "insertText": "ResolveObjectRefClass(uint32 LoadFlags = LOAD_None)"
  },
  {
    "label": "Resolve()",
    "kind": "Method",
    "detail": "Function (UObject*)",
    "insertText": "Resolve(uint32 LoadFlags = LOAD_None)"
  },
  {
    "label": "GetObjectPath()",
    "kind": "Method",
    "detail": "Function (UE::CoreUObject::Private::FObjectPathId)",
    "insertText": "GetObjectPath()"
  }
]