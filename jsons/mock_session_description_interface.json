[
  {
    "label": "MockSessionDescriptionInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MockSessionDescriptionInterface"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (# ifndef API_TEST_MOCK_SESSION_DESCRIPTION_INTERFACE_H_ # define API_TEST_MOCK_SESSION_DESCRIPTION_INTERFACE_H_ # include<memory> # include<string> # include<utility> # include<vector> # include \" api / jsep . h \" # include \" test / gmock . h \" namespace webrtc { class MockSessionDescriptionInterface : public SessionDescriptionInterface { public :)",
    "insertText": "MOCK_METHOD(std::unique_ptr<SessionDescriptionInterface>, Clone, (), (const, override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(cricket::SessionDescription*, description, (), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(const cricket::SessionDescription*, description, (), (const, override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(std::string, session_id, (), (const, override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(std::string, session_version, (), (const, override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(SdpType, GetType, (), (const, override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(std::string, type, (), (const, override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(bool, AddCandidate, (const IceCandidateInterface*), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(size_t, RemoveCandidates, (const std::vector<cricket::Candidate>&), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(size_t, number_of_mediasections, (), (const, override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(const IceCandidateCollection*, candidates, (size_t), (const, override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(bool, ToString, (std::string*), (const, override))"
  },
  {
    "label": "static_assert()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "static_assert(!std::is_abstract_v<MockSessionDescriptionInterface>)"
  }
]