[
  {
    "label": "FBXSDK_DLL",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBXSDK_DLL"
  },
  {
    "label": "EType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EType"
  },
  {
    "label": "FBXSDK_OBJECT_DECLARE()",
    "kind": "Method",
    "detail": "Function (# ifndef _FBXSDK_SCENE_GEOMETRY_PATCH_H_ # define _FBXSDK_SCENE_GEOMETRY_PATCH_H_ # include<fbxsdk / fbxsdk_def . h> # include<fbxsdk / scene / geometry / fbxgeometry . h> # include<fbxsdk / fbxsdk_nsbegin . h> class FBXSDK_DLL FbxPatch : public FbxGeometry {)",
    "insertText": "FBXSDK_OBJECT_DECLARE(FbxPatch,FbxGeometry)"
  },
  {
    "label": "GetAttributeType()",
    "kind": "Method",
    "detail": "Function (public : FbxNodeAttribute::EType)",
    "insertText": "GetAttributeType()"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "SetSurfaceMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSurfaceMode(FbxGeometry::ESurfaceMode pMode)"
  },
  {
    "label": "GetSurfaceMode()",
    "kind": "Method",
    "detail": "Function (FbxGeometry::ESurfaceMode)",
    "insertText": "GetSurfaceMode()"
  },
  {
    "label": "GetUCount()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "GetUCount()"
  },
  {
    "label": "GetUStep()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "GetUStep()"
  },
  {
    "label": "GetUClosed()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetUClosed()"
  },
  {
    "label": "GetUCappedBottom()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetUCappedBottom()"
  },
  {
    "label": "GetVCappedBottom()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetVCappedBottom()"
  },
  {
    "label": "ContentReadFrom()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ContentReadFrom(const FbxStream& pStream)"
  },
  {
    "label": "Copy()",
    "kind": "Method",
    "detail": "Function (# ifndef DOXYGEN_SHOULD_SKIP_THIS FbxObject&)",
    "insertText": "Copy(const FbxObject& pObject)"
  },
  {
    "label": "InitControlPoints()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitControlPoints(int pCount)"
  },
  {
    "label": "InitControlPoints()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitControlPoints(pCount)"
  },
  {
    "label": "SetControlPointAt()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetControlPointAt(const FbxVector4 &pCtrlPoint ,int pIndex)"
  },
  {
    "label": "SetControlPointAt()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetControlPointAt(pCtrlPoint, pIndex)"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (} protected : void)",
    "insertText": "Construct(const FbxObject* pFrom)"
  },
  {
    "label": "Destruct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Destruct(bool pRecursive)"
  }
]