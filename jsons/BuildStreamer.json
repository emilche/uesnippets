[
  {
    "label": "IBuildStreamer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IBuildStreamer"
  },
  {
    "label": "IDirectoryBuildStreamer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDirectoryBuildStreamer"
  },
  {
    "label": "IManifestBuildStreamer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IManifestBuildStreamer"
  },
  {
    "label": "FDirectoryBuildStreamerConfig",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDirectoryBuildStreamerConfig"
  },
  {
    "label": "FDirectoryBuildStreamerDependencies",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDirectoryBuildStreamerDependencies"
  },
  {
    "label": "FManifestBuildStreamerConfig",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FManifestBuildStreamerConfig"
  },
  {
    "label": "FManifestBuildStreamerDependencies",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FManifestBuildStreamerDependencies"
  },
  {
    "label": "FBuildStreamerFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBuildStreamerFactory"
  },
  {
    "label": "IBuildStreamer()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Misc / SecureHash . h \" # include \" HAL / FileManager . h \" # include \" Core / BlockStructure . h \" # include \" Core / Factory . h \" # include \" Core / FileSpan . h \" # include \" Common / StatsCollector . h \" # include \" Installer / ChunkReferenceTracker . h \" # include \" Installer / CloudChunkSource . h \" # include \" BuildPatchManifest . h \" namespace BuildPatchServices { class IBuildStreamer { public : ~)",
    "insertText": "IBuildStreamer()"
  },
  {
    "label": "DequeueData()",
    "kind": "Method",
    "detail": "Function (} uint32)",
    "insertText": "DequeueData(uint8* Buffer, uint32 ReqSize, bool WaitForData = true)"
  },
  {
    "label": "IsEndOfData()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsEndOfData()"
  },
  {
    "label": "GetFileSpan()",
    "kind": "Method",
    "detail": "Function (} ; class IDirectoryBuildStreamer : public IBuildStreamer { public : bool)",
    "insertText": "GetFileSpan(uint64 StartingIdx, FFileSpan& FileSpan)"
  },
  {
    "label": "GetEmptyFiles()",
    "kind": "Method",
    "detail": "Function (TArray<FString>)",
    "insertText": "GetEmptyFiles()"
  },
  {
    "label": "GetAllFilenames()",
    "kind": "Method",
    "detail": "Function (TArray<FString>)",
    "insertText": "GetAllFilenames()"
  },
  {
    "label": "GetBuildSize()",
    "kind": "Method",
    "detail": "Function (uint64)",
    "insertText": "GetBuildSize()"
  },
  {
    "label": "GetAllFiles()",
    "kind": "Method",
    "detail": "Function (TArray<FFileSpan>)",
    "insertText": "GetAllFiles()"
  },
  {
    "label": "HasAborted()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasAborted()"
  },
  {
    "label": "GetBlockStructure()",
    "kind": "Method",
    "detail": "Function (} ; class IManifestBuildStreamer : public IBuildStreamer { public : typedef TArray<FGuid> FCustomChunkReferences ; typedef TFactory<IChunkReferenceTracker,FCustomChunkReferences> IChunkReferenceTrackerFactory ; typedef TFactory<ICloudChunkSource,IChunkReferenceTracker*> ICloudChunkSourceFactory ; public : const FBlockStructure&)",
    "insertText": "GetBlockStructure()"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (} ; struct FDirectoryBuildStreamerConfig { public : const FString BuildRoot ; const FString InputListFile ; const FString IgnoreListFile ; } ; struct FDirectoryBuildStreamerDependencies { public : FStatsCollector* const StatsCollector ; IFileSystem* const FileSystem ; } ; struct FManifestBuildStreamerConfig { public : FString CloudDirectory ; FBlockStructure DesiredBytes ; } ; struct FManifestBuildStreamerDependencies { public : IManifestBuildStreamer::IChunkReferenceTrackerFactory* const ChunkReferenceTrackerFactory ; IManifestBuildStreamer::ICloudChunkSourceFactory* const CloudChunkSourceFactory ; FStatsCollector* const StatsCollector ; FBuildPatchAppManifest* const Manifest ; } ; class FBuildStreamerFactory { public : IDirectoryBuildStreamer*)",
    "insertText": "Create(FDirectoryBuildStreamerConfig Config, FDirectoryBuildStreamerDependencies Dependencies)"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (IManifestBuildStreamer*)",
    "insertText": "Create(FManifestBuildStreamerConfig Config, FManifestBuildStreamerDependencies Dependencies)"
  }
]