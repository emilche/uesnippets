[
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FDelegateHandle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDelegateHandle"
  },
  {
    "label": "UMediaPlayer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMediaPlayer"
  },
  {
    "label": "ALevelSequenceMediaController",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ALevelSequenceMediaController"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" UObject / ObjectMacros . h \" # include \" GameFramework / Actor . h \" # include \" Evaluation / IMovieSceneCustomClockSource . h \" # include \" LevelSequenceActor . h \" # include \" SequenceMediaController . generated . h \" enum class EMediaEvent ; class FDelegateHandle ; class UMediaPlayer ;)",
    "insertText": "UCLASS(hideCategories=(Rendering, Physics, HLOD, Activation, Input, Collision), MinimalAPI)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "GENERATED_BODY() LEVELSEQUENCE_API ALevelSequenceMediaController(const FObjectInitializer& Init)"
  },
  {
    "label": "Client_Play()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "Client_Play()"
  },
  {
    "label": "Client_ConditionallyForceTime()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Client_ConditionallyForceTime(float DesyncThresholdSeconds)"
  },
  {
    "label": "GetLifetimeReplicatedProps()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "GetLifetimeReplicatedProps(TArray<FLifetimeProperty>& OutLifetimeProps)"
  },
  {
    "label": "OnTick()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "OnTick(float DeltaSeconds, float InPlayRate)"
  },
  {
    "label": "OnStartPlaying()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnStartPlaying(const FQualifiedFrameTime& InStartTime)"
  },
  {
    "label": "OnStopPlaying()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnStopPlaying(const FQualifiedFrameTime& InStopTime)"
  },
  {
    "label": "OnRequestCurrentTime()",
    "kind": "Method",
    "detail": "Function (FFrameTime)",
    "insertText": "OnRequestCurrentTime(const FQualifiedFrameTime& InCurrentTime, float InPlayRate)"
  }
]