[
  {
    "label": "BASE_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BASE_EXPORT"
  },
  {
    "label": "IOPMPowerSourceSamplingEventSource()",
    "kind": "Method",
    "detail": "Function (# ifndef BASE_POWER_MONITOR_IOPM_POWER_SOURCE_SAMPLING_EVENT_SOURCE_H_ # define BASE_POWER_MONITOR_IOPM_POWER_SOURCE_SAMPLING_EVENT_SOURCE_H_ # include \" base / base_export . h \" # include \" base / callback . h \" # include \" base / mac / scoped_ionotificationportref . h \" # include \" base / mac / scoped_ioobject . h \" # include \" base / power_monitor / sampling_event_source . h \" namespace base { class BASE_EXPORT IOPMPowerSourceSamplingEventSource : public SamplingEventSource { public :)",
    "insertText": "IOPMPowerSourceSamplingEventSource()"
  },
  {
    "label": "Start()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Start(SamplingEventCallback callback)"
  },
  {
    "label": "OnNotification()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "OnNotification(void* context, io_service_t service, natural_t message_type, void* message_argument)"
  }
]