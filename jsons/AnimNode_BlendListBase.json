[
  {
    "label": "UBlendProfile",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBlendProfile"
  },
  {
    "label": "UCurveFloat",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UCurveFloat"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FAnimNode_BlendListBase",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimNode_BlendListBase"
  },
  {
    "label": "FBlendData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBlendData"
  },
  {
    "label": "UBlendListBaseLibrary",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBlendListBaseLibrary"
  },
  {
    "label": "UENUM()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" Animation / AnimationAsset . h \" # include \" Animation / AnimNodeBase . h \" # include \" AlphaBlend . h \" # include \" AnimNode_BlendListBase . generated . h \" class UBlendProfile ; class UCurveFloat ;)",
    "insertText": "UENUM()"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (StandardBlend,Inertialization } ;)",
    "insertText": "USTRUCT(BlueprintInternalUseOnly)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() protected: UPROPERTY(EditAnywhere, EditFixedSize, Category=Links)"
  },
  {
    "label": "FAnimNode_BlendListBase()",
    "kind": "Method",
    "detail": "Function (# endif protected : struct FBlendData { FAlphaBlend Blend ; float Weight ; float RemainingTime ; float StartAlpha ; } ; TArray<FBlendData> PerBlendData ; TArray<FBlendSampleData> PerBoneSampleData ; int32 LastActiveChildIndex = 0 ; public :)",
    "insertText": "FAnimNode_BlendListBase()"
  },
  {
    "label": "Initialize_AnyThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Initialize_AnyThread(const FAnimationInitializeContext& Context)"
  },
  {
    "label": "CacheBones_AnyThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CacheBones_AnyThread(const FAnimationCacheBonesContext& Context)"
  },
  {
    "label": "Update_AnyThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Update_AnyThread(const FAnimationUpdateContext& Context)"
  },
  {
    "label": "Evaluate_AnyThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Evaluate_AnyThread(FPoseContext& Output)"
  },
  {
    "label": "GatherDebugData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GatherDebugData(FNodeDebugData& DebugData)"
  },
  {
    "label": "AddPose()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR void)",
    "insertText": "AddPose()"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (BlendTime .)",
    "insertText": "Add(0.1f)"
  },
  {
    "label": "AddDefaulted()",
    "kind": "Method",
    "detail": "Function (BlendPose .)",
    "insertText": "AddDefaulted()"
  },
  {
    "label": "RemovePose()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "RemovePose(int32 PoseIndex)"
  },
  {
    "label": "RemoveAt()",
    "kind": "Method",
    "detail": "Function (BlendTime .)",
    "insertText": "RemoveAt(PoseIndex)"
  },
  {
    "label": "GetBlendTimes()",
    "kind": "Method",
    "detail": "Function (} # endif public : const TArray<float>&)",
    "insertText": "GetBlendTimes()"
  },
  {
    "label": "GetTransitionType()",
    "kind": "Method",
    "detail": "Function (EBlendListTransitionType)",
    "insertText": "GetTransitionType()"
  },
  {
    "label": "GetBlendType()",
    "kind": "Method",
    "detail": "Function (EAlphaBlendOption)",
    "insertText": "GetBlendType()"
  },
  {
    "label": "GetResetChildOnActivation()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetResetChildOnActivation()"
  },
  {
    "label": "GetCustomBlendCurve()",
    "kind": "Method",
    "detail": "Function (UCurveFloat*)",
    "insertText": "GetCustomBlendCurve()"
  },
  {
    "label": "GetBlendProfile()",
    "kind": "Method",
    "detail": "Function (UBlendProfile*)",
    "insertText": "GetBlendProfile()"
  },
  {
    "label": "GetActiveChildIndex()",
    "kind": "Method",
    "detail": "Function (protected : int32)",
    "insertText": "GetActiveChildIndex()"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Initialize()"
  }
]