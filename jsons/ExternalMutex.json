[
  {
    "label": "FExternalMutex",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FExternalMutex"
  },
  {
    "label": "FExternalMutex()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Async / LockTags . h \" # include \" CoreTypes . h \" # include<atomic> # define namespace UE { class FExternalMutex final { public :)",
    "insertText": "FExternalMutex(std::atomic<uint8>& InState) : State(InState)"
  },
  {
    "label": "FExternalMutex()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FExternalMutex(std::atomic<uint8>& InState, FAcquireLock) : State(InState)"
  },
  {
    "label": "fetch_or()",
    "kind": "Method",
    "detail": "Function (State .)",
    "insertText": "fetch_or(IsLockedFlag, std::memory_order_acquire)"
  },
  {
    "label": "FExternalMutex()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FExternalMutex(const FExternalMutex&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FExternalMutex&)",
    "insertText": "operator(const FExternalMutex&)"
  },
  {
    "label": "IsLocked()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsLocked()"
  },
  {
    "label": "TryLock()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "TryLock()"
  },
  {
    "label": "load()",
    "kind": "Method",
    "detail": "Function (uint8 Expected = State .)",
    "insertText": "load(std::memory_order_acquire)"
  },
  {
    "label": "Unlock()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Unlock()"
  },
  {
    "label": "Expected()",
    "kind": "Method",
    "detail": "Function (uint8)",
    "insertText": "Expected(State.load(std::memory_order_acquire) | IsLockedFlag)"
  },
  {
    "label": "LockSlow()",
    "kind": "Method",
    "detail": "Function (} private : void)",
    "insertText": "LockSlow()"
  },
  {
    "label": "UnlockSlow()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnlockSlow()"
  }
]