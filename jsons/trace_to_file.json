[
  {
    "label": "TraceToFile",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TraceToFile"
  },
  {
    "label": "TraceToFile()",
    "kind": "Method",
    "detail": "Function (# ifndef BASE_TEST_TRACE_TO_FILE_H_ # define BASE_TEST_TRACE_TO_FILE_H_ # include \" base / files / file_path . h \" namespace base { namespace test { class TraceToFile { public :)",
    "insertText": "TraceToFile()"
  },
  {
    "label": "BeginTracingFromCommandLineOptions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginTracingFromCommandLineOptions()"
  },
  {
    "label": "BeginTracing()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginTracing(const base::FilePath& path, const std::string& categories)"
  },
  {
    "label": "EndTracingIfNeeded()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EndTracingIfNeeded()"
  },
  {
    "label": "WriteFileHeader()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "WriteFileHeader()"
  },
  {
    "label": "AppendFileFooter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AppendFileFooter()"
  },
  {
    "label": "TraceOutputCallback()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TraceOutputCallback(const std::string& data)"
  }
]