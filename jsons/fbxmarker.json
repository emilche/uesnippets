[
  {
    "label": "FBXSDK_DLL",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBXSDK_DLL"
  },
  {
    "label": "EType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EType"
  },
  {
    "label": "ELook",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ELook"
  },
  {
    "label": "FBXSDK_OBJECT_DECLARE()",
    "kind": "Method",
    "detail": "Function (# ifndef _FBXSDK_SCENE_GEOMETRY_MARKER_H_ # define _FBXSDK_SCENE_GEOMETRY_MARKER_H_ # include<fbxsdk / fbxsdk_def . h> # include<fbxsdk / scene / geometry / fbxnodeattribute . h> # include<fbxsdk / fbxsdk_nsbegin . h> class FBXSDK_DLL FbxMarker : public FbxNodeAttribute {)",
    "insertText": "FBXSDK_OBJECT_DECLARE(FbxMarker, FbxNodeAttribute)"
  },
  {
    "label": "GetAttributeType()",
    "kind": "Method",
    "detail": "Function (public : FbxNodeAttribute::EType)",
    "insertText": "GetAttributeType()"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "SetType()",
    "kind": "Method",
    "detail": "Function (enum EType { eStandard,eOptical,eEffectorFK,eEffectorIK } ; void)",
    "insertText": "SetType(EType pType)"
  },
  {
    "label": "GetType()",
    "kind": "Method",
    "detail": "Function (EType)",
    "insertText": "GetType()"
  },
  {
    "label": "GetDefaultOcclusion()",
    "kind": "Method",
    "detail": "Function (enum ELook { eCube,eHardCross,eLightCross,eSphere,eCapsule,eBox,eBone,eCircle,eSquare,eStick,eNone } ; double)",
    "insertText": "GetDefaultOcclusion()"
  },
  {
    "label": "SetDefaultOcclusion()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDefaultOcclusion(double pOcclusion)"
  },
  {
    "label": "SetDefaultIKReachTranslation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDefaultIKReachTranslation(double pIKReachTranslation)"
  },
  {
    "label": "SetDefaultIKReachRotation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDefaultIKReachRotation(double pIKReachRotation)"
  },
  {
    "label": "SetDefaultIKPull()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDefaultIKPull(double pIKPull)"
  },
  {
    "label": "SetDefaultIKPullHips()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDefaultIKPullHips(double pIKPullHips)"
  },
  {
    "label": "GetDefaultColor()",
    "kind": "Method",
    "detail": "Function (FbxColor&)",
    "insertText": "GetDefaultColor(FbxColor& pColor)"
  },
  {
    "label": "SetDefaultColor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDefaultColor(FbxColor& pColor)"
  },
  {
    "label": "GetOcclusion()",
    "kind": "Method",
    "detail": "Function (FbxPropertyT<ELook> Look ; FbxPropertyT<FbxBool> DrawLink ; FbxPropertyT<FbxDouble> Size ; FbxPropertyT<FbxBool> ShowLabel ; FbxPropertyT<FbxDouble3> IKPivot ; FbxProperty)",
    "insertText": "GetOcclusion()"
  },
  {
    "label": "GetIKReachTranslation()",
    "kind": "Method",
    "detail": "Function (FbxProperty)",
    "insertText": "GetIKReachTranslation()"
  },
  {
    "label": "GetIKReachRotation()",
    "kind": "Method",
    "detail": "Function (FbxProperty)",
    "insertText": "GetIKReachRotation()"
  },
  {
    "label": "GetIKPull()",
    "kind": "Method",
    "detail": "Function (FbxProperty)",
    "insertText": "GetIKPull()"
  },
  {
    "label": "GetIKPullHips()",
    "kind": "Method",
    "detail": "Function (FbxProperty)",
    "insertText": "GetIKPullHips()"
  },
  {
    "label": "Copy()",
    "kind": "Method",
    "detail": "Function (# ifndef DOXYGEN_SHOULD_SKIP_THIS FbxObject&)",
    "insertText": "Copy(const FbxObject& pObject)"
  },
  {
    "label": "ConstructProperties()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "ConstructProperties(bool pForceSet)"
  },
  {
    "label": "GetTypeName()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "GetTypeName()"
  },
  {
    "label": "GetTypeFlags()",
    "kind": "Method",
    "detail": "Function (FbxStringList)",
    "insertText": "GetTypeFlags()"
  },
  {
    "label": "FbxTypeOf()",
    "kind": "Method",
    "detail": "Function (EType mType ; # endif } ; EFbxType)",
    "insertText": "FbxTypeOf(const FbxMarker::ELook&)"
  }
]