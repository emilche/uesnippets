[
  {
    "label": "FoldingSetNodeID",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FoldingSetNodeID"
  },
  {
    "label": "MDNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MDNode"
  },
  {
    "label": "raw_ostream",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "raw_ostream"
  },
  {
    "label": "ModuleSlotTracker",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ModuleSlotTracker"
  },
  {
    "label": "MachinePointerInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "MachinePointerInfo"
  },
  {
    "label": "MachineMemOperand",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MachineMemOperand"
  },
  {
    "label": "MemOperandFlags",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "MemOperandFlags"
  },
  {
    "label": "MachinePointerInfo()",
    "kind": "Method",
    "detail": "Function (# ifndef LLVM_CODEGEN_MACHINEMEMOPERAND_H # define LLVM_CODEGEN_MACHINEMEMOPERAND_H # include \" llvm / ADT / PointerUnion . h \" # include \" llvm / CodeGen / PseudoSourceValue . h \" # include \" llvm / IR / Metadata . h \" # include \" llvm / IR / Value . h \" # include \" llvm / Support / DataTypes . h \" namespace llvm { class FoldingSetNodeID ; class MDNode ; class raw_ostream ; class ModuleSlotTracker ; struct MachinePointerInfo { PointerUnion<const Value*,const PseudoSourceValue*> V ; int64_t Offset ;)",
    "insertText": "MachinePointerInfo(const Value *v = nullptr, int64_t offset = 0) : V(v), Offset(offset)"
  },
  {
    "label": "MachinePointerInfo()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "MachinePointerInfo(const PseudoSourceValue *v, int64_t offset = 0) : V(v), Offset(offset)"
  },
  {
    "label": "getWithOffset()",
    "kind": "Method",
    "detail": "Function (} MachinePointerInfo)",
    "insertText": "getWithOffset(int64_t O)"
  },
  {
    "label": "getAddrSpace()",
    "kind": "Method",
    "detail": "Function (} unsigned)",
    "insertText": "getAddrSpace()"
  },
  {
    "label": "getConstantPool()",
    "kind": "Method",
    "detail": "Function (MachinePointerInfo)",
    "insertText": "getConstantPool()"
  },
  {
    "label": "getFixedStack()",
    "kind": "Method",
    "detail": "Function (MachinePointerInfo)",
    "insertText": "getFixedStack(int FI, int64_t offset = 0)"
  },
  {
    "label": "getJumpTable()",
    "kind": "Method",
    "detail": "Function (MachinePointerInfo)",
    "insertText": "getJumpTable()"
  },
  {
    "label": "getGOT()",
    "kind": "Method",
    "detail": "Function (MachinePointerInfo)",
    "insertText": "getGOT()"
  },
  {
    "label": "getStack()",
    "kind": "Method",
    "detail": "Function (MachinePointerInfo)",
    "insertText": "getStack(int64_t Offset)"
  },
  {
    "label": "MachineMemOperand()",
    "kind": "Method",
    "detail": "Function (} ; class MachineMemOperand { MachinePointerInfo PtrInfo ; uint64_t Size ; unsigned Flags ; AAMDNodes AAInfo ; const MDNode* Ranges ; public : enum MemOperandFlags { MOLoad = 1,MOStore = 2,MOVolatile = 4,MONonTemporal = 8,MOInvariant = 1 6,MOTargetStartBit = 5,MOTargetNumBits = 3,MOMaxBits = 8 } ;)",
    "insertText": "MachineMemOperand(MachinePointerInfo PtrInfo, unsigned flags, uint64_t s, unsigned base_alignment, const AAMDNodes &AAInfo = AAMDNodes(), const MDNode *Ranges = nullptr)"
  },
  {
    "label": "getPointerInfo()",
    "kind": "Method",
    "detail": "Function (const MachinePointerInfo&)",
    "insertText": "getPointerInfo()"
  },
  {
    "label": "getPseudoValue()",
    "kind": "Method",
    "detail": "Function (} const PseudoSourceValue*)",
    "insertText": "getPseudoValue()"
  },
  {
    "label": "getOpaqueValue()",
    "kind": "Method",
    "detail": "Function (} const void*)",
    "insertText": "getOpaqueValue()"
  },
  {
    "label": "getFlags()",
    "kind": "Method",
    "detail": "Function (} unsigned int)",
    "insertText": "getFlags()"
  },
  {
    "label": "setFlags()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "setFlags(unsigned f)"
  },
  {
    "label": "Flags()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Flags(f & ((1 << MOMaxBits) - 1))"
  },
  {
    "label": "getOffset()",
    "kind": "Method",
    "detail": "Function (} int64_t)",
    "insertText": "getOffset()"
  },
  {
    "label": "getSize()",
    "kind": "Method",
    "detail": "Function (} uint64_t)",
    "insertText": "getSize()"
  },
  {
    "label": "getBaseAlignment()",
    "kind": "Method",
    "detail": "Function (uint64_t)",
    "insertText": "getBaseAlignment()"
  },
  {
    "label": "getAAInfo()",
    "kind": "Method",
    "detail": "Function (} AAMDNodes)",
    "insertText": "getAAInfo()"
  },
  {
    "label": "refineAlignment()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "refineAlignment(const MachineMemOperand *MMO)"
  },
  {
    "label": "setValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setValue(const Value *NewSV)"
  },
  {
    "label": "setValue()",
    "kind": "Method",
    "detail": "Function (PtrInfo . V = NewSV ; } void)",
    "insertText": "setValue(const PseudoSourceValue *NewSV)"
  },
  {
    "label": "setOffset()",
    "kind": "Method",
    "detail": "Function (PtrInfo . V = NewSV ; } void)",
    "insertText": "setOffset(int64_t NewOffset)"
  },
  {
    "label": "Profile()",
    "kind": "Method",
    "detail": "Function (PtrInfo . Offset = NewOffset ; } void)",
    "insertText": "Profile(FoldingSetNodeID &ID)"
  },
  {
    "label": "print()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "print(raw_ostream &OS)"
  },
  {
    "label": "print()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "print(raw_ostream &OS, ModuleSlotTracker &MST)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "operator(const MachineMemOperand &LHS, const MachineMemOperand &RHS)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} } ; raw_ostream&)",
    "insertText": "operator(raw_ostream &OS, const MachineMemOperand &MRO)"
  },
  {
    "label": "print()",
    "kind": "Method",
    "detail": "Function (MRO .)",
    "insertText": "print(OS)"
  }
]