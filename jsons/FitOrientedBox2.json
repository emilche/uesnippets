[
  {
    "label": "EBox2FitCriteria",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EBox2FitCriteria"
  },
  {
    "label": "FitOrientedBox2Points()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Math / Vector . h \" # include \" VectorTypes . h \" # include \" OrientedBoxTypes . h \" namespace UE { namespace Geometry { enum EBox2FitCriteria { Area,Perimeter } ; template<RealType> TOrientedBox2<RealType>)",
    "insertText": "FitOrientedBox2Points(TArrayView<const TVector2<RealType>> Points, TFunctionRef<RealType(RealType, RealType)> FitFn)"
  },
  {
    "label": "FitOrientedBox2Points()",
    "kind": "Method",
    "detail": "Function (template<RealType> TOrientedBox2<RealType>)",
    "insertText": "FitOrientedBox2Points(TArrayView<const TVector2<RealType>> Points, EBox2FitCriteria FitMethod = EBox2FitCriteria::Area)"
  },
  {
    "label": "FitOrientedBox2Points()",
    "kind": "Method",
    "detail": "Function (} else { return)",
    "insertText": "FitOrientedBox2Points(Points, (TFunctionRef<RealType(RealType, RealType)>)[](RealType W, RealType H) -> RealType { return W + H; })"
  },
  {
    "label": "FitOrientedBox2SimplePolygon()",
    "kind": "Method",
    "detail": "Function (} } template<RealType> TOrientedBox2<RealType>)",
    "insertText": "FitOrientedBox2SimplePolygon(TArrayView<const TVector2<RealType>> Polygon, TFunctionRef<RealType(RealType, RealType)> FitFn)"
  },
  {
    "label": "FitOrientedBox2SimplePolygon()",
    "kind": "Method",
    "detail": "Function (template<RealType> TOrientedBox2<RealType>)",
    "insertText": "FitOrientedBox2SimplePolygon(TArrayView<const TVector2<RealType>> Polygon, EBox2FitCriteria FitMethod = EBox2FitCriteria::Area)"
  },
  {
    "label": "FitOrientedBox2SimplePolygon()",
    "kind": "Method",
    "detail": "Function (} else { return)",
    "insertText": "FitOrientedBox2SimplePolygon(Polygon, (TFunctionRef<RealType(RealType, RealType)>)[](RealType W, RealType H) -> RealType { return W + H; })"
  },
  {
    "label": "FitOrientedBox2ConvexHull()",
    "kind": "Method",
    "detail": "Function (} } template<RealType> TOrientedBox2<RealType>)",
    "insertText": "FitOrientedBox2ConvexHull(int32 NumPts, TFunctionRef<TVector2<RealType>(int32)> GetHullPt, TFunctionRef<RealType(RealType, RealType)> FitFn)"
  },
  {
    "label": "FitOrientedBox2ConvexHull()",
    "kind": "Method",
    "detail": "Function (template<RealType> TOrientedBox2<RealType>)",
    "insertText": "FitOrientedBox2ConvexHull(int32 NumPts, TFunctionRef<TVector2<RealType>(int32)> GetHullPt, EBox2FitCriteria FitMethod = EBox2FitCriteria::Area)"
  },
  {
    "label": "FitOrientedBox2ConvexHull()",
    "kind": "Method",
    "detail": "Function (} else { return)",
    "insertText": "FitOrientedBox2ConvexHull(NumPts, GetHullPt, (TFunctionRef<RealType(RealType, RealType)>)[](RealType W, RealType H) -> RealType { return W + H; })"
  }
]