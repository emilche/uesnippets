[
  {
    "label": "Lock",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Lock"
  },
  {
    "label": "ConditionVariable",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ConditionVariable"
  },
  {
    "label": "AutoNativeLock",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AutoNativeLock"
  },
  {
    "label": "ScopedHandleVerifier",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ScopedHandleVerifier"
  },
  {
    "label": "implements",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "implements"
  },
  {
    "label": "BASE_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BASE_EXPORT"
  },
  {
    "label": "base",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "base"
  },
  {
    "label": "base",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "base"
  },
  {
    "label": "base",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "base"
  },
  {
    "label": "base",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "base"
  },
  {
    "label": "LockType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "LockType"
  },
  {
    "label": "SCOPED_LOCKABLE",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SCOPED_LOCKABLE"
  },
  {
    "label": "AlreadyAcquired",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "AlreadyAcquired"
  },
  {
    "label": "LockType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "LockType"
  },
  {
    "label": "SCOPED_LOCKABLE",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SCOPED_LOCKABLE"
  },
  {
    "label": "LockType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "LockType"
  },
  {
    "label": "BasicAutoUnlock",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BasicAutoUnlock"
  },
  {
    "label": "LockType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "LockType"
  },
  {
    "label": "SCOPED_LOCKABLE",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SCOPED_LOCKABLE"
  },
  {
    "label": "LockType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "LockType"
  },
  {
    "label": "SCOPED_LOCKABLE",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SCOPED_LOCKABLE"
  },
  {
    "label": "LockImpl()",
    "kind": "Method",
    "detail": "Function (endif)",
    "insertText": "LockImpl()"
  },
  {
    "label": "Try()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Try()"
  },
  {
    "label": "Lock()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Lock()"
  },
  {
    "label": "Unlock()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Unlock()"
  },
  {
    "label": "PriorityInheritanceAvailable()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PriorityInheritanceAvailable()"
  },
  {
    "label": "LockInternalWithTracking()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LockInternalWithTracking()"
  },
  {
    "label": "dcheck_trylock_result()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "dcheck_trylock_result(int rv)"
  },
  {
    "label": "dcheck_unlock_result()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "dcheck_unlock_result(int rv)"
  }
]