[
  {
    "label": "FTaskTrackEvent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTaskTrackEvent"
  },
  {
    "label": "INSIGHTS_DECLARE_RTTI()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" Async / TaskTrace . h \" # include \" Insights / TaskGraphProfiler / TaskGraphProfilerManager . h \" # include \" Insights / ViewModels / TimingEvent . h \" namespace UE::Insights::TaskGraphProfiler { class FTaskTrackEvent : public FTimingEvent {)",
    "insertText": "INSIGHTS_DECLARE_RTTI(FTaskTrackEvent, FTimingEvent) public: FTaskTrackEvent(const TSharedRef<const FBaseTimingTrack> InTrack, double InStartTime, double InEndTime, uint32 InDepth, ETaskEventType InTaskEventType)"
  },
  {
    "label": "FTaskTrackEvent()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FTaskTrackEvent()"
  },
  {
    "label": "GetStartLabel()",
    "kind": "Method",
    "detail": "Function (} FString)",
    "insertText": "GetStartLabel()"
  },
  {
    "label": "GetEndLabel()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetEndLabel()"
  },
  {
    "label": "GetEventName()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetEventName()"
  },
  {
    "label": "GetTaskEventType()",
    "kind": "Method",
    "detail": "Function (ETaskEventType)",
    "insertText": "GetTaskEventType()"
  }
]