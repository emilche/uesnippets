[
  {
    "label": "__select_2nd",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "__select_2nd"
  },
  {
    "label": "_Tp",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_Tp"
  },
  {
    "label": "_Up",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_Up"
  },
  {
    "label": "_LIBCPP_TEMPLATE_VIS",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_LIBCPP_TEMPLATE_VIS"
  },
  {
    "label": "_Tp",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_Tp"
  },
  {
    "label": "_Arg",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_Arg"
  },
  {
    "label": "_Tp",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_Tp"
  },
  {
    "label": "_Arg",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_Arg"
  },
  {
    "label": "_Tp",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_Tp"
  },
  {
    "label": "_Arg",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_Arg"
  },
  {
    "label": "__is_assignable_imp",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "__is_assignable_imp"
  },
  {
    "label": "_Tp",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_Tp"
  },
  {
    "label": "_Arg",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_Arg"
  },
  {
    "label": "__is_assignable_imp",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "__is_assignable_imp"
  },
  {
    "label": "_Tp",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_Tp"
  },
  {
    "label": "_Arg",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_Arg"
  },
  {
    "label": "is_assignable",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "is_assignable"
  },
  {
    "label": "_Tp",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_Tp"
  },
  {
    "label": "_Arg",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_Arg"
  },
  {
    "label": "__is_assignable_test()",
    "kind": "Method",
    "detail": "Function (true_type>::type)",
    "insertText": "__is_assignable_test(int)"
  },
  {
    "label": "__is_assignable_test()",
    "kind": "Method",
    "detail": "Function (false_type)",
    "insertText": "__is_assignable_test(...)"
  }
]