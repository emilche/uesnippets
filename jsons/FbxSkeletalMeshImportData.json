[
  {
    "label": "USkeletalMesh",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USkeletalMesh"
  },
  {
    "label": "USkeleton",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USkeleton"
  },
  {
    "label": "FSkeletalMeshImportData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSkeletalMeshImportData"
  },
  {
    "label": "FSkeletalMeshLODModel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSkeletalMeshLODModel"
  },
  {
    "label": "FExistingSkelMeshData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FExistingSkelMeshData"
  },
  {
    "label": "FReferenceSkeleton",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FReferenceSkeleton"
  },
  {
    "label": "FSkeletalMaterial",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSkeletalMaterial"
  },
  {
    "label": "FRawBoneInfluence",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRawBoneInfluence"
  },
  {
    "label": "FVertex",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FVertex"
  },
  {
    "label": "EFBXImportContentType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EFBXImportContentType"
  },
  {
    "label": "UFbxSkeletalMeshImportData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UFbxSkeletalMeshImportData"
  },
  {
    "label": "UENUM()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" Factories / FbxMeshImportData . h \" # include \" MeshBuild . h \" # include \" FbxSkeletalMeshImportData . generated . h \" class USkeletalMesh ; class USkeleton ; class FSkeletalMeshImportData ; class FSkeletalMeshLODModel ; struct FExistingSkelMeshData ; struct FReferenceSkeleton ; struct FSkeletalMaterial ; namespace SkeletalMeshImportData { struct FRawBoneInfluence ; struct FVertex ; })",
    "insertText": "UENUM(BlueprintType)"
  },
  {
    "label": "UMETA()",
    "kind": "Method",
    "detail": "Function (FBXICT_All)",
    "insertText": "UMETA(DisplayName = \"Geometry and Skinning Weights.\", ToolTip = \"Import all fbx content: geometry, skinning and weights.\"), FBXICT_Geometry UMETA(DisplayName = \"Geometry Only\", ToolTip = \"Import the skeletal mesh geometry only (will create a default skeleton, or map the geometry to the existing one). Morph and LOD can be imported with it.\"), FBXICT_SkinningWeights UMETA(DisplayName = \"Skinning Weights Only\", ToolTip = \"Import the skeletal mesh skinning and weights only (no geometry will be imported). Morph and LOD will not be imported with this settings.\")"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UCLASS(BlueprintType, MinimalAPI)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() public: virtual void Serialize(FArchive& Ar)"
  },
  {
    "label": "GetImportDataForSkeletalMesh()",
    "kind": "Method",
    "detail": "Function (UFbxSkeletalMeshImportData*)",
    "insertText": "GetImportDataForSkeletalMesh(USkeletalMesh* SkeletalMesh, UFbxSkeletalMeshImportData* TemplateForCreation)"
  },
  {
    "label": "CanEditChange()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanEditChange(const FProperty* InProperty)"
  },
  {
    "label": "GetImportContentFilename()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetImportContentFilename(FString& OutFilename, FString& OutFilenameLabel)"
  },
  {
    "label": "AppendAssetRegistryTags()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AppendAssetRegistryTags(FAssetRegistryTagsContext Context)"
  }
]