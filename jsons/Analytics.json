[
  {
    "label": "IAnalyticsProvider",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IAnalyticsProvider"
  },
  {
    "label": "IAnalyticsTracer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IAnalyticsTracer"
  },
  {
    "label": "FAnalytics",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAnalytics"
  },
  {
    "label": "ConfigFromIni",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ConfigFromIni"
  },
  {
    "label": "DECLARE_LOG_CATEGORY_EXTERN()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" AnalyticsBuildType . h \" # include \" AnalyticsProviderConfigurationDelegate . h \" # include \" Containers / UnrealString . h \" # include \" CoreGlobals . h \" # include \" CoreMinimal . h \" # include \" Delegates / Delegate . h \" # include \" HAL / Platform . h \" # include \" Logging / LogMacros . h \" # include \" Misc / ConfigCacheIni . h \" # include \" Modules / ModuleInterface . h \" # include \" Modules / ModuleManager . h \" # include \" Templates / SharedPointer . h \" # include \" UObject / NameTypes . h \")",
    "insertText": "DECLARE_LOG_CATEGORY_EXTERN(LogAnalytics, Display, All)"
  },
  {
    "label": "FAnalytics()",
    "kind": "Method",
    "detail": "Function (class IAnalyticsProvider ; class IAnalyticsTracer ; class FAnalytics : public IModuleInterface { public :)",
    "insertText": "FAnalytics()"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (FAnalytics&)",
    "insertText": "Get()"
  },
  {
    "label": "IsAvailable()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsAvailable()"
  },
  {
    "label": "CreateAnalyticsProvider()",
    "kind": "Method",
    "detail": "Function (} public : TSharedPtr<IAnalyticsProvider>)",
    "insertText": "CreateAnalyticsProvider(const FName& ProviderModuleName, const FAnalyticsProviderConfigurationDelegate& GetConfigValue)"
  },
  {
    "label": "CreateAnalyticsTracer()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<IAnalyticsTracer>)",
    "insertText": "CreateAnalyticsTracer()"
  },
  {
    "label": "GetDefaultConfiguredProvider()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<IAnalyticsProvider>)",
    "insertText": "GetDefaultConfiguredProvider()"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (FAnalytics::ConfigFromIni AnalyticsConfig ; return)",
    "insertText": "Get().CreateAnalyticsProvider( FAnalytics::ConfigFromIni::GetDefaultProviderModuleName(), FAnalyticsProviderConfigurationDelegate::CreateRaw( &AnalyticsConfig, &FAnalytics::ConfigFromIni::GetValue))"
  },
  {
    "label": "ConfigFromIni()",
    "kind": "Method",
    "detail": "Function (} public : struct ConfigFromIni {)",
    "insertText": "ConfigFromIni() :IniName(GEngineIni)"
  },
  {
    "label": "SetSectionNameByBuildType()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSectionNameByBuildType(GetAnalyticsBuildType())"
  },
  {
    "label": "ConfigFromIni()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "ConfigFromIni(EAnalyticsBuildType InBuildType) :IniName(GEngineIni)"
  },
  {
    "label": "SetSectionNameByBuildType()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSectionNameByBuildType(InBuildType)"
  },
  {
    "label": "ConfigFromIni()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "ConfigFromIni(const FString& InIniName, const FString& InSectionName) :IniName(InIniName) ,SectionName(InSectionName)"
  },
  {
    "label": "ConfigFromIni()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "ConfigFromIni(const FString& InIniName, const FString& SectionNameDevelopment, const FString& SectionNameDebug, const FString& SectionNameTest, const FString& SectionNameRelease) :IniName(InIniName)"
  },
  {
    "label": "GetAnalyticsBuildType()",
    "kind": "Method",
    "detail": "Function (EAnalyticsBuildType BuildType =)",
    "insertText": "GetAnalyticsBuildType()"
  },
  {
    "label": "GetValue()",
    "kind": "Method",
    "detail": "Function (SectionName = BuildType = = EAnalyticsBuildType::Release ? SectionNameRelease : BuildType = = EAnalyticsBuildType::Debug ? SectionNameDebug : BuildType = = EAnalyticsBuildType::Test ? SectionNameTest : SectionNameDevelopment ; } FString)",
    "insertText": "GetValue(const FString& KeyName, bool bIsRequired)"
  },
  {
    "label": "GetDefaultProviderModuleName()",
    "kind": "Method",
    "detail": "Function (} FName)",
    "insertText": "GetDefaultProviderModuleName()"
  },
  {
    "label": "GetString()",
    "kind": "Method",
    "detail": "Function (FString ProviderModuleName ; GConfig ->)",
    "insertText": "GetString(TEXT(\"Analytics\"), TEXT(\"ProviderModuleName\"), ProviderModuleName, GEngineIni)"
  },
  {
    "label": "SetSectionNameByBuildType()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetSectionNameByBuildType(EAnalyticsBuildType InBuildType)"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (SectionName = InBuildType = = EAnalyticsBuildType::Release ?)",
    "insertText": "TEXT(\"Analytics\") : InBuildType == EAnalyticsBuildType::Debug ? TEXT(\"AnalyticsDebug\") : InBuildType == EAnalyticsBuildType::Test ? TEXT(\"AnalyticsTest\") : TEXT(\"AnalyticsDevelopment\")"
  },
  {
    "label": "GetConfigValueFromIni()",
    "kind": "Method",
    "detail": "Function (} FString IniName ; FString SectionName ; } ; FString)",
    "insertText": "GetConfigValueFromIni(const FString& IniName, const FString& SectionName, const FString& KeyName, bool bIsRequired)"
  },
  {
    "label": "WriteConfigValueToIni()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WriteConfigValueToIni(const FString& IniName, const FString& SectionName, const FString& KeyName, const FString& Value)"
  },
  {
    "label": "StartupModule()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "StartupModule()"
  },
  {
    "label": "ShutdownModule()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ShutdownModule()"
  }
]