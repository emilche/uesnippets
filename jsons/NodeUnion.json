[
  {
    "label": "that",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "that"
  },
  {
    "label": "NodeUnion",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "NodeUnion"
  },
  {
    "label": "isn",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "isn"
  },
  {
    "label": "NodeUnion",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "NodeUnion"
  },
  {
    "label": "template",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "template"
  },
  {
    "label": "CopyTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "CopyTraits"
  },
  {
    "label": "NodeUnion",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "NodeUnion"
  },
  {
    "label": "NodeUnion",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "NodeUnion"
  },
  {
    "label": "NodeUnion",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "NodeUnion"
  },
  {
    "label": "CopyTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "CopyTraits"
  },
  {
    "label": "CopyTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "CopyTraits"
  },
  {
    "label": "CopyTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "CopyTraits"
  },
  {
    "label": "CopyTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "CopyTraits"
  },
  {
    "label": "CopyTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "CopyTraits"
  },
  {
    "label": "static_assert()",
    "kind": "Method",
    "detail": "Function (types)",
    "insertText": "static_assert(!ValueTraits<ValueT>::IsVec &&\n        !ValueTraits<ValueT>::IsMat &&\n        !ValueTraits<ValueT>::IsQuat &&\n        !std::is_same<ValueT, math::Coord>::value &&\n        !std::is_arithmetic<ValueT>::value,\n        \"Unexpected instantiation of NodeUnion\")"
  }
]