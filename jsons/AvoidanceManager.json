[
  {
    "label": "INavEdgeProviderInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "INavEdgeProviderInterface"
  },
  {
    "label": "IRVOAvoidanceInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IRVOAvoidanceInterface"
  },
  {
    "label": "UAvoidanceManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAvoidanceManager"
  },
  {
    "label": "UMovementComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovementComponent"
  },
  {
    "label": "UCharacterMovementComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UCharacterMovementComponent"
  },
  {
    "label": "FNavAvoidanceData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FNavAvoidanceData"
  },
  {
    "label": "FVelocityAvoidanceCone",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FVelocityAvoidanceCone"
  },
  {
    "label": "DECLARE_CYCLE_STAT_EXTERN()",
    "kind": "Method",
    "detail": "Function (# pragma once # if UE_ENABLE_INCLUDE_ORDER_DEPRECATED_IN_5_4 # include \" CoreMinimal . h \" # endif # include \" Stats / Stats . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / Object . h \" # include \" Engine / EngineTypes . h \" # include \" Misc / CoreMisc . h \" # include \" UObject / ScriptMacros . h \" # include \" AvoidanceManager . generated . h \" class INavEdgeProviderInterface ; class IRVOAvoidanceInterface ; class UAvoidanceManager ; class UMovementComponent ; class UCharacterMovementComponent ;)",
    "insertText": "DECLARE_CYCLE_STAT_EXTERN(TEXT(\"Avoidance Time\"),STAT_AI_ObstacleAvoidance,STATGROUP_AI,)"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (class UAvoidanceManager ;)",
    "insertText": "USTRUCT()"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY()"
  },
  {
    "label": "FNavAvoidanceData()",
    "kind": "Method",
    "detail": "Function (FVector Velocity ; float RemainingTimeToLive ; float Radius ; float HalfHeight ; float Weight ; double OverrideWeightTime ; int32 GroupMask ; int32 GroupsToAvoid ; int32 GroupsToIgnore ; float TestRadius2D ;)",
    "insertText": "FNavAvoidanceData()"
  },
  {
    "label": "FNavAvoidanceData()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FNavAvoidanceData(UAvoidanceManager* Manager, IRVOAvoidanceInterface* AvoidanceComp)"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Init(UAvoidanceManager* Avoidance, const FVector& InCenter, float InRadius, float InHalfHeight, const FVector& InVelocity, float InWeight = 0.5f, int32 InGroupMask = 1, int32 InGroupsToAvoid = 0xffffffff, int32 InGroupsToIgnore = 0, float InTestRadius2D = 500.0f)"
  },
  {
    "label": "ShouldIgnoreGroup()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "ShouldIgnoreGroup(int32 OtherGroupMask)"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (} } ; struct FVelocityAvoidanceCone { FPlane ConePlane [ 2 ] ; } ;)",
    "insertText": "UCLASS(config=Engine, Blueprintable, MinimalAPI)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() UPROPERTY(EditAnywhere, Category=\"Avoidance\", config, meta=(ClampMin = \"0.0\"))"
  },
  {
    "label": "RegisterMovementComponent()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RegisterMovementComponent(UCharacterMovementComponent* MovementComp, float AvoidanceWeight = 0.5f)"
  },
  {
    "label": "GetAvoidanceObjectForUID()",
    "kind": "Method",
    "detail": "Function (FNavAvoidanceData*)",
    "insertText": "GetAvoidanceObjectForUID(int32 AvoidanceUID)"
  },
  {
    "label": "GetAvoidanceVelocityForComponent()",
    "kind": "Method",
    "detail": "Function (FVector)",
    "insertText": "GetAvoidanceVelocityForComponent(UCharacterMovementComponent* MovementComp)"
  },
  {
    "label": "GetAvoidanceVelocityIgnoringUID()",
    "kind": "Method",
    "detail": "Function (FVector)",
    "insertText": "GetAvoidanceVelocityIgnoringUID(const FNavAvoidanceData& AvoidanceData, float DeltaTime, int32 IgnoreThisUID)"
  },
  {
    "label": "GetAvoidanceVelocity()",
    "kind": "Method",
    "detail": "Function (FVector)",
    "insertText": "GetAvoidanceVelocity(const FNavAvoidanceData& AvoidanceData, float DeltaTime)"
  },
  {
    "label": "UpdateRVO()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateRVO(UMovementComponent* MovementComp)"
  },
  {
    "label": "UpdateRVO()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateRVO(UCharacterMovementComponent* MovementComp)"
  },
  {
    "label": "OverrideToMaxWeight()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OverrideToMaxWeight(int32 AvoidanceUID, float Duration)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (#)",
    "insertText": "if(UE_BUILD_SHIPPING || UE_BUILD_TEST) ENGINE_API bool IsDebugOnForUID(int32 AvoidanceUID)"
  },
  {
    "label": "IsDebugOnForAll()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsDebugOnForAll()"
  },
  {
    "label": "IsDebugEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsDebugEnabled(int32 AvoidanceUID)"
  },
  {
    "label": "AvoidanceDebugForUID()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AvoidanceDebugForUID(int32 AvoidanceUID, bool TurnOn)"
  },
  {
    "label": "AvoidanceDebugForAll()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AvoidanceDebugForAll(bool TurnOn)"
  },
  {
    "label": "AvoidanceSystemToggle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AvoidanceSystemToggle(bool TurnOn)"
  },
  {
    "label": "HandleToggleDebugAll()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleToggleDebugAll(const TCHAR* Cmd, FOutputDevice& Ar)"
  },
  {
    "label": "HandleToggleAvoidance()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleToggleAvoidance(const TCHAR* Cmd, FOutputDevice& Ar)"
  },
  {
    "label": "SetNavEdgeProvider()",
    "kind": "Method",
    "detail": "Function (# endif void)",
    "insertText": "SetNavEdgeProvider(INavEdgeProviderInterface* InEdgeProvider)"
  },
  {
    "label": "RemoveAvoidanceObject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveAvoidanceObject(const int32 AvoidanceUID)"
  },
  {
    "label": "IsAutoPurgeEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsAutoPurgeEnabled()"
  },
  {
    "label": "RemoveOutdatedObjects()",
    "kind": "Method",
    "detail": "Function (FTimerHandle TimerHandle_RemoveOutdatedObjects ; void)",
    "insertText": "RemoveOutdatedObjects()"
  },
  {
    "label": "RequestUpdateTimer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RequestUpdateTimer()"
  },
  {
    "label": "UpdateRVO_Internal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateRVO_Internal(int32 AvoidanceUID, const FNavAvoidanceData& AvoidanceData)"
  },
  {
    "label": "GetAvoidanceVelocity_Internal()",
    "kind": "Method",
    "detail": "Function (FVector)",
    "insertText": "GetAvoidanceVelocity_Internal(const FNavAvoidanceData& AvoidanceData, float DeltaTime, int32 *IgnoreThisUID = NULL)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (#)",
    "insertText": "if(UE_BUILD_SHIPPING || UE_BUILD_TEST)"
  }
]