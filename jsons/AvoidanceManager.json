[
  {
    "label": "INavEdgeProviderInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "INavEdgeProviderInterface"
  },
  {
    "label": "IRVOAvoidanceInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IRVOAvoidanceInterface"
  },
  {
    "label": "UAvoidanceManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAvoidanceManager"
  },
  {
    "label": "UMovementComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovementComponent"
  },
  {
    "label": "UCharacterMovementComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UCharacterMovementComponent"
  },
  {
    "label": "UAvoidanceManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAvoidanceManager"
  },
  {
    "label": "FNavAvoidanceData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FNavAvoidanceData"
  },
  {
    "label": "FVelocityAvoidanceCone",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FVelocityAvoidanceCone"
  },
  {
    "label": "UAvoidanceManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAvoidanceManager"
  },
  {
    "label": "UMovementComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovementComponent"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Init(UAvoidanceManager* Avoidance, const FVector& InCenter, float InRadius, float InHalfHeight,\n\t\tconst FVector& InVelocity, float InWeight = 0.5f,\n\t\tint32 InGroupMask = 1, int32 InGroupsToAvoid = 0xffffffff, int32 InGroupsToIgnore = 0,\n\t\tfloat InTestRadius2D = 500.0f)"
  },
  {
    "label": "GetObjectCount()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetObjectCount()"
  },
  {
    "label": "GetNewAvoidanceUID()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetNewAvoidanceUID()"
  },
  {
    "label": "RegisterMovementComponent()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RegisterMovementComponent(class UMovementComponent* MovementComp, float AvoidanceWeight = 0.5f)"
  },
  {
    "label": "RegisterMovementComponent()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RegisterMovementComponent(UCharacterMovementComponent* MovementComp, float AvoidanceWeight = 0.5f)"
  },
  {
    "label": "GetAvoidanceVelocityForComponent()",
    "kind": "Method",
    "detail": "Function (FVector)",
    "insertText": "GetAvoidanceVelocityForComponent(UMovementComponent* MovementComp)"
  },
  {
    "label": "GetAvoidanceVelocityForComponent()",
    "kind": "Method",
    "detail": "Function (FVector)",
    "insertText": "GetAvoidanceVelocityForComponent(UCharacterMovementComponent* MovementComp)"
  },
  {
    "label": "GetAvoidanceVelocityIgnoringUID()",
    "kind": "Method",
    "detail": "Function (FVector)",
    "insertText": "GetAvoidanceVelocityIgnoringUID(const FNavAvoidanceData& AvoidanceData, float DeltaTime, int32 IgnoreThisUID)"
  },
  {
    "label": "GetAvoidanceVelocity()",
    "kind": "Method",
    "detail": "Function (FVector)",
    "insertText": "GetAvoidanceVelocity(const FNavAvoidanceData& AvoidanceData, float DeltaTime)"
  },
  {
    "label": "UpdateRVO()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateRVO(UMovementComponent* MovementComp)"
  },
  {
    "label": "UpdateRVO()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateRVO(UCharacterMovementComponent* MovementComp)"
  },
  {
    "label": "OverrideToMaxWeight()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OverrideToMaxWeight(int32 AvoidanceUID, float Duration)"
  },
  {
    "label": "IsDebugOnForUID()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsDebugOnForUID(int32 AvoidanceUID)"
  },
  {
    "label": "IsDebugOnForAll()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsDebugOnForAll()"
  },
  {
    "label": "IsDebugEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsDebugEnabled(int32 AvoidanceUID)"
  },
  {
    "label": "AvoidanceDebugForUID()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AvoidanceDebugForUID(int32 AvoidanceUID, bool TurnOn)"
  },
  {
    "label": "AvoidanceDebugForAll()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AvoidanceDebugForAll(bool TurnOn)"
  },
  {
    "label": "AvoidanceSystemToggle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AvoidanceSystemToggle(bool TurnOn)"
  },
  {
    "label": "HandleToggleDebugAll()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleToggleDebugAll( const TCHAR* Cmd, FOutputDevice& Ar )"
  },
  {
    "label": "HandleToggleAvoidance()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleToggleAvoidance( const TCHAR* Cmd, FOutputDevice& Ar )"
  },
  {
    "label": "SetNavEdgeProvider()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetNavEdgeProvider(INavEdgeProviderInterface* InEdgeProvider)"
  },
  {
    "label": "RemoveAvoidanceObject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveAvoidanceObject(const int32 AvoidanceUID)"
  },
  {
    "label": "RemoveOutdatedObjects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveOutdatedObjects()"
  },
  {
    "label": "RequestUpdateTimer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RequestUpdateTimer()"
  },
  {
    "label": "UpdateRVO_Internal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateRVO_Internal(int32 AvoidanceUID, const FNavAvoidanceData& AvoidanceData)"
  },
  {
    "label": "GetAvoidanceVelocity_Internal()",
    "kind": "Method",
    "detail": "Function (FVector)",
    "insertText": "GetAvoidanceVelocity_Internal(const FNavAvoidanceData& AvoidanceData, float DeltaTime, int32 *IgnoreThisUID = NULL)"
  }
]