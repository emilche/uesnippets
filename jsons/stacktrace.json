[
  {
    "label": "GetStackFrames()",
    "kind": "Method",
    "detail": "Function (# ifndef ABSL_DEBUGGING_STACKTRACE_H_ # define ABSL_DEBUGGING_STACKTRACE_H_ # include \" absl / base / config . h \" namespace absl { ABSL_NAMESPACE_BEGIN int)",
    "insertText": "GetStackFrames(void** result, int* sizes, int max_depth, int skip_count)"
  },
  {
    "label": "GetStackFramesWithContext()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "GetStackFramesWithContext(void** result, int* sizes, int max_depth, int skip_count, const void* uc, int* min_dropped_frames)"
  },
  {
    "label": "GetStackTrace()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "GetStackTrace(void** result, int max_depth, int skip_count)"
  },
  {
    "label": "GetStackTraceWithContext()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "GetStackTraceWithContext(void** result, int max_depth, int skip_count, const void* uc, int* min_dropped_frames)"
  },
  {
    "label": "SetStackUnwinder()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetStackUnwinder(int (*unwinder)(void** pcs, int* sizes, int max_depth, int skip_count, const void* uc, int* min_dropped_frames))"
  },
  {
    "label": "DefaultStackUnwinder()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "DefaultStackUnwinder(void** pcs, int* sizes, int max_depth, int skip_count, const void* uc, int* min_dropped_frames)"
  },
  {
    "label": "StackTraceWorksForTest()",
    "kind": "Method",
    "detail": "Function (namespace debugging_internal { bool)",
    "insertText": "StackTraceWorksForTest()"
  }
]