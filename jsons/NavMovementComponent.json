[
  {
    "label": "UCapsuleComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UCapsuleComponent"
  },
  {
    "label": "UNavMovementComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UNavMovementComponent"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" NavMovementInterface . h \" # include \" UObject / ObjectMacros . h \" # include \" Engine / EngineTypes . h \" # include \" GameFramework / Actor . h \" # include \" AI / Navigation / NavigationTypes . h \" # include \" AI / Navigation / NavAgentInterface . h \" # include \" AI / Navigation / PathFollowingAgentInterface . h \" # include \" GameFramework / MovementComponent . h \" # include \" NavMovementComponent . generated . h \" class UCapsuleComponent ;)",
    "insertText": "UCLASS(abstract, config=Engine, MinimalAPI)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() protected: UE_DEPRECATED(5.5, \"FixedPathBrakingDistance is deprecated, please use NavMovementProperties.FixedPathBrakingDistance instead.\") UPROPERTY(meta = (DeprecatedProperty, DeprecationMessage = \"FixedPathBrakingDistance is deprecated, please use NavMovementProperties.FixedPathBrakingDistance instead.\"))"
  },
  {
    "label": "GetOwnerAsObject()",
    "kind": "Method",
    "detail": "Function (public : UObject*)",
    "insertText": "GetOwnerAsObject()"
  },
  {
    "label": "GetUpdatedObject()",
    "kind": "Method",
    "detail": "Function (} TObjectPtr<UObject>)",
    "insertText": "GetUpdatedObject()"
  },
  {
    "label": "GetSimpleCollisionCylinderExtent()",
    "kind": "Method",
    "detail": "Function (FVector)",
    "insertText": "GetSimpleCollisionCylinderExtent()"
  },
  {
    "label": "GetForwardVector()",
    "kind": "Method",
    "detail": "Function (FVector)",
    "insertText": "GetForwardVector()"
  },
  {
    "label": "StopMovementImmediately()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "StopMovementImmediately()"
  },
  {
    "label": "SetUpdateNavAgentWithOwnersCollisions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetUpdateNavAgentWithOwnersCollisions(bool bUpdateWithOwner)"
  },
  {
    "label": "GetActorFeetLocation()",
    "kind": "Method",
    "detail": "Function (} FVector)",
    "insertText": "GetActorFeetLocation()"
  },
  {
    "label": "GetActorFeetLocationBased()",
    "kind": "Method",
    "detail": "Function (} FBasedPosition)",
    "insertText": "GetActorFeetLocationBased()"
  },
  {
    "label": "INavAgentInterface()",
    "kind": "Method",
    "detail": "Function (INavAgentInterface* MyOwner = Cast<)",
    "insertText": "INavAgentInterface(GetOwner())"
  },
  {
    "label": "GetActorTransform()",
    "kind": "Method",
    "detail": "Function (} FTransform)",
    "insertText": "GetActorTransform()"
  },
  {
    "label": "GetLocation()",
    "kind": "Method",
    "detail": "Function (} FVector)",
    "insertText": "GetLocation()"
  },
  {
    "label": "GetFeetLocation()",
    "kind": "Method",
    "detail": "Function (} FVector)",
    "insertText": "GetFeetLocation()"
  },
  {
    "label": "GetFeetLocationBased()",
    "kind": "Method",
    "detail": "Function (} FBasedPosition)",
    "insertText": "GetFeetLocationBased()"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (} ; void)",
    "insertText": "Serialize(FArchive& Ar)"
  },
  {
    "label": "UpdateNavAgent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateNavAgent(const UObject& ObjectToUpdateFrom)"
  },
  {
    "label": "RequestDirectMove()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RequestDirectMove(const FVector& MoveVelocity, bool bForceMaxSpeed)"
  },
  {
    "label": "RequestPathMove()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RequestPathMove(const FVector& MoveInput)"
  },
  {
    "label": "CanStopPathFollowing()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanStopPathFollowing()"
  },
  {
    "label": "GetNavMovementProperties()",
    "kind": "Method",
    "detail": "Function (FNavMovementProperties*)",
    "insertText": "GetNavMovementProperties()"
  },
  {
    "label": "SetPathFollowingAgent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPathFollowingAgent(IPathFollowingAgentInterface* InPathFollowingAgent)"
  },
  {
    "label": "UObject()",
    "kind": "Method",
    "detail": "Function (PathFollowingComp = Cast<)",
    "insertText": "UObject(InPathFollowingAgent)"
  },
  {
    "label": "GetPathFollowingAgent()",
    "kind": "Method",
    "detail": "Function (} IPathFollowingAgentInterface*)",
    "insertText": "GetPathFollowingAgent()"
  },
  {
    "label": "GetNavAgentPropertiesRef()",
    "kind": "Method",
    "detail": "Function (} const FNavAgentProperties&)",
    "insertText": "GetNavAgentPropertiesRef()"
  },
  {
    "label": "CanStartPathFollowing()",
    "kind": "Method",
    "detail": "Function (MovementState = NavAgentProps ; } bool)",
    "insertText": "CanStartPathFollowing()"
  },
  {
    "label": "SetJumpAllowed()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetJumpAllowed(bool bAllowed)"
  },
  {
    "label": "IsCrouching()",
    "kind": "Method",
    "detail": "Function (} ; bool)",
    "insertText": "IsCrouching()"
  },
  {
    "label": "StopActiveMovement()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StopActiveMovement()"
  }
]