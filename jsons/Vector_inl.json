[
  {
    "label": "Vec2()",
    "kind": "Method",
    "detail": "Function (ST_INLINE)",
    "insertText": "Vec2() : x(0.0f), y(0.0f)"
  },
  {
    "label": "Vec2()",
    "kind": "Method",
    "detail": "Function (} ST_INLINE)",
    "insertText": "Vec2(st_float32 _x, st_float32 _y) : x(_x), y(_y)"
  },
  {
    "label": "Vec2()",
    "kind": "Method",
    "detail": "Function (} ST_INLINE)",
    "insertText": "Vec2(const st_float32 afPos[2]) : x(afPos[0]), y(afPos[1])"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} ST_INLINE Vec2)",
    "insertText": "operator(const Vec2& vIn)"
  },
  {
    "label": "Set()",
    "kind": "Method",
    "detail": "Function (} ST_INLINE void)",
    "insertText": "Set(st_float32 _x, st_float32 _y)"
  },
  {
    "label": "Distance()",
    "kind": "Method",
    "detail": "Function (x = _x ; y = _y ; } ST_INLINE st_float32)",
    "insertText": "Distance(const Vec2& vIn)"
  },
  {
    "label": "Vec3()",
    "kind": "Method",
    "detail": "Function (} ST_INLINE)",
    "insertText": "Vec3() : x(0.0f), y(0.0f), z(0.0f)"
  },
  {
    "label": "Vec3()",
    "kind": "Method",
    "detail": "Function (} ST_INLINE)",
    "insertText": "Vec3(st_float32 _x, st_float32 _y, st_float32 _z) : x(_x), y(_y), z(_z)"
  },
  {
    "label": "Vec3()",
    "kind": "Method",
    "detail": "Function (} ST_INLINE)",
    "insertText": "Vec3(st_float32 _x, st_float32 _y) : x(_x), y(_y), z(0.0f)"
  },
  {
    "label": "Vec3()",
    "kind": "Method",
    "detail": "Function (} ST_INLINE)",
    "insertText": "Vec3(const st_float32 afPos[3]) : x(afPos[0]), y(afPos[1]), z(afPos[2])"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} ST_INLINE st_float32&)",
    "insertText": "operator(int nIndex)"
  },
  {
    "label": "st_float32()",
    "kind": "Method",
    "detail": "Function (} ST_INLINE Vec3::operator)",
    "insertText": "st_float32(void)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} ST_INLINE bool)",
    "insertText": "operator(const Vec3& vIn)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (x / = vIn . x ; y / = vIn . y ; z / = vIn . z ; return* this ; } ST_INLINE Vec3)",
    "insertText": "operator(st_float32 fScalar)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (x* = fScalar ; y* = fScalar ; z* = fScalar ; return* this ; } ST_INLINE Vec3)",
    "insertText": "operator(st_float32 fDivisor)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (x / = fDivisor ; y / = fDivisor ; z / = fDivisor ; return* this ; } ST_INLINE Vec3)",
    "insertText": "operator(void)"
  },
  {
    "label": "Set()",
    "kind": "Method",
    "detail": "Function (} ST_INLINE void)",
    "insertText": "Set(st_float32 _x, st_float32 _y, st_float32 _z)"
  },
  {
    "label": "Set()",
    "kind": "Method",
    "detail": "Function (x = _x ; y = _y ; z = 0 . 0 f ; } ST_INLINE void)",
    "insertText": "Set(const st_float32 afPos[3])"
  },
  {
    "label": "Cross()",
    "kind": "Method",
    "detail": "Function (x = afPos [ 0 ] ; y = afPos [ 1 ] ; z = afPos [ 2 ] ; } ST_INLINE Vec3)",
    "insertText": "Cross(const Vec3& vIn)"
  },
  {
    "label": "Distance()",
    "kind": "Method",
    "detail": "Function (} ST_INLINE st_float32)",
    "insertText": "Distance(const Vec3& vIn)"
  },
  {
    "label": "DistanceSquared()",
    "kind": "Method",
    "detail": "Function (} ST_INLINE st_float32)",
    "insertText": "DistanceSquared(const Vec3& vIn)"
  },
  {
    "label": "Dot()",
    "kind": "Method",
    "detail": "Function (} ST_INLINE st_float32)",
    "insertText": "Dot(const Vec3& vIn)"
  },
  {
    "label": "Magnitude()",
    "kind": "Method",
    "detail": "Function (} ST_INLINE st_float32)",
    "insertText": "Magnitude(void)"
  },
  {
    "label": "MagnitudeSquared()",
    "kind": "Method",
    "detail": "Function (} ST_INLINE st_float32)",
    "insertText": "MagnitudeSquared(void)"
  },
  {
    "label": "Normalize()",
    "kind": "Method",
    "detail": "Function (} ST_INLINE Vec3)",
    "insertText": "Normalize(void)"
  },
  {
    "label": "Magnitude()",
    "kind": "Method",
    "detail": "Function (st_float32 fMagnitude =)",
    "insertText": "Magnitude()"
  },
  {
    "label": "Vec4()",
    "kind": "Method",
    "detail": "Function (x* = fScalar ; y* = fScalar ; z* = fScalar ; } ST_INLINE)",
    "insertText": "Vec4() : x(0.0f), y(0.0f), z(0.0f), w(1.0f)"
  },
  {
    "label": "Vec4()",
    "kind": "Method",
    "detail": "Function (} ST_INLINE)",
    "insertText": "Vec4(st_float32 _x, st_float32 _y, st_float32 _z, st_float32 _w) : x(_x), y(_y), z(_z), w(_w)"
  },
  {
    "label": "Vec4()",
    "kind": "Method",
    "detail": "Function (} ST_INLINE)",
    "insertText": "Vec4(st_float32 _x, st_float32 _y, st_float32 _z) : x(_x), y(_y), z(_z), w(1.0f)"
  },
  {
    "label": "Vec4()",
    "kind": "Method",
    "detail": "Function (} ST_INLINE)",
    "insertText": "Vec4(st_float32 _x, st_float32 _y) : x(_x), y(_y), z(0.0f), w(1.0f)"
  },
  {
    "label": "Vec4()",
    "kind": "Method",
    "detail": "Function (} ST_INLINE)",
    "insertText": "Vec4(const Vec3& vVec, st_float32 _w) : x(vVec.x), y(vVec.y), z(vVec.z), w(_w)"
  },
  {
    "label": "Vec4()",
    "kind": "Method",
    "detail": "Function (} ST_INLINE)",
    "insertText": "Vec4(const st_float32 afPos[4]) : x(afPos[0]), y(afPos[1]), z(afPos[2]), w(afPos[3])"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} ST_INLINE bool)",
    "insertText": "operator(const Vec4& vIn)"
  },
  {
    "label": "Set()",
    "kind": "Method",
    "detail": "Function (} ST_INLINE void)",
    "insertText": "Set(st_float32 _x, st_float32 _y, st_float32 _z, st_float32 _w)"
  },
  {
    "label": "Set()",
    "kind": "Method",
    "detail": "Function (x = _x ; y = _y ; } ST_INLINE void)",
    "insertText": "Set(const st_float32 afPos[4])"
  }
]