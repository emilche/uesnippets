[
  {
    "label": "FbxTimeModeObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FbxTimeModeObject"
  },
  {
    "label": "FBXSDK_DLL",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBXSDK_DLL"
  },
  {
    "label": "EMode",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EMode"
  },
  {
    "label": "EProtocol",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EProtocol"
  },
  {
    "label": "EElement",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EElement"
  },
  {
    "label": "EOldMode",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EOldMode"
  },
  {
    "label": "FbxTime()",
    "kind": "Method",
    "detail": "Function (# ifndef _FBXSDK_CORE_BASE_TIME_H_ # define _FBXSDK_CORE_BASE_TIME_H_ # include<fbxsdk / fbxsdk_def . h> # include<fbxsdk / core / base / fbxtimecode . h> # include<fbxsdk / core / base / fbxstring . h> # include<fbxsdk / fbxsdk_nsbegin . h> # define FBXSDK_TIME_INFINITE)",
    "insertText": "FbxTime(FBXSDK_TC_INFINITY) #define FBXSDK_TIME_MINUS_INFINITE FbxTime(FBXSDK_TC_MINFINITY) #define FBXSDK_TIME_ZERO FbxTime(FBXSDK_TC_ZERO) #define FBXSDK_TIME_EPSILON FbxTime(FBXSDK_TC_EPSILON) #define FBXSDK_TIME_ONE_SECOND FbxTime(FBXSDK_TC_SECOND) #define FBXSDK_TIME_ONE_MINUTE FbxTime(FBXSDK_TC_MINUTE) #define FBXSDK_TIME_ONE_HOUR FbxTime(FBXSDK_TC_HOUR)"
  },
  {
    "label": "FbxTime()",
    "kind": "Method",
    "detail": "Function (class FBXSDK_DLL FbxTime { public :)",
    "insertText": "FbxTime(const FbxLongLong pTime=0)"
  },
  {
    "label": "SetGlobalTimeMode()",
    "kind": "Method",
    "detail": "Function (mTime = pTime ; } enum EMode { eDefaultMode,eFrames120,eFrames100,eFrames60,eFrames50,eFrames48,eFrames30,eFrames30Drop,eNTSCDropFrame,eNTSCFullFrame,ePAL,eFrames24,eFrames1000,eFilmFullFrame,eCustom,eFrames96,eFrames72,eFrames59dot94,eFrames119dot88,eModesCount } ; enum EProtocol { eSMPTE,eFrameCount,eDefaultProtocol } ; void)",
    "insertText": "SetGlobalTimeMode(EMode pTimeMode, double pFrameRate=0.0)"
  },
  {
    "label": "GetGlobalTimeMode()",
    "kind": "Method",
    "detail": "Function (EMode)",
    "insertText": "GetGlobalTimeMode()"
  },
  {
    "label": "SetGlobalTimeProtocol()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetGlobalTimeProtocol(EProtocol pTimeProtocol)"
  },
  {
    "label": "GetGlobalTimeProtocol()",
    "kind": "Method",
    "detail": "Function (EProtocol)",
    "insertText": "GetGlobalTimeProtocol()"
  },
  {
    "label": "GetFrameRate()",
    "kind": "Method",
    "detail": "Function (double)",
    "insertText": "GetFrameRate(EMode pTimeMode)"
  },
  {
    "label": "ConvertFrameRateToTimeMode()",
    "kind": "Method",
    "detail": "Function (EMode)",
    "insertText": "ConvertFrameRateToTimeMode(double pFrameRate, double pPrecision=0.00000001)"
  },
  {
    "label": "Set()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Set(FbxLongLong pTime)"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (mTime = pTime ; } FbxLongLong)",
    "insertText": "Get()"
  },
  {
    "label": "GetMilliSeconds()",
    "kind": "Method",
    "detail": "Function (mTime = pMilliSeconds* FBXSDK_TC_MILLISECOND ; } FbxLongLong)",
    "insertText": "GetMilliSeconds()"
  },
  {
    "label": "SetTime()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTime(int pHour, int pMinute, int pSecond, int pFrame=0, int pField=0, EMode pTimeMode=eDefaultMode)"
  },
  {
    "label": "SetTime()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTime(int pHour, int pMinute, int pSecond, int pFrame, int pField, int pResidual, EMode pTimeMode)"
  },
  {
    "label": "GetTime()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetTime(int& pHour, int& pMinute, int& pSecond, int& pFrame, int& pField, int& pResidual, EMode pTimeMode=eDefaultMode)"
  },
  {
    "label": "GetFramedTime()",
    "kind": "Method",
    "detail": "Function (FbxTime)",
    "insertText": "GetFramedTime(bool pRound=true)"
  },
  {
    "label": "SetFrame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFrame(FbxLongLong pFrames, EMode pTimeMode=eDefaultMode)"
  },
  {
    "label": "SetFramePrecise()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFramePrecise(FbxDouble pFrames, EMode pTimeMode=eDefaultMode)"
  },
  {
    "label": "GetHourCount()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "GetHourCount()"
  },
  {
    "label": "GetMinuteCount()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "GetMinuteCount()"
  },
  {
    "label": "GetSecondCount()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "GetSecondCount()"
  },
  {
    "label": "GetFrameCount()",
    "kind": "Method",
    "detail": "Function (FbxLongLong)",
    "insertText": "GetFrameCount(EMode pTimeMode=eDefaultMode)"
  },
  {
    "label": "GetFrameCountPrecise()",
    "kind": "Method",
    "detail": "Function (FbxDouble)",
    "insertText": "GetFrameCountPrecise(EMode pTimeMode=eDefaultMode)"
  },
  {
    "label": "GetFieldCount()",
    "kind": "Method",
    "detail": "Function (FbxLongLong)",
    "insertText": "GetFieldCount(EMode pTimeMode=eDefaultMode)"
  },
  {
    "label": "GetResidual()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "GetResidual(EMode pTimeMode=eDefaultMode)"
  },
  {
    "label": "IsDropFrame()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsDropFrame(EMode pTimeMode=eDefaultMode)"
  },
  {
    "label": "GetFrameSeparator()",
    "kind": "Method",
    "detail": "Function (char)",
    "insertText": "GetFrameSeparator(EMode pTimeMode=eDefaultMode)"
  },
  {
    "label": "GetTimeString()",
    "kind": "Method",
    "detail": "Function (char*)",
    "insertText": "GetTimeString(char* pTimeString, const FbxUShort& pTimeStringSize, int pInfo=5, EMode pTimeMode=eDefaultMode, EProtocol pTimeFormat=eDefaultProtocol)"
  },
  {
    "label": "GetTimeString()",
    "kind": "Method",
    "detail": "Function (enum EElement { eHours,eMinutes,eSeconds,eFrames,eField,eResidual } ; FbxString)",
    "insertText": "GetTimeString(EElement pStart=eHours, EElement pEnd=eResidual, EMode pTimeMode=eDefaultMode, EProtocol pTimeFormat=eDefaultProtocol)"
  },
  {
    "label": "SetTimeString()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetTimeString(const char* pTime, EMode pTimeMode=eDefaultMode, EProtocol pTimeFormat=eDefaultProtocol)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "operator(const FbxTime& pTime)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FbxTime)",
    "insertText": "operator(const int Mult)"
  },
  {
    "label": "GetOneFrameValue()",
    "kind": "Method",
    "detail": "Function (FbxLongLong)",
    "insertText": "GetOneFrameValue(EMode pTimeMode=eDefaultMode)"
  },
  {
    "label": "InternalSetTime()",
    "kind": "Method",
    "detail": "Function (# ifndef DOXYGEN_SHOULD_SKIP_THIS enum EOldMode { eOLD_DEFAULT_MODE,eOLD_CINEMA,eOLD_PAL,eOLD_FRAMES30,eOLD_NTSC_DROP_FRAME,eOLD_FRAMES50,eOLD_FRAMES60,eOLD_FRAMES100,eOLD_FRAMES120,eOLD_NTSC_FULL_FRAME,eOLD_FRAMES30_DROP,eOLD_FRAMES1000 } ; private : FbxLongLong mTime ; EMode gsGlobalTimeMode ; EProtocol gsGlobalTimeProtocol ; FbxTimeModeObject* gsTimeObject ; void)",
    "insertText": "InternalSetTime(int pHour, int pMinute, int pSecond, FbxLongLong pFrame, int pField, EMode pTimeMode)"
  },
  {
    "label": "FbxGetGlobalTimeMode()",
    "kind": "Method",
    "detail": "Function (FBXSDK_DLL FbxTime::EMode)",
    "insertText": "FbxGetGlobalTimeMode()"
  },
  {
    "label": "FbxGetGlobalTimeModeObject()",
    "kind": "Method",
    "detail": "Function (FBXSDK_DLL FbxTimeModeObject*)",
    "insertText": "FbxGetGlobalTimeModeObject()"
  },
  {
    "label": "FbxGetGlobalTimeFormat()",
    "kind": "Method",
    "detail": "Function (FBXSDK_DLL FbxTime::EProtocol)",
    "insertText": "FbxGetGlobalTimeFormat()"
  },
  {
    "label": "FbxSetGlobalTimeMode()",
    "kind": "Method",
    "detail": "Function (FBXSDK_DLL void)",
    "insertText": "FbxSetGlobalTimeMode(FbxTime::EMode pTimeMode, double pFrameRate)"
  },
  {
    "label": "FbxSetGlobalTimeFormat()",
    "kind": "Method",
    "detail": "Function (FBXSDK_DLL void)",
    "insertText": "FbxSetGlobalTimeFormat(FbxTime::EProtocol pTimeFormat)"
  },
  {
    "label": "FbxTimeSeconds()",
    "kind": "Method",
    "detail": "Function (# endif } ; FBXSDK_DLL FbxTime)",
    "insertText": "FbxTimeSeconds(const FbxDouble& pTime=0.0)"
  },
  {
    "label": "SetSecondDouble()",
    "kind": "Method",
    "detail": "Function (FbxTime lTime ; lTime .)",
    "insertText": "SetSecondDouble(pTime)"
  },
  {
    "label": "FbxTimeSpan()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FbxTimeSpan(FbxTime pStart, FbxTime pStop)"
  },
  {
    "label": "Set()",
    "kind": "Method",
    "detail": "Function (mStart = pStart ; mStop = pStop ; } void)",
    "insertText": "Set(FbxTime pStart, FbxTime pStop)"
  },
  {
    "label": "SetStart()",
    "kind": "Method",
    "detail": "Function (mStart = pStart ; mStop = pStop ; } void)",
    "insertText": "SetStart(FbxTime pStart)"
  },
  {
    "label": "SetStop()",
    "kind": "Method",
    "detail": "Function (mStart = pStart ; } void)",
    "insertText": "SetStop(FbxTime pStop)"
  },
  {
    "label": "GetStart()",
    "kind": "Method",
    "detail": "Function (mStop = pStop ; } FbxTime)",
    "insertText": "GetStart()"
  },
  {
    "label": "Intersect()",
    "kind": "Method",
    "detail": "Function (FbxTimeSpan)",
    "insertText": "Intersect(const FbxTimeSpan& pTime)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "operator(const FbxTimeSpan& pTime)"
  },
  {
    "label": "UnionAssignment()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnionAssignment(const FbxTimeSpan& pSpan, int pDirection=FBXSDK_TIME_FORWARD)"
  },
  {
    "label": "FbxLocalTime()",
    "kind": "Method",
    "detail": "Function (# ifndef DOXYGEN_SHOULD_SKIP_THIS private : FbxTime mStart ; FbxTime mStop ; # endif } ; class FBXSDK_DLL FbxLocalTime { public :)",
    "insertText": "FbxLocalTime()"
  },
  {
    "label": "FbxGetCurrentLocalTime()",
    "kind": "Method",
    "detail": "Function (int mYear ; int mMonth ; int mDay ; int mHour ; int mMinute ; int mSecond ; int mMillisecond ; } ; FBXSDK_DLL void)",
    "insertText": "FbxGetCurrentLocalTime(FbxLocalTime& pLocalTime)"
  },
  {
    "label": "FbxSetGlobalTimeMode()",
    "kind": "Method",
    "detail": "Function (FBXSDK_DLL void)",
    "insertText": "FbxSetGlobalTimeMode(FbxTime::EMode pTimeMode, double pFrameRate=0.0)"
  },
  {
    "label": "FbxGetOldTimeModeCorrespondance()",
    "kind": "Method",
    "detail": "Function (FBXSDK_DLL FbxTime::EOldMode)",
    "insertText": "FbxGetOldTimeModeCorrespondance(FbxTime::EMode pMode)"
  },
  {
    "label": "FbxGetTimeModeFromOldValue()",
    "kind": "Method",
    "detail": "Function (FBXSDK_DLL FbxTime::EMode)",
    "insertText": "FbxGetTimeModeFromOldValue(FbxTime::EOldMode pOldMode)"
  },
  {
    "label": "FbxGetTimeModeFromFrameRate()",
    "kind": "Method",
    "detail": "Function (FBXSDK_DLL FbxTime::EMode)",
    "insertText": "FbxGetTimeModeFromFrameRate(char* pFrameRate)"
  },
  {
    "label": "FbxGetControlStringList()",
    "kind": "Method",
    "detail": "Function (FBXSDK_DLL void)",
    "insertText": "FbxGetControlStringList(char* pControlString, FbxTime::EProtocol pTimeFormat)"
  },
  {
    "label": "FbxGetGlobalFrameRateString()",
    "kind": "Method",
    "detail": "Function (FBXSDK_DLL const char*)",
    "insertText": "FbxGetGlobalFrameRateString(FbxTime::EMode pTimeMode)"
  },
  {
    "label": "FbxGetGlobalTimeModeString()",
    "kind": "Method",
    "detail": "Function (FBXSDK_DLL const char*)",
    "insertText": "FbxGetGlobalTimeModeString(FbxTime::EMode pTimeMode)"
  },
  {
    "label": "FbxGetFrameRate()",
    "kind": "Method",
    "detail": "Function (FBXSDK_DLL double)",
    "insertText": "FbxGetFrameRate(FbxTime::EMode pTimeMode)"
  },
  {
    "label": "FbxSelectionToTimeFormat()",
    "kind": "Method",
    "detail": "Function (FBXSDK_DLL FbxTime::EProtocol)",
    "insertText": "FbxSelectionToTimeFormat(int pSelection)"
  },
  {
    "label": "FbxSelectionToTimeMode()",
    "kind": "Method",
    "detail": "Function (FBXSDK_DLL FbxTime::EMode)",
    "insertText": "FbxSelectionToTimeMode(int pSelection)"
  },
  {
    "label": "FbxTimeToSelection()",
    "kind": "Method",
    "detail": "Function (FBXSDK_DLL int)",
    "insertText": "FbxTimeToSelection(FbxTime::EMode pTimeMode=FbxTime::eDefaultMode, int pTimeFormat=FbxTime::eDefaultProtocol)"
  },
  {
    "label": "FbxGetTimeModeName()",
    "kind": "Method",
    "detail": "Function (FBXSDK_DLL const char*)",
    "insertText": "FbxGetTimeModeName(FbxTime::EMode pTimeMode)"
  },
  {
    "label": "FbxGetFrameRateStringListIndex()",
    "kind": "Method",
    "detail": "Function (FBXSDK_DLL int)",
    "insertText": "FbxGetFrameRateStringListIndex(FbxTime::EMode pTimeMode)"
  },
  {
    "label": "FbxIsValidCustomFrameRate()",
    "kind": "Method",
    "detail": "Function (FBXSDK_DLL bool)",
    "insertText": "FbxIsValidCustomFrameRate(double pFramerate)"
  },
  {
    "label": "FbxGetNearestCustomFrameRate()",
    "kind": "Method",
    "detail": "Function (FBXSDK_DLL bool)",
    "insertText": "FbxGetNearestCustomFrameRate(double pFramerate, double& pNearestRate)"
  }
]