[
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "UENUM()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" HAL / Platform . h \" # include \" Net / Core / Connection / NetEnums . h \" # include \" Net / Core / Connection / NetResult . h \" # include \" Templates / PimplPtr . h \" # include \" UObject / ObjectMacros . h \" # include \" NetCloseResult . generated . h \")",
    "insertText": "UENUM()"
  },
  {
    "label": "DECLARE_NETRESULT_ENUM()",
    "kind": "Method",
    "detail": "Function (NetDriverAlreadyExists,NetDriverCreateFailure,NetDriverListenFailure,ConnectionLost,ConnectionTimeout,FailureReceived,OutdatedClient,OutdatedServer,PendingConnectionFailure,NetGuidMismatch,NetChecksumMismatch,SecurityMalformedPacket,SecurityInvalidData,SecurityClosed,Unknown,Success,Extended,HostClosedConnection,Disconnect,Upgrade,PreLoginFailure,JoinFailure,JoinSplitFailure,AddressResolutionFailed,RPCDoS,Cleanup,MissingLevelPackage,PacketHandlerIncomingError,ZeroLastByte,ZeroSize,ReadHeaderFail,ReadHeaderExtraFail,AckSequenceMismatch,BunchBadChannelIndex,BunchChannelNameFail,BunchWrongChannelType,BunchHeaderOverflow,BunchDataOverflow,BunchServerPackageMapExports,BunchPrematureControlChannel,BunchPrematureChannel,BunchPrematureControlClose,UnknownChannelType,PrematureSend,CorruptData,SocketSendFailure,BadChildConnectionIndex,LogLimitInstant,LogLimitSustained,EncryptionFailure,EncryptionTokenMissing,ReceivedNetGUIDBunchFail,ReceivedNetExtBunchFail,MaxReliableExceeded,ReceivedNextBunchFail,ReceivedNextBunchQueueFail,PartialInitialReliableDestroy,PartialMergeReliableDestroy,PartialInitialNonByteAligned,PartialNonByteAligned,PartialFinalPackageMapExports,PartialTooLarge,AlreadyOpen,ReliableBeforeOpen,ReliableBufferOverflow,RPCReliableBufferOverflow,ControlChannelClose,ControlChannelEndianCheck,ControlChannelPlayerChannelFail,ControlChannelMessageUnknown,ControlChannelMessageFail,ControlChannelMessagePayloadFail,ControlChannelBunchOverflowed,ControlChannelQueueBunchOverflowed,ClientHasMustBeMappedGUIDs,ClientSentDestructionInfo,UnregisteredMustBeMappedGUID,ObjectReplicatorReceivedBunchFail,ContentBlockFail,ContentBlockHeaderRepLayoutFail,ContentBlockHeaderIsActorFail,ContentBlockHeaderObjFail,ContentBlockHeaderPrematureEnd,ContentBlockHeaderSubObjectActor,ContentBlockHeaderBadParent,ContentBlockHeaderInvalidCreate,ContentBlockHeaderStablyNamedFail,ContentBlockHeaderNoSubObjectClass,ContentBlockHeaderUObjectSubObject,ContentBlockHeaderAActorSubObject,ContentBlockHeaderFail,ContentBlockPayloadBitsFail,FieldHeaderRepIndex,FieldHeaderBadRepIndex,FieldHeaderPayloadBitsFail,FieldPayloadFail,ReplicationChannelCountMaxedOut,BeaconControlFlowError,BeaconUnableToParsePacket,BeaconAuthenticationFailure,BeaconLoginInvalidIdError,BeaconLoginInvalidAuthHandlerError,BeaconAuthError,BeaconSpawnClientWorldPackageNameError,BeaconSpawnExistingActorError,BeaconSpawnFailureError,BeaconSpawnNetGUIDAckNoActor,BeaconSpawnNetGUIDAckNoHost,BeaconSpawnUnexpectedError,IrisProtocolMismatch,IrisNetRefHandleError,FaultDisconnect,NotRecoverable,} ;)",
    "insertText": "DECLARE_NETRESULT_ENUM(ENetCloseResult)"
  },
  {
    "label": "LexToString()",
    "kind": "Method",
    "detail": "Function (const TCHAR*)",
    "insertText": "LexToString(ENetCloseResult Enum)"
  },
  {
    "label": "FromNetworkFailure()",
    "kind": "Method",
    "detail": "Function (ENetCloseResult)",
    "insertText": "FromNetworkFailure(ENetworkFailure::Type Val)"
  },
  {
    "label": "ToNetworkFailure()",
    "kind": "Method",
    "detail": "Function (ENetworkFailure::Type)",
    "insertText": "ToNetworkFailure(ENetCloseResult Val)"
  },
  {
    "label": "FromSecurityEvent()",
    "kind": "Method",
    "detail": "Function (ENetCloseResult)",
    "insertText": "FromSecurityEvent(ESecurityEvent::Type Val)"
  }
]