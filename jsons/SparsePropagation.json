[
  {
    "label": "Value",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Value"
  },
  {
    "label": "Constant",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Constant"
  },
  {
    "label": "Argument",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Argument"
  },
  {
    "label": "Instruction",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Instruction"
  },
  {
    "label": "PHINode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PHINode"
  },
  {
    "label": "TerminatorInst",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TerminatorInst"
  },
  {
    "label": "BasicBlock",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BasicBlock"
  },
  {
    "label": "Function",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Function"
  },
  {
    "label": "SparseSolver",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SparseSolver"
  },
  {
    "label": "raw_ostream",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "raw_ostream"
  },
  {
    "label": "SmallVectorImpl",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SmallVectorImpl"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "AbstractLatticeFunction",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AbstractLatticeFunction"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "SparseSolver",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SparseSolver"
  },
  {
    "label": "getOverdefinedVal()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "getOverdefinedVal()"
  },
  {
    "label": "getOverdefinedVal()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "getOverdefinedVal()"
  },
  {
    "label": "getOverdefinedVal()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "getOverdefinedVal()"
  },
  {
    "label": "getOverdefinedVal()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "getOverdefinedVal()"
  },
  {
    "label": "PrintValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PrintValue(LatticeVal V, raw_ostream &OS)"
  },
  {
    "label": "Solve()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Solve(Function &F)"
  },
  {
    "label": "getOrInitValueState()",
    "kind": "Method",
    "detail": "Function (LatticeVal)",
    "insertText": "getOrInitValueState(Value *V)"
  },
  {
    "label": "isEdgeFeasible()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "isEdgeFeasible(BasicBlock *From, BasicBlock *To,\n                      bool AggressiveUndef = false)"
  },
  {
    "label": "UpdateState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateState(Instruction &Inst, LatticeVal V)"
  },
  {
    "label": "MarkBlockExecutable()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MarkBlockExecutable(BasicBlock *BB)"
  },
  {
    "label": "markEdgeExecutable()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "markEdgeExecutable(BasicBlock *Source, BasicBlock *Dest)"
  },
  {
    "label": "getFeasibleSuccessors()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "getFeasibleSuccessors(TerminatorInst &TI, SmallVectorImpl<bool> &Succs,\n                             bool AggressiveUndef)"
  },
  {
    "label": "visitInst()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "visitInst(Instruction &I)"
  },
  {
    "label": "visitPHINode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "visitPHINode(PHINode &I)"
  },
  {
    "label": "visitTerminatorInst()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "visitTerminatorInst(TerminatorInst &TI)"
  }
]