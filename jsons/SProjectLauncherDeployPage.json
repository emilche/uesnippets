[
  {
    "label": "Error",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Error"
  },
  {
    "label": "SProjectLauncherDeployPage",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SProjectLauncherDeployPage"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Layout / Visibility . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Widgets / SCompoundWidget . h \" # include \" Models / ProjectLauncherModel . h \" class Error ; class SProjectLauncherDeployPage : public SCompoundWidget { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SProjectLauncherDeployPage)"
  },
  {
    "label": "SLATE_END_ARGS()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_END_ARGS() public: ~SProjectLauncherDeployPage()"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (public : void)",
    "insertText": "Construct(const FArguments& InArgs, const TSharedRef<FProjectLauncherModel>& InModel, bool IsFromRepository = false)"
  },
  {
    "label": "HandleDeploymentModeComboButtonContentText()",
    "kind": "Method",
    "detail": "Function (private : FText)",
    "insertText": "HandleDeploymentModeComboButtonContentText()"
  },
  {
    "label": "HandleDeploymentModeMenuEntryClicked()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleDeploymentModeMenuEntryClicked(ELauncherProfileDeploymentModes::Type DeploymentMode)"
  },
  {
    "label": "HandleDeployFileServerSettingsVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "HandleDeployFileServerSettingsVisibility()"
  },
  {
    "label": "HandleDeployToDeviceSettingsVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "HandleDeployToDeviceSettingsVisibility()"
  },
  {
    "label": "HandleDeployRepositorySettingsVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "HandleDeployRepositorySettingsVisibility()"
  },
  {
    "label": "HandleProfileManagerProfileSelected()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleProfileManagerProfileSelected(const ILauncherProfilePtr& SelectedProfile, const ILauncherProfilePtr& PreviousProfile)"
  },
  {
    "label": "HandleValidationErrorIconVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "HandleValidationErrorIconVisibility(ELauncherProfileValidationErrors::Type Error)"
  }
]