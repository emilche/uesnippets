[
  {
    "label": "FExtender",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FExtender"
  },
  {
    "label": "FToolMenuContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FToolMenuContext"
  },
  {
    "label": "FCustomClassFilterData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCustomClassFilterData"
  },
  {
    "label": "FFilterCategory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFilterCategory"
  },
  {
    "label": "FFilterBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFilterBase"
  },
  {
    "label": "FSceneOutlinerBuiltInColumnTypes",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSceneOutlinerBuiltInColumnTypes"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FSceneOutlinerColumnInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSceneOutlinerColumnInfo"
  },
  {
    "label": "SCENEOUTLINER_API",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SCENEOUTLINER_API"
  },
  {
    "label": "FSceneOutlinerFilterBarOptions",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSceneOutlinerFilterBarOptions"
  },
  {
    "label": "FSceneOutlinerInitializationOptions",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSceneOutlinerInitializationOptions"
  },
  {
    "label": "FSceneOutlinerDefaultTreeItemMetrics",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSceneOutlinerDefaultTreeItemMetrics"
  },
  {
    "label": "DECLARE_DELEGATE_TwoParams()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Layout / Margin . h \" # include \" Framework / SlateDelegates . h \" # include \" Engine / World . h \" # include \" SceneOutlinerFilters . h \" # define LOCTEXT_NAMESPACE \" SceneOutlinerPublicTypes \" class FExtender ; struct FToolMenuContext ; class FCustomClassFilterData ; class FFilterCategory ; template<FilterType> class FFilterBase ;)",
    "insertText": "DECLARE_DELEGATE_TwoParams(FSceneOutlinerModifyContextMenu, FName& , FToolMenuContext&)"
  },
  {
    "label": "DECLARE_DELEGATE_RetVal_OneParam()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DELEGATE_RetVal_OneParam(ISceneOutlinerMode*, FCreateSceneOutlinerMode, SSceneOutliner*)"
  },
  {
    "label": "DEFINE_SCENEOUTLINER_BUILTIN_COLUMN_TYPE()",
    "kind": "Method",
    "detail": "Function (namespace SceneOutliner { typedef const ISceneOutlinerTreeItem& FilterBarType ; } struct FSceneOutlinerBuiltInColumnTypes { # define)",
    "insertText": "DEFINE_SCENEOUTLINER_BUILTIN_COLUMN_TYPE(ColumnID, ColumnName, ColumnKey, ColumnLocalizedTextLiteral) \\ static FName& ColumnID()"
  },
  {
    "label": "_Localized()",
    "kind": "Method",
    "detail": "Function (\\ FName ColumnID = ColumnName ; \\ return ColumnID ; \\ } \\ const FText& ColumnID # #)",
    "insertText": "_Localized()"
  },
  {
    "label": "LOCTEXT()",
    "kind": "Method",
    "detail": "Function (\\ FText ColumnID # # _Localized =)",
    "insertText": "LOCTEXT(ColumnKey, ColumnLocalizedTextLiteral)"
  },
  {
    "label": "DEFINE_SCENEOUTLINER_BUILTIN_COLUMN_TYPE()",
    "kind": "Method",
    "detail": "Function (\\ return ColumnID # # _Localized ; \\ })",
    "insertText": "DEFINE_SCENEOUTLINER_BUILTIN_COLUMN_TYPE(Label, \"Item Label\", \"ItemLabelColumnName\", \"Item Label\")"
  },
  {
    "label": "DEFINE_SCENEOUTLINER_BUILTIN_COLUMN_TYPE()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DEFINE_SCENEOUTLINER_BUILTIN_COLUMN_TYPE(Gutter, \"Visibility\", \"VisibilityColumnName\", \"Visibility\")"
  },
  {
    "label": "DEFINE_SCENEOUTLINER_BUILTIN_COLUMN_TYPE()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DEFINE_SCENEOUTLINER_BUILTIN_COLUMN_TYPE(ActorInfo, \"Type\", \"TypeColumnName\", \"Type\")"
  },
  {
    "label": "DEFINE_SCENEOUTLINER_BUILTIN_COLUMN_TYPE()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DEFINE_SCENEOUTLINER_BUILTIN_COLUMN_TYPE(SourceControl, \"Revision Control\", \"SourceControlColumnName\", \"Revision Control\")"
  },
  {
    "label": "DEFINE_SCENEOUTLINER_BUILTIN_COLUMN_TYPE()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DEFINE_SCENEOUTLINER_BUILTIN_COLUMN_TYPE(Mobility, \"Mobility\", \"SceneOutlinerMobilityColumn\", \"Mobility\")"
  },
  {
    "label": "DEFINE_SCENEOUTLINER_BUILTIN_COLUMN_TYPE()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DEFINE_SCENEOUTLINER_BUILTIN_COLUMN_TYPE(Level, \"Level\", \"SceneOutlinerLevelColumn\", \"Level\")"
  },
  {
    "label": "DEFINE_SCENEOUTLINER_BUILTIN_COLUMN_TYPE()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DEFINE_SCENEOUTLINER_BUILTIN_COLUMN_TYPE(Layer, \"Layer\", \"SceneOutlinerLayerColumn\", \"Layer\")"
  },
  {
    "label": "DEFINE_SCENEOUTLINER_BUILTIN_COLUMN_TYPE()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DEFINE_SCENEOUTLINER_BUILTIN_COLUMN_TYPE(DataLayer, \"Data Layer\", \"SceneOutlinerDataLayerColumn\", \"Data Layer\")"
  },
  {
    "label": "DEFINE_SCENEOUTLINER_BUILTIN_COLUMN_TYPE()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DEFINE_SCENEOUTLINER_BUILTIN_COLUMN_TYPE(ContentBundle, \"Content Bundle\", \"SceneOutlinerContentBundleColumn\", \"Content Bundle\")"
  },
  {
    "label": "DEFINE_SCENEOUTLINER_BUILTIN_COLUMN_TYPE()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DEFINE_SCENEOUTLINER_BUILTIN_COLUMN_TYPE(SubPackage, \"Sub Package\", \"SceneOutlinerSubPackageColumn\", \"Sub Package\")"
  },
  {
    "label": "DEFINE_SCENEOUTLINER_BUILTIN_COLUMN_TYPE()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DEFINE_SCENEOUTLINER_BUILTIN_COLUMN_TYPE(Pinned, \"Pinned\", \"SceneOutlinerPinnedColumn\", \"Pinned\")"
  },
  {
    "label": "DEFINE_SCENEOUTLINER_BUILTIN_COLUMN_TYPE()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DEFINE_SCENEOUTLINER_BUILTIN_COLUMN_TYPE(IDName, \"ID Name\", \"SceneOutlinerIDNameColumn\", \"ID Name\")"
  },
  {
    "label": "DEFINE_SCENEOUTLINER_BUILTIN_COLUMN_TYPE()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DEFINE_SCENEOUTLINER_BUILTIN_COLUMN_TYPE(PackageShortName, \"Package Short Name\", \"SceneOutlinerPackageShortNameColumn\", \"Package Short Name\")"
  },
  {
    "label": "DEFINE_SCENEOUTLINER_BUILTIN_COLUMN_TYPE()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DEFINE_SCENEOUTLINER_BUILTIN_COLUMN_TYPE(UncachedLights, \"Uncached Lights\", \"SceneOutlinerUncachedLightsColumn\", \"# Uncached Lights\")"
  },
  {
    "label": "DEFINE_SCENEOUTLINER_BUILTIN_COLUMN_TYPE()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DEFINE_SCENEOUTLINER_BUILTIN_COLUMN_TYPE(Socket, \"Socket\", \"SceneOutlinerSocketColumn\", \"Socket\")"
  },
  {
    "label": "DEFINE_SCENEOUTLINER_BUILTIN_COLUMN_TYPE()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DEFINE_SCENEOUTLINER_BUILTIN_COLUMN_TYPE(Unsaved, \"Unsaved\", \"UnsavedColumnName\", \"Unsaved\")"
  },
  {
    "label": "FSceneOutlinerColumnInfo()",
    "kind": "Method",
    "detail": "Function (} ; enum class ESceneOutlinerColumnVisibility : uint8 { Visible,Invisible,} ; struct FSceneOutlinerColumnInfo {)",
    "insertText": "FSceneOutlinerColumnInfo(ESceneOutlinerColumnVisibility InVisibility, uint8 InPriorityIndex, const FCreateSceneOutlinerColumn& InFactory = FCreateSceneOutlinerColumn() , bool inCanBeHidden = true, TOptional<float> InFillSize = TOptional<float>(), TAttribute<FText> InColumnLabel = TAttribute<FText>() , EHeaderComboVisibility InHeaderComboVisibility = EHeaderComboVisibility::OnHover, FOnGetContent InOnGetMenuContent = FOnGetContent()) : Visibility(InVisibility), PriorityIndex(InPriorityIndex), bCanBeHidden(inCanBeHidden) , Factory(InFactory), FillSize(InFillSize), ColumnLabel(InColumnLabel) , HeaderComboVisibility(InHeaderComboVisibility), OnGetHeaderContextMenuContent(InOnGetMenuContent)"
  },
  {
    "label": "FSceneOutlinerColumnInfo()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FSceneOutlinerColumnInfo()"
  },
  {
    "label": "FSceneOutlinerColumnInfo()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FSceneOutlinerColumnInfo(const FSceneOutlinerColumnInfo& InColumnInfo) : Visibility(InColumnInfo.Visibility), PriorityIndex(InColumnInfo.PriorityIndex) , bCanBeHidden(InColumnInfo.bCanBeHidden), Factory(InColumnInfo.Factory) , FillSize(InColumnInfo.FillSize), ColumnLabel(InColumnInfo.ColumnLabel) , HeaderComboVisibility(InColumnInfo.HeaderComboVisibility) , OnGetHeaderContextMenuContent(InColumnInfo.OnGetHeaderContextMenuContent)"
  },
  {
    "label": "FSharedSceneOutlinerData()",
    "kind": "Method",
    "detail": "Function (} ESceneOutlinerColumnVisibility Visibility ; uint8 PriorityIndex ; bool bCanBeHidden ; FCreateSceneOutlinerColumn Factory ; TOptional<float> FillSize ; TAttribute<FText> ColumnLabel ; EHeaderComboVisibility HeaderComboVisibility ; FOnGetContent OnGetHeaderContextMenuContent ; } ; struct FSharedSceneOutlinerData { FCustomSceneOutlinerDeleteDelegate CustomDelete ; FSceneOutlinerModifyContextMenu ModifyContextMenu ; TMap<FName,FSceneOutlinerColumnInfo> ColumnMap ; bool bShowParentTree : 1 ; bool bOnlyShowFolders : 1 ; bool bShowTransient : 1 ; public :)",
    "insertText": "FSharedSceneOutlinerData() : bShowParentTree( true ) , bOnlyShowFolders( false ) , bShowTransient( false)"
  },
  {
    "label": "UseDefaultColumns()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "UseDefaultColumns()"
  },
  {
    "label": "FSceneOutlinerInitializationOptions()",
    "kind": "Method",
    "detail": "Function (} ; struct FSceneOutlinerFilterBarOptions { bool bHasFilterBar = false ; TArray<TSharedRef<FFilterBase<SceneOutliner::FilterBarType>>> CustomFilters ; TArray<TSharedRef<FCustomClassFilterData>> CustomClassFilters ; bool bUseSharedSettings = false ; TSharedPtr<FFilterCategory> CategoryToExpand ; } ; struct FSceneOutlinerInitializationOptions : FSharedSceneOutlinerData { bool bShowHeaderRow : 1 ; bool bCanSelectGeneratedColumns : 1 ; bool bShowSearchBox : 1 ; bool bFocusSearchBoxWhenOpened : 1 ; bool bShowCreateNewFolder : 1 ; TSharedPtr<FSceneOutlinerFilters> Filters ; FCreateSceneOutlinerMode ModeFactory ; FName OutlinerIdentifier ; FSceneOutlinerFilterBarOptions FilterBarOptions ; public :)",
    "insertText": "FSceneOutlinerInitializationOptions() : bShowHeaderRow( true ) , bCanSelectGeneratedColumns( true ) , bShowSearchBox( true ) , bFocusSearchBoxWhenOpened( false ) , bShowCreateNewFolder( true ) , Filters( new FSceneOutlinerFilters ) , ModeFactory() , OutlinerIdentifier(NAME_None)"
  },
  {
    "label": "RowHeight()",
    "kind": "Method",
    "detail": "Function (} } ; struct FSceneOutlinerDefaultTreeItemMetrics { int32)",
    "insertText": "RowHeight()"
  },
  {
    "label": "RecurseChildren()",
    "kind": "Method",
    "detail": "Function (} ; } ; struct FSceneOutlinerVisibilityCache { TMap<const ISceneOutlinerTreeItem*,bool> VisibilityInfo ; bool)",
    "insertText": "RecurseChildren(const ISceneOutlinerTreeItem& Item)"
  },
  {
    "label": "GetVisibility()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetVisibility(const ISceneOutlinerTreeItem& Item)"
  }
]