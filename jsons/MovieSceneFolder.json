[
  {
    "label": "FArchive",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FArchive"
  },
  {
    "label": "ITransactionObjectAnnotation",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITransactionObjectAnnotation"
  },
  {
    "label": "UMovieSceneTrack",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieSceneTrack"
  },
  {
    "label": "IFolderEventHandler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IFolderEventHandler"
  },
  {
    "label": "UMovieSceneFolder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieSceneFolder"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" Containers / ArrayView . h \" # include \" Containers / UnrealString . h \" # include \" CoreMinimal . h \" # include \" CoreTypes . h \" # include \" EventHandlers / IFolderEventHandler . h \" # include \" EventHandlers / MovieSceneDataEventContainer . h \" # include \" Math / Color . h \" # include \" Misc / Guid . h \" # include \" Templates / SharedPointer . h \" # include \" UObject / NameTypes . h \" # include \" UObject / Object . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / ObjectPtr . h \" # include \" UObject / UObjectGlobals . h \" # include \" MovieSceneFolder . generated . h \" class FArchive ; class ITransactionObjectAnnotation ; class UMovieSceneTrack ; namespace UE { namespace MovieScene { class IFolderEventHandler ; } })",
    "insertText": "UCLASS(DefaultToInstanced, MinimalAPI, BlueprintType)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() MOVIESCENE_API FName GetFolderName()"
  },
  {
    "label": "SetFolderName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFolderName(FName InFolderName)"
  },
  {
    "label": "GetChildFolders()",
    "kind": "Method",
    "detail": "Function (TArrayView<UMovieSceneFolder* const>)",
    "insertText": "GetChildFolders()"
  },
  {
    "label": "AddChildFolder()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddChildFolder(UMovieSceneFolder* InChildFolder)"
  },
  {
    "label": "RemoveChildFolder()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveChildFolder(UMovieSceneFolder* InChildFolder)"
  },
  {
    "label": "GetChildTracks()",
    "kind": "Method",
    "detail": "Function (const TArray<UMovieSceneTrack*>&)",
    "insertText": "GetChildTracks()"
  },
  {
    "label": "AddChildTrack()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddChildTrack(UMovieSceneTrack* InTrack)"
  },
  {
    "label": "RemoveChildTrack()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveChildTrack(UMovieSceneTrack* InTrack)"
  },
  {
    "label": "ClearChildTracks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearChildTracks()"
  },
  {
    "label": "GetChildObjectBindings()",
    "kind": "Method",
    "detail": "Function (const TArray<FGuid>&)",
    "insertText": "GetChildObjectBindings()"
  },
  {
    "label": "AddChildObjectBinding()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddChildObjectBinding(const FGuid& InObjectBinding)"
  },
  {
    "label": "RemoveChildObjectBinding()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveChildObjectBinding(const FGuid& InObjectBinding)"
  },
  {
    "label": "ClearChildObjectBindings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearChildObjectBindings()"
  },
  {
    "label": "PostLoad()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostLoad()"
  },
  {
    "label": "FindFolderContaining()",
    "kind": "Method",
    "detail": "Function (UMovieSceneFolder*)",
    "insertText": "FindFolderContaining(const FGuid& InObjectBinding)"
  },
  {
    "label": "FindFolderContaining()",
    "kind": "Method",
    "detail": "Function (UMovieSceneFolder*)",
    "insertText": "FindFolderContaining(const UMovieSceneTrack* InTrack)"
  },
  {
    "label": "CalculateFolderPath()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CalculateFolderPath(UMovieSceneFolder* InFolder, TArrayView<UMovieSceneFolder* const> RootFolders, TArray<FName>& FolderPath)"
  },
  {
    "label": "GetFolderWithPath()",
    "kind": "Method",
    "detail": "Function (UMovieSceneFolder*)",
    "insertText": "GetFolderWithPath(const TArray<FName>& InFolderPath, const TArray<UMovieSceneFolder*>& InFolders, TArrayView<UMovieSceneFolder* const> RootFolders)"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Serialize(FArchive& Archive)"
  },
  {
    "label": "MakeUniqueChildFolderName()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "MakeUniqueChildFolderName(FName InName)"
  },
  {
    "label": "MakeUniqueChildFolderName()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "MakeUniqueChildFolderName(FName InName, TArrayView<UMovieSceneFolder* const> InFolders)"
  },
  {
    "label": "GetFolderColor()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITORONLY_DATA const FColor&)",
    "insertText": "GetFolderColor()"
  },
  {
    "label": "GetSortingOrder()",
    "kind": "Method",
    "detail": "Function (FolderColor = InFolderColor ; } int32)",
    "insertText": "GetSortingOrder()"
  },
  {
    "label": "PostEditUndo()",
    "kind": "Method",
    "detail": "Function (SortingOrder = InSortingOrder ; } # endif # if WITH_EDITOR void)",
    "insertText": "PostEditUndo()"
  },
  {
    "label": "PostEditUndo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostEditUndo(TSharedPtr<ITransactionObjectAnnotation> TransactionAnnotation)"
  },
  {
    "label": "GetMovieSceneFoldersRecursive()",
    "kind": "Method",
    "detail": "Function (# endif } ; void)",
    "insertText": "GetMovieSceneFoldersRecursive(TArrayView<UMovieSceneFolder* const> InFoldersToRecurse, TArray<UMovieSceneFolder*>& OutFolders)"
  }
]