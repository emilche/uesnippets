[
  {
    "label": "ITableRow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITableRow"
  },
  {
    "label": "STableViewBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "STableViewBase"
  },
  {
    "label": "IStructureDetailsView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IStructureDetailsView"
  },
  {
    "label": "FStructOnScope",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStructOnScope"
  },
  {
    "label": "SHeaderRow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SHeaderRow"
  },
  {
    "label": "SScrollBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SScrollBox"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "FAnimAttributeEntry",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAnimAttributeEntry"
  },
  {
    "label": "SAnimAttributeEntry",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SAnimAttributeEntry"
  },
  {
    "label": "PERSONA_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PERSONA_API"
  },
  {
    "label": "FAttributeValueView",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAttributeValueView"
  },
  {
    "label": "MakeEntry()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" IStructureDetailsView . h \" # include \" Widgets / Views / SListView . h \" # include \" Widgets / Views / STableRow . h \" # include \" Widgets / SCompoundWidget . h \" # include \" Animation / AttributesRuntime . h \" # include \" Animation / AnimData / AttributeIdentifier . h \" class ITableRow ; class STableViewBase ; class IStructureDetailsView ; class FStructOnScope ; class SHeaderRow ; class SScrollBox ; namespace EColumnSortMode { enum Type ; } class FAnimAttributeEntry : public TSharedFromThis<FAnimAttributeEntry> { public : TSharedRef<FAnimAttributeEntry>)",
    "insertText": "MakeEntry(const FAnimationAttributeIdentifier& InIdentifier, const FName& InSnapshotDisplayName)"
  },
  {
    "label": "FAnimAttributeEntry()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FAnimAttributeEntry()"
  },
  {
    "label": "FAnimAttributeEntry()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FAnimAttributeEntry(const FAnimationAttributeIdentifier& InIdentifier, const FName& InSnapshotDisplayName)"
  },
  {
    "label": "MakeTableRowWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<ITableRow>)",
    "insertText": "MakeTableRowWidget(const TSharedRef<STableViewBase>& InOwnerTable)"
  },
  {
    "label": "GetName()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetName()"
  },
  {
    "label": "GetBoneName()",
    "kind": "Method",
    "detail": "Function (} FName)",
    "insertText": "GetBoneName()"
  },
  {
    "label": "GetBoneIndex()",
    "kind": "Method",
    "detail": "Function (} int32)",
    "insertText": "GetBoneIndex()"
  },
  {
    "label": "GetTypeName()",
    "kind": "Method",
    "detail": "Function (} FName)",
    "insertText": "GetTypeName()"
  },
  {
    "label": "GetSnapshotDisplayName()",
    "kind": "Method",
    "detail": "Function (} FName)",
    "insertText": "GetSnapshotDisplayName()"
  },
  {
    "label": "GetAttributeId()",
    "kind": "Method",
    "detail": "Function (UE::Anim::FAttributeId)",
    "insertText": "GetAttributeId()"
  },
  {
    "label": "GetAnimationAttributeIdentifier()",
    "kind": "Method",
    "detail": "Function (} ; const FAnimationAttributeIdentifier&)",
    "insertText": "GetAnimationAttributeIdentifier()"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (} private : FAnimationAttributeIdentifier Identifier ; FName SnapshotDisplayName ; FName CachedTypeName ; } ; class SAnimAttributeEntry : public SMultiColumnTableRow<TSharedPtr<FAnimAttributeEntry>> {)",
    "insertText": "SLATE_BEGIN_ARGS(SAnimAttributeEntry)"
  },
  {
    "label": "SLATE_END_ARGS()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_END_ARGS() void Construct( const FArguments& InArgs, const TSharedRef<STableViewBase>& InOwnerTable, TSharedRef<FAnimAttributeEntry> InEntry)"
  },
  {
    "label": "GenerateWidgetForColumn()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "GenerateWidgetForColumn(const FName& ColumnName)"
  },
  {
    "label": "GetEntryName()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetEntryName()"
  },
  {
    "label": "GetEntryBoneName()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetEntryBoneName()"
  },
  {
    "label": "GetEntryTypeName()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetEntryTypeName()"
  },
  {
    "label": "GetEntrySnapshotDisplayName()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetEntrySnapshotDisplayName()"
  },
  {
    "label": "CreateValueViewWidget()",
    "kind": "Method",
    "detail": "Function (private : TWeakPtr<FAnimAttributeEntry> Entry ; } ; class SAnimAttributeView : public SCompoundWidget { private : TSharedRef<IStructureDetailsView>)",
    "insertText": "CreateValueViewWidget()"
  },
  {
    "label": "MakeTableRowWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<ITableRow>)",
    "insertText": "MakeTableRowWidget(TSharedPtr<FAnimAttributeEntry> InItem, const TSharedRef<STableViewBase>& InOwnerTable)"
  },
  {
    "label": "GetSnapshotColumnDisplayName()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetSnapshotColumnDisplayName(const TArray<FName>& InSnapshotNames)"
  },
  {
    "label": "DECLARE_DELEGATE_RetVal_OneParam()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "DECLARE_DELEGATE_RetVal_OneParam(FName, FOnGetAttributeSnapshotColumnDisplayName, const TArray<FName>& ) SLATE_BEGIN_ARGS( SAnimAttributeView ) : _SnapshotColumnLabelOverride(FText::FromString(TEXT(\"Direction\")))"
  },
  {
    "label": "SLATE_EVENT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_EVENT(FOnGetAttributeSnapshotColumnDisplayName, OnGetAttributeSnapshotColumnDisplayName) SLATE_ATTRIBUTE(FText, SnapshotColumnLabelOverride) SLATE_END_ARGS() SAnimAttributeView()"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct(const FArguments& InArgs)"
  },
  {
    "label": "DisplayNewAttributeContainerSnapshots()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DisplayNewAttributeContainerSnapshots(const TArray<TTuple<FName, const UE::Anim::FHeapAttributeContainer&>>& InSnapshots, const USkeletalMeshComponent* InOwningComponent)"
  },
  {
    "label": "ClearListView()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearListView()"
  },
  {
    "label": "Tick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Tick(const FGeometry& AllottedGeometry, const double InCurrentTime, const float InDeltaTime)"
  },
  {
    "label": "ShouldInvalidateListViewCache()",
    "kind": "Method",
    "detail": "Function (private : bool)",
    "insertText": "ShouldInvalidateListViewCache(const TArray<TTuple<FName, const UE::Anim::FHeapAttributeContainer&>>& InSnapshots, const USkeletalMeshComponent* InOwningComponent)"
  },
  {
    "label": "OnSelectionChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSelectionChanged(TSharedPtr<FAnimAttributeEntry> InEntry, ESelectInfo::Type InSelectType)"
  },
  {
    "label": "OnFilterTextChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnFilterTextChanged(const FText& InText)"
  },
  {
    "label": "GetSortModeForColumn()",
    "kind": "Method",
    "detail": "Function (EColumnSortMode::Type)",
    "insertText": "GetSortModeForColumn(FName InColumnId)"
  },
  {
    "label": "OnSortAttributeEntries()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSortAttributeEntries(EColumnSortPriority::Type InPriority, const FName& InColumnId, EColumnSortMode::Type InSortMode)"
  },
  {
    "label": "ExecuteSort()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExecuteSort()"
  },
  {
    "label": "RefreshFilteredAttributeEntries()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RefreshFilteredAttributeEntries()"
  },
  {
    "label": "RefreshValueView()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RefreshValueView()"
  },
  {
    "label": "FAttributeValueView()",
    "kind": "Method",
    "detail": "Function (private : TSharedPtr<SListView<TSharedPtr<FAnimAttributeEntry>>> AttributeListView ; bool bShouldRefreshListView ; TSharedPtr<SHeaderRow> HeaderRow ; FName ColumnIdToSort ; EColumnSortMode::Type ActiveSortMode ; FOnGetAttributeSnapshotColumnDisplayName OnGetAttributeSnapshotColumnDisplayName ; TAttribute<FText> SnapshotColumnLabelOverride ; int32 CachedNumSnapshots ; TArray<TTuple<FName,TArray<FAnimationAttributeIdentifier>>> CachedAttributeIdentifierLists ; TMap<FAnimationAttributeIdentifier,TArray<FName>> CachedAttributeSnapshotMap ; TMap<FName,int32> CachedSnapshotNameIndexMap ; TArray<TSharedPtr<FAnimAttributeEntry>> FilteredAttributeEntries ; FString FilterText ; TSharedPtr<SScrollBox> ValueViewBox ; bool bShouldRefreshValueView ; TOptional<FAnimAttributeEntry> SelectedAttribute ; struct FAttributeValueView {)",
    "insertText": "FAttributeValueView(FName InSnapshotName, const FAnimAttributeEntry& InSelectedAttribute)"
  },
  {
    "label": "UpdateValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateValue(const UE::Anim::FHeapAttributeContainer& InAttributeContainer)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (CachedNumSnapshots = 0 ; CachedAttributeIdentifierLists .)",
    "insertText": "Reset()"
  }
]