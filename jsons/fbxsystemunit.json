[
  {
    "label": "FbxAMatrix",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FbxAMatrix"
  },
  {
    "label": "FbxScene",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FbxScene"
  },
  {
    "label": "FbxNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FbxNode"
  },
  {
    "label": "FbxAnimCurveNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FbxAnimCurveNode"
  },
  {
    "label": "FBXSDK_DLL",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBXSDK_DLL"
  },
  {
    "label": "ConversionOptions",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ConversionOptions"
  },
  {
    "label": "FbxGlobalSettings",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FbxGlobalSettings"
  },
  {
    "label": "FbxSystemUnit()",
    "kind": "Method",
    "detail": "Function (# ifndef _FBXSDK_CORE_SYSTEM_UNIT_H_ # define _FBXSDK_CORE_SYSTEM_UNIT_H_ # include<fbxsdk / fbxsdk_def . h> # include<fbxsdk / core / base / fbxstring . h> # include<fbxsdk / core / base / fbxarray . h> # include<fbxsdk / fbxsdk_nsbegin . h> class FbxAMatrix ; class FbxScene ; class FbxNode ; class FbxAnimCurveNode ; class FBXSDK_DLL FbxSystemUnit { public : struct ConversionOptions { bool mConvertRrsNodes ; bool mConvertLimits ; bool mConvertClusters ; bool mConvertLightIntensity ; bool mConvertPhotometricLProperties ; bool mConvertCameraClipPlanes ; } ;)",
    "insertText": "FbxSystemUnit()"
  },
  {
    "label": "FbxSystemUnit()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FbxSystemUnit(double pScaleFactor, double pMultiplier = 1.0)"
  },
  {
    "label": "ConvertScene()",
    "kind": "Method",
    "detail": "Function (const FbxSystemUnit mm ; const FbxSystemUnit dm ; const FbxSystemUnit cm ; const FbxSystemUnit m ; const FbxSystemUnit km ; const FbxSystemUnit Inch ; const FbxSystemUnit Foot ; const FbxSystemUnit Mile ; const FbxSystemUnit Yard ; # define FBXSDK_SYSTEM_UNIT_PREDEF_COUNT 9 const FbxSystemUnit* sPredefinedUnits ; const ConversionOptions DefaultConversionOptions ; void)",
    "insertText": "ConvertScene(FbxScene* pScene, const ConversionOptions& pOptions = DefaultConversionOptions)"
  },
  {
    "label": "ConvertChildren()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConvertChildren(FbxNode* pRoot, const FbxSystemUnit& pSrcUnit, const ConversionOptions& pOptions = DefaultConversionOptions)"
  },
  {
    "label": "ConvertScene()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConvertScene(FbxScene* pScene, FbxNode* pFbxRoot, const ConversionOptions& pOptions = DefaultConversionOptions)"
  },
  {
    "label": "GetScaleFactorAsString()",
    "kind": "Method",
    "detail": "Function (FbxString)",
    "insertText": "GetScaleFactorAsString(bool pAbbreviated = true)"
  },
  {
    "label": "GetScaleFactorAsString_Plurial()",
    "kind": "Method",
    "detail": "Function (FbxString)",
    "insertText": "GetScaleFactorAsString_Plurial()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "operator(const FbxSystemUnit& pOther)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FbxSystemUnit&)",
    "insertText": "operator(const FbxSystemUnit& pSystemUnit)"
  },
  {
    "label": "ApplyMultiplier()",
    "kind": "Method",
    "detail": "Function (# ifndef DOXYGEN_SHOULD_SKIP_THIS private : void)",
    "insertText": "ApplyMultiplier(FbxNode* pRoot, bool pSubChildrenOnly)"
  },
  {
    "label": "ConvertSTProperties()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConvertSTProperties(FbxArray<FbxNode*>& pNodes, double pConversionFactor)"
  },
  {
    "label": "ConvertSProperty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConvertSProperty(FbxArray<FbxNode*>& pNodes, double pConversionFactor)"
  },
  {
    "label": "ConvertAnimCurveNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConvertAnimCurveNode(FbxArray<FbxAnimCurveNode*>& pFCurves, double pConversionFactor)"
  },
  {
    "label": "AdjustPivots()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AdjustPivots(FbxNode* pNode, double pConversionFactor, FbxAMatrix& pOriginalGlobalM)"
  },
  {
    "label": "AdjustLimits()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AdjustLimits(FbxNode* pNode, double pConversionFactor)"
  },
  {
    "label": "AdjustPoses()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AdjustPoses(FbxScene* pScene, double pConversionFactor)"
  },
  {
    "label": "AdjustCluster()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AdjustCluster(FbxNode* pNode, double pConversionFactor)"
  },
  {
    "label": "AdjustLightIntensity()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AdjustLightIntensity(FbxNode* pNode, const double pConversionFactor)"
  },
  {
    "label": "AdjustPhotometricLightProperties()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AdjustPhotometricLightProperties(FbxNode* pNode, const double pConversionFactor)"
  },
  {
    "label": "AdjustCameraClipPlanes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AdjustCameraClipPlanes(FbxNode* pNode, const double pConversionFactor)"
  },
  {
    "label": "ConvertChildren()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConvertChildren(FbxNode* pRoot, const FbxSystemUnit& pSrcUnit, bool pSubChildrenOnly, const ConversionOptions& pOptions)"
  }
]