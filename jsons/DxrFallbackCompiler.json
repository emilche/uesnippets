[
  {
    "label": "CallInst",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CallInst"
  },
  {
    "label": "Function",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Function"
  },
  {
    "label": "Module",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Module"
  },
  {
    "label": "Type",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Type"
  },
  {
    "label": "DxrFallbackCompiler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DxrFallbackCompiler"
  },
  {
    "label": "DxrFallbackCompiler()",
    "kind": "Method",
    "detail": "Function (# pragma once # include<map> # include<memory> # include<string> # include<vector> namespace llvm { class CallInst ; class Function ; class Module ; class Type ; } class DxrFallbackCompiler { public : typedef std::map<int,std::string> IntToFuncNameMap ;)",
    "insertText": "DxrFallbackCompiler(llvm::Module *mod, const std::vector<std::string> &shaderNames, unsigned maxAttributeSize, unsigned stackSizeInBytes, bool findCalledShaders = false)"
  },
  {
    "label": "setDebugOutputLevel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setDebugOutputLevel(int val)"
  },
  {
    "label": "compile()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "compile(std::vector<int> &shaderEntryStateIds, std::vector<unsigned int> &shaderStackSizes, IntToFuncNameMap *pCachedMap)"
  },
  {
    "label": "link()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "link(std::vector<int> &shaderEntryStateIds, std::vector<unsigned int> &shaderStackSizes, IntToFuncNameMap *pCachedMap)"
  },
  {
    "label": "resizeStack()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "resizeStack(llvm::Function *F, unsigned stackSizeInBytes)"
  },
  {
    "label": "initShaderMap()",
    "kind": "Method",
    "detail": "Function (private : typedef std::map<int,llvm::Function*> IntToFuncMap ; typedef std::map<std::string,llvm::Function*> StringToFuncMap ; llvm::Module* m_module = nullptr ; const std::vector<std::string>& m_entryShaderNames ; unsigned m_stackSizeInBytes = 0 ; unsigned m_maxAttributeSize = 0 ; bool m_findCalledShaders = false ; int m_debugOutputLevel = 0 ; StringToFuncMap m_shaderMap ; void)",
    "insertText": "initShaderMap(std::vector<std::string> &shaderNames)"
  },
  {
    "label": "linkRuntime()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "linkRuntime()"
  },
  {
    "label": "lowerAnyHitControlFlowFuncs()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "lowerAnyHitControlFlowFuncs()"
  },
  {
    "label": "lowerReportHit()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "lowerReportHit()"
  },
  {
    "label": "lowerTraceRay()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "lowerTraceRay(llvm::Type *runtimeDataArgTy)"
  },
  {
    "label": "createStateFunctions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "createStateFunctions(IntToFuncMap &stateFunctionMap, std::vector<int> &shaderEntryStateIds, std::vector<unsigned int> &shaderStackSizes, int baseStateId, const std::vector<std::string> &shaderNames, llvm::Type *runtimeDataArgTy)"
  },
  {
    "label": "createLaunchParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "createLaunchParams(llvm::Function *func)"
  },
  {
    "label": "createStack()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "createStack(llvm::Function *func)"
  },
  {
    "label": "createStateDispatch()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "createStateDispatch(llvm::Function *func, const IntToFuncMap &stateFunctionMap, llvm::Type *runtimeDataArgTy)"
  },
  {
    "label": "lowerIntrinsics()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "lowerIntrinsics()"
  },
  {
    "label": "getRuntimeDataArgType()",
    "kind": "Method",
    "detail": "Function (llvm::Type*)",
    "insertText": "getRuntimeDataArgType()"
  },
  {
    "label": "createDispatchFunction()",
    "kind": "Method",
    "detail": "Function (llvm::Function*)",
    "insertText": "createDispatchFunction(const IntToFuncMap &stateFunctionMap, llvm::Type *runtimeDataArgTy)"
  },
  {
    "label": "getCallsInShadersToFunction()",
    "kind": "Method",
    "detail": "Function (std::vector<llvm::CallInst*>)",
    "insertText": "getCallsInShadersToFunction(const std::string &funcName)"
  },
  {
    "label": "getCallsInShadersToFunctionWithPrefix()",
    "kind": "Method",
    "detail": "Function (std::vector<llvm::CallInst*>)",
    "insertText": "getCallsInShadersToFunctionWithPrefix(const std::string &funcNamePrefix)"
  }
]