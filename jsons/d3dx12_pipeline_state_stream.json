[
  {
    "label": "D3DX12_MESH_SHADER_PIPELINE_STATE_DESC",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "D3DX12_MESH_SHADER_PIPELINE_STATE_DESC"
  },
  {
    "label": "CD3DX12_PIPELINE_STATE_STREAM5",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "CD3DX12_PIPELINE_STATE_STREAM5"
  },
  {
    "label": "CD3DX12_PIPELINE_STATE_STREAM4",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "CD3DX12_PIPELINE_STATE_STREAM4"
  },
  {
    "label": "CD3DX12_PIPELINE_STATE_STREAM3",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "CD3DX12_PIPELINE_STATE_STREAM3"
  },
  {
    "label": "CD3DX12_PIPELINE_STATE_STREAM2",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "CD3DX12_PIPELINE_STATE_STREAM2"
  },
  {
    "label": "CD3DX12_PIPELINE_STATE_STREAM1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "CD3DX12_PIPELINE_STATE_STREAM1"
  },
  {
    "label": "CD3DX12_PIPELINE_MESH_STATE_STREAM",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "CD3DX12_PIPELINE_MESH_STATE_STREAM"
  },
  {
    "label": "CD3DX12_PIPELINE_STATE_STREAM",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "CD3DX12_PIPELINE_STATE_STREAM"
  },
  {
    "label": "CD3DX12_PIPELINE_STATE_STREAM2_PARSE_HELPER",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "CD3DX12_PIPELINE_STATE_STREAM2_PARSE_HELPER"
  },
  {
    "label": "CD3DX12_PIPELINE_STATE_STREAM3_PARSE_HELPER",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "CD3DX12_PIPELINE_STATE_STREAM3_PARSE_HELPER"
  },
  {
    "label": "CD3DX12_PIPELINE_STATE_STREAM4_PARSE_HELPER",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "CD3DX12_PIPELINE_STATE_STREAM4_PARSE_HELPER"
  },
  {
    "label": "CD3DX12_PIPELINE_STATE_STREAM5_PARSE_HELPER",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "CD3DX12_PIPELINE_STATE_STREAM5_PARSE_HELPER"
  },
  {
    "label": "CD3DX12_PIPELINE_STATE_STREAM_PARSE_HELPER",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "CD3DX12_PIPELINE_STATE_STREAM_PARSE_HELPER"
  },
  {
    "label": "ErrorDuplicateSubobject()",
    "kind": "Method",
    "detail": "Function (/ ) { } void)",
    "insertText": "ErrorDuplicateSubobject(D3D12_PIPELINE_STATE_SUBOBJECT_TYPE)"
  },
  {
    "label": "ErrorUnknownSubobject()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "ErrorUnknownSubobject(UINT)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (} # if)",
    "insertText": "defined(D3D12_SDK_VERSION) && (D3D12_SDK_VERSION >= 613) virtual void FinalizeCb()"
  },
  {
    "label": "ID3DX12PipelineParserCallbacks()",
    "kind": "Method",
    "detail": "Function (} # endif ~)",
    "insertText": "ID3DX12PipelineParserCallbacks()"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (} ; struct D3DX12_MESH_SHADER_PIPELINE_STATE_DESC { ID3D12RootSignature* pRootSignature ; D3D12_SHADER_BYTECODE AS ; D3D12_SHADER_BYTECODE MS ; D3D12_SHADER_BYTECODE PS ; D3D12_BLEND_DESC BlendState ; UINT SampleMask ; D3D12_RASTERIZER_DESC RasterizerState ; D3D12_DEPTH_STENCIL_DESC DepthStencilState ; D3D12_PRIMITIVE_TOPOLOGY_TYPE PrimitiveTopologyType ; UINT NumRenderTargets ; DXGI_FORMAT RTVFormats [ D3D12_SIMULTANEOUS_RENDER_TARGET_COUNT ] ; DXGI_FORMAT DSVFormat ; DXGI_SAMPLE_DESC SampleDesc ; UINT NodeMask ; D3D12_CACHED_PIPELINE_STATE CachedPSO ; D3D12_PIPELINE_STATE_FLAGS Flags ; } ; # if)",
    "insertText": "defined(D3D12_SDK_VERSION) && (D3D12_SDK_VERSION >= 610)"
  },
  {
    "label": "CD3DX12_PIPELINE_STATE_STREAM5()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CD3DX12_PIPELINE_STATE_STREAM5()"
  },
  {
    "label": "CD3DX12_PIPELINE_STATE_STREAM5()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CD3DX12_PIPELINE_STATE_STREAM5(const D3D12_GRAPHICS_PIPELINE_STATE_DESC& Desc) noexcept : Flags(Desc.Flags) , NodeMask(Desc.NodeMask) , pRootSignature(Desc.pRootSignature) , InputLayout(Desc.InputLayout) , IBStripCutValue(Desc.IBStripCutValue) , PrimitiveTopologyType(Desc.PrimitiveTopologyType) , VS(Desc.VS) , GS(Desc.GS) , StreamOutput(Desc.StreamOutput) , HS(Desc.HS) , DS(Desc.DS) , PS(Desc.PS) , BlendState(CD3DX12_BLEND_DESC(Desc.BlendState)) , DepthStencilState(CD3DX12_DEPTH_STENCIL_DESC2(Desc.DepthStencilState)) , DSVFormat(Desc.DSVFormat) , RasterizerState(CD3DX12_RASTERIZER_DESC2(Desc.RasterizerState)) , RTVFormats(CD3DX12_RT_FORMAT_ARRAY(Desc.RTVFormats, Desc.NumRenderTargets)) , SampleDesc(Desc.SampleDesc) , SampleMask(Desc.SampleMask) , CachedPSO(Desc.CachedPSO) , ViewInstancingDesc(CD3DX12_VIEW_INSTANCING_DESC(CD3DX12_DEFAULT()))"
  },
  {
    "label": "CD3DX12_PIPELINE_STATE_STREAM5()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "CD3DX12_PIPELINE_STATE_STREAM5(const D3DX12_MESH_SHADER_PIPELINE_STATE_DESC& Desc) noexcept : Flags(Desc.Flags) , NodeMask(Desc.NodeMask) , pRootSignature(Desc.pRootSignature) , PrimitiveTopologyType(Desc.PrimitiveTopologyType) , PS(Desc.PS) , AS(Desc.AS) , MS(Desc.MS) , BlendState(CD3DX12_BLEND_DESC(Desc.BlendState)) , DepthStencilState(CD3DX12_DEPTH_STENCIL_DESC2(Desc.DepthStencilState)) , DSVFormat(Desc.DSVFormat) , RasterizerState(CD3DX12_RASTERIZER_DESC2(Desc.RasterizerState)) , RTVFormats(CD3DX12_RT_FORMAT_ARRAY(Desc.RTVFormats, Desc.NumRenderTargets)) , SampleDesc(Desc.SampleDesc) , SampleMask(Desc.SampleMask) , CachedPSO(Desc.CachedPSO) , ViewInstancingDesc(CD3DX12_VIEW_INSTANCING_DESC(CD3DX12_DEFAULT()))"
  },
  {
    "label": "CD3DX12_PIPELINE_STATE_STREAM5()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "CD3DX12_PIPELINE_STATE_STREAM5(const D3D12_COMPUTE_PIPELINE_STATE_DESC& Desc) noexcept : Flags(Desc.Flags) , NodeMask(Desc.NodeMask) , pRootSignature(Desc.pRootSignature) , CS(CD3DX12_SHADER_BYTECODE(Desc.CS)) , CachedPSO(Desc.CachedPSO)"
  },
  {
    "label": "D3D12_DEPTH_STENCIL_DESC2()",
    "kind": "Method",
    "detail": "Function (static_cast<)",
    "insertText": "D3D12_DEPTH_STENCIL_DESC2(DepthStencilState)"
  },
  {
    "label": "GraphicsDescV0()",
    "kind": "Method",
    "detail": "Function (} CD3DX12_PIPELINE_STATE_STREAM_FLAGS Flags ; CD3DX12_PIPELINE_STATE_STREAM_NODE_MASK NodeMask ; CD3DX12_PIPELINE_STATE_STREAM_ROOT_SIGNATURE pRootSignature ; CD3DX12_PIPELINE_STATE_STREAM_INPUT_LAYOUT InputLayout ; CD3DX12_PIPELINE_STATE_STREAM_IB_STRIP_CUT_VALUE IBStripCutValue ; CD3DX12_PIPELINE_STATE_STREAM_PRIMITIVE_TOPOLOGY PrimitiveTopologyType ; CD3DX12_PIPELINE_STATE_STREAM_VS VS ; CD3DX12_PIPELINE_STATE_STREAM_GS GS ; CD3DX12_PIPELINE_STATE_STREAM_STREAM_OUTPUT StreamOutput ; CD3DX12_PIPELINE_STATE_STREAM_HS HS ; CD3DX12_PIPELINE_STATE_STREAM_DS DS ; CD3DX12_PIPELINE_STATE_STREAM_PS PS ; CD3DX12_PIPELINE_STATE_STREAM_AS AS ; CD3DX12_PIPELINE_STATE_STREAM_MS MS ; CD3DX12_PIPELINE_STATE_STREAM_CS CS ; CD3DX12_PIPELINE_STATE_STREAM_BLEND_DESC BlendState ; CD3DX12_PIPELINE_STATE_STREAM_DEPTH_STENCIL2 DepthStencilState ; CD3DX12_PIPELINE_STATE_STREAM_DEPTH_STENCIL_FORMAT DSVFormat ; CD3DX12_PIPELINE_STATE_STREAM_RASTERIZER2 RasterizerState ; CD3DX12_PIPELINE_STATE_STREAM_RENDER_TARGET_FORMATS RTVFormats ; CD3DX12_PIPELINE_STATE_STREAM_SAMPLE_DESC SampleDesc ; CD3DX12_PIPELINE_STATE_STREAM_SAMPLE_MASK SampleMask ; CD3DX12_PIPELINE_STATE_STREAM_CACHED_PSO CachedPSO ; CD3DX12_PIPELINE_STATE_STREAM_VIEW_INSTANCING ViewInstancingDesc ; D3D12_GRAPHICS_PIPELINE_STATE_DESC)",
    "insertText": "GraphicsDescV0()"
  },
  {
    "label": "CD3DX12_DEPTH_STENCIL_DESC2()",
    "kind": "Method",
    "detail": "Function (D3D12_GRAPHICS_PIPELINE_STATE_DESC D ; D . Flags = this -> Flags ; D . NodeMask = this -> NodeMask ; D . pRootSignature = this -> pRootSignature ; D . InputLayout = this -> InputLayout ; D . IBStripCutValue = this -> IBStripCutValue ; D . PrimitiveTopologyType = this -> PrimitiveTopologyType ; D . VS = this -> VS ; D . GS = this -> GS ; D . StreamOutput = this -> StreamOutput ; D . HS = this -> HS ; D . DS = this -> DS ; D . PS = this -> PS ; D . BlendState = this -> BlendState ; D . DepthStencilState =)",
    "insertText": "CD3DX12_DEPTH_STENCIL_DESC2(D3D12_DEPTH_STENCIL_DESC2(this->DepthStencilState))"
  },
  {
    "label": "CD3DX12_RASTERIZER_DESC2()",
    "kind": "Method",
    "detail": "Function (D . DSVFormat = this -> DSVFormat ; D . RasterizerState =)",
    "insertText": "CD3DX12_RASTERIZER_DESC2(D3D12_RASTERIZER_DESC2(this->RasterizerState))"
  },
  {
    "label": "D3D12_RT_FORMAT_ARRAY()",
    "kind": "Method",
    "detail": "Function (D . NumRenderTargets =)",
    "insertText": "D3D12_RT_FORMAT_ARRAY(this->RTVFormats)"
  },
  {
    "label": "memcpy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "memcpy(D.RTVFormats, D3D12_RT_FORMAT_ARRAY(this->RTVFormats).RTFormats, sizeof(D.RTVFormats))"
  },
  {
    "label": "ComputeDescV0()",
    "kind": "Method",
    "detail": "Function (D . SampleDesc = this -> SampleDesc ; D . SampleMask = this -> SampleMask ; D . CachedPSO = this -> CachedPSO ; return D ; } D3D12_COMPUTE_PIPELINE_STATE_DESC)",
    "insertText": "ComputeDescV0()"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (D3D12_COMPUTE_PIPELINE_STATE_DESC D ; D . Flags = this -> Flags ; D . NodeMask = this -> NodeMask ; D . pRootSignature = this -> pRootSignature ; D . CS = this -> CS ; D . CachedPSO = this -> CachedPSO ; return D ; } } ; # endif # if)",
    "insertText": "defined(D3D12_SDK_VERSION) && (D3D12_SDK_VERSION >= 608)"
  },
  {
    "label": "CD3DX12_PIPELINE_STATE_STREAM4()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CD3DX12_PIPELINE_STATE_STREAM4()"
  },
  {
    "label": "CD3DX12_PIPELINE_STATE_STREAM4()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CD3DX12_PIPELINE_STATE_STREAM4(const D3D12_GRAPHICS_PIPELINE_STATE_DESC& Desc) noexcept : Flags(Desc.Flags) , NodeMask(Desc.NodeMask) , pRootSignature(Desc.pRootSignature) , InputLayout(Desc.InputLayout) , IBStripCutValue(Desc.IBStripCutValue) , PrimitiveTopologyType(Desc.PrimitiveTopologyType) , VS(Desc.VS) , GS(Desc.GS) , StreamOutput(Desc.StreamOutput) , HS(Desc.HS) , DS(Desc.DS) , PS(Desc.PS) , BlendState(CD3DX12_BLEND_DESC(Desc.BlendState)) , DepthStencilState(CD3DX12_DEPTH_STENCIL_DESC2(Desc.DepthStencilState)) , DSVFormat(Desc.DSVFormat) , RasterizerState(CD3DX12_RASTERIZER_DESC1(Desc.RasterizerState)) , RTVFormats(CD3DX12_RT_FORMAT_ARRAY(Desc.RTVFormats, Desc.NumRenderTargets)) , SampleDesc(Desc.SampleDesc) , SampleMask(Desc.SampleMask) , CachedPSO(Desc.CachedPSO) , ViewInstancingDesc(CD3DX12_VIEW_INSTANCING_DESC(CD3DX12_DEFAULT()))"
  },
  {
    "label": "CD3DX12_PIPELINE_STATE_STREAM4()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "CD3DX12_PIPELINE_STATE_STREAM4(const D3DX12_MESH_SHADER_PIPELINE_STATE_DESC& Desc) noexcept : Flags(Desc.Flags) , NodeMask(Desc.NodeMask) , pRootSignature(Desc.pRootSignature) , PrimitiveTopologyType(Desc.PrimitiveTopologyType) , PS(Desc.PS) , AS(Desc.AS) , MS(Desc.MS) , BlendState(CD3DX12_BLEND_DESC(Desc.BlendState)) , DepthStencilState(CD3DX12_DEPTH_STENCIL_DESC2(Desc.DepthStencilState)) , DSVFormat(Desc.DSVFormat) , RasterizerState(CD3DX12_RASTERIZER_DESC1(Desc.RasterizerState)) , RTVFormats(CD3DX12_RT_FORMAT_ARRAY(Desc.RTVFormats, Desc.NumRenderTargets)) , SampleDesc(Desc.SampleDesc) , SampleMask(Desc.SampleMask) , CachedPSO(Desc.CachedPSO) , ViewInstancingDesc(CD3DX12_VIEW_INSTANCING_DESC(CD3DX12_DEFAULT()))"
  },
  {
    "label": "CD3DX12_PIPELINE_STATE_STREAM4()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "CD3DX12_PIPELINE_STATE_STREAM4(const D3D12_COMPUTE_PIPELINE_STATE_DESC& Desc) noexcept : Flags(Desc.Flags) , NodeMask(Desc.NodeMask) , pRootSignature(Desc.pRootSignature) , CS(CD3DX12_SHADER_BYTECODE(Desc.CS)) , CachedPSO(Desc.CachedPSO)"
  },
  {
    "label": "CD3DX12_RASTERIZER_DESC1()",
    "kind": "Method",
    "detail": "Function (D . DSVFormat = this -> DSVFormat ; D . RasterizerState =)",
    "insertText": "CD3DX12_RASTERIZER_DESC1(D3D12_RASTERIZER_DESC1(this->RasterizerState))"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (D3D12_COMPUTE_PIPELINE_STATE_DESC D ; D . Flags = this -> Flags ; D . NodeMask = this -> NodeMask ; D . pRootSignature = this -> pRootSignature ; D . CS = this -> CS ; D . CachedPSO = this -> CachedPSO ; return D ; } } ; # endif # if)",
    "insertText": "defined(D3D12_SDK_VERSION) && (D3D12_SDK_VERSION >= 606)"
  },
  {
    "label": "CD3DX12_PIPELINE_STATE_STREAM3()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CD3DX12_PIPELINE_STATE_STREAM3()"
  },
  {
    "label": "CD3DX12_PIPELINE_STATE_STREAM3()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CD3DX12_PIPELINE_STATE_STREAM3(const D3D12_GRAPHICS_PIPELINE_STATE_DESC& Desc) noexcept : Flags(Desc.Flags) , NodeMask(Desc.NodeMask) , pRootSignature(Desc.pRootSignature) , InputLayout(Desc.InputLayout) , IBStripCutValue(Desc.IBStripCutValue) , PrimitiveTopologyType(Desc.PrimitiveTopologyType) , VS(Desc.VS) , GS(Desc.GS) , StreamOutput(Desc.StreamOutput) , HS(Desc.HS) , DS(Desc.DS) , PS(Desc.PS) , BlendState(CD3DX12_BLEND_DESC(Desc.BlendState)) , DepthStencilState(CD3DX12_DEPTH_STENCIL_DESC2(Desc.DepthStencilState)) , DSVFormat(Desc.DSVFormat) , RasterizerState(CD3DX12_RASTERIZER_DESC(Desc.RasterizerState)) , RTVFormats(CD3DX12_RT_FORMAT_ARRAY(Desc.RTVFormats, Desc.NumRenderTargets)) , SampleDesc(Desc.SampleDesc) , SampleMask(Desc.SampleMask) , CachedPSO(Desc.CachedPSO) , ViewInstancingDesc(CD3DX12_VIEW_INSTANCING_DESC(CD3DX12_DEFAULT()))"
  },
  {
    "label": "CD3DX12_PIPELINE_STATE_STREAM3()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "CD3DX12_PIPELINE_STATE_STREAM3(const D3DX12_MESH_SHADER_PIPELINE_STATE_DESC& Desc) noexcept : Flags(Desc.Flags) , NodeMask(Desc.NodeMask) , pRootSignature(Desc.pRootSignature) , PrimitiveTopologyType(Desc.PrimitiveTopologyType) , PS(Desc.PS) , AS(Desc.AS) , MS(Desc.MS) , BlendState(CD3DX12_BLEND_DESC(Desc.BlendState)) , DepthStencilState(CD3DX12_DEPTH_STENCIL_DESC2(Desc.DepthStencilState)) , DSVFormat(Desc.DSVFormat) , RasterizerState(CD3DX12_RASTERIZER_DESC(Desc.RasterizerState)) , RTVFormats(CD3DX12_RT_FORMAT_ARRAY(Desc.RTVFormats, Desc.NumRenderTargets)) , SampleDesc(Desc.SampleDesc) , SampleMask(Desc.SampleMask) , CachedPSO(Desc.CachedPSO) , ViewInstancingDesc(CD3DX12_VIEW_INSTANCING_DESC(CD3DX12_DEFAULT()))"
  },
  {
    "label": "CD3DX12_PIPELINE_STATE_STREAM3()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "CD3DX12_PIPELINE_STATE_STREAM3(const D3D12_COMPUTE_PIPELINE_STATE_DESC& Desc) noexcept : Flags(Desc.Flags) , NodeMask(Desc.NodeMask) , pRootSignature(Desc.pRootSignature) , CS(CD3DX12_SHADER_BYTECODE(Desc.CS)) , CachedPSO(Desc.CachedPSO)"
  },
  {
    "label": "CD3DX12_PIPELINE_STATE_STREAM2()",
    "kind": "Method",
    "detail": "Function (D3D12_COMPUTE_PIPELINE_STATE_DESC D ; D . Flags = this -> Flags ; D . NodeMask = this -> NodeMask ; D . pRootSignature = this -> pRootSignature ; D . CS = this -> CS ; D . CachedPSO = this -> CachedPSO ; return D ; } } ; # endif struct CD3DX12_PIPELINE_STATE_STREAM2 {)",
    "insertText": "CD3DX12_PIPELINE_STATE_STREAM2()"
  },
  {
    "label": "CD3DX12_PIPELINE_STATE_STREAM2()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CD3DX12_PIPELINE_STATE_STREAM2(const D3D12_GRAPHICS_PIPELINE_STATE_DESC& Desc) noexcept : Flags(Desc.Flags) , NodeMask(Desc.NodeMask) , pRootSignature(Desc.pRootSignature) , InputLayout(Desc.InputLayout) , IBStripCutValue(Desc.IBStripCutValue) , PrimitiveTopologyType(Desc.PrimitiveTopologyType) , VS(Desc.VS) , GS(Desc.GS) , StreamOutput(Desc.StreamOutput) , HS(Desc.HS) , DS(Desc.DS) , PS(Desc.PS) , BlendState(CD3DX12_BLEND_DESC(Desc.BlendState)) , DepthStencilState(CD3DX12_DEPTH_STENCIL_DESC1(Desc.DepthStencilState)) , DSVFormat(Desc.DSVFormat) , RasterizerState(CD3DX12_RASTERIZER_DESC(Desc.RasterizerState)) , RTVFormats(CD3DX12_RT_FORMAT_ARRAY(Desc.RTVFormats, Desc.NumRenderTargets)) , SampleDesc(Desc.SampleDesc) , SampleMask(Desc.SampleMask) , CachedPSO(Desc.CachedPSO) , ViewInstancingDesc(CD3DX12_VIEW_INSTANCING_DESC(CD3DX12_DEFAULT()))"
  },
  {
    "label": "CD3DX12_PIPELINE_STATE_STREAM2()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "CD3DX12_PIPELINE_STATE_STREAM2(const D3DX12_MESH_SHADER_PIPELINE_STATE_DESC& Desc) noexcept : Flags(Desc.Flags) , NodeMask(Desc.NodeMask) , pRootSignature(Desc.pRootSignature) , PrimitiveTopologyType(Desc.PrimitiveTopologyType) , PS(Desc.PS) , AS(Desc.AS) , MS(Desc.MS) , BlendState(CD3DX12_BLEND_DESC(Desc.BlendState)) , DepthStencilState(CD3DX12_DEPTH_STENCIL_DESC1(Desc.DepthStencilState)) , DSVFormat(Desc.DSVFormat) , RasterizerState(CD3DX12_RASTERIZER_DESC(Desc.RasterizerState)) , RTVFormats(CD3DX12_RT_FORMAT_ARRAY(Desc.RTVFormats, Desc.NumRenderTargets)) , SampleDesc(Desc.SampleDesc) , SampleMask(Desc.SampleMask) , CachedPSO(Desc.CachedPSO) , ViewInstancingDesc(CD3DX12_VIEW_INSTANCING_DESC(CD3DX12_DEFAULT()))"
  },
  {
    "label": "CD3DX12_PIPELINE_STATE_STREAM2()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "CD3DX12_PIPELINE_STATE_STREAM2(const D3D12_COMPUTE_PIPELINE_STATE_DESC& Desc) noexcept : Flags(Desc.Flags) , NodeMask(Desc.NodeMask) , pRootSignature(Desc.pRootSignature) , CS(CD3DX12_SHADER_BYTECODE(Desc.CS)) , CachedPSO(Desc.CachedPSO)"
  },
  {
    "label": "D3D12_DEPTH_STENCIL_DESC1()",
    "kind": "Method",
    "detail": "Function (static_cast<)",
    "insertText": "D3D12_DEPTH_STENCIL_DESC1(DepthStencilState)"
  },
  {
    "label": "CD3DX12_DEPTH_STENCIL_DESC1()",
    "kind": "Method",
    "detail": "Function (D3D12_GRAPHICS_PIPELINE_STATE_DESC D ; D . Flags = this -> Flags ; D . NodeMask = this -> NodeMask ; D . pRootSignature = this -> pRootSignature ; D . InputLayout = this -> InputLayout ; D . IBStripCutValue = this -> IBStripCutValue ; D . PrimitiveTopologyType = this -> PrimitiveTopologyType ; D . VS = this -> VS ; D . GS = this -> GS ; D . StreamOutput = this -> StreamOutput ; D . HS = this -> HS ; D . DS = this -> DS ; D . PS = this -> PS ; D . BlendState = this -> BlendState ; D . DepthStencilState =)",
    "insertText": "CD3DX12_DEPTH_STENCIL_DESC1(D3D12_DEPTH_STENCIL_DESC1(this->DepthStencilState))"
  },
  {
    "label": "CD3DX12_PIPELINE_STATE_STREAM1()",
    "kind": "Method",
    "detail": "Function (D3D12_COMPUTE_PIPELINE_STATE_DESC D ; D . Flags = this -> Flags ; D . NodeMask = this -> NodeMask ; D . pRootSignature = this -> pRootSignature ; D . CS = this -> CS ; D . CachedPSO = this -> CachedPSO ; return D ; } } ; struct CD3DX12_PIPELINE_STATE_STREAM1 {)",
    "insertText": "CD3DX12_PIPELINE_STATE_STREAM1()"
  },
  {
    "label": "CD3DX12_PIPELINE_STATE_STREAM1()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CD3DX12_PIPELINE_STATE_STREAM1(const D3D12_GRAPHICS_PIPELINE_STATE_DESC& Desc) noexcept : Flags(Desc.Flags) , NodeMask(Desc.NodeMask) , pRootSignature(Desc.pRootSignature) , InputLayout(Desc.InputLayout) , IBStripCutValue(Desc.IBStripCutValue) , PrimitiveTopologyType(Desc.PrimitiveTopologyType) , VS(Desc.VS) , GS(Desc.GS) , StreamOutput(Desc.StreamOutput) , HS(Desc.HS) , DS(Desc.DS) , PS(Desc.PS) , BlendState(CD3DX12_BLEND_DESC(Desc.BlendState)) , DepthStencilState(CD3DX12_DEPTH_STENCIL_DESC1(Desc.DepthStencilState)) , DSVFormat(Desc.DSVFormat) , RasterizerState(CD3DX12_RASTERIZER_DESC(Desc.RasterizerState)) , RTVFormats(CD3DX12_RT_FORMAT_ARRAY(Desc.RTVFormats, Desc.NumRenderTargets)) , SampleDesc(Desc.SampleDesc) , SampleMask(Desc.SampleMask) , CachedPSO(Desc.CachedPSO) , ViewInstancingDesc(CD3DX12_VIEW_INSTANCING_DESC(CD3DX12_DEFAULT()))"
  },
  {
    "label": "CD3DX12_PIPELINE_STATE_STREAM1()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "CD3DX12_PIPELINE_STATE_STREAM1(const D3DX12_MESH_SHADER_PIPELINE_STATE_DESC& Desc) noexcept : Flags(Desc.Flags) , NodeMask(Desc.NodeMask) , pRootSignature(Desc.pRootSignature) , PrimitiveTopologyType(Desc.PrimitiveTopologyType) , PS(Desc.PS) , BlendState(CD3DX12_BLEND_DESC(Desc.BlendState)) , DepthStencilState(CD3DX12_DEPTH_STENCIL_DESC1(Desc.DepthStencilState)) , DSVFormat(Desc.DSVFormat) , RasterizerState(CD3DX12_RASTERIZER_DESC(Desc.RasterizerState)) , RTVFormats(CD3DX12_RT_FORMAT_ARRAY(Desc.RTVFormats, Desc.NumRenderTargets)) , SampleDesc(Desc.SampleDesc) , SampleMask(Desc.SampleMask) , CachedPSO(Desc.CachedPSO) , ViewInstancingDesc(CD3DX12_VIEW_INSTANCING_DESC(CD3DX12_DEFAULT()))"
  },
  {
    "label": "CD3DX12_PIPELINE_STATE_STREAM1()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "CD3DX12_PIPELINE_STATE_STREAM1(const D3D12_COMPUTE_PIPELINE_STATE_DESC& Desc) noexcept : Flags(Desc.Flags) , NodeMask(Desc.NodeMask) , pRootSignature(Desc.pRootSignature) , CS(CD3DX12_SHADER_BYTECODE(Desc.CS)) , CachedPSO(Desc.CachedPSO)"
  },
  {
    "label": "CD3DX12_PIPELINE_MESH_STATE_STREAM()",
    "kind": "Method",
    "detail": "Function (D3D12_COMPUTE_PIPELINE_STATE_DESC D ; D . Flags = this -> Flags ; D . NodeMask = this -> NodeMask ; D . pRootSignature = this -> pRootSignature ; D . CS = this -> CS ; D . CachedPSO = this -> CachedPSO ; return D ; } } ; struct CD3DX12_PIPELINE_MESH_STATE_STREAM {)",
    "insertText": "CD3DX12_PIPELINE_MESH_STATE_STREAM()"
  },
  {
    "label": "CD3DX12_PIPELINE_MESH_STATE_STREAM()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CD3DX12_PIPELINE_MESH_STATE_STREAM(const D3DX12_MESH_SHADER_PIPELINE_STATE_DESC& Desc) noexcept : Flags(Desc.Flags) , NodeMask(Desc.NodeMask) , pRootSignature(Desc.pRootSignature) , PrimitiveTopologyType(Desc.PrimitiveTopologyType) , PS(Desc.PS) , AS(Desc.AS) , MS(Desc.MS) , BlendState(CD3DX12_BLEND_DESC(Desc.BlendState)) , DepthStencilState(CD3DX12_DEPTH_STENCIL_DESC1(Desc.DepthStencilState)) , DSVFormat(Desc.DSVFormat) , RasterizerState(CD3DX12_RASTERIZER_DESC(Desc.RasterizerState)) , RTVFormats(CD3DX12_RT_FORMAT_ARRAY(Desc.RTVFormats, Desc.NumRenderTargets)) , SampleDesc(Desc.SampleDesc) , SampleMask(Desc.SampleMask) , CachedPSO(Desc.CachedPSO) , ViewInstancingDesc(CD3DX12_VIEW_INSTANCING_DESC(CD3DX12_DEFAULT()))"
  },
  {
    "label": "MeshShaderDescV0()",
    "kind": "Method",
    "detail": "Function (} CD3DX12_PIPELINE_STATE_STREAM_FLAGS Flags ; CD3DX12_PIPELINE_STATE_STREAM_NODE_MASK NodeMask ; CD3DX12_PIPELINE_STATE_STREAM_ROOT_SIGNATURE pRootSignature ; CD3DX12_PIPELINE_STATE_STREAM_PRIMITIVE_TOPOLOGY PrimitiveTopologyType ; CD3DX12_PIPELINE_STATE_STREAM_PS PS ; CD3DX12_PIPELINE_STATE_STREAM_AS AS ; CD3DX12_PIPELINE_STATE_STREAM_MS MS ; CD3DX12_PIPELINE_STATE_STREAM_BLEND_DESC BlendState ; CD3DX12_PIPELINE_STATE_STREAM_DEPTH_STENCIL1 DepthStencilState ; CD3DX12_PIPELINE_STATE_STREAM_DEPTH_STENCIL_FORMAT DSVFormat ; CD3DX12_PIPELINE_STATE_STREAM_RASTERIZER RasterizerState ; CD3DX12_PIPELINE_STATE_STREAM_RENDER_TARGET_FORMATS RTVFormats ; CD3DX12_PIPELINE_STATE_STREAM_SAMPLE_DESC SampleDesc ; CD3DX12_PIPELINE_STATE_STREAM_SAMPLE_MASK SampleMask ; CD3DX12_PIPELINE_STATE_STREAM_CACHED_PSO CachedPSO ; CD3DX12_PIPELINE_STATE_STREAM_VIEW_INSTANCING ViewInstancingDesc ; D3DX12_MESH_SHADER_PIPELINE_STATE_DESC)",
    "insertText": "MeshShaderDescV0()"
  },
  {
    "label": "CD3DX12_PIPELINE_STATE_STREAM()",
    "kind": "Method",
    "detail": "Function (D . SampleDesc = this -> SampleDesc ; D . SampleMask = this -> SampleMask ; D . CachedPSO = this -> CachedPSO ; return D ; } } ; struct CD3DX12_PIPELINE_STATE_STREAM {)",
    "insertText": "CD3DX12_PIPELINE_STATE_STREAM()"
  },
  {
    "label": "CD3DX12_PIPELINE_STATE_STREAM()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CD3DX12_PIPELINE_STATE_STREAM(const D3D12_GRAPHICS_PIPELINE_STATE_DESC& Desc) noexcept : Flags(Desc.Flags) , NodeMask(Desc.NodeMask) , pRootSignature(Desc.pRootSignature) , InputLayout(Desc.InputLayout) , IBStripCutValue(Desc.IBStripCutValue) , PrimitiveTopologyType(Desc.PrimitiveTopologyType) , VS(Desc.VS) , GS(Desc.GS) , StreamOutput(Desc.StreamOutput) , HS(Desc.HS) , DS(Desc.DS) , PS(Desc.PS) , BlendState(CD3DX12_BLEND_DESC(Desc.BlendState)) , DepthStencilState(CD3DX12_DEPTH_STENCIL_DESC1(Desc.DepthStencilState)) , DSVFormat(Desc.DSVFormat) , RasterizerState(CD3DX12_RASTERIZER_DESC(Desc.RasterizerState)) , RTVFormats(CD3DX12_RT_FORMAT_ARRAY(Desc.RTVFormats, Desc.NumRenderTargets)) , SampleDesc(Desc.SampleDesc) , SampleMask(Desc.SampleMask) , CachedPSO(Desc.CachedPSO)"
  },
  {
    "label": "CD3DX12_PIPELINE_STATE_STREAM()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "CD3DX12_PIPELINE_STATE_STREAM(const D3D12_COMPUTE_PIPELINE_STATE_DESC& Desc) noexcept : Flags(Desc.Flags) , NodeMask(Desc.NodeMask) , pRootSignature(Desc.pRootSignature) , CS(CD3DX12_SHADER_BYTECODE(Desc.CS)) , CachedPSO(Desc.CachedPSO)"
  },
  {
    "label": "CD3DX12_PIPELINE_STATE_STREAM2_PARSE_HELPER()",
    "kind": "Method",
    "detail": "Function (D3D12_COMPUTE_PIPELINE_STATE_DESC D ; D . Flags = this -> Flags ; D . NodeMask = this -> NodeMask ; D . pRootSignature = this -> pRootSignature ; D . CS = this -> CS ; D . CachedPSO = this -> CachedPSO ; return D ; } } ; struct CD3DX12_PIPELINE_STATE_STREAM2_PARSE_HELPER : public ID3DX12PipelineParserCallbacks { CD3DX12_PIPELINE_STATE_STREAM2 PipelineStream ;)",
    "insertText": "CD3DX12_PIPELINE_STATE_STREAM2_PARSE_HELPER() noexcept : SeenDSS(false)"
  },
  {
    "label": "D3D12_DEPTH_STENCIL_DESC1()",
    "kind": "Method",
    "detail": "Function (PipelineStream . PrimitiveTopologyType = D3D12_PRIMITIVE_TOPOLOGY_TYPE_TRIANGLE ; static_cast<)",
    "insertText": "D3D12_DEPTH_STENCIL_DESC1(PipelineStream.DepthStencilState)"
  },
  {
    "label": "FlagsCb()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "FlagsCb(D3D12_PIPELINE_STATE_FLAGS Flags)"
  },
  {
    "label": "NodeMaskCb()",
    "kind": "Method",
    "detail": "Function (PipelineStream . Flags = Flags ; } void)",
    "insertText": "NodeMaskCb(UINT NodeMask)"
  },
  {
    "label": "RootSignatureCb()",
    "kind": "Method",
    "detail": "Function (PipelineStream . NodeMask = NodeMask ; } void)",
    "insertText": "RootSignatureCb(ID3D12RootSignature* pRootSignature)"
  },
  {
    "label": "InputLayoutCb()",
    "kind": "Method",
    "detail": "Function (PipelineStream . pRootSignature = pRootSignature ; } void)",
    "insertText": "InputLayoutCb(const D3D12_INPUT_LAYOUT_DESC& InputLayout)"
  },
  {
    "label": "IBStripCutValueCb()",
    "kind": "Method",
    "detail": "Function (PipelineStream . InputLayout = InputLayout ; } void)",
    "insertText": "IBStripCutValueCb(D3D12_INDEX_BUFFER_STRIP_CUT_VALUE IBStripCutValue)"
  },
  {
    "label": "PrimitiveTopologyTypeCb()",
    "kind": "Method",
    "detail": "Function (PipelineStream . IBStripCutValue = IBStripCutValue ; } void)",
    "insertText": "PrimitiveTopologyTypeCb(D3D12_PRIMITIVE_TOPOLOGY_TYPE PrimitiveTopologyType)"
  },
  {
    "label": "VSCb()",
    "kind": "Method",
    "detail": "Function (PipelineStream . PrimitiveTopologyType = PrimitiveTopologyType ; } void)",
    "insertText": "VSCb(const D3D12_SHADER_BYTECODE& VS)"
  },
  {
    "label": "GSCb()",
    "kind": "Method",
    "detail": "Function (PipelineStream . VS = VS ; } void)",
    "insertText": "GSCb(const D3D12_SHADER_BYTECODE& GS)"
  },
  {
    "label": "StreamOutputCb()",
    "kind": "Method",
    "detail": "Function (PipelineStream . GS = GS ; } void)",
    "insertText": "StreamOutputCb(const D3D12_STREAM_OUTPUT_DESC& StreamOutput)"
  },
  {
    "label": "HSCb()",
    "kind": "Method",
    "detail": "Function (PipelineStream . StreamOutput = StreamOutput ; } void)",
    "insertText": "HSCb(const D3D12_SHADER_BYTECODE& HS)"
  },
  {
    "label": "DSCb()",
    "kind": "Method",
    "detail": "Function (PipelineStream . HS = HS ; } void)",
    "insertText": "DSCb(const D3D12_SHADER_BYTECODE& DS)"
  },
  {
    "label": "PSCb()",
    "kind": "Method",
    "detail": "Function (PipelineStream . DS = DS ; } void)",
    "insertText": "PSCb(const D3D12_SHADER_BYTECODE& PS)"
  },
  {
    "label": "CSCb()",
    "kind": "Method",
    "detail": "Function (PipelineStream . PS = PS ; } void)",
    "insertText": "CSCb(const D3D12_SHADER_BYTECODE& CS)"
  },
  {
    "label": "ASCb()",
    "kind": "Method",
    "detail": "Function (PipelineStream . CS = CS ; } void)",
    "insertText": "ASCb(const D3D12_SHADER_BYTECODE& AS)"
  },
  {
    "label": "MSCb()",
    "kind": "Method",
    "detail": "Function (PipelineStream . AS = AS ; } void)",
    "insertText": "MSCb(const D3D12_SHADER_BYTECODE& MS)"
  },
  {
    "label": "BlendStateCb()",
    "kind": "Method",
    "detail": "Function (PipelineStream . MS = MS ; } void)",
    "insertText": "BlendStateCb(const D3D12_BLEND_DESC& BlendState)"
  },
  {
    "label": "CD3DX12_BLEND_DESC()",
    "kind": "Method",
    "detail": "Function (PipelineStream . BlendState =)",
    "insertText": "CD3DX12_BLEND_DESC(BlendState)"
  },
  {
    "label": "DepthStencilStateCb()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "DepthStencilStateCb(const D3D12_DEPTH_STENCIL_DESC& DepthStencilState)"
  },
  {
    "label": "CD3DX12_DEPTH_STENCIL_DESC1()",
    "kind": "Method",
    "detail": "Function (PipelineStream . DepthStencilState =)",
    "insertText": "CD3DX12_DEPTH_STENCIL_DESC1(DepthStencilState)"
  },
  {
    "label": "DepthStencilState1Cb()",
    "kind": "Method",
    "detail": "Function (SeenDSS = true ; } void)",
    "insertText": "DepthStencilState1Cb(const D3D12_DEPTH_STENCIL_DESC1& DepthStencilState)"
  },
  {
    "label": "DSVFormatCb()",
    "kind": "Method",
    "detail": "Function (SeenDSS = true ; } void)",
    "insertText": "DSVFormatCb(DXGI_FORMAT DSVFormat)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (PipelineStream . DSVFormat = DSVFormat ;)",
    "insertText": "if(!SeenDSS && DSVFormat != DXGI_FORMAT_UNKNOWN)"
  },
  {
    "label": "RasterizerStateCb()",
    "kind": "Method",
    "detail": "Function (} } void)",
    "insertText": "RasterizerStateCb(const D3D12_RASTERIZER_DESC& RasterizerState)"
  },
  {
    "label": "CD3DX12_RASTERIZER_DESC()",
    "kind": "Method",
    "detail": "Function (PipelineStream . RasterizerState =)",
    "insertText": "CD3DX12_RASTERIZER_DESC(RasterizerState)"
  },
  {
    "label": "RTVFormatsCb()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "RTVFormatsCb(const D3D12_RT_FORMAT_ARRAY& RTVFormats)"
  },
  {
    "label": "SampleDescCb()",
    "kind": "Method",
    "detail": "Function (PipelineStream . RTVFormats = RTVFormats ; } void)",
    "insertText": "SampleDescCb(const DXGI_SAMPLE_DESC& SampleDesc)"
  },
  {
    "label": "SampleMaskCb()",
    "kind": "Method",
    "detail": "Function (PipelineStream . SampleDesc = SampleDesc ; } void)",
    "insertText": "SampleMaskCb(UINT SampleMask)"
  },
  {
    "label": "ViewInstancingCb()",
    "kind": "Method",
    "detail": "Function (PipelineStream . SampleMask = SampleMask ; } void)",
    "insertText": "ViewInstancingCb(const D3D12_VIEW_INSTANCING_DESC& ViewInstancingDesc)"
  },
  {
    "label": "CD3DX12_VIEW_INSTANCING_DESC()",
    "kind": "Method",
    "detail": "Function (PipelineStream . ViewInstancingDesc =)",
    "insertText": "CD3DX12_VIEW_INSTANCING_DESC(ViewInstancingDesc)"
  },
  {
    "label": "CachedPSOCb()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "CachedPSOCb(const D3D12_CACHED_PIPELINE_STATE& CachedPSO)"
  },
  {
    "label": "CD3DX12_PIPELINE_STATE_STREAM3_PARSE_HELPER()",
    "kind": "Method",
    "detail": "Function (CD3DX12_PIPELINE_STATE_STREAM3 PipelineStream ;)",
    "insertText": "CD3DX12_PIPELINE_STATE_STREAM3_PARSE_HELPER() noexcept : SeenDSS(false)"
  },
  {
    "label": "D3D12_DEPTH_STENCIL_DESC2()",
    "kind": "Method",
    "detail": "Function (PipelineStream . PrimitiveTopologyType = D3D12_PRIMITIVE_TOPOLOGY_TYPE_TRIANGLE ; static_cast<)",
    "insertText": "D3D12_DEPTH_STENCIL_DESC2(PipelineStream.DepthStencilState)"
  },
  {
    "label": "CD3DX12_DEPTH_STENCIL_DESC2()",
    "kind": "Method",
    "detail": "Function (PipelineStream . DepthStencilState =)",
    "insertText": "CD3DX12_DEPTH_STENCIL_DESC2(DepthStencilState)"
  },
  {
    "label": "DepthStencilState2Cb()",
    "kind": "Method",
    "detail": "Function (SeenDSS = true ; } void)",
    "insertText": "DepthStencilState2Cb(const D3D12_DEPTH_STENCIL_DESC2& DepthStencilState)"
  },
  {
    "label": "CD3DX12_PIPELINE_STATE_STREAM4_PARSE_HELPER()",
    "kind": "Method",
    "detail": "Function (CD3DX12_PIPELINE_STATE_STREAM4 PipelineStream ;)",
    "insertText": "CD3DX12_PIPELINE_STATE_STREAM4_PARSE_HELPER() noexcept : SeenDSS(false)"
  },
  {
    "label": "CD3DX12_RASTERIZER_DESC1()",
    "kind": "Method",
    "detail": "Function (PipelineStream . RasterizerState =)",
    "insertText": "CD3DX12_RASTERIZER_DESC1(RasterizerState)"
  },
  {
    "label": "RasterizerState1Cb()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "RasterizerState1Cb(const D3D12_RASTERIZER_DESC1& RasterizerState)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (PipelineStream . CachedPSO = CachedPSO ; } private : bool SeenDSS ; } ; # endif # if)",
    "insertText": "defined(D3D12_SDK_VERSION) && (D3D12_SDK_VERSION >= 613)"
  },
  {
    "label": "CD3DX12_PIPELINE_STATE_STREAM5_PARSE_HELPER()",
    "kind": "Method",
    "detail": "Function (CD3DX12_PIPELINE_STATE_STREAM5 PipelineStream ;)",
    "insertText": "CD3DX12_PIPELINE_STATE_STREAM5_PARSE_HELPER() noexcept : SeenDSS(false), SeenMS(false), SeenTopology(false)"
  },
  {
    "label": "CD3DX12_RASTERIZER_DESC2()",
    "kind": "Method",
    "detail": "Function (PipelineStream . RasterizerState =)",
    "insertText": "CD3DX12_RASTERIZER_DESC2(RasterizerState)"
  },
  {
    "label": "RasterizerState2Cb()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "RasterizerState2Cb(const D3D12_RASTERIZER_DESC2& RasterizerState)"
  },
  {
    "label": "FinalizeCb()",
    "kind": "Method",
    "detail": "Function (PipelineStream . CachedPSO = CachedPSO ; } void)",
    "insertText": "FinalizeCb()"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "if(!SeenTopology && SeenMS)"
  },
  {
    "label": "CD3DX12_PIPELINE_STATE_STREAM5_PARSE_HELPER()",
    "kind": "Method",
    "detail": "Function (CD3DX12_PIPELINE_STATE_STREAM5 PipelineStream ;)",
    "insertText": "CD3DX12_PIPELINE_STATE_STREAM5_PARSE_HELPER() noexcept : SeenDSS(false)"
  },
  {
    "label": "CD3DX12_PIPELINE_STATE_STREAM_PARSE_HELPER()",
    "kind": "Method",
    "detail": "Function (PipelineStream . CachedPSO = CachedPSO ; } private : bool SeenDSS ; } ; # endif struct CD3DX12_PIPELINE_STATE_STREAM_PARSE_HELPER : public ID3DX12PipelineParserCallbacks { CD3DX12_PIPELINE_STATE_STREAM1 PipelineStream ;)",
    "insertText": "CD3DX12_PIPELINE_STATE_STREAM_PARSE_HELPER() noexcept : SeenDSS(false)"
  },
  {
    "label": "D3DX12GetBaseSubobjectType()",
    "kind": "Method",
    "detail": "Function (PipelineStream . CachedPSO = CachedPSO ; } private : bool SeenDSS ; } ; D3D12_PIPELINE_STATE_SUBOBJECT_TYPE)",
    "insertText": "D3DX12GetBaseSubobjectType(D3D12_PIPELINE_STATE_SUBOBJECT_TYPE SubobjectType)"
  },
  {
    "label": "D3DX12ParsePipelineStream()",
    "kind": "Method",
    "detail": "Function (# endif default : return SubobjectType ; } } HRESULT)",
    "insertText": "D3DX12ParsePipelineStream(const D3D12_PIPELINE_STATE_STREAM_DESC& Desc, ID3DX12PipelineParserCallbacks* pCallbacks)"
  },
  {
    "label": "ErrorBadInputParameter()",
    "kind": "Method",
    "detail": "Function (pCallbacks ->)",
    "insertText": "ErrorBadInputParameter(1)"
  },
  {
    "label": "BYTE()",
    "kind": "Method",
    "detail": "Function (BYTE* pStream = static_cast<)",
    "insertText": "BYTE(Desc.pPipelineStateSubobjectStream)"
  },
  {
    "label": "D3D12_PIPELINE_STATE_SUBOBJECT_TYPE()",
    "kind": "Method",
    "detail": "Function (auto SubobjectType =* reinterpret_cast<)",
    "insertText": "D3D12_PIPELINE_STATE_SUBOBJECT_TYPE(pStream)"
  },
  {
    "label": "ErrorUnknownSubobject()",
    "kind": "Method",
    "detail": "Function (pCallbacks ->)",
    "insertText": "ErrorUnknownSubobject(SubobjectType)"
  },
  {
    "label": "ErrorDuplicateSubobject()",
    "kind": "Method",
    "detail": "Function (pCallbacks ->)",
    "insertText": "ErrorDuplicateSubobject(SubobjectType)"
  },
  {
    "label": "sizeof()",
    "kind": "Method",
    "detail": "Function (SizeOfSubobject =)",
    "insertText": "sizeof(CD3DX12_PIPELINE_STATE_STREAM::pRootSignature)"
  },
  {
    "label": "VSCb()",
    "kind": "Method",
    "detail": "Function (break ; case D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_VS : pCallbacks ->)",
    "insertText": "VSCb(*reinterpret_cast<decltype(CD3DX12_PIPELINE_STATE_STREAM::VS)*>(pStream))"
  },
  {
    "label": "sizeof()",
    "kind": "Method",
    "detail": "Function (SizeOfSubobject =)",
    "insertText": "sizeof(CD3DX12_PIPELINE_STATE_STREAM::VS)"
  },
  {
    "label": "PSCb()",
    "kind": "Method",
    "detail": "Function (break ; case D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_PS : pCallbacks ->)",
    "insertText": "PSCb(*reinterpret_cast<decltype(CD3DX12_PIPELINE_STATE_STREAM::PS)*>(pStream))"
  },
  {
    "label": "sizeof()",
    "kind": "Method",
    "detail": "Function (SizeOfSubobject =)",
    "insertText": "sizeof(CD3DX12_PIPELINE_STATE_STREAM::PS)"
  },
  {
    "label": "DSCb()",
    "kind": "Method",
    "detail": "Function (break ; case D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_DS : pCallbacks ->)",
    "insertText": "DSCb(*reinterpret_cast<decltype(CD3DX12_PIPELINE_STATE_STREAM::DS)*>(pStream))"
  },
  {
    "label": "sizeof()",
    "kind": "Method",
    "detail": "Function (SizeOfSubobject =)",
    "insertText": "sizeof(CD3DX12_PIPELINE_STATE_STREAM::DS)"
  },
  {
    "label": "HSCb()",
    "kind": "Method",
    "detail": "Function (break ; case D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_HS : pCallbacks ->)",
    "insertText": "HSCb(*reinterpret_cast<decltype(CD3DX12_PIPELINE_STATE_STREAM::HS)*>(pStream))"
  },
  {
    "label": "sizeof()",
    "kind": "Method",
    "detail": "Function (SizeOfSubobject =)",
    "insertText": "sizeof(CD3DX12_PIPELINE_STATE_STREAM::HS)"
  },
  {
    "label": "GSCb()",
    "kind": "Method",
    "detail": "Function (break ; case D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_GS : pCallbacks ->)",
    "insertText": "GSCb(*reinterpret_cast<decltype(CD3DX12_PIPELINE_STATE_STREAM::GS)*>(pStream))"
  },
  {
    "label": "sizeof()",
    "kind": "Method",
    "detail": "Function (SizeOfSubobject =)",
    "insertText": "sizeof(CD3DX12_PIPELINE_STATE_STREAM::GS)"
  },
  {
    "label": "CSCb()",
    "kind": "Method",
    "detail": "Function (break ; case D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_CS : pCallbacks ->)",
    "insertText": "CSCb(*reinterpret_cast<decltype(CD3DX12_PIPELINE_STATE_STREAM::CS)*>(pStream))"
  },
  {
    "label": "sizeof()",
    "kind": "Method",
    "detail": "Function (SizeOfSubobject =)",
    "insertText": "sizeof(CD3DX12_PIPELINE_STATE_STREAM::CS)"
  },
  {
    "label": "ASCb()",
    "kind": "Method",
    "detail": "Function (break ; case D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_AS : pCallbacks ->)",
    "insertText": "ASCb(*reinterpret_cast<decltype(CD3DX12_PIPELINE_STATE_STREAM2::AS)*>(pStream))"
  },
  {
    "label": "sizeof()",
    "kind": "Method",
    "detail": "Function (SizeOfSubobject =)",
    "insertText": "sizeof(CD3DX12_PIPELINE_STATE_STREAM2::AS)"
  },
  {
    "label": "MSCb()",
    "kind": "Method",
    "detail": "Function (break ; case D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_MS : pCallbacks ->)",
    "insertText": "MSCb(*reinterpret_cast<decltype(CD3DX12_PIPELINE_STATE_STREAM2::MS)*>(pStream))"
  },
  {
    "label": "sizeof()",
    "kind": "Method",
    "detail": "Function (SizeOfSubobject =)",
    "insertText": "sizeof(CD3DX12_PIPELINE_STATE_STREAM2::MS)"
  },
  {
    "label": "StreamOutputCb()",
    "kind": "Method",
    "detail": "Function (break ; case D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_STREAM_OUTPUT : pCallbacks ->)",
    "insertText": "StreamOutputCb(*reinterpret_cast<decltype(CD3DX12_PIPELINE_STATE_STREAM::StreamOutput)*>(pStream))"
  },
  {
    "label": "sizeof()",
    "kind": "Method",
    "detail": "Function (SizeOfSubobject =)",
    "insertText": "sizeof(CD3DX12_PIPELINE_STATE_STREAM::StreamOutput)"
  },
  {
    "label": "BlendStateCb()",
    "kind": "Method",
    "detail": "Function (break ; case D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_BLEND : pCallbacks ->)",
    "insertText": "BlendStateCb(*reinterpret_cast<decltype(CD3DX12_PIPELINE_STATE_STREAM::BlendState)*>(pStream))"
  },
  {
    "label": "sizeof()",
    "kind": "Method",
    "detail": "Function (SizeOfSubobject =)",
    "insertText": "sizeof(CD3DX12_PIPELINE_STATE_STREAM::BlendState)"
  },
  {
    "label": "SampleMaskCb()",
    "kind": "Method",
    "detail": "Function (break ; case D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_SAMPLE_MASK : pCallbacks ->)",
    "insertText": "SampleMaskCb(*reinterpret_cast<decltype(CD3DX12_PIPELINE_STATE_STREAM::SampleMask)*>(pStream))"
  },
  {
    "label": "sizeof()",
    "kind": "Method",
    "detail": "Function (SizeOfSubobject =)",
    "insertText": "sizeof(CD3DX12_PIPELINE_STATE_STREAM::SampleMask)"
  },
  {
    "label": "RasterizerStateCb()",
    "kind": "Method",
    "detail": "Function (break ; case D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_RASTERIZER : pCallbacks ->)",
    "insertText": "RasterizerStateCb(*reinterpret_cast<decltype(CD3DX12_PIPELINE_STATE_STREAM::RasterizerState)*>(pStream))"
  },
  {
    "label": "sizeof()",
    "kind": "Method",
    "detail": "Function (SizeOfSubobject =)",
    "insertText": "sizeof(CD3DX12_PIPELINE_STATE_STREAM::RasterizerState)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (break ; # if)",
    "insertText": "defined(D3D12_SDK_VERSION) && (D3D12_SDK_VERSION >= 608) case D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_RASTERIZER1: pCallbacks->RasterizerState1Cb(*reinterpret_cast<decltype(CD3DX12_PIPELINE_STATE_STREAM4::RasterizerState)*>(pStream))"
  },
  {
    "label": "sizeof()",
    "kind": "Method",
    "detail": "Function (SizeOfSubobject =)",
    "insertText": "sizeof(CD3DX12_PIPELINE_STATE_STREAM4::RasterizerState)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (break ; # endif # if)",
    "insertText": "defined(D3D12_SDK_VERSION) && (D3D12_SDK_VERSION >= 610) case D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_RASTERIZER2: pCallbacks->RasterizerState2Cb(*reinterpret_cast<decltype(CD3DX12_PIPELINE_STATE_STREAM5::RasterizerState)*>(pStream))"
  },
  {
    "label": "sizeof()",
    "kind": "Method",
    "detail": "Function (SizeOfSubobject =)",
    "insertText": "sizeof(CD3DX12_PIPELINE_STATE_STREAM5::RasterizerState)"
  },
  {
    "label": "DepthStencilStateCb()",
    "kind": "Method",
    "detail": "Function (break ; # endif case D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_DEPTH_STENCIL : pCallbacks ->)",
    "insertText": "DepthStencilStateCb(*reinterpret_cast<CD3DX12_PIPELINE_STATE_STREAM_DEPTH_STENCIL*>(pStream))"
  },
  {
    "label": "sizeof()",
    "kind": "Method",
    "detail": "Function (SizeOfSubobject =)",
    "insertText": "sizeof(CD3DX12_PIPELINE_STATE_STREAM_DEPTH_STENCIL)"
  },
  {
    "label": "DepthStencilState1Cb()",
    "kind": "Method",
    "detail": "Function (break ; case D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_DEPTH_STENCIL1 : pCallbacks ->)",
    "insertText": "DepthStencilState1Cb(*reinterpret_cast<decltype(CD3DX12_PIPELINE_STATE_STREAM::DepthStencilState)*>(pStream))"
  },
  {
    "label": "sizeof()",
    "kind": "Method",
    "detail": "Function (SizeOfSubobject =)",
    "insertText": "sizeof(CD3DX12_PIPELINE_STATE_STREAM::DepthStencilState)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (break ; # if)",
    "insertText": "defined(D3D12_SDK_VERSION) && (D3D12_SDK_VERSION >= 606) case D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_DEPTH_STENCIL2: pCallbacks->DepthStencilState2Cb(*reinterpret_cast<decltype(CD3DX12_PIPELINE_STATE_STREAM3::DepthStencilState)*>(pStream))"
  },
  {
    "label": "sizeof()",
    "kind": "Method",
    "detail": "Function (SizeOfSubobject =)",
    "insertText": "sizeof(CD3DX12_PIPELINE_STATE_STREAM3::DepthStencilState)"
  },
  {
    "label": "InputLayoutCb()",
    "kind": "Method",
    "detail": "Function (break ; # endif case D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_INPUT_LAYOUT : pCallbacks ->)",
    "insertText": "InputLayoutCb(*reinterpret_cast<decltype(CD3DX12_PIPELINE_STATE_STREAM::InputLayout)*>(pStream))"
  },
  {
    "label": "sizeof()",
    "kind": "Method",
    "detail": "Function (SizeOfSubobject =)",
    "insertText": "sizeof(CD3DX12_PIPELINE_STATE_STREAM::InputLayout)"
  },
  {
    "label": "IBStripCutValueCb()",
    "kind": "Method",
    "detail": "Function (break ; case D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_IB_STRIP_CUT_VALUE : pCallbacks ->)",
    "insertText": "IBStripCutValueCb(*reinterpret_cast<decltype(CD3DX12_PIPELINE_STATE_STREAM::IBStripCutValue)*>(pStream))"
  },
  {
    "label": "sizeof()",
    "kind": "Method",
    "detail": "Function (SizeOfSubobject =)",
    "insertText": "sizeof(CD3DX12_PIPELINE_STATE_STREAM::IBStripCutValue)"
  },
  {
    "label": "PrimitiveTopologyTypeCb()",
    "kind": "Method",
    "detail": "Function (break ; case D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_PRIMITIVE_TOPOLOGY : pCallbacks ->)",
    "insertText": "PrimitiveTopologyTypeCb(*reinterpret_cast<decltype(CD3DX12_PIPELINE_STATE_STREAM::PrimitiveTopologyType)*>(pStream))"
  },
  {
    "label": "sizeof()",
    "kind": "Method",
    "detail": "Function (SizeOfSubobject =)",
    "insertText": "sizeof(CD3DX12_PIPELINE_STATE_STREAM::PrimitiveTopologyType)"
  },
  {
    "label": "RTVFormatsCb()",
    "kind": "Method",
    "detail": "Function (break ; case D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_RENDER_TARGET_FORMATS : pCallbacks ->)",
    "insertText": "RTVFormatsCb(*reinterpret_cast<decltype(CD3DX12_PIPELINE_STATE_STREAM::RTVFormats)*>(pStream))"
  },
  {
    "label": "sizeof()",
    "kind": "Method",
    "detail": "Function (SizeOfSubobject =)",
    "insertText": "sizeof(CD3DX12_PIPELINE_STATE_STREAM::RTVFormats)"
  },
  {
    "label": "DSVFormatCb()",
    "kind": "Method",
    "detail": "Function (break ; case D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_DEPTH_STENCIL_FORMAT : pCallbacks ->)",
    "insertText": "DSVFormatCb(*reinterpret_cast<decltype(CD3DX12_PIPELINE_STATE_STREAM::DSVFormat)*>(pStream))"
  },
  {
    "label": "sizeof()",
    "kind": "Method",
    "detail": "Function (SizeOfSubobject =)",
    "insertText": "sizeof(CD3DX12_PIPELINE_STATE_STREAM::DSVFormat)"
  },
  {
    "label": "SampleDescCb()",
    "kind": "Method",
    "detail": "Function (break ; case D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_SAMPLE_DESC : pCallbacks ->)",
    "insertText": "SampleDescCb(*reinterpret_cast<decltype(CD3DX12_PIPELINE_STATE_STREAM::SampleDesc)*>(pStream))"
  },
  {
    "label": "sizeof()",
    "kind": "Method",
    "detail": "Function (SizeOfSubobject =)",
    "insertText": "sizeof(CD3DX12_PIPELINE_STATE_STREAM::SampleDesc)"
  },
  {
    "label": "NodeMaskCb()",
    "kind": "Method",
    "detail": "Function (break ; case D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_NODE_MASK : pCallbacks ->)",
    "insertText": "NodeMaskCb(*reinterpret_cast<decltype(CD3DX12_PIPELINE_STATE_STREAM::NodeMask)*>(pStream))"
  },
  {
    "label": "sizeof()",
    "kind": "Method",
    "detail": "Function (SizeOfSubobject =)",
    "insertText": "sizeof(CD3DX12_PIPELINE_STATE_STREAM::NodeMask)"
  },
  {
    "label": "CachedPSOCb()",
    "kind": "Method",
    "detail": "Function (break ; case D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_CACHED_PSO : pCallbacks ->)",
    "insertText": "CachedPSOCb(*reinterpret_cast<decltype(CD3DX12_PIPELINE_STATE_STREAM::CachedPSO)*>(pStream))"
  },
  {
    "label": "sizeof()",
    "kind": "Method",
    "detail": "Function (SizeOfSubobject =)",
    "insertText": "sizeof(CD3DX12_PIPELINE_STATE_STREAM::CachedPSO)"
  },
  {
    "label": "FlagsCb()",
    "kind": "Method",
    "detail": "Function (break ; case D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_FLAGS : pCallbacks ->)",
    "insertText": "FlagsCb(*reinterpret_cast<decltype(CD3DX12_PIPELINE_STATE_STREAM::Flags)*>(pStream))"
  },
  {
    "label": "sizeof()",
    "kind": "Method",
    "detail": "Function (SizeOfSubobject =)",
    "insertText": "sizeof(CD3DX12_PIPELINE_STATE_STREAM::Flags)"
  },
  {
    "label": "ViewInstancingCb()",
    "kind": "Method",
    "detail": "Function (break ; case D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_VIEW_INSTANCING : pCallbacks ->)",
    "insertText": "ViewInstancingCb(*reinterpret_cast<decltype(CD3DX12_PIPELINE_STATE_STREAM1::ViewInstancingDesc)*>(pStream))"
  },
  {
    "label": "sizeof()",
    "kind": "Method",
    "detail": "Function (SizeOfSubobject =)",
    "insertText": "sizeof(CD3DX12_PIPELINE_STATE_STREAM1::ViewInstancingDesc)"
  }
]