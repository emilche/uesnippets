[
  {
    "label": "AActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AActor"
  },
  {
    "label": "FAssetData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAssetData"
  },
  {
    "label": "FLevelCollectionModel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLevelCollectionModel"
  },
  {
    "label": "FLevelDragDropOp",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLevelDragDropOp"
  },
  {
    "label": "FLevelModel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLevelModel"
  },
  {
    "label": "ULevel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULevel"
  },
  {
    "label": "ULevelStreaming",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULevelStreaming"
  },
  {
    "label": "IFilter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IFilter"
  },
  {
    "label": "FLevelModelVisitor",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLevelModelVisitor"
  },
  {
    "label": "WORLDBROWSER_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "WORLDBROWSER_API"
  },
  {
    "label": "FSimulationLevelStatus",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSimulationLevelStatus"
  },
  {
    "label": "FLevelModelVisitor()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" class AActor ; struct FAssetData ; class FLevelCollectionModel ; class FLevelDragDropOp ; class FLevelModel ; class ULevel ; class ULevelStreaming ; template<TItemType> class IFilter ; typedef TArray<TSharedPtr<class FLevelModel>> FLevelModelList ; class FLevelCollectionModel ; struct FLevelModelVisitor { ~)",
    "insertText": "FLevelModelVisitor()"
  },
  {
    "label": "Visit()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Visit(FLevelModel& Item)"
  },
  {
    "label": "DECLARE_EVENT()",
    "kind": "Method",
    "detail": "Function (} ; class FLevelModel : public TSharedFromThis<FLevelModel> { public : typedef IFilter<const TWeakObjectPtr<AActor>&> ActorFilter ;)",
    "insertText": "DECLARE_EVENT(FLevelModel, FSimpleEvent)"
  },
  {
    "label": "FLevelModel()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "FLevelModel(FLevelCollectionModel& InLevelCollectionModel)"
  },
  {
    "label": "FLevelModel()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FLevelModel()"
  },
  {
    "label": "Accept()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Accept(FLevelModelVisitor& Vistor)"
  },
  {
    "label": "SetLevelSelectionFlag()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetLevelSelectionFlag(bool bExpanded)"
  },
  {
    "label": "GetLevelSelectionFlag()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetLevelSelectionFlag()"
  },
  {
    "label": "SetLevelExpansionFlag()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetLevelExpansionFlag(bool bExpanded)"
  },
  {
    "label": "GetLevelExpansionFlag()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetLevelExpansionFlag()"
  },
  {
    "label": "SetLevelFilteredOutFlag()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetLevelFilteredOutFlag(bool bFiltredOut)"
  },
  {
    "label": "GetLevelFilteredOutFlag()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetLevelFilteredOutFlag()"
  },
  {
    "label": "GetDisplayName()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetDisplayName()"
  },
  {
    "label": "GetPackageFileName()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetPackageFileName()"
  },
  {
    "label": "HasValidPackage()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasValidPackage()"
  },
  {
    "label": "GetLevelObject()",
    "kind": "Method",
    "detail": "Function (ULevel*)",
    "insertText": "GetLevelObject()"
  },
  {
    "label": "GetAssetName()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetAssetName()"
  },
  {
    "label": "GetLongPackageName()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetLongPackageName()"
  },
  {
    "label": "UpdateAsset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateAsset(const FAssetData& AssetData)"
  },
  {
    "label": "Update()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Update()"
  },
  {
    "label": "UpdateVisuals()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateVisuals()"
  },
  {
    "label": "IsSimulating()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsSimulating()"
  },
  {
    "label": "IsCurrent()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsCurrent()"
  },
  {
    "label": "IsPersistent()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsPersistent()"
  },
  {
    "label": "IsEditable()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsEditable()"
  },
  {
    "label": "IsDirty()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsDirty()"
  },
  {
    "label": "IsLightingScenario()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsLightingScenario()"
  },
  {
    "label": "SetIsLightingScenario()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetIsLightingScenario(bool bNew)"
  },
  {
    "label": "IsLoaded()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsLoaded()"
  },
  {
    "label": "IsLoading()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsLoading()"
  },
  {
    "label": "IsVisibleInEditor()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsVisibleInEditor()"
  },
  {
    "label": "IsVisibleInGame()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsVisibleInGame()"
  },
  {
    "label": "IsLocked()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsLocked()"
  },
  {
    "label": "IsFileReadOnly()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsFileReadOnly()"
  },
  {
    "label": "IsUserManaged()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsUserManaged()"
  },
  {
    "label": "IsTransient()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsTransient()"
  },
  {
    "label": "SetVisibleInEditor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetVisibleInEditor(bool bVisible)"
  },
  {
    "label": "SetVisibleInEditor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetVisibleInEditor(TArray<FLevelModel*>& LevelModels, const TArray<bool>& bAreVisible)"
  },
  {
    "label": "SetVisibleInGame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetVisibleInGame(TArray<FLevelModel*>& LevelModels, const TArray<bool>& bAreVisible)"
  },
  {
    "label": "SetLocked()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetLocked(bool bLocked)"
  },
  {
    "label": "MakeLevelCurrent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MakeLevelCurrent()"
  },
  {
    "label": "HitTest2D()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HitTest2D(const FVector2D& Point)"
  },
  {
    "label": "GetLevelPosition2D()",
    "kind": "Method",
    "detail": "Function (FVector2D)",
    "insertText": "GetLevelPosition2D()"
  },
  {
    "label": "GetLevelSize2D()",
    "kind": "Method",
    "detail": "Function (FVector2D)",
    "insertText": "GetLevelSize2D()"
  },
  {
    "label": "GetLevelBounds()",
    "kind": "Method",
    "detail": "Function (FBox)",
    "insertText": "GetLevelBounds()"
  },
  {
    "label": "GetLevelTranslationDelta()",
    "kind": "Method",
    "detail": "Function (FVector2D)",
    "insertText": "GetLevelTranslationDelta()"
  },
  {
    "label": "SetLevelTranslationDelta()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetLevelTranslationDelta(FVector2D InAbsoluteDelta)"
  },
  {
    "label": "GetLevelColor()",
    "kind": "Method",
    "detail": "Function (FLinearColor)",
    "insertText": "GetLevelColor()"
  },
  {
    "label": "SetLevelColor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetLevelColor(FLinearColor InColor)"
  },
  {
    "label": "IsVisibleInCompositionView()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsVisibleInCompositionView()"
  },
  {
    "label": "HasKismet()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasKismet()"
  },
  {
    "label": "OpenKismet()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OpenKismet()"
  },
  {
    "label": "AttachTo()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AttachTo(TSharedPtr<FLevelModel> InParent)"
  },
  {
    "label": "OnFilterChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnFilterChanged()"
  },
  {
    "label": "GetChildren()",
    "kind": "Method",
    "detail": "Function (const FLevelModelList&)",
    "insertText": "GetChildren()"
  },
  {
    "label": "GetParent()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FLevelModel>)",
    "insertText": "GetParent()"
  },
  {
    "label": "SetParent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetParent(TSharedPtr<FLevelModel>)"
  },
  {
    "label": "RemoveAllChildren()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveAllChildren()"
  },
  {
    "label": "RemoveChild()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveChild(TSharedPtr<FLevelModel> InChild)"
  },
  {
    "label": "AddChild()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddChild(TSharedPtr<FLevelModel> InChild)"
  },
  {
    "label": "HasAncestor()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasAncestor(const TSharedPtr<FLevelModel>& InLevel)"
  },
  {
    "label": "HasDescendant()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasDescendant(const TSharedPtr<FLevelModel>& InLevel)"
  },
  {
    "label": "GetFolderPath()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetFolderPath()"
  },
  {
    "label": "HasFolderSupport()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "HasFolderSupport()"
  },
  {
    "label": "IsGoodToDrop()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsGoodToDrop(const TSharedPtr<FLevelDragDropOp>& Op)"
  },
  {
    "label": "OnLevelAddedToWorld()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnLevelAddedToWorld(ULevel* InLevel)"
  },
  {
    "label": "OnLevelRemovedFromWorld()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnLevelRemovedFromWorld()"
  },
  {
    "label": "OnParentChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnParentChanged()"
  },
  {
    "label": "BroadcastLevelChanged()",
    "kind": "Method",
    "detail": "Function (} ; void)",
    "insertText": "BroadcastLevelChanged()"
  },
  {
    "label": "UpdateSimulationStatus()",
    "kind": "Method",
    "detail": "Function (struct FSimulationLevelStatus { bool bLoaded ; bool bLoading ; bool bVisible ; } ; void)",
    "insertText": "UpdateSimulationStatus(ULevelStreaming* StreamingLevel)"
  },
  {
    "label": "BroadcastChangedEvent()",
    "kind": "Method",
    "detail": "Function (FSimpleEvent ChangedEvent ; void)",
    "insertText": "BroadcastChangedEvent()"
  },
  {
    "label": "DeselectAllActors()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeselectAllActors()"
  },
  {
    "label": "DeselectAllSurfaces()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeselectAllSurfaces()"
  },
  {
    "label": "SelectActors()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SelectActors(bool bSelect, bool bNotify, bool bSelectEvenIfHidden, const TSharedPtr<ActorFilter>& Filter = TSharedPtr<ActorFilter>(NULL))"
  },
  {
    "label": "ConvertLevelToExternalActors()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConvertLevelToExternalActors(bool bUseExternal)"
  },
  {
    "label": "CanConvertLevelToExternalActors()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanConvertLevelToExternalActors(bool bToExternal)"
  },
  {
    "label": "UpdateLevelActorsCount()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateLevelActorsCount()"
  },
  {
    "label": "UpdateDisplayName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateDisplayName()"
  },
  {
    "label": "GetLightmassSizeString()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetLightmassSizeString()"
  },
  {
    "label": "GetFileSizeString()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetFileSizeString()"
  },
  {
    "label": "GetStreamingClass()",
    "kind": "Method",
    "detail": "Function (UClass*)",
    "insertText": "GetStreamingClass()"
  },
  {
    "label": "OnAssetRenamed()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "OnAssetRenamed(const FAssetData& AssetData, const FString& OldObjectPath)"
  }
]