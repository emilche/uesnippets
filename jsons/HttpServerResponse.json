[
  {
    "label": "FHttpServerResponse",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FHttpServerResponse"
  },
  {
    "label": "FHttpServerResponse()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" Containers / ArrayView . h \" # include \" Containers / Map . h \" # include \" Containers / UnrealString . h \" # include \" CoreMinimal . h \" # include \" HAL / Platform . h \" # include \" HttpServerConstants . h \" # include \" HttpServerHttpVersion . h \" # include \" Templates / UniquePtr . h \" # include \" Templates / UnrealTemplate . h \" struct FHttpServerResponse final { public :)",
    "insertText": "FHttpServerResponse()"
  },
  {
    "label": "FHttpServerResponse()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FHttpServerResponse(TArray<uint8>&& InBody) : Body(MoveTemp(InBody))"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (} HttpVersion::EHttpServerHttpVersion HttpVersion ; EHttpServerResponseCodes Code ; TMap<FString,TArray<FString>> Headers ; TArray<uint8> Body ; public : TUniquePtr<FHttpServerResponse>)",
    "insertText": "Create(const FString& Text, FString ContentType)"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (TUniquePtr<FHttpServerResponse>)",
    "insertText": "Create(TArray<uint8>&& RawBytes, FString ContentType)"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (TUniquePtr<FHttpServerResponse>)",
    "insertText": "Create(const TArrayView<uint8>& RawBytes, FString ContentType)"
  },
  {
    "label": "Ok()",
    "kind": "Method",
    "detail": "Function (TUniquePtr<FHttpServerResponse>)",
    "insertText": "Ok()"
  },
  {
    "label": "Error()",
    "kind": "Method",
    "detail": "Function (TUniquePtr<FHttpServerResponse>)",
    "insertText": "Error(EHttpServerResponseCodes ResponseCode, const FString& ErrorCode = TEXT(\"\"), const FString& ErrorMessage = TEXT(\"\"))"
  }
]