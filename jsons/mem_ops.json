[
  {
    "label": "MEM_VALUE_T_SZ_BITS()",
    "kind": "Method",
    "detail": "Function (# ifndef VPX_VPX_PORTS_MEM_OPS_H_ # define VPX_VPX_PORTS_MEM_OPS_H_ # ifndef MAU_T # define MAU_T unsigned char # endif # ifndef MEM_VALUE_T # define MEM_VALUE_T int # endif # undef MEM_VALUE_T_SZ_BITS # define)",
    "insertText": "MEM_VALUE_T_SZ_BITS(sizeof(MEM_VALUE_T) << 3) #undef mem_ops_wrap_symbol #define mem_ops_wrap_symbol(fn) mem_ops_wrap_symbol2(fn, MEM_VALUE_T) #undef mem_ops_wrap_symbol2 #define mem_ops_wrap_symbol2(fn, typ) mem_ops_wrap_symbol3(fn, typ) #undef mem_ops_wrap_symbol3 #define mem_ops_wrap_symbol3(fn, typ) fn##_as_##typ #define INCLUDED_BY_MEM_OPS_H #include \"mem_ops_aligned.h\" #undef INCLUDED_BY_MEM_OPS_H #undef mem_get_be16 #define mem_get_be16 mem_ops_wrap_symbol(mem_get_be16) static unsigned MEM_VALUE_T mem_get_be16(const void *vmem)"
  },
  {
    "label": "mem()",
    "kind": "Method",
    "detail": "Function (unsigned MEM_VALUE_T val ; const MAU_T*)",
    "insertText": "mem(const MAU_T *)"
  },
  {
    "label": "mem_ops_wrap_symbol()",
    "kind": "Method",
    "detail": "Function (val = mem [ 0 ]<<8 ; val | = mem [ 1 ] ; return val ; } # undef mem_get_be24 # define mem_get_be24)",
    "insertText": "mem_ops_wrap_symbol(mem_get_be24) static unsigned MEM_VALUE_T mem_get_be24(const void *vmem)"
  },
  {
    "label": "mem_ops_wrap_symbol()",
    "kind": "Method",
    "detail": "Function (val = mem [ 0 ]<<1 6 ; val | = mem [ 1 ]<<8 ; val | = mem [ 2 ] ; return val ; } # undef mem_get_be32 # define mem_get_be32)",
    "insertText": "mem_ops_wrap_symbol(mem_get_be32) static unsigned MEM_VALUE_T mem_get_be32(const void *vmem)"
  },
  {
    "label": "val()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "val((unsigned MEM_VALUE_T)mem[0])"
  },
  {
    "label": "mem_ops_wrap_symbol()",
    "kind": "Method",
    "detail": "Function (val | = mem [ 1 ]<<1 6 ; val | = mem [ 2 ]<<8 ; val | = mem [ 3 ] ; return val ; } # undef mem_get_le16 # define mem_get_le16)",
    "insertText": "mem_ops_wrap_symbol(mem_get_le16) static unsigned MEM_VALUE_T mem_get_le16(const void *vmem)"
  },
  {
    "label": "mem_ops_wrap_symbol()",
    "kind": "Method",
    "detail": "Function (val = mem [ 1 ]<<8 ; val | = mem [ 0 ] ; return val ; } # undef mem_get_le24 # define mem_get_le24)",
    "insertText": "mem_ops_wrap_symbol(mem_get_le24) static unsigned MEM_VALUE_T mem_get_le24(const void *vmem)"
  },
  {
    "label": "mem_ops_wrap_symbol()",
    "kind": "Method",
    "detail": "Function (val = mem [ 2 ]<<1 6 ; val | = mem [ 1 ]<<8 ; val | = mem [ 0 ] ; return val ; } # undef mem_get_le32 # define mem_get_le32)",
    "insertText": "mem_ops_wrap_symbol(mem_get_le32) static unsigned MEM_VALUE_T mem_get_le32(const void *vmem)"
  },
  {
    "label": "val()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "val((unsigned MEM_VALUE_T)mem[3])"
  },
  {
    "label": "mem_get_s_generic()",
    "kind": "Method",
    "detail": "Function (val | = mem [ 2 ]<<1 6 ; val | = mem [ 1 ]<<8 ; val | = mem [ 0 ] ; return val ; } # define)",
    "insertText": "mem_get_s_generic(end, sz) \\ static VPX_INLINE signed MEM_VALUE_T mem_get_s##end##sz(const void *vmem)"
  },
  {
    "label": "sz()",
    "kind": "Method",
    "detail": "Function (\\ signed MEM_VALUE_T val = mem_get_ # # end # #)",
    "insertText": "sz(mem)"
  },
  {
    "label": "return()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "return(val << (MEM_VALUE_T_SZ_BITS - sz)) >> (MEM_VALUE_T_SZ_BITS - sz)"
  },
  {
    "label": "mem_ops_wrap_symbol()",
    "kind": "Method",
    "detail": "Function (\\ } # undef mem_get_sbe16 # define mem_get_sbe16)",
    "insertText": "mem_ops_wrap_symbol(mem_get_sbe16) mem_get_s_generic(be, 16) #undef mem_get_sbe24 #define mem_get_sbe24 mem_ops_wrap_symbol(mem_get_sbe24) mem_get_s_generic(be, 24) #undef mem_get_sbe32 #define mem_get_sbe32 mem_ops_wrap_symbol(mem_get_sbe32) mem_get_s_generic(be, 32) #undef mem_get_sle16 #define mem_get_sle16 mem_ops_wrap_symbol(mem_get_sle16) mem_get_s_generic(le, 16) #undef mem_get_sle24 #define mem_get_sle24 mem_ops_wrap_symbol(mem_get_sle24) mem_get_s_generic(le, 24) #undef mem_get_sle32 #define mem_get_sle32 mem_ops_wrap_symbol(mem_get_sle32) mem_get_s_generic(le, 32) #undef mem_put_be16 #define mem_put_be16 mem_ops_wrap_symbol(mem_put_be16) static VPX_INLINE void mem_put_be16(void *vmem, MEM_VALUE_T val)"
  },
  {
    "label": "mem()",
    "kind": "Method",
    "detail": "Function (MAU_T*)",
    "insertText": "mem(MAU_T *)"
  },
  {
    "label": "mem()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "mem(MAU_T)((val >> 8) & 0xff)"
  },
  {
    "label": "mem()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "mem(MAU_T)((val >> 0) & 0xff)"
  },
  {
    "label": "mem_ops_wrap_symbol()",
    "kind": "Method",
    "detail": "Function (} # undef mem_put_be24 # define mem_put_be24)",
    "insertText": "mem_ops_wrap_symbol(mem_put_be24) static VPX_INLINE void mem_put_be24(void *vmem, MEM_VALUE_T val)"
  },
  {
    "label": "mem()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "mem(MAU_T)((val >> 16) & 0xff)"
  },
  {
    "label": "mem_ops_wrap_symbol()",
    "kind": "Method",
    "detail": "Function (} # undef mem_put_be32 # define mem_put_be32)",
    "insertText": "mem_ops_wrap_symbol(mem_put_be32) static VPX_INLINE void mem_put_be32(void *vmem, MEM_VALUE_T val)"
  },
  {
    "label": "mem()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "mem(MAU_T)((val >> 24) & 0xff)"
  },
  {
    "label": "mem_ops_wrap_symbol()",
    "kind": "Method",
    "detail": "Function (} # undef mem_put_le16 # define mem_put_le16)",
    "insertText": "mem_ops_wrap_symbol(mem_put_le16) static VPX_INLINE void mem_put_le16(void *vmem, MEM_VALUE_T val)"
  },
  {
    "label": "mem_ops_wrap_symbol()",
    "kind": "Method",
    "detail": "Function (} # undef mem_put_le24 # define mem_put_le24)",
    "insertText": "mem_ops_wrap_symbol(mem_put_le24) static VPX_INLINE void mem_put_le24(void *vmem, MEM_VALUE_T val)"
  },
  {
    "label": "mem_ops_wrap_symbol()",
    "kind": "Method",
    "detail": "Function (} # undef mem_put_le32 # define mem_put_le32)",
    "insertText": "mem_ops_wrap_symbol(mem_put_le32) static VPX_INLINE void mem_put_le32(void *vmem, MEM_VALUE_T val)"
  }
]