[
  {
    "label": "FText",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FText"
  },
  {
    "label": "UBlueprintFunctionNodeSpawner",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBlueprintFunctionNodeSpawner"
  },
  {
    "label": "UFunction",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UFunction"
  },
  {
    "label": "BLUEPRINTGRAPH_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BLUEPRINTGRAPH_API"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "Shutdown()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Shutdown()"
  },
  {
    "label": "GetAllFuncsForOp()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetAllFuncsForOp(FName Operation, TArray<UFunction*>& OutFuncs)"
  },
  {
    "label": "IsComparisonFunc()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsComparisonFunc(UFunction const* const Func)"
  },
  {
    "label": "IsComparisonOpName()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsComparisonOpName(const FName OpName)"
  },
  {
    "label": "GetOpNameFromFunction()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetOpNameFromFunction(UFunction const* const Func)"
  },
  {
    "label": "GetPromotedType()",
    "kind": "Method",
    "detail": "Function (FEdGraphPinType)",
    "insertText": "GetPromotedType(const TArray<UEdGraphPin*>& WildcardPins)"
  },
  {
    "label": "IsFunctionPromotionReady()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsFunctionPromotionReady(const UFunction* const FuncToConsider)"
  },
  {
    "label": "GetHigherType()",
    "kind": "Method",
    "detail": "Function (ETypeComparisonResult)",
    "insertText": "GetHigherType(const FEdGraphPinType& A, const FEdGraphPinType& B)"
  },
  {
    "label": "IsValidPromotion()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsValidPromotion(const FEdGraphPinType& A, const FEdGraphPinType& B)"
  },
  {
    "label": "HasStructConversion()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasStructConversion(const UEdGraphPin* InputPin, const UEdGraphPin* OutputPin)"
  },
  {
    "label": "IsOperatorSpawnerRegistered()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsOperatorSpawnerRegistered(UFunction const* const Func)"
  },
  {
    "label": "RegisterOperatorSpawner()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterOperatorSpawner(FName OpName, UBlueprintFunctionNodeSpawner* Spawner)"
  },
  {
    "label": "ClearNodeSpawners()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearNodeSpawners()"
  },
  {
    "label": "RefreshPromotionTables()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RefreshPromotionTables(EReloadCompleteReason Reason = EReloadCompleteReason::None)"
  },
  {
    "label": "GetPrimitivePromotionTable()",
    "kind": "Method",
    "detail": "Function (const)",
    "insertText": "GetPrimitivePromotionTable()"
  },
  {
    "label": "FTypePromotion()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "FTypePromotion()"
  },
  {
    "label": "GetAllFuncsForOp_Internal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetAllFuncsForOp_Internal(FName Operation, TArray<UFunction*>& OutFuncs)"
  },
  {
    "label": "IsPromotableFunction()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsPromotableFunction(const UFunction* Function)"
  },
  {
    "label": "CreateOpTable()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateOpTable()"
  },
  {
    "label": "CreatePromotionTable()",
    "kind": "Method",
    "detail": "Function (TArray<FName>>)",
    "insertText": "CreatePromotionTable()"
  },
  {
    "label": "AddOpFunction()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddOpFunction(FName OpName, UFunction* Function)"
  }
]