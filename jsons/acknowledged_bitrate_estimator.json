[
  {
    "label": "AcknowledgedBitrateEstimator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AcknowledgedBitrateEstimator"
  },
  {
    "label": "AcknowledgedBitrateEstimator()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_CONGESTION_CONTROLLER_GOOG_CC_ACKNOWLEDGED_BITRATE_ESTIMATOR_H_ # define MODULES_CONGESTION_CONTROLLER_GOOG_CC_ACKNOWLEDGED_BITRATE_ESTIMATOR_H_ # include<memory> # include<vector> # include \" absl / types / optional . h \" # include \" api / field_trials_view . h \" # include \" api / transport / network_types . h \" # include \" api / units / data_rate . h \" # include \" modules / congestion_controller / goog_cc / acknowledged_bitrate_estimator_interface . h \" # include \" modules / congestion_controller / goog_cc / bitrate_estimator . h \" namespace webrtc { class AcknowledgedBitrateEstimator : public AcknowledgedBitrateEstimatorInterface { public :)",
    "insertText": "AcknowledgedBitrateEstimator(const FieldTrialsView* key_value_config, std::unique_ptr<BitrateEstimator> bitrate_estimator)"
  },
  {
    "label": "AcknowledgedBitrateEstimator()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AcknowledgedBitrateEstimator(const FieldTrialsView* key_value_config)"
  },
  {
    "label": "AcknowledgedBitrateEstimator()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "AcknowledgedBitrateEstimator()"
  },
  {
    "label": "IncomingPacketFeedbackVector()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "IncomingPacketFeedbackVector(const std::vector<PacketResult>& packet_feedback_vector)"
  },
  {
    "label": "bitrate()",
    "kind": "Method",
    "detail": "Function (absl::optional<DataRate>)",
    "insertText": "bitrate()"
  },
  {
    "label": "PeekRate()",
    "kind": "Method",
    "detail": "Function (absl::optional<DataRate>)",
    "insertText": "PeekRate()"
  },
  {
    "label": "SetAlr()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAlr(bool in_alr)"
  },
  {
    "label": "SetAlrEndedTime()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAlrEndedTime(Timestamp alr_ended_time)"
  }
]