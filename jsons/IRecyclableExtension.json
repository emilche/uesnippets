[
  {
    "label": "SEQUENCERCORE_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SEQUENCERCORE_API"
  },
  {
    "label": "UE_SEQUENCER_DECLARE_VIEW_MODEL_TYPE_ID()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" SequencerCoreFwd . h \" # include \" MVVM / ViewModelTypeID . h \" namespace UE { namespace Sequencer { class IRecyclableExtension { public :)",
    "insertText": "UE_SEQUENCER_DECLARE_VIEW_MODEL_TYPE_ID(IRecyclableExtension) static void CallOnRecycle(const TViewModelPtr<IRecyclableExtension>& RecyclableItem)"
  },
  {
    "label": "IRecyclableExtension()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "IRecyclableExtension()"
  },
  {
    "label": "OnRecycle()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "OnRecycle()"
  }
]