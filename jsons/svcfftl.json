[
  {
    "label": "FT_UShort()",
    "kind": "Method",
    "detail": "Function (# ifndef SVCFFTL_H_ # define SVCFFTL_H_ # include<freetype / internal / ftserv . h> # include<freetype / internal / cfftypes . h> FT_BEGIN_HEADER # define FT_SERVICE_ID_CFF_LOAD \" cff - load \" typedef)",
    "insertText": "FT_UShort(*FT_Get_Standard_Encoding_Func)( FT_UInt charcode)"
  },
  {
    "label": "FT_Error()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "FT_Error(*FT_Load_Private_Dict_Func)( CFF_Font font, CFF_SubFont subfont, FT_UInt lenNDV, FT_Fixed* NDV)"
  },
  {
    "label": "FT_Byte()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "FT_Byte(*FT_FD_Select_Get_Func)( CFF_FDSelect fdselect, FT_UInt glyph_index)"
  },
  {
    "label": "FT_Bool()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "FT_Bool(*FT_Blend_Check_Vector_Func)( CFF_Blend blend, FT_UInt vsindex, FT_UInt lenNDV, FT_Fixed* NDV)"
  },
  {
    "label": "FT_Error()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "FT_Error(*FT_Blend_Build_Vector_Func)( CFF_Blend blend, FT_UInt vsindex, FT_UInt lenNDV, FT_Fixed* NDV)"
  },
  {
    "label": "FT_DEFINE_SERVICE()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FT_DEFINE_SERVICE(CFFLoad)"
  },
  {
    "label": "FT_DEFINE_SERVICE_CFFLOADREC()",
    "kind": "Method",
    "detail": "Function (FT_Get_Standard_Encoding_Func get_standard_encoding ; FT_Load_Private_Dict_Func load_private_dict ; FT_FD_Select_Get_Func fd_select_get ; FT_Blend_Check_Vector_Func blend_check_vector ; FT_Blend_Build_Vector_Func blend_build_vector ; } ; # define)",
    "insertText": "FT_DEFINE_SERVICE_CFFLOADREC(class_, \\ get_standard_encoding_, \\ load_private_dict_, \\ fd_select_get_, \\ blend_check_vector_, \\ blend_build_vector_)"
  }
]