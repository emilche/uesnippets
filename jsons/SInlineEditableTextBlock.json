[
  {
    "label": "FActiveTimerHandle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FActiveTimerHandle"
  },
  {
    "label": "IBreakIterator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IBreakIterator"
  },
  {
    "label": "SEditableTextBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SEditableTextBox"
  },
  {
    "label": "SHorizontalBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SHorizontalBox"
  },
  {
    "label": "SMultiLineEditableTextBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SMultiLineEditableTextBox"
  },
  {
    "label": "STextBlock",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "STextBlock"
  },
  {
    "label": "SInlineEditableTextBlock",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SInlineEditableTextBlock"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct( const FArguments& InArgs )"
  },
  {
    "label": "EnterEditingMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnterEditingMode()"
  },
  {
    "label": "ExitEditingMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExitEditingMode()"
  },
  {
    "label": "SetReadOnly()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetReadOnly(const TAttribute<bool>& bInIsReadOnly)"
  },
  {
    "label": "SetText()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetText( const TAttribute< FText >& InText )"
  },
  {
    "label": "SetText()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetText( const FString& InText )"
  },
  {
    "label": "SetHighlightText()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetHighlightText(const TAttribute<FText>& InText)"
  },
  {
    "label": "SetWrapTextAt()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetWrapTextAt(const TAttribute<float>& InWrapTextAt)"
  },
  {
    "label": "SetOverflowPolicy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetOverflowPolicy(TOptional<ETextOverflowPolicy> InOverflowPolicy)"
  },
  {
    "label": "OnTextChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnTextChanged(const FText& InText)"
  },
  {
    "label": "OnTextBoxCommitted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnTextBoxCommitted(const FText& InText, ETextCommit::Type InCommitType)"
  },
  {
    "label": "CancelEditMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CancelEditMode()"
  },
  {
    "label": "SetEditableText()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetEditableText( const TAttribute< FText >& InNewText )"
  },
  {
    "label": "SetTextBoxError()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTextBoxError( const FText& ErrorText )"
  },
  {
    "label": "TriggerEditMode()",
    "kind": "Method",
    "detail": "Function (EActiveTimerReturnType)",
    "insertText": "TriggerEditMode(double InCurrentTime, float InDeltaTime)"
  }
]