[
  {
    "label": "FOutputDevice",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FOutputDevice"
  },
  {
    "label": "FScopeCycleCounter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FScopeCycleCounter"
  },
  {
    "label": "FThreadStats",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FThreadStats"
  },
  {
    "label": "TStatId",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TStatId"
  },
  {
    "label": "TIsPODType",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TIsPODType"
  },
  {
    "label": "CORE_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CORE_API"
  },
  {
    "label": "TThreadSingleton",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TThreadSingleton"
  },
  {
    "label": "FScopeNonCriticalPath",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FScopeNonCriticalPath"
  },
  {
    "label": "FScopeIdle",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FScopeIdle"
  },
  {
    "label": "that",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "that"
  },
  {
    "label": "FStats",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FStats"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "TStatIdData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TStatIdData"
  },
  {
    "label": "TStatId",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TStatId"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "EStatDataType",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "EStatDataType"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "EStatOperation",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "EStatOperation"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "EStatMetaFlags",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "EStatMetaFlags"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "EMemoryRegion",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "EMemoryRegion"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "that",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "that"
  },
  {
    "label": "FStatNameAndInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStatNameAndInfo"
  },
  {
    "label": "FStatMessage",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FStatMessage"
  },
  {
    "label": "TIsPODType",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TIsPODType"
  },
  {
    "label": "TStatMessage",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TStatMessage"
  },
  {
    "label": "EComplexStatField",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "EComplexStatField"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "TIsPODType",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TIsPODType"
  },
  {
    "label": "EStatMessagesArrayConstants",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "EStatMessagesArrayConstants"
  },
  {
    "label": "FStatPacket",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FStatPacket"
  },
  {
    "label": "used",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "used"
  },
  {
    "label": "FStatMessageLock",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FStatMessageLock"
  },
  {
    "label": "FThreadStatsPool",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FThreadStatsPool"
  },
  {
    "label": "EConstructor",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EConstructor"
  },
  {
    "label": "FThreadStats",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FThreadStats"
  },
  {
    "label": "FStatsMallocProfilerProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStatsMallocProfilerProxy"
  },
  {
    "label": "FStatsThreadState",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStatsThreadState"
  },
  {
    "label": "FStatsThread",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStatsThread"
  },
  {
    "label": "FThreadStatsPool",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FThreadStatsPool"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "FCycleCounter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCycleCounter"
  },
  {
    "label": "FSimpleScopeSecondsStat",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSimpleScopeSecondsStat"
  },
  {
    "label": "FStartupMessages",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStartupMessages"
  },
  {
    "label": "FStatsThread",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStatsThread"
  },
  {
    "label": "IStatGroupEnableManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IStatGroupEnableManager"
  },
  {
    "label": "FThreadSafeStaticStatBase",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FThreadSafeStaticStatBase"
  },
  {
    "label": "TStatData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TStatData"
  },
  {
    "label": "FThreadSafeStaticStatInner",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FThreadSafeStaticStatInner"
  },
  {
    "label": "TStatData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TStatData"
  },
  {
    "label": "FThreadSafeStaticStatInner",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FThreadSafeStaticStatInner"
  },
  {
    "label": "TStatData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TStatData"
  },
  {
    "label": "FThreadSafeStaticStat",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FThreadSafeStaticStat"
  },
  {
    "label": "FStatGroup_",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FStatGroup_"
  },
  {
    "label": "FStat_",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FStat_"
  },
  {
    "label": "FThreadSafeStaticStat",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FThreadSafeStaticStat"
  },
  {
    "label": "FScopeIdle()",
    "kind": "Method",
    "detail": "Function (CORE_API)",
    "insertText": "FScopeIdle(bool bInIgnore = false)"
  },
  {
    "label": "DirectStatsCommand()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DirectStatsCommand(const TCHAR* Cmd, bool bBlockForCompletion = false, FOutputDevice* Ar = nullptr)"
  },
  {
    "label": "TickCommandletStats()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TickCommandletStats()"
  },
  {
    "label": "EnabledForCommandlet()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "EnabledForCommandlet()"
  },
  {
    "label": "HasLoadTimeStatsForCommandletToken()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasLoadTimeStatsForCommandletToken()"
  },
  {
    "label": "HasLoadTimeFileForCommandletToken()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasLoadTimeFileForCommandletToken()"
  },
  {
    "label": "MinimalNameToName()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "MinimalNameToName(StatIdPtr->Name)"
  },
  {
    "label": "GetTypeHash()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetTypeHash(StatId.StatIdPtr)"
  },
  {
    "label": "uint32()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "uint32(Both >> 32)"
  },
  {
    "label": "uint32()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "uint32(Both & MAX_uint32)"
  },
  {
    "label": "FName()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FName(Index, Index, Number)"
  },
  {
    "label": "ToLongName()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "ToLongName(FName InStatName, char const* InGroup, char const* InCategory, TCHAR const* InDescription, bool InSortByName)"
  },
  {
    "label": "GetShortNameFrom()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetShortNameFrom(FName InLongName)"
  },
  {
    "label": "GetGroupNameFrom()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetGroupNameFrom(FName InLongName)"
  },
  {
    "label": "GetGroupCategoryFrom()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetGroupCategoryFrom(FName InLongName)"
  },
  {
    "label": "GetDescriptionFrom()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetDescriptionFrom(FName InLongName)"
  },
  {
    "label": "GetSortByNameFrom()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetSortByNameFrom(FName InLongName)"
  },
  {
    "label": "GetPermanentStats()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetPermanentStats(TArray<FStatMessage>& OutStats)"
  },
  {
    "label": "FThreadStatsPool()",
    "kind": "Method",
    "detail": "Function (CORE_API)",
    "insertText": "FThreadStatsPool()"
  },
  {
    "label": "ReturnToPool()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReturnToPool(FThreadStats* Instance)"
  },
  {
    "label": "FThreadStats()",
    "kind": "Method",
    "detail": "Function (CORE_API)",
    "insertText": "FThreadStats()"
  },
  {
    "label": "FThreadStats()",
    "kind": "Method",
    "detail": "Function (CORE_API)",
    "insertText": "FThreadStats(EConstructor)"
  },
  {
    "label": "SendMessage_Async()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SendMessage_Async(FStatPacket* ToSend)"
  },
  {
    "label": "CheckEnable()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CheckEnable()"
  },
  {
    "label": "Flush()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Flush(bool bHasBrokenCallstacks = false, bool bForceFlush = false)"
  },
  {
    "label": "FlushRegularStats()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FlushRegularStats(bool bHasBrokenCallstacks, bool bForceFlush)"
  },
  {
    "label": "FlushRawStats()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FlushRawStats(bool bHasBrokenCallstacks = false, bool bForceFlush = false)"
  },
  {
    "label": "CheckForCollectingStartupStats()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CheckForCollectingStartupStats()"
  },
  {
    "label": "MessageLock()",
    "kind": "Method",
    "detail": "Function (FStatMessageLock)",
    "insertText": "MessageLock(MemoryMessageScope)"
  },
  {
    "label": "ExplicitFlush()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExplicitFlush(bool DiscardCallstack = false)"
  },
  {
    "label": "StartThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StartThread()"
  },
  {
    "label": "StopThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StopThread()"
  },
  {
    "label": "WaitForStats()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WaitForStats()"
  },
  {
    "label": "AddThreadMetadata()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddThreadMetadata( const FName InThreadFName, uint32 InThreadID )"
  },
  {
    "label": "AddMetadata()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddMetadata( FName InStatName, const TCHAR* InStatDesc, const char* InGroupName, const char* InGroupCategory, const TCHAR* InGroupDesc, bool bShouldClearEveryFrame, EStatDataType::Type InStatType, bool bCycleStat, bool bSortByName, FPlatformMemory::EMemoryCounterRegion InMemoryRegion = FPlatformMemory::MCR_Invalid )"
  },
  {
    "label": "TStatId()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TStatId(LocalHighPerformanceEnable)"
  },
  {
    "label": "TStatId()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TStatId()"
  },
  {
    "label": "FName()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FName()"
  },
  {
    "label": "GET_STATID()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GET_STATID(StatId)"
  },
  {
    "label": "DEFINE_STAT()",
    "kind": "Method",
    "detail": "Function (APIX)",
    "insertText": "DEFINE_STAT(StatId)"
  },
  {
    "label": "DEFINE_STAT()",
    "kind": "Method",
    "detail": "Function (APIX)",
    "insertText": "DEFINE_STAT(StatId)"
  },
  {
    "label": "DEFINE_STAT()",
    "kind": "Method",
    "detail": "Function (API)",
    "insertText": "DEFINE_STAT(StatId)"
  },
  {
    "label": "DEFINE_STAT()",
    "kind": "Method",
    "detail": "Function (API)",
    "insertText": "DEFINE_STAT(StatId)"
  },
  {
    "label": "DEFINE_STAT()",
    "kind": "Method",
    "detail": "Function (API)",
    "insertText": "DEFINE_STAT(StatId)"
  },
  {
    "label": "DEFINE_STAT()",
    "kind": "Method",
    "detail": "Function (API)",
    "insertText": "DEFINE_STAT(StatId)"
  },
  {
    "label": "DEFINE_STAT()",
    "kind": "Method",
    "detail": "Function (API)",
    "insertText": "DEFINE_STAT(StatId)"
  },
  {
    "label": "DEFINE_STAT()",
    "kind": "Method",
    "detail": "Function (API)",
    "insertText": "DEFINE_STAT(StatId)"
  },
  {
    "label": "DEFINE_STAT()",
    "kind": "Method",
    "detail": "Function (API)",
    "insertText": "DEFINE_STAT(StatId)"
  },
  {
    "label": "DEFINE_STAT()",
    "kind": "Method",
    "detail": "Function (API)",
    "insertText": "DEFINE_STAT(StatId)"
  },
  {
    "label": "CycleCount_FromStatId()",
    "kind": "Method",
    "detail": "Function (FScopeCycleCounter)",
    "insertText": "CycleCount_FromStatId(StatId)"
  }
]