[
  {
    "label": "FMetalHashedVertexDescriptor",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMetalHashedVertexDescriptor"
  },
  {
    "label": "FMetalHashedVertexDescriptor()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" MetalRHIPrivate . h \" # pragma mark - Metal Hashed Vertex Descriptor struct FMetalHashedVertexDescriptor { NS::UInteger VertexDescHash ; MTLVertexDescriptorPtr VertexDesc ; # if PLATFORM_SUPPORTS_BINDLESS_RENDERING)",
    "insertText": "FMetalHashedVertexDescriptor(IRVersionedInputLayoutDescriptor& Desc, uint32 Hash)"
  },
  {
    "label": "FMetalHashedVertexDescriptor()",
    "kind": "Method",
    "detail": "Function (IRVersionedInputLayoutDescriptor IRVertexDesc ; bool bUsesIRVertexDesc = false ; # endif)",
    "insertText": "FMetalHashedVertexDescriptor()"
  },
  {
    "label": "FMetalHashedVertexDescriptor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FMetalHashedVertexDescriptor(MTLVertexDescriptorPtr Desc, uint32 Hash)"
  },
  {
    "label": "FMetalHashedVertexDescriptor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FMetalHashedVertexDescriptor(FMetalHashedVertexDescriptor const& Other)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FMetalHashedVertexDescriptor&)",
    "insertText": "operator(FMetalHashedVertexDescriptor const& Other)"
  },
  {
    "label": "GetTypeHash()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetTypeHash(FMetalHashedVertexDescriptor const& Hash)"
  }
]