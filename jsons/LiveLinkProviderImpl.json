[
  {
    "label": "FTrackedSubject",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTrackedSubject"
  },
  {
    "label": "LIVELINKMESSAGEBUSFRAMEWORK_API",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "LIVELINKMESSAGEBUSFRAMEWORK_API"
  },
  {
    "label": "FMessageEndpoint",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMessageEndpoint"
  },
  {
    "label": "FTrackedAddress",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTrackedAddress"
  },
  {
    "label": "FTrackedStaticData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTrackedStaticData"
  },
  {
    "label": "FTrackedFrameData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTrackedFrameData"
  },
  {
    "label": "IMessageContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IMessageContext"
  },
  {
    "label": "IMessageContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IMessageContext"
  },
  {
    "label": "FTrackedSubject",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTrackedSubject"
  },
  {
    "label": "FTrackedSubject",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTrackedSubject"
  },
  {
    "label": "IMessageContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IMessageContext"
  },
  {
    "label": "FMessageEndpointBuilder",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMessageEndpointBuilder"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "for"
  },
  {
    "label": "FMessageEndpointBuilder",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMessageEndpointBuilder"
  },
  {
    "label": "HandlePingMessage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandlePingMessage(const FLiveLinkPingMessage& Message,\n\t\t\t\t\t\t   const TSharedRef<class IMessageContext, ESPMode::ThreadSafe>& Context)"
  },
  {
    "label": "HandleHeartbeat()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleHeartbeat(const FLiveLinkHeartbeatMessage& Message,\n\t\t\t\t\t\t const TSharedRef<class IMessageContext, ESPMode::ThreadSafe>& Context)"
  },
  {
    "label": "SendSubject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SendSubject(FName SubjectName, const struct FTrackedSubject& Subject)"
  },
  {
    "label": "SendSubjectFrame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SendSubjectFrame(FName SubjectName, const struct FTrackedSubject& Subject)"
  },
  {
    "label": "SetLastSubjectStaticData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetLastSubjectStaticData(FName SubjectName, TSubclassOf<ULiveLinkRole> Role, FLiveLinkStaticDataStruct&& StaticData, TMap<FName, FString>&& Annotations)"
  },
  {
    "label": "SetLastSubjectFrameData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetLastSubjectFrameData(FName SubjectName, FLiveLinkFrameDataStruct&& FrameData, TMap<FName, FString>&& SubjectAnnotations)"
  },
  {
    "label": "ClearTrackedSubject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearTrackedSubject(const FName& SubjectName)"
  },
  {
    "label": "GetFilteredAddresses()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetFilteredAddresses(FName SubjectName, TArray<FMessageAddress>& Addresses)"
  },
  {
    "label": "HandleConnectMessage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleConnectMessage(const FLiveLinkConnectMessage& Message, const TSharedRef<class IMessageContext, ESPMode::ThreadSafe>& Context)"
  },
  {
    "label": "CreateMessageEndpoint()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateMessageEndpoint(struct FMessageEndpointBuilder& EndpointBuilder)"
  },
  {
    "label": "GetConnectedAddresses()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetConnectedAddresses(TArray<FMessageAddress>& Addresses)"
  },
  {
    "label": "ValidateConnections()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ValidateConnections()"
  },
  {
    "label": "CloseConnection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CloseConnection(FMessageAddress Address)"
  },
  {
    "label": "SendClearSubjectToConnections()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SendClearSubjectToConnections(FName SubjectName)"
  },
  {
    "label": "FLiveLinkProvider()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FLiveLinkProvider(const FString& InProviderName)"
  },
  {
    "label": "UpdateSubject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateSubject(const FName& SubjectName, const TArray<FName>& BoneNames, const TArray<int32>& BoneParents)"
  },
  {
    "label": "ClearSubject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearSubject(const FName& SubjectName)"
  },
  {
    "label": "UpdateSubjectFrame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateSubjectFrame(const FName& SubjectName, const TArray<FTransform>& BoneTransforms, const TArray<FLiveLinkCurveElement>& CurveData, double Time)"
  },
  {
    "label": "UpdateSubjectFrame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateSubjectFrame(const FName& SubjectName, const TArray<FTransform>& BoneTransforms, const TArray<FLiveLinkCurveElement>& CurveData,\n\t\t\t\t\t\t\t\t\tconst FLiveLinkMetaData& MetaData, double Time)"
  }
]