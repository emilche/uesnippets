[
  {
    "label": "IEditableSkeleton",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IEditableSkeleton"
  },
  {
    "label": "IPersonaToolkit",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPersonaToolkit"
  },
  {
    "label": "UAnimSequence",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimSequence"
  },
  {
    "label": "FAnimationEditorPreviewScene",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAnimationEditorPreviewScene"
  },
  {
    "label": "IEditableSkeleton",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IEditableSkeleton"
  },
  {
    "label": "IPersonaToolkit",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPersonaToolkit"
  },
  {
    "label": "IPersonaToolkit",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPersonaToolkit"
  },
  {
    "label": "UDataAsset",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UDataAsset"
  },
  {
    "label": "FEditorCameraController",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEditorCameraController"
  },
  {
    "label": "UActorComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UActorComponent"
  },
  {
    "label": "UActorComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UActorComponent"
  },
  {
    "label": "UPersonaPreviewSceneDescription",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPersonaPreviewSceneDescription"
  },
  {
    "label": "AWindDirectionalSource",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AWindDirectionalSource"
  },
  {
    "label": "IEditableSkeleton",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IEditableSkeleton"
  },
  {
    "label": "IEditableSkeleton",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IEditableSkeleton"
  },
  {
    "label": "IPersonaToolkit",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPersonaToolkit"
  },
  {
    "label": "UPersonaPreviewSceneDescription",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPersonaPreviewSceneDescription"
  },
  {
    "label": "FAnimationEditorPreviewScene()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FAnimationEditorPreviewScene(const ConstructionValues& CVS, const TSharedPtr<class IEditableSkeleton>& InEditableSkeleton, const TSharedRef<class IPersonaToolkit>& InPersonaToolkit)"
  },
  {
    "label": "ValidatePreviewAttachedAssets()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ValidatePreviewAttachedAssets(USkeletalMesh* PreviewSkeletalMesh)"
  },
  {
    "label": "SetFloorLocation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFloorLocation(const FVector& InPosition)"
  },
  {
    "label": "RecordAnimation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RecordAnimation()"
  },
  {
    "label": "StopRecording()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StopRecording()"
  },
  {
    "label": "SetPreviewMeshInternal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPreviewMeshInternal(USkeletalMesh* NewPreviewMesh)"
  },
  {
    "label": "AddPreviewAttachedObjects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddPreviewAttachedObjects()"
  },
  {
    "label": "CleanupComponent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CleanupComponent(USceneComponent* Component)"
  },
  {
    "label": "RemoveAttachedComponent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveAttachedComponent(bool bRemovePreviewAttached = true)"
  },
  {
    "label": "CreateWindActor()",
    "kind": "Method",
    "detail": "Function (AWindDirectionalSource>)",
    "insertText": "CreateWindActor(UWorld* World)"
  }
]