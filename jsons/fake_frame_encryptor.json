[
  {
    "label": "FakeFrameEncryptor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FakeFrameEncryptor"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FakeFrameEncryptor()",
    "kind": "Method",
    "detail": "Function (# ifndef API_TEST_FAKE_FRAME_ENCRYPTOR_H_ # define API_TEST_FAKE_FRAME_ENCRYPTOR_H_ # include<stddef . h> # include<stdint . h> # include \" api / array_view . h \" # include \" api / crypto / frame_encryptor_interface . h \" # include \" api / media_types . h \" # include \" rtc_base / ref_counted_object . h \" namespace webrtc { class FakeFrameEncryptor : public rtc::RefCountedObject<FrameEncryptorInterface> { public :)",
    "insertText": "FakeFrameEncryptor(uint8_t fake_key = 0xAA, uint8_t postfix_byte = 255)"
  },
  {
    "label": "Encrypt()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "Encrypt(cricket::MediaType media_type, uint32_t ssrc, rtc::ArrayView<const uint8_t> additional_data, rtc::ArrayView<const uint8_t> frame, rtc::ArrayView<uint8_t> encrypted_frame, size_t* bytes_written)"
  },
  {
    "label": "GetMaxCiphertextByteSize()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "GetMaxCiphertextByteSize(cricket::MediaType media_type, size_t frame_size)"
  },
  {
    "label": "SetFakeKey()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFakeKey(uint8_t fake_key)"
  },
  {
    "label": "GetFakeKey()",
    "kind": "Method",
    "detail": "Function (uint8_t)",
    "insertText": "GetFakeKey()"
  },
  {
    "label": "SetPostfixByte()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPostfixByte(uint8_t expected_postfix_byte)"
  },
  {
    "label": "GetPostfixByte()",
    "kind": "Method",
    "detail": "Function (uint8_t)",
    "insertText": "GetPostfixByte()"
  },
  {
    "label": "SetFailEncryption()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFailEncryption(bool fail_encryption)"
  }
]