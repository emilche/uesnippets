[
  {
    "label": "FSystemWideCriticalSectionNotImplemented",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSystemWideCriticalSectionNotImplemented"
  },
  {
    "label": "CriticalSection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CriticalSection"
  },
  {
    "label": "TGenericPlatformRWLock",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TGenericPlatformRWLock"
  },
  {
    "label": "FSystemWideCriticalSectionNotImplemented()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" Misc / Timespan . h \" class FSystemWideCriticalSectionNotImplemented { public :)",
    "insertText": "FSystemWideCriticalSectionNotImplemented(const FString& Name, FTimespan Timeout = FTimespan::Zero())"
  },
  {
    "label": "FSystemWideCriticalSectionNotImplemented()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FSystemWideCriticalSectionNotImplemented()"
  },
  {
    "label": "IsValid()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsValid()"
  },
  {
    "label": "FSystemWideCriticalSectionNotImplemented()",
    "kind": "Method",
    "detail": "Function (} private :)",
    "insertText": "FSystemWideCriticalSectionNotImplemented(const FSystemWideCriticalSectionNotImplemented&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FSystemWideCriticalSectionNotImplemented&)",
    "insertText": "operator(const FSystemWideCriticalSectionNotImplemented&)"
  },
  {
    "label": "TGenericPlatformRWLock()",
    "kind": "Method",
    "detail": "Function (} ; template<class CriticalSection> class TGenericPlatformRWLock { public :)",
    "insertText": "TGenericPlatformRWLock(const TGenericPlatformRWLock&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (TGenericPlatformRWLock&)",
    "insertText": "operator(const TGenericPlatformRWLock&)"
  },
  {
    "label": "TGenericPlatformRWLock()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "TGenericPlatformRWLock()"
  },
  {
    "label": "ReadLock()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "ReadLock()"
  },
  {
    "label": "Lock()",
    "kind": "Method",
    "detail": "Function (Mutex .)",
    "insertText": "Lock()"
  },
  {
    "label": "WriteLock()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "WriteLock()"
  },
  {
    "label": "TryReadLock()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "TryReadLock()"
  },
  {
    "label": "TryWriteLock()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "TryWriteLock()"
  },
  {
    "label": "ReadUnlock()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "ReadUnlock()"
  },
  {
    "label": "Unlock()",
    "kind": "Method",
    "detail": "Function (Mutex .)",
    "insertText": "Unlock()"
  },
  {
    "label": "WriteUnlock()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "WriteUnlock()"
  }
]