[
  {
    "label": "UCookOnTheFlyServer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UCookOnTheFlyServer"
  },
  {
    "label": "FCookGCDiagnosticContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCookGCDiagnosticContext"
  },
  {
    "label": "FCookGCDiagnosticContext()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" class UCookOnTheFlyServer ; namespace UE::Cook { class FCookGCDiagnosticContext { public : ~)",
    "insertText": "FCookGCDiagnosticContext()"
  },
  {
    "label": "NeedsDiagnosticSecondGC()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "NeedsDiagnosticSecondGC()"
  },
  {
    "label": "CurrentGCHasHistory()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CurrentGCHasHistory()"
  },
  {
    "label": "TryRequestGCWithHistory()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TryRequestGCWithHistory()"
  },
  {
    "label": "TryRequestFullGC()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TryRequestFullGC()"
  },
  {
    "label": "OnCookerStartCollectGarbage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnCookerStartCollectGarbage(UCookOnTheFlyServer& COTFS, uint32& ResultFlagsFromTick)"
  },
  {
    "label": "OnCookerEndCollectGarbage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnCookerEndCollectGarbage(UCookOnTheFlyServer& COTFS, uint32& ResultFlagsFromTick)"
  },
  {
    "label": "OnEvaluateResultsComplete()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnEvaluateResultsComplete()"
  },
  {
    "label": "SetGCWithHistoryRequested()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "SetGCWithHistoryRequested(bool bValue)"
  }
]