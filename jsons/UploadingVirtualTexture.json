[
  {
    "label": "FUploadingVirtualTexture",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FUploadingVirtualTexture"
  },
  {
    "label": "IFileCacheHandle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IFileCacheHandle"
  },
  {
    "label": "FVirtualTextureCodec",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVirtualTextureCodec"
  },
  {
    "label": "FTranscodeTask",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTranscodeTask"
  },
  {
    "label": "FVTCodecAndStatus",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FVTCodecAndStatus"
  },
  {
    "label": "FVTDataAndStatus",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FVTDataAndStatus"
  },
  {
    "label": "FVirtualTextureChunkStreamingManager",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FVirtualTextureChunkStreamingManager"
  },
  {
    "label": "RetireOldCodecs()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" VirtualTextureBuiltData . h \" # include \" GenericPlatform / GenericPlatformFile . h \" # include \" Misc / MemoryReadStream . h \" # include \" Containers / BitArray . h \" # include \" Containers / List . h \" # include \" Templates / UniquePtr . h \" # include \" Async / TaskGraphInterfaces . h \" # include \" VirtualTexturing . h \" # include<atomic> class FUploadingVirtualTexture ; class IFileCacheHandle ; class FVirtualTextureCodec : public TIntrusiveLinkedList<FVirtualTextureCodec> { struct FTranscodeTask ; public : void)",
    "insertText": "RetireOldCodecs()"
  },
  {
    "label": "FVirtualTextureCodec()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FVirtualTextureCodec()"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Init(IMemoryReadStreamRef& HeaderData)"
  },
  {
    "label": "IsCreationComplete()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsCreationComplete()"
  },
  {
    "label": "IsIdle()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsIdle()"
  },
  {
    "label": "LinkGlobalHead()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "LinkGlobalHead()"
  },
  {
    "label": "LinkGlobalTail()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LinkGlobalTail()"
  },
  {
    "label": "AllTranscodeTasksComplete()",
    "kind": "Method",
    "detail": "Function (FVirtualTextureCodec* ListHead ; FVirtualTextureCodec ListTail ; uint32 NumCodecs ; FGraphEventRef CompletedEvent ; class FUploadingVirtualTexture* Owner ; void* Contexts [ VIRTUALTEXTURE_DATA_MAXLAYERS ] = { nullptr } ; uint32 ChunkIndex = 0 u ; uint32 LastFrameUsed = 0 u ; protected : bool)",
    "insertText": "AllTranscodeTasksComplete()"
  },
  {
    "label": "BeginTranscodeTask()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "BeginTranscodeTask()"
  },
  {
    "label": "fetch_add()",
    "kind": "Method",
    "detail": "Function (TaskRefs .)",
    "insertText": "fetch_add(1)"
  },
  {
    "label": "EndTranscodeTask()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "EndTranscodeTask()"
  },
  {
    "label": "fetch_sub()",
    "kind": "Method",
    "detail": "Function (TaskRefs .)",
    "insertText": "fetch_sub(1)"
  },
  {
    "label": "FVTCodecAndStatus()",
    "kind": "Method",
    "detail": "Function (} std::atomic<uint32> TaskRefs { } ; } ; struct FVTCodecAndStatus {)",
    "insertText": "FVTCodecAndStatus(EVTRequestPageStatus InStatus, const FVirtualTextureCodec* InCodec = nullptr) : Codec(InCodec), Status(InStatus)"
  },
  {
    "label": "FVTDataAndStatus()",
    "kind": "Method",
    "detail": "Function (} const FVirtualTextureCodec* Codec ; EVTRequestPageStatus Status ; } ; struct FVTDataAndStatus {)",
    "insertText": "FVTDataAndStatus(EVTRequestPageStatus InStatus, const IMemoryReadStreamRef& InData = nullptr) : Data(InData), Status(InStatus)"
  },
  {
    "label": "FUploadingVirtualTexture()",
    "kind": "Method",
    "detail": "Function (} IMemoryReadStreamRef Data ; EVTRequestPageStatus Status ; } ; class FUploadingVirtualTexture : public IVirtualTexture { public :)",
    "insertText": "FUploadingVirtualTexture(const FName& InName, FVirtualTextureBuiltData* InData, int32 FirstMipToUse)"
  },
  {
    "label": "FUploadingVirtualTexture()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FUploadingVirtualTexture()"
  },
  {
    "label": "GetLocalMipBias()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetLocalMipBias(uint8 vLevel, uint32 vAddress)"
  },
  {
    "label": "IsPageStreamed()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsPageStreamed(uint8 vLevel, uint32 vAddress)"
  },
  {
    "label": "ProducePageData()",
    "kind": "Method",
    "detail": "Function (IVirtualTextureFinalizer*)",
    "insertText": "ProducePageData(FRHICommandList& RHICmdList, ERHIFeatureLevel::Type FeatureLevel, EVTProducePageFlags Flags, const FVirtualTextureProducerHandle& ProducerHandle, uint8 LayerMask, uint8 vLevel, uint64 vAddress, uint64 RequestHandle, const FVTProduceTargetLayer* TargetLayers)"
  },
  {
    "label": "GatherProducePageDataTasks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GatherProducePageDataTasks(FVirtualTextureProducerHandle const& ProducerHandle, FGraphEventArray& InOutTasks)"
  },
  {
    "label": "GatherProducePageDataTasks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GatherProducePageDataTasks(uint64 RequestHandle, FGraphEventArray& InOutTasks)"
  },
  {
    "label": "DumpToConsole()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DumpToConsole(bool verbose)"
  },
  {
    "label": "GetName()",
    "kind": "Method",
    "detail": "Function (const FName&)",
    "insertText": "GetName()"
  },
  {
    "label": "ReadData()",
    "kind": "Method",
    "detail": "Function (FVTDataAndStatus)",
    "insertText": "ReadData(FGraphEventArray& OutCompletionEvents, uint32 ChunkIndex, size_t Offset, size_t Size, EVTRequestPagePriority Priority)"
  }
]