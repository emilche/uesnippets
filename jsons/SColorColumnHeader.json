[
  {
    "label": "SColorColumnHeader",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SColorColumnHeader"
  },
  {
    "label": "IPropertyTableColumn",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPropertyTableColumn"
  },
  {
    "label": "IPropertyTableUtilities",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPropertyTableUtilities"
  },
  {
    "label": "IPropertyTableRow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPropertyTableRow"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Widgets / SWidget . h \" # include \" Presentation / PropertyEditor / PropertyEditor . h \" # include \" UserInterface / PropertyTable / SColumnHeader . h \" # include \" IPropertyTableCell . h \" # include \" UserInterface / PropertyTable / SPropertyTableCell . h \" # include \" UserInterface / PropertyTable / ColorPropertyTableCellPresenter . h \" class SColorColumnHeader : public SColumnHeader { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SColorColumnHeader ) : _Style( TEXT(\"PropertyTable\") ) , _Customization()"
  },
  {
    "label": "SLATE_ARGUMENT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_ARGUMENT(FName, Style ) SLATE_ARGUMENT( TSharedPtr< IPropertyTableCustomColumn >, Customization ) SLATE_END_ARGS() void Construct( const FArguments& InArgs, const TSharedRef< class IPropertyTableColumn >& InPropertyTableColumn, const TSharedRef< class IPropertyTableUtilities >& InPropertyUtilities)"
  },
  {
    "label": "Style()",
    "kind": "Method",
    "detail": "Function (Style = InArgs . _Style ; SColumnHeader::FArguments ColumnArgs ; ColumnArgs .)",
    "insertText": "Style(Style)"
  },
  {
    "label": "Customization()",
    "kind": "Method",
    "detail": "Function (ColumnArgs .)",
    "insertText": "Customization(InArgs._Customization)"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct(ColumnArgs, InPropertyTableColumn, InPropertyUtilities)"
  },
  {
    "label": "GenerateCell()",
    "kind": "Method",
    "detail": "Function (} TSharedRef<SWidget>)",
    "insertText": "GenerateCell(const TSharedRef< class IPropertyTableRow >& PropertyTableRow)"
  },
  {
    "label": "GetCell()",
    "kind": "Method",
    "detail": "Function (TSharedRef<IPropertyTableCell> Cell = Column ->)",
    "insertText": "GetCell(PropertyTableRow)"
  },
  {
    "label": "CellPresenter()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<IPropertyTableCellPresenter>)",
    "insertText": "CellPresenter(NULL)"
  },
  {
    "label": "CreateCellPresenter()",
    "kind": "Method",
    "detail": "Function (CellPresenter = Customization ->)",
    "insertText": "CreateCellPresenter(Cell, Utilities.ToSharedRef(), Style)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "if(!CellPresenter.IsValid() && Cell->IsBound())"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (TSharedRef<FPropertyEditor> PropertyEditor =)",
    "insertText": "Create(Cell->GetNode().ToSharedRef(), Utilities.ToSharedRef())"
  },
  {
    "label": "MakeShareable()",
    "kind": "Method",
    "detail": "Function (CellPresenter =)",
    "insertText": "MakeShareable(new FColorPropertyTableCellPresenter( PropertyEditor, Utilities.ToSharedRef() ))"
  },
  {
    "label": "SNew()",
    "kind": "Method",
    "detail": "Function (} return)",
    "insertText": "SNew(SPropertyTableCell, Cell ) .Presenter( CellPresenter ) .Style( Style)"
  }
]