[
  {
    "label": "FSceneInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSceneInterface"
  },
  {
    "label": "FRenderTarget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRenderTarget"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FMinimalViewInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMinimalViewInfo"
  },
  {
    "label": "PreDrawThumbnailSetupSequencer()",
    "kind": "Method",
    "detail": "Function (\ufeff # pragma once # include \" ISequencer . h \" # include \" Math / MathFwd . h \" # include \" Misc / FrameTime . h \" class FSceneInterface ; class FRenderTarget ; enum class EThumbnailQuality : uint8 ; struct FMinimalViewInfo ; namespace UE::MoveSceneTools { void)",
    "insertText": "PreDrawThumbnailSetupSequencer(ISequencer& Sequencer, FFrameTime CaptureFrame)"
  },
  {
    "label": "PreDrawThumbnailSetupSequencer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PreDrawThumbnailSetupSequencer(ISequencer& Sequencer, double ThumbnailEvalPosition)"
  },
  {
    "label": "PreDrawThumbnailSetupSequencer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PreDrawThumbnailSetupSequencer(Sequencer, ThumbnailEvalPosition * Sequencer.GetLocalTime().Rate)"
  },
  {
    "label": "PostDrawThumbnailCleanupSequencer()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "PostDrawThumbnailCleanupSequencer(ISequencer& Sequencer)"
  },
  {
    "label": "DrawViewportThumbnail()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DrawViewportThumbnail(FRenderTarget& ThumbnailRenderTarget, const FIntPoint& RenderTargetSize, FSceneInterface& Scene, const FMinimalViewInfo& ViewInfo, EThumbnailQuality Quality)"
  }
]