[
  {
    "label": "FActiveSound",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FActiveSound"
  },
  {
    "label": "FAudioVirtualLoop",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAudioVirtualLoop"
  },
  {
    "label": "FListener",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FListener"
  },
  {
    "label": "FWaveInstance",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FWaveInstance"
  },
  {
    "label": "FSoundSource",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSoundSource"
  },
  {
    "label": "FViewportClient",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FViewportClient"
  },
  {
    "label": "USoundWave",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USoundWave"
  },
  {
    "label": "UWorld",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UWorld"
  },
  {
    "label": "FAudioDebugger",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAudioDebugger"
  },
  {
    "label": "FDebugNames",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDebugNames"
  },
  {
    "label": "FAudioDebugger()",
    "kind": "Method",
    "detail": "Function (ENGINE_API)",
    "insertText": "FAudioDebugger()"
  },
  {
    "label": "DrawDebugInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DrawDebugInfo(const FSoundSource& SoundSource)"
  },
  {
    "label": "DrawDebugInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DrawDebugInfo(const FActiveSound& ActiveSound, const TArray<FWaveInstance*>& ThisSoundsWaveInstances, const float DeltaTime)"
  },
  {
    "label": "DrawDebugInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DrawDebugInfo(UWorld& World, const TArray<FListener>& Listeners)"
  },
  {
    "label": "DrawDebugInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DrawDebugInfo(const FAudioVirtualLoop& VirtualLoop)"
  },
  {
    "label": "DrawDebugStats()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "DrawDebugStats(UWorld& World, FViewport* Viewport, FCanvas* Canvas, int32 Y)"
  },
  {
    "label": "DrawDebugStatsEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DrawDebugStatsEnabled()"
  },
  {
    "label": "PostStatModulatorHelp()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PostStatModulatorHelp(UWorld* World, FCommonViewportClient* ViewportClient, const TCHAR* Stream)"
  },
  {
    "label": "RenderStatCues()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "RenderStatCues(UWorld* World, FViewport* Viewport, FCanvas* Canvas, int32 X, int32 Y)"
  },
  {
    "label": "RenderStatMixes()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "RenderStatMixes(UWorld* World, FViewport* Viewport, FCanvas* Canvas, int32 X, int32 Y)"
  },
  {
    "label": "RenderStatModulators()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "RenderStatModulators(UWorld* World, FViewport* Viewport, FCanvas* Canvas, int32 X, int32 Y, const FVector* ViewLocation, const FRotator* ViewRotation)"
  },
  {
    "label": "RenderStatReverb()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "RenderStatReverb(UWorld* World, FViewport* Viewport, FCanvas* Canvas, int32 X, int32 Y)"
  },
  {
    "label": "RenderStatSounds()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "RenderStatSounds(UWorld* World, FViewport* Viewport, FCanvas* Canvas, int32 X, int32 Y)"
  },
  {
    "label": "RenderStatWaves()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "RenderStatWaves(UWorld* World, FViewport* Viewport, FCanvas* Canvas, int32 X, int32 Y)"
  },
  {
    "label": "RenderStatStreaming()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "RenderStatStreaming(UWorld* World, FViewport* Viewport, FCanvas* Canvas, int32 X, int32 Y, const FVector* ViewLocation, const FRotator* ViewRotation)"
  },
  {
    "label": "RemoveDevice()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveDevice(const FAudioDevice& AudioDevice)"
  },
  {
    "label": "ResolveDesiredStats()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResolveDesiredStats(FViewportClient* ViewportClient)"
  },
  {
    "label": "SendUpdateResultsToGameThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SendUpdateResultsToGameThread(const FAudioDevice& AudioDevice, const int32 FirstActiveIndex)"
  },
  {
    "label": "UpdateAudibleInactiveSounds()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateAudibleInactiveSounds(const uint32 FirstIndex, const TArray<FWaveInstance*>& WaveInstances)"
  },
  {
    "label": "LogSubtitle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LogSubtitle(const TCHAR* InCmd, USoundWave& InSoundWave)"
  },
  {
    "label": "ClearStats()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearStats(const FName StatsToToggle, UWorld* InWorld)"
  },
  {
    "label": "SetStats()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetStats(const TSet<FName>& StatsToToggle, UWorld* InWorld)"
  },
  {
    "label": "IsVirtualLoopVisualizeEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsVirtualLoopVisualizeEnabled()"
  },
  {
    "label": "ClearMutesAndSolos()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearMutesAndSolos()"
  },
  {
    "label": "ToggleVisualizeDebug3dEnabled()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ToggleVisualizeDebug3dEnabled()"
  },
  {
    "label": "OnBeginPIE()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnBeginPIE()"
  },
  {
    "label": "OnEndPIE()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnEndPIE()"
  },
  {
    "label": "SetAudioMixerDebugSound()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAudioMixerDebugSound(const TCHAR* SoundName)"
  },
  {
    "label": "SetAudioDebugSound()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAudioDebugSound(const TCHAR* SoundName)"
  },
  {
    "label": "GetAudioDebugSound()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetAudioDebugSound(FString& OutDebugSound)"
  },
  {
    "label": "DrawDebugStatsInternal()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "DrawDebugStatsInternal(UWorld& World, FViewport& Viewport, FCanvas* Canvas, int32 InY)"
  },
  {
    "label": "SetNameArray()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetNameArray(FName InName, TArray<FName>& InNameArray, bool bOnOff)"
  },
  {
    "label": "ToggleNameArray()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ToggleNameArray(FName InName, TArray<FName>& NameArray, bool bExclusive)"
  },
  {
    "label": "ClearStats()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearStats(FDeviceId DeviceId, FName StatsToClear)"
  },
  {
    "label": "SetStats()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetStats(FDeviceId DeviceId, const TSet<FName>& StatsToSet)"
  },
  {
    "label": "ToggleStats()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ToggleStats(UWorld* World, const TSet<FName>& StatToToggle)"
  },
  {
    "label": "ToggleStats()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ToggleStats(FDeviceId DeviceId, const TSet<FName>& StatsToToggle)"
  }
]