[
  {
    "label": "AActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AActor"
  },
  {
    "label": "FObjectReplicator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FObjectReplicator"
  },
  {
    "label": "FNetworkObjectList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNetworkObjectList"
  },
  {
    "label": "FDormantObjectReplicator",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDormantObjectReplicator"
  },
  {
    "label": "FActorDormantReplicators",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FActorDormantReplicators"
  },
  {
    "label": "with",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "with"
  },
  {
    "label": "FDormantObjectReplicatorKeyFuncs",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDormantObjectReplicatorKeyFuncs"
  },
  {
    "label": "FDormantReplicatorHolder",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDormantReplicatorHolder"
  },
  {
    "label": "FActorDormantReplicatorsKeyFuncs",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FActorDormantReplicatorsKeyFuncs"
  },
  {
    "label": "FDormantObjectReplicator()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "FDormantObjectReplicator(FObjectKey InObjectKey)"
  },
  {
    "label": "FDormantObjectReplicator()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "FDormantObjectReplicator(FObjectKey InObjectKey, const TSharedRef<FObjectReplicator>& ExistingReplicator)"
  },
  {
    "label": "GetTypeHash()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetTypeHash(Key)"
  },
  {
    "label": "FindReplicator()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FObjectReplicator>)",
    "insertText": "FindReplicator(AActor* DormantActor, UObject* ReplicatedObject)"
  },
  {
    "label": "FindAndRemoveReplicator()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FObjectReplicator>)",
    "insertText": "FindAndRemoveReplicator(AActor* DormantActor, UObject* ReplicatedObject)"
  },
  {
    "label": "StoreReplicator()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StoreReplicator(AActor* DormantActor, UObject* ReplicatedObject, const TSharedRef<FObjectReplicator>& ObjectReplicator)"
  },
  {
    "label": "RemoveStoredReplicator()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RemoveStoredReplicator(AActor* DormantActor, FObjectKey ReplicatedObjectKey)"
  },
  {
    "label": "CleanupAllReplicatorsOfActor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CleanupAllReplicatorsOfActor(AActor* DormantActor)"
  },
  {
    "label": "CleanupStaleObjects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CleanupStaleObjects(FNetworkObjectList& NetworkObjectList, UObject* ReferenceOwner)"
  },
  {
    "label": "ForEachDormantReplicator()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ForEachDormantReplicator(UE::Net::FExecuteForEachDormantReplicator Function)"
  },
  {
    "label": "ForEachDormantReplicatorOfActor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ForEachDormantReplicatorOfActor(AActor* DormantActor, UE::Net::FExecuteForEachDormantReplicator Function)"
  },
  {
    "label": "EmptySet()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EmptySet()"
  },
  {
    "label": "GetTypeHash()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetTypeHash(Key)"
  },
  {
    "label": "ClearFlushedObjectsForActor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearFlushedObjectsForActor(AActor* Actor)"
  }
]