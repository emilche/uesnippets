[
  {
    "label": "RTC_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RTC_EXPORT"
  },
  {
    "label": "IsSupported()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_DESKTOP_CAPTURE_WIN_SCREEN_CAPTURER_WIN_DIRECTX_H_ # define MODULES_DESKTOP_CAPTURE_WIN_SCREEN_CAPTURER_WIN_DIRECTX_H_ # include<d3dcommon . h> # include<memory> # include<unordered_map> # include<vector> # include \" api / scoped_refptr . h \" # include \" modules / desktop_capture / desktop_capture_options . h \" # include \" modules / desktop_capture / desktop_capturer . h \" # include \" modules / desktop_capture / desktop_region . h \" # include \" modules / desktop_capture / screen_capture_frame_queue . h \" # include \" modules / desktop_capture / win / dxgi_duplicator_controller . h \" # include \" modules / desktop_capture / win / dxgi_frame . h \" # include \" rtc_base / system / rtc_export . h \" namespace webrtc { class RTC_EXPORT ScreenCapturerWinDirectx : public DesktopCapturer { public : using D3dInfo = DxgiDuplicatorController::D3dInfo ; bool)",
    "insertText": "IsSupported()"
  },
  {
    "label": "RetrieveD3dInfo()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RetrieveD3dInfo(D3dInfo* info)"
  },
  {
    "label": "IsCurrentSessionSupported()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsCurrentSessionSupported()"
  },
  {
    "label": "GetScreenListFromDeviceNames()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetScreenListFromDeviceNames(const std::vector<std::string>& device_names, DesktopCapturer::SourceList* screens)"
  },
  {
    "label": "GetIndexFromScreenId()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "GetIndexFromScreenId(ScreenId id, const std::vector<std::string>& device_names)"
  },
  {
    "label": "ScreenCapturerWinDirectx()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ScreenCapturerWinDirectx()"
  },
  {
    "label": "ScreenCapturerWinDirectx()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ScreenCapturerWinDirectx(const ScreenCapturerWinDirectx&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (ScreenCapturerWinDirectx&)",
    "insertText": "operator(const ScreenCapturerWinDirectx&)"
  },
  {
    "label": "Start()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Start(Callback* callback)"
  },
  {
    "label": "SetSharedMemoryFactory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSharedMemoryFactory(std::unique_ptr<SharedMemoryFactory> shared_memory_factory)"
  },
  {
    "label": "CaptureFrame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CaptureFrame()"
  },
  {
    "label": "GetSourceList()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetSourceList(SourceList* sources)"
  },
  {
    "label": "SelectSource()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SelectSource(SourceId id)"
  }
]