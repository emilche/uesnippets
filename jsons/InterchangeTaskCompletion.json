[
  {
    "label": "FTaskPreCompletion_GameThread",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTaskPreCompletion_GameThread"
  },
  {
    "label": "FTaskCompletion_GameThread",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTaskCompletion_GameThread"
  },
  {
    "label": "FTaskPreCompletion_GameThread()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" InterchangeManager . h \" # include \" InterchangeTaskSystem . h \" # include \" Stats / Stats . h \" # include \" UObject / WeakObjectPtrTemplates . h \" namespace UE { namespace Interchange { class FTaskPreCompletion_GameThread : public FInterchangeTaskBase { private : UInterchangeManager* InterchangeManager ; TWeakPtr<FImportAsyncHelper,ESPMode::ThreadSafe> WeakAsyncHelper ; public :)",
    "insertText": "FTaskPreCompletion_GameThread(UInterchangeManager* InInterchangeManager, TWeakPtr<FImportAsyncHelper, ESPMode::ThreadSafe> InAsyncHelper) : InterchangeManager(InInterchangeManager) , WeakAsyncHelper(InAsyncHelper)"
  },
  {
    "label": "GetTaskThread()",
    "kind": "Method",
    "detail": "Function (} EInterchangeTaskThread)",
    "insertText": "GetTaskThread()"
  },
  {
    "label": "FTaskCompletion_GameThread()",
    "kind": "Method",
    "detail": "Function (} ; class FTaskCompletion_GameThread : public FInterchangeTaskBase { private : UInterchangeManager* InterchangeManager ; TWeakPtr<FImportAsyncHelper,ESPMode::ThreadSafe> WeakAsyncHelper ; public :)",
    "insertText": "FTaskCompletion_GameThread(UInterchangeManager* InInterchangeManager, TWeakPtr<FImportAsyncHelper, ESPMode::ThreadSafe> InAsyncHelper) : InterchangeManager(InInterchangeManager) , WeakAsyncHelper(InAsyncHelper)"
  }
]