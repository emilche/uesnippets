[
  {
    "label": "FOutputDevice",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FOutputDevice"
  },
  {
    "label": "UMassProcessor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMassProcessor"
  },
  {
    "label": "FMassEntityQuery",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMassEntityQuery"
  },
  {
    "label": "FMassEntityManager",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMassEntityManager"
  },
  {
    "label": "FMassArchetypeHandle",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMassArchetypeHandle"
  },
  {
    "label": "FMassFragmentRequirements",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMassFragmentRequirements"
  },
  {
    "label": "FMassFragmentRequirementDescription",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMassFragmentRequirementDescription"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FArchetypeStats",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FArchetypeStats"
  },
  {
    "label": "MASSENTITY_API",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "MASSENTITY_API"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "MASSENTITY_API",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "MASSENTITY_API"
  },
  {
    "label": "MASSENTITY_API",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "MASSENTITY_API"
  },
  {
    "label": "FEnvironment",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FEnvironment"
  },
  {
    "label": "FMassArchetypeHandle",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMassArchetypeHandle"
  },
  {
    "label": "FMassFragmentRequirements",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMassFragmentRequirements"
  },
  {
    "label": "FMassFragmentRequirementDescription",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMassFragmentRequirementDescription"
  },
  {
    "label": "FMassArchetypeCompositionDescriptor",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMassArchetypeCompositionDescriptor"
  },
  {
    "label": "MASSENTITY_API",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "MASSENTITY_API"
  },
  {
    "label": "DebugGetFragmentAccessString()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "DebugGetFragmentAccessString(EMassFragmentAccess Access)"
  },
  {
    "label": "DebugOutputDescription()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DebugOutputDescription(TConstArrayView<UMassProcessor*> Processors, FOutputDevice& Ar)"
  },
  {
    "label": "HasDebugEntities()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasDebugEntities()"
  },
  {
    "label": "IsDebuggingSingleEntity()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsDebuggingSingleEntity()"
  },
  {
    "label": "GetDebugEntitiesRange()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetDebugEntitiesRange(int32& OutBegin, int32& OutEnd)"
  },
  {
    "label": "IsDebuggingEntity()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsDebuggingEntity(FMassEntityHandle Entity, FColor* OutEntityColor = nullptr)"
  },
  {
    "label": "GetEntityDebugColor()",
    "kind": "Method",
    "detail": "Function (FColor)",
    "insertText": "GetEntityDebugColor(FMassEntityHandle Entity)"
  },
  {
    "label": "GetQueryRequirements()",
    "kind": "Method",
    "detail": "Function (UE::Mass::Debug::FQueryRequirementsView)",
    "insertText": "GetQueryRequirements(const FMassEntityQuery& Query)"
  },
  {
    "label": "GetQueryExecutionRequirements()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetQueryExecutionRequirements(const FMassEntityQuery& Query, FMassExecutionRequirements& OutExecutionRequirements)"
  },
  {
    "label": "GetAllArchetypes()",
    "kind": "Method",
    "detail": "Function (TArray<FMassArchetypeHandle>)",
    "insertText": "GetAllArchetypes(const FMassEntityManager& EntitySubsystem)"
  },
  {
    "label": "GetArchetypeEntityStats()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetArchetypeEntityStats(const FMassArchetypeHandle& ArchetypeHandle, UE::Mass::Debug::FArchetypeStats& OutStats)"
  },
  {
    "label": "GetArchetypeDebugNames()",
    "kind": "Method",
    "detail": "Function (TConstArrayView<FName>)",
    "insertText": "GetArchetypeDebugNames(const FMassArchetypeHandle& ArchetypeHandle)"
  },
  {
    "label": "GetProcessingGraph()",
    "kind": "Method",
    "detail": "Function (TConstArrayView<UMassCompositeProcessor::FDependencyNode>)",
    "insertText": "GetProcessingGraph(const UMassCompositeProcessor& GraphOwner)"
  },
  {
    "label": "GetHostedProcessors()",
    "kind": "Method",
    "detail": "Function (TConstArrayView<TObjectPtr<UMassProcessor>>)",
    "insertText": "GetHostedProcessors(const UMassCompositeProcessor& GraphOwner)"
  },
  {
    "label": "GetSingleRequirementDescription()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetSingleRequirementDescription(const FMassFragmentRequirementDescription& Requirement)"
  },
  {
    "label": "GetRequirementsDescription()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetRequirementsDescription(const FMassFragmentRequirements& Requirements)"
  },
  {
    "label": "GetArchetypeRequirementCompatibilityDescription()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetArchetypeRequirementCompatibilityDescription(const FMassFragmentRequirements& Requirements, const FMassArchetypeHandle& ArchetypeHandle)"
  },
  {
    "label": "GetArchetypeRequirementCompatibilityDescription()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetArchetypeRequirementCompatibilityDescription(const FMassFragmentRequirements& Requirements, const FMassArchetypeCompositionDescriptor& ArchetypeComposition)"
  },
  {
    "label": "OutputArchetypeDescription()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OutputArchetypeDescription(FOutputDevice& Ar, const FMassArchetypeHandle& Archetype)"
  },
  {
    "label": "SelectEntity()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SelectEntity(const FMassEntityManager& EntityManager, const FMassEntityHandle EntityHandle)"
  },
  {
    "label": "GetSelectedEntity()",
    "kind": "Method",
    "detail": "Function (FMassEntityHandle)",
    "insertText": "GetSelectedEntity(const FMassEntityManager& EntityManager)"
  },
  {
    "label": "RegisterEntityManager()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterEntityManager(FMassEntityManager& EntityManager)"
  },
  {
    "label": "UnregisterEntityManager()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterEntityManager(FMassEntityManager& EntityManager)"
  },
  {
    "label": "DoesArchetypeMatchRequirements()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DoesArchetypeMatchRequirements(const FMassArchetypeHandle& ArchetypeHandle, const FMassFragmentRequirements& Requirements, FOutputDevice& OutputDevice)"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT(\"[no debug information]\")"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT(\"[no debug information]\")"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT(\"[no debug information]\")"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT(\"[no debug information]\")"
  }
]