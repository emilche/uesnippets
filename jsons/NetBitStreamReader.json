[
  {
    "label": "FNetBitStreamReader",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNetBitStreamReader"
  },
  {
    "label": "FNetBitStreamReader()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" namespace UE::Net { class FNetBitStreamReader { public :)",
    "insertText": "FNetBitStreamReader()"
  },
  {
    "label": "InitBits()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitBits(const void* Buffer, uint32 BitCount)"
  },
  {
    "label": "ReadBits()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "ReadBits(uint32 BitCount)"
  },
  {
    "label": "ReadBool()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ReadBool()"
  },
  {
    "label": "ReadBitStream()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "ReadBitStream(uint32* Dst, uint32 BitCount)"
  },
  {
    "label": "Seek()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Seek(uint32 BitPosition)"
  },
  {
    "label": "GetPosBits()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetPosBits()"
  },
  {
    "label": "DoOverflow()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "DoOverflow()"
  },
  {
    "label": "IsOverflown()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsOverflown()"
  }
]