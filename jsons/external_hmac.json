[
  {
    "label": "external_hmac_alloc()",
    "kind": "Method",
    "detail": "Function (# ifndef PC_EXTERNAL_HMAC_H_ # define PC_EXTERNAL_HMAC_H_ # include<stdint . h> # include \" third_party / libsrtp / crypto / include / crypto_types . h \" # include \" third_party / libsrtp / include / srtp . h \" # include \" third_party / libsrtp / include / srtp_priv . h \" # define EXTERNAL_HMAC_SHA1 SRTP_HMAC_SHA1 + 1 # define HMAC_KEY_LENGTH 2 0 typedef struct { uint8_t key [ HMAC_KEY_LENGTH ] ; int key_length ; } ExternalHmacContext ; srtp_err_status_t)",
    "insertText": "external_hmac_alloc(srtp_auth_t** a, int key_len, int out_len)"
  },
  {
    "label": "external_hmac_dealloc()",
    "kind": "Method",
    "detail": "Function (srtp_err_status_t)",
    "insertText": "external_hmac_dealloc(srtp_auth_t* a)"
  },
  {
    "label": "external_hmac_init()",
    "kind": "Method",
    "detail": "Function (srtp_err_status_t)",
    "insertText": "external_hmac_init(void* state, const uint8_t* key, int key_len)"
  },
  {
    "label": "external_hmac_start()",
    "kind": "Method",
    "detail": "Function (srtp_err_status_t)",
    "insertText": "external_hmac_start(void* state)"
  },
  {
    "label": "external_hmac_update()",
    "kind": "Method",
    "detail": "Function (srtp_err_status_t)",
    "insertText": "external_hmac_update(void* state, const uint8_t* message, int msg_octets)"
  },
  {
    "label": "external_hmac_compute()",
    "kind": "Method",
    "detail": "Function (srtp_err_status_t)",
    "insertText": "external_hmac_compute(void* state, const uint8_t* message, int msg_octets, int tag_len, uint8_t* result)"
  },
  {
    "label": "external_crypto_init()",
    "kind": "Method",
    "detail": "Function (srtp_err_status_t)",
    "insertText": "external_crypto_init()"
  }
]