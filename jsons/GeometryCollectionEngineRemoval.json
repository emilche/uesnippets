[
  {
    "label": "FManagedArrayCollection",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FManagedArrayCollection"
  },
  {
    "label": "FGeometryDynamicCollection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGeometryDynamicCollection"
  },
  {
    "label": "FCollectionRemoveOnBreakFacade",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCollectionRemoveOnBreakFacade"
  },
  {
    "label": "FGeometryCollectionRemoveOnBreakDynamicFacade",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGeometryCollectionRemoveOnBreakDynamicFacade"
  },
  {
    "label": "FGeometryCollectionRemoveOnSleepDynamicFacade",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGeometryCollectionRemoveOnSleepDynamicFacade"
  },
  {
    "label": "FGeometryCollectionDecayDynamicFacade",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGeometryCollectionDecayDynamicFacade"
  },
  {
    "label": "DefineSchema()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DefineSchema()"
  },
  {
    "label": "SetAttributeValues()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAttributeValues(const GeometryCollection::Facades::FCollectionRemoveOnBreakFacade& RemoveOnBreakFacade)"
  },
  {
    "label": "UpdateBreakTimerAndComputeDecay()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "UpdateBreakTimerAndComputeDecay(int32 TransformIndex, float DeltaTime)"
  },
  {
    "label": "FGeometryCollectionRemoveOnSleepDynamicFacade()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FGeometryCollectionRemoveOnSleepDynamicFacade(FManagedArrayCollection& InCollection)"
  },
  {
    "label": "DefineSchema()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DefineSchema()"
  },
  {
    "label": "SetAttributeValues()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAttributeValues(const FVector2D& MaximumSleepTime, const FVector2D& RemovalDuration)"
  },
  {
    "label": "ComputeSlowMovingState()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ComputeSlowMovingState(int32 TransformIndex, const FVector& Position, float DeltaTime, FVector::FReal VelocityThreshold)"
  },
  {
    "label": "UpdateSleepTimer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateSleepTimer(int32 TransformIndex, float DeltaTime)"
  },
  {
    "label": "FGeometryCollectionDecayDynamicFacade()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FGeometryCollectionDecayDynamicFacade(FManagedArrayCollection& InCollection)"
  },
  {
    "label": "AddAttributes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddAttributes()"
  },
  {
    "label": "SetDecay()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDecay(int32 TransformIndex, float DecayValue)"
  }
]