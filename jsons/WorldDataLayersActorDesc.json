[
  {
    "label": "FDataLayerInstanceDesc",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDataLayerInstanceDesc"
  },
  {
    "label": "UDataLayerInstance",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UDataLayerInstance"
  },
  {
    "label": "UDataLayerAsset",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UDataLayerAsset"
  },
  {
    "label": "FWorldDataLayersActorDesc",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWorldDataLayersActorDesc"
  },
  {
    "label": "FDataLayerInstanceDesc()",
    "kind": "Method",
    "detail": "Function (# pragma once # if WITH_EDITOR # include \" WorldPartition / WorldPartitionActorDesc . h \" # include \" WorldPartition / DataLayer / DataLayerType . h \" # include \" Misc / Optional . h \" class FDataLayerInstanceDesc { public :)",
    "insertText": "FDataLayerInstanceDesc()"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Init(class UDataLayerInstance* DataLayerInstance)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FArchive&)",
    "insertText": "operator(FArchive& Ar, FDataLayerInstanceDesc& DataLayerInstanceDesc)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "operator(const FDataLayerInstanceDesc& Lhs, const FDataLayerInstanceDesc& Rhs)"
  },
  {
    "label": "GetName()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetName()"
  },
  {
    "label": "GetShortName()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetShortName()"
  },
  {
    "label": "IsIncludedInActorFilterDefault()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsIncludedInActorFilterDefault()"
  },
  {
    "label": "GetAsset()",
    "kind": "Method",
    "detail": "Function (private : class UDataLayerAsset*)",
    "insertText": "GetAsset()"
  },
  {
    "label": "FWorldDataLayersActorDesc()",
    "kind": "Method",
    "detail": "Function (FName Name ; FName ParentName ; bool bIsUsingAsset ; FName AssetPath ; bool bIsIncludedInActorFilterDefault ; bool bIsPrivate ; bool bPrivateDataLayerSupportsActorFilter ; FString PrivateShortName ; bool bDeprecatedIsRuntime ; class UDataLayerInstance ; } ; class FWorldDataLayersActorDesc : public FWorldPartitionActorDesc { public :)",
    "insertText": "FWorldDataLayersActorDesc()"
  },
  {
    "label": "IsValid()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsValid()"
  },
  {
    "label": "GetDataLayerInstanceFromInstanceName()",
    "kind": "Method",
    "detail": "Function (const FDataLayerInstanceDesc*)",
    "insertText": "GetDataLayerInstanceFromInstanceName(FName InDataLayerInstanceName)"
  },
  {
    "label": "GetDataLayerInstanceFromAssetPath()",
    "kind": "Method",
    "detail": "Function (const FDataLayerInstanceDesc*)",
    "insertText": "GetDataLayerInstanceFromAssetPath(FName InDataLayerAssetPath)"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "Init(const AActor* InActor)"
  },
  {
    "label": "Equals()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Equals(const FWorldPartitionActorDesc* Other)"
  },
  {
    "label": "GetSizeOf()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetSizeOf()"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Serialize(FArchive& Ar)"
  },
  {
    "label": "IsResaveNeeded()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsResaveNeeded()"
  },
  {
    "label": "IsRuntimeRelevant()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsRuntimeRelevant(const FWorldPartitionActorDescInstance* InActorDescInstance)"
  },
  {
    "label": "ForEachDataLayerInstanceDesc()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "ForEachDataLayerInstanceDesc(TFunctionRef<bool(const FDataLayerInstanceDesc&)> Func)"
  },
  {
    "label": "GetExternalPackageDataLayerInstances()",
    "kind": "Method",
    "detail": "Function (const TArray<FDataLayerInstanceDesc>&)",
    "insertText": "GetExternalPackageDataLayerInstances()"
  }
]