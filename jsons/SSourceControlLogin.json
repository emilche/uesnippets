[
  {
    "label": "FActiveTimerHandle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FActiveTimerHandle"
  },
  {
    "label": "IDetailsView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDetailsView"
  },
  {
    "label": "SBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SBox"
  },
  {
    "label": "SWindow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWindow"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "SSourceControlLogin",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SSourceControlLogin"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (# pragma once # if SOURCE_CONTROL_WITH_SLATE # include \" ISourceControlModule . h \" # include \" ISourceControlProvider . h \" # include \" Input / Reply . h \" # include \" Layout / Visibility . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Widgets / Layout / SBorder . h \" # include \" Widgets / SCompoundWidget . h \" class FActiveTimerHandle ; class IDetailsView ; class SBox ; class SWindow ; namespace ELoginConnectionState { enum Type { Disconnected,Connecting,Connected,} ; } class SSourceControlLogin : public SCompoundWidget { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SSourceControlLogin)"
  },
  {
    "label": "SLATE_ARGUMENT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_ARGUMENT(TSharedPtr<SWindow>, ParentWindow) SLATE_ARGUMENT(FSourceControlLoginClosed, OnSourceControlLoginClosed) SLATE_END_ARGS() public: void Construct(const FArguments& InArgs)"
  },
  {
    "label": "RefreshSettings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RefreshSettings()"
  },
  {
    "label": "TickSourceControlModule()",
    "kind": "Method",
    "detail": "Function (private : EActiveTimerReturnType)",
    "insertText": "TickSourceControlModule(double InCurrentTime, float InDeltaTime)"
  },
  {
    "label": "OnAcceptSettings()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnAcceptSettings()"
  },
  {
    "label": "OnDisableSourceControl()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnDisableSourceControl()"
  },
  {
    "label": "DisplayConnectionError()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DisplayConnectionError(const FText& InErrorText = FText())"
  },
  {
    "label": "DisplayConnectionSuccess()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DisplayConnectionSuccess()"
  },
  {
    "label": "SourceControlOperationComplete()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SourceControlOperationComplete(const FSourceControlOperationRef& InOperation, ECommandResult::Type InResult)"
  },
  {
    "label": "AreControlsEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AreControlsEnabled()"
  },
  {
    "label": "IsAcceptSettingsEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsAcceptSettingsEnabled()"
  },
  {
    "label": "GetThrobberVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "GetThrobberVisibility()"
  },
  {
    "label": "GetSettingsVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "GetSettingsVisibility()"
  },
  {
    "label": "GetDisabledTextVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "GetDisabledTextVisibility()"
  },
  {
    "label": "ConfirmDisableSourceControl()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ConfirmDisableSourceControl()"
  },
  {
    "label": "SaveSettingsToDisk()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SaveSettingsToDisk()"
  }
]