[
  {
    "label": "SimpleWindow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SimpleWindow"
  },
  {
    "label": "GLContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "GLContext"
  },
  {
    "label": "MX_RENDERGLSL_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MX_RENDERGLSL_API"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# ifndef MATERIALX_GLCONTEXT_H # define MATERIALX_GLCONTEXT_H # include<MaterialXRenderGlsl / Export . h> # include<MaterialXRenderHw / SimpleWindow . h> # if)",
    "insertText": "defined(__APPLE__) #include <OpenGL/gl.h> #elif defined(__linux__) || defined(__FreeBSD__) #include <GL/glx.h> #endif MATERIALX_NAMESPACE_BEGIN #if defined(_WIN32)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# elif)",
    "insertText": "defined(__linux__) || defined(__FreeBSD__)"
  },
  {
    "label": "create()",
    "kind": "Method",
    "detail": "Function (# else using HardwareContextHandle = void* ; # endif using SimpleWindowPtr = std::shared_ptr<class SimpleWindow> ; using GLContextPtr = std::shared_ptr<class GLContext> ; class GLContext { public : GLContextPtr)",
    "insertText": "create(SimpleWindowPtr window, HardwareContextHandle context = {})"
  },
  {
    "label": "GLContext()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "GLContext()"
  },
  {
    "label": "contextHandle()",
    "kind": "Method",
    "detail": "Function (HardwareContextHandle)",
    "insertText": "contextHandle()"
  },
  {
    "label": "GLContext()",
    "kind": "Method",
    "detail": "Function (protected :)",
    "insertText": "GLContext(SimpleWindowPtr window, HardwareContextHandle context = 0)"
  }
]