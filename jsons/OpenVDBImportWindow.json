[
  {
    "label": "FOpenVDBGridInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FOpenVDBGridInfo"
  },
  {
    "label": "FOpenVDBImportOptions",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FOpenVDBImportOptions"
  },
  {
    "label": "FOpenVDBGridComponentInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FOpenVDBGridComponentInfo"
  },
  {
    "label": "FOpenVDBSparseVolumeAttributesDesc",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FOpenVDBSparseVolumeAttributesDesc"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "SOpenVDBGridInfoTableRow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SOpenVDBGridInfoTableRow"
  },
  {
    "label": "SOpenVDBComponentPicker",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SOpenVDBComponentPicker"
  },
  {
    "label": "SOpenVDBAttributesConfigurator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SOpenVDBAttributesConfigurator"
  },
  {
    "label": "SOpenVDBImportWindow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SOpenVDBImportWindow"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Widgets / SCompoundWidget . h \" # include \" Widgets / Input / SComboBox . h \" # include \" Widgets / Input / SCheckBox . h \" # include \" SparseVolumeTexture / SparseVolumeTexture . h \" struct FOpenVDBGridInfo ; struct FOpenVDBImportOptions ; struct FOpenVDBGridComponentInfo ; struct FOpenVDBSparseVolumeAttributesDesc ; enum class ESparseVolumeAttributesFormat : uint8 ; class SOpenVDBGridInfoTableRow : public SMultiColumnTableRow<TSharedPtr<FOpenVDBGridInfo>> { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SOpenVDBGridInfoTableRow)"
  },
  {
    "label": "SLATE_ARGUMENT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_ARGUMENT(TSharedPtr<FOpenVDBGridInfo>, OpenVDBGridInfo) SLATE_END_ARGS() public: void Construct(const FArguments& InArgs, const TSharedRef<STableViewBase>& OwnerTableView)"
  },
  {
    "label": "GenerateWidgetForColumn()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "GenerateWidgetForColumn(const FName& ColumnName)"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (private : TSharedPtr<FOpenVDBGridInfo> OpenVDBGridInfo ; } ; class SOpenVDBComponentPicker : public SCompoundWidget { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SOpenVDBComponentPicker)"
  },
  {
    "label": "SLATE_ARGUMENT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_ARGUMENT(FOpenVDBSparseVolumeAttributesDesc*, AttributesDesc) SLATE_ARGUMENT(uint32, ComponentIndex) SLATE_ARGUMENT(const TArray<TSharedPtr<FOpenVDBGridComponentInfo>>*, OpenVDBGridComponentInfo) SLATE_END_ARGS() public: void Construct(const FArguments& InArgs)"
  },
  {
    "label": "RefreshUIFromData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RefreshUIFromData()"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (private : FOpenVDBSparseVolumeAttributesDesc* AttributesDesc ; uint32 ComponentIndex ; const TArray<TSharedPtr<FOpenVDBGridComponentInfo>>* OpenVDBGridComponentInfo ; TSharedPtr<SComboBox<TSharedPtr<FOpenVDBGridComponentInfo>>> GridComboBox ; } ; class SOpenVDBAttributesConfigurator : public SCompoundWidget { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SOpenVDBAttributesConfigurator)"
  },
  {
    "label": "SLATE_ARGUMENT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_ARGUMENT(FOpenVDBSparseVolumeAttributesDesc*, AttributesDesc) SLATE_ARGUMENT(const TArray<TSharedPtr<FOpenVDBGridComponentInfo>>*, OpenVDBGridComponentInfo) SLATE_ARGUMENT(const TArray<TSharedPtr<ESparseVolumeAttributesFormat>>*, OpenVDBSupportedTargetFormats) SLATE_ARGUMENT(FText, AttributesName) SLATE_END_ARGS() public: void Construct(const FArguments& InArgs)"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (private : FOpenVDBSparseVolumeAttributesDesc* AttributesDesc ; TSharedPtr<SOpenVDBComponentPicker> ComponentPickers [ 4 ] ; const TArray<TSharedPtr<ESparseVolumeAttributesFormat>>* OpenVDBSupportedTargetFormats ; TSharedPtr<SComboBox<TSharedPtr<ESparseVolumeAttributesFormat>>> FormatComboBox ; } ; class SOpenVDBImportWindow : public SCompoundWidget { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SOpenVDBImportWindow)"
  },
  {
    "label": "SLATE_ARGUMENT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_ARGUMENT(FOpenVDBImportOptions*, ImportOptions) SLATE_ARGUMENT(const FOpenVDBImportOptions*, DefaultImportOptions) SLATE_ARGUMENT(int32, NumFoundFiles) SLATE_ARGUMENT(const TArray<TSharedPtr<FOpenVDBGridInfo>>*, OpenVDBGridInfo) SLATE_ARGUMENT(const TArray<TSharedPtr<FOpenVDBGridComponentInfo>>*, OpenVDBGridComponentInfo) SLATE_ARGUMENT(const TArray<TSharedPtr<ESparseVolumeAttributesFormat>>*, OpenVDBSupportedTargetFormats) SLATE_ARGUMENT(TSharedPtr<SWindow>, WidgetWindow) SLATE_ARGUMENT(FText, FullPath) SLATE_ARGUMENT(float, MaxWindowHeight) SLATE_ARGUMENT(float, MaxWindowWidth) SLATE_END_ARGS() public: virtual bool SupportsKeyboardFocus()"
  },
  {
    "label": "OnImport()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnImport()"
  },
  {
    "label": "OnCancel()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnCancel()"
  },
  {
    "label": "ShouldImport()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldImport()"
  },
  {
    "label": "ShouldImportAsSequence()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldImportAsSequence()"
  },
  {
    "label": "SetFocusPostConstruct()",
    "kind": "Method",
    "detail": "Function (private : FOpenVDBImportOptions* ImportOptions ; const FOpenVDBImportOptions* DefaultImportOptions ; bool bIsSequence ; const TArray<TSharedPtr<FOpenVDBGridInfo>>* OpenVDBGridInfo ; const TArray<TSharedPtr<FOpenVDBGridComponentInfo>>* OpenVDBGridComponentInfo ; const TArray<TSharedPtr<ESparseVolumeAttributesFormat>>* OpenVDBSupportedTargetFormats ; TSharedPtr<SOpenVDBAttributesConfigurator> AttributesAConfigurator ; TSharedPtr<SOpenVDBAttributesConfigurator> AttributesBConfigurator ; TSharedPtr<SCheckBox> ImportAsSequenceCheckBox ; TSharedPtr<SButton> ImportButton ; TWeakPtr<SWindow> WidgetWindow ; bool bShouldImport ; EActiveTimerReturnType)",
    "insertText": "SetFocusPostConstruct(double InCurrentTime, float InDeltaTime)"
  },
  {
    "label": "GenerateGridInfoItemRow()",
    "kind": "Method",
    "detail": "Function (TSharedRef<ITableRow>)",
    "insertText": "GenerateGridInfoItemRow(TSharedPtr<FOpenVDBGridInfo> Item, const TSharedRef<STableViewBase>& OwnerTable)"
  },
  {
    "label": "CanImport()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanImport()"
  },
  {
    "label": "OnResetToDefaultClick()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnResetToDefaultClick()"
  },
  {
    "label": "GetImportTypeDisplayText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetImportTypeDisplayText()"
  },
  {
    "label": "SetDefaultGridAssignment()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDefaultGridAssignment()"
  }
]