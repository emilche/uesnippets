[
  {
    "label": "EventBasedExponentialMovingAverage",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "EventBasedExponentialMovingAverage"
  },
  {
    "label": "EventBasedExponentialMovingAverage()",
    "kind": "Method",
    "detail": "Function (# ifndef RTC_BASE_NUMERICS_EVENT_BASED_EXPONENTIAL_MOVING_AVERAGE_H_ # define RTC_BASE_NUMERICS_EVENT_BASED_EXPONENTIAL_MOVING_AVERAGE_H_ # include<cmath> # include<cstdint> # include<limits> # include \" absl / types / optional . h \" namespace rtc { class EventBasedExponentialMovingAverage { public :)",
    "insertText": "EventBasedExponentialMovingAverage(int half_time)"
  },
  {
    "label": "AddSample()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddSample(int64_t now, int value)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "SetHalfTime()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetHalfTime(int half_time)"
  },
  {
    "label": "nan()",
    "kind": "Method",
    "detail": "Function (private : double tau_ ; double value_ =)",
    "insertText": "nan(\"uninit\")"
  }
]