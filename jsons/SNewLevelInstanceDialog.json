[
  {
    "label": "AActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AActor"
  },
  {
    "label": "IDetailLayoutBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDetailLayoutBuilder"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "SWindow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWindow"
  },
  {
    "label": "SNewLevelInstanceDialog",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SNewLevelInstanceDialog"
  },
  {
    "label": "FNewLevelInstanceParamsDetails",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNewLevelInstanceParamsDetails"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" IDetailCustomization . h \" # include \" Input / Reply . h \" # include \" Internationalization / Text . h \" # include \" LevelInstance / LevelInstanceTypes . h \" # include \" Math / Vector2D . h \" # include \" Misc / Attribute . h \" # include \" Templates / SharedPointer . h \" # include \" Types / SlateEnums . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Widgets / SCompoundWidget . h \" class AActor ; class IDetailLayoutBuilder ; class SWidget ; class SWindow ; class SNewLevelInstanceDialog : public SCompoundWidget { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SNewLevelInstanceDialog)"
  },
  {
    "label": "SLATE_ATTRIBUTE()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_ATTRIBUTE(TSharedPtr<SWindow>, ParentWindow) SLATE_ATTRIBUTE(TArray<AActor*>, PivotActors) SLATE_END_ARGS() ~SNewLevelInstanceDialog()"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Construct(const FArguments& InArgs)"
  },
  {
    "label": "ClickedOk()",
    "kind": "Method",
    "detail": "Function (const FVector2D DEFAULT_WINDOW_SIZE ; bool)",
    "insertText": "ClickedOk()"
  },
  {
    "label": "IsOkEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsOkEnabled()"
  },
  {
    "label": "OnCancelClicked()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnCancelClicked()"
  },
  {
    "label": "FNewLevelInstanceParamsDetails()",
    "kind": "Method",
    "detail": "Function (TWeakPtr<SWindow> ParentWindowPtr ; FNewLevelInstanceParams CreationParams ; bool bClickedOk ; } ; class FNewLevelInstanceParamsDetails : public IDetailCustomization { public :)",
    "insertText": "FNewLevelInstanceParamsDetails(TArray<AActor*> InPivotActors) : CreationParams(nullptr), PivotActors(InPivotActors)"
  },
  {
    "label": "MakeInstance()",
    "kind": "Method",
    "detail": "Function (} ; TSharedRef<IDetailCustomization>)",
    "insertText": "MakeInstance(TArray<AActor*> InPivotActors)"
  },
  {
    "label": "CustomizeDetails()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "CustomizeDetails(IDetailLayoutBuilder& DetailBuilder)"
  },
  {
    "label": "OnSelectedPivotActorChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSelectedPivotActorChanged(AActor* NewValue)"
  },
  {
    "label": "IsPivotActorSelectionEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsPivotActorSelectionEnabled()"
  }
]