[
  {
    "label": "FHittestGrid",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FHittestGrid"
  },
  {
    "label": "FSlateRect",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateRect"
  },
  {
    "label": "ICustomHitTestPath",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ICustomHitTestPath"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "SWindow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWindow"
  },
  {
    "label": "FPaintArgs",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPaintArgs"
  },
  {
    "label": "SInvalidationPanel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SInvalidationPanel"
  },
  {
    "label": "SRetainerWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SRetainerWidget"
  },
  {
    "label": "FPaintArgs()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Layout / Visibility . h \" # include \" Layout / Geometry . h \" # include \" SlateGlobals . h \" class FHittestGrid ; class FSlateRect ; class ICustomHitTestPath ; class SWidget ; class SWindow ; class FPaintArgs { class SInvalidationPanel ; class SRetainerWidget ; public :)",
    "insertText": "FPaintArgs(const SWidget* PaintParent, FHittestGrid& InRootHittestGrid, FHittestGrid& InCurrentHitTestGrid, UE::Slate::FDeprecateVector2DParameter InWindowOffset, double InCurrentTime, float InDeltaTime)"
  },
  {
    "label": "FPaintArgs()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FPaintArgs(const SWidget* PaintParent, FHittestGrid& InRootHittestGrid, UE::Slate::FDeprecateVector2DParameter InWindowOffset, double InCurrentTime, float InDeltaTime)"
  },
  {
    "label": "WithNewParent()",
    "kind": "Method",
    "detail": "Function ([ [ nodiscard ] ] FPaintArgs)",
    "insertText": "WithNewParent(const SWidget* PaintParent)"
  },
  {
    "label": "Args()",
    "kind": "Method",
    "detail": "Function (FPaintArgs)",
    "insertText": "Args(*this)"
  },
  {
    "label": "WithNewHitTestGrid()",
    "kind": "Method",
    "detail": "Function (Args . PaintParentPtr = PaintParent ; return Args ; } [ [ nodiscard ] ] FPaintArgs)",
    "insertText": "WithNewHitTestGrid(FHittestGrid& NewHitTestGrid)"
  },
  {
    "label": "NewArgs()",
    "kind": "Method",
    "detail": "Function (FPaintArgs)",
    "insertText": "NewArgs(PaintParentPtr, RootGrid, NewHitTestGrid, WindowOffset, CurrentTime, DeltaTime)"
  },
  {
    "label": "SetInheritedHittestability()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetInheritedHittestability(bool InInheritedHittestability)"
  },
  {
    "label": "GetInheritedHittestability()",
    "kind": "Method",
    "detail": "Function (bInheritedHittestability = InInheritedHittestability ; } bool)",
    "insertText": "GetInheritedHittestability()"
  },
  {
    "label": "GetCurrentTime()",
    "kind": "Method",
    "detail": "Function (} double)",
    "insertText": "GetCurrentTime()"
  },
  {
    "label": "GetDeferredPaint()",
    "kind": "Method",
    "detail": "Function (bDeferredPainting = InDeferredPaint ; } bool)",
    "insertText": "GetDeferredPaint()"
  }
]