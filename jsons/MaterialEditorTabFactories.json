[
  {
    "label": "FAssetEditorToolkit",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAssetEditorToolkit"
  },
  {
    "label": "SDockTab",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SDockTab"
  },
  {
    "label": "FMaterialGraphEditorSummoner",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMaterialGraphEditorSummoner"
  },
  {
    "label": "FMaterialEditor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMaterialEditor"
  },
  {
    "label": "FMaterialGraphTabHistory",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMaterialGraphTabHistory"
  },
  {
    "label": "SGraphEditor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SGraphEditor"
  },
  {
    "label": "DECLARE_DELEGATE_RetVal_TwoParams()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Misc / Attribute . h \" # include \" Widgets / SWidget . h \" # include \" Textures / SlateIcon . h \" # include \" GraphEditor . h \" # include \" EdGraph / EdGraph . h \" # include \" EdGraph / EdGraphSchema . h \" # include \" WorkflowOrientedApp / WorkflowTabFactory . h \" # include \" WorkflowOrientedApp / WorkflowTabManager . h \" # include \" WorkflowOrientedApp / WorkflowUObjectDocuments . h \" # define LOCTEXT_NAMESPACE \" MaterialEditorTabFactories \" class FAssetEditorToolkit ; class SDockTab ; struct FMaterialGraphEditorSummoner : public FDocumentTabFactoryForObjects<UEdGraph> { public :)",
    "insertText": "DECLARE_DELEGATE_RetVal_TwoParams(TSharedRef<SGraphEditor>, FOnCreateGraphEditorWidget, TSharedRef<FTabInfo>, UEdGraph*)"
  },
  {
    "label": "FMaterialGraphEditorSummoner()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "FMaterialGraphEditorSummoner(TSharedPtr<class FMaterialEditor> InMaterialEditorPtr, FOnCreateGraphEditorWidget CreateGraphEditorWidgetCallback)"
  },
  {
    "label": "OnTabActivated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnTabActivated(TSharedPtr<SDockTab> Tab)"
  },
  {
    "label": "OnTabBackgrounded()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnTabBackgrounded(TSharedPtr<SDockTab> Tab)"
  },
  {
    "label": "OnTabRefreshed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnTabRefreshed(TSharedPtr<SDockTab> Tab)"
  },
  {
    "label": "SaveState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SaveState(TSharedPtr<SDockTab> Tab, TSharedPtr<FTabPayload> Payload)"
  },
  {
    "label": "RegisterTabSpawner()",
    "kind": "Method",
    "detail": "Function (FTabSpawnerEntry&)",
    "insertText": "RegisterTabSpawner(TSharedRef<FTabManager> TabManager, const FApplicationMode* CurrentApplicationMode)"
  },
  {
    "label": "ConstructTabNameForObject()",
    "kind": "Method",
    "detail": "Function (protected : TAttribute<FText>)",
    "insertText": "ConstructTabNameForObject(UEdGraph* DocumentID)"
  },
  {
    "label": "GetGraphDisplayName()",
    "kind": "Method",
    "detail": "Function (auto)",
    "insertText": "GetGraphDisplayName(UEdGraph* Graph)"
  },
  {
    "label": "GetGraphDisplayInformation()",
    "kind": "Method",
    "detail": "Function (FGraphDisplayInfo Info ; Schema ->)",
    "insertText": "GetGraphDisplayInformation(*Graph, Info)"
  },
  {
    "label": "LOCTEXT()",
    "kind": "Method",
    "detail": "Function (} } return)",
    "insertText": "LOCTEXT(\"UnknownGraphName\", \"UNKNOWN\")"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (} ; return TAttribute<FText)",
    "insertText": "Create(TAttribute<FText>::FGetter::CreateLambda(GetGraphDisplayName, DocumentID))"
  },
  {
    "label": "SpawnTab()",
    "kind": "Method",
    "detail": "Function (} TSharedRef<SDockTab>)",
    "insertText": "SpawnTab(const FWorkflowTabSpawnInfo& Info)"
  },
  {
    "label": "OnSpawnTab()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SDockTab>)",
    "insertText": "OnSpawnTab(const FSpawnTabArgs& SpawnArgs, TWeakPtr<FTabManager> WeakTabManager)"
  },
  {
    "label": "CreateTabBodyForObject()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "CreateTabBodyForObject(const FWorkflowTabSpawnInfo& Info, UEdGraph* DocumentID)"
  },
  {
    "label": "GetTabIconForObject()",
    "kind": "Method",
    "detail": "Function (const FSlateBrush*)",
    "insertText": "GetTabIconForObject(const FWorkflowTabSpawnInfo& Info, UEdGraph* DocumentID)"
  },
  {
    "label": "CreateTabHistoryNode()",
    "kind": "Method",
    "detail": "Function (TSharedRef<FGenericTabHistory>)",
    "insertText": "CreateTabHistoryNode(TSharedPtr<FTabPayload> Payload)"
  },
  {
    "label": "FMaterialGraphTabHistory()",
    "kind": "Method",
    "detail": "Function (protected : TWeakPtr<class FMaterialEditor> MaterialEditorPtr ; FOnCreateGraphEditorWidget OnCreateGraphEditorWidget ; } ; struct FMaterialGraphTabHistory : public FGenericTabHistory { public :)",
    "insertText": "FMaterialGraphTabHistory(TSharedPtr<FDocumentTabFactory> InFactory, TSharedPtr<FTabPayload> InPayload) : FGenericTabHistory(InFactory, InPayload) , SavedLocation(FVector2D::ZeroVector) , SavedZoomAmount(INDEX_NONE)"
  },
  {
    "label": "EvokeHistory()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "EvokeHistory(TSharedPtr<FTabInfo> InTabInfo, bool bPrevTabMatches)"
  },
  {
    "label": "SaveHistory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SaveHistory()"
  },
  {
    "label": "RestoreHistory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RestoreHistory()"
  }
]