[
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FProperty",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FProperty"
  },
  {
    "label": "UStruct",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UStruct"
  },
  {
    "label": "FJsonObjectConverter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FJsonObjectConverter"
  },
  {
    "label": "PrintPolicy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PrintPolicy"
  },
  {
    "label": "StandardizeCase()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "StandardizeCase(const FString &StringIn)"
  },
  {
    "label": "GetTextFromObject()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetTextFromObject(const TSharedRef<FJsonObject>& Obj, FText& TextOut)"
  },
  {
    "label": "GetTextFromField()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetTextFromField(const FString& FieldName, const TSharedPtr<FJsonValue>& FieldValue, FText& TextOut)"
  },
  {
    "label": "UStructToJsonObject()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UStructToJsonObject(const UStruct* StructDefinition, const void* Struct, TSharedRef<FJsonObject> OutJsonObject, int64 CheckFlags = 0, int64 SkipFlags = 0, const CustomExportCallback* ExportCb = nullptr, EJsonObjectConversionFlags ConversionFlags = EJsonObjectConversionFlags::None)"
  },
  {
    "label": "UStructToJsonObjectString()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UStructToJsonObjectString(const UStruct* StructDefinition, const void* Struct, FString& OutJsonString, int64 CheckFlags = 0, int64 SkipFlags = 0, int32 Indent = 0, const CustomExportCallback* ExportCb = nullptr, bool bPrettyPrint = true)"
  },
  {
    "label": "UStructToJsonAttributes()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UStructToJsonAttributes(const UStruct* StructDefinition, const void* Struct, TMap< FString, TSharedPtr<FJsonValue> >& OutJsonAttributes, int64 CheckFlags = 0, int64 SkipFlags = 0, const CustomExportCallback* ExportCb = nullptr, EJsonObjectConversionFlags ConversionFlags = EJsonObjectConversionFlags::None)"
  },
  {
    "label": "UPropertyToJsonValue()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FJsonValue>)",
    "insertText": "UPropertyToJsonValue(FProperty* Property, const void* Value, int64 CheckFlags = 0, int64 SkipFlags = 0, const CustomExportCallback* ExportCb = nullptr, FProperty* OuterProperty = nullptr, EJsonObjectConversionFlags ConversionFlags = EJsonObjectConversionFlags::None)"
  },
  {
    "label": "JsonObjectToUStruct()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "JsonObjectToUStruct(const TSharedRef<FJsonObject>& JsonObject, const UStruct* StructDefinition, void* OutStruct, int64 CheckFlags = 0, int64 SkipFlags = 0, const bool bStrictMode = false, FText* OutFailReason = nullptr, const CustomImportCallback* ImportCb = nullptr)"
  },
  {
    "label": "JsonAttributesToUStruct()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "JsonAttributesToUStruct(const TMap< FString, TSharedPtr<FJsonValue> >& JsonAttributes, const UStruct* StructDefinition, void* OutStruct, int64 CheckFlags = 0, int64 SkipFlags = 0, const bool bStrictMode = false, FText* OutFailReason = nullptr, const CustomImportCallback* ImportCb = nullptr)"
  },
  {
    "label": "JsonValueToUProperty()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "JsonValueToUProperty(const TSharedPtr<FJsonValue>& JsonValue, FProperty* Property, void* OutValue, int64 CheckFlags = 0, int64 SkipFlags = 0, const bool bStrictMode = false, FText* OutFailReason = nullptr, const CustomImportCallback* ImportCb = nullptr)"
  },
  {
    "label": "ParseTextArgumentsFromJson()",
    "kind": "Method",
    "detail": "Function (FFormatNamedArguments)",
    "insertText": "ParseTextArgumentsFromJson(const TSharedPtr<const FJsonObject>& JsonObject)"
  }
]