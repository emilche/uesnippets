[
  {
    "label": "IsHeapInternal()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Algo / Impl / BinaryHeap . h \" # include \" Templates / IdentityFunctor . h \" # include \" Templates / Invoke . h \" # include \" Templates / Less . h \" # include \" Templates / UnrealTemplate . h \" namespace AlgoImpl { template<RangeValueType,IndexType,ProjectionType,PredicateType> bool)",
    "insertText": "IsHeapInternal(RangeValueType* Heap, IndexType Num, ProjectionType Projection, PredicateType Predicate)"
  },
  {
    "label": "HeapGetParentIndex()",
    "kind": "Method",
    "detail": "Function (IndexType ParentIndex =)",
    "insertText": "HeapGetParentIndex(Index)"
  },
  {
    "label": "IsHeap()",
    "kind": "Method",
    "detail": "Function (} template<RangeType,PredicateType> bool)",
    "insertText": "IsHeap(RangeType& Range, PredicateType Predicate)"
  },
  {
    "label": "IsHeapBy()",
    "kind": "Method",
    "detail": "Function (} template<RangeType,ProjectionType> bool)",
    "insertText": "IsHeapBy(RangeType& Range, ProjectionType Projection)"
  },
  {
    "label": "IsHeapBy()",
    "kind": "Method",
    "detail": "Function (} template<RangeType,ProjectionType,PredicateType> bool)",
    "insertText": "IsHeapBy(RangeType& Range, ProjectionType Projection, PredicateType Predicate)"
  }
]