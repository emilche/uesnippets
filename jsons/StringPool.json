[
  {
    "label": "PooledStringPtr",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PooledStringPtr"
  },
  {
    "label": "StringPool",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "StringPool"
  },
  {
    "label": "PooledString",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "PooledString"
  },
  {
    "label": "PooledString()",
    "kind": "Method",
    "detail": "Function (# ifndef LLVM_SUPPORT_STRINGPOOL_H # define LLVM_SUPPORT_STRINGPOOL_H # include \" llvm / ADT / StringMap . h \" # include<cassert> namespace llvm { class PooledStringPtr ; class StringPool { struct PooledString { StringPool* Pool ; unsigned Refcount ; public :)",
    "insertText": "PooledString() : Pool(nullptr), Refcount(0)"
  },
  {
    "label": "StringPool()",
    "kind": "Method",
    "detail": "Function (} } ; class PooledStringPtr ; typedef StringMap<PooledString> table_t ; typedef StringMapEntry<PooledString> entry_t ; table_t InternTable ; public :)",
    "insertText": "StringPool()"
  },
  {
    "label": "intern()",
    "kind": "Method",
    "detail": "Function (PooledStringPtr)",
    "insertText": "intern(StringRef Str)"
  },
  {
    "label": "empty()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "empty()"
  },
  {
    "label": "PooledStringPtr()",
    "kind": "Method",
    "detail": "Function (} } ; class PooledStringPtr { typedef StringPool::entry_t entry_t ; entry_t* S ; public :)",
    "insertText": "PooledStringPtr() : S(nullptr)"
  },
  {
    "label": "PooledStringPtr()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "PooledStringPtr(entry_t *E) : S(E)"
  },
  {
    "label": "PooledStringPtr()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "PooledStringPtr(const PooledStringPtr &That) : S(That.S)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} PooledStringPtr&)",
    "insertText": "operator(const PooledStringPtr &That)"
  },
  {
    "label": "clear()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "clear()"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (S = That . S ;)",
    "insertText": "if(S) ++S->getValue()"
  },
  {
    "label": "getValue()",
    "kind": "Method",
    "detail": "Function (S ->)",
    "insertText": "getValue().Pool->InternTable.remove(S)"
  },
  {
    "label": "Destroy()",
    "kind": "Method",
    "detail": "Function (S ->)",
    "insertText": "Destroy()"
  },
  {
    "label": "PooledStringPtr()",
    "kind": "Method",
    "detail": "Function (} S = nullptr ; } ~)",
    "insertText": "PooledStringPtr()"
  },
  {
    "label": "begin()",
    "kind": "Method",
    "detail": "Function (} const char*)",
    "insertText": "begin()"
  },
  {
    "label": "assert()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "assert(*this && \"Attempt to dereference empty PooledStringPtr!\")"
  },
  {
    "label": "end()",
    "kind": "Method",
    "detail": "Function (} const char*)",
    "insertText": "end()"
  },
  {
    "label": "size()",
    "kind": "Method",
    "detail": "Function (} unsigned)",
    "insertText": "size()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} const char*)",
    "insertText": "operator()"
  },
  {
    "label": "bool()",
    "kind": "Method",
    "detail": "Function (} operator)",
    "insertText": "bool()"
  }
]