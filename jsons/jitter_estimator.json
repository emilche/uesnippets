[
  {
    "label": "Clock",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Clock"
  },
  {
    "label": "JitterEstimator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "JitterEstimator"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "for"
  },
  {
    "label": "Config",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Config"
  },
  {
    "label": "ParseAndValidate()",
    "kind": "Method",
    "detail": "Function (Config)",
    "insertText": "ParseAndValidate(absl::string_view field_trial)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "UpdateEstimate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateEstimate(TimeDelta frame_delay, DataSize frame_size)"
  },
  {
    "label": "GetJitterEstimate()",
    "kind": "Method",
    "detail": "Function (TimeDelta)",
    "insertText": "GetJitterEstimate(double rtt_multiplier,\n                              absl::optional<TimeDelta> rtt_mult_add_cap)"
  },
  {
    "label": "FrameNacked()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FrameNacked()"
  },
  {
    "label": "UpdateRtt()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateRtt(TimeDelta rtt)"
  },
  {
    "label": "EstimateRandomJitter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EstimateRandomJitter(double d_dT)"
  },
  {
    "label": "CalculateEstimate()",
    "kind": "Method",
    "detail": "Function (TimeDelta)",
    "insertText": "CalculateEstimate()"
  },
  {
    "label": "PostProcessEstimate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostProcessEstimate()"
  }
]