[
  {
    "label": "__volatile__()",
    "kind": "Method",
    "detail": "Function (__asm__)",
    "insertText": "__volatile__(/* out = dct_const_round_shift(dc *  cospi_16_64)"
  },
  {
    "label": "vpx_idct32_cols_add_blk_dspr2()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vpx_idct32_cols_add_blk_dspr2(int16_t *input, uint8_t *dest, int stride)"
  },
  {
    "label": "vpx_idct4_rows_dspr2()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vpx_idct4_rows_dspr2(const int16_t *input, int16_t *output)"
  },
  {
    "label": "vpx_idct4_columns_add_blk_dspr2()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vpx_idct4_columns_add_blk_dspr2(int16_t *input, uint8_t *dest, int stride)"
  },
  {
    "label": "iadst4_dspr2()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "iadst4_dspr2(const int16_t *input, int16_t *output)"
  },
  {
    "label": "idct8_rows_dspr2()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "idct8_rows_dspr2(const int16_t *input, int16_t *output, uint32_t no_rows)"
  },
  {
    "label": "idct8_columns_add_blk_dspr2()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "idct8_columns_add_blk_dspr2(int16_t *input, uint8_t *dest, int stride)"
  },
  {
    "label": "iadst8_dspr2()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "iadst8_dspr2(const int16_t *input, int16_t *output)"
  },
  {
    "label": "idct16_rows_dspr2()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "idct16_rows_dspr2(const int16_t *input, int16_t *output, uint32_t no_rows)"
  },
  {
    "label": "idct16_cols_add_blk_dspr2()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "idct16_cols_add_blk_dspr2(int16_t *input, uint8_t *dest, int stride)"
  },
  {
    "label": "iadst16_dspr2()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "iadst16_dspr2(const int16_t *input, int16_t *output)"
  }
]