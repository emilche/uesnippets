[
  {
    "label": "DCT_CONST_ROUND_SHIFT_TWICE_COSPI_16_64()",
    "kind": "Method",
    "detail": "Function (# ifndef VPX_VPX_DSP_MIPS_INV_TXFM_DSPR2_H_ # define VPX_VPX_DSP_MIPS_INV_TXFM_DSPR2_H_ # include<assert . h> # include \" . / vpx_config . h \" # include \" vpx / vpx_integer . h \" # include \" vpx_dsp / inv_txfm . h \" # include \" vpx_dsp / mips / common_dspr2 . h \" # ifdef __cplusplus \" C \" { # endif # if HAVE_DSPR2 # define)",
    "insertText": "DCT_CONST_ROUND_SHIFT_TWICE_COSPI_16_64(input) \\ ({ \\ int32_t tmp, out; \\ int dct_cost_rounding = DCT_CONST_ROUNDING; \\ int in = input; \\ \\ __asm__ __volatile__( \\ \"mtlo %[dct_cost_rounding], $ac1 \" \\ \" \\n\\t\" \\ \"mthi $zero, $ac1 \" \\ \" \\n\\t\" \\ \"madd $ac1, %[in], \" \\ \"%[cospi_16_64] \\n\\t\" \\ \"extp %[tmp], $ac1, \" \\ \"31 \\n\\t\" \\ \\ \\ \"mtlo %[dct_cost_rounding], $ac2 \" \\ \" \\n\\t\" \\ \"mthi $zero, $ac2 \" \\ \" \\n\\t\" \\ \"madd $ac2, %[tmp], \" \\ \"%[cospi_16_64] \\n\\t\" \\ \"extp %[out], $ac2, \" \\ \"31 \\n\\t\" \\ \\ : [tmp] \"=&r\"(tmp), [out] \"=r\"(out) \\ : [in] \"r\"(in), \\ [dct_cost_rounding] \"r\"(dct_cost_rounding), \\ [cospi_16_64] \"r\"(cospi_16_64)); \\ out; \\ }) void vpx_idct32_cols_add_blk_dspr2(int16_t *input, uint8_t *dest, int stride)"
  },
  {
    "label": "vpx_idct4_rows_dspr2()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vpx_idct4_rows_dspr2(const int16_t *input, int16_t *output)"
  },
  {
    "label": "vpx_idct4_columns_add_blk_dspr2()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vpx_idct4_columns_add_blk_dspr2(int16_t *input, uint8_t *dest, int stride)"
  },
  {
    "label": "iadst4_dspr2()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "iadst4_dspr2(const int16_t *input, int16_t *output)"
  },
  {
    "label": "idct8_rows_dspr2()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "idct8_rows_dspr2(const int16_t *input, int16_t *output, uint32_t no_rows)"
  },
  {
    "label": "idct8_columns_add_blk_dspr2()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "idct8_columns_add_blk_dspr2(int16_t *input, uint8_t *dest, int stride)"
  },
  {
    "label": "iadst8_dspr2()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "iadst8_dspr2(const int16_t *input, int16_t *output)"
  },
  {
    "label": "idct16_rows_dspr2()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "idct16_rows_dspr2(const int16_t *input, int16_t *output, uint32_t no_rows)"
  },
  {
    "label": "idct16_cols_add_blk_dspr2()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "idct16_cols_add_blk_dspr2(int16_t *input, uint8_t *dest, int stride)"
  },
  {
    "label": "iadst16_dspr2()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "iadst16_dspr2(const int16_t *input, int16_t *output)"
  }
]