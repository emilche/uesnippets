[
  {
    "label": "FilePath",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FilePath"
  },
  {
    "label": "Time",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Time"
  },
  {
    "label": "TimeDelta",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TimeDelta"
  },
  {
    "label": "UnguessableToken",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UnguessableToken"
  },
  {
    "label": "Int64ToValue()",
    "kind": "Method",
    "detail": "Function (# ifndef BASE_JSON_VALUES_UTIL_H_ # define BASE_JSON_VALUES_UTIL_H_ # include \" base / base_export . h \" # include \" base / values . h \" # include \" third_party / abseil - cpp / absl / types / optional . h \" namespace base { class FilePath ; class Time ; class TimeDelta ; class UnguessableToken ; BASE_EXPORT Value)",
    "insertText": "Int64ToValue(int64_t integer)"
  },
  {
    "label": "ValueToInt64()",
    "kind": "Method",
    "detail": "Function (BASE_EXPORT absl::optional<int64_t>)",
    "insertText": "ValueToInt64(const Value* value)"
  },
  {
    "label": "ValueToInt64()",
    "kind": "Method",
    "detail": "Function (BASE_EXPORT absl::optional<int64_t>)",
    "insertText": "ValueToInt64(const Value& value)"
  },
  {
    "label": "TimeDeltaToValue()",
    "kind": "Method",
    "detail": "Function (BASE_EXPORT Value)",
    "insertText": "TimeDeltaToValue(TimeDelta time_delta)"
  },
  {
    "label": "ValueToTimeDelta()",
    "kind": "Method",
    "detail": "Function (BASE_EXPORT absl::optional<TimeDelta>)",
    "insertText": "ValueToTimeDelta(const Value* value)"
  },
  {
    "label": "ValueToTimeDelta()",
    "kind": "Method",
    "detail": "Function (BASE_EXPORT absl::optional<TimeDelta>)",
    "insertText": "ValueToTimeDelta(const Value& value)"
  },
  {
    "label": "TimeToValue()",
    "kind": "Method",
    "detail": "Function (BASE_EXPORT Value)",
    "insertText": "TimeToValue(Time time)"
  },
  {
    "label": "ValueToTime()",
    "kind": "Method",
    "detail": "Function (BASE_EXPORT absl::optional<Time>)",
    "insertText": "ValueToTime(const Value* value)"
  },
  {
    "label": "ValueToTime()",
    "kind": "Method",
    "detail": "Function (BASE_EXPORT absl::optional<Time>)",
    "insertText": "ValueToTime(const Value& value)"
  },
  {
    "label": "FilePathToValue()",
    "kind": "Method",
    "detail": "Function (BASE_EXPORT Value)",
    "insertText": "FilePathToValue(FilePath file_path)"
  },
  {
    "label": "ValueToFilePath()",
    "kind": "Method",
    "detail": "Function (BASE_EXPORT absl::optional<FilePath>)",
    "insertText": "ValueToFilePath(const Value* value)"
  },
  {
    "label": "ValueToFilePath()",
    "kind": "Method",
    "detail": "Function (BASE_EXPORT absl::optional<FilePath>)",
    "insertText": "ValueToFilePath(const Value& value)"
  },
  {
    "label": "UnguessableTokenToValue()",
    "kind": "Method",
    "detail": "Function (BASE_EXPORT Value)",
    "insertText": "UnguessableTokenToValue(UnguessableToken token)"
  },
  {
    "label": "ValueToUnguessableToken()",
    "kind": "Method",
    "detail": "Function (BASE_EXPORT absl::optional<UnguessableToken>)",
    "insertText": "ValueToUnguessableToken(const Value* value)"
  },
  {
    "label": "ValueToUnguessableToken()",
    "kind": "Method",
    "detail": "Function (BASE_EXPORT absl::optional<UnguessableToken>)",
    "insertText": "ValueToUnguessableToken(const Value& value)"
  }
]