[
  {
    "label": "Aec3RenderQueueItemVerifier",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Aec3RenderQueueItemVerifier"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "EchoCanceller3",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "EchoCanceller3"
  },
  {
    "label": "EchoCanceller3Tester",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "EchoCanceller3Tester"
  },
  {
    "label": "RenderWriter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RenderWriter"
  },
  {
    "label": "AdjustConfig()",
    "kind": "Method",
    "detail": "Function (EchoCanceller3Config)",
    "insertText": "AdjustConfig(const EchoCanceller3Config& config)"
  },
  {
    "label": "EchoCanceller3()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "EchoCanceller3(\n      const EchoCanceller3Config& config,\n      const absl::optional<EchoCanceller3Config>& multichannel_config,\n      int sample_rate_hz,\n      size_t num_render_channels,\n      size_t num_capture_channels)"
  },
  {
    "label": "CreateDefaultMultichannelConfig()",
    "kind": "Method",
    "detail": "Function (EchoCanceller3Config)",
    "insertText": "CreateDefaultMultichannelConfig()"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Initialize()"
  },
  {
    "label": "SetBlockProcessorForTesting()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetBlockProcessorForTesting(\n      std::unique_ptr<BlockProcessor> block_processor)"
  },
  {
    "label": "EmptyRenderQueue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EmptyRenderQueue()"
  },
  {
    "label": "AnalyzeRender()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AnalyzeRender(const AudioBuffer& render)"
  },
  {
    "label": "AnalyzeCapture()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AnalyzeCapture(const AudioBuffer& capture)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (render_writer_)",
    "insertText": "RTC_GUARDED_BY(render_race_checker_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (linear_output_framer_)",
    "insertText": "RTC_GUARDED_BY(capture_race_checker_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (output_framer_)",
    "insertText": "RTC_GUARDED_BY(capture_race_checker_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (capture_blocker_)",
    "insertText": "RTC_GUARDED_BY(capture_race_checker_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (render_blocker_)",
    "insertText": "RTC_GUARDED_BY(capture_race_checker_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (block_processor_)",
    "insertText": "RTC_GUARDED_BY(capture_race_checker_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (render_queue_output_frame_)",
    "insertText": "RTC_GUARDED_BY(capture_race_checker_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (render_block_)",
    "insertText": "RTC_GUARDED_BY(capture_race_checker_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (linear_output_block_)",
    "insertText": "RTC_GUARDED_BY(capture_race_checker_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (capture_block_)",
    "insertText": "RTC_GUARDED_BY(capture_race_checker_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (render_sub_frame_view_)",
    "insertText": "RTC_GUARDED_BY(capture_race_checker_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (linear_output_sub_frame_view_)",
    "insertText": "RTC_GUARDED_BY(capture_race_checker_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (capture_sub_frame_view_)",
    "insertText": "RTC_GUARDED_BY(capture_race_checker_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (block_delay_buffer_)",
    "insertText": "RTC_GUARDED_BY(capture_race_checker_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (api_call_metrics_)",
    "insertText": "RTC_GUARDED_BY(capture_race_checker_)"
  }
]