[
  {
    "label": "SsrcGroup",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SsrcGroup"
  },
  {
    "label": "StreamParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "StreamParams"
  },
  {
    "label": "StreamSelector",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "StreamSelector"
  },
  {
    "label": "Condition",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Condition"
  },
  {
    "label": "SsrcGroup()",
    "kind": "Method",
    "detail": "Function (# ifndef MEDIA_BASE_STREAM_PARAMS_H_ # define MEDIA_BASE_STREAM_PARAMS_H_ # include<stddef . h> # include<cstdint> # include<string> # include<vector> # include \" absl / algorithm / container . h \" # include \" media / base / rid_description . h \" # include \" rtc_base / unique_id_generator . h \" namespace cricket { const char kFecSsrcGroupSemantics [ ] ; const char kFecFrSsrcGroupSemantics [ ] ; const char kFidSsrcGroupSemantics [ ] ; const char kSimSsrcGroupSemantics [ ] ; struct SsrcGroup {)",
    "insertText": "SsrcGroup(const std::string& usage, const std::vector<uint32_t>& ssrcs)"
  },
  {
    "label": "SsrcGroup()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SsrcGroup(const SsrcGroup&)"
  },
  {
    "label": "SsrcGroup()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SsrcGroup(SsrcGroup&&)"
  },
  {
    "label": "SsrcGroup()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "SsrcGroup()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (SsrcGroup&)",
    "insertText": "operator(const SsrcGroup&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (SsrcGroup&)",
    "insertText": "operator(SsrcGroup&&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "operator(const SsrcGroup& other)"
  },
  {
    "label": "has_semantics()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "has_semantics(const std::string& semantics)"
  },
  {
    "label": "ToString()",
    "kind": "Method",
    "detail": "Function (std::string)",
    "insertText": "ToString()"
  },
  {
    "label": "StreamParams()",
    "kind": "Method",
    "detail": "Function (std::string semantics ; std::vector<uint32_t> ssrcs ; } ; struct StreamParams {)",
    "insertText": "StreamParams()"
  },
  {
    "label": "StreamParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StreamParams(const StreamParams&)"
  },
  {
    "label": "StreamParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StreamParams(StreamParams&&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (StreamParams&)",
    "insertText": "operator(const StreamParams&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (StreamParams&)",
    "insertText": "operator(StreamParams&&)"
  },
  {
    "label": "CreateLegacy()",
    "kind": "Method",
    "detail": "Function (StreamParams)",
    "insertText": "CreateLegacy(uint32_t ssrc)"
  },
  {
    "label": "push_back()",
    "kind": "Method",
    "detail": "Function (StreamParams stream ; stream . ssrcs .)",
    "insertText": "push_back(ssrc)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "operator(const StreamParams& other)"
  },
  {
    "label": "first_ssrc()",
    "kind": "Method",
    "detail": "Function (} uint32_t)",
    "insertText": "first_ssrc()"
  },
  {
    "label": "has_ssrc()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "has_ssrc(uint32_t ssrc)"
  },
  {
    "label": "add_ssrc()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "add_ssrc(uint32_t ssrc)"
  },
  {
    "label": "has_ssrc_groups()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "has_ssrc_groups()"
  },
  {
    "label": "has_ssrc_group()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "has_ssrc_group(const std::string& semantics)"
  },
  {
    "label": "get_ssrc_group()",
    "kind": "Method",
    "detail": "Function (} const SsrcGroup*)",
    "insertText": "get_ssrc_group(const std::string& semantics)"
  },
  {
    "label": "GetFidSsrc()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "GetFidSsrc(uint32_t primary_ssrc, uint32_t* fid_ssrc)"
  },
  {
    "label": "AddFecFrSsrc()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "AddFecFrSsrc(uint32_t primary_ssrc, uint32_t fecfr_ssrc)"
  },
  {
    "label": "GetFecFrSsrc()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "GetFecFrSsrc(uint32_t primary_ssrc, uint32_t* fecfr_ssrc)"
  },
  {
    "label": "GenerateSsrcs()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "GenerateSsrcs(int num_layers, bool generate_fid, bool generate_fec_fr, rtc::UniqueRandomIdGenerator* ssrc_generator)"
  },
  {
    "label": "GetPrimarySsrcs()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetPrimarySsrcs(std::vector<uint32_t>* ssrcs)"
  },
  {
    "label": "GetFidSsrcs()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetFidSsrcs(const std::vector<uint32_t>& primary_ssrcs, std::vector<uint32_t>* fid_ssrcs)"
  },
  {
    "label": "stream_ids()",
    "kind": "Method",
    "detail": "Function (std::vector<std::string>)",
    "insertText": "stream_ids()"
  },
  {
    "label": "set_stream_ids()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "set_stream_ids(const std::vector<std::string>& stream_ids)"
  },
  {
    "label": "first_stream_id()",
    "kind": "Method",
    "detail": "Function (std::string)",
    "insertText": "first_stream_id()"
  },
  {
    "label": "has_rids()",
    "kind": "Method",
    "detail": "Function (std::string id ; std::vector<uint32_t> ssrcs ; std::vector<SsrcGroup> ssrc_groups ; std::string cname ; bool)",
    "insertText": "has_rids()"
  },
  {
    "label": "rids()",
    "kind": "Method",
    "detail": "Function (} const std::vector<RidDescription>&)",
    "insertText": "rids()"
  },
  {
    "label": "AddSecondarySsrc()",
    "kind": "Method",
    "detail": "Function (rids_ = rids ; } private : bool)",
    "insertText": "AddSecondarySsrc(const std::string& semantics, uint32_t primary_ssrc, uint32_t secondary_ssrc)"
  },
  {
    "label": "GetSecondarySsrc()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetSecondarySsrc(const std::string& semantics, uint32_t primary_ssrc, uint32_t* secondary_ssrc)"
  },
  {
    "label": "StreamSelector()",
    "kind": "Method",
    "detail": "Function (std::vector<std::string> stream_ids_ ; std::vector<RidDescription> rids_ ; } ; struct StreamSelector {)",
    "insertText": "StreamSelector(uint32_t ssrc) : ssrc(ssrc)"
  },
  {
    "label": "StreamSelector()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "StreamSelector(const std::string& streamid) : ssrc(0), streamid(streamid)"
  },
  {
    "label": "Matches()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "Matches(const StreamParams& stream)"
  },
  {
    "label": "GetStream()",
    "kind": "Method",
    "detail": "Function (} } uint32_t ssrc ; std::string streamid ; } ; typedef std::vector<StreamParams> StreamParamsVec ; template<class Condition> const StreamParams*)",
    "insertText": "GetStream(const StreamParamsVec& streams, Condition condition)"
  },
  {
    "label": "c_find_if()",
    "kind": "Method",
    "detail": "Function (auto found =)",
    "insertText": "c_find_if(streams, condition)"
  },
  {
    "label": "GetStream()",
    "kind": "Method",
    "detail": "Function (} template<class Condition> StreamParams*)",
    "insertText": "GetStream(StreamParamsVec& streams, Condition condition)"
  },
  {
    "label": "HasStreamWithNoSsrcs()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "HasStreamWithNoSsrcs(const StreamParamsVec& streams)"
  },
  {
    "label": "GetStreamBySsrc()",
    "kind": "Method",
    "detail": "Function (} const StreamParams*)",
    "insertText": "GetStreamBySsrc(const StreamParamsVec& streams, uint32_t ssrc)"
  },
  {
    "label": "GetStreamByIds()",
    "kind": "Method",
    "detail": "Function (} const StreamParams*)",
    "insertText": "GetStreamByIds(const StreamParamsVec& streams, const std::string& id)"
  },
  {
    "label": "GetStreamByIds()",
    "kind": "Method",
    "detail": "Function (} StreamParams*)",
    "insertText": "GetStreamByIds(StreamParamsVec& streams, const std::string& id)"
  },
  {
    "label": "GetStream()",
    "kind": "Method",
    "detail": "Function (} const StreamParams*)",
    "insertText": "GetStream(const StreamParamsVec& streams, const StreamSelector& selector)"
  },
  {
    "label": "RemoveStream()",
    "kind": "Method",
    "detail": "Function (} template<class Condition> bool)",
    "insertText": "RemoveStream(StreamParamsVec* streams, Condition condition)"
  },
  {
    "label": "iter()",
    "kind": "Method",
    "detail": "Function (auto)",
    "insertText": "iter(std::remove_if(streams->begin(), streams->end(), condition))"
  },
  {
    "label": "erase()",
    "kind": "Method",
    "detail": "Function (streams ->)",
    "insertText": "erase(iter, streams->end())"
  },
  {
    "label": "RemoveStreamBySsrc()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "RemoveStreamBySsrc(StreamParamsVec* streams, uint32_t ssrc)"
  },
  {
    "label": "RemoveStreamByIds()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "RemoveStreamByIds(StreamParamsVec* streams, const std::string& id)"
  }
]