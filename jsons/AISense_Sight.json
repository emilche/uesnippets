[
  {
    "label": "IAISightTargetInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IAISightTargetInterface"
  },
  {
    "label": "UAISense_Sight",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAISense_Sight"
  },
  {
    "label": "UAISenseConfig_Sight",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAISenseConfig_Sight"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "FAISightEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAISightEvent"
  },
  {
    "label": "FAISightTarget",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAISightTarget"
  },
  {
    "label": "FAISightQuery",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAISightQuery"
  },
  {
    "label": "FSortPredicate",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSortPredicate"
  },
  {
    "label": "FAISightQueryID",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAISightQueryID"
  },
  {
    "label": "UAISense_Sight",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAISense_Sight"
  },
  {
    "label": "FDigestedSightProperties",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDigestedSightProperties"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FQueriesOperationPostProcess",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "FQueriesOperationPostProcess"
  },
  {
    "label": "FAISightTarget()",
    "kind": "Method",
    "detail": "Function (AIMODULE_API)",
    "insertText": "FAISightTarget(AActor* InTarget = NULL, FGenericTeamId InTeamId = FGenericTeamId::NoTeam)"
  },
  {
    "label": "RegisterEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterEvent(const FAISightEvent& Event)"
  },
  {
    "label": "OnPendingCanBeSeenQueryProcessed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPendingCanBeSeenQueryProcessed(const FAISightQueryID& QueryID, const bool bIsVisible, const float StimulusStrength, const FVector& SeenLocation, const TOptional<int32>& UserData)"
  },
  {
    "label": "OnPendingTraceQueryProcessed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPendingTraceQueryProcessed(const FTraceHandle& TraceHandle, FTraceDatum& TraceDatum)"
  },
  {
    "label": "OnPendingQueryProcessed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPendingQueryProcessed(const int32 SightQueryIndex, const bool bIsVisible, const float StimulusStrength, const FVector& SeenLocation, const TOptional<int32>& UserData, const TOptional<AActor*> InTargetActor = NullOpt)"
  },
  {
    "label": "OnNewListenerImpl()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnNewListenerImpl(const FPerceptionListener& NewListener)"
  },
  {
    "label": "OnListenerUpdateImpl()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnListenerUpdateImpl(const FPerceptionListener& UpdatedListener)"
  },
  {
    "label": "OnListenerRemovedImpl()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnListenerRemovedImpl(const FPerceptionListener& RemovedListener)"
  }
]