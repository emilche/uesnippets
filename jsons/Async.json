[
  {
    "label": "async_job_st",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "async_job_st"
  },
  {
    "label": "async_wait_ctx_st",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "async_wait_ctx_st"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# include<stdlib . h> # ifndef HEADER_ASYNC_H # define HEADER_ASYNC_H # if)",
    "insertText": "defined(_WIN32) # if defined(BASETYPES) || defined(_WINDEF_H)"
  },
  {
    "label": "ASYNC_init_thread()",
    "kind": "Method",
    "detail": "Function (# endif typedef struct async_job_st ASYNC_JOB ; typedef struct async_wait_ctx_st ASYNC_WAIT_CTX ; # define ASYNC_ERR 0 # define ASYNC_NO_JOBS 1 # define ASYNC_PAUSE 2 # define ASYNC_FINISH 3 int)",
    "insertText": "ASYNC_init_thread(size_t max_size, size_t init_size)"
  },
  {
    "label": "ASYNC_cleanup_thread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ASYNC_cleanup_thread(void)"
  },
  {
    "label": "ASYNC_WAIT_CTX_new()",
    "kind": "Method",
    "detail": "Function (# ifdef OSSL_ASYNC_FD ASYNC_WAIT_CTX*)",
    "insertText": "ASYNC_WAIT_CTX_new(void)"
  },
  {
    "label": "ASYNC_WAIT_CTX_free()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ASYNC_WAIT_CTX_free(ASYNC_WAIT_CTX *ctx)"
  },
  {
    "label": "ASYNC_WAIT_CTX_set_wait_fd()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ASYNC_WAIT_CTX_set_wait_fd(ASYNC_WAIT_CTX *ctx, const void *key, OSSL_ASYNC_FD fd, void *custom_data, void (*cleanup)(ASYNC_WAIT_CTX *, const void *, OSSL_ASYNC_FD, void *))"
  },
  {
    "label": "ASYNC_WAIT_CTX_get_fd()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ASYNC_WAIT_CTX_get_fd(ASYNC_WAIT_CTX *ctx, const void *key, OSSL_ASYNC_FD *fd, void **custom_data)"
  },
  {
    "label": "ASYNC_WAIT_CTX_get_all_fds()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ASYNC_WAIT_CTX_get_all_fds(ASYNC_WAIT_CTX *ctx, OSSL_ASYNC_FD *fd, size_t *numfds)"
  },
  {
    "label": "ASYNC_WAIT_CTX_get_changed_fds()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ASYNC_WAIT_CTX_get_changed_fds(ASYNC_WAIT_CTX *ctx, OSSL_ASYNC_FD *addfd, size_t *numaddfds, OSSL_ASYNC_FD *delfd, size_t *numdelfds)"
  },
  {
    "label": "ASYNC_WAIT_CTX_clear_fd()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ASYNC_WAIT_CTX_clear_fd(ASYNC_WAIT_CTX *ctx, const void *key)"
  },
  {
    "label": "ASYNC_is_capable()",
    "kind": "Method",
    "detail": "Function (# endif int)",
    "insertText": "ASYNC_is_capable(void)"
  },
  {
    "label": "ASYNC_start_job()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ASYNC_start_job(ASYNC_JOB **job, ASYNC_WAIT_CTX *ctx, int *ret, int (*func)(void *), void *args, size_t size)"
  },
  {
    "label": "ASYNC_pause_job()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ASYNC_pause_job(void)"
  },
  {
    "label": "ASYNC_get_current_job()",
    "kind": "Method",
    "detail": "Function (ASYNC_JOB*)",
    "insertText": "ASYNC_get_current_job(void)"
  },
  {
    "label": "ASYNC_get_wait_ctx()",
    "kind": "Method",
    "detail": "Function (ASYNC_WAIT_CTX*)",
    "insertText": "ASYNC_get_wait_ctx(ASYNC_JOB *job)"
  },
  {
    "label": "ASYNC_block_pause()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ASYNC_block_pause(void)"
  },
  {
    "label": "ASYNC_unblock_pause()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ASYNC_unblock_pause(void)"
  }
]