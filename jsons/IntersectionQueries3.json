[
  {
    "label": "TOrientedBox3",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TOrientedBox3"
  },
  {
    "label": "TCapsule3",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TCapsule3"
  },
  {
    "label": "THalfspace3",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "THalfspace3"
  },
  {
    "label": "TSphere3",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TSphere3"
  },
  {
    "label": "TestIntersection()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CapsuleTypes . h \" # include \" CoreMinimal . h \" # include \" HalfspaceTypes . h \" # include \" OrientedBoxTypes . h \" # include \" SphereTypes . h \" # include \" VectorTypes . h \" namespace UE { namespace Geometry { template<RealType> struct TOrientedBox3 ; template<T> struct TCapsule3 ; template<T> struct THalfspace3 ; template<T> struct TSphere3 ; template<RealType> bool)",
    "insertText": "TestIntersection(const THalfspace3<RealType>& Halfspace, const TSphere3<RealType>& Sphere)"
  },
  {
    "label": "TestIntersection()",
    "kind": "Method",
    "detail": "Function (template<RealType> bool)",
    "insertText": "TestIntersection(const THalfspace3<RealType>& Halfspace, const TCapsule3<RealType>& Capsule)"
  },
  {
    "label": "TestIntersection()",
    "kind": "Method",
    "detail": "Function (template<RealType> bool)",
    "insertText": "TestIntersection(const THalfspace3<RealType>& Halfspace, const TOrientedBox3<RealType>& Box)"
  }
]