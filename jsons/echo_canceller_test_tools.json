[
  {
    "label": "DelayBuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DelayBuffer"
  },
  {
    "label": "RandomizeSampleVector()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_AUDIO_PROCESSING_TEST_ECHO_CANCELLER_TEST_TOOLS_H_ # define MODULES_AUDIO_PROCESSING_TEST_ECHO_CANCELLER_TEST_TOOLS_H_ # include<algorithm> # include<vector> # include \" api / array_view . h \" # include \" rtc_base / random . h \" namespace webrtc { void)",
    "insertText": "RandomizeSampleVector(Random* random_generator, rtc::ArrayView<float> v)"
  },
  {
    "label": "RandomizeSampleVector()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RandomizeSampleVector(Random* random_generator, rtc::ArrayView<float> v, float amplitude)"
  },
  {
    "label": "DelayBuffer()",
    "kind": "Method",
    "detail": "Function (template<T> class DelayBuffer { public :)",
    "insertText": "DelayBuffer(size_t delay) : buffer_(delay)"
  },
  {
    "label": "DelayBuffer()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "DelayBuffer()"
  },
  {
    "label": "Delay()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Delay(rtc::ArrayView<const T> x, rtc::ArrayView<T> x_delayed)"
  }
]