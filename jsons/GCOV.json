[
  {
    "label": "GCOVFunction",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "GCOVFunction"
  },
  {
    "label": "GCOVBlock",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "GCOVBlock"
  },
  {
    "label": "FileInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FileInfo"
  },
  {
    "label": "GCOVVersion",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "GCOVVersion"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "for"
  },
  {
    "label": "GCOVOptions",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "GCOVOptions"
  },
  {
    "label": "GCOVBuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "GCOVBuffer"
  },
  {
    "label": "GCOVFile",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "GCOVFile"
  },
  {
    "label": "GCOVEdge",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "GCOVEdge"
  },
  {
    "label": "GCOVFunction",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "GCOVFunction"
  },
  {
    "label": "GCOVBlock",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "GCOVBlock"
  },
  {
    "label": "EdgeWeight",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "EdgeWeight"
  },
  {
    "label": "SortDstEdgesFunctor",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SortDstEdgesFunctor"
  },
  {
    "label": "FileInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FileInfo"
  },
  {
    "label": "LineData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "LineData"
  },
  {
    "label": "GCOVCoverage",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "GCOVCoverage"
  },
  {
    "label": "readGCNO()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "readGCNO(GCOVBuffer &Buffer)"
  },
  {
    "label": "readGCDA()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "readGCDA(GCOVBuffer &Buffer)"
  },
  {
    "label": "collectLineCounts()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "collectLineCounts(FileInfo &FI)"
  },
  {
    "label": "readGCNO()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "readGCNO(GCOVBuffer &Buffer, GCOV::GCOVVersion Version)"
  },
  {
    "label": "readGCDA()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "readGCDA(GCOVBuffer &Buffer, GCOV::GCOVVersion Version)"
  },
  {
    "label": "collectLineCounts()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "collectLineCounts(FileInfo &FI)"
  },
  {
    "label": "addCount()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "addCount(size_t DstEdgeNo, uint64_t N)"
  },
  {
    "label": "sortDstEdges()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "sortDstEdges()"
  },
  {
    "label": "collectLineCounts()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "collectLineCounts(FileInfo &FI)"
  },
  {
    "label": "print()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "print(raw_ostream &OS, StringRef MainFilename, StringRef GCNOFile,\n             StringRef GCDAFile)"
  },
  {
    "label": "getCoveragePath()",
    "kind": "Method",
    "detail": "Function (std::string)",
    "insertText": "getCoveragePath(StringRef Filename, StringRef MainFilename)"
  },
  {
    "label": "openCoveragePath()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<raw_ostream>)",
    "insertText": "openCoveragePath(StringRef CoveragePath)"
  },
  {
    "label": "printBranchInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "printBranchInfo(raw_ostream &OS, const GCOVBlock &Block,\n                       GCOVCoverage &Coverage, uint32_t &EdgeNo)"
  }
]