[
  {
    "label": "CVideoTransformFilter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CVideoTransformFilter"
  },
  {
    "label": "CVideoTransformFilter()",
    "kind": "Method",
    "detail": "Function (class CVideoTransformFilter : public CTransformFilter { public :)",
    "insertText": "CVideoTransformFilter(__in_opt LPCTSTR, __inout_opt LPUNKNOWN, REFCLSID clsid)"
  },
  {
    "label": "CVideoTransformFilter()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "CVideoTransformFilter()"
  },
  {
    "label": "EndFlush()",
    "kind": "Method",
    "detail": "Function (HRESULT)",
    "insertText": "EndFlush()"
  },
  {
    "label": "RegisterPerfId()",
    "kind": "Method",
    "detail": "Function (# ifdef PERF void)",
    "insertText": "RegisterPerfId()"
  },
  {
    "label": "MSR_REGISTER()",
    "kind": "Method",
    "detail": "Function (m_idSkip =)",
    "insertText": "MSR_REGISTER(TEXT(\"Video Transform Skip frame\"))"
  },
  {
    "label": "MSR_REGISTER()",
    "kind": "Method",
    "detail": "Function (m_idFrameType =)",
    "insertText": "MSR_REGISTER(TEXT(\"Video transform frame type\"))"
  },
  {
    "label": "MSR_REGISTER()",
    "kind": "Method",
    "detail": "Function (m_idLate =)",
    "insertText": "MSR_REGISTER(TEXT(\"Video Transform Lateness\"))"
  },
  {
    "label": "MSR_REGISTER()",
    "kind": "Method",
    "detail": "Function (m_idTimeTillKey =)",
    "insertText": "MSR_REGISTER(TEXT(\"Video Transform Estd. time to next key\"))"
  },
  {
    "label": "StartStreaming()",
    "kind": "Method",
    "detail": "Function (} # endif protected : int m_nKeyFramePeriod ; int m_nFramesSinceKeyFrame ; BOOL m_bSkipping ; # ifdef PERF int m_idFrameType ; int m_idSkip ; int m_idLate ; int m_idTimeTillKey ; # endif HRESULT)",
    "insertText": "StartStreaming()"
  },
  {
    "label": "AbortPlayback()",
    "kind": "Method",
    "detail": "Function (HRESULT)",
    "insertText": "AbortPlayback(HRESULT hr)"
  },
  {
    "label": "Receive()",
    "kind": "Method",
    "detail": "Function (HRESULT)",
    "insertText": "Receive(IMediaSample *pSample)"
  },
  {
    "label": "AlterQuality()",
    "kind": "Method",
    "detail": "Function (HRESULT)",
    "insertText": "AlterQuality(Quality q)"
  },
  {
    "label": "ShouldSkipFrame()",
    "kind": "Method",
    "detail": "Function (BOOL)",
    "insertText": "ShouldSkipFrame(IMediaSample * pIn)"
  }
]