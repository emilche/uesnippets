[
  {
    "label": "MyTracedClass",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MyTracedClass"
  },
  {
    "label": "MyData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MyData"
  },
  {
    "label": "DebugAnnotation",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DebugAnnotation"
  },
  {
    "label": "BASE_EXPORT",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "BASE_EXPORT"
  },
  {
    "label": "WriteDebugAnnotation()",
    "kind": "Method",
    "detail": "Function (BASE_EXPORT)",
    "insertText": "WriteDebugAnnotation(protos::pbzero::DebugAnnotation* annotation,\n                     ::base::TimeTicks)"
  },
  {
    "label": "WriteDebugAnnotation()",
    "kind": "Method",
    "detail": "Function (BASE_EXPORT)",
    "insertText": "WriteDebugAnnotation(protos::pbzero::DebugAnnotation* annotation, ::base::Time)"
  },
  {
    "label": "ConvertThreadId()",
    "kind": "Method",
    "detail": "Function (BASE_EXPORT)",
    "insertText": "ConvertThreadId(const ::base::PlatformThreadId& thread)"
  },
  {
    "label": "ConvertThreadId()",
    "kind": "Method",
    "detail": "Function (BASE_EXPORT)",
    "insertText": "ConvertThreadId(const int& thread)"
  },
  {
    "label": "ConvertTimestampToTraceTimeNs()",
    "kind": "Method",
    "detail": "Function (TraceTimestamp)",
    "insertText": "ConvertTimestampToTraceTimeNs(\n      const ::base::TimeTicks& ticks)"
  }
]