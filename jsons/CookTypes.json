[
  {
    "label": "FCbFieldView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCbFieldView"
  },
  {
    "label": "FCbWriter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCbWriter"
  },
  {
    "label": "ICookArtifactReader",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ICookArtifactReader"
  },
  {
    "label": "ITargetPlatform",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITargetPlatform"
  },
  {
    "label": "FWeakObjectPtr",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FWeakObjectPtr"
  },
  {
    "label": "FBuildDefinition",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBuildDefinition"
  },
  {
    "label": "FBeginCookConfigSettings",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBeginCookConfigSettings"
  },
  {
    "label": "FCookByTheBookOptions",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCookByTheBookOptions"
  },
  {
    "label": "FCookOnTheFlyOptions",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCookOnTheFlyOptions"
  },
  {
    "label": "FInitializeConfigSettings",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInitializeConfigSettings"
  },
  {
    "label": "FInstigator",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInstigator"
  },
  {
    "label": "TFastPointerSetKeyFuncs",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TFastPointerSetKeyFuncs"
  },
  {
    "label": "TFastPointerMapKeyFuncs",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TFastPointerMapKeyFuncs"
  },
  {
    "label": "TFastPointerMap",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TFastPointerMap"
  },
  {
    "label": "TFastPointerSet",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TFastPointerSet"
  },
  {
    "label": "FDeterminismManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDeterminismManager"
  },
  {
    "label": "FPackageData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPackageData"
  },
  {
    "label": "FPlatformData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPlatformData"
  },
  {
    "label": "FPackageDataSet",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPackageDataSet"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FCookerTimer",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCookerTimer"
  },
  {
    "label": "EForever",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EForever"
  },
  {
    "label": "ENoWait",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ENoWait"
  },
  {
    "label": "FTickStackData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTickStackData"
  },
  {
    "label": "ECookOnTheSideResult",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ECookOnTheSideResult"
  },
  {
    "label": "FCookSavePackageContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCookSavePackageContext"
  },
  {
    "label": "FBuildDefinitions",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBuildDefinitions"
  },
  {
    "label": "FPendingBuildData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPendingBuildData"
  },
  {
    "label": "FInitializeConfigSettings",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInitializeConfigSettings"
  },
  {
    "label": "FBeginCookConfigSettings",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBeginCookConfigSettings"
  },
  {
    "label": "FCookByTheBookOptions",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCookByTheBookOptions"
  },
  {
    "label": "FCookOnTheFlyOptions",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCookOnTheFlyOptions"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FDiscoveredPlatformSet",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDiscoveredPlatformSet"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "for"
  },
  {
    "label": "FBeginCookContextPlatform",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBeginCookContextPlatform"
  },
  {
    "label": "FBeginCookContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBeginCookContext"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "for"
  },
  {
    "label": "FBeginCookContextForWorkerPlatform",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBeginCookContextForWorkerPlatform"
  },
  {
    "label": "FBeginCookContextForWorker",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBeginCookContextForWorker"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "to"
  },
  {
    "label": "FOnScopeExit",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FOnScopeExit"
  },
  {
    "label": "FPackageReaderResults",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPackageReaderResults"
  },
  {
    "label": "FMultiPackageReaderResults",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMultiPackageReaderResults"
  },
  {
    "label": "LoadFromCompactBinary()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "LoadFromCompactBinary(FCbFieldView Field, UE::Cook::FBeginCookConfigSettings& OutValue)"
  },
  {
    "label": "LoadFromCompactBinary()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "LoadFromCompactBinary(FCbFieldView Field, UE::Cook::FCookByTheBookOptions& OutValue)"
  },
  {
    "label": "LoadFromCompactBinary()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "LoadFromCompactBinary(FCbFieldView Field, UE::Cook::FCookOnTheFlyOptions& OutValue)"
  },
  {
    "label": "LoadFromCompactBinary()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "LoadFromCompactBinary(FCbFieldView Field, UE::Cook::FInitializeConfigSettings& OutValue)"
  },
  {
    "label": "GetTypeHash()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetTypeHash(ImportantBits)"
  },
  {
    "label": "IsTerminalStateChange()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsTerminalStateChange(EStateChangeReason Reason)"
  },
  {
    "label": "ConvertToStateChangeReason()",
    "kind": "Method",
    "detail": "Function (EStateChangeReason)",
    "insertText": "ConvertToStateChangeReason(ESuppressCookReason Reason)"
  },
  {
    "label": "SetActionTimeSlice()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetActionTimeSlice(float InTimeSlice)"
  },
  {
    "label": "SetActionStartTime()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetActionStartTime()"
  },
  {
    "label": "SetActionStartTime()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetActionStartTime(double CurrentTimeSeconds)"
  },
  {
    "label": "InitializeTls()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeTls()"
  },
  {
    "label": "IsSchedulerThread()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsSchedulerThread()"
  },
  {
    "label": "SetIsSchedulerThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetIsSchedulerThread(bool bValue)"
  },
  {
    "label": "FBuildDefinitions()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FBuildDefinitions()"
  },
  {
    "label": "AddBuildDefinitionList()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddBuildDefinitionList(FName PackageName, const ITargetPlatform* TargetPlatform,\n\t\t\tTConstArrayView<UE::DerivedData::FBuildDefinition> BuildDefinitionList)"
  },
  {
    "label": "TryRemovePendingBuilds()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TryRemovePendingBuilds(FName PackageName)"
  },
  {
    "label": "Wait()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Wait()"
  },
  {
    "label": "Cancel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Cancel()"
  },
  {
    "label": "LoadLocal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LoadLocal(const FString& InOutputDirectoryOverride)"
  },
  {
    "label": "CopyFromLocal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CopyFromLocal(const UCookOnTheFlyServer& COTFS)"
  },
  {
    "label": "MoveToLocal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MoveToLocal(UCookOnTheFlyServer& COTFS)"
  },
  {
    "label": "MoveOrCopy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MoveOrCopy(SourceType&& Source, TargetType&& Target)"
  },
  {
    "label": "LoadLocal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LoadLocal(FBeginCookContext& BeginContext)"
  },
  {
    "label": "LoadNeverCookLocal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LoadNeverCookLocal(FBeginCookContext& BeginContext)"
  },
  {
    "label": "CopyFromLocal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CopyFromLocal(const UCookOnTheFlyServer& COTFS)"
  },
  {
    "label": "IsCookIgnoreTimeouts()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsCookIgnoreTimeouts()"
  },
  {
    "label": "GetCommandLineDelimiterChars()",
    "kind": "Method",
    "detail": "Function (TConstArrayView<TCHAR>)",
    "insertText": "GetCommandLineDelimiterChars()"
  },
  {
    "label": "LexTryParseString()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "LexTryParseString(FPlatformMemoryStats::EMemoryPressureStatus& OutValue, FStringView Text)"
  },
  {
    "label": "LexToString()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "LexToString(FPlatformMemoryStats::EMemoryPressureStatus Value)"
  },
  {
    "label": "FDiscoveredPlatformSet()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "FDiscoveredPlatformSet(TConstArrayView<const ITargetPlatform*> InPlatforms)"
  },
  {
    "label": "FDiscoveredPlatformSet()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "FDiscoveredPlatformSet(const TBitArray<>& InOrderedPlatformBits)"
  },
  {
    "label": "RemapTargetPlatforms()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemapTargetPlatforms(const TMap<ITargetPlatform*, ITargetPlatform*>& Remap)"
  },
  {
    "label": "OnRemoveSessionPlatform()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnRemoveSessionPlatform(const ITargetPlatform* Platform, int32 RemovedIndex)"
  },
  {
    "label": "OnPlatformAddedToSession()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPlatformAddedToSession(const ITargetPlatform* Platform)"
  },
  {
    "label": "ConvertFromBitfield()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConvertFromBitfield(TConstArrayView<const ITargetPlatform*> OrderedPlatforms)"
  },
  {
    "label": "ConvertToBitfield()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConvertToBitfield(TConstArrayView<const ITargetPlatform*> OrderedPlatforms)"
  },
  {
    "label": "DestructUnion()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestructUnion()"
  },
  {
    "label": "ConstructUnion()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConstructUnion()"
  },
  {
    "label": "WriteToCompactBinary()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WriteToCompactBinary(FCbWriter& Writer, const FDiscoveredPlatformSet& Value,\n\t\tTConstArrayView<const ITargetPlatform*> OrderedSessionPlatforms)"
  },
  {
    "label": "LoadFromCompactBinary()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "LoadFromCompactBinary(FCbFieldView Field, FDiscoveredPlatformSet& OutValue,\n\t\tTConstArrayView<const ITargetPlatform*> OrderedSessionPlatforms)"
  },
  {
    "label": "LoadFromCompactBinary()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "LoadFromCompactBinary(FCbFieldView Field, FBeginCookContextPlatform& Value)"
  },
  {
    "label": "Set()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Set(const FBeginCookContextPlatform& InContext)"
  },
  {
    "label": "LoadFromCompactBinary()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "LoadFromCompactBinary(FCbFieldView Field, FBeginCookContextForWorkerPlatform& Value)"
  },
  {
    "label": "Set()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Set(const FBeginCookContext& InContext)"
  },
  {
    "label": "LoadFromCompactBinary()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "LoadFromCompactBinary(FCbFieldView Field, FBeginCookContextForWorker& Value)"
  },
  {
    "label": "LogCookerMessage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LogCookerMessage(const FString& MessageText, EMessageSeverity::Type Severity)"
  },
  {
    "label": "GetSaveExportsAndImports()",
    "kind": "Method",
    "detail": "Function (FMultiPackageReaderResults)",
    "insertText": "GetSaveExportsAndImports(UPackage* Package, UObject* Asset, FSavePackageArgs SaveArgs)"
  }
]