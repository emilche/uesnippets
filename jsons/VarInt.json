[
  {
    "label": "FArchive",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FArchive"
  },
  {
    "label": "MeasureVarUInt()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" HAL / PlatformMath . h \" uint32)",
    "insertText": "MeasureVarUInt(const void* InData)"
  },
  {
    "label": "MeasureVarInt()",
    "kind": "Method",
    "detail": "Function (} uint32)",
    "insertText": "MeasureVarInt(const void* InData)"
  },
  {
    "label": "MeasureVarUInt()",
    "kind": "Method",
    "detail": "Function (} uint32)",
    "insertText": "MeasureVarUInt(uint32 InValue)"
  },
  {
    "label": "MeasureVarUInt()",
    "kind": "Method",
    "detail": "Function (} uint32)",
    "insertText": "MeasureVarUInt(uint64 InValue)"
  },
  {
    "label": "MeasureVarInt()",
    "kind": "Method",
    "detail": "Function (} uint32)",
    "insertText": "MeasureVarInt(int32 InValue)"
  },
  {
    "label": "MeasureVarInt()",
    "kind": "Method",
    "detail": "Function (} uint32)",
    "insertText": "MeasureVarInt(int64 InValue)"
  },
  {
    "label": "ReadVarUInt()",
    "kind": "Method",
    "detail": "Function (} uint64)",
    "insertText": "ReadVarUInt(const void* InData, uint32& OutByteCount)"
  },
  {
    "label": "MeasureVarUInt()",
    "kind": "Method",
    "detail": "Function (const uint32 ByteCount =)",
    "insertText": "MeasureVarUInt(InData)"
  },
  {
    "label": "uint8()",
    "kind": "Method",
    "detail": "Function (OutByteCount = ByteCount ; const uint8* InBytes = static_cast<const)",
    "insertText": "uint8(InData)"
  },
  {
    "label": "uint8()",
    "kind": "Method",
    "detail": "Function (uint64 Value =* InBytes + +&)",
    "insertText": "uint8(0xff >> ByteCount)"
  },
  {
    "label": "ReadVarUInt()",
    "kind": "Method",
    "detail": "Function (const uint64 Value =)",
    "insertText": "ReadVarUInt(InData, OutByteCount)"
  },
  {
    "label": "WriteVarUInt()",
    "kind": "Method",
    "detail": "Function (} uint32)",
    "insertText": "WriteVarUInt(uint32 InValue, void* OutData)"
  },
  {
    "label": "MeasureVarUInt()",
    "kind": "Method",
    "detail": "Function (const uint32 ByteCount =)",
    "insertText": "MeasureVarUInt(InValue)"
  },
  {
    "label": "uint8()",
    "kind": "Method",
    "detail": "Function (uint8* OutBytes = static_cast<)",
    "insertText": "uint8(OutData)"
  },
  {
    "label": "uint8()",
    "kind": "Method",
    "detail": "Function (InValue>> = 8 ; case 3 :* OutBytes - - =)",
    "insertText": "uint8(InValue)"
  },
  {
    "label": "uint8()",
    "kind": "Method",
    "detail": "Function (InValue>> = 8 ; default : break ; }* OutBytes =)",
    "insertText": "uint8(0xff << (9 - ByteCount)) | uint8(InValue)"
  },
  {
    "label": "uint32()",
    "kind": "Method",
    "detail": "Function (const uint32 Value =)",
    "insertText": "uint32((InValue >> 31) ^ (InValue << 1))"
  },
  {
    "label": "WriteVarInt()",
    "kind": "Method",
    "detail": "Function (} uint32)",
    "insertText": "WriteVarInt(int64 InValue, void* OutData)"
  },
  {
    "label": "uint64()",
    "kind": "Method",
    "detail": "Function (const uint64 Value =)",
    "insertText": "uint64((InValue >> 63) ^ (InValue << 1))"
  },
  {
    "label": "ReadVarIntFromArchive()",
    "kind": "Method",
    "detail": "Function (} class FArchive ; int64)",
    "insertText": "ReadVarIntFromArchive(FArchive& Ar)"
  },
  {
    "label": "WriteVarIntToArchive()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WriteVarIntToArchive(FArchive& Ar, int64 Value)"
  },
  {
    "label": "SerializeVarInt()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SerializeVarInt(FArchive& Ar, int64& Value)"
  },
  {
    "label": "ReadVarUIntFromArchive()",
    "kind": "Method",
    "detail": "Function (uint64)",
    "insertText": "ReadVarUIntFromArchive(FArchive& Ar)"
  },
  {
    "label": "WriteVarUIntToArchive()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WriteVarUIntToArchive(FArchive& Ar, uint64 Value)"
  },
  {
    "label": "SerializeVarUInt()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SerializeVarUInt(FArchive& Ar, uint64& Value)"
  }
]