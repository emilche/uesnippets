[
  {
    "label": "EProtocol",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EProtocol"
  },
  {
    "label": "EKnownEventUids",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "EKnownEventUids"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# pragma once namespace UE { namespace Trace { # if)",
    "insertText": "defined(TRACE_PRIVATE_PROTOCOL_4)"
  },
  {
    "label": "Max()",
    "kind": "Method",
    "detail": "Function (enum EProtocol : uint8 { Id = 4 } ; using Protocol3::EFieldType ; using Protocol3::FNewEventEvent ; using Protocol3::EEventFlags ; using Protocol3::FAuxHeader ; using Protocol3::FEventHeader ; using Protocol3::FEventHeaderSync ; struct EKnownEventUids { const uint16 Flag_TwoByteUid = 1<<0 ; const uint16 _UidShift = 1 ; enum : uint16 { NewEvent = 0,EnterScope,EnterScope_T,LeaveScope,LeaveScope_T,_WellKnownNum,} ; const uint16 User = _WellKnownNum ; const uint16)",
    "insertText": "Max(1 << (16 - _UidShift))"
  }
]