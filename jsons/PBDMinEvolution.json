[
  {
    "label": "FBasicCollisionDetector",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBasicCollisionDetector"
  },
  {
    "label": "FConstraintContainerSolver",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FConstraintContainerSolver"
  },
  {
    "label": "FPBDCollisionConstraints",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPBDCollisionConstraints"
  },
  {
    "label": "FSimpleConstraintRule",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSimpleConstraintRule"
  },
  {
    "label": "FPBDRigidsSOAs",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPBDRigidsSOAs"
  },
  {
    "label": "FPBDMinEvolution",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPBDMinEvolution"
  },
  {
    "label": "FPBDMinEvolution()",
    "kind": "Method",
    "detail": "Function (CHAOS_API)",
    "insertText": "FPBDMinEvolution(FRigidParticleSOAs& InParticles, TArrayCollectionArray<FVec3>& InPrevX, TArrayCollectionArray<FRotation3>& InPrevR, FCollisionDetector& InCollisionDetector)"
  },
  {
    "label": "AddConstraintContainer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddConstraintContainer(FPBDConstraintContainer& InContainer, const int32 Priority = 0)"
  },
  {
    "label": "SetConstraintContainerPriority()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetConstraintContainerPriority(const int32 ContainerId, const int32 Priority)"
  },
  {
    "label": "Advance()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Advance(const FReal StepDt, const int32 NumSteps, const FReal RewindDt)"
  },
  {
    "label": "AdvanceOneTimeStep()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AdvanceOneTimeStep(const FReal Dt, const FReal StepFraction)"
  },
  {
    "label": "PrepareTick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PrepareTick()"
  },
  {
    "label": "UnprepareTick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnprepareTick()"
  },
  {
    "label": "Rewind()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Rewind(FReal Dt, FReal RewindDt)"
  },
  {
    "label": "Integrate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Integrate(FReal Dt)"
  },
  {
    "label": "ApplyKinematicTargets()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyKinematicTargets(FReal Dt, FReal StepFraction)"
  },
  {
    "label": "DetectCollisions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DetectCollisions(FReal Dt)"
  },
  {
    "label": "GatherInput()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GatherInput(FReal Dt)"
  },
  {
    "label": "ScatterOutput()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ScatterOutput(FReal Dt)"
  },
  {
    "label": "ApplyConstraintsPhase1()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyConstraintsPhase1(FReal Dt)"
  },
  {
    "label": "ApplyConstraintsPhase2()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyConstraintsPhase2(FReal Dt)"
  },
  {
    "label": "ApplyConstraintsPhase3()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyConstraintsPhase3(FReal Dt)"
  }
]