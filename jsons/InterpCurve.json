[
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "FInterpCurve",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FInterpCurve"
  },
  {
    "label": "properties",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "properties"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "Name",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Name"
  },
  {
    "label": "TIsBitwiseConstructible",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TIsBitwiseConstructible"
  },
  {
    "label": "TIsBitwiseConstructible",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TIsBitwiseConstructible"
  },
  {
    "label": "AddPoint()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "AddPoint( const float InVal, const T &OutVal )"
  },
  {
    "label": "MovePoint()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "MovePoint( int32 PointIndex, float NewInVal )"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "SetLoopKey()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetLoopKey( float InLoopKey )"
  },
  {
    "label": "ClearLoopKey()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearLoopKey()"
  },
  {
    "label": "AutoSetTangents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AutoSetTangents(float Tension = 0.0f, bool bStationaryEndpoints = true)"
  },
  {
    "label": "T()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "T(ForceInit)"
  },
  {
    "label": "T()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "T(ForceInit)"
  },
  {
    "label": "T()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "T(ForceInit)"
  },
  {
    "label": "T()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "T(ForceInit)"
  },
  {
    "label": "T()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "T(ForceInit)"
  },
  {
    "label": "FindNearest()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FindNearest(PointInSpace, OutDistanceSq, OutSegment)"
  },
  {
    "label": "FindNearest()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FindNearest(PointInSpace, OutDistanceSq, OutSegment)"
  },
  {
    "label": "FindNearest()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FindNearest(PointInSpace, OutDistanceSq, OutSegment)"
  },
  {
    "label": "FindNearestOnSegment()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FindNearestOnSegment(PointInSpace, PtIdx, OutSquaredDistance)"
  }
]