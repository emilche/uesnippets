[
  {
    "label": "AdapterType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "AdapterType"
  },
  {
    "label": "AdapterTypeToString()",
    "kind": "Method",
    "detail": "Function (# ifndef RTC_BASE_NETWORK_CONSTANTS_H_ # define RTC_BASE_NETWORK_CONSTANTS_H_ # include<stdint . h> # include<string> namespace rtc { uint16_t kNetworkCostMax = 9 9 9 ; uint16_t kNetworkCostCellular2G = 9 8 0 ; uint16_t kNetworkCostCellular3G = 9 1 0 ; uint16_t kNetworkCostCellular = 9 0 0 ; uint16_t kNetworkCostCellular4G = 5 0 0 ; uint16_t kNetworkCostCellular5G = 2 5 0 ; uint16_t kNetworkCostUnknown = 5 0 ; uint16_t kNetworkCostLow = 1 0 ; uint16_t kNetworkCostMin = 0 ; uint16_t kNetworkCostVpn = 1 ; uint16_t kNetworkCostHigh = kNetworkCostCellular ; enum AdapterType { ADAPTER_TYPE_UNKNOWN = 0,ADAPTER_TYPE_ETHERNET = 1<<0,ADAPTER_TYPE_WIFI = 1<<1,ADAPTER_TYPE_CELLULAR = 1<<2,ADAPTER_TYPE_VPN = 1<<3,ADAPTER_TYPE_LOOPBACK = 1<<4,ADAPTER_TYPE_ANY = 1<<5,ADAPTER_TYPE_CELLULAR_2G = 1<<6,ADAPTER_TYPE_CELLULAR_3G = 1<<7,ADAPTER_TYPE_CELLULAR_4G = 1<<8,ADAPTER_TYPE_CELLULAR_5G = 1<<9 } ; std::string)",
    "insertText": "AdapterTypeToString(AdapterType type)"
  }
]