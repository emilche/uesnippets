[
  {
    "label": "Align()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" Templates / IsIntegral . h \" # include \" Templates / IsPointer . h \" template<T> T)",
    "insertText": "Align(T Val, uint64 Alignment)"
  },
  {
    "label": "AlignDown()",
    "kind": "Method",
    "detail": "Function (} template<T> T)",
    "insertText": "AlignDown(T Val, uint64 Alignment)"
  },
  {
    "label": "IsAligned()",
    "kind": "Method",
    "detail": "Function (} template<T> bool)",
    "insertText": "IsAligned(T Val, uint64 Alignment)"
  },
  {
    "label": "AlignArbitrary()",
    "kind": "Method",
    "detail": "Function (} template<T> T)",
    "insertText": "AlignArbitrary(T Val, uint64 Alignment)"
  }
]