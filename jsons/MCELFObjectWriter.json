[
  {
    "label": "MCAssembler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MCAssembler"
  },
  {
    "label": "MCFixup",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MCFixup"
  },
  {
    "label": "MCFragment",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MCFragment"
  },
  {
    "label": "MCObjectWriter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MCObjectWriter"
  },
  {
    "label": "MCSymbol",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MCSymbol"
  },
  {
    "label": "MCSymbolELF",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MCSymbolELF"
  },
  {
    "label": "MCValue",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MCValue"
  },
  {
    "label": "raw_pwrite_stream",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "raw_pwrite_stream"
  },
  {
    "label": "ELFRelocationEntry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ELFRelocationEntry"
  },
  {
    "label": "MCELFObjectTargetWriter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MCELFObjectTargetWriter"
  },
  {
    "label": "ELFRelocationEntry()",
    "kind": "Method",
    "detail": "Function (# ifndef LLVM_MC_MCELFOBJECTWRITER_H # define LLVM_MC_MCELFOBJECTWRITER_H # include \" llvm / ADT / Triple . h \" # include \" llvm / Support / DataTypes . h \" # include \" llvm / Support / ELF . h \" # include<vector> namespace llvm { class MCAssembler ; class MCFixup ; class MCFragment ; class MCObjectWriter ; class MCSymbol ; class MCSymbolELF ; class MCValue ; class raw_pwrite_stream ; struct ELFRelocationEntry { uint64_t Offset ; const MCSymbolELF* Symbol ; unsigned Type ; uint64_t Addend ;)",
    "insertText": "ELFRelocationEntry(uint64_t Offset, const MCSymbolELF *Symbol, unsigned Type, uint64_t Addend) : Offset(Offset), Symbol(Symbol), Type(Type), Addend(Addend)"
  },
  {
    "label": "MCELFObjectTargetWriter()",
    "kind": "Method",
    "detail": "Function (} } ; class MCELFObjectTargetWriter { const uint8_t OSABI ; const uint16_t EMachine ; const unsigned HasRelocationAddend : 1 ; const unsigned Is64Bit : 1 ; const unsigned IsN64 : 1 ; protected :)",
    "insertText": "MCELFObjectTargetWriter(bool Is64Bit_, uint8_t OSABI_, uint16_t EMachine_, bool HasRelocationAddend, bool IsN64=false)"
  },
  {
    "label": "getOSABI()",
    "kind": "Method",
    "detail": "Function (public : uint8_t)",
    "insertText": "getOSABI(Triple::OSType OSType)"
  },
  {
    "label": "GetRelocType()",
    "kind": "Method",
    "detail": "Function (} unsigned)",
    "insertText": "GetRelocType(const MCValue &Target, const MCFixup &Fixup, bool IsPCRel)"
  },
  {
    "label": "needsRelocateWithSymbol()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "needsRelocateWithSymbol(const MCSymbol &Sym, unsigned Type)"
  },
  {
    "label": "sortRelocs()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "sortRelocs(const MCAssembler &Asm, std::vector<ELFRelocationEntry> &Relocs)"
  },
  {
    "label": "getOSABI()",
    "kind": "Method",
    "detail": "Function (uint8_t)",
    "insertText": "getOSABI()"
  },
  {
    "label": "getRType2()",
    "kind": "Method",
    "detail": "Function (} uint8_t)",
    "insertText": "getRType2(uint32_t Type)"
  },
  {
    "label": "getRType3()",
    "kind": "Method",
    "detail": "Function (} uint8_t)",
    "insertText": "getRType3(uint32_t Type)"
  },
  {
    "label": "getRSsym()",
    "kind": "Method",
    "detail": "Function (} uint8_t)",
    "insertText": "getRSsym(uint32_t Type)"
  },
  {
    "label": "setRType()",
    "kind": "Method",
    "detail": "Function (} unsigned)",
    "insertText": "setRType(unsigned Value, unsigned Type)"
  },
  {
    "label": "setRType2()",
    "kind": "Method",
    "detail": "Function (} unsigned)",
    "insertText": "setRType2(unsigned Value, unsigned Type)"
  },
  {
    "label": "setRType3()",
    "kind": "Method",
    "detail": "Function (} unsigned)",
    "insertText": "setRType3(unsigned Value, unsigned Type)"
  },
  {
    "label": "setRSsym()",
    "kind": "Method",
    "detail": "Function (} unsigned)",
    "insertText": "setRSsym(unsigned Value, unsigned Type)"
  },
  {
    "label": "createELFObjectWriter()",
    "kind": "Method",
    "detail": "Function (} } ; MCObjectWriter*)",
    "insertText": "createELFObjectWriter(MCELFObjectTargetWriter *MOTW, raw_pwrite_stream &OS, bool IsLittleEndian)"
  }
]