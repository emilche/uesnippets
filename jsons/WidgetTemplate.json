[
  {
    "label": "IToolTip",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IToolTip"
  },
  {
    "label": "UWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UWidget"
  },
  {
    "label": "FSlateBrush",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSlateBrush"
  },
  {
    "label": "UMGEDITOR_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMGEDITOR_API"
  },
  {
    "label": "UWidgetTree",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UWidgetTree"
  },
  {
    "label": "FWidgetTemplate()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Brushes / SlateNoResource . h \" # include \" Containers / Array . h \" # include \" Containers / UnrealString . h \" # include \" CoreMinimal . h \" # include \" HAL / PlatformCrt . h \" # include \" Input / Reply . h \" # include \" Internationalization / Text . h \" # include \" Templates / SharedPointer . h \" # include \" Widgets / IToolTip . h \" class IToolTip ; class UWidget ; struct FSlateBrush ; class FWidgetTemplate : public TSharedFromThis<FWidgetTemplate> { public :)",
    "insertText": "FWidgetTemplate()"
  },
  {
    "label": "GetCategory()",
    "kind": "Method",
    "detail": "Function (} FText)",
    "insertText": "GetCategory()"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (UWidget*)",
    "insertText": "Create(class UWidgetTree* Tree)"
  },
  {
    "label": "GetIcon()",
    "kind": "Method",
    "detail": "Function (const FSlateBrush*)",
    "insertText": "GetIcon()"
  },
  {
    "label": "GetToolTip()",
    "kind": "Method",
    "detail": "Function (FSlateNoResource NullBrush ; return& NullBrush ; } TSharedRef<IToolTip>)",
    "insertText": "GetToolTip()"
  },
  {
    "label": "GetFilterStrings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetFilterStrings(TArray<FString>& OutStrings)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (OutStrings .)",
    "insertText": "Add(Name.ToString())"
  },
  {
    "label": "OnDoubleClicked()",
    "kind": "Method",
    "detail": "Function (} FReply)",
    "insertText": "OnDoubleClicked()"
  }
]