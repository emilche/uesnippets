[
  {
    "label": "ITargetPlatform",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITargetPlatform"
  },
  {
    "label": "ITargetPlatformControls",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITargetPlatformControls"
  },
  {
    "label": "ITargetPlatformSettings",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITargetPlatformSettings"
  },
  {
    "label": "ITargetPlatformManagerModule",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITargetPlatformManagerModule"
  },
  {
    "label": "IAudioFormat",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IAudioFormat"
  },
  {
    "label": "IPhysXCooking",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPhysXCooking"
  },
  {
    "label": "IShaderFormat",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IShaderFormat"
  },
  {
    "label": "ITextureFormat",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITextureFormat"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Containers / StringView . h \" # include \" Delegates / Delegate . h \" # include \" Interfaces / ITargetDevice . h \" # include \" Modules / ModuleInterface . h \" class ITargetPlatform ; class ITargetPlatformControls ; class ITargetPlatformSettings ;)",
    "insertText": "DECLARE_MULTICAST_DELEGATE(FOnTargetPlatformsInvalidated)"
  },
  {
    "label": "FindAudioFormat()",
    "kind": "Method",
    "detail": "Function (class ITargetPlatformManagerModule : public IModuleInterface { public : const class IAudioFormat*)",
    "insertText": "FindAudioFormat(FName Name)"
  },
  {
    "label": "FindPhysXCooking()",
    "kind": "Method",
    "detail": "Function (const class IPhysXCooking*)",
    "insertText": "FindPhysXCooking(FName Name)"
  },
  {
    "label": "FindShaderFormat()",
    "kind": "Method",
    "detail": "Function (const class IShaderFormat*)",
    "insertText": "FindShaderFormat(FName Name)"
  },
  {
    "label": "FindTextureFormat()",
    "kind": "Method",
    "detail": "Function (const class ITextureFormat*)",
    "insertText": "FindTextureFormat(FName Name)"
  },
  {
    "label": "FindTargetDevice()",
    "kind": "Method",
    "detail": "Function (ITargetDevicePtr)",
    "insertText": "FindTargetDevice(const FTargetDeviceId& DeviceId)"
  },
  {
    "label": "FindTargetPlatform()",
    "kind": "Method",
    "detail": "Function (ITargetPlatform*)",
    "insertText": "FindTargetPlatform(FStringView Name)"
  },
  {
    "label": "FindTargetPlatform()",
    "kind": "Method",
    "detail": "Function (ITargetPlatform*)",
    "insertText": "FindTargetPlatform(FName Name)"
  },
  {
    "label": "FindTargetPlatform()",
    "kind": "Method",
    "detail": "Function (ITargetPlatform*)",
    "insertText": "FindTargetPlatform(const TCHAR* Name)"
  },
  {
    "label": "FindTargetPlatformWithSupport()",
    "kind": "Method",
    "detail": "Function (ITargetPlatform*)",
    "insertText": "FindTargetPlatformWithSupport(FName SupportType, FName RequiredSupportedValue)"
  },
  {
    "label": "GetActiveTargetPlatforms()",
    "kind": "Method",
    "detail": "Function (const TArray<ITargetPlatform*>&)",
    "insertText": "GetActiveTargetPlatforms()"
  },
  {
    "label": "GetAudioFormats()",
    "kind": "Method",
    "detail": "Function (const TArray<const class IAudioFormat*>&)",
    "insertText": "GetAudioFormats()"
  },
  {
    "label": "GetPhysXCooking()",
    "kind": "Method",
    "detail": "Function (const TArray<const class IPhysXCooking*>&)",
    "insertText": "GetPhysXCooking()"
  },
  {
    "label": "GetRunningTargetPlatform()",
    "kind": "Method",
    "detail": "Function (ITargetPlatform*)",
    "insertText": "GetRunningTargetPlatform()"
  },
  {
    "label": "GetShaderFormats()",
    "kind": "Method",
    "detail": "Function (const TArray<const class IShaderFormat*>&)",
    "insertText": "GetShaderFormats()"
  },
  {
    "label": "GetTargetPlatforms()",
    "kind": "Method",
    "detail": "Function (const TArray<ITargetPlatform*>&)",
    "insertText": "GetTargetPlatforms()"
  },
  {
    "label": "GetTargetPlatformControls()",
    "kind": "Method",
    "detail": "Function (const TArray<ITargetPlatformControls*>&)",
    "insertText": "GetTargetPlatformControls()"
  },
  {
    "label": "GetTargetPlatformSettings()",
    "kind": "Method",
    "detail": "Function (const TArray<ITargetPlatformSettings*>&)",
    "insertText": "GetTargetPlatformSettings()"
  },
  {
    "label": "Invalidate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Invalidate()"
  },
  {
    "label": "RestrictFormatsToRuntimeOnly()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RestrictFormatsToRuntimeOnly()"
  },
  {
    "label": "ShaderFormatVersion()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "ShaderFormatVersion(FName Name)"
  },
  {
    "label": "UpdatePlatformEnvironment()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UpdatePlatformEnvironment(const FString& PlatformName, TArray<FString> &Keys, TArray<FString> &Values)"
  },
  {
    "label": "GetOnTargetPlatformsInvalidatedDelegate()",
    "kind": "Method",
    "detail": "Function (FOnTargetPlatformsInvalidated&)",
    "insertText": "GetOnTargetPlatformsInvalidatedDelegate()"
  },
  {
    "label": "UpdateAfterSDKInstall()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UpdateAfterSDKInstall(FName TargetPlatformName)"
  },
  {
    "label": "ITargetPlatformManagerModule()",
    "kind": "Method",
    "detail": "Function (public : ~)",
    "insertText": "ITargetPlatformManagerModule()"
  }
]