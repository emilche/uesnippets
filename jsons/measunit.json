[
  {
    "label": "StringEnumeration",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "StringEnumeration"
  },
  {
    "label": "U_I18N_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "U_I18N_API"
  },
  {
    "label": "MeasureUnit()",
    "kind": "Method",
    "detail": "Function (# ifndef __MEASUREUNIT_H__ # define __MEASUREUNIT_H__ # include \" unicode / utypes . h \" # if ! UCONFIG_NO_FORMATTING # include \" unicode / unistr . h \" U_NAMESPACE_BEGIN class StringEnumeration ; class U_I18N_API MeasureUnit : public UObject { public :)",
    "insertText": "MeasureUnit()"
  },
  {
    "label": "MeasureUnit()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MeasureUnit(const MeasureUnit &other)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (MeasureUnit&)",
    "insertText": "operator(const MeasureUnit &other)"
  },
  {
    "label": "clone()",
    "kind": "Method",
    "detail": "Function (UObject*)",
    "insertText": "clone()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (UBool)",
    "insertText": "operator(const UObject& other)"
  },
  {
    "label": "getType()",
    "kind": "Method",
    "detail": "Function (} const char*)",
    "insertText": "getType()"
  },
  {
    "label": "getSubtype()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "getSubtype()"
  },
  {
    "label": "getAvailable()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "getAvailable(MeasureUnit *destArray, int32_t destCapacity, UErrorCode &errorCode)"
  },
  {
    "label": "getAvailable()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "getAvailable(const char *type, MeasureUnit *destArray, int32_t destCapacity, UErrorCode &errorCode)"
  },
  {
    "label": "getAvailableTypes()",
    "kind": "Method",
    "detail": "Function (StringEnumeration*)",
    "insertText": "getAvailableTypes(UErrorCode &errorCode)"
  },
  {
    "label": "getStaticClassID()",
    "kind": "Method",
    "detail": "Function (UClassID U_EXPORT2)",
    "insertText": "getStaticClassID(void)"
  },
  {
    "label": "getDynamicClassID()",
    "kind": "Method",
    "detail": "Function (UClassID)",
    "insertText": "getDynamicClassID(void)"
  },
  {
    "label": "getIndex()",
    "kind": "Method",
    "detail": "Function (# ifndef int32_t)",
    "insertText": "getIndex()"
  },
  {
    "label": "getIndexCount()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "getIndexCount()"
  },
  {
    "label": "internalGetIndexForTypeAndSubtype()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "internalGetIndexForTypeAndSubtype(const char *type, const char *subtype)"
  },
  {
    "label": "resolveUnitPerUnit()",
    "kind": "Method",
    "detail": "Function (MeasureUnit)",
    "insertText": "resolveUnitPerUnit(const MeasureUnit &unit, const MeasureUnit &perUnit, bool* isResolved)"
  },
  {
    "label": "createGForce()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createGForce(UErrorCode &status)"
  },
  {
    "label": "getGForce()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getGForce()"
  },
  {
    "label": "createMeterPerSecondSquared()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createMeterPerSecondSquared(UErrorCode &status)"
  },
  {
    "label": "getMeterPerSecondSquared()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getMeterPerSecondSquared()"
  },
  {
    "label": "createArcMinute()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createArcMinute(UErrorCode &status)"
  },
  {
    "label": "getArcMinute()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getArcMinute()"
  },
  {
    "label": "createArcSecond()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createArcSecond(UErrorCode &status)"
  },
  {
    "label": "getArcSecond()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getArcSecond()"
  },
  {
    "label": "createDegree()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createDegree(UErrorCode &status)"
  },
  {
    "label": "getDegree()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getDegree()"
  },
  {
    "label": "createRadian()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createRadian(UErrorCode &status)"
  },
  {
    "label": "getRadian()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getRadian()"
  },
  {
    "label": "createRevolutionAngle()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createRevolutionAngle(UErrorCode &status)"
  },
  {
    "label": "getRevolutionAngle()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getRevolutionAngle()"
  },
  {
    "label": "createAcre()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createAcre(UErrorCode &status)"
  },
  {
    "label": "getAcre()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getAcre()"
  },
  {
    "label": "createDunam()",
    "kind": "Method",
    "detail": "Function (# endif # ifndef MeasureUnit*)",
    "insertText": "createDunam(UErrorCode &status)"
  },
  {
    "label": "getDunam()",
    "kind": "Method",
    "detail": "Function (MeasureUnit)",
    "insertText": "getDunam()"
  },
  {
    "label": "createHectare()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createHectare(UErrorCode &status)"
  },
  {
    "label": "getHectare()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getHectare()"
  },
  {
    "label": "createSquareCentimeter()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createSquareCentimeter(UErrorCode &status)"
  },
  {
    "label": "getSquareCentimeter()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getSquareCentimeter()"
  },
  {
    "label": "createSquareFoot()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createSquareFoot(UErrorCode &status)"
  },
  {
    "label": "getSquareFoot()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getSquareFoot()"
  },
  {
    "label": "createSquareInch()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createSquareInch(UErrorCode &status)"
  },
  {
    "label": "getSquareInch()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getSquareInch()"
  },
  {
    "label": "createSquareKilometer()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createSquareKilometer(UErrorCode &status)"
  },
  {
    "label": "getSquareKilometer()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getSquareKilometer()"
  },
  {
    "label": "createSquareMeter()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createSquareMeter(UErrorCode &status)"
  },
  {
    "label": "getSquareMeter()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getSquareMeter()"
  },
  {
    "label": "createSquareMile()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createSquareMile(UErrorCode &status)"
  },
  {
    "label": "getSquareMile()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getSquareMile()"
  },
  {
    "label": "createSquareYard()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createSquareYard(UErrorCode &status)"
  },
  {
    "label": "getSquareYard()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getSquareYard()"
  },
  {
    "label": "createKarat()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createKarat(UErrorCode &status)"
  },
  {
    "label": "getKarat()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getKarat()"
  },
  {
    "label": "createMilligramPerDeciliter()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createMilligramPerDeciliter(UErrorCode &status)"
  },
  {
    "label": "getMilligramPerDeciliter()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getMilligramPerDeciliter()"
  },
  {
    "label": "createMillimolePerLiter()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createMillimolePerLiter(UErrorCode &status)"
  },
  {
    "label": "getMillimolePerLiter()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getMillimolePerLiter()"
  },
  {
    "label": "createMole()",
    "kind": "Method",
    "detail": "Function (# endif # ifndef MeasureUnit*)",
    "insertText": "createMole(UErrorCode &status)"
  },
  {
    "label": "getMole()",
    "kind": "Method",
    "detail": "Function (MeasureUnit)",
    "insertText": "getMole()"
  },
  {
    "label": "createPartPerMillion()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createPartPerMillion(UErrorCode &status)"
  },
  {
    "label": "getPartPerMillion()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getPartPerMillion()"
  },
  {
    "label": "createPercent()",
    "kind": "Method",
    "detail": "Function (# endif # ifndef MeasureUnit*)",
    "insertText": "createPercent(UErrorCode &status)"
  },
  {
    "label": "getPercent()",
    "kind": "Method",
    "detail": "Function (# endif # ifndef MeasureUnit)",
    "insertText": "getPercent()"
  },
  {
    "label": "createPermille()",
    "kind": "Method",
    "detail": "Function (# endif # ifndef MeasureUnit*)",
    "insertText": "createPermille(UErrorCode &status)"
  },
  {
    "label": "getPermille()",
    "kind": "Method",
    "detail": "Function (# endif # ifndef MeasureUnit)",
    "insertText": "getPermille()"
  },
  {
    "label": "createPermyriad()",
    "kind": "Method",
    "detail": "Function (# endif # ifndef MeasureUnit*)",
    "insertText": "createPermyriad(UErrorCode &status)"
  },
  {
    "label": "getPermyriad()",
    "kind": "Method",
    "detail": "Function (MeasureUnit)",
    "insertText": "getPermyriad()"
  },
  {
    "label": "createLiterPer100Kilometers()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createLiterPer100Kilometers(UErrorCode &status)"
  },
  {
    "label": "getLiterPer100Kilometers()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getLiterPer100Kilometers()"
  },
  {
    "label": "createLiterPerKilometer()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createLiterPerKilometer(UErrorCode &status)"
  },
  {
    "label": "getLiterPerKilometer()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getLiterPerKilometer()"
  },
  {
    "label": "createMilePerGallon()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createMilePerGallon(UErrorCode &status)"
  },
  {
    "label": "getMilePerGallon()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getMilePerGallon()"
  },
  {
    "label": "createMilePerGallonImperial()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createMilePerGallonImperial(UErrorCode &status)"
  },
  {
    "label": "getMilePerGallonImperial()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getMilePerGallonImperial()"
  },
  {
    "label": "createBit()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createBit(UErrorCode &status)"
  },
  {
    "label": "getBit()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getBit()"
  },
  {
    "label": "createByte()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createByte(UErrorCode &status)"
  },
  {
    "label": "getByte()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getByte()"
  },
  {
    "label": "createGigabit()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createGigabit(UErrorCode &status)"
  },
  {
    "label": "getGigabit()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getGigabit()"
  },
  {
    "label": "createGigabyte()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createGigabyte(UErrorCode &status)"
  },
  {
    "label": "getGigabyte()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getGigabyte()"
  },
  {
    "label": "createKilobit()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createKilobit(UErrorCode &status)"
  },
  {
    "label": "getKilobit()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getKilobit()"
  },
  {
    "label": "createKilobyte()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createKilobyte(UErrorCode &status)"
  },
  {
    "label": "getKilobyte()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getKilobyte()"
  },
  {
    "label": "createMegabit()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createMegabit(UErrorCode &status)"
  },
  {
    "label": "getMegabit()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getMegabit()"
  },
  {
    "label": "createMegabyte()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createMegabyte(UErrorCode &status)"
  },
  {
    "label": "getMegabyte()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getMegabyte()"
  },
  {
    "label": "createPetabyte()",
    "kind": "Method",
    "detail": "Function (# endif # ifndef MeasureUnit*)",
    "insertText": "createPetabyte(UErrorCode &status)"
  },
  {
    "label": "getPetabyte()",
    "kind": "Method",
    "detail": "Function (# endif # ifndef MeasureUnit)",
    "insertText": "getPetabyte()"
  },
  {
    "label": "createTerabit()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createTerabit(UErrorCode &status)"
  },
  {
    "label": "getTerabit()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getTerabit()"
  },
  {
    "label": "createTerabyte()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createTerabyte(UErrorCode &status)"
  },
  {
    "label": "getTerabyte()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getTerabyte()"
  },
  {
    "label": "createCentury()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createCentury(UErrorCode &status)"
  },
  {
    "label": "getCentury()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getCentury()"
  },
  {
    "label": "createDay()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createDay(UErrorCode &status)"
  },
  {
    "label": "getDay()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getDay()"
  },
  {
    "label": "createDayPerson()",
    "kind": "Method",
    "detail": "Function (# endif # ifndef MeasureUnit*)",
    "insertText": "createDayPerson(UErrorCode &status)"
  },
  {
    "label": "getDayPerson()",
    "kind": "Method",
    "detail": "Function (# endif # ifndef MeasureUnit)",
    "insertText": "getDayPerson()"
  },
  {
    "label": "createHour()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createHour(UErrorCode &status)"
  },
  {
    "label": "getHour()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getHour()"
  },
  {
    "label": "createMicrosecond()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createMicrosecond(UErrorCode &status)"
  },
  {
    "label": "getMicrosecond()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getMicrosecond()"
  },
  {
    "label": "createMillisecond()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createMillisecond(UErrorCode &status)"
  },
  {
    "label": "getMillisecond()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getMillisecond()"
  },
  {
    "label": "createMinute()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createMinute(UErrorCode &status)"
  },
  {
    "label": "getMinute()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getMinute()"
  },
  {
    "label": "createMonth()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createMonth(UErrorCode &status)"
  },
  {
    "label": "getMonth()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getMonth()"
  },
  {
    "label": "createMonthPerson()",
    "kind": "Method",
    "detail": "Function (# endif # ifndef MeasureUnit*)",
    "insertText": "createMonthPerson(UErrorCode &status)"
  },
  {
    "label": "getMonthPerson()",
    "kind": "Method",
    "detail": "Function (# endif # ifndef MeasureUnit)",
    "insertText": "getMonthPerson()"
  },
  {
    "label": "createNanosecond()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createNanosecond(UErrorCode &status)"
  },
  {
    "label": "getNanosecond()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getNanosecond()"
  },
  {
    "label": "createSecond()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createSecond(UErrorCode &status)"
  },
  {
    "label": "getSecond()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getSecond()"
  },
  {
    "label": "createWeek()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createWeek(UErrorCode &status)"
  },
  {
    "label": "getWeek()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getWeek()"
  },
  {
    "label": "createWeekPerson()",
    "kind": "Method",
    "detail": "Function (# endif # ifndef MeasureUnit*)",
    "insertText": "createWeekPerson(UErrorCode &status)"
  },
  {
    "label": "getWeekPerson()",
    "kind": "Method",
    "detail": "Function (# endif # ifndef MeasureUnit)",
    "insertText": "getWeekPerson()"
  },
  {
    "label": "createYear()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createYear(UErrorCode &status)"
  },
  {
    "label": "getYear()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getYear()"
  },
  {
    "label": "createYearPerson()",
    "kind": "Method",
    "detail": "Function (# endif # ifndef MeasureUnit*)",
    "insertText": "createYearPerson(UErrorCode &status)"
  },
  {
    "label": "getYearPerson()",
    "kind": "Method",
    "detail": "Function (# endif # ifndef MeasureUnit)",
    "insertText": "getYearPerson()"
  },
  {
    "label": "createAmpere()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createAmpere(UErrorCode &status)"
  },
  {
    "label": "getAmpere()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getAmpere()"
  },
  {
    "label": "createMilliampere()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createMilliampere(UErrorCode &status)"
  },
  {
    "label": "getMilliampere()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getMilliampere()"
  },
  {
    "label": "createOhm()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createOhm(UErrorCode &status)"
  },
  {
    "label": "getOhm()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getOhm()"
  },
  {
    "label": "createVolt()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createVolt(UErrorCode &status)"
  },
  {
    "label": "getVolt()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getVolt()"
  },
  {
    "label": "createBritishThermalUnit()",
    "kind": "Method",
    "detail": "Function (# endif # ifndef MeasureUnit*)",
    "insertText": "createBritishThermalUnit(UErrorCode &status)"
  },
  {
    "label": "getBritishThermalUnit()",
    "kind": "Method",
    "detail": "Function (MeasureUnit)",
    "insertText": "getBritishThermalUnit()"
  },
  {
    "label": "createCalorie()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createCalorie(UErrorCode &status)"
  },
  {
    "label": "getCalorie()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getCalorie()"
  },
  {
    "label": "createElectronvolt()",
    "kind": "Method",
    "detail": "Function (# endif # ifndef MeasureUnit*)",
    "insertText": "createElectronvolt(UErrorCode &status)"
  },
  {
    "label": "getElectronvolt()",
    "kind": "Method",
    "detail": "Function (MeasureUnit)",
    "insertText": "getElectronvolt()"
  },
  {
    "label": "createFoodcalorie()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createFoodcalorie(UErrorCode &status)"
  },
  {
    "label": "getFoodcalorie()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getFoodcalorie()"
  },
  {
    "label": "createJoule()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createJoule(UErrorCode &status)"
  },
  {
    "label": "getJoule()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getJoule()"
  },
  {
    "label": "createKilocalorie()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createKilocalorie(UErrorCode &status)"
  },
  {
    "label": "getKilocalorie()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getKilocalorie()"
  },
  {
    "label": "createKilojoule()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createKilojoule(UErrorCode &status)"
  },
  {
    "label": "getKilojoule()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getKilojoule()"
  },
  {
    "label": "createKilowattHour()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createKilowattHour(UErrorCode &status)"
  },
  {
    "label": "getKilowattHour()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getKilowattHour()"
  },
  {
    "label": "createNewton()",
    "kind": "Method",
    "detail": "Function (# endif # ifndef MeasureUnit*)",
    "insertText": "createNewton(UErrorCode &status)"
  },
  {
    "label": "getNewton()",
    "kind": "Method",
    "detail": "Function (MeasureUnit)",
    "insertText": "getNewton()"
  },
  {
    "label": "createPoundForce()",
    "kind": "Method",
    "detail": "Function (# endif # ifndef MeasureUnit*)",
    "insertText": "createPoundForce(UErrorCode &status)"
  },
  {
    "label": "getPoundForce()",
    "kind": "Method",
    "detail": "Function (MeasureUnit)",
    "insertText": "getPoundForce()"
  },
  {
    "label": "createGigahertz()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createGigahertz(UErrorCode &status)"
  },
  {
    "label": "getGigahertz()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getGigahertz()"
  },
  {
    "label": "createHertz()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createHertz(UErrorCode &status)"
  },
  {
    "label": "getHertz()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getHertz()"
  },
  {
    "label": "createKilohertz()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createKilohertz(UErrorCode &status)"
  },
  {
    "label": "getKilohertz()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getKilohertz()"
  },
  {
    "label": "createMegahertz()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createMegahertz(UErrorCode &status)"
  },
  {
    "label": "getMegahertz()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getMegahertz()"
  },
  {
    "label": "createAstronomicalUnit()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createAstronomicalUnit(UErrorCode &status)"
  },
  {
    "label": "getAstronomicalUnit()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getAstronomicalUnit()"
  },
  {
    "label": "createCentimeter()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createCentimeter(UErrorCode &status)"
  },
  {
    "label": "getCentimeter()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getCentimeter()"
  },
  {
    "label": "createDecimeter()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createDecimeter(UErrorCode &status)"
  },
  {
    "label": "getDecimeter()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getDecimeter()"
  },
  {
    "label": "createFathom()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createFathom(UErrorCode &status)"
  },
  {
    "label": "getFathom()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getFathom()"
  },
  {
    "label": "createFoot()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createFoot(UErrorCode &status)"
  },
  {
    "label": "getFoot()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getFoot()"
  },
  {
    "label": "createFurlong()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createFurlong(UErrorCode &status)"
  },
  {
    "label": "getFurlong()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getFurlong()"
  },
  {
    "label": "createInch()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createInch(UErrorCode &status)"
  },
  {
    "label": "getInch()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getInch()"
  },
  {
    "label": "createKilometer()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createKilometer(UErrorCode &status)"
  },
  {
    "label": "getKilometer()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getKilometer()"
  },
  {
    "label": "createLightYear()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createLightYear(UErrorCode &status)"
  },
  {
    "label": "getLightYear()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getLightYear()"
  },
  {
    "label": "createMeter()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createMeter(UErrorCode &status)"
  },
  {
    "label": "getMeter()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getMeter()"
  },
  {
    "label": "createMicrometer()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createMicrometer(UErrorCode &status)"
  },
  {
    "label": "getMicrometer()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getMicrometer()"
  },
  {
    "label": "createMile()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createMile(UErrorCode &status)"
  },
  {
    "label": "getMile()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getMile()"
  },
  {
    "label": "createMileScandinavian()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createMileScandinavian(UErrorCode &status)"
  },
  {
    "label": "getMileScandinavian()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getMileScandinavian()"
  },
  {
    "label": "createMillimeter()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createMillimeter(UErrorCode &status)"
  },
  {
    "label": "getMillimeter()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getMillimeter()"
  },
  {
    "label": "createNanometer()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createNanometer(UErrorCode &status)"
  },
  {
    "label": "getNanometer()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getNanometer()"
  },
  {
    "label": "createNauticalMile()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createNauticalMile(UErrorCode &status)"
  },
  {
    "label": "getNauticalMile()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getNauticalMile()"
  },
  {
    "label": "createParsec()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createParsec(UErrorCode &status)"
  },
  {
    "label": "getParsec()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getParsec()"
  },
  {
    "label": "createPicometer()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createPicometer(UErrorCode &status)"
  },
  {
    "label": "getPicometer()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getPicometer()"
  },
  {
    "label": "createPoint()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createPoint(UErrorCode &status)"
  },
  {
    "label": "getPoint()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getPoint()"
  },
  {
    "label": "createSolarRadius()",
    "kind": "Method",
    "detail": "Function (# endif # ifndef MeasureUnit*)",
    "insertText": "createSolarRadius(UErrorCode &status)"
  },
  {
    "label": "getSolarRadius()",
    "kind": "Method",
    "detail": "Function (MeasureUnit)",
    "insertText": "getSolarRadius()"
  },
  {
    "label": "createYard()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createYard(UErrorCode &status)"
  },
  {
    "label": "getYard()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getYard()"
  },
  {
    "label": "createLux()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createLux(UErrorCode &status)"
  },
  {
    "label": "getLux()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getLux()"
  },
  {
    "label": "createSolarLuminosity()",
    "kind": "Method",
    "detail": "Function (# endif # ifndef MeasureUnit*)",
    "insertText": "createSolarLuminosity(UErrorCode &status)"
  },
  {
    "label": "getSolarLuminosity()",
    "kind": "Method",
    "detail": "Function (MeasureUnit)",
    "insertText": "getSolarLuminosity()"
  },
  {
    "label": "createCarat()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createCarat(UErrorCode &status)"
  },
  {
    "label": "getCarat()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getCarat()"
  },
  {
    "label": "createDalton()",
    "kind": "Method",
    "detail": "Function (# endif # ifndef MeasureUnit*)",
    "insertText": "createDalton(UErrorCode &status)"
  },
  {
    "label": "getDalton()",
    "kind": "Method",
    "detail": "Function (MeasureUnit)",
    "insertText": "getDalton()"
  },
  {
    "label": "createEarthMass()",
    "kind": "Method",
    "detail": "Function (# endif # ifndef MeasureUnit*)",
    "insertText": "createEarthMass(UErrorCode &status)"
  },
  {
    "label": "getEarthMass()",
    "kind": "Method",
    "detail": "Function (MeasureUnit)",
    "insertText": "getEarthMass()"
  },
  {
    "label": "createGram()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createGram(UErrorCode &status)"
  },
  {
    "label": "getGram()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getGram()"
  },
  {
    "label": "createKilogram()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createKilogram(UErrorCode &status)"
  },
  {
    "label": "getKilogram()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getKilogram()"
  },
  {
    "label": "createMetricTon()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createMetricTon(UErrorCode &status)"
  },
  {
    "label": "getMetricTon()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getMetricTon()"
  },
  {
    "label": "createMicrogram()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createMicrogram(UErrorCode &status)"
  },
  {
    "label": "getMicrogram()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getMicrogram()"
  },
  {
    "label": "createMilligram()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createMilligram(UErrorCode &status)"
  },
  {
    "label": "getMilligram()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getMilligram()"
  },
  {
    "label": "createOunce()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createOunce(UErrorCode &status)"
  },
  {
    "label": "getOunce()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getOunce()"
  },
  {
    "label": "createOunceTroy()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createOunceTroy(UErrorCode &status)"
  },
  {
    "label": "getOunceTroy()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getOunceTroy()"
  },
  {
    "label": "createPound()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createPound(UErrorCode &status)"
  },
  {
    "label": "getPound()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getPound()"
  },
  {
    "label": "createSolarMass()",
    "kind": "Method",
    "detail": "Function (# endif # ifndef MeasureUnit*)",
    "insertText": "createSolarMass(UErrorCode &status)"
  },
  {
    "label": "getSolarMass()",
    "kind": "Method",
    "detail": "Function (MeasureUnit)",
    "insertText": "getSolarMass()"
  },
  {
    "label": "createStone()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createStone(UErrorCode &status)"
  },
  {
    "label": "getStone()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getStone()"
  },
  {
    "label": "createTon()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createTon(UErrorCode &status)"
  },
  {
    "label": "getTon()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getTon()"
  },
  {
    "label": "createGigawatt()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createGigawatt(UErrorCode &status)"
  },
  {
    "label": "getGigawatt()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getGigawatt()"
  },
  {
    "label": "createHorsepower()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createHorsepower(UErrorCode &status)"
  },
  {
    "label": "getHorsepower()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getHorsepower()"
  },
  {
    "label": "createKilowatt()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createKilowatt(UErrorCode &status)"
  },
  {
    "label": "getKilowatt()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getKilowatt()"
  },
  {
    "label": "createMegawatt()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createMegawatt(UErrorCode &status)"
  },
  {
    "label": "getMegawatt()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getMegawatt()"
  },
  {
    "label": "createMilliwatt()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createMilliwatt(UErrorCode &status)"
  },
  {
    "label": "getMilliwatt()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getMilliwatt()"
  },
  {
    "label": "createWatt()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createWatt(UErrorCode &status)"
  },
  {
    "label": "getWatt()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getWatt()"
  },
  {
    "label": "createAtmosphere()",
    "kind": "Method",
    "detail": "Function (# endif # ifndef MeasureUnit*)",
    "insertText": "createAtmosphere(UErrorCode &status)"
  },
  {
    "label": "getAtmosphere()",
    "kind": "Method",
    "detail": "Function (# endif # ifndef MeasureUnit)",
    "insertText": "getAtmosphere()"
  },
  {
    "label": "createHectopascal()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createHectopascal(UErrorCode &status)"
  },
  {
    "label": "getHectopascal()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getHectopascal()"
  },
  {
    "label": "createInchHg()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createInchHg(UErrorCode &status)"
  },
  {
    "label": "getInchHg()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getInchHg()"
  },
  {
    "label": "createKilopascal()",
    "kind": "Method",
    "detail": "Function (# endif # ifndef MeasureUnit*)",
    "insertText": "createKilopascal(UErrorCode &status)"
  },
  {
    "label": "getKilopascal()",
    "kind": "Method",
    "detail": "Function (MeasureUnit)",
    "insertText": "getKilopascal()"
  },
  {
    "label": "createMegapascal()",
    "kind": "Method",
    "detail": "Function (# endif # ifndef MeasureUnit*)",
    "insertText": "createMegapascal(UErrorCode &status)"
  },
  {
    "label": "getMegapascal()",
    "kind": "Method",
    "detail": "Function (MeasureUnit)",
    "insertText": "getMegapascal()"
  },
  {
    "label": "createMillibar()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createMillibar(UErrorCode &status)"
  },
  {
    "label": "getMillibar()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getMillibar()"
  },
  {
    "label": "createMillimeterOfMercury()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createMillimeterOfMercury(UErrorCode &status)"
  },
  {
    "label": "getMillimeterOfMercury()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getMillimeterOfMercury()"
  },
  {
    "label": "createPoundPerSquareInch()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createPoundPerSquareInch(UErrorCode &status)"
  },
  {
    "label": "getPoundPerSquareInch()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getPoundPerSquareInch()"
  },
  {
    "label": "createKilometerPerHour()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createKilometerPerHour(UErrorCode &status)"
  },
  {
    "label": "getKilometerPerHour()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getKilometerPerHour()"
  },
  {
    "label": "createKnot()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createKnot(UErrorCode &status)"
  },
  {
    "label": "getKnot()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getKnot()"
  },
  {
    "label": "createMeterPerSecond()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createMeterPerSecond(UErrorCode &status)"
  },
  {
    "label": "getMeterPerSecond()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getMeterPerSecond()"
  },
  {
    "label": "createMilePerHour()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createMilePerHour(UErrorCode &status)"
  },
  {
    "label": "getMilePerHour()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getMilePerHour()"
  },
  {
    "label": "createCelsius()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createCelsius(UErrorCode &status)"
  },
  {
    "label": "getCelsius()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getCelsius()"
  },
  {
    "label": "createFahrenheit()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createFahrenheit(UErrorCode &status)"
  },
  {
    "label": "getFahrenheit()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getFahrenheit()"
  },
  {
    "label": "createGenericTemperature()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createGenericTemperature(UErrorCode &status)"
  },
  {
    "label": "getGenericTemperature()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getGenericTemperature()"
  },
  {
    "label": "createKelvin()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createKelvin(UErrorCode &status)"
  },
  {
    "label": "getKelvin()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getKelvin()"
  },
  {
    "label": "createNewtonMeter()",
    "kind": "Method",
    "detail": "Function (# endif # ifndef MeasureUnit*)",
    "insertText": "createNewtonMeter(UErrorCode &status)"
  },
  {
    "label": "getNewtonMeter()",
    "kind": "Method",
    "detail": "Function (MeasureUnit)",
    "insertText": "getNewtonMeter()"
  },
  {
    "label": "createPoundFoot()",
    "kind": "Method",
    "detail": "Function (# endif # ifndef MeasureUnit*)",
    "insertText": "createPoundFoot(UErrorCode &status)"
  },
  {
    "label": "getPoundFoot()",
    "kind": "Method",
    "detail": "Function (MeasureUnit)",
    "insertText": "getPoundFoot()"
  },
  {
    "label": "createAcreFoot()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createAcreFoot(UErrorCode &status)"
  },
  {
    "label": "getAcreFoot()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getAcreFoot()"
  },
  {
    "label": "createBarrel()",
    "kind": "Method",
    "detail": "Function (# endif # ifndef MeasureUnit*)",
    "insertText": "createBarrel(UErrorCode &status)"
  },
  {
    "label": "getBarrel()",
    "kind": "Method",
    "detail": "Function (MeasureUnit)",
    "insertText": "getBarrel()"
  },
  {
    "label": "createBushel()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createBushel(UErrorCode &status)"
  },
  {
    "label": "getBushel()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getBushel()"
  },
  {
    "label": "createCentiliter()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createCentiliter(UErrorCode &status)"
  },
  {
    "label": "getCentiliter()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getCentiliter()"
  },
  {
    "label": "createCubicCentimeter()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createCubicCentimeter(UErrorCode &status)"
  },
  {
    "label": "getCubicCentimeter()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getCubicCentimeter()"
  },
  {
    "label": "createCubicFoot()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createCubicFoot(UErrorCode &status)"
  },
  {
    "label": "getCubicFoot()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getCubicFoot()"
  },
  {
    "label": "createCubicInch()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createCubicInch(UErrorCode &status)"
  },
  {
    "label": "getCubicInch()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getCubicInch()"
  },
  {
    "label": "createCubicKilometer()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createCubicKilometer(UErrorCode &status)"
  },
  {
    "label": "getCubicKilometer()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getCubicKilometer()"
  },
  {
    "label": "createCubicMeter()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createCubicMeter(UErrorCode &status)"
  },
  {
    "label": "getCubicMeter()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getCubicMeter()"
  },
  {
    "label": "createCubicMile()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createCubicMile(UErrorCode &status)"
  },
  {
    "label": "getCubicMile()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getCubicMile()"
  },
  {
    "label": "createCubicYard()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createCubicYard(UErrorCode &status)"
  },
  {
    "label": "getCubicYard()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getCubicYard()"
  },
  {
    "label": "createCup()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createCup(UErrorCode &status)"
  },
  {
    "label": "getCup()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getCup()"
  },
  {
    "label": "createCupMetric()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createCupMetric(UErrorCode &status)"
  },
  {
    "label": "getCupMetric()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getCupMetric()"
  },
  {
    "label": "createDeciliter()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createDeciliter(UErrorCode &status)"
  },
  {
    "label": "getDeciliter()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getDeciliter()"
  },
  {
    "label": "createFluidOunce()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createFluidOunce(UErrorCode &status)"
  },
  {
    "label": "getFluidOunce()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getFluidOunce()"
  },
  {
    "label": "createFluidOunceImperial()",
    "kind": "Method",
    "detail": "Function (# endif # ifndef MeasureUnit*)",
    "insertText": "createFluidOunceImperial(UErrorCode &status)"
  },
  {
    "label": "getFluidOunceImperial()",
    "kind": "Method",
    "detail": "Function (MeasureUnit)",
    "insertText": "getFluidOunceImperial()"
  },
  {
    "label": "createGallon()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createGallon(UErrorCode &status)"
  },
  {
    "label": "getGallon()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getGallon()"
  },
  {
    "label": "createGallonImperial()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createGallonImperial(UErrorCode &status)"
  },
  {
    "label": "getGallonImperial()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getGallonImperial()"
  },
  {
    "label": "createHectoliter()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createHectoliter(UErrorCode &status)"
  },
  {
    "label": "getHectoliter()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getHectoliter()"
  },
  {
    "label": "createLiter()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createLiter(UErrorCode &status)"
  },
  {
    "label": "getLiter()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getLiter()"
  },
  {
    "label": "createMegaliter()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createMegaliter(UErrorCode &status)"
  },
  {
    "label": "getMegaliter()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getMegaliter()"
  },
  {
    "label": "createMilliliter()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createMilliliter(UErrorCode &status)"
  },
  {
    "label": "getMilliliter()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getMilliliter()"
  },
  {
    "label": "createPint()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createPint(UErrorCode &status)"
  },
  {
    "label": "getPint()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getPint()"
  },
  {
    "label": "createPintMetric()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createPintMetric(UErrorCode &status)"
  },
  {
    "label": "getPintMetric()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getPintMetric()"
  },
  {
    "label": "createQuart()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createQuart(UErrorCode &status)"
  },
  {
    "label": "getQuart()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getQuart()"
  },
  {
    "label": "createTablespoon()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createTablespoon(UErrorCode &status)"
  },
  {
    "label": "getTablespoon()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getTablespoon()"
  },
  {
    "label": "createTeaspoon()",
    "kind": "Method",
    "detail": "Function (# endif MeasureUnit*)",
    "insertText": "createTeaspoon(UErrorCode &status)"
  },
  {
    "label": "getTeaspoon()",
    "kind": "Method",
    "detail": "Function (# ifndef MeasureUnit)",
    "insertText": "getTeaspoon()"
  },
  {
    "label": "initTime()",
    "kind": "Method",
    "detail": "Function (# endif protected : # ifndef void)",
    "insertText": "initTime(const char *timeId)"
  },
  {
    "label": "initCurrency()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "initCurrency(const char *isoCurrency)"
  },
  {
    "label": "initNoUnit()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "initNoUnit(const char *subtype)"
  },
  {
    "label": "MeasureUnit()",
    "kind": "Method",
    "detail": "Function (# endif private : int32_t fTypeId ; int32_t fSubTypeId ; char fCurrency [ 4 ] ;)",
    "insertText": "MeasureUnit(int32_t typeId, int32_t subTypeId) : fTypeId(typeId), fSubTypeId(subTypeId)"
  },
  {
    "label": "setTo()",
    "kind": "Method",
    "detail": "Function (fCurrency [ 0 ] = 0 ; } void)",
    "insertText": "setTo(int32_t typeId, int32_t subTypeId)"
  },
  {
    "label": "getOffset()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "getOffset()"
  },
  {
    "label": "create()",
    "kind": "Method",
    "detail": "Function (MeasureUnit*)",
    "insertText": "create(int typeId, int subTypeId, UErrorCode &status)"
  }
]