[
  {
    "label": "FArchive",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FArchive"
  },
  {
    "label": "FCompressedBuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCompressedBuffer"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "FIoHash",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FIoHash"
  },
  {
    "label": "TUniqueFunction",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TUniqueFunction"
  },
  {
    "label": "FCacheKey",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCacheKey"
  },
  {
    "label": "FValueId",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FValueId"
  },
  {
    "label": "FCookedData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCookedData"
  },
  {
    "label": "FEditorData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEditorData"
  },
  {
    "label": "FIoResponse",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FIoResponse"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "DerivedData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DerivedData"
  },
  {
    "label": "FDerivedData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDerivedData"
  },
  {
    "label": "FDerivedDataIoPriority",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDerivedDataIoPriority"
  },
  {
    "label": "FDerivedDataIoRequest",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDerivedDataIoRequest"
  },
  {
    "label": "FDerivedDataIoResponse",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDerivedDataIoResponse"
  },
  {
    "label": "FDerivedDataIoOptions",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDerivedDataIoOptions"
  },
  {
    "label": "FDerivedDataIoBatch",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDerivedDataIoBatch"
  },
  {
    "label": "ENUM_CLASS_FLAGS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / StringFwd . h \" # include \" CoreTypes . h \" # include \" Math / NumericLimits . h \" # include \" Memory / MemoryFwd . h \" # include \" Memory / MemoryView . h \" # include \" Misc / EnumClassFlags . h \" # include \" Templates / PimplPtr . h \" # define class FArchive ; class FCompressedBuffer ; class UObject ; struct FIoHash ; template<FuncType> class TUniqueFunction ; namespace UE::DerivedData { struct FCacheKey ; } namespace UE::DerivedData { struct FValueId ; } namespace UE::DerivedData::Private { class FCookedData ; } namespace UE::DerivedData::Private { class FEditorData ; } namespace UE::DerivedData::Private { class FIoResponse ; } namespace UE { enum class EDerivedDataFlags : uint32 { None = 0,Required = 1<<0,Optional = 1<<1,MemoryMapped = 1<<2,} ;)",
    "insertText": "ENUM_CLASS_FLAGS(EDerivedDataFlags)"
  },
  {
    "label": "bool()",
    "kind": "Method",
    "detail": "Function (class DerivedData::Private::FCookedData { public : operator)",
    "insertText": "bool()"
  },
  {
    "label": "ReferenceHash()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "ReferenceHash()"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Serialize(FArchive& Ar)"
  },
  {
    "label": "FDerivedData()",
    "kind": "Method",
    "detail": "Function (uint64 ChunkOffset = 0 ; uint64 ChunkSize = 0 ; uint8 ChunkId [ 1 2 ] { } ; EDerivedDataFlags Flags = EDerivedDataFlags::None ; } ; class FDerivedData { public : const FDerivedData Null ;)",
    "insertText": "FDerivedData()"
  },
  {
    "label": "FDerivedData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FDerivedData(const DerivedData::Private::FCookedData& CookedData)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "IsNull()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsNull()"
  },
  {
    "label": "HasData()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "HasData()"
  },
  {
    "label": "IsCooked()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsCooked()"
  },
  {
    "label": "ReferenceEquals()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ReferenceEquals(const FDerivedData& Other)"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Serialize(FArchive& Ar, UObject* Owner)"
  },
  {
    "label": "FDerivedData()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITORONLY_DATA)",
    "insertText": "FDerivedData(const FSharedString& Name, const FSharedBuffer& Data)"
  },
  {
    "label": "FDerivedData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FDerivedData(const FSharedString& Name, const FCompositeBuffer& Data)"
  },
  {
    "label": "FDerivedData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FDerivedData(const FSharedString& Name, const FCompressedBuffer& Data)"
  },
  {
    "label": "FDerivedData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FDerivedData(const FSharedString& Name, const DerivedData::FCacheKey& Key)"
  },
  {
    "label": "FDerivedData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FDerivedData(const FSharedString& Name, const DerivedData::FCacheKey& Key, const DerivedData::FValueId& ValueId)"
  },
  {
    "label": "GetName()",
    "kind": "Method",
    "detail": "Function (const FSharedString&)",
    "insertText": "GetName()"
  },
  {
    "label": "SetFlags()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFlags(EDerivedDataFlags Flags)"
  },
  {
    "label": "FDerivedData()",
    "kind": "Method",
    "detail": "Function (private : TPimplPtr<DerivedData::Private::FEditorData,EPimplPtrMode::DeepCopy> EditorData ; # endif private : DerivedData::Private::FCookedData CookedData ; DerivedData::Private::FIoResponse ; } ; const FDerivedData FDerivedData::Null ;)",
    "insertText": "FDerivedData(const DerivedData::Private::FCookedData& InCookedData) : CookedData(InCookedData)"
  },
  {
    "label": "InterpolateTo()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITORONLY_DATA return ! EditorData&& ! CookedData ; # else return ! CookedData ; # endif } struct FDerivedDataIoPriority { FDerivedDataIoPriority)",
    "insertText": "InterpolateTo(const FDerivedDataIoPriority Target, const float Alpha)"
  },
  {
    "label": "int32()",
    "kind": "Method",
    "detail": "Function (} return { Value +)",
    "insertText": "int32((int64(Target.Value) - int64(Value)) * double(Alpha))"
  },
  {
    "label": "Lowest()",
    "kind": "Method",
    "detail": "Function (} FDerivedDataIoPriority)",
    "insertText": "Lowest()"
  },
  {
    "label": "SetPriority()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetPriority(FDerivedDataIoPriority Priority)"
  },
  {
    "label": "Cancel()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Cancel()"
  },
  {
    "label": "Poll()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Poll()"
  },
  {
    "label": "GetOverallStatus()",
    "kind": "Method",
    "detail": "Function (EDerivedDataIoStatus)",
    "insertText": "GetOverallStatus()"
  },
  {
    "label": "GetStatus()",
    "kind": "Method",
    "detail": "Function (EDerivedDataIoStatus)",
    "insertText": "GetStatus(FDerivedDataIoRequest Handle)"
  },
  {
    "label": "GetData()",
    "kind": "Method",
    "detail": "Function (FSharedBuffer)",
    "insertText": "GetData(FDerivedDataIoRequest Handle)"
  },
  {
    "label": "GetSize()",
    "kind": "Method",
    "detail": "Function (uint64)",
    "insertText": "GetSize(FDerivedDataIoRequest Handle)"
  },
  {
    "label": "GetHash()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITORONLY_DATA const FIoHash*)",
    "insertText": "GetHash(FDerivedDataIoRequest Handle)"
  },
  {
    "label": "GetCacheKey()",
    "kind": "Method",
    "detail": "Function (const DerivedData::FCacheKey*)",
    "insertText": "GetCacheKey(FDerivedDataIoRequest Handle)"
  },
  {
    "label": "GetCacheValueId()",
    "kind": "Method",
    "detail": "Function (const DerivedData::FValueId*)",
    "insertText": "GetCacheValueId(FDerivedDataIoRequest Handle)"
  },
  {
    "label": "GetCompressedData()",
    "kind": "Method",
    "detail": "Function (const FCompressedBuffer*)",
    "insertText": "GetCompressedData(FDerivedDataIoRequest Handle)"
  },
  {
    "label": "FDerivedDataIoOptions()",
    "kind": "Method",
    "detail": "Function (# endif private : TPimplPtr<DerivedData::Private::FIoResponse> Response ; DerivedData::Private::FIoResponse ; } ; class FDerivedDataIoOptions { public :)",
    "insertText": "FDerivedDataIoOptions()"
  },
  {
    "label": "FDerivedDataIoOptions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FDerivedDataIoOptions(FMutableMemoryView TargetView, uint64 SourceOffset = 0) : Target(TargetView.GetData()) , Size(TargetView.GetSize()) , Offset(SourceOffset)"
  },
  {
    "label": "FDerivedDataIoOptions()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FDerivedDataIoOptions(uint64 SourceOffset, uint64 SourceSize = MAX_uint64) : Size(SourceSize) , Offset(SourceOffset)"
  },
  {
    "label": "GetTarget()",
    "kind": "Method",
    "detail": "Function (} void*)",
    "insertText": "GetTarget()"
  },
  {
    "label": "IsEmpty()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsEmpty()"
  },
  {
    "label": "Cache()",
    "kind": "Method",
    "detail": "Function (FDerivedDataIoRequest)",
    "insertText": "Cache(const FDerivedData& Data, const FDerivedDataIoOptions& Options = {})"
  },
  {
    "label": "Exists()",
    "kind": "Method",
    "detail": "Function (FDerivedDataIoRequest)",
    "insertText": "Exists(const FDerivedData& Data, const FDerivedDataIoOptions& Options = {})"
  },
  {
    "label": "Compress()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITORONLY_DATA FDerivedDataIoRequest)",
    "insertText": "Compress(const FDerivedData& Data)"
  },
  {
    "label": "Dispatch()",
    "kind": "Method",
    "detail": "Function (# endif void)",
    "insertText": "Dispatch(FDerivedDataIoResponse& OutResponse)"
  },
  {
    "label": "Dispatch()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Dispatch(FDerivedDataIoResponse& OutResponse, FDerivedDataIoPriority Priority)"
  },
  {
    "label": "Dispatch()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Dispatch(FDerivedDataIoResponse& OutResponse, FDerivedDataIoPriority Priority, FDerivedDataIoComplete&& OnComplete)"
  },
  {
    "label": "Dispatch()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Dispatch(FDerivedDataIoResponse& OutResponse, FDerivedDataIoComplete&& OnComplete)"
  },
  {
    "label": "GetTypeHash()",
    "kind": "Method",
    "detail": "Function (private : TPimplPtr<DerivedData::Private::FIoResponse> Response ; uint32)",
    "insertText": "GetTypeHash(const FDerivedDataIoPriority& Priority)"
  },
  {
    "label": "InitializeIoDispatcher()",
    "kind": "Method",
    "detail": "Function (} } ; } namespace UE::DerivedData::IoStore { void)",
    "insertText": "InitializeIoDispatcher()"
  },
  {
    "label": "TearDownIoDispatcher()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "TearDownIoDispatcher()"
  }
]