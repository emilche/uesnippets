[
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FScreenPassVS",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FScreenPassVS"
  },
  {
    "label": "FViewInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FViewInfo"
  },
  {
    "label": "FVirtualShadowMapArray",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVirtualShadowMapArray"
  },
  {
    "label": "FRasterResults",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRasterResults"
  },
  {
    "label": "FLumenSceneFrameTemporaries",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLumenSceneFrameTemporaries"
  },
  {
    "label": "FMobilePostProcessingInputs",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMobilePostProcessingInputs"
  },
  {
    "label": "IsPostProcessingEnabled()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" RenderGraphFwd . h \" # include \" RHIFwd . h \" # include \" TranslucentRendering . h \" # include \" PathTracing . h \" # include \" PostProcess / PostProcessInputs . h \" enum class EReflectionsMethod ; enum class EDiffuseIndirectMethod ; class FScreenPassVS ; class FViewInfo ; class FVirtualShadowMapArray ; namespace Nanite { struct FRasterResults ; } bool)",
    "insertText": "IsPostProcessingEnabled(const FViewInfo& View)"
  },
  {
    "label": "IsPostProcessingWithComputeEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsPostProcessingWithComputeEnabled(ERHIFeatureLevel::Type FeatureLevel)"
  },
  {
    "label": "IsPostProcessingWithAlphaChannelSupported()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsPostProcessingWithAlphaChannelSupported()"
  },
  {
    "label": "AddPostProcessingPasses()",
    "kind": "Method",
    "detail": "Function (using FPostProcessVS = FScreenPassVS ; void)",
    "insertText": "AddPostProcessingPasses(FRDGBuilder& GraphBuilder, const FViewInfo& View, int32 ViewIndex, FSceneUniformBuffer& SceneUniformBuffer, bool bAnyLumenActive, EDiffuseIndirectMethod DiffuseIndirectMethod, EReflectionsMethod ReflectionsMethod, const FPostProcessingInputs& Inputs, const Nanite::FRasterResults* NaniteRasterResults, FInstanceCullingManager& InstanceCullingManager, FVirtualShadowMapArray* VirtualShadowMapArray, struct FLumenSceneFrameTemporaries& LumenFrameTemporaries, const FSceneWithoutWaterTextures& SceneWithoutWaterTextures, FScreenPassTexture TSRFlickeringInput, FRDGTextureRef& InstancedEditorDepthTexture)"
  },
  {
    "label": "AddDebugViewPostProcessingPasses()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddDebugViewPostProcessingPasses(FRDGBuilder& GraphBuilder, const FViewInfo& View, FSceneUniformBuffer &SceneUniformBuffer, const FPostProcessingInputs& Inputs, const Nanite::FRasterResults* NaniteRasterResults)"
  },
  {
    "label": "AddVisualizeCalibrationMaterialPostProcessingPasses()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddVisualizeCalibrationMaterialPostProcessingPasses(FRDGBuilder& GraphBuilder, const FViewInfo& View, const FPostProcessingInputs& Inputs, const UMaterialInterface* InMaterialInterface)"
  },
  {
    "label": "Validate()",
    "kind": "Method",
    "detail": "Function (struct FMobilePostProcessingInputs { TRDGUniformBufferRef<FMobileSceneTextureUniformParameters> SceneTextures = nullptr ; FRDGTextureRef ViewFamilyTexture = nullptr ; FRDGTextureRef ViewFamilyDepthTexture = nullptr ; bool bRequiresMultiPass = false ; void)",
    "insertText": "Validate()"
  },
  {
    "label": "AddMobilePostProcessingPasses()",
    "kind": "Method",
    "detail": "Function (} } ; void)",
    "insertText": "AddMobilePostProcessingPasses(FRDGBuilder& GraphBuilder, FScene* Scene, const FViewInfo& View, int32 ViewIndex, FSceneUniformBuffer &SceneUniformBuffer, const FMobilePostProcessingInputs& Inputs, FInstanceCullingManager& InstanceCullingManager)"
  },
  {
    "label": "AddBasicPostProcessPasses()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddBasicPostProcessPasses(FRDGBuilder& GraphBuilder, const FViewInfo& View)"
  },
  {
    "label": "AddProcessPlanarReflectionPass()",
    "kind": "Method",
    "detail": "Function (FRDGTextureRef)",
    "insertText": "AddProcessPlanarReflectionPass(FRDGBuilder& GraphBuilder, const FViewInfo& View, FRDGTextureRef SceneColorTexture)"
  }
]