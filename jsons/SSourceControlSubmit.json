[
  {
    "label": "SMultiLineEditableTextBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SMultiLineEditableTextBox"
  },
  {
    "label": "SWindow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWindow"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "FChangeListDescription",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FChangeListDescription"
  },
  {
    "label": "SSourceControlSubmitWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SSourceControlSubmitWidget"
  },
  {
    "label": "SSourceControlSubmitListRow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SSourceControlSubmitListRow"
  },
  {
    "label": "TryToVirtualizeFilesToSubmit()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Layout / Visibility . h \" # include \" Input / Reply . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Widgets / SWidget . h \" # include \" Widgets / SCompoundWidget . h \" # include \" Widgets / Views / SListView . h \" # include \" Widgets / Views / STableViewBase . h \" # include \" Widgets / Views / STableRow . h \" # include \" ISourceControlState . h \" # include \" SSourceControlCommon . h \" class SMultiLineEditableTextBox ; class SWindow ; namespace ESubmitResults { enum Type { SUBMIT_ACCEPTED,SUBMIT_CANCELED,SUBMIT_SAVED,} ; } class FChangeListDescription { public : TArray<FString> FilesForAdd ; TArray<FString> FilesForSubmit ; FText Description ; } ; bool)",
    "insertText": "TryToVirtualizeFilesToSubmit(const TArray<FString>& FilesToSubmit, FText& Description, FText& OutFailureMsg)"
  },
  {
    "label": "DECLARE_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DELEGATE_OneParam(FSourceControlSaveChangelistDescription, const FText&)"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (class SSourceControlSubmitWidget : public SCompoundWidget { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SSourceControlSubmitWidget) : _ParentWindow() , _Items() , _Description() , _ChangeValidationResult() , _ChangeValidationWarnings() , _ChangeValidationErrors() , _AllowDescriptionChange(true) , _AllowUncheckFiles(true) , _AllowKeepCheckedOut(true) , _AllowSubmit(true) , _AllowSaveAndClose(false) , _AllowDiffAgainstDepot(true)"
  },
  {
    "label": "SLATE_ATTRIBUTE()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_ATTRIBUTE(TSharedPtr<SWindow>, ParentWindow) SLATE_ATTRIBUTE(TArray<FSourceControlStateRef>, Items) SLATE_ATTRIBUTE(FText, Description) SLATE_ATTRIBUTE(FString, ChangeValidationResult) SLATE_ATTRIBUTE(FString, ChangeValidationWarnings) SLATE_ATTRIBUTE(FString, ChangeValidationErrors) SLATE_ATTRIBUTE(bool, AllowDescriptionChange) SLATE_ATTRIBUTE(bool, AllowUncheckFiles) SLATE_ATTRIBUTE(bool, AllowKeepCheckedOut) SLATE_ATTRIBUTE(bool, AllowSubmit) SLATE_ATTRIBUTE(bool, AllowSaveAndClose) SLATE_ATTRIBUTE(bool, AllowDiffAgainstDepot) SLATE_END_ARGS() ~SSourceControlSubmitWidget()"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct(const FArguments& InArgs)"
  },
  {
    "label": "OnKeyDown()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnKeyDown(const FGeometry& MyGeometry, const FKeyEvent& InKeyEvent)"
  },
  {
    "label": "GetResult()",
    "kind": "Method",
    "detail": "Function (ESubmitResults::Type)",
    "insertText": "GetResult()"
  },
  {
    "label": "FillChangeListDescription()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FillChangeListDescription(FChangeListDescription& OutDesc)"
  },
  {
    "label": "WantToKeepCheckedOut()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "WantToKeepCheckedOut()"
  },
  {
    "label": "ClearChangeListDescription()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearChangeListDescription()"
  },
  {
    "label": "GetToggleSelectedState()",
    "kind": "Method",
    "detail": "Function (private : ECheckBoxState)",
    "insertText": "GetToggleSelectedState()"
  },
  {
    "label": "OnToggleSelectedCheckBox()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnToggleSelectedCheckBox(ECheckBoxState InNewState)"
  },
  {
    "label": "SubmitClicked()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "SubmitClicked()"
  },
  {
    "label": "CancelClicked()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "CancelClicked()"
  },
  {
    "label": "SaveAndCloseClicked()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "SaveAndCloseClicked()"
  },
  {
    "label": "IsSubmitEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsSubmitEnabled()"
  },
  {
    "label": "IsWarningPanelVisible()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "IsWarningPanelVisible()"
  },
  {
    "label": "OnCheckStateChanged_KeepCheckedOut()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnCheckStateChanged_KeepCheckedOut(ECheckBoxState InState)"
  },
  {
    "label": "GetKeepCheckedOut()",
    "kind": "Method",
    "detail": "Function (ECheckBoxState)",
    "insertText": "GetKeepCheckedOut()"
  },
  {
    "label": "CanCheckOut()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanCheckOut()"
  },
  {
    "label": "OnGenerateRowForList()",
    "kind": "Method",
    "detail": "Function (TSharedRef<ITableRow>)",
    "insertText": "OnGenerateRowForList(TSharedPtr<FFileTreeItem> SubmitItemData, const TSharedRef<STableViewBase>& OwnerTable)"
  },
  {
    "label": "GetColumnSortMode()",
    "kind": "Method",
    "detail": "Function (EColumnSortMode::Type)",
    "insertText": "GetColumnSortMode(const FName ColumnId)"
  },
  {
    "label": "OnColumnSortModeChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnColumnSortModeChanged(const EColumnSortPriority::Type SortPriority, const FName& ColumnId, const EColumnSortMode::Type InSortMode)"
  },
  {
    "label": "RequestSort()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RequestSort()"
  },
  {
    "label": "SortTree()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SortTree()"
  },
  {
    "label": "OnCreateContextMenu()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<SWidget>)",
    "insertText": "OnCreateContextMenu()"
  },
  {
    "label": "CanDiffAgainstDepot()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanDiffAgainstDepot()"
  },
  {
    "label": "OnDiffAgainstDepot()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDiffAgainstDepot()"
  },
  {
    "label": "OnDiffAgainstDepotSelected()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDiffAgainstDepotSelected(TSharedPtr<FFileTreeItem> InSelectedItem)"
  },
  {
    "label": "AllowRevert()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AllowRevert()"
  },
  {
    "label": "CanRevert()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanRevert()"
  },
  {
    "label": "OnRevert()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnRevert()"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (private : ESubmitResults::Type DialogResult ; TSharedPtr<SListView<TSharedPtr<FFileTreeItem>>> ListView ; TArray<TSharedPtr<FFileTreeItem>> ListViewItems ; TWeakPtr<SWindow> ParentFrame ; TSharedPtr<SMultiLineEditableTextBox> ChangeListDescriptionTextCtrl ; ECheckBoxState KeepCheckedOut ; bool bAllowSubmit ; bool bAllowDiffAgainstDepot ; FName SortByColumn ; EColumnSortMode::Type SortMode ; } ; class SSourceControlSubmitListRow : public SMultiColumnTableRow<TSharedPtr<FFileTreeItem>> { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SSourceControlSubmitListRow)"
  },
  {
    "label": "SLATE_ARGUMENT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_ARGUMENT(TSharedPtr<SSourceControlSubmitWidget>, SourceControlSubmitWidget) SLATE_ARGUMENT(TSharedPtr<FFileTreeItem>, Item) SLATE_END_ARGS() void Construct(const FArguments& InArgs, const TSharedRef<STableViewBase>& InOwnerTableView)"
  },
  {
    "label": "GenerateWidgetForColumn()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "GenerateWidgetForColumn(const FName& ColumnName)"
  }
]