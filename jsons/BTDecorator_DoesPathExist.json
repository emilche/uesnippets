[
  {
    "label": "UBehaviorTree",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBehaviorTree"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "UBTDecorator_DoesPathExist",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBTDecorator_DoesPathExist"
  },
  {
    "label": "UENUM()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" Templates / SubclassOf . h \" # if UE_ENABLE_INCLUDE_ORDER_DEPRECATED_IN_5_4 # include \" NavFilters / NavigationQueryFilter . h \" # endif # include \" BehaviorTree / BehaviorTreeTypes . h \" # include \" BehaviorTree / BTDecorator . h \" # include \" BehaviorTree / ValueOrBBKey . h \" # include \" NavFilters / NavigationQueryFilter . h \" # include \" BTDecorator_DoesPathExist . generated . h \" class UBehaviorTree ;)",
    "insertText": "UENUM()"
  },
  {
    "label": "UMETA()",
    "kind": "Method",
    "detail": "Function (enum Type : int { NavmeshRaycast2D)",
    "insertText": "UMETA(ToolTip = \"Really Fast\"), HierarchicalQuery UMETA(ToolTip = \"Fast\"), RegularPathFinding UMETA(ToolTip = \"Slow\")"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "UCLASS(MinimalAPI)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() protected: UPROPERTY(EditAnywhere, Category=Condition)"
  },
  {
    "label": "CalculateRawConditionValue()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CalculateRawConditionValue(UBehaviorTreeComponent& OwnerComp, uint8* NodeMemory)"
  },
  {
    "label": "GetStaticDescription()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetStaticDescription()"
  },
  {
    "label": "InitializeFromAsset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeFromAsset(UBehaviorTree& Asset)"
  },
  {
    "label": "GetNodeIconName()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR FName)",
    "insertText": "GetNodeIconName()"
  }
]