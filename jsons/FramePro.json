[
  {
    "label": "that",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "that"
  },
  {
    "label": "inherited",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "inherited"
  },
  {
    "label": "that",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "that"
  },
  {
    "label": "Enum",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Enum"
  },
  {
    "label": "ModulePacket",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ModulePacket"
  },
  {
    "label": "Enum",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Enum"
  },
  {
    "label": "Allocator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Allocator"
  },
  {
    "label": "ContextSwitch",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ContextSwitch"
  },
  {
    "label": "DynamicString",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DynamicString"
  },
  {
    "label": "ModulePacket",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ModulePacket"
  },
  {
    "label": "Array",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Array"
  },
  {
    "label": "Enum",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Enum"
  },
  {
    "label": "RelaxedAtomic",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RelaxedAtomic"
  },
  {
    "label": "Allocator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Allocator"
  },
  {
    "label": "CustomStatTimer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CustomStatTimer"
  },
  {
    "label": "Allocator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Allocator"
  },
  {
    "label": "TimerScope",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TimerScope"
  },
  {
    "label": "TimerScopeW",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TimerScopeW"
  },
  {
    "label": "ConditionalParentTimerScope",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ConditionalParentTimerScope"
  },
  {
    "label": "IdTimerScope",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IdTimerScope"
  },
  {
    "label": "StringLiteralNamedTimerScope",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "StringLiteralNamedTimerScope"
  },
  {
    "label": "ConditionalTimerScope",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ConditionalTimerScope"
  },
  {
    "label": "ConditionalTimerScopeId",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ConditionalTimerScopeId"
  },
  {
    "label": "ConditionalTimerScopeW",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ConditionalTimerScopeW"
  },
  {
    "label": "ConditionalBoolTimerScope",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ConditionalBoolTimerScope"
  },
  {
    "label": "ConditionalBoolTimerScopeId",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ConditionalBoolTimerScopeId"
  },
  {
    "label": "ConditionalBoolTimerScopeW",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ConditionalBoolTimerScopeW"
  },
  {
    "label": "StringLiteralNamedConditionalTimerScope",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "StringLiteralNamedConditionalTimerScope"
  },
  {
    "label": "CustomStatTimer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CustomStatTimer"
  },
  {
    "label": "CustomStatTimerScope",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CustomStatTimerScope"
  },
  {
    "label": "HiResTimerScope",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "HiResTimerScope"
  },
  {
    "label": "ThreadScope",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ThreadScope"
  },
  {
    "label": "WaitEventScope",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "WaitEventScope"
  },
  {
    "label": "Enum",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Enum"
  },
  {
    "label": "Enum",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Enum"
  },
  {
    "label": "ContextSwitch",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ContextSwitch"
  },
  {
    "label": "Array",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Array"
  },
  {
    "label": "FramePro_QueryPerformanceCounter()",
    "kind": "Method",
    "detail": "Function (__int64)",
    "insertText": "FramePro_QueryPerformanceCounter()"
  },
  {
    "label": "FramePro_QueryPerformanceCounter()",
    "kind": "Method",
    "detail": "Function (__int64)",
    "insertText": "FramePro_QueryPerformanceCounter()"
  },
  {
    "label": "FRAMEPRO_UNIQUE()",
    "kind": "Method",
    "detail": "Function (timespec)",
    "insertText": "FRAMEPRO_UNIQUE(ts)"
  },
  {
    "label": "FRAMEPRO_UNIQUE()",
    "kind": "Method",
    "detail": "Function (timespec)",
    "insertText": "FRAMEPRO_UNIQUE(ts)"
  },
  {
    "label": "GetTimerFrequency()",
    "kind": "Method",
    "detail": "Function (int64)",
    "insertText": "GetTimerFrequency()"
  },
  {
    "label": "DebugBreak()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DebugBreak()"
  },
  {
    "label": "GetCore()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "GetCore()"
  },
  {
    "label": "GetProcessName()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetProcessName(int process_id, char* p_name, int max_name_length)"
  },
  {
    "label": "GetPlatformEnum()",
    "kind": "Method",
    "detail": "Function (Platform::Enum)",
    "insertText": "GetPlatformEnum()"
  },
  {
    "label": "DestroyContextSwitchRecorder()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyContextSwitchRecorder(void* p_context_switch_recorder, Allocator* p_allocator)"
  },
  {
    "label": "StartRecordingContextSitches()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "StartRecordingContextSitches(void* p_context_switch_recorder, ContextSwitchCallbackFunction p_callback, void* p_context, DynamicString& error, Allocator* p_allocator)"
  },
  {
    "label": "StopRecordingContextSitches()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StopRecordingContextSitches(void* p_context_switch_recorder)"
  },
  {
    "label": "FlushContextSwitches()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FlushContextSwitches(void* p_context_switch_recorder)"
  },
  {
    "label": "EnumerateModules()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnumerateModules(Array<ModulePacket*>& module_packets, Allocator* p_allocator)"
  },
  {
    "label": "GetStackTrace()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetStackTrace(void** stack, int& stack_size, unsigned int& hash)"
  },
  {
    "label": "GetCurrentThreadId()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "GetCurrentThreadId()"
  },
  {
    "label": "DebugWrite()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DebugWrite(const char* p_string)"
  },
  {
    "label": "GetLocalTime()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetLocalTime(tm* p_tm, const time_t *p_time)"
  },
  {
    "label": "GetCurrentProcessId()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "GetCurrentProcessId()"
  },
  {
    "label": "VSPrintf()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "VSPrintf(char* p_buffer, size_t const buffer_size, const char* p_format, va_list arg_list)"
  },
  {
    "label": "ToString()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ToString(int value, char* p_dest, int dest_size)"
  },
  {
    "label": "CreateLock()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateLock(void* p_os_lock_mem, int os_lock_mem_size)"
  },
  {
    "label": "DestroyLock()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyLock(void* p_os_lock_mem)"
  },
  {
    "label": "TakeLock()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TakeLock(void* p_os_lock_mem)"
  },
  {
    "label": "ReleaseLock()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseLock(void* p_os_lock_mem)"
  },
  {
    "label": "CreateEventX()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateEventX(void* p_os_event_mem, int os_event_mem_size, bool initial_state, bool auto_reset)"
  },
  {
    "label": "DestroyEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyEvent(void* p_os_event_mem)"
  },
  {
    "label": "SetEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetEvent(void* p_os_event_mem)"
  },
  {
    "label": "ResetEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetEvent(void* p_os_event_mem)"
  },
  {
    "label": "WaitEvent()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "WaitEvent(void* p_os_event_mem, int timeout)"
  },
  {
    "label": "InitialiseSocketSystem()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "InitialiseSocketSystem()"
  },
  {
    "label": "UninitialiseSocketSystem()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UninitialiseSocketSystem()"
  },
  {
    "label": "CreateSocket()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateSocket(void* p_os_socket_mem, int os_socket_mem_size)"
  },
  {
    "label": "DestroySocket()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroySocket(void* p_os_socket_mem)"
  },
  {
    "label": "DisconnectSocket()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DisconnectSocket(void* p_os_socket_mem, bool stop_listening)"
  },
  {
    "label": "StartSocketListening()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "StartSocketListening(void* p_os_socket_mem)"
  },
  {
    "label": "BindSocket()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "BindSocket(void* p_os_socket_mem, const char* p_port)"
  },
  {
    "label": "AcceptSocket()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AcceptSocket(void* p_source_os_socket_mem, void* p_target_os_socket_mem)"
  },
  {
    "label": "SocketSend()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SocketSend(void* p_os_socket_mem, const void* p_buffer, int size, int& bytes_sent)"
  },
  {
    "label": "SocketReceive()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SocketReceive(void* p_os_socket_mem, const void* p_buffer, int size, int& bytes_received)"
  },
  {
    "label": "IsSocketValid()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsSocketValid(const void* p_os_socket_mem)"
  },
  {
    "label": "HandleSocketError()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleSocketError()"
  },
  {
    "label": "CreateThread()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CreateThread(\n\t\t\tvoid* p_os_thread_mem,\n\t\t\tint os_thread_mem_size,\n\t\t\tThreadMain p_thread_main,\n\t\t\tvoid* p_context,\n\t\t\tAllocator* p_allocator)"
  },
  {
    "label": "DestroyThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyThread(void* p_os_thread_mem)"
  },
  {
    "label": "SetThreadPriority()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetThreadPriority(void* p_os_thread_mem, int priority)"
  },
  {
    "label": "SetThreadAffinity()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetThreadAffinity(void* p_os_thread_mem, int affinity)"
  },
  {
    "label": "OpenFileForRead()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "OpenFileForRead(void* p_os_file_mem, int os_file_mem_size, const char* p_filename)"
  },
  {
    "label": "OpenFileForRead()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "OpenFileForRead(void* p_os_file_mem, int os_file_mem_size, const wchar_t* p_filename)"
  },
  {
    "label": "OpenFileForWrite()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "OpenFileForWrite(void* p_os_file_mem, int os_file_mem_size, const char* p_filename)"
  },
  {
    "label": "OpenFileForWrite()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "OpenFileForWrite(void* p_os_file_mem, int os_file_mem_size, const wchar_t* p_filename)"
  },
  {
    "label": "CloseFile()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CloseFile(void* p_os_file_mem)"
  },
  {
    "label": "ReadFromFile()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReadFromFile(void* p_os_file_mem, void* p_data, size_t size)"
  },
  {
    "label": "WriteToFile()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WriteToFile(void* p_os_file_mem, const void* p_data, size_t size)"
  },
  {
    "label": "GetFileSize()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "GetFileSize(const void* p_os_file_mem)"
  },
  {
    "label": "AllocateTLSSlot()",
    "kind": "Method",
    "detail": "Function (uint)",
    "insertText": "AllocateTLSSlot()"
  },
  {
    "label": "SetTLSValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTLSValue(uint slot, void* p_value)"
  },
  {
    "label": "GetRecordingFolder()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetRecordingFolder(char* p_path, int max_path_length)"
  },
  {
    "label": "DebugBreak()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DebugBreak()"
  },
  {
    "label": "Shutdown()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Shutdown()"
  },
  {
    "label": "SetPort()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPort(int port)"
  },
  {
    "label": "DebugBreak()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DebugBreak()"
  },
  {
    "label": "SendSessionInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SendSessionInfo(const char* p_name, const char* p_value)"
  },
  {
    "label": "SendSessionInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SendSessionInfo(const wchar_t* p_name, const wchar_t* p_value)"
  },
  {
    "label": "SetAllocator()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAllocator(class Allocator* p_allocator)"
  },
  {
    "label": "FrameStart()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FrameStart()"
  },
  {
    "label": "AddTimeSpan()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddTimeSpan(const char* p_name_file_and_line, int64 start_time, int64 end_time)"
  },
  {
    "label": "AddTimeSpan()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddTimeSpan(const wchar_t* p_name_file_and_line, int64 start_time, int64 end_time)"
  },
  {
    "label": "AddTimeSpan()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddTimeSpan(const char* p_name, const char* p_file_and_line, int64 start_time, int64 end_time)"
  },
  {
    "label": "AddTimeSpan()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddTimeSpan(StringId name_id, const char* p_file_and_line, int64 start_time, int64 end_time)"
  },
  {
    "label": "AddTimeSpan()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddTimeSpan(StringId name_id, const char* p_file_and_line, int64 start_time, int64 end_time, int thread_id, int core)"
  },
  {
    "label": "AddCustomStat()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddCustomStat(const char* p_name, int value, const char* p_graph, const char* p_unit, uint colour)"
  },
  {
    "label": "AddCustomStat()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddCustomStat(const char* p_name, int64 value, const char* p_graph, const char* p_unit, uint colour)"
  },
  {
    "label": "AddCustomStat()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddCustomStat(const char* p_name, float value, const char* p_graph, const char* p_unit, uint colour)"
  },
  {
    "label": "AddCustomStat()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddCustomStat(const char* p_name, double value, const char* p_graph, const char* p_unit, uint colour)"
  },
  {
    "label": "AddCustomStat()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddCustomStat(const wchar_t* p_name, int value, const wchar_t* p_graph, const wchar_t* p_unit, uint colour)"
  },
  {
    "label": "AddCustomStat()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddCustomStat(const wchar_t* p_name, int64 value, const wchar_t* p_graph, const wchar_t* p_unit, uint colour)"
  },
  {
    "label": "AddCustomStat()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddCustomStat(const wchar_t* p_name, float value, const wchar_t* p_graph, const wchar_t* p_unit, uint colour)"
  },
  {
    "label": "AddCustomStat()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddCustomStat(const wchar_t* p_name, double value, const wchar_t* p_graph, const wchar_t* p_unit, uint colour)"
  },
  {
    "label": "AddCustomStat()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddCustomStat(StringId name, int value, const char* p_graph, const char* p_unit, uint colour)"
  },
  {
    "label": "AddCustomStat()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddCustomStat(StringId name, int64 value, const char* p_graph, const char* p_unit, uint colour)"
  },
  {
    "label": "AddCustomStat()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddCustomStat(StringId name, float value, const char* p_graph, const char* p_unit, uint colour)"
  },
  {
    "label": "AddCustomStat()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddCustomStat(StringId name, double value, const char* p_graph, const char* p_unit, uint colour)"
  },
  {
    "label": "AddCustomStat()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddCustomStat(StringId name, int value, const wchar_t* p_graph, const wchar_t* p_unit, uint colour)"
  },
  {
    "label": "AddCustomStat()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddCustomStat(StringId name, int64 value, const wchar_t* p_graph, const wchar_t* p_unit, uint colour)"
  },
  {
    "label": "AddCustomStat()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddCustomStat(StringId name, float value, const wchar_t* p_graph, const wchar_t* p_unit, uint colour)"
  },
  {
    "label": "AddCustomStat()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddCustomStat(StringId name, double value, const wchar_t* p_graph, const wchar_t* p_unit, uint colour)"
  },
  {
    "label": "AddCustomStat()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddCustomStat(StringId name, int value, StringId graph, StringId unit, uint colour)"
  },
  {
    "label": "AddCustomStat()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddCustomStat(StringId name, int64 value, StringId graph, StringId unit, uint colour)"
  },
  {
    "label": "AddCustomStat()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddCustomStat(StringId name, float value, StringId graph, StringId unit, uint colour)"
  },
  {
    "label": "AddCustomStat()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddCustomStat(StringId name, double value, StringId graph, StringId unit, uint colour)"
  },
  {
    "label": "AddEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddEvent(const char* p_name, uint colour)"
  },
  {
    "label": "AddWaitEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddWaitEvent(int64 event_id, int64 start_time, int start_core, int64 end_time, int end_core)"
  },
  {
    "label": "TriggerWaitEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TriggerWaitEvent(int64 event_id)"
  },
  {
    "label": "SetThreadName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetThreadName(const char* p_name)"
  },
  {
    "label": "SetThreadName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetThreadName(int thread_id, const char* p_name)"
  },
  {
    "label": "SetThreadOrder()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetThreadOrder(StringId thread_name)"
  },
  {
    "label": "RegisterString()",
    "kind": "Method",
    "detail": "Function (StringId)",
    "insertText": "RegisterString(const char* p_str)"
  },
  {
    "label": "RegisterString()",
    "kind": "Method",
    "detail": "Function (StringId)",
    "insertText": "RegisterString(const wchar_t* p_str)"
  },
  {
    "label": "RegisterConnectionChangedCallback()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterConnectionChangedCallback(ConnectionChangedCallback p_callback, void* p_context)"
  },
  {
    "label": "UnregisterConnectionChangedcallback()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterConnectionChangedcallback(ConnectionChangedCallback p_callback)"
  },
  {
    "label": "StartRecording()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StartRecording(const char* p_filename, bool context_switches, bool callstacks, int64 max_file_size)"
  },
  {
    "label": "StartRecording()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StartRecording(const wchar_t* p_filename, bool context_switches, bool callstacks, int64 max_file_size)"
  },
  {
    "label": "StopRecording()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StopRecording()"
  },
  {
    "label": "SetThreadPriority()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetThreadPriority(int priority)"
  },
  {
    "label": "SetThreadAffinity()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetThreadAffinity(int affinity)"
  },
  {
    "label": "BlockSockets()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BlockSockets()"
  },
  {
    "label": "UnblockSockets()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnblockSockets()"
  },
  {
    "label": "AddCustomStatTimer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddCustomStatTimer(class CustomStatTimer* p_timer)"
  },
  {
    "label": "CleanupThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CleanupThread()"
  },
  {
    "label": "PushConditionalParentScope()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PushConditionalParentScope(const char* p_name, int64 pre_duration, int64 post_duration)"
  },
  {
    "label": "PopConditionalParentScope()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PopConditionalParentScope(bool add_children)"
  },
  {
    "label": "CallConditionalParentScopeCallback()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CallConditionalParentScopeCallback(ConditionalParentScopeCallback p_callback, const char* p_name, int64 start_time, int64 end_time)"
  },
  {
    "label": "StartHiResTimer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StartHiResTimer(const char* p_name)"
  },
  {
    "label": "StopHiResTimer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StopHiResTimer()"
  },
  {
    "label": "Log()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Log(const char* p_message)"
  },
  {
    "label": "SetScopeCustomStat()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetScopeCustomStat(const char* p_name, int value, const char* p_graph, const char* p_unit, uint colour)"
  },
  {
    "label": "SetScopeCustomStat()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetScopeCustomStat(const wchar_t* p_name, int value, const wchar_t* p_graph, const wchar_t* p_unit, uint colour)"
  },
  {
    "label": "SetScopeCustomStat()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetScopeCustomStat(StringId name, int value, StringId graph, StringId unit, uint colour)"
  },
  {
    "label": "SetScopeCustomStat()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetScopeCustomStat(const char* p_name, int64 value, const char* p_graph, const char* p_unit, uint colour)"
  },
  {
    "label": "SetScopeCustomStat()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetScopeCustomStat(const wchar_t* p_name, int64 value, const wchar_t* p_graph, const wchar_t* p_unit, uint colour)"
  },
  {
    "label": "SetScopeCustomStat()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetScopeCustomStat(StringId name, int64 value, StringId graph, StringId unit, uint colour)"
  },
  {
    "label": "SetScopeCustomStat()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetScopeCustomStat(const char* p_name, float value, const char* p_graph, const char* p_unit, uint colour)"
  },
  {
    "label": "SetScopeCustomStat()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetScopeCustomStat(const wchar_t* p_name, float value, const wchar_t* p_graph, const wchar_t* p_unit, uint colour)"
  },
  {
    "label": "SetScopeCustomStat()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetScopeCustomStat(StringId name, float value, StringId graph, StringId unit, uint colour)"
  },
  {
    "label": "SetScopeCustomStat()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetScopeCustomStat(const char* p_name, double value, const char* p_graph, const char* p_unit, uint colour)"
  },
  {
    "label": "SetScopeCustomStat()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetScopeCustomStat(const wchar_t* p_name, double value, const wchar_t* p_graph, const wchar_t* p_unit, uint colour)"
  },
  {
    "label": "SetScopeCustomStat()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetScopeCustomStat(StringId name, double value, StringId graph, StringId unit, uint colour)"
  },
  {
    "label": "SetConditionalScopeMinTimeInMicroseconds()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetConditionalScopeMinTimeInMicroseconds(int64 value)"
  },
  {
    "label": "SetScopeColour()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetScopeColour(StringId name, uint colour)"
  },
  {
    "label": "SetCustomStatGraph()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCustomStatGraph(StringId name, StringId graph)"
  },
  {
    "label": "SetCustomStatUnit()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCustomStatUnit(StringId name, StringId unit)"
  },
  {
    "label": "SetCustomStatColour()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCustomStatColour(StringId name, uint colour)"
  },
  {
    "label": "SendScopeCallstack()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SendScopeCallstack()"
  },
  {
    "label": "GetCore()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "GetCore()"
  },
  {
    "label": "StartScope()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StartScope()"
  },
  {
    "label": "StopScope()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StopScope()"
  },
  {
    "label": "CustomStatTimerScope()",
    "kind": "Method",
    "detail": "Function (private:)",
    "insertText": "CustomStatTimerScope(const CustomStatTimerScope&)"
  }
]