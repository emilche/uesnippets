[
  {
    "label": "FakeSctpTransport",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FakeSctpTransport"
  },
  {
    "label": "FakeSctpTransportFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FakeSctpTransportFactory"
  },
  {
    "label": "SetOnConnectedCallback()",
    "kind": "Method",
    "detail": "Function (# ifndef TEST_PC_SCTP_FAKE_SCTP_TRANSPORT_H_ # define TEST_PC_SCTP_FAKE_SCTP_TRANSPORT_H_ # include<memory> # include \" api / transport / sctp_transport_factory_interface . h \" # include \" media / sctp / sctp_transport_internal . h \" class FakeSctpTransport : public cricket::SctpTransportInternal { public : void)",
    "insertText": "SetOnConnectedCallback(std::function<void()> callback)"
  },
  {
    "label": "SetDataChannelSink()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetDataChannelSink(webrtc::DataChannelSink* sink)"
  },
  {
    "label": "SetDtlsTransport()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetDtlsTransport(rtc::PacketTransportInternal* transport)"
  },
  {
    "label": "Start()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "Start(int local_port, int remote_port, int max_message_size)"
  },
  {
    "label": "emplace()",
    "kind": "Method",
    "detail": "Function (local_port_ .)",
    "insertText": "emplace(local_port)"
  },
  {
    "label": "emplace()",
    "kind": "Method",
    "detail": "Function (remote_port_ .)",
    "insertText": "emplace(remote_port)"
  },
  {
    "label": "OpenStream()",
    "kind": "Method",
    "detail": "Function (max_message_size_ = max_message_size ; return true ; } bool)",
    "insertText": "OpenStream(int sid)"
  },
  {
    "label": "max_message_size()",
    "kind": "Method",
    "detail": "Function (} int)",
    "insertText": "max_message_size()"
  },
  {
    "label": "RTC_DCHECK()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RTC_DCHECK(local_port_)"
  },
  {
    "label": "RTC_DCHECK()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RTC_DCHECK(remote_port_)"
  },
  {
    "label": "FakeSctpTransport()",
    "kind": "Method",
    "detail": "Function (last_fake_sctp_transport_ = new)",
    "insertText": "FakeSctpTransport()"
  },
  {
    "label": "last_fake_sctp_transport()",
    "kind": "Method",
    "detail": "Function (} FakeSctpTransport*)",
    "insertText": "last_fake_sctp_transport()"
  }
]