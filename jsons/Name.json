[
  {
    "label": "readString()",
    "kind": "Method",
    "detail": "Function (# ifndef OPENVDB_UTIL_NAME_HAS_BEEN_INCLUDED # define OPENVDB_UTIL_NAME_HAS_BEEN_INCLUDED # include<openvdb / Platform . h> # include<openvdb / version . h> # include<string> # include<iostream> # include<vector> namespace openvdb { OPENVDB_USE_VERSION_NAMESPACE namespace OPENVDB_VERSION_NAME { typedef std::string Name ; Name)",
    "insertText": "readString(std::istream& is)"
  },
  {
    "label": "read()",
    "kind": "Method",
    "detail": "Function (uint32_t size ; is .)",
    "insertText": "read(reinterpret_cast<char*>(&size), sizeof(uint32_t))"
  },
  {
    "label": "buffer()",
    "kind": "Method",
    "detail": "Function (std::string)",
    "insertText": "buffer(size, ' ')"
  },
  {
    "label": "uint32_t()",
    "kind": "Method",
    "detail": "Function (uint32_t size =)",
    "insertText": "uint32_t(name.size())"
  },
  {
    "label": "write()",
    "kind": "Method",
    "detail": "Function (os .)",
    "insertText": "write(reinterpret_cast<char*>(&size), sizeof(uint32_t))"
  },
  {
    "label": "write()",
    "kind": "Method",
    "detail": "Function (os .)",
    "insertText": "write(&name[0], size)"
  }
]