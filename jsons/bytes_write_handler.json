[
  {
    "label": "BytesWriteHandler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BytesWriteHandler"
  },
  {
    "label": "BytesWriteHandler()",
    "kind": "Method",
    "detail": "Function (# ifndef CEF_TESTS_CEFCLIENT_BROWSER_BYTES_WRITE_HANDLER_H_ # define CEF_TESTS_CEFCLIENT_BROWSER_BYTES_WRITE_HANDLER_H_ # pragma once # include \" include / base / cef_lock . h \" # include \" include / cef_stream . h \" namespace client { class BytesWriteHandler : public CefWriteHandler { public :)",
    "insertText": "BytesWriteHandler(size_t grow)"
  },
  {
    "label": "BytesWriteHandler()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "BytesWriteHandler()"
  },
  {
    "label": "Write()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "Write(const void* ptr, size_t size, size_t n)"
  },
  {
    "label": "Seek()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "Seek(int64 offset, int whence)"
  },
  {
    "label": "Tell()",
    "kind": "Method",
    "detail": "Function (int64)",
    "insertText": "Tell()"
  },
  {
    "label": "Flush()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "Flush()"
  },
  {
    "label": "MayBlock()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "MayBlock()"
  },
  {
    "label": "IMPLEMENT_REFCOUNTING()",
    "kind": "Method",
    "detail": "Function (size_t grow_ ; void* data_ ; int64 datasize_ ; int64 offset_ ; base::Lock lock_ ;)",
    "insertText": "IMPLEMENT_REFCOUNTING(BytesWriteHandler)"
  },
  {
    "label": "DISALLOW_COPY_AND_ASSIGN()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DISALLOW_COPY_AND_ASSIGN(BytesWriteHandler)"
  }
]