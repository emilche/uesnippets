[
  {
    "label": "FVideoDecoderVP8",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVideoDecoderVP8"
  },
  {
    "label": "Register()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" VideoDecoderFactory . h \" namespace AVEncoder { PRAGMA_DISABLE_DEPRECATION_WARNINGS class FVideoDecoderVP8 : public FVideoDecoder PRAGMA_ENABLE_DEPRECATION_WARNINGS { public : PRAGMA_DISABLE_DEPRECATION_WARNINGS void)",
    "insertText": "Register(FVideoDecoderFactory& InFactory)"
  },
  {
    "label": "Setup()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Setup(const FInit& InInit)"
  },
  {
    "label": "Decode()",
    "kind": "Method",
    "detail": "Function (EDecodeResult)",
    "insertText": "Decode(const FVideoDecoderInput* InInput)"
  },
  {
    "label": "Shutdown()",
    "kind": "Method",
    "detail": "Function (PRAGMA_ENABLE_DEPRECATION_WARNINGS void)",
    "insertText": "Shutdown()"
  },
  {
    "label": "FVideoDecoderVP8()",
    "kind": "Method",
    "detail": "Function (protected : ~)",
    "insertText": "FVideoDecoderVP8()"
  }
]