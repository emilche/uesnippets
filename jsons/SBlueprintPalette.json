[
  {
    "label": "FBlueprintEditor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBlueprintEditor"
  },
  {
    "label": "FDragDropEvent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDragDropEvent"
  },
  {
    "label": "SSplitter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SSplitter"
  },
  {
    "label": "SToolTip",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SToolTip"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "UBlueprint",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBlueprint"
  },
  {
    "label": "FCreateWidgetForActionData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCreateWidgetForActionData"
  },
  {
    "label": "FGeometry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGeometry"
  },
  {
    "label": "SBlueprintPaletteItem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SBlueprintPaletteItem"
  },
  {
    "label": "SBlueprintPalette",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SBlueprintPalette"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" EdGraph / EdGraphNodeUtils . h \" # include \" Internationalization / Text . h \" # include \" Misc / Attribute . h \" # include \" SGraphPalette . h \" # include \" Templates / SharedPointer . h \" # include \" Types / SlateEnums . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Widgets / SCompoundWidget . h \" class FBlueprintEditor ; class FDragDropEvent ; class SSplitter ; class SToolTip ; class SWidget ; class UBlueprint ; struct FCreateWidgetForActionData ; struct FGeometry ; class SBlueprintPaletteItem : public SGraphPaletteItem { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SBlueprintPaletteItem ) : _ShowClassInTooltip(false)"
  },
  {
    "label": "SLATE_ARGUMENT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_ARGUMENT(bool, ShowClassInTooltip) SLATE_END_ARGS() void Construct(const FArguments& InArgs, FCreateWidgetForActionData* const InCreateData, TWeakPtr<FBlueprintEditor> InBlueprintEditor)"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct(const FArguments& InArgs, FCreateWidgetForActionData* const InCreateData, UBlueprint* InBlueprint)"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "Construct(const FArguments& InArgs, FCreateWidgetForActionData* const InCreateData, UBlueprint* InBlueprint, TWeakPtr<FBlueprintEditor> InBlueprintEditor)"
  },
  {
    "label": "OnDragEnter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDragEnter(const FGeometry& MyGeometry, const FDragDropEvent& DragDropEvent)"
  },
  {
    "label": "CreateTextSlotWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "CreateTextSlotWidget(FCreateWidgetForActionData* const InCreateData, TAttribute<bool> bIsReadOnly)"
  },
  {
    "label": "GetDisplayText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetDisplayText()"
  },
  {
    "label": "OnNameTextVerifyChanged()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "OnNameTextVerifyChanged(const FText& InNewText, FText& OutErrorMessage)"
  },
  {
    "label": "OnNameTextCommitted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnNameTextCommitted(const FText& NewText, ETextCommit::Type InTextCommit)"
  },
  {
    "label": "ConstructToolTipWidget()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<SToolTip>)",
    "insertText": "ConstructToolTipWidget()"
  },
  {
    "label": "GetToolTipText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetToolTipText()"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (private : bool bShowClassInTooltip ; UBlueprint* Blueprint ; TWeakPtr<FBlueprintEditor> BlueprintEditorPtr ; FNodeTextCache MenuDescriptionCache ; } ; class SBlueprintPalette : public SCompoundWidget { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SBlueprintPalette)"
  },
  {
    "label": "SLATE_END_ARGS()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "SLATE_END_ARGS() void Construct(const FArguments& InArgs, TWeakPtr<FBlueprintEditor> InBlueprintEditor)"
  },
  {
    "label": "OnSplitterResized()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "OnSplitterResized()"
  }
]