[
  {
    "label": "FLinuxPlatformProperties",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLinuxPlatformProperties"
  },
  {
    "label": "HasEditorOnlyData()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" GenericPlatform / GenericPlatformProperties . h \" template<bool HAS_EDITOR_DATA,bool IS_DEDICATED_SERVER,bool IS_CLIENT_ONLY,bool IS_ARM64> struct FLinuxPlatformProperties : public FGenericPlatformProperties { bool)",
    "insertText": "HasEditorOnlyData()"
  },
  {
    "label": "IsGameOnly()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsGameOnly()"
  },
  {
    "label": "SupportsMultipleGameInstances()",
    "kind": "Method",
    "detail": "Function (# if PLATFORM_WINDOWS return true ; # else return false ; # endif } bool)",
    "insertText": "SupportsMultipleGameInstances()"
  },
  {
    "label": "SupportsVirtualTextureStreaming()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "SupportsVirtualTextureStreaming()"
  }
]