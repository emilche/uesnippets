[
  {
    "label": "FCreateReplicationProtocolParameters",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCreateReplicationProtocolParameters"
  },
  {
    "label": "FReplicationProtocolManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FReplicationProtocolManager"
  },
  {
    "label": "FRegisteredProtocolInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRegisteredProtocolInfo"
  },
  {
    "label": "FReplicationProtocolManager()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" Containers / Map . h \" # include \" Iris / ReplicationState / ReplicationStateDescriptor . h \" # include \" Iris / ReplicationSystem / ReplicationFragment . h \" # include \" Iris / ReplicationSystem / ReplicationProtocol . h \" namespace UE::Net::Private { struct FCreateReplicationProtocolParameters { const UObject* ArchetypeOrCDOUsedAsKey = nullptr ; bool bValidateProtocolId = false ; int32 TypeStatsIndex = INDEX_NONE ; } ; class FReplicationProtocolManager { public : ~)",
    "insertText": "FReplicationProtocolManager()"
  },
  {
    "label": "CreateReplicationProtocol()",
    "kind": "Method",
    "detail": "Function (const FReplicationProtocol*)",
    "insertText": "CreateReplicationProtocol(const FReplicationProtocolIdentifier ProtocolId, const FReplicationFragments& Fragments, const TCHAR* DebugName, const FCreateReplicationProtocolParameters& Params = FCreateReplicationProtocolParameters())"
  },
  {
    "label": "GetReplicationProtocol()",
    "kind": "Method",
    "detail": "Function (const FReplicationProtocol*)",
    "insertText": "GetReplicationProtocol(FReplicationProtocolIdentifier ProtocolId, const UObject* ArchetypeOrCDOUsedAsKey = nullptr)"
  },
  {
    "label": "ForEachProtocol()",
    "kind": "Method",
    "detail": "Function (template<T> void)",
    "insertText": "ForEachProtocol(FReplicationProtocolIdentifier ProtocolId, T&& Functor)"
  },
  {
    "label": "ForEachProtocol()",
    "kind": "Method",
    "detail": "Function (template<T> void)",
    "insertText": "ForEachProtocol(T&& Functor)"
  },
  {
    "label": "DestroyReplicationProtocol()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyReplicationProtocol(const FReplicationProtocol* ReplicationProtocol)"
  },
  {
    "label": "CreateInstanceProtocol()",
    "kind": "Method",
    "detail": "Function (FReplicationInstanceProtocol*)",
    "insertText": "CreateInstanceProtocol(const FReplicationFragments& Fragments)"
  },
  {
    "label": "DestroyInstanceProtocol()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyInstanceProtocol(FReplicationInstanceProtocol*)"
  },
  {
    "label": "InvalidateDescriptor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InvalidateDescriptor(const FReplicationStateDescriptor* InvalidatedReplicationStateDescriptor)"
  },
  {
    "label": "CalculateProtocolIdentifier()",
    "kind": "Method",
    "detail": "Function (public : FReplicationProtocolIdentifier)",
    "insertText": "CalculateProtocolIdentifier(const FReplicationFragments& Fragments)"
  },
  {
    "label": "ValidateReplicationProtocol()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ValidateReplicationProtocol(const FReplicationProtocol*, const FReplicationFragments& Fragments, bool bLogFragmentErrors=true)"
  },
  {
    "label": "FragmentListToString()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FragmentListToString(FStringBuilderBase& StringBuilder, const FReplicationFragments& Fragments)"
  },
  {
    "label": "InternalDestroyReplicationProtocol()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "InternalDestroyReplicationProtocol(const FReplicationProtocol* Protocol)"
  },
  {
    "label": "InternalDeferDestroyReplicationProtocol()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InternalDeferDestroyReplicationProtocol(const FReplicationProtocol* Protocol)"
  },
  {
    "label": "PruneProtocolsPendingDestroy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PruneProtocolsPendingDestroy()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (struct FRegisteredProtocolInfo { const FReplicationProtocol* Protocol ; const UObject* ArchetypeOrCDOUsedAsKey ; bool)",
    "insertText": "operator(const FRegisteredProtocolInfo& Other)"
  },
  {
    "label": "Value()",
    "kind": "Method",
    "detail": "Function (const FRegisteredProtocolInfo& Info = It .)",
    "insertText": "Value()"
  },
  {
    "label": "Functor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Functor(Info.Protocol, Info.ArchetypeOrCDOUsedAsKey)"
  }
]