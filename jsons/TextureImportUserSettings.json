[
  {
    "label": "FPropertyChangedEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPropertyChangedEvent"
  },
  {
    "label": "UTextureImportUserSettings",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UTextureImportUserSettings"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" Engine / EngineTypes . h \" # include \" Engine / DeveloperSettings . h \" # include \" Engine / TextureDefines . h \" # include \" TextureImportSettings . h \" # include \" TextureImportUserSettings . generated . h \" struct FPropertyChangedEvent ;)",
    "insertText": "UCLASS(config = EditorPerProjectUserSettings, meta=(DisplayName=\"Texture Import\"), MinimalAPI)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() public: UPROPERTY(config, EditAnywhere, Category=ImportSettings, meta = ( DisplayName = \"When to infill RGB in transparent white PNG\", ToolTip = \"Whether to perform infill only for binary transparency, always, or never. If set to 'default', uses global project setting.\"))"
  },
  {
    "label": "GetPNGInfillSetting()",
    "kind": "Method",
    "detail": "Function (} ; namespace UE::TextureUtilitiesCommon { ETextureImportPNGInfill)",
    "insertText": "GetPNGInfillSetting()"
  }
]