[
  {
    "label": "IMRMesh",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IMRMesh"
  },
  {
    "label": "FBaseMeshReconstructorModule",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBaseMeshReconstructorModule"
  },
  {
    "label": "GetModularFeatureName()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Modules / ModuleInterface . h \" # include \" Features / IModularFeatures . h \" # include \" Features / IModularFeature . h \" class IMRMesh ; class FBaseMeshReconstructorModule : public IModuleInterface,public IModularFeature { public : FName)",
    "insertText": "GetModularFeatureName()"
  },
  {
    "label": "FName()",
    "kind": "Method",
    "detail": "Function (const FName ModularFeatureName =)",
    "insertText": "FName(TEXT(\"MeshReconstructor\"))"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (TArray<FBaseMeshReconstructorModule*> MeshReconstructors =)",
    "insertText": "Get().GetModularFeatureImplementations<FBaseMeshReconstructorModule>(GetModularFeatureName())"
  },
  {
    "label": "StartupModule()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "StartupModule()"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Get().RegisterModularFeature(GetModularFeatureName(), this)"
  }
]