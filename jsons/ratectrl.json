[
  {
    "label": "vp8_save_coding_context()",
    "kind": "Method",
    "detail": "Function (# ifndef VPX_VP8_ENCODER_RATECTRL_H_ # define VPX_VP8_ENCODER_RATECTRL_H_ # include \" onyx_int . h \" # ifdef __cplusplus \" C \" { # endif void)",
    "insertText": "vp8_save_coding_context(VP8_COMP *cpi)"
  },
  {
    "label": "vp8_restore_coding_context()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vp8_restore_coding_context(VP8_COMP *cpi)"
  },
  {
    "label": "vp8_setup_key_frame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vp8_setup_key_frame(VP8_COMP *cpi)"
  },
  {
    "label": "vp8_update_rate_correction_factors()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vp8_update_rate_correction_factors(VP8_COMP *cpi, int damp_var)"
  },
  {
    "label": "vp8_regulate_q()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "vp8_regulate_q(VP8_COMP *cpi, int target_bits_per_frame)"
  },
  {
    "label": "vp8_adjust_key_frame_context()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vp8_adjust_key_frame_context(VP8_COMP *cpi)"
  },
  {
    "label": "vp8_compute_frame_size_bounds()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vp8_compute_frame_size_bounds(VP8_COMP *cpi, int *frame_under_shoot_limit, int *frame_over_shoot_limit)"
  },
  {
    "label": "vp8_pick_frame_size()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "vp8_pick_frame_size(VP8_COMP *cpi)"
  },
  {
    "label": "vp8_drop_encodedframe_overshoot()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "vp8_drop_encodedframe_overshoot(VP8_COMP *cpi, int Q)"
  }
]