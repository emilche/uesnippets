[
  {
    "label": "UStaticMesh",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UStaticMesh"
  },
  {
    "label": "RCP_SQRT2()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # define)",
    "insertText": "RCP_SQRT2(0.70710678118654752440084436210485f) #define RCP_SQRT3 (0.57735026918962576450914878050196f)"
  },
  {
    "label": "FVector()",
    "kind": "Method",
    "detail": "Function (const FVector KDopDir10X [ 1 0 ] = {)",
    "insertText": "FVector(1.f, 0.f, 0.f), FVector(-1.f, 0.f, 0.f), FVector( 0.f, 1.f, 0.f), FVector( 0.f,-1.f, 0.f), FVector( 0.f, 0.f, 1.f), FVector( 0.f, 0.f,-1.f), FVector( 0.f, RCP_SQRT2, RCP_SQRT2), FVector( 0.f,-RCP_SQRT2, -RCP_SQRT2), FVector( 0.f, RCP_SQRT2, -RCP_SQRT2), FVector( 0.f,-RCP_SQRT2, RCP_SQRT2)"
  },
  {
    "label": "FVector()",
    "kind": "Method",
    "detail": "Function (const FVector KDopDir10Y [ 1 0 ] = {)",
    "insertText": "FVector(1.f, 0.f, 0.f), FVector(-1.f, 0.f, 0.f), FVector( 0.f, 1.f, 0.f), FVector( 0.f,-1.f, 0.f), FVector( 0.f, 0.f, 1.f), FVector( 0.f, 0.f,-1.f), FVector( RCP_SQRT2, 0.f, RCP_SQRT2), FVector(-RCP_SQRT2, 0.f, -RCP_SQRT2), FVector( RCP_SQRT2, 0.f, -RCP_SQRT2), FVector(-RCP_SQRT2, 0.f, RCP_SQRT2)"
  },
  {
    "label": "FVector()",
    "kind": "Method",
    "detail": "Function (const FVector KDopDir10Z [ 1 0 ] = {)",
    "insertText": "FVector(1.f, 0.f, 0.f), FVector(-1.f, 0.f, 0.f), FVector( 0.f, 1.f, 0.f), FVector( 0.f,-1.f, 0.f), FVector( 0.f, 0.f, 1.f), FVector( 0.f, 0.f,-1.f), FVector( RCP_SQRT2, RCP_SQRT2, 0.f), FVector(-RCP_SQRT2, -RCP_SQRT2, 0.f), FVector( RCP_SQRT2, -RCP_SQRT2, 0.f), FVector(-RCP_SQRT2, RCP_SQRT2, 0.f)"
  },
  {
    "label": "FVector()",
    "kind": "Method",
    "detail": "Function (const FVector KDopDir18 [ 1 8 ] = {)",
    "insertText": "FVector(1.f, 0.f, 0.f), FVector(-1.f, 0.f, 0.f), FVector( 0.f, 1.f, 0.f), FVector( 0.f,-1.f, 0.f), FVector( 0.f, 0.f, 1.f), FVector( 0.f, 0.f,-1.f), FVector( 0.f, RCP_SQRT2, RCP_SQRT2), FVector( 0.f,-RCP_SQRT2, -RCP_SQRT2), FVector( 0.f, RCP_SQRT2, -RCP_SQRT2), FVector( 0.f,-RCP_SQRT2, RCP_SQRT2), FVector( RCP_SQRT2, 0.f, RCP_SQRT2), FVector(-RCP_SQRT2, 0.f, -RCP_SQRT2), FVector( RCP_SQRT2, 0.f, -RCP_SQRT2), FVector(-RCP_SQRT2, 0.f, RCP_SQRT2), FVector( RCP_SQRT2, RCP_SQRT2, 0.f), FVector(-RCP_SQRT2, -RCP_SQRT2, 0.f), FVector( RCP_SQRT2, -RCP_SQRT2, 0.f), FVector(-RCP_SQRT2, RCP_SQRT2, 0.f)"
  },
  {
    "label": "FVector()",
    "kind": "Method",
    "detail": "Function (const FVector KDopDir26 [ 2 6 ] = {)",
    "insertText": "FVector(1.f, 0.f, 0.f), FVector(-1.f, 0.f, 0.f), FVector( 0.f, 1.f, 0.f), FVector( 0.f,-1.f, 0.f), FVector( 0.f, 0.f, 1.f), FVector( 0.f, 0.f,-1.f), FVector( 0.f, RCP_SQRT2, RCP_SQRT2), FVector( 0.f,-RCP_SQRT2, -RCP_SQRT2), FVector( 0.f, RCP_SQRT2, -RCP_SQRT2), FVector( 0.f,-RCP_SQRT2, RCP_SQRT2), FVector( RCP_SQRT2, 0.f, RCP_SQRT2), FVector(-RCP_SQRT2, 0.f, -RCP_SQRT2), FVector( RCP_SQRT2, 0.f, -RCP_SQRT2), FVector(-RCP_SQRT2, 0.f, RCP_SQRT2), FVector( RCP_SQRT2, RCP_SQRT2, 0.f), FVector(-RCP_SQRT2, -RCP_SQRT2, 0.f), FVector( RCP_SQRT2, -RCP_SQRT2, 0.f), FVector(-RCP_SQRT2, RCP_SQRT2, 0.f), FVector( RCP_SQRT3, RCP_SQRT3, RCP_SQRT3), FVector( RCP_SQRT3, RCP_SQRT3, -RCP_SQRT3), FVector( RCP_SQRT3, -RCP_SQRT3, RCP_SQRT3), FVector( RCP_SQRT3, -RCP_SQRT3, -RCP_SQRT3), FVector(-RCP_SQRT3, RCP_SQRT3, RCP_SQRT3), FVector(-RCP_SQRT3, RCP_SQRT3, -RCP_SQRT3), FVector(-RCP_SQRT3, -RCP_SQRT3, RCP_SQRT3), FVector(-RCP_SQRT3, -RCP_SQRT3, -RCP_SQRT3)"
  },
  {
    "label": "GenerateKDopAsSimpleCollision()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GenerateKDopAsSimpleCollision(UStaticMesh* StaticMesh, const TArray<FVector>& dirs, bool bUpdate = true)"
  },
  {
    "label": "GenerateBoxAsSimpleCollision()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GenerateBoxAsSimpleCollision(UStaticMesh* StaticMesh, bool bUpdate = true)"
  },
  {
    "label": "GenerateSphereAsSimpleCollision()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GenerateSphereAsSimpleCollision(UStaticMesh* StaticMesh, bool bUpdate = true)"
  },
  {
    "label": "GenerateSphylAsSimpleCollision()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GenerateSphylAsSimpleCollision(UStaticMesh* StaticMesh, bool bUpdate = true)"
  },
  {
    "label": "ComputeBoundingBox()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ComputeBoundingBox(UStaticMesh* StaticMesh, FVector& Center, FVector& Extents)"
  },
  {
    "label": "RefreshCollisionChange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RefreshCollisionChange(UStaticMesh& StaticMesh)"
  },
  {
    "label": "RefreshCollisionChanges()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RefreshCollisionChanges(const TArray<UStaticMesh*>& StaticMeshes)"
  },
  {
    "label": "RefreshCollisionChangeComponentsOnly()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RefreshCollisionChangeComponentsOnly(UStaticMesh& StaticMesh)"
  }
]