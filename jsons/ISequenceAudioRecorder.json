[
  {
    "label": "USoundWave",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USoundWave"
  },
  {
    "label": "FSequenceAudioRecorderSettings",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSequenceAudioRecorderSettings"
  },
  {
    "label": "ISequenceAudioRecorder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISequenceAudioRecorder"
  },
  {
    "label": "FSequenceAudioRecorderSettings()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Engine / EngineTypes . h \" class USoundWave ; struct FSequenceAudioRecorderSettings { FDirectoryPath Directory ; FString AssetName ; float RecordingDuration ; float GainDb ; bool bSplitChannels ;)",
    "insertText": "FSequenceAudioRecorderSettings() : RecordingDuration(-1.0f) , GainDb(0.0f) , bSplitChannels(false)"
  },
  {
    "label": "ISequenceAudioRecorder()",
    "kind": "Method",
    "detail": "Function (} } ; class ISequenceAudioRecorder { public : ~)",
    "insertText": "ISequenceAudioRecorder()"
  },
  {
    "label": "Start()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Start(const FSequenceAudioRecorderSettings& Settings)"
  },
  {
    "label": "Stop()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Stop(TArray<USoundWave*>& OutSoundWaves)"
  }
]