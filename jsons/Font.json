[
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FFontCharacter",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFontCharacter"
  },
  {
    "label": "TStructOpsTypeTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TStructOpsTypeTraits"
  },
  {
    "label": "UFont",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UFont"
  },
  {
    "label": "UTexture2D",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UTexture2D"
  },
  {
    "label": "FFontImportOptionsData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFontImportOptionsData"
  },
  {
    "label": "UENUM()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / Object . h \" # include \" UObject / Class . h \" # include \" Fonts / CompositeFont . h \" # include \" Fonts / SlateFontInfo . h \" # include \" Engine / FontImportOptions . h \" # include \" Fonts / FontProviderInterface . h \" # include \" Font . generated . h \")",
    "insertText": "UENUM()"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (Offline,Runtime,} ;)",
    "insertText": "USTRUCT()"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() UPROPERTY(EditAnywhere, Category=FontCharacter)"
  },
  {
    "label": "FFontCharacter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FFontCharacter() : StartU(0) , StartV(0) , USize(0) , VSize(0) , TextureIndex(0) , VerticalOffset(0)"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "Serialize(FArchive& Ar)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (Ar<<* this ; return true ; } FArchive&)",
    "insertText": "operator(FArchive& Ar, FFontCharacter& Ch)"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (Ar<<Ch . StartU<<Ch . StartV<<Ch . USize<<Ch . VSize<<Ch . TextureIndex ; Ar<<Ch . VerticalOffset ; return Ar ; } } ; template<> struct TStructOpsTypeTraits<FFontCharacter> : public TStructOpsTypeTraitsBase2<FFontCharacter> { enum { WithSerializer = true,} ; EPropertyObjectReferenceType WithSerializerObjectReferences = EPropertyObjectReferenceType::None ; } ;)",
    "insertText": "UCLASS(hidecategories=Object, autoexpandcategories=Font, MinimalAPI, BlueprintType)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() UPROPERTY(EditAnywhere, Category=Font)"
  },
  {
    "label": "GetCompositeFont()",
    "kind": "Method",
    "detail": "Function (public : const TCHAR NULLCHARACTER = 1 2 7 ; TMap<uint16,uint16> CharRemap ; const FCompositeFont*)",
    "insertText": "GetCompositeFont()"
  },
  {
    "label": "GetLegacySlateFontInfo()",
    "kind": "Method",
    "detail": "Function (} FSlateFontInfo)",
    "insertText": "GetLegacySlateFontInfo()"
  },
  {
    "label": "GetResourceSizeEx()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "GetResourceSizeEx(FResourceSizeEx& CumulativeResourceSize)"
  },
  {
    "label": "RemapChar()",
    "kind": "Method",
    "detail": "Function (TCHAR)",
    "insertText": "RemapChar(TCHAR CharCode)"
  },
  {
    "label": "GetCharSize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetCharSize(TCHAR InCh, float& Width, float& Height)"
  },
  {
    "label": "GetCharKerning()",
    "kind": "Method",
    "detail": "Function (int8)",
    "insertText": "GetCharKerning(TCHAR First, TCHAR Second)"
  },
  {
    "label": "GetCharHorizontalOffset()",
    "kind": "Method",
    "detail": "Function (int16)",
    "insertText": "GetCharHorizontalOffset(TCHAR InCh)"
  },
  {
    "label": "GetStringSize()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetStringSize(const TCHAR *Text)"
  },
  {
    "label": "GetStringHeightSize()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetStringHeightSize(const TCHAR *Text)"
  },
  {
    "label": "PostLoad()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostLoad()"
  },
  {
    "label": "BeginDestroy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginDestroy()"
  },
  {
    "label": "CacheCharacterCountAndMaxCharHeight()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CacheCharacterCountAndMaxCharHeight()"
  },
  {
    "label": "GetFontScalingFactor()",
    "kind": "Method",
    "detail": "Function (ScalingFactor = InScalingFactor ; } float)",
    "insertText": "GetFontScalingFactor()"
  },
  {
    "label": "GetStringHeightAndWidth()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetStringHeightAndWidth(const FString& InString, int32& Height, int32& Width)"
  },
  {
    "label": "GetStringHeightAndWidth()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetStringHeightAndWidth(const TCHAR *Text, int32& Height, int32& Width)"
  }
]