[
  {
    "label": "SEditableTextBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SEditableTextBox"
  },
  {
    "label": "SProjectLauncherSimpleCookPage",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SProjectLauncherSimpleCookPage"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Layout / Visibility . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Widgets / SCompoundWidget . h \" # include \" Models / ProjectLauncherModel . h \" class SEditableTextBox ; class SProjectLauncherSimpleCookPage : public SCompoundWidget { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SProjectLauncherSimpleCookPage)"
  },
  {
    "label": "SLATE_END_ARGS()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_END_ARGS() public: ~SProjectLauncherSimpleCookPage()"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (public : void)",
    "insertText": "Construct(const FArguments& InArgs, const TSharedRef<FProjectLauncherModel>& InModel)"
  },
  {
    "label": "HandleCookByTheBookSettingsVisibility()",
    "kind": "Method",
    "detail": "Function (private : EVisibility)",
    "insertText": "HandleCookByTheBookSettingsVisibility()"
  },
  {
    "label": "HandleCookModeComboButtonContentText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "HandleCookModeComboButtonContentText()"
  },
  {
    "label": "HandleCookModeMenuEntryClicked()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleCookModeMenuEntryClicked(ELauncherProfileCookModes::Type CookMode)"
  },
  {
    "label": "HandleCookOnTheFlySettingsVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "HandleCookOnTheFlySettingsVisibility()"
  },
  {
    "label": "HandleProfileManagerProfileListChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleProfileManagerProfileListChanged()"
  },
  {
    "label": "HandleProfileManagerProfileSelected()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleProfileManagerProfileSelected(const ILauncherProfilePtr& SelectedProfile, const ILauncherProfilePtr& PreviousProfile)"
  }
]