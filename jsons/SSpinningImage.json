[
  {
    "label": "FPaintArgs",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPaintArgs"
  },
  {
    "label": "FSlateWindowElementList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateWindowElementList"
  },
  {
    "label": "SSpinningImage",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SSpinningImage"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Animation / CurveSequence . h \" # include \" Styling / SlateColor . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Styling / CoreStyle . h \" # include \" Widgets / Images / SImage . h \" class FPaintArgs ; class FSlateWindowElementList ; class SSpinningImage : public SImage { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SSpinningImage) : _Image( FCoreStyle::Get().GetDefaultBrush() ) , _ColorAndOpacity( FLinearColor::White ) , _OnMouseButtonDown() , _Period( 1.0f)"
  },
  {
    "label": "SLATE_ATTRIBUTE()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_ATTRIBUTE(const FSlateBrush*, Image ) SLATE_ATTRIBUTE( FSlateColor, ColorAndOpacity ) SLATE_EVENT( FPointerEventHandler, OnMouseButtonDown ) SLATE_ARGUMENT( float, Period ) SLATE_END_ARGS() SLATE_API void Construct( const FArguments& InArgs)"
  },
  {
    "label": "OnPaint()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "OnPaint(const FPaintArgs& Args, const FGeometry& AllottedGeometry, const FSlateRect& MyCullingRect, FSlateWindowElementList& OutDrawElements, int32 LayerId, const FWidgetStyle& InWidgetStyle, bool bParentEnabled)"
  },
  {
    "label": "ComputeVolatility()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ComputeVolatility()"
  }
]