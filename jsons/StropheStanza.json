[
  {
    "label": "FXmppConnectionStrophe",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FXmppConnectionStrophe"
  },
  {
    "label": "FStropheContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStropheContext"
  },
  {
    "label": "FXmppUserJid",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FXmppUserJid"
  },
  {
    "label": "_xmpp_ctx_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_xmpp_ctx_t"
  },
  {
    "label": "_xmpp_conn_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_xmpp_conn_t"
  },
  {
    "label": "_xmpp_stanza_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_xmpp_stanza_t"
  },
  {
    "label": "FStropheStanza",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStropheStanza"
  },
  {
    "label": "TArray",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TArray"
  },
  {
    "label": "FStropheError",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStropheError"
  },
  {
    "label": "FStropheConnection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStropheConnection"
  },
  {
    "label": "FStropheWebsocketConnection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStropheWebsocketConnection"
  },
  {
    "label": "StropheStanzaEventHandler()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" XmppStanza . h \" # if WITH_XMPP_STROPHE class FXmppConnectionStrophe ; class FStropheContext ; class FXmppUserJid ; typedef struct _xmpp_ctx_t xmpp_ctx_t ; typedef struct _xmpp_conn_t xmpp_conn_t ; typedef struct _xmpp_stanza_t xmpp_stanza_t ; class FStropheStanza : public IXmppStanza { class TArray<FStropheStanza> ; class FStropheError ; class FStropheConnection ; class FStropheWebsocketConnection ; int)",
    "insertText": "StropheStanzaEventHandler(xmpp_conn_t* const Connection, xmpp_stanza_t* const IncomingStanza, void* const UserData)"
  },
  {
    "label": "StropheWebsocketStanzaEventHandler()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "StropheWebsocketStanzaEventHandler(xmpp_conn_t* const Connection, xmpp_stanza_t* const IncomingStanza, void* const UserData)"
  },
  {
    "label": "FStropheStanza()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "FStropheStanza(const FXmppConnectionStrophe& Context, const FString& StanzaName = FString())"
  },
  {
    "label": "FStropheStanza()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FStropheStanza(const FStropheStanza& Other)"
  },
  {
    "label": "FStropheStanza()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FStropheStanza(FStropheStanza&& Other)"
  },
  {
    "label": "FStropheStanza()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FStropheStanza()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FStropheStanza&)",
    "insertText": "operator(const FStropheStanza& Other)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FStropheStanza&)",
    "insertText": "operator(FStropheStanza&& Other)"
  },
  {
    "label": "Clone()",
    "kind": "Method",
    "detail": "Function (FStropheStanza)",
    "insertText": "Clone()"
  },
  {
    "label": "AddChild()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddChild(const FStropheStanza& Child)"
  },
  {
    "label": "GetChild()",
    "kind": "Method",
    "detail": "Function (TUniquePtr<IXmppStanza>)",
    "insertText": "GetChild(const FString& ChildName)"
  },
  {
    "label": "GetChildStropheStanza()",
    "kind": "Method",
    "detail": "Function (TOptional<FStropheStanza>)",
    "insertText": "GetChildStropheStanza(const FString& ChildName)"
  },
  {
    "label": "GetChildByNameAndNamespace()",
    "kind": "Method",
    "detail": "Function (TOptional<FStropheStanza>)",
    "insertText": "GetChildByNameAndNamespace(const FString& ChildName, const FString& Namespace)"
  },
  {
    "label": "HasChild()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasChild(const FString& ChildName)"
  },
  {
    "label": "HasChildByNameAndNamespace()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasChildByNameAndNamespace(const FString& ChildName, const FString& Namespace)"
  },
  {
    "label": "GetChildren()",
    "kind": "Method",
    "detail": "Function (TArray<FStropheStanza>)",
    "insertText": "GetChildren()"
  },
  {
    "label": "SetNamespace()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetNamespace(const FString& Namespace)"
  },
  {
    "label": "GetNamespace()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetNamespace()"
  },
  {
    "label": "SetAttribute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAttribute(const FString& Key, const FString& Value)"
  },
  {
    "label": "GetAttribute()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetAttribute(const FString& Key)"
  },
  {
    "label": "HasAttribute()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasAttribute(const FString& Key)"
  },
  {
    "label": "SetName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetName(const FString& Name)"
  },
  {
    "label": "GetName()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetName()"
  },
  {
    "label": "SetText()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetText(const FString& Text)"
  },
  {
    "label": "GetText()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetText()"
  },
  {
    "label": "SetType()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetType(const FString& Type)"
  },
  {
    "label": "GetType()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetType()"
  },
  {
    "label": "SetId()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetId(const FString& Id)"
  },
  {
    "label": "GetId()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetId()"
  },
  {
    "label": "SetTo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTo(const FXmppUserJid& To)"
  },
  {
    "label": "SetTo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTo(const FString& To)"
  },
  {
    "label": "GetTo()",
    "kind": "Method",
    "detail": "Function (FXmppUserJid)",
    "insertText": "GetTo()"
  },
  {
    "label": "SetFrom()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFrom(const FXmppUserJid& From)"
  },
  {
    "label": "SetFrom()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFrom(const FString& From)"
  },
  {
    "label": "GetFrom()",
    "kind": "Method",
    "detail": "Function (FXmppUserJid)",
    "insertText": "GetFrom()"
  },
  {
    "label": "AddBodyWithText()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AddBodyWithText(const FString& Text)"
  },
  {
    "label": "GetBodyText()",
    "kind": "Method",
    "detail": "Function (TOptional<FString>)",
    "insertText": "GetBodyText()"
  },
  {
    "label": "GetStanzaPtr()",
    "kind": "Method",
    "detail": "Function (protected : xmpp_stanza_t*)",
    "insertText": "GetStanzaPtr()"
  },
  {
    "label": "FStropheStanza()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FStropheStanza(xmpp_ctx_t* const StropheContextPtr)"
  }
]