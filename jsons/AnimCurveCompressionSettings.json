[
  {
    "label": "UAnimCurveCompressionCodec",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimCurveCompressionCodec"
  },
  {
    "label": "UAnimSequence",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimSequence"
  },
  {
    "label": "UAnimCurveCompressionSettings",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimCurveCompressionSettings"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Animation / AnimCompressionTypes . h \" # include \" AnimCurveCompressionSettings . generated . h \" class UAnimCurveCompressionCodec ; class UAnimSequence ;)",
    "insertText": "UCLASS(hidecategories = Object, MinimalAPI)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() UPROPERTY(Category = Compression, Export, EditAnywhere, NoClear, meta = (EditInline))"
  },
  {
    "label": "GetCodec()",
    "kind": "Method",
    "detail": "Function (UAnimCurveCompressionCodec*)",
    "insertText": "GetCodec(const FString& Path)"
  },
  {
    "label": "GetPreloadDependencies()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITORONLY_DATA void)",
    "insertText": "GetPreloadDependencies(TArray<UObject*>& OutDeps)"
  },
  {
    "label": "AreSettingsValid()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AreSettingsValid()"
  },
  {
    "label": "Compress()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Compress(const FCompressibleAnimData& AnimSeq, FCompressedAnimSequence& OutCompressedData)"
  },
  {
    "label": "PopulateDDCKey()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PopulateDDCKey(FArchive& Ar)"
  }
]