[
  {
    "label": "FAppStyle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAppStyle"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "UTexture2D",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UTexture2D"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Styling / ISlateStyle . h \" class FAppStyle { public : const ISlateStyle&)",
    "insertText": "Get()"
  },
  {
    "label": "GetAppStyleSetName()",
    "kind": "Method",
    "detail": "Function (const FName)",
    "insertText": "GetAppStyleSetName()"
  },
  {
    "label": "SetAppStyleSetName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAppStyleSetName(const FName& InName)"
  },
  {
    "label": "SetAppStyleSet()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAppStyleSet(const ISlateStyle& InStyle)"
  },
  {
    "label": "GetWidgetStyle()",
    "kind": "Method",
    "detail": "Function (template<class T> const T&)",
    "insertText": "GetWidgetStyle(FName PropertyName, const ANSICHAR* Specifier = NULL)"
  },
  {
    "label": "GetFloat()",
    "kind": "Method",
    "detail": "Function (} float)",
    "insertText": "GetFloat(FName PropertyName, const ANSICHAR* Specifier = NULL)"
  },
  {
    "label": "GetVector()",
    "kind": "Method",
    "detail": "Function (} FVector2D)",
    "insertText": "GetVector(FName PropertyName, const ANSICHAR* Specifier = NULL)"
  },
  {
    "label": "GetColor()",
    "kind": "Method",
    "detail": "Function (} const FLinearColor&)",
    "insertText": "GetColor(FName PropertyName, const ANSICHAR* Specifier = NULL)"
  },
  {
    "label": "GetSlateColor()",
    "kind": "Method",
    "detail": "Function (} const FSlateColor)",
    "insertText": "GetSlateColor(FName PropertyName, const ANSICHAR* Specifier = NULL)"
  },
  {
    "label": "GetMargin()",
    "kind": "Method",
    "detail": "Function (} const FMargin&)",
    "insertText": "GetMargin(FName PropertyName, const ANSICHAR* Specifier = NULL)"
  },
  {
    "label": "GetBrush()",
    "kind": "Method",
    "detail": "Function (} const FSlateBrush*)",
    "insertText": "GetBrush(FName PropertyName, const ANSICHAR* Specifier = NULL)"
  },
  {
    "label": "GetDynamicImageBrush()",
    "kind": "Method",
    "detail": "Function (} const TSharedPtr<FSlateDynamicImageBrush>)",
    "insertText": "GetDynamicImageBrush(FName BrushTemplate, FName TextureName, const ANSICHAR* Specifier = NULL)"
  },
  {
    "label": "GetDynamicImageBrush()",
    "kind": "Method",
    "detail": "Function (} const TSharedPtr<FSlateDynamicImageBrush>)",
    "insertText": "GetDynamicImageBrush(FName BrushTemplate, const ANSICHAR* Specifier, class UTexture2D* TextureResource, FName TextureName)"
  },
  {
    "label": "GetDynamicImageBrush()",
    "kind": "Method",
    "detail": "Function (} const TSharedPtr<FSlateDynamicImageBrush>)",
    "insertText": "GetDynamicImageBrush(FName BrushTemplate, class UTexture2D* TextureResource, FName TextureName)"
  },
  {
    "label": "GetSound()",
    "kind": "Method",
    "detail": "Function (} const FSlateSound&)",
    "insertText": "GetSound(FName PropertyName, const ANSICHAR* Specifier = NULL)"
  },
  {
    "label": "GetFontStyle()",
    "kind": "Method",
    "detail": "Function (} FSlateFontInfo)",
    "insertText": "GetFontStyle(FName PropertyName, const ANSICHAR* Specifier = NULL)"
  },
  {
    "label": "GetDefaultBrush()",
    "kind": "Method",
    "detail": "Function (} const FSlateBrush*)",
    "insertText": "GetDefaultBrush()"
  },
  {
    "label": "GetNoBrush()",
    "kind": "Method",
    "detail": "Function (} const FSlateBrush*)",
    "insertText": "GetNoBrush()"
  },
  {
    "label": "GetOptionalBrush()",
    "kind": "Method",
    "detail": "Function (} const FSlateBrush*)",
    "insertText": "GetOptionalBrush(FName PropertyName, const ANSICHAR* Specifier = NULL, const FSlateBrush* const DefaultBrush = FStyleDefaults::GetNoBrush())"
  },
  {
    "label": "Join()",
    "kind": "Method",
    "detail": "Function (} FName)",
    "insertText": "Join(FName A, const ANSICHAR* B)"
  }
]