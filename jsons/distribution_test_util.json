[
  {
    "label": "DistributionMoments",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DistributionMoments"
  },
  {
    "label": "ComputeDistributionMoments()",
    "kind": "Method",
    "detail": "Function (# ifndef ABSL_RANDOM_INTERNAL_DISTRIBUTION_TEST_UTIL_H_ # define ABSL_RANDOM_INTERNAL_DISTRIBUTION_TEST_UTIL_H_ # include<cstddef> # include<iostream> # include<vector> # include \" absl / strings / string_view . h \" # include \" absl / types / span . h \" namespace absl { ABSL_NAMESPACE_BEGIN namespace random_internal { struct DistributionMoments { size_t n = 0 ; double mean = 0 . 0 ; double variance = 0 . 0 ; double skewness = 0 . 0 ; double kurtosis = 0 . 0 ; } ; DistributionMoments)",
    "insertText": "ComputeDistributionMoments(absl::Span<const double> data_points)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (std::ostream&)",
    "insertText": "operator(std::ostream& os, const DistributionMoments& moments)"
  },
  {
    "label": "Near()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Near(absl::string_view msg, double actual, double expected, double bound)"
  }
]