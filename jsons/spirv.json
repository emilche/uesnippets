[
  {
    "label": "SpvSourceLanguage_",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "SpvSourceLanguage_"
  },
  {
    "label": "SpvExecutionModel_",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "SpvExecutionModel_"
  },
  {
    "label": "SpvAddressingModel_",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "SpvAddressingModel_"
  },
  {
    "label": "SpvMemoryModel_",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "SpvMemoryModel_"
  },
  {
    "label": "SpvExecutionMode_",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "SpvExecutionMode_"
  },
  {
    "label": "SpvStorageClass_",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "SpvStorageClass_"
  },
  {
    "label": "SpvDim_",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "SpvDim_"
  },
  {
    "label": "SpvSamplerAddressingMode_",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "SpvSamplerAddressingMode_"
  },
  {
    "label": "SpvSamplerFilterMode_",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "SpvSamplerFilterMode_"
  },
  {
    "label": "SpvImageFormat_",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "SpvImageFormat_"
  },
  {
    "label": "SpvImageChannelOrder_",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "SpvImageChannelOrder_"
  },
  {
    "label": "SpvImageChannelDataType_",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "SpvImageChannelDataType_"
  },
  {
    "label": "SpvImageOperandsShift_",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "SpvImageOperandsShift_"
  },
  {
    "label": "SpvImageOperandsMask_",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "SpvImageOperandsMask_"
  },
  {
    "label": "SpvFPFastMathModeShift_",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "SpvFPFastMathModeShift_"
  },
  {
    "label": "SpvFPFastMathModeMask_",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "SpvFPFastMathModeMask_"
  },
  {
    "label": "SpvFPRoundingMode_",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "SpvFPRoundingMode_"
  },
  {
    "label": "SpvLinkageType_",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "SpvLinkageType_"
  },
  {
    "label": "SpvAccessQualifier_",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "SpvAccessQualifier_"
  },
  {
    "label": "SpvFunctionParameterAttribute_",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "SpvFunctionParameterAttribute_"
  },
  {
    "label": "SpvDecoration_",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "SpvDecoration_"
  },
  {
    "label": "SpvBuiltIn_",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "SpvBuiltIn_"
  },
  {
    "label": "SpvSelectionControlShift_",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "SpvSelectionControlShift_"
  },
  {
    "label": "SpvSelectionControlMask_",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "SpvSelectionControlMask_"
  },
  {
    "label": "SpvLoopControlShift_",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "SpvLoopControlShift_"
  },
  {
    "label": "SpvLoopControlMask_",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "SpvLoopControlMask_"
  },
  {
    "label": "SpvFunctionControlShift_",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "SpvFunctionControlShift_"
  },
  {
    "label": "SpvFunctionControlMask_",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "SpvFunctionControlMask_"
  },
  {
    "label": "SpvMemorySemanticsShift_",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "SpvMemorySemanticsShift_"
  },
  {
    "label": "SpvMemorySemanticsMask_",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "SpvMemorySemanticsMask_"
  },
  {
    "label": "SpvMemoryAccessShift_",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "SpvMemoryAccessShift_"
  },
  {
    "label": "SpvMemoryAccessMask_",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "SpvMemoryAccessMask_"
  },
  {
    "label": "SpvScope_",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "SpvScope_"
  },
  {
    "label": "SpvGroupOperation_",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "SpvGroupOperation_"
  },
  {
    "label": "SpvKernelEnqueueFlags_",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "SpvKernelEnqueueFlags_"
  },
  {
    "label": "SpvKernelProfilingInfoShift_",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "SpvKernelProfilingInfoShift_"
  },
  {
    "label": "SpvKernelProfilingInfoMask_",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "SpvKernelProfilingInfoMask_"
  },
  {
    "label": "SpvCapability_",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "SpvCapability_"
  },
  {
    "label": "SpvRayFlagsShift_",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "SpvRayFlagsShift_"
  },
  {
    "label": "SpvRayFlagsMask_",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "SpvRayFlagsMask_"
  },
  {
    "label": "SpvRayQueryIntersection_",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "SpvRayQueryIntersection_"
  },
  {
    "label": "SpvRayQueryCommittedIntersectionType_",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "SpvRayQueryCommittedIntersectionType_"
  },
  {
    "label": "SpvRayQueryCandidateIntersectionType_",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "SpvRayQueryCandidateIntersectionType_"
  },
  {
    "label": "SpvFragmentShadingRateShift_",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "SpvFragmentShadingRateShift_"
  },
  {
    "label": "SpvFragmentShadingRateMask_",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "SpvFragmentShadingRateMask_"
  },
  {
    "label": "SpvFPDenormMode_",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "SpvFPDenormMode_"
  },
  {
    "label": "SpvFPOperationMode_",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "SpvFPOperationMode_"
  },
  {
    "label": "SpvOp_",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "SpvOp_"
  },
  {
    "label": "SpvHasResultAndType()",
    "kind": "Method",
    "detail": "Function (# ifndef spirv_H # define spirv_H typedef unsigned int SpvId ; # define SPV_VERSION 0 x10500 # define SPV_REVISION 4 const unsigned int SpvMagicNumber = 0 x07230203 ; const unsigned int SpvVersion = 0 x00010500 ; const unsigned int SpvRevision = 4 ; const unsigned int SpvOpCodeMask = 0 xffff ; const unsigned int SpvWordCountShift = 1 6 ; typedef enum SpvSourceLanguage_ { SpvSourceLanguageUnknown = 0,SpvSourceLanguageESSL = 1,SpvSourceLanguageGLSL = 2,SpvSourceLanguageOpenCL_C = 3,SpvSourceLanguageOpenCL_CPP = 4,SpvSourceLanguageHLSL = 5,SpvSourceLanguageMax = 0 x7fffffff,} SpvSourceLanguage ; typedef enum SpvExecutionModel_ { SpvExecutionModelVertex = 0,SpvExecutionModelTessellationControl = 1,SpvExecutionModelTessellationEvaluation = 2,SpvExecutionModelGeometry = 3,SpvExecutionModelFragment = 4,SpvExecutionModelGLCompute = 5,SpvExecutionModelKernel = 6,SpvExecutionModelTaskNV = 5 2 6 7,SpvExecutionModelMeshNV = 5 2 6 8,SpvExecutionModelRayGenerationKHR = 5 3 1 3,SpvExecutionModelRayGenerationNV = 5 3 1 3,SpvExecutionModelIntersectionKHR = 5 3 1 4,SpvExecutionModelIntersectionNV = 5 3 1 4,SpvExecutionModelAnyHitKHR = 5 3 1 5,SpvExecutionModelAnyHitNV = 5 3 1 5,SpvExecutionModelClosestHitKHR = 5 3 1 6,SpvExecutionModelClosestHitNV = 5 3 1 6,SpvExecutionModelMissKHR = 5 3 1 7,SpvExecutionModelMissNV = 5 3 1 7,SpvExecutionModelCallableKHR = 5 3 1 8,SpvExecutionModelCallableNV = 5 3 1 8,SpvExecutionModelMax = 0 x7fffffff,} SpvExecutionModel ; typedef enum SpvAddressingModel_ { SpvAddressingModelLogical = 0,SpvAddressingModelPhysical32 = 1,SpvAddressingModelPhysical64 = 2,SpvAddressingModelPhysicalStorageBuffer64 = 5 3 4 8,SpvAddressingModelPhysicalStorageBuffer64EXT = 5 3 4 8,SpvAddressingModelMax = 0 x7fffffff,} SpvAddressingModel ; typedef enum SpvMemoryModel_ { SpvMemoryModelSimple = 0,SpvMemoryModelGLSL450 = 1,SpvMemoryModelOpenCL = 2,SpvMemoryModelVulkan = 3,SpvMemoryModelVulkanKHR = 3,SpvMemoryModelMax = 0 x7fffffff,} SpvMemoryModel ; typedef enum SpvExecutionMode_ { SpvExecutionModeInvocations = 0,SpvExecutionModeSpacingEqual = 1,SpvExecutionModeSpacingFractionalEven = 2,SpvExecutionModeSpacingFractionalOdd = 3,SpvExecutionModeVertexOrderCw = 4,SpvExecutionModeVertexOrderCcw = 5,SpvExecutionModePixelCenterInteger = 6,SpvExecutionModeOriginUpperLeft = 7,SpvExecutionModeOriginLowerLeft = 8,SpvExecutionModeEarlyFragmentTests = 9,SpvExecutionModePointMode = 1 0,SpvExecutionModeXfb = 1 1,SpvExecutionModeDepthReplacing = 1 2,SpvExecutionModeDepthGreater = 1 4,SpvExecutionModeDepthLess = 1 5,SpvExecutionModeDepthUnchanged = 1 6,SpvExecutionModeLocalSize = 1 7,SpvExecutionModeLocalSizeHint = 1 8,SpvExecutionModeInputPoints = 1 9,SpvExecutionModeInputLines = 2 0,SpvExecutionModeInputLinesAdjacency = 2 1,SpvExecutionModeTriangles = 2 2,SpvExecutionModeInputTrianglesAdjacency = 2 3,SpvExecutionModeQuads = 2 4,SpvExecutionModeIsolines = 2 5,SpvExecutionModeOutputVertices = 2 6,SpvExecutionModeOutputPoints = 2 7,SpvExecutionModeOutputLineStrip = 2 8,SpvExecutionModeOutputTriangleStrip = 2 9,SpvExecutionModeVecTypeHint = 3 0,SpvExecutionModeContractionOff = 3 1,SpvExecutionModeInitializer = 3 3,SpvExecutionModeFinalizer = 3 4,SpvExecutionModeSubgroupSize = 3 5,SpvExecutionModeSubgroupsPerWorkgroup = 3 6,SpvExecutionModeSubgroupsPerWorkgroupId = 3 7,SpvExecutionModeLocalSizeId = 3 8,SpvExecutionModeLocalSizeHintId = 3 9,SpvExecutionModePostDepthCoverage = 4 4 4 6,SpvExecutionModeDenormPreserve = 4 4 5 9,SpvExecutionModeDenormFlushToZero = 4 4 6 0,SpvExecutionModeSignedZeroInfNanPreserve = 4 4 6 1,SpvExecutionModeRoundingModeRTE = 4 4 6 2,SpvExecutionModeRoundingModeRTZ = 4 4 6 3,SpvExecutionModeStencilRefReplacingEXT = 5 0 2 7,SpvExecutionModeOutputLinesNV = 5 2 6 9,SpvExecutionModeOutputPrimitivesNV = 5 2 7 0,SpvExecutionModeDerivativeGroupQuadsNV = 5 2 8 9,SpvExecutionModeDerivativeGroupLinearNV = 5 2 9 0,SpvExecutionModeOutputTrianglesNV = 5 2 9 8,SpvExecutionModePixelInterlockOrderedEXT = 5 3 6 6,SpvExecutionModePixelInterlockUnorderedEXT = 5 3 6 7,SpvExecutionModeSampleInterlockOrderedEXT = 5 3 6 8,SpvExecutionModeSampleInterlockUnorderedEXT = 5 3 6 9,SpvExecutionModeShadingRateInterlockOrderedEXT = 5 3 7 0,SpvExecutionModeShadingRateInterlockUnorderedEXT = 5 3 7 1,SpvExecutionModeSharedLocalMemorySizeINTEL = 5 6 1 8,SpvExecutionModeRoundingModeRTPINTEL = 5 6 2 0,SpvExecutionModeRoundingModeRTNINTEL = 5 6 2 1,SpvExecutionModeFloatingPointModeALTINTEL = 5 6 2 2,SpvExecutionModeFloatingPointModeIEEEINTEL = 5 6 2 3,SpvExecutionModeMaxWorkgroupSizeINTEL = 5 8 9 3,SpvExecutionModeMaxWorkDimINTEL = 5 8 9 4,SpvExecutionModeNoGlobalOffsetINTEL = 5 8 9 5,SpvExecutionModeNumSIMDWorkitemsINTEL = 5 8 9 6,SpvExecutionModeSchedulerTargetFmaxMhzINTEL = 5 9 0 3,SpvExecutionModeMax = 0 x7fffffff,} SpvExecutionMode ; typedef enum SpvStorageClass_ { SpvStorageClassUniformConstant = 0,SpvStorageClassInput = 1,SpvStorageClassUniform = 2,SpvStorageClassOutput = 3,SpvStorageClassWorkgroup = 4,SpvStorageClassCrossWorkgroup = 5,SpvStorageClassPrivate = 6,SpvStorageClassFunction = 7,SpvStorageClassGeneric = 8,SpvStorageClassPushConstant = 9,SpvStorageClassAtomicCounter = 1 0,SpvStorageClassImage = 1 1,SpvStorageClassStorageBuffer = 1 2,SpvStorageClassCallableDataKHR = 5 3 2 8,SpvStorageClassCallableDataNV = 5 3 2 8,SpvStorageClassIncomingCallableDataKHR = 5 3 2 9,SpvStorageClassIncomingCallableDataNV = 5 3 2 9,SpvStorageClassRayPayloadKHR = 5 3 3 8,SpvStorageClassRayPayloadNV = 5 3 3 8,SpvStorageClassHitAttributeKHR = 5 3 3 9,SpvStorageClassHitAttributeNV = 5 3 3 9,SpvStorageClassIncomingRayPayloadKHR = 5 3 4 2,SpvStorageClassIncomingRayPayloadNV = 5 3 4 2,SpvStorageClassShaderRecordBufferKHR = 5 3 4 3,SpvStorageClassShaderRecordBufferNV = 5 3 4 3,SpvStorageClassPhysicalStorageBuffer = 5 3 4 9,SpvStorageClassPhysicalStorageBufferEXT = 5 3 4 9,SpvStorageClassCodeSectionINTEL = 5 6 0 5,SpvStorageClassDeviceOnlyINTEL = 5 9 3 6,SpvStorageClassHostOnlyINTEL = 5 9 3 7,SpvStorageClassMax = 0 x7fffffff,} SpvStorageClass ; typedef enum SpvDim_ { SpvDim1D = 0,SpvDim2D = 1,SpvDim3D = 2,SpvDimCube = 3,SpvDimRect = 4,SpvDimBuffer = 5,SpvDimSubpassData = 6,SpvDimMax = 0 x7fffffff,} SpvDim ; typedef enum SpvSamplerAddressingMode_ { SpvSamplerAddressingModeNone = 0,SpvSamplerAddressingModeClampToEdge = 1,SpvSamplerAddressingModeClamp = 2,SpvSamplerAddressingModeRepeat = 3,SpvSamplerAddressingModeRepeatMirrored = 4,SpvSamplerAddressingModeMax = 0 x7fffffff,} SpvSamplerAddressingMode ; typedef enum SpvSamplerFilterMode_ { SpvSamplerFilterModeNearest = 0,SpvSamplerFilterModeLinear = 1,SpvSamplerFilterModeMax = 0 x7fffffff,} SpvSamplerFilterMode ; typedef enum SpvImageFormat_ { SpvImageFormatUnknown = 0,SpvImageFormatRgba32f = 1,SpvImageFormatRgba16f = 2,SpvImageFormatR32f = 3,SpvImageFormatRgba8 = 4,SpvImageFormatRgba8Snorm = 5,SpvImageFormatRg32f = 6,SpvImageFormatRg16f = 7,SpvImageFormatR11fG11fB10f = 8,SpvImageFormatR16f = 9,SpvImageFormatRgba16 = 1 0,SpvImageFormatRgb10A2 = 1 1,SpvImageFormatRg16 = 1 2,SpvImageFormatRg8 = 1 3,SpvImageFormatR16 = 1 4,SpvImageFormatR8 = 1 5,SpvImageFormatRgba16Snorm = 1 6,SpvImageFormatRg16Snorm = 1 7,SpvImageFormatRg8Snorm = 1 8,SpvImageFormatR16Snorm = 1 9,SpvImageFormatR8Snorm = 2 0,SpvImageFormatRgba32i = 2 1,SpvImageFormatRgba16i = 2 2,SpvImageFormatRgba8i = 2 3,SpvImageFormatR32i = 2 4,SpvImageFormatRg32i = 2 5,SpvImageFormatRg16i = 2 6,SpvImageFormatRg8i = 2 7,SpvImageFormatR16i = 2 8,SpvImageFormatR8i = 2 9,SpvImageFormatRgba32ui = 3 0,SpvImageFormatRgba16ui = 3 1,SpvImageFormatRgba8ui = 3 2,SpvImageFormatR32ui = 3 3,SpvImageFormatRgb10a2ui = 3 4,SpvImageFormatRg32ui = 3 5,SpvImageFormatRg16ui = 3 6,SpvImageFormatRg8ui = 3 7,SpvImageFormatR16ui = 3 8,SpvImageFormatR8ui = 3 9,SpvImageFormatR64ui = 4 0,SpvImageFormatR64i = 4 1,SpvImageFormatMax = 0 x7fffffff,} SpvImageFormat ; typedef enum SpvImageChannelOrder_ { SpvImageChannelOrderR = 0,SpvImageChannelOrderA = 1,SpvImageChannelOrderRG = 2,SpvImageChannelOrderRA = 3,SpvImageChannelOrderRGB = 4,SpvImageChannelOrderRGBA = 5,SpvImageChannelOrderBGRA = 6,SpvImageChannelOrderARGB = 7,SpvImageChannelOrderIntensity = 8,SpvImageChannelOrderLuminance = 9,SpvImageChannelOrderRx = 1 0,SpvImageChannelOrderRGx = 1 1,SpvImageChannelOrderRGBx = 1 2,SpvImageChannelOrderDepth = 1 3,SpvImageChannelOrderDepthStencil = 1 4,SpvImageChannelOrdersRGB = 1 5,SpvImageChannelOrdersRGBx = 1 6,SpvImageChannelOrdersRGBA = 1 7,SpvImageChannelOrdersBGRA = 1 8,SpvImageChannelOrderABGR = 1 9,SpvImageChannelOrderMax = 0 x7fffffff,} SpvImageChannelOrder ; typedef enum SpvImageChannelDataType_ { SpvImageChannelDataTypeSnormInt8 = 0,SpvImageChannelDataTypeSnormInt16 = 1,SpvImageChannelDataTypeUnormInt8 = 2,SpvImageChannelDataTypeUnormInt16 = 3,SpvImageChannelDataTypeUnormShort565 = 4,SpvImageChannelDataTypeUnormShort555 = 5,SpvImageChannelDataTypeUnormInt101010 = 6,SpvImageChannelDataTypeSignedInt8 = 7,SpvImageChannelDataTypeSignedInt16 = 8,SpvImageChannelDataTypeSignedInt32 = 9,SpvImageChannelDataTypeUnsignedInt8 = 1 0,SpvImageChannelDataTypeUnsignedInt16 = 1 1,SpvImageChannelDataTypeUnsignedInt32 = 1 2,SpvImageChannelDataTypeHalfFloat = 1 3,SpvImageChannelDataTypeFloat = 1 4,SpvImageChannelDataTypeUnormInt24 = 1 5,SpvImageChannelDataTypeUnormInt101010_2 = 1 6,SpvImageChannelDataTypeMax = 0 x7fffffff,} SpvImageChannelDataType ; typedef enum SpvImageOperandsShift_ { SpvImageOperandsBiasShift = 0,SpvImageOperandsLodShift = 1,SpvImageOperandsGradShift = 2,SpvImageOperandsConstOffsetShift = 3,SpvImageOperandsOffsetShift = 4,SpvImageOperandsConstOffsetsShift = 5,SpvImageOperandsSampleShift = 6,SpvImageOperandsMinLodShift = 7,SpvImageOperandsMakeTexelAvailableShift = 8,SpvImageOperandsMakeTexelAvailableKHRShift = 8,SpvImageOperandsMakeTexelVisibleShift = 9,SpvImageOperandsMakeTexelVisibleKHRShift = 9,SpvImageOperandsNonPrivateTexelShift = 1 0,SpvImageOperandsNonPrivateTexelKHRShift = 1 0,SpvImageOperandsVolatileTexelShift = 1 1,SpvImageOperandsVolatileTexelKHRShift = 1 1,SpvImageOperandsSignExtendShift = 1 2,SpvImageOperandsZeroExtendShift = 1 3,SpvImageOperandsMax = 0 x7fffffff,} SpvImageOperandsShift ; typedef enum SpvImageOperandsMask_ { SpvImageOperandsMaskNone = 0,SpvImageOperandsBiasMask = 0 x00000001,SpvImageOperandsLodMask = 0 x00000002,SpvImageOperandsGradMask = 0 x00000004,SpvImageOperandsConstOffsetMask = 0 x00000008,SpvImageOperandsOffsetMask = 0 x00000010,SpvImageOperandsConstOffsetsMask = 0 x00000020,SpvImageOperandsSampleMask = 0 x00000040,SpvImageOperandsMinLodMask = 0 x00000080,SpvImageOperandsMakeTexelAvailableMask = 0 x00000100,SpvImageOperandsMakeTexelAvailableKHRMask = 0 x00000100,SpvImageOperandsMakeTexelVisibleMask = 0 x00000200,SpvImageOperandsMakeTexelVisibleKHRMask = 0 x00000200,SpvImageOperandsNonPrivateTexelMask = 0 x00000400,SpvImageOperandsNonPrivateTexelKHRMask = 0 x00000400,SpvImageOperandsVolatileTexelMask = 0 x00000800,SpvImageOperandsVolatileTexelKHRMask = 0 x00000800,SpvImageOperandsSignExtendMask = 0 x00001000,SpvImageOperandsZeroExtendMask = 0 x00002000,} SpvImageOperandsMask ; typedef enum SpvFPFastMathModeShift_ { SpvFPFastMathModeNotNaNShift = 0,SpvFPFastMathModeNotInfShift = 1,SpvFPFastMathModeNSZShift = 2,SpvFPFastMathModeAllowRecipShift = 3,SpvFPFastMathModeFastShift = 4,SpvFPFastMathModeAllowContractFastINTELShift = 1 6,SpvFPFastMathModeAllowReassocINTELShift = 1 7,SpvFPFastMathModeMax = 0 x7fffffff,} SpvFPFastMathModeShift ; typedef enum SpvFPFastMathModeMask_ { SpvFPFastMathModeMaskNone = 0,SpvFPFastMathModeNotNaNMask = 0 x00000001,SpvFPFastMathModeNotInfMask = 0 x00000002,SpvFPFastMathModeNSZMask = 0 x00000004,SpvFPFastMathModeAllowRecipMask = 0 x00000008,SpvFPFastMathModeFastMask = 0 x00000010,SpvFPFastMathModeAllowContractFastINTELMask = 0 x00010000,SpvFPFastMathModeAllowReassocINTELMask = 0 x00020000,} SpvFPFastMathModeMask ; typedef enum SpvFPRoundingMode_ { SpvFPRoundingModeRTE = 0,SpvFPRoundingModeRTZ = 1,SpvFPRoundingModeRTP = 2,SpvFPRoundingModeRTN = 3,SpvFPRoundingModeMax = 0 x7fffffff,} SpvFPRoundingMode ; typedef enum SpvLinkageType_ { SpvLinkageTypeExport = 0,SpvLinkageTypeImport = 1,SpvLinkageTypeLinkOnceODR = 2,SpvLinkageTypeMax = 0 x7fffffff,} SpvLinkageType ; typedef enum SpvAccessQualifier_ { SpvAccessQualifierReadOnly = 0,SpvAccessQualifierWriteOnly = 1,SpvAccessQualifierReadWrite = 2,SpvAccessQualifierMax = 0 x7fffffff,} SpvAccessQualifier ; typedef enum SpvFunctionParameterAttribute_ { SpvFunctionParameterAttributeZext = 0,SpvFunctionParameterAttributeSext = 1,SpvFunctionParameterAttributeByVal = 2,SpvFunctionParameterAttributeSret = 3,SpvFunctionParameterAttributeNoAlias = 4,SpvFunctionParameterAttributeNoCapture = 5,SpvFunctionParameterAttributeNoWrite = 6,SpvFunctionParameterAttributeNoReadWrite = 7,SpvFunctionParameterAttributeMax = 0 x7fffffff,} SpvFunctionParameterAttribute ; typedef enum SpvDecoration_ { SpvDecorationRelaxedPrecision = 0,SpvDecorationSpecId = 1,SpvDecorationBlock = 2,SpvDecorationBufferBlock = 3,SpvDecorationRowMajor = 4,SpvDecorationColMajor = 5,SpvDecorationArrayStride = 6,SpvDecorationMatrixStride = 7,SpvDecorationGLSLShared = 8,SpvDecorationGLSLPacked = 9,SpvDecorationCPacked = 1 0,SpvDecorationBuiltIn = 1 1,SpvDecorationNoPerspective = 1 3,SpvDecorationFlat = 1 4,SpvDecorationPatch = 1 5,SpvDecorationCentroid = 1 6,SpvDecorationSample = 1 7,SpvDecorationInvariant = 1 8,SpvDecorationRestrict = 1 9,SpvDecorationAliased = 2 0,SpvDecorationVolatile = 2 1,SpvDecorationConstant = 2 2,SpvDecorationCoherent = 2 3,SpvDecorationNonWritable = 2 4,SpvDecorationNonReadable = 2 5,SpvDecorationUniform = 2 6,SpvDecorationUniformId = 2 7,SpvDecorationSaturatedConversion = 2 8,SpvDecorationStream = 2 9,SpvDecorationLocation = 3 0,SpvDecorationComponent = 3 1,SpvDecorationIndex = 3 2,SpvDecorationBinding = 3 3,SpvDecorationDescriptorSet = 3 4,SpvDecorationOffset = 3 5,SpvDecorationXfbBuffer = 3 6,SpvDecorationXfbStride = 3 7,SpvDecorationFuncParamAttr = 3 8,SpvDecorationFPRoundingMode = 3 9,SpvDecorationFPFastMathMode = 4 0,SpvDecorationLinkageAttributes = 4 1,SpvDecorationNoContraction = 4 2,SpvDecorationInputAttachmentIndex = 4 3,SpvDecorationAlignment = 4 4,SpvDecorationMaxByteOffset = 4 5,SpvDecorationAlignmentId = 4 6,SpvDecorationMaxByteOffsetId = 4 7,SpvDecorationNoSignedWrap = 4 4 6 9,SpvDecorationNoUnsignedWrap = 4 4 7 0,SpvDecorationExplicitInterpAMD = 4 9 9 9,SpvDecorationOverrideCoverageNV = 5 2 4 8,SpvDecorationPassthroughNV = 5 2 5 0,SpvDecorationViewportRelativeNV = 5 2 5 2,SpvDecorationSecondaryViewportRelativeNV = 5 2 5 6,SpvDecorationPerPrimitiveNV = 5 2 7 1,SpvDecorationPerViewNV = 5 2 7 2,SpvDecorationPerTaskNV = 5 2 7 3,SpvDecorationPerVertexNV = 5 2 8 5,SpvDecorationNonUniform = 5 3 0 0,SpvDecorationNonUniformEXT = 5 3 0 0,SpvDecorationRestrictPointer = 5 3 5 5,SpvDecorationRestrictPointerEXT = 5 3 5 5,SpvDecorationAliasedPointer = 5 3 5 6,SpvDecorationAliasedPointerEXT = 5 3 5 6,SpvDecorationSIMTCallINTEL = 5 5 9 9,SpvDecorationReferencedIndirectlyINTEL = 5 6 0 2,SpvDecorationClobberINTEL = 5 6 0 7,SpvDecorationSideEffectsINTEL = 5 6 0 8,SpvDecorationVectorComputeVariableINTEL = 5 6 2 4,SpvDecorationFuncParamIOKindINTEL = 5 6 2 5,SpvDecorationVectorComputeFunctionINTEL = 5 6 2 6,SpvDecorationStackCallINTEL = 5 6 2 7,SpvDecorationGlobalVariableOffsetINTEL = 5 6 2 8,SpvDecorationCounterBuffer = 5 6 3 4,SpvDecorationHlslCounterBufferGOOGLE = 5 6 3 4,SpvDecorationHlslSemanticGOOGLE = 5 6 3 5,SpvDecorationUserSemantic = 5 6 3 5,SpvDecorationUserTypeGOOGLE = 5 6 3 6,SpvDecorationFunctionRoundingModeINTEL = 5 8 2 2,SpvDecorationFunctionDenormModeINTEL = 5 8 2 3,SpvDecorationRegisterINTEL = 5 8 2 5,SpvDecorationMemoryINTEL = 5 8 2 6,SpvDecorationNumbanksINTEL = 5 8 2 7,SpvDecorationBankwidthINTEL = 5 8 2 8,SpvDecorationMaxPrivateCopiesINTEL = 5 8 2 9,SpvDecorationSinglepumpINTEL = 5 8 3 0,SpvDecorationDoublepumpINTEL = 5 8 3 1,SpvDecorationMaxReplicatesINTEL = 5 8 3 2,SpvDecorationSimpleDualPortINTEL = 5 8 3 3,SpvDecorationMergeINTEL = 5 8 3 4,SpvDecorationBankBitsINTEL = 5 8 3 5,SpvDecorationForcePow2DepthINTEL = 5 8 3 6,SpvDecorationBurstCoalesceINTEL = 5 8 9 9,SpvDecorationCacheSizeINTEL = 5 9 0 0,SpvDecorationDontStaticallyCoalesceINTEL = 5 9 0 1,SpvDecorationPrefetchINTEL = 5 9 0 2,SpvDecorationStallEnableINTEL = 5 9 0 5,SpvDecorationFuseLoopsInFunctionINTEL = 5 9 0 7,SpvDecorationBufferLocationINTEL = 5 9 2 1,SpvDecorationIOPipeStorageINTEL = 5 9 4 4,SpvDecorationFunctionFloatingPointModeINTEL = 6 0 8 0,SpvDecorationSingleElementVectorINTEL = 6 0 8 5,SpvDecorationVectorComputeCallableFunctionINTEL = 6 0 8 7,SpvDecorationMax = 0 x7fffffff,} SpvDecoration ; typedef enum SpvBuiltIn_ { SpvBuiltInPosition = 0,SpvBuiltInPointSize = 1,SpvBuiltInClipDistance = 3,SpvBuiltInCullDistance = 4,SpvBuiltInVertexId = 5,SpvBuiltInInstanceId = 6,SpvBuiltInPrimitiveId = 7,SpvBuiltInInvocationId = 8,SpvBuiltInLayer = 9,SpvBuiltInViewportIndex = 1 0,SpvBuiltInTessLevelOuter = 1 1,SpvBuiltInTessLevelInner = 1 2,SpvBuiltInTessCoord = 1 3,SpvBuiltInPatchVertices = 1 4,SpvBuiltInFragCoord = 1 5,SpvBuiltInPointCoord = 1 6,SpvBuiltInFrontFacing = 1 7,SpvBuiltInSampleId = 1 8,SpvBuiltInSamplePosition = 1 9,SpvBuiltInSampleMask = 2 0,SpvBuiltInFragDepth = 2 2,SpvBuiltInHelperInvocation = 2 3,SpvBuiltInNumWorkgroups = 2 4,SpvBuiltInWorkgroupSize = 2 5,SpvBuiltInWorkgroupId = 2 6,SpvBuiltInLocalInvocationId = 2 7,SpvBuiltInGlobalInvocationId = 2 8,SpvBuiltInLocalInvocationIndex = 2 9,SpvBuiltInWorkDim = 3 0,SpvBuiltInGlobalSize = 3 1,SpvBuiltInEnqueuedWorkgroupSize = 3 2,SpvBuiltInGlobalOffset = 3 3,SpvBuiltInGlobalLinearId = 3 4,SpvBuiltInSubgroupSize = 3 6,SpvBuiltInSubgroupMaxSize = 3 7,SpvBuiltInNumSubgroups = 3 8,SpvBuiltInNumEnqueuedSubgroups = 3 9,SpvBuiltInSubgroupId = 4 0,SpvBuiltInSubgroupLocalInvocationId = 4 1,SpvBuiltInVertexIndex = 4 2,SpvBuiltInInstanceIndex = 4 3,SpvBuiltInSubgroupEqMask = 4 4 1 6,SpvBuiltInSubgroupEqMaskKHR = 4 4 1 6,SpvBuiltInSubgroupGeMask = 4 4 1 7,SpvBuiltInSubgroupGeMaskKHR = 4 4 1 7,SpvBuiltInSubgroupGtMask = 4 4 1 8,SpvBuiltInSubgroupGtMaskKHR = 4 4 1 8,SpvBuiltInSubgroupLeMask = 4 4 1 9,SpvBuiltInSubgroupLeMaskKHR = 4 4 1 9,SpvBuiltInSubgroupLtMask = 4 4 2 0,SpvBuiltInSubgroupLtMaskKHR = 4 4 2 0,SpvBuiltInBaseVertex = 4 4 2 4,SpvBuiltInBaseInstance = 4 4 2 5,SpvBuiltInDrawIndex = 4 4 2 6,SpvBuiltInPrimitiveShadingRateKHR = 4 4 3 2,SpvBuiltInDeviceIndex = 4 4 3 8,SpvBuiltInViewIndex = 4 4 4 0,SpvBuiltInShadingRateKHR = 4 4 4 4,SpvBuiltInBaryCoordNoPerspAMD = 4 9 9 2,SpvBuiltInBaryCoordNoPerspCentroidAMD = 4 9 9 3,SpvBuiltInBaryCoordNoPerspSampleAMD = 4 9 9 4,SpvBuiltInBaryCoordSmoothAMD = 4 9 9 5,SpvBuiltInBaryCoordSmoothCentroidAMD = 4 9 9 6,SpvBuiltInBaryCoordSmoothSampleAMD = 4 9 9 7,SpvBuiltInBaryCoordPullModelAMD = 4 9 9 8,SpvBuiltInFragStencilRefEXT = 5 0 1 4,SpvBuiltInViewportMaskNV = 5 2 5 3,SpvBuiltInSecondaryPositionNV = 5 2 5 7,SpvBuiltInSecondaryViewportMaskNV = 5 2 5 8,SpvBuiltInPositionPerViewNV = 5 2 6 1,SpvBuiltInViewportMaskPerViewNV = 5 2 6 2,SpvBuiltInFullyCoveredEXT = 5 2 6 4,SpvBuiltInTaskCountNV = 5 2 7 4,SpvBuiltInPrimitiveCountNV = 5 2 7 5,SpvBuiltInPrimitiveIndicesNV = 5 2 7 6,SpvBuiltInClipDistancePerViewNV = 5 2 7 7,SpvBuiltInCullDistancePerViewNV = 5 2 7 8,SpvBuiltInLayerPerViewNV = 5 2 7 9,SpvBuiltInMeshViewCountNV = 5 2 8 0,SpvBuiltInMeshViewIndicesNV = 5 2 8 1,SpvBuiltInBaryCoordNV = 5 2 8 6,SpvBuiltInBaryCoordNoPerspNV = 5 2 8 7,SpvBuiltInFragSizeEXT = 5 2 9 2,SpvBuiltInFragmentSizeNV = 5 2 9 2,SpvBuiltInFragInvocationCountEXT = 5 2 9 3,SpvBuiltInInvocationsPerPixelNV = 5 2 9 3,SpvBuiltInLaunchIdKHR = 5 3 1 9,SpvBuiltInLaunchIdNV = 5 3 1 9,SpvBuiltInLaunchSizeKHR = 5 3 2 0,SpvBuiltInLaunchSizeNV = 5 3 2 0,SpvBuiltInWorldRayOriginKHR = 5 3 2 1,SpvBuiltInWorldRayOriginNV = 5 3 2 1,SpvBuiltInWorldRayDirectionKHR = 5 3 2 2,SpvBuiltInWorldRayDirectionNV = 5 3 2 2,SpvBuiltInObjectRayOriginKHR = 5 3 2 3,SpvBuiltInObjectRayOriginNV = 5 3 2 3,SpvBuiltInObjectRayDirectionKHR = 5 3 2 4,SpvBuiltInObjectRayDirectionNV = 5 3 2 4,SpvBuiltInRayTminKHR = 5 3 2 5,SpvBuiltInRayTminNV = 5 3 2 5,SpvBuiltInRayTmaxKHR = 5 3 2 6,SpvBuiltInRayTmaxNV = 5 3 2 6,SpvBuiltInInstanceCustomIndexKHR = 5 3 2 7,SpvBuiltInInstanceCustomIndexNV = 5 3 2 7,SpvBuiltInObjectToWorldKHR = 5 3 3 0,SpvBuiltInObjectToWorldNV = 5 3 3 0,SpvBuiltInWorldToObjectKHR = 5 3 3 1,SpvBuiltInWorldToObjectNV = 5 3 3 1,SpvBuiltInHitTNV = 5 3 3 2,SpvBuiltInHitKindKHR = 5 3 3 3,SpvBuiltInHitKindNV = 5 3 3 3,SpvBuiltInIncomingRayFlagsKHR = 5 3 5 1,SpvBuiltInIncomingRayFlagsNV = 5 3 5 1,SpvBuiltInRayGeometryIndexKHR = 5 3 5 2,SpvBuiltInWarpsPerSMNV = 5 3 7 4,SpvBuiltInSMCountNV = 5 3 7 5,SpvBuiltInWarpIDNV = 5 3 7 6,SpvBuiltInSMIDNV = 5 3 7 7,SpvBuiltInMax = 0 x7fffffff,} SpvBuiltIn ; typedef enum SpvSelectionControlShift_ { SpvSelectionControlFlattenShift = 0,SpvSelectionControlDontFlattenShift = 1,SpvSelectionControlMax = 0 x7fffffff,} SpvSelectionControlShift ; typedef enum SpvSelectionControlMask_ { SpvSelectionControlMaskNone = 0,SpvSelectionControlFlattenMask = 0 x00000001,SpvSelectionControlDontFlattenMask = 0 x00000002,} SpvSelectionControlMask ; typedef enum SpvLoopControlShift_ { SpvLoopControlUnrollShift = 0,SpvLoopControlDontUnrollShift = 1,SpvLoopControlDependencyInfiniteShift = 2,SpvLoopControlDependencyLengthShift = 3,SpvLoopControlMinIterationsShift = 4,SpvLoopControlMaxIterationsShift = 5,SpvLoopControlIterationMultipleShift = 6,SpvLoopControlPeelCountShift = 7,SpvLoopControlPartialCountShift = 8,SpvLoopControlInitiationIntervalINTELShift = 1 6,SpvLoopControlMaxConcurrencyINTELShift = 1 7,SpvLoopControlDependencyArrayINTELShift = 1 8,SpvLoopControlPipelineEnableINTELShift = 1 9,SpvLoopControlLoopCoalesceINTELShift = 2 0,SpvLoopControlMaxInterleavingINTELShift = 2 1,SpvLoopControlSpeculatedIterationsINTELShift = 2 2,SpvLoopControlNoFusionINTELShift = 2 3,SpvLoopControlMax = 0 x7fffffff,} SpvLoopControlShift ; typedef enum SpvLoopControlMask_ { SpvLoopControlMaskNone = 0,SpvLoopControlUnrollMask = 0 x00000001,SpvLoopControlDontUnrollMask = 0 x00000002,SpvLoopControlDependencyInfiniteMask = 0 x00000004,SpvLoopControlDependencyLengthMask = 0 x00000008,SpvLoopControlMinIterationsMask = 0 x00000010,SpvLoopControlMaxIterationsMask = 0 x00000020,SpvLoopControlIterationMultipleMask = 0 x00000040,SpvLoopControlPeelCountMask = 0 x00000080,SpvLoopControlPartialCountMask = 0 x00000100,SpvLoopControlInitiationIntervalINTELMask = 0 x00010000,SpvLoopControlMaxConcurrencyINTELMask = 0 x00020000,SpvLoopControlDependencyArrayINTELMask = 0 x00040000,SpvLoopControlPipelineEnableINTELMask = 0 x00080000,SpvLoopControlLoopCoalesceINTELMask = 0 x00100000,SpvLoopControlMaxInterleavingINTELMask = 0 x00200000,SpvLoopControlSpeculatedIterationsINTELMask = 0 x00400000,SpvLoopControlNoFusionINTELMask = 0 x00800000,} SpvLoopControlMask ; typedef enum SpvFunctionControlShift_ { SpvFunctionControlInlineShift = 0,SpvFunctionControlDontInlineShift = 1,SpvFunctionControlPureShift = 2,SpvFunctionControlConstShift = 3,SpvFunctionControlMax = 0 x7fffffff,} SpvFunctionControlShift ; typedef enum SpvFunctionControlMask_ { SpvFunctionControlMaskNone = 0,SpvFunctionControlInlineMask = 0 x00000001,SpvFunctionControlDontInlineMask = 0 x00000002,SpvFunctionControlPureMask = 0 x00000004,SpvFunctionControlConstMask = 0 x00000008,} SpvFunctionControlMask ; typedef enum SpvMemorySemanticsShift_ { SpvMemorySemanticsAcquireShift = 1,SpvMemorySemanticsReleaseShift = 2,SpvMemorySemanticsAcquireReleaseShift = 3,SpvMemorySemanticsSequentiallyConsistentShift = 4,SpvMemorySemanticsUniformMemoryShift = 6,SpvMemorySemanticsSubgroupMemoryShift = 7,SpvMemorySemanticsWorkgroupMemoryShift = 8,SpvMemorySemanticsCrossWorkgroupMemoryShift = 9,SpvMemorySemanticsAtomicCounterMemoryShift = 1 0,SpvMemorySemanticsImageMemoryShift = 1 1,SpvMemorySemanticsOutputMemoryShift = 1 2,SpvMemorySemanticsOutputMemoryKHRShift = 1 2,SpvMemorySemanticsMakeAvailableShift = 1 3,SpvMemorySemanticsMakeAvailableKHRShift = 1 3,SpvMemorySemanticsMakeVisibleShift = 1 4,SpvMemorySemanticsMakeVisibleKHRShift = 1 4,SpvMemorySemanticsVolatileShift = 1 5,SpvMemorySemanticsMax = 0 x7fffffff,} SpvMemorySemanticsShift ; typedef enum SpvMemorySemanticsMask_ { SpvMemorySemanticsMaskNone = 0,SpvMemorySemanticsAcquireMask = 0 x00000002,SpvMemorySemanticsReleaseMask = 0 x00000004,SpvMemorySemanticsAcquireReleaseMask = 0 x00000008,SpvMemorySemanticsSequentiallyConsistentMask = 0 x00000010,SpvMemorySemanticsUniformMemoryMask = 0 x00000040,SpvMemorySemanticsSubgroupMemoryMask = 0 x00000080,SpvMemorySemanticsWorkgroupMemoryMask = 0 x00000100,SpvMemorySemanticsCrossWorkgroupMemoryMask = 0 x00000200,SpvMemorySemanticsAtomicCounterMemoryMask = 0 x00000400,SpvMemorySemanticsImageMemoryMask = 0 x00000800,SpvMemorySemanticsOutputMemoryMask = 0 x00001000,SpvMemorySemanticsOutputMemoryKHRMask = 0 x00001000,SpvMemorySemanticsMakeAvailableMask = 0 x00002000,SpvMemorySemanticsMakeAvailableKHRMask = 0 x00002000,SpvMemorySemanticsMakeVisibleMask = 0 x00004000,SpvMemorySemanticsMakeVisibleKHRMask = 0 x00004000,SpvMemorySemanticsVolatileMask = 0 x00008000,} SpvMemorySemanticsMask ; typedef enum SpvMemoryAccessShift_ { SpvMemoryAccessVolatileShift = 0,SpvMemoryAccessAlignedShift = 1,SpvMemoryAccessNontemporalShift = 2,SpvMemoryAccessMakePointerAvailableShift = 3,SpvMemoryAccessMakePointerAvailableKHRShift = 3,SpvMemoryAccessMakePointerVisibleShift = 4,SpvMemoryAccessMakePointerVisibleKHRShift = 4,SpvMemoryAccessNonPrivatePointerShift = 5,SpvMemoryAccessNonPrivatePointerKHRShift = 5,SpvMemoryAccessMax = 0 x7fffffff,} SpvMemoryAccessShift ; typedef enum SpvMemoryAccessMask_ { SpvMemoryAccessMaskNone = 0,SpvMemoryAccessVolatileMask = 0 x00000001,SpvMemoryAccessAlignedMask = 0 x00000002,SpvMemoryAccessNontemporalMask = 0 x00000004,SpvMemoryAccessMakePointerAvailableMask = 0 x00000008,SpvMemoryAccessMakePointerAvailableKHRMask = 0 x00000008,SpvMemoryAccessMakePointerVisibleMask = 0 x00000010,SpvMemoryAccessMakePointerVisibleKHRMask = 0 x00000010,SpvMemoryAccessNonPrivatePointerMask = 0 x00000020,SpvMemoryAccessNonPrivatePointerKHRMask = 0 x00000020,} SpvMemoryAccessMask ; typedef enum SpvScope_ { SpvScopeCrossDevice = 0,SpvScopeDevice = 1,SpvScopeWorkgroup = 2,SpvScopeSubgroup = 3,SpvScopeInvocation = 4,SpvScopeQueueFamily = 5,SpvScopeQueueFamilyKHR = 5,SpvScopeShaderCallKHR = 6,SpvScopeMax = 0 x7fffffff,} SpvScope ; typedef enum SpvGroupOperation_ { SpvGroupOperationReduce = 0,SpvGroupOperationInclusiveScan = 1,SpvGroupOperationExclusiveScan = 2,SpvGroupOperationClusteredReduce = 3,SpvGroupOperationPartitionedReduceNV = 6,SpvGroupOperationPartitionedInclusiveScanNV = 7,SpvGroupOperationPartitionedExclusiveScanNV = 8,SpvGroupOperationMax = 0 x7fffffff,} SpvGroupOperation ; typedef enum SpvKernelEnqueueFlags_ { SpvKernelEnqueueFlagsNoWait = 0,SpvKernelEnqueueFlagsWaitKernel = 1,SpvKernelEnqueueFlagsWaitWorkGroup = 2,SpvKernelEnqueueFlagsMax = 0 x7fffffff,} SpvKernelEnqueueFlags ; typedef enum SpvKernelProfilingInfoShift_ { SpvKernelProfilingInfoCmdExecTimeShift = 0,SpvKernelProfilingInfoMax = 0 x7fffffff,} SpvKernelProfilingInfoShift ; typedef enum SpvKernelProfilingInfoMask_ { SpvKernelProfilingInfoMaskNone = 0,SpvKernelProfilingInfoCmdExecTimeMask = 0 x00000001,} SpvKernelProfilingInfoMask ; typedef enum SpvCapability_ { SpvCapabilityMatrix = 0,SpvCapabilityShader = 1,SpvCapabilityGeometry = 2,SpvCapabilityTessellation = 3,SpvCapabilityAddresses = 4,SpvCapabilityLinkage = 5,SpvCapabilityKernel = 6,SpvCapabilityVector16 = 7,SpvCapabilityFloat16Buffer = 8,SpvCapabilityFloat16 = 9,SpvCapabilityFloat64 = 1 0,SpvCapabilityInt64 = 1 1,SpvCapabilityInt64Atomics = 1 2,SpvCapabilityImageBasic = 1 3,SpvCapabilityImageReadWrite = 1 4,SpvCapabilityImageMipmap = 1 5,SpvCapabilityPipes = 1 7,SpvCapabilityGroups = 1 8,SpvCapabilityDeviceEnqueue = 1 9,SpvCapabilityLiteralSampler = 2 0,SpvCapabilityAtomicStorage = 2 1,SpvCapabilityInt16 = 2 2,SpvCapabilityTessellationPointSize = 2 3,SpvCapabilityGeometryPointSize = 2 4,SpvCapabilityImageGatherExtended = 2 5,SpvCapabilityStorageImageMultisample = 2 7,SpvCapabilityUniformBufferArrayDynamicIndexing = 2 8,SpvCapabilitySampledImageArrayDynamicIndexing = 2 9,SpvCapabilityStorageBufferArrayDynamicIndexing = 3 0,SpvCapabilityStorageImageArrayDynamicIndexing = 3 1,SpvCapabilityClipDistance = 3 2,SpvCapabilityCullDistance = 3 3,SpvCapabilityImageCubeArray = 3 4,SpvCapabilitySampleRateShading = 3 5,SpvCapabilityImageRect = 3 6,SpvCapabilitySampledRect = 3 7,SpvCapabilityGenericPointer = 3 8,SpvCapabilityInt8 = 3 9,SpvCapabilityInputAttachment = 4 0,SpvCapabilitySparseResidency = 4 1,SpvCapabilityMinLod = 4 2,SpvCapabilitySampled1D = 4 3,SpvCapabilityImage1D = 4 4,SpvCapabilitySampledCubeArray = 4 5,SpvCapabilitySampledBuffer = 4 6,SpvCapabilityImageBuffer = 4 7,SpvCapabilityImageMSArray = 4 8,SpvCapabilityStorageImageExtendedFormats = 4 9,SpvCapabilityImageQuery = 5 0,SpvCapabilityDerivativeControl = 5 1,SpvCapabilityInterpolationFunction = 5 2,SpvCapabilityTransformFeedback = 5 3,SpvCapabilityGeometryStreams = 5 4,SpvCapabilityStorageImageReadWithoutFormat = 5 5,SpvCapabilityStorageImageWriteWithoutFormat = 5 6,SpvCapabilityMultiViewport = 5 7,SpvCapabilitySubgroupDispatch = 5 8,SpvCapabilityNamedBarrier = 5 9,SpvCapabilityPipeStorage = 6 0,SpvCapabilityGroupNonUniform = 6 1,SpvCapabilityGroupNonUniformVote = 6 2,SpvCapabilityGroupNonUniformArithmetic = 6 3,SpvCapabilityGroupNonUniformBallot = 6 4,SpvCapabilityGroupNonUniformShuffle = 6 5,SpvCapabilityGroupNonUniformShuffleRelative = 6 6,SpvCapabilityGroupNonUniformClustered = 6 7,SpvCapabilityGroupNonUniformQuad = 6 8,SpvCapabilityShaderLayer = 6 9,SpvCapabilityShaderViewportIndex = 7 0,SpvCapabilityFragmentShadingRateKHR = 4 4 2 2,SpvCapabilitySubgroupBallotKHR = 4 4 2 3,SpvCapabilityDrawParameters = 4 4 2 7,SpvCapabilityWorkgroupMemoryExplicitLayoutKHR = 4 4 2 8,SpvCapabilityWorkgroupMemoryExplicitLayout8BitAccessKHR = 4 4 2 9,SpvCapabilityWorkgroupMemoryExplicitLayout16BitAccessKHR = 4 4 3 0,SpvCapabilitySubgroupVoteKHR = 4 4 3 1,SpvCapabilityStorageBuffer16BitAccess = 4 4 3 3,SpvCapabilityStorageUniformBufferBlock16 = 4 4 3 3,SpvCapabilityStorageUniform16 = 4 4 3 4,SpvCapabilityUniformAndStorageBuffer16BitAccess = 4 4 3 4,SpvCapabilityStoragePushConstant16 = 4 4 3 5,SpvCapabilityStorageInputOutput16 = 4 4 3 6,SpvCapabilityDeviceGroup = 4 4 3 7,SpvCapabilityMultiView = 4 4 3 9,SpvCapabilityVariablePointersStorageBuffer = 4 4 4 1,SpvCapabilityVariablePointers = 4 4 4 2,SpvCapabilityAtomicStorageOps = 4 4 4 5,SpvCapabilitySampleMaskPostDepthCoverage = 4 4 4 7,SpvCapabilityStorageBuffer8BitAccess = 4 4 4 8,SpvCapabilityUniformAndStorageBuffer8BitAccess = 4 4 4 9,SpvCapabilityStoragePushConstant8 = 4 4 5 0,SpvCapabilityDenormPreserve = 4 4 6 4,SpvCapabilityDenormFlushToZero = 4 4 6 5,SpvCapabilitySignedZeroInfNanPreserve = 4 4 6 6,SpvCapabilityRoundingModeRTE = 4 4 6 7,SpvCapabilityRoundingModeRTZ = 4 4 6 8,SpvCapabilityRayQueryProvisionalKHR = 4 4 7 1,SpvCapabilityRayQueryKHR = 4 4 7 2,SpvCapabilityRayTraversalPrimitiveCullingKHR = 4 4 7 8,SpvCapabilityRayTracingKHR = 4 4 7 9,SpvCapabilityFloat16ImageAMD = 5 0 0 8,SpvCapabilityImageGatherBiasLodAMD = 5 0 0 9,SpvCapabilityFragmentMaskAMD = 5 0 1 0,SpvCapabilityStencilExportEXT = 5 0 1 3,SpvCapabilityImageReadWriteLodAMD = 5 0 1 5,SpvCapabilityInt64ImageEXT = 5 0 1 6,SpvCapabilityShaderClockKHR = 5 0 5 5,SpvCapabilitySampleMaskOverrideCoverageNV = 5 2 4 9,SpvCapabilityGeometryShaderPassthroughNV = 5 2 5 1,SpvCapabilityShaderViewportIndexLayerEXT = 5 2 5 4,SpvCapabilityShaderViewportIndexLayerNV = 5 2 5 4,SpvCapabilityShaderViewportMaskNV = 5 2 5 5,SpvCapabilityShaderStereoViewNV = 5 2 5 9,SpvCapabilityPerViewAttributesNV = 5 2 6 0,SpvCapabilityFragmentFullyCoveredEXT = 5 2 6 5,SpvCapabilityMeshShadingNV = 5 2 6 6,SpvCapabilityImageFootprintNV = 5 2 8 2,SpvCapabilityFragmentBarycentricNV = 5 2 8 4,SpvCapabilityComputeDerivativeGroupQuadsNV = 5 2 8 8,SpvCapabilityFragmentDensityEXT = 5 2 9 1,SpvCapabilityShadingRateNV = 5 2 9 1,SpvCapabilityGroupNonUniformPartitionedNV = 5 2 9 7,SpvCapabilityShaderNonUniform = 5 3 0 1,SpvCapabilityShaderNonUniformEXT = 5 3 0 1,SpvCapabilityRuntimeDescriptorArray = 5 3 0 2,SpvCapabilityRuntimeDescriptorArrayEXT = 5 3 0 2,SpvCapabilityInputAttachmentArrayDynamicIndexing = 5 3 0 3,SpvCapabilityInputAttachmentArrayDynamicIndexingEXT = 5 3 0 3,SpvCapabilityUniformTexelBufferArrayDynamicIndexing = 5 3 0 4,SpvCapabilityUniformTexelBufferArrayDynamicIndexingEXT = 5 3 0 4,SpvCapabilityStorageTexelBufferArrayDynamicIndexing = 5 3 0 5,SpvCapabilityStorageTexelBufferArrayDynamicIndexingEXT = 5 3 0 5,SpvCapabilityUniformBufferArrayNonUniformIndexing = 5 3 0 6,SpvCapabilityUniformBufferArrayNonUniformIndexingEXT = 5 3 0 6,SpvCapabilitySampledImageArrayNonUniformIndexing = 5 3 0 7,SpvCapabilitySampledImageArrayNonUniformIndexingEXT = 5 3 0 7,SpvCapabilityStorageBufferArrayNonUniformIndexing = 5 3 0 8,SpvCapabilityStorageBufferArrayNonUniformIndexingEXT = 5 3 0 8,SpvCapabilityStorageImageArrayNonUniformIndexing = 5 3 0 9,SpvCapabilityStorageImageArrayNonUniformIndexingEXT = 5 3 0 9,SpvCapabilityInputAttachmentArrayNonUniformIndexing = 5 3 1 0,SpvCapabilityInputAttachmentArrayNonUniformIndexingEXT = 5 3 1 0,SpvCapabilityUniformTexelBufferArrayNonUniformIndexing = 5 3 1 1,SpvCapabilityUniformTexelBufferArrayNonUniformIndexingEXT = 5 3 1 1,SpvCapabilityStorageTexelBufferArrayNonUniformIndexing = 5 3 1 2,SpvCapabilityStorageTexelBufferArrayNonUniformIndexingEXT = 5 3 1 2,SpvCapabilityRayTracingNV = 5 3 4 0,SpvCapabilityVulkanMemoryModel = 5 3 4 5,SpvCapabilityVulkanMemoryModelKHR = 5 3 4 5,SpvCapabilityVulkanMemoryModelDeviceScope = 5 3 4 6,SpvCapabilityVulkanMemoryModelDeviceScopeKHR = 5 3 4 6,SpvCapabilityPhysicalStorageBufferAddresses = 5 3 4 7,SpvCapabilityPhysicalStorageBufferAddressesEXT = 5 3 4 7,SpvCapabilityComputeDerivativeGroupLinearNV = 5 3 5 0,SpvCapabilityRayTracingProvisionalKHR = 5 3 5 3,SpvCapabilityCooperativeMatrixNV = 5 3 5 7,SpvCapabilityFragmentShaderSampleInterlockEXT = 5 3 6 3,SpvCapabilityFragmentShaderShadingRateInterlockEXT = 5 3 7 2,SpvCapabilityShaderSMBuiltinsNV = 5 3 7 3,SpvCapabilityFragmentShaderPixelInterlockEXT = 5 3 7 8,SpvCapabilityDemoteToHelperInvocationEXT = 5 3 7 9,SpvCapabilitySubgroupShuffleINTEL = 5 5 6 8,SpvCapabilitySubgroupBufferBlockIOINTEL = 5 5 6 9,SpvCapabilitySubgroupImageBlockIOINTEL = 5 5 7 0,SpvCapabilitySubgroupImageMediaBlockIOINTEL = 5 5 7 9,SpvCapabilityRoundToInfinityINTEL = 5 5 8 2,SpvCapabilityFloatingPointModeINTEL = 5 5 8 3,SpvCapabilityIntegerFunctions2INTEL = 5 5 8 4,SpvCapabilityFunctionPointersINTEL = 5 6 0 3,SpvCapabilityIndirectReferencesINTEL = 5 6 0 4,SpvCapabilityAsmINTEL = 5 6 0 6,SpvCapabilityAtomicFloat32MinMaxEXT = 5 6 1 2,SpvCapabilityAtomicFloat64MinMaxEXT = 5 6 1 3,SpvCapabilityAtomicFloat16MinMaxEXT = 5 6 1 6,SpvCapabilityVectorComputeINTEL = 5 6 1 7,SpvCapabilityVectorAnyINTEL = 5 6 1 9,SpvCapabilityExpectAssumeKHR = 5 6 2 9,SpvCapabilitySubgroupAvcMotionEstimationINTEL = 5 6 9 6,SpvCapabilitySubgroupAvcMotionEstimationIntraINTEL = 5 6 9 7,SpvCapabilitySubgroupAvcMotionEstimationChromaINTEL = 5 6 9 8,SpvCapabilityVariableLengthArrayINTEL = 5 8 1 7,SpvCapabilityFunctionFloatControlINTEL = 5 8 2 1,SpvCapabilityFPGAMemoryAttributesINTEL = 5 8 2 4,SpvCapabilityFPFastMathModeINTEL = 5 8 3 7,SpvCapabilityArbitraryPrecisionIntegersINTEL = 5 8 4 4,SpvCapabilityUnstructuredLoopControlsINTEL = 5 8 8 6,SpvCapabilityFPGALoopControlsINTEL = 5 8 8 8,SpvCapabilityKernelAttributesINTEL = 5 8 9 2,SpvCapabilityFPGAKernelAttributesINTEL = 5 8 9 7,SpvCapabilityFPGAMemoryAccessesINTEL = 5 8 9 8,SpvCapabilityFPGAClusterAttributesINTEL = 5 9 0 4,SpvCapabilityLoopFuseINTEL = 5 9 0 6,SpvCapabilityFPGABufferLocationINTEL = 5 9 2 0,SpvCapabilityUSMStorageClassesINTEL = 5 9 3 5,SpvCapabilityIOPipesINTEL = 5 9 4 3,SpvCapabilityBlockingPipesINTEL = 5 9 4 5,SpvCapabilityFPGARegINTEL = 5 9 4 8,SpvCapabilityAtomicFloat32AddEXT = 6 0 3 3,SpvCapabilityAtomicFloat64AddEXT = 6 0 3 4,SpvCapabilityLongConstantCompositeINTEL = 6 0 8 9,SpvCapabilityMax = 0 x7fffffff,} SpvCapability ; typedef enum SpvRayFlagsShift_ { SpvRayFlagsOpaqueKHRShift = 0,SpvRayFlagsNoOpaqueKHRShift = 1,SpvRayFlagsTerminateOnFirstHitKHRShift = 2,SpvRayFlagsSkipClosestHitShaderKHRShift = 3,SpvRayFlagsCullBackFacingTrianglesKHRShift = 4,SpvRayFlagsCullFrontFacingTrianglesKHRShift = 5,SpvRayFlagsCullOpaqueKHRShift = 6,SpvRayFlagsCullNoOpaqueKHRShift = 7,SpvRayFlagsSkipTrianglesKHRShift = 8,SpvRayFlagsSkipAABBsKHRShift = 9,SpvRayFlagsMax = 0 x7fffffff,} SpvRayFlagsShift ; typedef enum SpvRayFlagsMask_ { SpvRayFlagsMaskNone = 0,SpvRayFlagsOpaqueKHRMask = 0 x00000001,SpvRayFlagsNoOpaqueKHRMask = 0 x00000002,SpvRayFlagsTerminateOnFirstHitKHRMask = 0 x00000004,SpvRayFlagsSkipClosestHitShaderKHRMask = 0 x00000008,SpvRayFlagsCullBackFacingTrianglesKHRMask = 0 x00000010,SpvRayFlagsCullFrontFacingTrianglesKHRMask = 0 x00000020,SpvRayFlagsCullOpaqueKHRMask = 0 x00000040,SpvRayFlagsCullNoOpaqueKHRMask = 0 x00000080,SpvRayFlagsSkipTrianglesKHRMask = 0 x00000100,SpvRayFlagsSkipAABBsKHRMask = 0 x00000200,} SpvRayFlagsMask ; typedef enum SpvRayQueryIntersection_ { SpvRayQueryIntersectionRayQueryCandidateIntersectionKHR = 0,SpvRayQueryIntersectionRayQueryCommittedIntersectionKHR = 1,SpvRayQueryIntersectionMax = 0 x7fffffff,} SpvRayQueryIntersection ; typedef enum SpvRayQueryCommittedIntersectionType_ { SpvRayQueryCommittedIntersectionTypeRayQueryCommittedIntersectionNoneKHR = 0,SpvRayQueryCommittedIntersectionTypeRayQueryCommittedIntersectionTriangleKHR = 1,SpvRayQueryCommittedIntersectionTypeRayQueryCommittedIntersectionGeneratedKHR = 2,SpvRayQueryCommittedIntersectionTypeMax = 0 x7fffffff,} SpvRayQueryCommittedIntersectionType ; typedef enum SpvRayQueryCandidateIntersectionType_ { SpvRayQueryCandidateIntersectionTypeRayQueryCandidateIntersectionTriangleKHR = 0,SpvRayQueryCandidateIntersectionTypeRayQueryCandidateIntersectionAABBKHR = 1,SpvRayQueryCandidateIntersectionTypeMax = 0 x7fffffff,} SpvRayQueryCandidateIntersectionType ; typedef enum SpvFragmentShadingRateShift_ { SpvFragmentShadingRateVertical2PixelsShift = 0,SpvFragmentShadingRateVertical4PixelsShift = 1,SpvFragmentShadingRateHorizontal2PixelsShift = 2,SpvFragmentShadingRateHorizontal4PixelsShift = 3,SpvFragmentShadingRateMax = 0 x7fffffff,} SpvFragmentShadingRateShift ; typedef enum SpvFragmentShadingRateMask_ { SpvFragmentShadingRateMaskNone = 0,SpvFragmentShadingRateVertical2PixelsMask = 0 x00000001,SpvFragmentShadingRateVertical4PixelsMask = 0 x00000002,SpvFragmentShadingRateHorizontal2PixelsMask = 0 x00000004,SpvFragmentShadingRateHorizontal4PixelsMask = 0 x00000008,} SpvFragmentShadingRateMask ; typedef enum SpvFPDenormMode_ { SpvFPDenormModePreserve = 0,SpvFPDenormModeFlushToZero = 1,SpvFPDenormModeMax = 0 x7fffffff,} SpvFPDenormMode ; typedef enum SpvFPOperationMode_ { SpvFPOperationModeIEEE = 0,SpvFPOperationModeALT = 1,SpvFPOperationModeMax = 0 x7fffffff,} SpvFPOperationMode ; typedef enum SpvOp_ { SpvOpNop = 0,SpvOpUndef = 1,SpvOpSourceContinued = 2,SpvOpSource = 3,SpvOpSourceExtension = 4,SpvOpName = 5,SpvOpMemberName = 6,SpvOpString = 7,SpvOpLine = 8,SpvOpExtension = 1 0,SpvOpExtInstImport = 1 1,SpvOpExtInst = 1 2,SpvOpMemoryModel = 1 4,SpvOpEntryPoint = 1 5,SpvOpExecutionMode = 1 6,SpvOpCapability = 1 7,SpvOpTypeVoid = 1 9,SpvOpTypeBool = 2 0,SpvOpTypeInt = 2 1,SpvOpTypeFloat = 2 2,SpvOpTypeVector = 2 3,SpvOpTypeMatrix = 2 4,SpvOpTypeImage = 2 5,SpvOpTypeSampler = 2 6,SpvOpTypeSampledImage = 2 7,SpvOpTypeArray = 2 8,SpvOpTypeRuntimeArray = 2 9,SpvOpTypeStruct = 3 0,SpvOpTypeOpaque = 3 1,SpvOpTypePointer = 3 2,SpvOpTypeFunction = 3 3,SpvOpTypeEvent = 3 4,SpvOpTypeDeviceEvent = 3 5,SpvOpTypeReserveId = 3 6,SpvOpTypeQueue = 3 7,SpvOpTypePipe = 3 8,SpvOpTypeForwardPointer = 3 9,SpvOpConstantTrue = 4 1,SpvOpConstantFalse = 4 2,SpvOpConstant = 4 3,SpvOpConstantComposite = 4 4,SpvOpConstantSampler = 4 5,SpvOpConstantNull = 4 6,SpvOpSpecConstantTrue = 4 8,SpvOpSpecConstantFalse = 4 9,SpvOpSpecConstant = 5 0,SpvOpSpecConstantComposite = 5 1,SpvOpSpecConstantOp = 5 2,SpvOpFunction = 5 4,SpvOpFunctionParameter = 5 5,SpvOpFunctionEnd = 5 6,SpvOpFunctionCall = 5 7,SpvOpVariable = 5 9,SpvOpImageTexelPointer = 6 0,SpvOpLoad = 6 1,SpvOpStore = 6 2,SpvOpCopyMemory = 6 3,SpvOpCopyMemorySized = 6 4,SpvOpAccessChain = 6 5,SpvOpInBoundsAccessChain = 6 6,SpvOpPtrAccessChain = 6 7,SpvOpArrayLength = 6 8,SpvOpGenericPtrMemSemantics = 6 9,SpvOpInBoundsPtrAccessChain = 7 0,SpvOpDecorate = 7 1,SpvOpMemberDecorate = 7 2,SpvOpDecorationGroup = 7 3,SpvOpGroupDecorate = 7 4,SpvOpGroupMemberDecorate = 7 5,SpvOpVectorExtractDynamic = 7 7,SpvOpVectorInsertDynamic = 7 8,SpvOpVectorShuffle = 7 9,SpvOpCompositeConstruct = 8 0,SpvOpCompositeExtract = 8 1,SpvOpCompositeInsert = 8 2,SpvOpCopyObject = 8 3,SpvOpTranspose = 8 4,SpvOpSampledImage = 8 6,SpvOpImageSampleImplicitLod = 8 7,SpvOpImageSampleExplicitLod = 8 8,SpvOpImageSampleDrefImplicitLod = 8 9,SpvOpImageSampleDrefExplicitLod = 9 0,SpvOpImageSampleProjImplicitLod = 9 1,SpvOpImageSampleProjExplicitLod = 9 2,SpvOpImageSampleProjDrefImplicitLod = 9 3,SpvOpImageSampleProjDrefExplicitLod = 9 4,SpvOpImageFetch = 9 5,SpvOpImageGather = 9 6,SpvOpImageDrefGather = 9 7,SpvOpImageRead = 9 8,SpvOpImageWrite = 9 9,SpvOpImage = 1 0 0,SpvOpImageQueryFormat = 1 0 1,SpvOpImageQueryOrder = 1 0 2,SpvOpImageQuerySizeLod = 1 0 3,SpvOpImageQuerySize = 1 0 4,SpvOpImageQueryLod = 1 0 5,SpvOpImageQueryLevels = 1 0 6,SpvOpImageQuerySamples = 1 0 7,SpvOpConvertFToU = 1 0 9,SpvOpConvertFToS = 1 1 0,SpvOpConvertSToF = 1 1 1,SpvOpConvertUToF = 1 1 2,SpvOpUConvert = 1 1 3,SpvOpSConvert = 1 1 4,SpvOpFConvert = 1 1 5,SpvOpQuantizeToF16 = 1 1 6,SpvOpConvertPtrToU = 1 1 7,SpvOpSatConvertSToU = 1 1 8,SpvOpSatConvertUToS = 1 1 9,SpvOpConvertUToPtr = 1 2 0,SpvOpPtrCastToGeneric = 1 2 1,SpvOpGenericCastToPtr = 1 2 2,SpvOpGenericCastToPtrExplicit = 1 2 3,SpvOpBitcast = 1 2 4,SpvOpSNegate = 1 2 6,SpvOpFNegate = 1 2 7,SpvOpIAdd = 1 2 8,SpvOpFAdd = 1 2 9,SpvOpISub = 1 3 0,SpvOpFSub = 1 3 1,SpvOpIMul = 1 3 2,SpvOpFMul = 1 3 3,SpvOpUDiv = 1 3 4,SpvOpSDiv = 1 3 5,SpvOpFDiv = 1 3 6,SpvOpUMod = 1 3 7,SpvOpSRem = 1 3 8,SpvOpSMod = 1 3 9,SpvOpFRem = 1 4 0,SpvOpFMod = 1 4 1,SpvOpVectorTimesScalar = 1 4 2,SpvOpMatrixTimesScalar = 1 4 3,SpvOpVectorTimesMatrix = 1 4 4,SpvOpMatrixTimesVector = 1 4 5,SpvOpMatrixTimesMatrix = 1 4 6,SpvOpOuterProduct = 1 4 7,SpvOpDot = 1 4 8,SpvOpIAddCarry = 1 4 9,SpvOpISubBorrow = 1 5 0,SpvOpUMulExtended = 1 5 1,SpvOpSMulExtended = 1 5 2,SpvOpAny = 1 5 4,SpvOpAll = 1 5 5,SpvOpIsNan = 1 5 6,SpvOpIsInf = 1 5 7,SpvOpIsFinite = 1 5 8,SpvOpIsNormal = 1 5 9,SpvOpSignBitSet = 1 6 0,SpvOpLessOrGreater = 1 6 1,SpvOpOrdered = 1 6 2,SpvOpUnordered = 1 6 3,SpvOpLogicalEqual = 1 6 4,SpvOpLogicalNotEqual = 1 6 5,SpvOpLogicalOr = 1 6 6,SpvOpLogicalAnd = 1 6 7,SpvOpLogicalNot = 1 6 8,SpvOpSelect = 1 6 9,SpvOpIEqual = 1 7 0,SpvOpINotEqual = 1 7 1,SpvOpUGreaterThan = 1 7 2,SpvOpSGreaterThan = 1 7 3,SpvOpUGreaterThanEqual = 1 7 4,SpvOpSGreaterThanEqual = 1 7 5,SpvOpULessThan = 1 7 6,SpvOpSLessThan = 1 7 7,SpvOpULessThanEqual = 1 7 8,SpvOpSLessThanEqual = 1 7 9,SpvOpFOrdEqual = 1 8 0,SpvOpFUnordEqual = 1 8 1,SpvOpFOrdNotEqual = 1 8 2,SpvOpFUnordNotEqual = 1 8 3,SpvOpFOrdLessThan = 1 8 4,SpvOpFUnordLessThan = 1 8 5,SpvOpFOrdGreaterThan = 1 8 6,SpvOpFUnordGreaterThan = 1 8 7,SpvOpFOrdLessThanEqual = 1 8 8,SpvOpFUnordLessThanEqual = 1 8 9,SpvOpFOrdGreaterThanEqual = 1 9 0,SpvOpFUnordGreaterThanEqual = 1 9 1,SpvOpShiftRightLogical = 1 9 4,SpvOpShiftRightArithmetic = 1 9 5,SpvOpShiftLeftLogical = 1 9 6,SpvOpBitwiseOr = 1 9 7,SpvOpBitwiseXor = 1 9 8,SpvOpBitwiseAnd = 1 9 9,SpvOpNot = 2 0 0,SpvOpBitFieldInsert = 2 0 1,SpvOpBitFieldSExtract = 2 0 2,SpvOpBitFieldUExtract = 2 0 3,SpvOpBitReverse = 2 0 4,SpvOpBitCount = 2 0 5,SpvOpDPdx = 2 0 7,SpvOpDPdy = 2 0 8,SpvOpFwidth = 2 0 9,SpvOpDPdxFine = 2 1 0,SpvOpDPdyFine = 2 1 1,SpvOpFwidthFine = 2 1 2,SpvOpDPdxCoarse = 2 1 3,SpvOpDPdyCoarse = 2 1 4,SpvOpFwidthCoarse = 2 1 5,SpvOpEmitVertex = 2 1 8,SpvOpEndPrimitive = 2 1 9,SpvOpEmitStreamVertex = 2 2 0,SpvOpEndStreamPrimitive = 2 2 1,SpvOpControlBarrier = 2 2 4,SpvOpMemoryBarrier = 2 2 5,SpvOpAtomicLoad = 2 2 7,SpvOpAtomicStore = 2 2 8,SpvOpAtomicExchange = 2 2 9,SpvOpAtomicCompareExchange = 2 3 0,SpvOpAtomicCompareExchangeWeak = 2 3 1,SpvOpAtomicIIncrement = 2 3 2,SpvOpAtomicIDecrement = 2 3 3,SpvOpAtomicIAdd = 2 3 4,SpvOpAtomicISub = 2 3 5,SpvOpAtomicSMin = 2 3 6,SpvOpAtomicUMin = 2 3 7,SpvOpAtomicSMax = 2 3 8,SpvOpAtomicUMax = 2 3 9,SpvOpAtomicAnd = 2 4 0,SpvOpAtomicOr = 2 4 1,SpvOpAtomicXor = 2 4 2,SpvOpPhi = 2 4 5,SpvOpLoopMerge = 2 4 6,SpvOpSelectionMerge = 2 4 7,SpvOpLabel = 2 4 8,SpvOpBranch = 2 4 9,SpvOpBranchConditional = 2 5 0,SpvOpSwitch = 2 5 1,SpvOpKill = 2 5 2,SpvOpReturn = 2 5 3,SpvOpReturnValue = 2 5 4,SpvOpUnreachable = 2 5 5,SpvOpLifetimeStart = 2 5 6,SpvOpLifetimeStop = 2 5 7,SpvOpGroupAsyncCopy = 2 5 9,SpvOpGroupWaitEvents = 2 6 0,SpvOpGroupAll = 2 6 1,SpvOpGroupAny = 2 6 2,SpvOpGroupBroadcast = 2 6 3,SpvOpGroupIAdd = 2 6 4,SpvOpGroupFAdd = 2 6 5,SpvOpGroupFMin = 2 6 6,SpvOpGroupUMin = 2 6 7,SpvOpGroupSMin = 2 6 8,SpvOpGroupFMax = 2 6 9,SpvOpGroupUMax = 2 7 0,SpvOpGroupSMax = 2 7 1,SpvOpReadPipe = 2 7 4,SpvOpWritePipe = 2 7 5,SpvOpReservedReadPipe = 2 7 6,SpvOpReservedWritePipe = 2 7 7,SpvOpReserveReadPipePackets = 2 7 8,SpvOpReserveWritePipePackets = 2 7 9,SpvOpCommitReadPipe = 2 8 0,SpvOpCommitWritePipe = 2 8 1,SpvOpIsValidReserveId = 2 8 2,SpvOpGetNumPipePackets = 2 8 3,SpvOpGetMaxPipePackets = 2 8 4,SpvOpGroupReserveReadPipePackets = 2 8 5,SpvOpGroupReserveWritePipePackets = 2 8 6,SpvOpGroupCommitReadPipe = 2 8 7,SpvOpGroupCommitWritePipe = 2 8 8,SpvOpEnqueueMarker = 2 9 1,SpvOpEnqueueKernel = 2 9 2,SpvOpGetKernelNDrangeSubGroupCount = 2 9 3,SpvOpGetKernelNDrangeMaxSubGroupSize = 2 9 4,SpvOpGetKernelWorkGroupSize = 2 9 5,SpvOpGetKernelPreferredWorkGroupSizeMultiple = 2 9 6,SpvOpRetainEvent = 2 9 7,SpvOpReleaseEvent = 2 9 8,SpvOpCreateUserEvent = 2 9 9,SpvOpIsValidEvent = 3 0 0,SpvOpSetUserEventStatus = 3 0 1,SpvOpCaptureEventProfilingInfo = 3 0 2,SpvOpGetDefaultQueue = 3 0 3,SpvOpBuildNDRange = 3 0 4,SpvOpImageSparseSampleImplicitLod = 3 0 5,SpvOpImageSparseSampleExplicitLod = 3 0 6,SpvOpImageSparseSampleDrefImplicitLod = 3 0 7,SpvOpImageSparseSampleDrefExplicitLod = 3 0 8,SpvOpImageSparseSampleProjImplicitLod = 3 0 9,SpvOpImageSparseSampleProjExplicitLod = 3 1 0,SpvOpImageSparseSampleProjDrefImplicitLod = 3 1 1,SpvOpImageSparseSampleProjDrefExplicitLod = 3 1 2,SpvOpImageSparseFetch = 3 1 3,SpvOpImageSparseGather = 3 1 4,SpvOpImageSparseDrefGather = 3 1 5,SpvOpImageSparseTexelsResident = 3 1 6,SpvOpNoLine = 3 1 7,SpvOpAtomicFlagTestAndSet = 3 1 8,SpvOpAtomicFlagClear = 3 1 9,SpvOpImageSparseRead = 3 2 0,SpvOpSizeOf = 3 2 1,SpvOpTypePipeStorage = 3 2 2,SpvOpConstantPipeStorage = 3 2 3,SpvOpCreatePipeFromPipeStorage = 3 2 4,SpvOpGetKernelLocalSizeForSubgroupCount = 3 2 5,SpvOpGetKernelMaxNumSubgroups = 3 2 6,SpvOpTypeNamedBarrier = 3 2 7,SpvOpNamedBarrierInitialize = 3 2 8,SpvOpMemoryNamedBarrier = 3 2 9,SpvOpModuleProcessed = 3 3 0,SpvOpExecutionModeId = 3 3 1,SpvOpDecorateId = 3 3 2,SpvOpGroupNonUniformElect = 3 3 3,SpvOpGroupNonUniformAll = 3 3 4,SpvOpGroupNonUniformAny = 3 3 5,SpvOpGroupNonUniformAllEqual = 3 3 6,SpvOpGroupNonUniformBroadcast = 3 3 7,SpvOpGroupNonUniformBroadcastFirst = 3 3 8,SpvOpGroupNonUniformBallot = 3 3 9,SpvOpGroupNonUniformInverseBallot = 3 4 0,SpvOpGroupNonUniformBallotBitExtract = 3 4 1,SpvOpGroupNonUniformBallotBitCount = 3 4 2,SpvOpGroupNonUniformBallotFindLSB = 3 4 3,SpvOpGroupNonUniformBallotFindMSB = 3 4 4,SpvOpGroupNonUniformShuffle = 3 4 5,SpvOpGroupNonUniformShuffleXor = 3 4 6,SpvOpGroupNonUniformShuffleUp = 3 4 7,SpvOpGroupNonUniformShuffleDown = 3 4 8,SpvOpGroupNonUniformIAdd = 3 4 9,SpvOpGroupNonUniformFAdd = 3 5 0,SpvOpGroupNonUniformIMul = 3 5 1,SpvOpGroupNonUniformFMul = 3 5 2,SpvOpGroupNonUniformSMin = 3 5 3,SpvOpGroupNonUniformUMin = 3 5 4,SpvOpGroupNonUniformFMin = 3 5 5,SpvOpGroupNonUniformSMax = 3 5 6,SpvOpGroupNonUniformUMax = 3 5 7,SpvOpGroupNonUniformFMax = 3 5 8,SpvOpGroupNonUniformBitwiseAnd = 3 5 9,SpvOpGroupNonUniformBitwiseOr = 3 6 0,SpvOpGroupNonUniformBitwiseXor = 3 6 1,SpvOpGroupNonUniformLogicalAnd = 3 6 2,SpvOpGroupNonUniformLogicalOr = 3 6 3,SpvOpGroupNonUniformLogicalXor = 3 6 4,SpvOpGroupNonUniformQuadBroadcast = 3 6 5,SpvOpGroupNonUniformQuadSwap = 3 6 6,SpvOpCopyLogical = 4 0 0,SpvOpPtrEqual = 4 0 1,SpvOpPtrNotEqual = 4 0 2,SpvOpPtrDiff = 4 0 3,SpvOpTerminateInvocation = 4 4 1 6,SpvOpSubgroupBallotKHR = 4 4 2 1,SpvOpSubgroupFirstInvocationKHR = 4 4 2 2,SpvOpSubgroupAllKHR = 4 4 2 8,SpvOpSubgroupAnyKHR = 4 4 2 9,SpvOpSubgroupAllEqualKHR = 4 4 3 0,SpvOpSubgroupReadInvocationKHR = 4 4 3 2,SpvOpTraceRayKHR = 4 4 4 5,SpvOpExecuteCallableKHR = 4 4 4 6,SpvOpConvertUToAccelerationStructureKHR = 4 4 4 7,SpvOpIgnoreIntersectionKHR = 4 4 4 8,SpvOpTerminateRayKHR = 4 4 4 9,SpvOpTypeRayQueryKHR = 4 4 7 2,SpvOpRayQueryInitializeKHR = 4 4 7 3,SpvOpRayQueryTerminateKHR = 4 4 7 4,SpvOpRayQueryGenerateIntersectionKHR = 4 4 7 5,SpvOpRayQueryConfirmIntersectionKHR = 4 4 7 6,SpvOpRayQueryProceedKHR = 4 4 7 7,SpvOpRayQueryGetIntersectionTypeKHR = 4 4 7 9,SpvOpGroupIAddNonUniformAMD = 5 0 0 0,SpvOpGroupFAddNonUniformAMD = 5 0 0 1,SpvOpGroupFMinNonUniformAMD = 5 0 0 2,SpvOpGroupUMinNonUniformAMD = 5 0 0 3,SpvOpGroupSMinNonUniformAMD = 5 0 0 4,SpvOpGroupFMaxNonUniformAMD = 5 0 0 5,SpvOpGroupUMaxNonUniformAMD = 5 0 0 6,SpvOpGroupSMaxNonUniformAMD = 5 0 0 7,SpvOpFragmentMaskFetchAMD = 5 0 1 1,SpvOpFragmentFetchAMD = 5 0 1 2,SpvOpReadClockKHR = 5 0 5 6,SpvOpImageSampleFootprintNV = 5 2 8 3,SpvOpGroupNonUniformPartitionNV = 5 2 9 6,SpvOpWritePackedPrimitiveIndices4x8NV = 5 2 9 9,SpvOpReportIntersectionKHR = 5 3 3 4,SpvOpReportIntersectionNV = 5 3 3 4,SpvOpIgnoreIntersectionNV = 5 3 3 5,SpvOpTerminateRayNV = 5 3 3 6,SpvOpTraceNV = 5 3 3 7,SpvOpTypeAccelerationStructureKHR = 5 3 4 1,SpvOpTypeAccelerationStructureNV = 5 3 4 1,SpvOpExecuteCallableNV = 5 3 4 4,SpvOpTypeCooperativeMatrixNV = 5 3 5 8,SpvOpCooperativeMatrixLoadNV = 5 3 5 9,SpvOpCooperativeMatrixStoreNV = 5 3 6 0,SpvOpCooperativeMatrixMulAddNV = 5 3 6 1,SpvOpCooperativeMatrixLengthNV = 5 3 6 2,SpvOpBeginInvocationInterlockEXT = 5 3 6 4,SpvOpEndInvocationInterlockEXT = 5 3 6 5,SpvOpDemoteToHelperInvocationEXT = 5 3 8 0,SpvOpIsHelperInvocationEXT = 5 3 8 1,SpvOpSubgroupShuffleINTEL = 5 5 7 1,SpvOpSubgroupShuffleDownINTEL = 5 5 7 2,SpvOpSubgroupShuffleUpINTEL = 5 5 7 3,SpvOpSubgroupShuffleXorINTEL = 5 5 7 4,SpvOpSubgroupBlockReadINTEL = 5 5 7 5,SpvOpSubgroupBlockWriteINTEL = 5 5 7 6,SpvOpSubgroupImageBlockReadINTEL = 5 5 7 7,SpvOpSubgroupImageBlockWriteINTEL = 5 5 7 8,SpvOpSubgroupImageMediaBlockReadINTEL = 5 5 8 0,SpvOpSubgroupImageMediaBlockWriteINTEL = 5 5 8 1,SpvOpUCountLeadingZerosINTEL = 5 5 8 5,SpvOpUCountTrailingZerosINTEL = 5 5 8 6,SpvOpAbsISubINTEL = 5 5 8 7,SpvOpAbsUSubINTEL = 5 5 8 8,SpvOpIAddSatINTEL = 5 5 8 9,SpvOpUAddSatINTEL = 5 5 9 0,SpvOpIAverageINTEL = 5 5 9 1,SpvOpUAverageINTEL = 5 5 9 2,SpvOpIAverageRoundedINTEL = 5 5 9 3,SpvOpUAverageRoundedINTEL = 5 5 9 4,SpvOpISubSatINTEL = 5 5 9 5,SpvOpUSubSatINTEL = 5 5 9 6,SpvOpIMul32x16INTEL = 5 5 9 7,SpvOpUMul32x16INTEL = 5 5 9 8,SpvOpConstFunctionPointerINTEL = 5 6 0 0,SpvOpFunctionPointerCallINTEL = 5 6 0 1,SpvOpAsmTargetINTEL = 5 6 0 9,SpvOpAsmINTEL = 5 6 1 0,SpvOpAsmCallINTEL = 5 6 1 1,SpvOpAtomicFMinEXT = 5 6 1 4,SpvOpAtomicFMaxEXT = 5 6 1 5,SpvOpAssumeTrueKHR = 5 6 3 0,SpvOpExpectKHR = 5 6 3 1,SpvOpDecorateString = 5 6 3 2,SpvOpDecorateStringGOOGLE = 5 6 3 2,SpvOpMemberDecorateString = 5 6 3 3,SpvOpMemberDecorateStringGOOGLE = 5 6 3 3,SpvOpVmeImageINTEL = 5 6 9 9,SpvOpTypeVmeImageINTEL = 5 7 0 0,SpvOpTypeAvcImePayloadINTEL = 5 7 0 1,SpvOpTypeAvcRefPayloadINTEL = 5 7 0 2,SpvOpTypeAvcSicPayloadINTEL = 5 7 0 3,SpvOpTypeAvcMcePayloadINTEL = 5 7 0 4,SpvOpTypeAvcMceResultINTEL = 5 7 0 5,SpvOpTypeAvcImeResultINTEL = 5 7 0 6,SpvOpTypeAvcImeResultSingleReferenceStreamoutINTEL = 5 7 0 7,SpvOpTypeAvcImeResultDualReferenceStreamoutINTEL = 5 7 0 8,SpvOpTypeAvcImeSingleReferenceStreaminINTEL = 5 7 0 9,SpvOpTypeAvcImeDualReferenceStreaminINTEL = 5 7 1 0,SpvOpTypeAvcRefResultINTEL = 5 7 1 1,SpvOpTypeAvcSicResultINTEL = 5 7 1 2,SpvOpSubgroupAvcMceGetDefaultInterBaseMultiReferencePenaltyINTEL = 5 7 1 3,SpvOpSubgroupAvcMceSetInterBaseMultiReferencePenaltyINTEL = 5 7 1 4,SpvOpSubgroupAvcMceGetDefaultInterShapePenaltyINTEL = 5 7 1 5,SpvOpSubgroupAvcMceSetInterShapePenaltyINTEL = 5 7 1 6,SpvOpSubgroupAvcMceGetDefaultInterDirectionPenaltyINTEL = 5 7 1 7,SpvOpSubgroupAvcMceSetInterDirectionPenaltyINTEL = 5 7 1 8,SpvOpSubgroupAvcMceGetDefaultIntraLumaShapePenaltyINTEL = 5 7 1 9,SpvOpSubgroupAvcMceGetDefaultInterMotionVectorCostTableINTEL = 5 7 2 0,SpvOpSubgroupAvcMceGetDefaultHighPenaltyCostTableINTEL = 5 7 2 1,SpvOpSubgroupAvcMceGetDefaultMediumPenaltyCostTableINTEL = 5 7 2 2,SpvOpSubgroupAvcMceGetDefaultLowPenaltyCostTableINTEL = 5 7 2 3,SpvOpSubgroupAvcMceSetMotionVectorCostFunctionINTEL = 5 7 2 4,SpvOpSubgroupAvcMceGetDefaultIntraLumaModePenaltyINTEL = 5 7 2 5,SpvOpSubgroupAvcMceGetDefaultNonDcLumaIntraPenaltyINTEL = 5 7 2 6,SpvOpSubgroupAvcMceGetDefaultIntraChromaModeBasePenaltyINTEL = 5 7 2 7,SpvOpSubgroupAvcMceSetAcOnlyHaarINTEL = 5 7 2 8,SpvOpSubgroupAvcMceSetSourceInterlacedFieldPolarityINTEL = 5 7 2 9,SpvOpSubgroupAvcMceSetSingleReferenceInterlacedFieldPolarityINTEL = 5 7 3 0,SpvOpSubgroupAvcMceSetDualReferenceInterlacedFieldPolaritiesINTEL = 5 7 3 1,SpvOpSubgroupAvcMceConvertToImePayloadINTEL = 5 7 3 2,SpvOpSubgroupAvcMceConvertToImeResultINTEL = 5 7 3 3,SpvOpSubgroupAvcMceConvertToRefPayloadINTEL = 5 7 3 4,SpvOpSubgroupAvcMceConvertToRefResultINTEL = 5 7 3 5,SpvOpSubgroupAvcMceConvertToSicPayloadINTEL = 5 7 3 6,SpvOpSubgroupAvcMceConvertToSicResultINTEL = 5 7 3 7,SpvOpSubgroupAvcMceGetMotionVectorsINTEL = 5 7 3 8,SpvOpSubgroupAvcMceGetInterDistortionsINTEL = 5 7 3 9,SpvOpSubgroupAvcMceGetBestInterDistortionsINTEL = 5 7 4 0,SpvOpSubgroupAvcMceGetInterMajorShapeINTEL = 5 7 4 1,SpvOpSubgroupAvcMceGetInterMinorShapeINTEL = 5 7 4 2,SpvOpSubgroupAvcMceGetInterDirectionsINTEL = 5 7 4 3,SpvOpSubgroupAvcMceGetInterMotionVectorCountINTEL = 5 7 4 4,SpvOpSubgroupAvcMceGetInterReferenceIdsINTEL = 5 7 4 5,SpvOpSubgroupAvcMceGetInterReferenceInterlacedFieldPolaritiesINTEL = 5 7 4 6,SpvOpSubgroupAvcImeInitializeINTEL = 5 7 4 7,SpvOpSubgroupAvcImeSetSingleReferenceINTEL = 5 7 4 8,SpvOpSubgroupAvcImeSetDualReferenceINTEL = 5 7 4 9,SpvOpSubgroupAvcImeRefWindowSizeINTEL = 5 7 5 0,SpvOpSubgroupAvcImeAdjustRefOffsetINTEL = 5 7 5 1,SpvOpSubgroupAvcImeConvertToMcePayloadINTEL = 5 7 5 2,SpvOpSubgroupAvcImeSetMaxMotionVectorCountINTEL = 5 7 5 3,SpvOpSubgroupAvcImeSetUnidirectionalMixDisableINTEL = 5 7 5 4,SpvOpSubgroupAvcImeSetEarlySearchTerminationThresholdINTEL = 5 7 5 5,SpvOpSubgroupAvcImeSetWeightedSadINTEL = 5 7 5 6,SpvOpSubgroupAvcImeEvaluateWithSingleReferenceINTEL = 5 7 5 7,SpvOpSubgroupAvcImeEvaluateWithDualReferenceINTEL = 5 7 5 8,SpvOpSubgroupAvcImeEvaluateWithSingleReferenceStreaminINTEL = 5 7 5 9,SpvOpSubgroupAvcImeEvaluateWithDualReferenceStreaminINTEL = 5 7 6 0,SpvOpSubgroupAvcImeEvaluateWithSingleReferenceStreamoutINTEL = 5 7 6 1,SpvOpSubgroupAvcImeEvaluateWithDualReferenceStreamoutINTEL = 5 7 6 2,SpvOpSubgroupAvcImeEvaluateWithSingleReferenceStreaminoutINTEL = 5 7 6 3,SpvOpSubgroupAvcImeEvaluateWithDualReferenceStreaminoutINTEL = 5 7 6 4,SpvOpSubgroupAvcImeConvertToMceResultINTEL = 5 7 6 5,SpvOpSubgroupAvcImeGetSingleReferenceStreaminINTEL = 5 7 6 6,SpvOpSubgroupAvcImeGetDualReferenceStreaminINTEL = 5 7 6 7,SpvOpSubgroupAvcImeStripSingleReferenceStreamoutINTEL = 5 7 6 8,SpvOpSubgroupAvcImeStripDualReferenceStreamoutINTEL = 5 7 6 9,SpvOpSubgroupAvcImeGetStreamoutSingleReferenceMajorShapeMotionVectorsINTEL = 5 7 7 0,SpvOpSubgroupAvcImeGetStreamoutSingleReferenceMajorShapeDistortionsINTEL = 5 7 7 1,SpvOpSubgroupAvcImeGetStreamoutSingleReferenceMajorShapeReferenceIdsINTEL = 5 7 7 2,SpvOpSubgroupAvcImeGetStreamoutDualReferenceMajorShapeMotionVectorsINTEL = 5 7 7 3,SpvOpSubgroupAvcImeGetStreamoutDualReferenceMajorShapeDistortionsINTEL = 5 7 7 4,SpvOpSubgroupAvcImeGetStreamoutDualReferenceMajorShapeReferenceIdsINTEL = 5 7 7 5,SpvOpSubgroupAvcImeGetBorderReachedINTEL = 5 7 7 6,SpvOpSubgroupAvcImeGetTruncatedSearchIndicationINTEL = 5 7 7 7,SpvOpSubgroupAvcImeGetUnidirectionalEarlySearchTerminationINTEL = 5 7 7 8,SpvOpSubgroupAvcImeGetWeightingPatternMinimumMotionVectorINTEL = 5 7 7 9,SpvOpSubgroupAvcImeGetWeightingPatternMinimumDistortionINTEL = 5 7 8 0,SpvOpSubgroupAvcFmeInitializeINTEL = 5 7 8 1,SpvOpSubgroupAvcBmeInitializeINTEL = 5 7 8 2,SpvOpSubgroupAvcRefConvertToMcePayloadINTEL = 5 7 8 3,SpvOpSubgroupAvcRefSetBidirectionalMixDisableINTEL = 5 7 8 4,SpvOpSubgroupAvcRefSetBilinearFilterEnableINTEL = 5 7 8 5,SpvOpSubgroupAvcRefEvaluateWithSingleReferenceINTEL = 5 7 8 6,SpvOpSubgroupAvcRefEvaluateWithDualReferenceINTEL = 5 7 8 7,SpvOpSubgroupAvcRefEvaluateWithMultiReferenceINTEL = 5 7 8 8,SpvOpSubgroupAvcRefEvaluateWithMultiReferenceInterlacedINTEL = 5 7 8 9,SpvOpSubgroupAvcRefConvertToMceResultINTEL = 5 7 9 0,SpvOpSubgroupAvcSicInitializeINTEL = 5 7 9 1,SpvOpSubgroupAvcSicConfigureSkcINTEL = 5 7 9 2,SpvOpSubgroupAvcSicConfigureIpeLumaINTEL = 5 7 9 3,SpvOpSubgroupAvcSicConfigureIpeLumaChromaINTEL = 5 7 9 4,SpvOpSubgroupAvcSicGetMotionVectorMaskINTEL = 5 7 9 5,SpvOpSubgroupAvcSicConvertToMcePayloadINTEL = 5 7 9 6,SpvOpSubgroupAvcSicSetIntraLumaShapePenaltyINTEL = 5 7 9 7,SpvOpSubgroupAvcSicSetIntraLumaModeCostFunctionINTEL = 5 7 9 8,SpvOpSubgroupAvcSicSetIntraChromaModeCostFunctionINTEL = 5 7 9 9,SpvOpSubgroupAvcSicSetBilinearFilterEnableINTEL = 5 8 0 0,SpvOpSubgroupAvcSicSetSkcForwardTransformEnableINTEL = 5 8 0 1,SpvOpSubgroupAvcSicSetBlockBasedRawSkipSadINTEL = 5 8 0 2,SpvOpSubgroupAvcSicEvaluateIpeINTEL = 5 8 0 3,SpvOpSubgroupAvcSicEvaluateWithSingleReferenceINTEL = 5 8 0 4,SpvOpSubgroupAvcSicEvaluateWithDualReferenceINTEL = 5 8 0 5,SpvOpSubgroupAvcSicEvaluateWithMultiReferenceINTEL = 5 8 0 6,SpvOpSubgroupAvcSicEvaluateWithMultiReferenceInterlacedINTEL = 5 8 0 7,SpvOpSubgroupAvcSicConvertToMceResultINTEL = 5 8 0 8,SpvOpSubgroupAvcSicGetIpeLumaShapeINTEL = 5 8 0 9,SpvOpSubgroupAvcSicGetBestIpeLumaDistortionINTEL = 5 8 1 0,SpvOpSubgroupAvcSicGetBestIpeChromaDistortionINTEL = 5 8 1 1,SpvOpSubgroupAvcSicGetPackedIpeLumaModesINTEL = 5 8 1 2,SpvOpSubgroupAvcSicGetIpeChromaModeINTEL = 5 8 1 3,SpvOpSubgroupAvcSicGetPackedSkcLumaCountThresholdINTEL = 5 8 1 4,SpvOpSubgroupAvcSicGetPackedSkcLumaSumThresholdINTEL = 5 8 1 5,SpvOpSubgroupAvcSicGetInterRawSadsINTEL = 5 8 1 6,SpvOpVariableLengthArrayINTEL = 5 8 1 8,SpvOpSaveMemoryINTEL = 5 8 1 9,SpvOpRestoreMemoryINTEL = 5 8 2 0,SpvOpLoopControlINTEL = 5 8 8 7,SpvOpPtrCastToCrossWorkgroupINTEL = 5 9 3 4,SpvOpCrossWorkgroupCastToPtrINTEL = 5 9 3 8,SpvOpReadPipeBlockingINTEL = 5 9 4 6,SpvOpWritePipeBlockingINTEL = 5 9 4 7,SpvOpFPGARegINTEL = 5 9 4 9,SpvOpRayQueryGetRayTMinKHR = 6 0 1 6,SpvOpRayQueryGetRayFlagsKHR = 6 0 1 7,SpvOpRayQueryGetIntersectionTKHR = 6 0 1 8,SpvOpRayQueryGetIntersectionInstanceCustomIndexKHR = 6 0 1 9,SpvOpRayQueryGetIntersectionInstanceIdKHR = 6 0 2 0,SpvOpRayQueryGetIntersectionInstanceShaderBindingTableRecordOffsetKHR = 6 0 2 1,SpvOpRayQueryGetIntersectionGeometryIndexKHR = 6 0 2 2,SpvOpRayQueryGetIntersectionPrimitiveIndexKHR = 6 0 2 3,SpvOpRayQueryGetIntersectionBarycentricsKHR = 6 0 2 4,SpvOpRayQueryGetIntersectionFrontFaceKHR = 6 0 2 5,SpvOpRayQueryGetIntersectionCandidateAABBOpaqueKHR = 6 0 2 6,SpvOpRayQueryGetIntersectionObjectRayDirectionKHR = 6 0 2 7,SpvOpRayQueryGetIntersectionObjectRayOriginKHR = 6 0 2 8,SpvOpRayQueryGetWorldRayDirectionKHR = 6 0 2 9,SpvOpRayQueryGetWorldRayOriginKHR = 6 0 3 0,SpvOpRayQueryGetIntersectionObjectToWorldKHR = 6 0 3 1,SpvOpRayQueryGetIntersectionWorldToObjectKHR = 6 0 3 2,SpvOpAtomicFAddEXT = 6 0 3 5,SpvOpTypeBufferSurfaceINTEL = 6 0 8 6,SpvOpTypeStructContinuedINTEL = 6 0 9 0,SpvOpConstantCompositeContinuedINTEL = 6 0 9 1,SpvOpSpecConstantCompositeContinuedINTEL = 6 0 9 2,SpvOpMax = 0 x7fffffff,} SpvOp ; # ifdef SPV_ENABLE_UTILITY_CODE void)",
    "insertText": "SpvHasResultAndType(SpvOp opcode, bool *hasResult, bool *hasResultType)"
  },
  {
    "label": "switch()",
    "kind": "Method",
    "detail": "Function (* hasResult =* hasResultType = false ;)",
    "insertText": "switch(opcode)"
  }
]