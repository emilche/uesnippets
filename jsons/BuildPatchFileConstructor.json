[
  {
    "label": "FBuildPatchAppManifest",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBuildPatchAppManifest"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "IBuildInstallerSharedContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IBuildInstallerSharedContext"
  },
  {
    "label": "FChunkPart",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FChunkPart"
  },
  {
    "label": "IFileSystem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IFileSystem"
  },
  {
    "label": "IChunkSource",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IChunkSource"
  },
  {
    "label": "IChunkReferenceTracker",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IChunkReferenceTracker"
  },
  {
    "label": "IInstallerError",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IInstallerError"
  },
  {
    "label": "IInstallerAnalytics",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IInstallerAnalytics"
  },
  {
    "label": "IFileConstructorStat",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IFileConstructorStat"
  },
  {
    "label": "IBuildManifestSet",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IBuildManifestSet"
  },
  {
    "label": "IBuildInstallerThread",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IBuildInstallerThread"
  },
  {
    "label": "IChunkDbChunkSource",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IChunkDbChunkSource"
  },
  {
    "label": "containing",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "containing"
  },
  {
    "label": "FFileConstructorConfig",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFileConstructorConfig"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "controls",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "controls"
  },
  {
    "label": "FBuildPatchFileConstructor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBuildPatchFileConstructor"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "that",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "that"
  },
  {
    "label": "required",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "required"
  },
  {
    "label": "IFileConstructorStat",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IFileConstructorStat"
  },
  {
    "label": "Run()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Run()"
  },
  {
    "label": "GetRequiredDiskSpace()",
    "kind": "Method",
    "detail": "Function (uint64)",
    "insertText": "GetRequiredDiskSpace()"
  },
  {
    "label": "GetAvailableDiskSpace()",
    "kind": "Method",
    "detail": "Function (uint64)",
    "insertText": "GetAvailableDiskSpace()"
  },
  {
    "label": "CountBytesProcessed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CountBytesProcessed(const int64& ByteCount)"
  },
  {
    "label": "GetFileToConstruct()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetFileToConstruct(FString& Filename)"
  },
  {
    "label": "GetRemainingBytes()",
    "kind": "Method",
    "detail": "Function (int64)",
    "insertText": "GetRemainingBytes()"
  },
  {
    "label": "CalculateInProgressDiskSpaceRequired()",
    "kind": "Method",
    "detail": "Function (uint64)",
    "insertText": "CalculateInProgressDiskSpaceRequired(const FFileManifest& InProgressFileManifest, uint64 InProgressFileSize)"
  },
  {
    "label": "CalculateDiskSpaceRequirementsWithDeleteDuringInstall()",
    "kind": "Method",
    "detail": "Function (uint64)",
    "insertText": "CalculateDiskSpaceRequirementsWithDeleteDuringInstall(const TArray<FString>& InConstructionStack)"
  },
  {
    "label": "ConstructFileFromChunks()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ConstructFileFromChunks(const FString& BuildFilename, const FFileManifest& FileManifest, bool bResumeExisting)"
  },
  {
    "label": "AppendChunkData()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AppendChunkData(const FChunkPart& ChunkPart, TArray<uint8>& DestinationBuffer, EConstructionError& ConstructionError)"
  },
  {
    "label": "DeleteDirectoryContents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeleteDirectoryContents(const FString& RootDirectory)"
  },
  {
    "label": "WriteJobThreadRun()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WriteJobThreadRun()"
  },
  {
    "label": "CalculateRequiredDiskSpace()",
    "kind": "Method",
    "detail": "Function (uint64)",
    "insertText": "CalculateRequiredDiskSpace(const FBuildPatchAppManifestPtr& CurrentManifest, const FBuildPatchAppManifestRef& BuildManifest, const BuildPatchServices::EInstallMode& InstallMode, const TSet<FString>& InstallTags)"
  }
]