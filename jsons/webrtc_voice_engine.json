[
  {
    "label": "AudioFrameProcessor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AudioFrameProcessor"
  },
  {
    "label": "AudioSource",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AudioSource"
  },
  {
    "label": "WebRtcVoiceMediaChannel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "WebRtcVoiceMediaChannel"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "WebRtcVoiceEngine",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "WebRtcVoiceEngine"
  },
  {
    "label": "WebRtcVoiceMediaChannel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "WebRtcVoiceMediaChannel"
  },
  {
    "label": "WebRtcVoiceMediaChannel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "WebRtcVoiceMediaChannel"
  },
  {
    "label": "WebRtcAudioSendStream",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "WebRtcAudioSendStream"
  },
  {
    "label": "WebRtcAudioReceiveStream",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "WebRtcAudioReceiveStream"
  },
  {
    "label": "WebRtcVoiceEngine()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "WebRtcVoiceEngine(\n      webrtc::TaskQueueFactory* task_queue_factory,\n      webrtc::AudioDeviceModule* adm,\n      const rtc::scoped_refptr<webrtc::AudioEncoderFactory>& encoder_factory,\n      const rtc::scoped_refptr<webrtc::AudioDecoderFactory>& decoder_factory,\n      rtc::scoped_refptr<webrtc::AudioMixer> audio_mixer,\n      rtc::scoped_refptr<webrtc::AudioProcessing> audio_processing,\n      webrtc::AudioFrameProcessor* audio_frame_processor,\n      const webrtc::FieldTrialsView& trials)"
  },
  {
    "label": "ApplyOptions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyOptions(const AudioOptions& options)"
  },
  {
    "label": "CreateVoEChannel()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "CreateVoEChannel()"
  },
  {
    "label": "WebRtcVoiceMediaChannel()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "WebRtcVoiceMediaChannel(WebRtcVoiceEngine* engine,\n                          const MediaConfig& config,\n                          const AudioOptions& options,\n                          const webrtc::CryptoOptions& crypto_options,\n                          webrtc::Call* call)"
  },
  {
    "label": "SetOptions()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetOptions(const AudioOptions& options)"
  },
  {
    "label": "SetRecvCodecs()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetRecvCodecs(const std::vector<AudioCodec>& codecs)"
  },
  {
    "label": "SetSendCodecs()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetSendCodecs(const std::vector<AudioCodec>& codecs)"
  },
  {
    "label": "SetLocalSource()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetLocalSource(uint32_t ssrc, AudioSource* source)"
  },
  {
    "label": "MuteStream()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "MuteStream(uint32_t ssrc, bool mute)"
  },
  {
    "label": "CreateVoEChannel()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "CreateVoEChannel()"
  },
  {
    "label": "DeleteVoEChannel()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DeleteVoEChannel(int channel)"
  },
  {
    "label": "SetMaxSendBitrate()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetMaxSendBitrate(int bps)"
  },
  {
    "label": "SetupRecording()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetupRecording()"
  },
  {
    "label": "MaybeDeregisterUnsignaledRecvStream()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "MaybeDeregisterUnsignaledRecvStream(uint32_t ssrc)"
  }
]