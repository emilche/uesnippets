[
  {
    "label": "_LIBCPP_TYPE_VIS",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_LIBCPP_TYPE_VIS"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# ifndef _LIBCPP___FILESYSTEM_FILE_STATUS_H # define _LIBCPP___FILESYSTEM_FILE_STATUS_H # include<__availability> # include<__config> # include<__filesystem / file_type . h> # include<__filesystem / perms . h> # if !)",
    "insertText": "defined(_LIBCPP_HAS_NO_PRAGMA_SYSTEM_HEADER)"
  },
  {
    "label": "file_status()",
    "kind": "Method",
    "detail": "Function (public : _LIBCPP_INLINE_VISIBILITY)",
    "insertText": "file_status() noexcept : file_status(file_type::none)"
  },
  {
    "label": "file_status()",
    "kind": "Method",
    "detail": "Function (} _LIBCPP_INLINE_VISIBILITY)",
    "insertText": "file_status(file_type __ft, perms __prms = perms::unknown) noexcept : __ft_(__ft), __prms_(__prms)"
  },
  {
    "label": "file_status()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "file_status(const file_status&)"
  },
  {
    "label": "file_status()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "file_status(file_status&&)"
  },
  {
    "label": "file_status()",
    "kind": "Method",
    "detail": "Function (_LIBCPP_INLINE_VISIBILITY ~)",
    "insertText": "file_status()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} file_status&)",
    "insertText": "operator(const file_status&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (file_status&)",
    "insertText": "operator(file_status&&)"
  },
  {
    "label": "type()",
    "kind": "Method",
    "detail": "Function (_LIBCPP_INLINE_VISIBILITY file_type)",
    "insertText": "type()"
  },
  {
    "label": "permissions()",
    "kind": "Method",
    "detail": "Function (__ft_ = __ft ; } _LIBCPP_INLINE_VISIBILITY void)",
    "insertText": "permissions(perms __p)"
  }
]