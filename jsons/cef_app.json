[
  {
    "label": "CefApp",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CefApp"
  },
  {
    "label": "CefExecuteProcess()",
    "kind": "Method",
    "detail": "Function (# ifndef CEF_INCLUDE_CEF_APP_H_ # define CEF_INCLUDE_CEF_APP_H_ # pragma once # include \" include / cef_base . h \" # include \" include / cef_browser_process_handler . h \" # include \" include / cef_command_line . h \" # include \" include / cef_render_process_handler . h \" # include \" include / cef_resource_bundle_handler . h \" # include \" include / cef_scheme . h \" class CefApp ; int)",
    "insertText": "CefExecuteProcess(const CefMainArgs& args, CefRefPtr<CefApp> application, void* windows_sandbox_info)"
  },
  {
    "label": "CefInitialize()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CefInitialize(const CefMainArgs& args, const CefSettings& settings, CefRefPtr<CefApp> application, void* windows_sandbox_info)"
  },
  {
    "label": "CefShutdown()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CefShutdown()"
  },
  {
    "label": "CefDoMessageLoopWork()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CefDoMessageLoopWork()"
  },
  {
    "label": "CefRunMessageLoop()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CefRunMessageLoop()"
  },
  {
    "label": "CefQuitMessageLoop()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CefQuitMessageLoop()"
  },
  {
    "label": "CefSetOSModalLoop()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CefSetOSModalLoop(bool osModalLoop)"
  },
  {
    "label": "CefEnableHighDPISupport()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CefEnableHighDPISupport()"
  },
  {
    "label": "OnBeforeCommandLineProcessing()",
    "kind": "Method",
    "detail": "Function (class CefApp : public CefBaseRefCounted { public : void)",
    "insertText": "OnBeforeCommandLineProcessing(const CefString& process_type, CefRefPtr<CefCommandLine> command_line)"
  },
  {
    "label": "OnRegisterCustomSchemes()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "OnRegisterCustomSchemes(CefRawPtr<CefSchemeRegistrar> registrar)"
  },
  {
    "label": "GetResourceBundleHandler()",
    "kind": "Method",
    "detail": "Function (} CefRefPtr<CefResourceBundleHandler>)",
    "insertText": "GetResourceBundleHandler()"
  }
]