[
  {
    "label": "DNX_CompressionID_t",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "DNX_CompressionID_t"
  },
  {
    "label": "DNX_ColorComponentOrder_t",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "DNX_ColorComponentOrder_t"
  },
  {
    "label": "DNX_SignalStandard_t",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "DNX_SignalStandard_t"
  },
  {
    "label": "DNX_ComponentType_t",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "DNX_ComponentType_t"
  },
  {
    "label": "DNX_RasterGeometryType_t",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "DNX_RasterGeometryType_t"
  },
  {
    "label": "DNX_DecodeResolution_t",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "DNX_DecodeResolution_t"
  },
  {
    "label": "DNX_BufferFieldOrder_t",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "DNX_BufferFieldOrder_t"
  },
  {
    "label": "DNX_ColorVolume_t",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "DNX_ColorVolume_t"
  },
  {
    "label": "DNX_ColorFormat_t",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "DNX_ColorFormat_t"
  },
  {
    "label": "DNX_SubSampling_t",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "DNX_SubSampling_t"
  },
  {
    "label": "in",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "in"
  },
  {
    "label": "DNX_CompressedParams_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DNX_CompressedParams_t"
  },
  {
    "label": "in",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "in"
  },
  {
    "label": "DNX_UncompressedParams_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DNX_UncompressedParams_t"
  },
  {
    "label": "in",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "in"
  },
  {
    "label": "DNX_EncodeOperationParams_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DNX_EncodeOperationParams_t"
  },
  {
    "label": "in",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "in"
  },
  {
    "label": "DNX_DecodeOperationParams_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DNX_DecodeOperationParams_t"
  },
  {
    "label": "_DNX_Encoder",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_DNX_Encoder"
  },
  {
    "label": "_DNX_Decoder",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_DNX_Decoder"
  },
  {
    "label": "DNX_GetVersion()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DNX_GetVersion(\n    int*  major, \n    int*  minor, \n    int*  patch, \n    int*  build, \n    char* releaseType\n    )"
  },
  {
    "label": "DNX_Initialize()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "DNX_Initialize()"
  },
  {
    "label": "DNX_Finalize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DNX_Finalize()"
  },
  {
    "label": "DNX_GetInfoFromCompressedFrame()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "DNX_GetInfoFromCompressedFrame(\n    const void*             cmpFrame,\n    unsigned int            availableSize,\n    DNX_CompressedParams_t* compressedParams,\n    DNX_SignalStandard_t*   signalStandard\n    )"
  },
  {
    "label": "DNX_SetUserData()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "DNX_SetUserData(\n    void*          cmpFrame,\n    unsigned int   cmpSize,\n    unsigned int   UDL,\n    void*          userData,\n    unsigned int   userDataSize\n    )"
  },
  {
    "label": "DNX_GetUserData()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "DNX_GetUserData(\n    void*          cmpFrame,\n    unsigned int   cmpSize,\n    unsigned int*  UDL,\n    void*          userData,\n    unsigned int   userDataBufferSize\n    )"
  },
  {
    "label": "DNX_GetCompressedBufferSize()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "DNX_GetCompressedBufferSize(const DNX_CompressedParams_t* compressedParams)"
  },
  {
    "label": "DNX_GetErrorString()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DNX_GetErrorString(\n    int   errorCode, \n    char* errorStrPtr\n    )"
  },
  {
    "label": "DNX_CreateEncoder()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "DNX_CreateEncoder(\n    const DNX_CompressedParams_t*      compressedParams,\n    const DNX_UncompressedParams_t*    uncompressedParams,\n    const DNX_EncodeOperationParams_t* opParams,\n    DNX_Encoder*                 encoder\n    )"
  },
  {
    "label": "DNX_ConfigureEncoder()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "DNX_ConfigureEncoder(\n    const DNX_CompressedParams_t*      compressedParams,\n    const DNX_UncompressedParams_t*    uncompressedParams,\n    const DNX_EncodeOperationParams_t* opParams,\n    DNX_Encoder encoder\n    )"
  },
  {
    "label": "DNX_CreateDecoder()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "DNX_CreateDecoder(\n    const DNX_CompressedParams_t*      compressedParams,\n    const DNX_UncompressedParams_t*    uncompressedParams,\n    const DNX_DecodeOperationParams_t* opParams,\n    DNX_Decoder*                 decoder\n    )"
  },
  {
    "label": "DNX_ConfigureDecoder()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "DNX_ConfigureDecoder(\n    const DNX_CompressedParams_t*      compressedParams,\n    const DNX_UncompressedParams_t*    uncompressedParams,\n    const DNX_DecodeOperationParams_t* opParams,\n    DNX_Decoder decoder\n    )"
  },
  {
    "label": "DNX_EncodeFrame()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "DNX_EncodeFrame(\n    DNX_Encoder   encoder,\n    const void*   inBuf,\n    void*         outBuf,\n    unsigned int  inBufSize,\n    unsigned int  outBufSize,\n    unsigned int* compressedFrameSize\n    )"
  },
  {
    "label": "DNX_DecodeFrame()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "DNX_DecodeFrame(\n    DNX_Decoder  decoder,\n    const void*  inBuf,\n    void*        outBuf,\n    unsigned int inBufSize,\n    unsigned int outBufSize\n    )"
  },
  {
    "label": "DNX_DeleteEncoder()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DNX_DeleteEncoder(\n    DNX_Encoder encoder\n    )"
  },
  {
    "label": "DNX_DeleteDecoder()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DNX_DeleteDecoder(\n    DNX_Decoder decoder\n    )"
  }
]