[
  {
    "label": "IPlugin",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPlugin"
  },
  {
    "label": "FJsonObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FJsonObject"
  },
  {
    "label": "FLocTextHelper",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLocTextHelper"
  },
  {
    "label": "LOCALIZATION_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "LOCALIZATION_API"
  },
  {
    "label": "FExportLocalizationOptions",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FExportLocalizationOptions"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" Containers / ArrayView . h \" # include \" Containers / Map . h \" # include \" Containers / UnrealString . h \" # include \" Templates / Function . h \" # include \" Templates / SharedPointer . h \" # include \" PortableObjectPipeline . h \" # include \" Internationalization / LocalizedTextSourceTypes . h \" # include \" UserGeneratedContentLocalization . generated . h \" class IPlugin ; class FJsonObject ; class FLocTextHelper ;)",
    "insertText": "UCLASS(config=Engine, defaultconfig)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: UPROPERTY(EditAnywhere, Category=Localization)"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "USTRUCT()"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: void InitializeFromProject(const ELocalizedTextSourceCategory LocalizationCategory = ELocalizedTextSourceCategory::Game)"
  },
  {
    "label": "Validate()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Validate(const FUserGeneratedContentLocalizationDescriptor& DefaultDescriptor)"
  },
  {
    "label": "ToJsonObject()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ToJsonObject(TSharedPtr<FJsonObject>& OutJsonObject)"
  },
  {
    "label": "ToJsonString()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ToJsonString(FString& OutJsonString)"
  },
  {
    "label": "ToJsonFile()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ToJsonFile(const TCHAR* InFilename)"
  },
  {
    "label": "FromJsonObject()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "FromJsonObject(TSharedRef<const FJsonObject> InJsonObject)"
  },
  {
    "label": "FromJsonString()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "FromJsonString(const FString& InJsonString)"
  },
  {
    "label": "FromJsonFile()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "FromJsonFile(const TCHAR* InFilename)"
  },
  {
    "label": "ExportLocalization()",
    "kind": "Method",
    "detail": "Function (} ; namespace UserGeneratedContentLocalization { struct FExportLocalizationOptions { FUserGeneratedContentLocalizationDescriptor UGCLocDescriptor ; TMap<FString,FString> PluginNameToCollectionNameFilter ; bool bGatherSource = true ; bool bGatherAssets = true ; bool bGatherVerse = true ; bool bUpdatePluginDescriptor = true ; bool bAutoCleanup = true ; ELocalizedTextSourceCategory LocalizationCategory = ELocalizedTextSourceCategory::Game ; FString CopyrightNotice ; } ; enum class ELoadLocalizationResult : uint8 { NoData,Failed,Success,} ; bool)",
    "insertText": "ExportLocalization(TArrayView<const TSharedRef<IPlugin>> Plugins, const FExportLocalizationOptions& ExportOptions, TFunctionRef<int32(const FString&, FString&)> CommandletExecutor)"
  },
  {
    "label": "CompileLocalization()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CompileLocalization(TArrayView<const TSharedRef<IPlugin>> Plugins, const FUserGeneratedContentLocalizationDescriptor* DefaultDescriptor = nullptr)"
  },
  {
    "label": "CompileLocalization()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CompileLocalization(const FString& PluginName, const FString& PluginInputContentDirectory, const FString& PluginOutputContentDirectory, const FUserGeneratedContentLocalizationDescriptor* DefaultDescriptor = nullptr)"
  },
  {
    "label": "LoadLocalization()",
    "kind": "Method",
    "detail": "Function (ELoadLocalizationResult)",
    "insertText": "LoadLocalization(const FString& PluginName, const FString& PluginContentDirectory, TSharedPtr<FLocTextHelper>& OutLocTextHelper, const FUserGeneratedContentLocalizationDescriptor* DefaultDescriptor = nullptr)"
  },
  {
    "label": "CleanupLocalization()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CleanupLocalization(TArrayView<const TSharedRef<IPlugin>> Plugins, const FUserGeneratedContentLocalizationDescriptor& DefaultDescriptor, const bool bSilent = false)"
  }
]