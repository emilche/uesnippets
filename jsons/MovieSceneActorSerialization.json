[
  {
    "label": "FActorFileHeader",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FActorFileHeader"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FActorProperty",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FActorProperty"
  },
  {
    "label": "FActorFileHeader()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Misc / FrameRate . h \" # include \" UObject / UnrealType . h \" # include \" MovieSceneSectionSerialization . h \" struct FActorFileHeader { const int32 cVersion = 1 ;)",
    "insertText": "FActorFileHeader() : Version(cVersion)"
  },
  {
    "label": "FActorFileHeader()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FActorFileHeader(const FString& InName, const FString& InLabel, const FName& InSerializedType, const FString& InClassName, bool SpawnedPost) : Version(cVersion) , SerializedType(InSerializedType) , UObjectName(InName) , Label(InLabel) , bRecordToPossessable(false) , bWasSpawnedPostRecord(SpawnedPost) , ClassName(InClassName) , TemplateName(\"None\")"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} FArchive&)",
    "insertText": "operator(FArchive& Ar, FActorFileHeader& Header)"
  },
  {
    "label": "FActorProperty()",
    "kind": "Method",
    "detail": "Function (Ar<<Header . Version ; Ar<<Header . SerializedType ; Ar<<Header . Guid ; Ar<<Header . UObjectName ; Ar<<Header . Label ; Ar<<Header . bRecordToPossessable ; Ar<<Header . bWasSpawnedPostRecord ; Ar<<Header . ClassName ; Ar<<Header . TemplateName ; Ar<<Header . FolderName ; return Ar ; } int32 Version ; FName SerializedType ; FGuid Guid ; FString UObjectName ; FString Label ; bool bRecordToPossessable ; bool bWasSpawnedPostRecord ; FString ClassName ; FString TemplateName ; FName FolderName ; } ; enum class EActoryPropertyType : uint8 { ComponentType,PropertyType,OtherType,} ; struct FActorProperty {)",
    "insertText": "FActorProperty()"
  },
  {
    "label": "FActorProperty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FActorProperty(const FString &InObjectName, const FName& InSerializedType, const FGuid& InGuid) : UObjectName(InObjectName) , SerializedType(InSerializedType) , Guid(InGuid) , Type(EActoryPropertyType::OtherType)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} FArchive&)",
    "insertText": "operator(FArchive& Ar, FActorProperty& Property)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (Ar<<Property . SerializedType ; Ar<<Property . Guid ; Ar<<Property . UObjectName ; Ar<<Property . Type ;)",
    "insertText": "if(Property.Type == EActoryPropertyType::ComponentType)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (Ar<<Property . BindingName ; Ar<<Property . ClassName ; } else)",
    "insertText": "if(Property.Type == EActoryPropertyType::PropertyType)"
  }
]