[
  {
    "label": "H264BitstreamParser",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "H264BitstreamParser"
  },
  {
    "label": "Result",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Result"
  },
  {
    "label": "H264BitstreamParser()",
    "kind": "Method",
    "detail": "Function (# ifndef COMMON_VIDEO_H264_H264_BITSTREAM_PARSER_H_ # define COMMON_VIDEO_H264_H264_BITSTREAM_PARSER_H_ # include<stddef . h> # include<stdint . h> # include \" absl / types / optional . h \" # include \" api / video_codecs / bitstream_parser . h \" # include \" common_video / h264 / pps_parser . h \" # include \" common_video / h264 / sps_parser . h \" namespace webrtc { class H264BitstreamParser : public BitstreamParser { public :)",
    "insertText": "H264BitstreamParser()"
  },
  {
    "label": "ParseBitstream()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ParseBitstream(rtc::ArrayView<const uint8_t> bitstream)"
  },
  {
    "label": "GetLastSliceQp()",
    "kind": "Method",
    "detail": "Function (absl::optional<int>)",
    "insertText": "GetLastSliceQp()"
  },
  {
    "label": "ParseSlice()",
    "kind": "Method",
    "detail": "Function (protected : enum Result { kOk,kInvalidStream,kUnsupportedStream,} ; void)",
    "insertText": "ParseSlice(const uint8_t* slice, size_t length)"
  },
  {
    "label": "ParseNonParameterSetNalu()",
    "kind": "Method",
    "detail": "Function (Result)",
    "insertText": "ParseNonParameterSetNalu(const uint8_t* source, size_t source_length, uint8_t nalu_type)"
  }
]