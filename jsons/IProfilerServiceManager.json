[
  {
    "label": "IProfilerServiceManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IProfilerServiceManager"
  },
  {
    "label": "FProfilerCycleCounter",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FProfilerCycleCounter"
  },
  {
    "label": "FProfilerFloatAccumulator",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FProfilerFloatAccumulator"
  },
  {
    "label": "FProfilerCountAccumulator",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FProfilerCountAccumulator"
  },
  {
    "label": "FProfilerCycleGraph",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FProfilerCycleGraph"
  },
  {
    "label": "FProfilerDataFrame",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FProfilerDataFrame"
  },
  {
    "label": "FStatDescription",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FStatDescription"
  },
  {
    "label": "FStatGroupDescription",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FStatGroupDescription"
  },
  {
    "label": "FStatMetaData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FStatMetaData"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "FProfilerFileChunkHeader",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FProfilerFileChunkHeader"
  },
  {
    "label": "IProfilerServiceManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IProfilerServiceManager"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_TwoParams()",
    "kind": "Method",
    "detail": "Function (STATS)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_TwoParams(FProfilerData2Delegate, const FGuid&, TArray<FStatMessage>& )"
  },
  {
    "label": "Writer()",
    "kind": "Method",
    "detail": "Function (FMemoryWriter)",
    "insertText": "Writer(ArrayHeader)"
  }
]