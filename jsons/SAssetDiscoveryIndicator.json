[
  {
    "label": "FGeometry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGeometry"
  },
  {
    "label": "SAssetDiscoveryIndicator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SAssetDiscoveryIndicator"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Animation / CurveHandle . h \" # include \" Animation / CurveSequence . h \" # include \" AssetDiscoveryIndicator . h \" # include \" AssetRegistry / IAssetRegistry . h \" # include \" Internationalization / Text . h \" # include \" Layout / Margin . h \" # include \" Layout / Visibility . h \" # include \" Math / Color . h \" # include \" Math / Vector2D . h \" # include \" Misc / Attribute . h \" # include \" Misc / Optional . h \" # include \" Styling / SlateColor . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Widgets / SCompoundWidget . h \" struct FGeometry ; class SAssetDiscoveryIndicator : public SCompoundWidget { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SAssetDiscoveryIndicator ) : _ScaleMode(EAssetDiscoveryIndicatorScaleMode::Scale_None) , _FadeIn(true)"
  },
  {
    "label": "SLATE_ARGUMENT()",
    "kind": "Method",
    "detail": "Function (_Visibility = EVisibility::SelfHitTestInvisible ; })",
    "insertText": "SLATE_ARGUMENT(EAssetDiscoveryIndicatorScaleMode::Type, ScaleMode ) SLATE_ARGUMENT( FMargin, Padding ) SLATE_ARGUMENT( bool, FadeIn ) SLATE_END_ARGS() virtual ~SAssetDiscoveryIndicator()"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct(const FArguments& InArgs)"
  },
  {
    "label": "Tick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Tick(const FGeometry& AllottedGeometry, const double InCurrentTime, const float InDeltaTime)"
  },
  {
    "label": "OnAssetRegistryFileLoadProgress()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAssetRegistryFileLoadProgress(const IAssetRegistry::FFileLoadProgressUpdateData& ProgressUpdateData)"
  },
  {
    "label": "OnAssetRegistryFilesLoaded()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAssetRegistryFilesLoaded()"
  },
  {
    "label": "GetMainStatusText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetMainStatusText()"
  },
  {
    "label": "GetSubStatusText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetSubStatusText()"
  },
  {
    "label": "GetProgress()",
    "kind": "Method",
    "detail": "Function (TOptional<float>)",
    "insertText": "GetProgress()"
  },
  {
    "label": "GetSubStatusTextVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "GetSubStatusTextVisibility()"
  },
  {
    "label": "GetStatusTextWrapWidth()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetStatusTextWrapWidth()"
  },
  {
    "label": "GetBorderBackgroundColor()",
    "kind": "Method",
    "detail": "Function (FSlateColor)",
    "insertText": "GetBorderBackgroundColor()"
  },
  {
    "label": "GetIndicatorColorAndOpacity()",
    "kind": "Method",
    "detail": "Function (FLinearColor)",
    "insertText": "GetIndicatorColorAndOpacity()"
  },
  {
    "label": "GetIndicatorDesiredSizeScale()",
    "kind": "Method",
    "detail": "Function (FVector2D)",
    "insertText": "GetIndicatorDesiredSizeScale()"
  },
  {
    "label": "GetIndicatorVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "GetIndicatorVisibility()"
  }
]