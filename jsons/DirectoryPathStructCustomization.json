[
  {
    "label": "IMenu",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IMenu"
  },
  {
    "label": "IPropertyHandle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPropertyHandle"
  },
  {
    "label": "SButton",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SButton"
  },
  {
    "label": "FDirectoryPathStructCustomization",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDirectoryPathStructCustomization"
  },
  {
    "label": "FDetailWidgetRow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDetailWidgetRow"
  },
  {
    "label": "IDetailChildrenBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDetailChildrenBuilder"
  },
  {
    "label": "MakeInstance()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / UnrealString . h \" # include \" IPropertyTypeCustomization . h \" # include \" Input / Reply . h \" # include \" Internationalization / Text . h \" # include \" Templates / SharedPointer . h \" class IMenu ; class IPropertyHandle ; class SButton ; class FDirectoryPathStructCustomization : public IPropertyTypeCustomization { public : TSharedRef<IPropertyTypeCustomization>)",
    "insertText": "MakeInstance()"
  },
  {
    "label": "CustomizeHeader()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CustomizeHeader(TSharedRef<class IPropertyHandle> StructPropertyHandle, class FDetailWidgetRow& HeaderRow, IPropertyTypeCustomizationUtils& StructCustomizationUtils)"
  },
  {
    "label": "CustomizeChildren()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CustomizeChildren(TSharedRef<class IPropertyHandle> StructPropertyHandle, class IDetailChildrenBuilder& StructBuilder, IPropertyTypeCustomizationUtils& StructCustomizationUtils)"
  },
  {
    "label": "OnPickContent()",
    "kind": "Method",
    "detail": "Function (private : FReply)",
    "insertText": "OnPickContent(TSharedRef<IPropertyHandle> PropertyHandle)"
  },
  {
    "label": "OnPickDirectory()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnPickDirectory(TSharedRef<IPropertyHandle> PropertyHandle, const bool bRelativeToGameContentDir, const bool bUseRelativePaths)"
  },
  {
    "label": "IsValidPath()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsValidPath(const FString& AbsolutePath, const bool bRelativeToGameContentDir, FText* const OutReason = nullptr)"
  },
  {
    "label": "OnPathPicked()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPathPicked(const FString& Path, TSharedRef<IPropertyHandle> PropertyHandle)"
  },
  {
    "label": "IsBrowseEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsBrowseEnabled(TSharedRef<IPropertyHandle> PropertyHandle)"
  }
]