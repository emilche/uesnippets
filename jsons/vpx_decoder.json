[
  {
    "label": "vpx_codec_stream_info",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "vpx_codec_stream_info"
  },
  {
    "label": "vpx_codec_dec_cfg",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "vpx_codec_dec_cfg"
  },
  {
    "label": "VPX_DECODER_ABI_VERSION()",
    "kind": "Method",
    "detail": "Function (# ifndef VPX_VPX_VPX_DECODER_H_ # define VPX_VPX_VPX_DECODER_H_ # ifdef __cplusplus \" C \" { # endif # include \" . / vpx_codec . h \" # include \" . / vpx_frame_buffer . h \" # define)",
    "insertText": "VPX_DECODER_ABI_VERSION(3 + VPX_CODEC_ABI_VERSION)"
  },
  {
    "label": "vpx_codec_dec_init_ver()",
    "kind": "Method",
    "detail": "Function (unsigned int sz ; unsigned int w ; unsigned int h ; unsigned int is_kf ; } vpx_codec_stream_info_t ; typedef struct vpx_codec_dec_cfg { unsigned int threads ; unsigned int w ; unsigned int h ; } vpx_codec_dec_cfg_t ; vpx_codec_err_t)",
    "insertText": "vpx_codec_dec_init_ver(vpx_codec_ctx_t *ctx, vpx_codec_iface_t *iface, const vpx_codec_dec_cfg_t *cfg, vpx_codec_flags_t flags, int ver)"
  },
  {
    "label": "vpx_codec_dec_init()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "vpx_codec_dec_init(ctx, iface, cfg, flags) \\ vpx_codec_dec_init_ver(ctx, iface, cfg, flags, VPX_DECODER_ABI_VERSION) vpx_codec_err_t vpx_codec_peek_stream_info(vpx_codec_iface_t *iface, const uint8_t *data, unsigned int data_sz, vpx_codec_stream_info_t *si)"
  },
  {
    "label": "vpx_codec_get_stream_info()",
    "kind": "Method",
    "detail": "Function (vpx_codec_err_t)",
    "insertText": "vpx_codec_get_stream_info(vpx_codec_ctx_t *ctx, vpx_codec_stream_info_t *si)"
  },
  {
    "label": "vpx_codec_decode()",
    "kind": "Method",
    "detail": "Function (vpx_codec_err_t)",
    "insertText": "vpx_codec_decode(vpx_codec_ctx_t *ctx, const uint8_t *data, unsigned int data_sz, void *user_priv, long deadline)"
  },
  {
    "label": "vpx_codec_get_frame()",
    "kind": "Method",
    "detail": "Function (vpx_image_t*)",
    "insertText": "vpx_codec_get_frame(vpx_codec_ctx_t *ctx, vpx_codec_iter_t *iter)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "void(*vpx_codec_put_frame_cb_fn_t)(void *user_priv, const vpx_image_t *img)"
  },
  {
    "label": "vpx_codec_register_put_frame_cb()",
    "kind": "Method",
    "detail": "Function (vpx_codec_err_t)",
    "insertText": "vpx_codec_register_put_frame_cb(vpx_codec_ctx_t *ctx, vpx_codec_put_frame_cb_fn_t cb, void *user_priv)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "void(*vpx_codec_put_slice_cb_fn_t)(void *user_priv, const vpx_image_t *img, const vpx_image_rect_t *valid, const vpx_image_rect_t *update)"
  },
  {
    "label": "vpx_codec_register_put_slice_cb()",
    "kind": "Method",
    "detail": "Function (vpx_codec_err_t)",
    "insertText": "vpx_codec_register_put_slice_cb(vpx_codec_ctx_t *ctx, vpx_codec_put_slice_cb_fn_t cb, void *user_priv)"
  },
  {
    "label": "vpx_codec_set_frame_buffer_functions()",
    "kind": "Method",
    "detail": "Function (vpx_codec_err_t)",
    "insertText": "vpx_codec_set_frame_buffer_functions(vpx_codec_ctx_t *ctx, vpx_get_frame_buffer_cb_fn_t cb_get, vpx_release_frame_buffer_cb_fn_t cb_release, void *cb_priv)"
  }
]