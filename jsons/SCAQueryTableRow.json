[
  {
    "label": "SCAQueryTableRow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SCAQueryTableRow"
  },
  {
    "label": "FQueryTreeItem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FQueryTreeItem"
  },
  {
    "label": "SCollisionAnalyzer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SCollisionAnalyzer"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Widgets / SWidget . h \" # include \" Widgets / Views / STableViewBase . h \" # include \" Widgets / Views / STableRow . h \" # include \" SCollisionAnalyzer . h \" class SCAQueryTableRow : public SMultiColumnTableRow<TSharedPtr<class FQueryTreeItem>> { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SCAQueryTableRow)"
  },
  {
    "label": "SLATE_ARGUMENT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_ARGUMENT(TSharedPtr<class SCollisionAnalyzer>, OwnerAnalyzerWidget) SLATE_ARGUMENT(TSharedPtr<class FQueryTreeItem>, Item) SLATE_END_ARGS() public: void Construct(const FArguments& InArgs, const TSharedRef<STableViewBase>& InOwnerTableView)"
  },
  {
    "label": "GenerateWidgetForColumn()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "GenerateWidgetForColumn(const FName& ColumnName)"
  },
  {
    "label": "GetTotalTimeText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetTotalTimeText()"
  }
]