[
  {
    "label": "_Predicate",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_Predicate"
  },
  {
    "label": "_LIBCPP_TEMPLATE_VIS",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_LIBCPP_TEMPLATE_VIS"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# ifndef _LIBCPP___FUNCTIONAL_UNARY_NEGATE_H # define _LIBCPP___FUNCTIONAL_UNARY_NEGATE_H # include<__config> # include<__functional / unary_function . h> # if !)",
    "insertText": "defined(_LIBCPP_HAS_NO_PRAGMA_SYSTEM_HEADER) # pragma GCC system_header #endif _LIBCPP_BEGIN_NAMESPACE_STD #if _LIBCPP_STD_VER <= 17 || defined(_LIBCPP_ENABLE_CXX20_REMOVED_NEGATORS)"
  },
  {
    "label": "unary_negate()",
    "kind": "Method",
    "detail": "Function (_Predicate __pred_ ; public : _LIBCPP_CONSTEXPR_AFTER_CXX11 _LIBCPP_INLINE_VISIBILITY)",
    "insertText": "unary_negate(const _Predicate& __pred) : __pred_(__pred)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} _LIBCPP_CONSTEXPR_AFTER_CXX11 _LIBCPP_INLINE_VISIBILITY bool)",
    "insertText": "operator()(const typename _Predicate::argument_type& __x)"
  },
  {
    "label": "not1()",
    "kind": "Method",
    "detail": "Function (} } ; template<class _Predicate> _LIBCPP_DEPRECATED_IN_CXX17 _LIBCPP_CONSTEXPR_AFTER_CXX11 _LIBCPP_INLINE_VISIBILITY unary_negate<_Predicate>)",
    "insertText": "not1(const _Predicate& __pred)"
  }
]