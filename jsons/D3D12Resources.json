[
  {
    "label": "FD3D12CommandList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FD3D12CommandList"
  },
  {
    "label": "FD3D12Resource",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FD3D12Resource"
  },
  {
    "label": "FD3D12StateCache",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FD3D12StateCache"
  },
  {
    "label": "FD3D12CommandListManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FD3D12CommandListManager"
  },
  {
    "label": "FD3D12CommandContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FD3D12CommandContext"
  },
  {
    "label": "FD3D12SegListAllocator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FD3D12SegListAllocator"
  },
  {
    "label": "FD3D12PoolAllocator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FD3D12PoolAllocator"
  },
  {
    "label": "FD3D12ComputePipelineState",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FD3D12ComputePipelineState"
  },
  {
    "label": "FD3D12WorkGraphPipelineState",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FD3D12WorkGraphPipelineState"
  },
  {
    "label": "FD3D12GraphicsPipelineState",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FD3D12GraphicsPipelineState"
  },
  {
    "label": "FD3D12ResourceDesc",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FD3D12ResourceDesc"
  },
  {
    "label": "FD3D12SyncPoint",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FD3D12SyncPoint"
  },
  {
    "label": "FD3D12RayTracingGeometry",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FD3D12RayTracingGeometry"
  },
  {
    "label": "FD3D12RayTracingScene",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FD3D12RayTracingScene"
  },
  {
    "label": "FD3D12RayTracingPipelineState",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FD3D12RayTracingPipelineState"
  },
  {
    "label": "FD3D12RayTracingShaderBindingTable",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FD3D12RayTracingShaderBindingTable"
  },
  {
    "label": "FD3D12RayTracingShader",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FD3D12RayTracingShader"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FD3D12PendingResourceBarrier",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FD3D12PendingResourceBarrier"
  },
  {
    "label": "FD3D12Heap",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FD3D12Heap"
  },
  {
    "label": "must",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "must"
  },
  {
    "label": "TZeroedStruct",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TZeroedStruct"
  },
  {
    "label": "FD3D12ResourceDesc",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FD3D12ResourceDesc"
  },
  {
    "label": "FD3D12Resource",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FD3D12Resource"
  },
  {
    "label": "FD3D12ReservedResourceData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FD3D12ReservedResourceData"
  },
  {
    "label": "FD3D12ResourceTypeHelper",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FD3D12ResourceTypeHelper"
  },
  {
    "label": "FD3D12BuddyAllocator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FD3D12BuddyAllocator"
  },
  {
    "label": "FD3D12BuddyAllocatorPrivateData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FD3D12BuddyAllocatorPrivateData"
  },
  {
    "label": "FD3D12BlockAllocatorPrivateData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FD3D12BlockAllocatorPrivateData"
  },
  {
    "label": "FD3D12SegListAllocatorPrivateData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FD3D12SegListAllocatorPrivateData"
  },
  {
    "label": "FD3D12PoolAllocatorPrivateData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FD3D12PoolAllocatorPrivateData"
  },
  {
    "label": "FD3D12ResourceAllocator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FD3D12ResourceAllocator"
  },
  {
    "label": "FD3D12BaseShaderResource",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FD3D12BaseShaderResource"
  },
  {
    "label": "FD3D12ResourceLocation",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FD3D12ResourceLocation"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "EAllocatorType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EAllocatorType"
  },
  {
    "label": "ID3D12ResourceAllocator",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ID3D12ResourceAllocator"
  },
  {
    "label": "FD3D12LockedResource",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FD3D12LockedResource"
  },
  {
    "label": "FD3D12ShaderResourceRenameListener",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FD3D12ShaderResourceRenameListener"
  },
  {
    "label": "of",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "of"
  },
  {
    "label": "FD3D12BaseShaderResource",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FD3D12BaseShaderResource"
  },
  {
    "label": "FD3D12UniformBuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FD3D12UniformBuffer"
  },
  {
    "label": "FD3D12ConstantBufferView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FD3D12ConstantBufferView"
  },
  {
    "label": "FD3D12Device",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FD3D12Device"
  },
  {
    "label": "FD3D12Buffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FD3D12Buffer"
  },
  {
    "label": "FD3D12ResourceBarrierBatcher",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FD3D12ResourceBarrierBatcher"
  },
  {
    "label": "to",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "to"
  },
  {
    "label": "FD3D12ResourceBarrier",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FD3D12ResourceBarrier"
  },
  {
    "label": "FD3D12QueryAllocator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FD3D12QueryAllocator"
  },
  {
    "label": "FD3D12StagingBuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FD3D12StagingBuffer"
  },
  {
    "label": "FD3D12CommandContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FD3D12CommandContext"
  },
  {
    "label": "FD3D12DynamicRHI",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FD3D12DynamicRHI"
  },
  {
    "label": "FD3D12ShaderBundle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FD3D12ShaderBundle"
  },
  {
    "label": "FD3D12CommandContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FD3D12CommandContext"
  },
  {
    "label": "FD3D12DynamicRHI",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FD3D12DynamicRHI"
  },
  {
    "label": "FD3D12GPUFence",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FD3D12GPUFence"
  },
  {
    "label": "TD3D12ResourceTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TD3D12ResourceTraits"
  },
  {
    "label": "TD3D12ResourceTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TD3D12ResourceTraits"
  },
  {
    "label": "TD3D12ResourceTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TD3D12ResourceTraits"
  },
  {
    "label": "TD3D12ResourceTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TD3D12ResourceTraits"
  },
  {
    "label": "TD3D12ResourceTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TD3D12ResourceTraits"
  },
  {
    "label": "TD3D12ResourceTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TD3D12ResourceTraits"
  },
  {
    "label": "TD3D12ResourceTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TD3D12ResourceTraits"
  },
  {
    "label": "TD3D12ResourceTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TD3D12ResourceTraits"
  },
  {
    "label": "TD3D12ResourceTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TD3D12ResourceTraits"
  },
  {
    "label": "TD3D12ResourceTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TD3D12ResourceTraits"
  },
  {
    "label": "TD3D12ResourceTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TD3D12ResourceTraits"
  },
  {
    "label": "TD3D12ResourceTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TD3D12ResourceTraits"
  },
  {
    "label": "TD3D12ResourceTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TD3D12ResourceTraits"
  },
  {
    "label": "TD3D12ResourceTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TD3D12ResourceTraits"
  },
  {
    "label": "TD3D12ResourceTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TD3D12ResourceTraits"
  },
  {
    "label": "TD3D12ResourceTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TD3D12ResourceTraits"
  },
  {
    "label": "TD3D12ResourceTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TD3D12ResourceTraits"
  },
  {
    "label": "ApplyCustomTextureLayout()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyCustomTextureLayout(FD3D12ResourceDesc& TextureLayout, FD3D12Adapter& Adapter)"
  },
  {
    "label": "FD3D12Heap()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FD3D12Heap(FD3D12Device* Parent, FRHIGPUMask VisibleNodes, HeapId InTraceParentHeapId = EMemoryTraceRootHeap::VideoMemory)"
  },
  {
    "label": "SetHeap()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetHeap(ID3D12Heap* HeapIn, const TCHAR* const InName, bool bTrack = true, bool bForceGetGPUAddress = false)"
  },
  {
    "label": "BeginTrackingResidency()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginTrackingResidency(uint64 Size)"
  },
  {
    "label": "DisallowTrackingResidency()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DisallowTrackingResidency()"
  },
  {
    "label": "DeferDelete()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeferDelete()"
  },
  {
    "label": "MakeArrayView()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "MakeArrayView(&ResidencyHandle, 1)"
  },
  {
    "label": "FD3D12Resource()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "FD3D12Resource(FD3D12Device* ParentDevice,\n\t\tFRHIGPUMask VisibleNodes,\n\t\tID3D12Resource* InResource,\n\t\tD3D12_RESOURCE_STATES InInitialResourceState,\n\t\tFD3D12ResourceDesc const& InDesc,\n\t\tFD3D12Heap* InHeap = nullptr,\n\t\tD3D12_HEAP_TYPE InHeapType = D3D12_HEAP_TYPE_DEFAULT)"
  },
  {
    "label": "FD3D12Resource()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "FD3D12Resource(FD3D12Device* ParentDevice,\n\t\tFRHIGPUMask VisibleNodes,\n\t\tID3D12Resource* InResource,\n\t\tD3D12_RESOURCE_STATES InInitialResourceState,\n\t\tED3D12ResourceStateMode InResourceStateMode,\n\t\tD3D12_RESOURCE_STATES InDefaultResourceState,\n\t\tFD3D12ResourceDesc const& InDesc,\n\t\tFD3D12Heap* InHeap,\n\t\tD3D12_HEAP_TYPE InHeapType)"
  },
  {
    "label": "DeferDelete()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeferDelete()"
  },
  {
    "label": "IsReservedResource()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "IsReservedResource()"
  },
  {
    "label": "StartTrackingForResidency()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StartTrackingForResidency()"
  },
  {
    "label": "MakeArrayView()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "MakeArrayView(&ResidencyHandle, 1)"
  },
  {
    "label": "GetD3D12ResourceState()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetD3D12ResourceState(InResourceState, ED3D12QueueType::Direct)"
  },
  {
    "label": "CommitReservedResource()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CommitReservedResource(ID3D12CommandQueue* D3DCommandQueue, uint64 RequiredCommitSizeInBytes)"
  },
  {
    "label": "check()",
    "kind": "Method",
    "detail": "Function (state)",
    "insertText": "check(InDefaultState != D3D12_RESOURCE_STATE_RAYTRACING_ACCELERATION_STRUCTURE && InInitialState != D3D12_RESOURCE_STATE_RAYTRACING_ACCELERATION_STRUCTURE)"
  },
  {
    "label": "Type()",
    "kind": "Method",
    "detail": "Function (FD3D12ResourceTypeHelper)",
    "insertText": "Type(Desc, HeapType)"
  },
  {
    "label": "SetCompressedState()",
    "kind": "Method",
    "detail": "Function (PLATFORM_SUPPORTS_RESOURCE_COMPRESSION)",
    "insertText": "SetCompressedState(D3D12_RESOURCE_STATE_COMMON)"
  },
  {
    "label": "Clear()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Clear()"
  },
  {
    "label": "TransferOwnership()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TransferOwnership(FD3D12ResourceLocation& Destination, FD3D12ResourceLocation& Source)"
  },
  {
    "label": "SetResource()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetResource(FD3D12Resource* Value)"
  },
  {
    "label": "OnAllocationMoved()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "OnAllocationMoved(FD3D12ContextArray const& Contexts, FRHIPoolAllocationData* InNewData)"
  },
  {
    "label": "UnlockPoolData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnlockPoolData()"
  },
  {
    "label": "AsStandAlone()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AsStandAlone(FD3D12Resource* Resource, uint64 InSize = 0, bool bInIsTransient = false, const D3D12_HEAP_PROPERTIES* CustomHeapProperties = nullptr)"
  },
  {
    "label": "Alias()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Alias(FD3D12ResourceLocation& Destination, FD3D12ResourceLocation& Source)"
  },
  {
    "label": "ReferenceNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReferenceNode(FD3D12Device* NodeDevice, FD3D12ResourceLocation& Destination, FD3D12ResourceLocation& Source)"
  },
  {
    "label": "InternalClear()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InternalClear()"
  },
  {
    "label": "ReleaseResource()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseResource()"
  },
  {
    "label": "UpdateStandAloneStats()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateStandAloneStats(bool bIncrement)"
  },
  {
    "label": "AllocateTexture()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AllocateTexture(uint32 GPUIndex, D3D12_HEAP_TYPE InHeapType, const FD3D12ResourceDesc& InDesc, EPixelFormat InUEFormat, ED3D12ResourceStateMode InResourceStateMode,\n\t\tD3D12_RESOURCE_STATES InCreateState, const D3D12_CLEAR_VALUE* InClearValue, const TCHAR* InName, FD3D12ResourceLocation& ResourceLocation)"
  },
  {
    "label": "Lock()",
    "kind": "Method",
    "detail": "Function (FScopeLock)",
    "insertText": "Lock(&RenameListenersCS)"
  },
  {
    "label": "Lock()",
    "kind": "Method",
    "detail": "Function (FScopeLock)",
    "insertText": "Lock(&RenameListenersCS)"
  },
  {
    "label": "Lock()",
    "kind": "Method",
    "detail": "Function (FScopeLock)",
    "insertText": "Lock(&RenameListenersCS)"
  },
  {
    "label": "Lock()",
    "kind": "Method",
    "detail": "Function (FScopeLock)",
    "insertText": "Lock(&RenameListenersCS)"
  },
  {
    "label": "UploadResourceData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UploadResourceData(FD3D12CommandContext& CommandContext, D3D12_RESOURCE_STATES InDestinationState, FD3D12ResourceLocation& DestinationResourceLocation, const FD3D12ResourceLocation& SourceResourceLocation, uint32 Size)"
  },
  {
    "label": "UploadResourceData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UploadResourceData(FRHICommandListBase& InRHICmdList, FRHIGPUMask GPUMask, D3D12_RESOURCE_STATES InDestinationState, const void* SourceData, int32 SourceDataSize)"
  },
  {
    "label": "UploadResourceData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UploadResourceData(FRHICommandListBase& InRHICmdList, FResourceArrayUploadInterface* InResourceArray, D3D12_RESOURCE_STATES InDestinationState, const TCHAR* AssetName = nullptr, const FName& ClassName = NAME_None, const FName& PackageName = NAME_None)"
  },
  {
    "label": "UploadResourceDataViaCopyQueue()",
    "kind": "Method",
    "detail": "Function (FD3D12SyncPointRef)",
    "insertText": "UploadResourceDataViaCopyQueue(FResourceArrayUploadInterface* InResourceArray)"
  },
  {
    "label": "Rename()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Rename(FD3D12ContextArray const& Contexts, FD3D12ResourceLocation& NewLocation)"
  },
  {
    "label": "RenameLDAChain()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenameLDAChain(FD3D12ContextArray const& Contexts, FD3D12ResourceLocation& NewLocation)"
  },
  {
    "label": "TakeOwnership()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TakeOwnership(FD3D12Buffer& Other)"
  },
  {
    "label": "ReleaseOwnership()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseOwnership()"
  },
  {
    "label": "GetResourceDescAndAlignment()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetResourceDescAndAlignment(uint64 InSize, uint32 InStride, EBufferUsageFlags InUsage, D3D12_RESOURCE_DESC& ResourceDesc, uint32& Alignment)"
  },
  {
    "label": "UpdateBufferStats()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateBufferStats(FD3D12Buffer& Buffer, bool bAllocating)"
  },
  {
    "label": "AddUAV()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddUAV()"
  },
  {
    "label": "AddTransition()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "AddTransition(FD3D12Resource* pResource, D3D12_RESOURCE_STATES Before, D3D12_RESOURCE_STATES After, uint32 Subresource)"
  },
  {
    "label": "AddAliasingBarrier()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddAliasingBarrier(ID3D12Resource* InResourceBefore, ID3D12Resource* InResourceAfter)"
  },
  {
    "label": "FlushIntoCommandList()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FlushIntoCommandList(FD3D12CommandList& CommandList, class FD3D12QueryAllocator& TimestampAllocator)"
  },
  {
    "label": "FD3D12GPUFence()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FD3D12GPUFence(FName InName)"
  },
  {
    "label": "WaitCPU()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WaitCPU()"
  }
]