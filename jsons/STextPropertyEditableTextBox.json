[
  {
    "label": "SComboButton",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SComboButton"
  },
  {
    "label": "SEditableTextBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SEditableTextBox"
  },
  {
    "label": "SMultiLineEditableTextBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SMultiLineEditableTextBox"
  },
  {
    "label": "SSearchBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SSearchBox"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "UPackage",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPackage"
  },
  {
    "label": "FFocusEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFocusEvent"
  },
  {
    "label": "FGeometry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGeometry"
  },
  {
    "label": "FSlateBrush",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSlateBrush"
  },
  {
    "label": "IEditableTextProperty",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IEditableTextProperty"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "EDITORWIDGETS_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "EDITORWIDGETS_API"
  },
  {
    "label": "FAvailableStringTable",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAvailableStringTable"
  },
  {
    "label": "ITableRow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITableRow"
  },
  {
    "label": "STableViewBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "STableViewBase"
  },
  {
    "label": "ITableRow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITableRow"
  },
  {
    "label": "STableViewBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "STableViewBase"
  },
  {
    "label": "EDITORWIDGETS_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "EDITORWIDGETS_API"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "StaticStableTextId()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StaticStableTextId(UObject* InObject, const ETextPropertyEditAction InEditAction, const FString& InTextSource, const FString& InProposedNamespace, const FString& InProposedKey, FString& OutStableNamespace, FString& OutStableKey)"
  },
  {
    "label": "StaticStableTextId()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StaticStableTextId(UPackage* InPackage, const ETextPropertyEditAction InEditAction, const FString& InTextSource, const FString& InProposedNamespace, const FString& InProposedKey, FString& OutStableNamespace, FString& OutStableKey)"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct(const FArguments& Arguments, const TSharedRef<IEditableTextProperty>& InEditableTextProperty)"
  },
  {
    "label": "SetTableIdAndKey()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTableIdAndKey(const FName InTableId, const FString& InKey)"
  },
  {
    "label": "OnOptionsFilterTextChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnOptionsFilterTextChanged(const FText& InNewText)"
  },
  {
    "label": "OnKeysFilterTextChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnKeysFilterTextChanged(const FText& InNewText)"
  },
  {
    "label": "OnGetStringTableComboOptions()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "OnGetStringTableComboOptions()"
  },
  {
    "label": "OnGenerateStringTableComboOption()",
    "kind": "Method",
    "detail": "Function (ITableRow>)",
    "insertText": "OnGenerateStringTableComboOption(TSharedPtr<FAvailableStringTable> InItem, const TSharedRef<class STableViewBase>& OwnerTable)"
  },
  {
    "label": "OnGetStringTableKeyOptions()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "OnGetStringTableKeyOptions()"
  },
  {
    "label": "OnGenerateStringTableKeyOption()",
    "kind": "Method",
    "detail": "Function (ITableRow>)",
    "insertText": "OnGenerateStringTableKeyOption(TSharedPtr<FString> InItem, const TSharedRef<class STableViewBase>& OwnerTable)"
  },
  {
    "label": "OnStringTableComboChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnStringTableComboChanged(TSharedPtr<FAvailableStringTable> NewSelection, ESelectInfo::Type SelectInfo)"
  },
  {
    "label": "UpdateStringTableComboOptions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateStringTableComboOptions()"
  },
  {
    "label": "OnKeyComboChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnKeyComboChanged(TSharedPtr<FString> NewSelection, ESelectInfo::Type SelectInfo)"
  },
  {
    "label": "UpdateStringTableKeyOptions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateStringTableKeyOptions()"
  },
  {
    "label": "OnUnlinkClicked()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnUnlinkClicked()"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct(const FArguments& Arguments, const TSharedRef<IEditableTextProperty>& InEditableTextProperty)"
  },
  {
    "label": "GetDesiredWidth()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetDesiredWidth(float& OutMinDesiredWidth, float& OutMaxDesiredWidth)"
  },
  {
    "label": "OnTextChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnTextChanged(const FText& NewText)"
  },
  {
    "label": "OnTextCommitted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnTextCommitted(const FText& NewText, ETextCommit::Type CommitInfo)"
  },
  {
    "label": "SetTextError()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTextError(const FText& InErrorMsg)"
  },
  {
    "label": "OnNamespaceChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnNamespaceChanged(const FText& NewText)"
  },
  {
    "label": "OnNamespaceCommitted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnNamespaceCommitted(const FText& NewText, ETextCommit::Type CommitInfo)"
  },
  {
    "label": "OnKeyChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnKeyChanged(const FText& NewText)"
  },
  {
    "label": "OnKeyCommitted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnKeyCommitted(const FText& NewText, ETextCommit::Type CommitInfo)"
  },
  {
    "label": "HandleLocalizableCheckStateChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleLocalizableCheckStateChanged(ECheckBoxState InCheckboxState)"
  }
]