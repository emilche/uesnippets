[
  {
    "label": "SDL_RWops",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SDL_RWops"
  },
  {
    "label": "Sint64()",
    "kind": "Method",
    "detail": "Function (# ifndef SDL_rwops_h_ # define SDL_rwops_h_ # include \" SDL_stdinc . h \" # include \" SDL_error . h \" # include \" begin_code . h \" # ifdef __cplusplus \" C \" { # endif # define SDL_RWOPS_UNKNOWN 0 U # define SDL_RWOPS_WINFILE 1 U # define SDL_RWOPS_STDFILE 2 U # define SDL_RWOPS_JNIFILE 3 U # define SDL_RWOPS_MEMORY 4 U # define SDL_RWOPS_MEMORY_RO 5 U typedef struct SDL_RWops {)",
    "insertText": "Sint64(SDLCALL * size) (struct SDL_RWops * context)"
  },
  {
    "label": "Sint64()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Sint64(SDLCALL * seek) (struct SDL_RWops * context, Sint64 offset, int whence)"
  },
  {
    "label": "size_t()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "size_t(SDLCALL * read) (struct SDL_RWops * context, void *ptr, size_t size, size_t maxnum)"
  },
  {
    "label": "size_t()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "size_t(SDLCALL * write) (struct SDL_RWops * context, const void *ptr, size_t size, size_t num)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(SDLCALL * close) (struct SDL_RWops * context)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (Uint32 type ; union { # if)",
    "insertText": "defined(__ANDROID__)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (void* asset ; } androidio ; # elif)",
    "insertText": "defined(__WIN32__) || defined(__GDK__)"
  },
  {
    "label": "SDL_RWFromFile()",
    "kind": "Method",
    "detail": "Function (SDL_bool append ; void* h ; struct { void* data ; size_t size ; size_t left ; } buffer ; } windowsio ; # endif # ifdef HAVE_STDIO_H struct { SDL_bool autoclose ; FILE* fp ; } stdio ; # endif struct { Uint8* base ; Uint8* here ; Uint8* stop ; } mem ; struct { void* data1 ; void* data2 ; } unknown ; } hidden ; } SDL_RWops ; DECLSPEC SDL_RWops* SDLCALL)",
    "insertText": "SDL_RWFromFile(const char *file, const char *mode)"
  },
  {
    "label": "SDL_RWFromFP()",
    "kind": "Method",
    "detail": "Function (# ifdef HAVE_STDIO_H DECLSPEC SDL_RWops* SDLCALL)",
    "insertText": "SDL_RWFromFP(FILE * fp, SDL_bool autoclose)"
  },
  {
    "label": "SDL_RWFromFP()",
    "kind": "Method",
    "detail": "Function (# else DECLSPEC SDL_RWops* SDLCALL)",
    "insertText": "SDL_RWFromFP(void * fp, SDL_bool autoclose)"
  },
  {
    "label": "SDL_RWFromMem()",
    "kind": "Method",
    "detail": "Function (# endif DECLSPEC SDL_RWops* SDLCALL)",
    "insertText": "SDL_RWFromMem(void *mem, int size)"
  },
  {
    "label": "SDL_RWFromConstMem()",
    "kind": "Method",
    "detail": "Function (DECLSPEC SDL_RWops* SDLCALL)",
    "insertText": "SDL_RWFromConstMem(const void *mem, int size)"
  },
  {
    "label": "SDL_AllocRW()",
    "kind": "Method",
    "detail": "Function (DECLSPEC SDL_RWops* SDLCALL)",
    "insertText": "SDL_AllocRW(void)"
  },
  {
    "label": "SDL_FreeRW()",
    "kind": "Method",
    "detail": "Function (DECLSPEC void SDLCALL)",
    "insertText": "SDL_FreeRW(SDL_RWops * area)"
  },
  {
    "label": "SDL_RWsize()",
    "kind": "Method",
    "detail": "Function (# define RW_SEEK_SET 0 # define RW_SEEK_CUR 1 # define RW_SEEK_END 2 DECLSPEC Sint64 SDLCALL)",
    "insertText": "SDL_RWsize(SDL_RWops *context)"
  },
  {
    "label": "SDL_RWseek()",
    "kind": "Method",
    "detail": "Function (DECLSPEC Sint64 SDLCALL)",
    "insertText": "SDL_RWseek(SDL_RWops *context, Sint64 offset, int whence)"
  },
  {
    "label": "SDL_RWtell()",
    "kind": "Method",
    "detail": "Function (DECLSPEC Sint64 SDLCALL)",
    "insertText": "SDL_RWtell(SDL_RWops *context)"
  },
  {
    "label": "SDL_RWread()",
    "kind": "Method",
    "detail": "Function (DECLSPEC size_t SDLCALL)",
    "insertText": "SDL_RWread(SDL_RWops *context, void *ptr, size_t size, size_t maxnum)"
  },
  {
    "label": "SDL_RWwrite()",
    "kind": "Method",
    "detail": "Function (DECLSPEC size_t SDLCALL)",
    "insertText": "SDL_RWwrite(SDL_RWops *context, const void *ptr, size_t size, size_t num)"
  },
  {
    "label": "SDL_RWclose()",
    "kind": "Method",
    "detail": "Function (DECLSPEC int SDLCALL)",
    "insertText": "SDL_RWclose(SDL_RWops *context)"
  },
  {
    "label": "SDL_LoadFile_RW()",
    "kind": "Method",
    "detail": "Function (DECLSPEC void* SDLCALL)",
    "insertText": "SDL_LoadFile_RW(SDL_RWops *src, size_t *datasize, int freesrc)"
  },
  {
    "label": "SDL_LoadFile()",
    "kind": "Method",
    "detail": "Function (DECLSPEC void* SDLCALL)",
    "insertText": "SDL_LoadFile(const char *file, size_t *datasize)"
  },
  {
    "label": "SDL_ReadU8()",
    "kind": "Method",
    "detail": "Function (DECLSPEC Uint8 SDLCALL)",
    "insertText": "SDL_ReadU8(SDL_RWops * src)"
  },
  {
    "label": "SDL_ReadLE16()",
    "kind": "Method",
    "detail": "Function (DECLSPEC Uint16 SDLCALL)",
    "insertText": "SDL_ReadLE16(SDL_RWops * src)"
  },
  {
    "label": "SDL_ReadBE16()",
    "kind": "Method",
    "detail": "Function (DECLSPEC Uint16 SDLCALL)",
    "insertText": "SDL_ReadBE16(SDL_RWops * src)"
  },
  {
    "label": "SDL_ReadLE32()",
    "kind": "Method",
    "detail": "Function (DECLSPEC Uint32 SDLCALL)",
    "insertText": "SDL_ReadLE32(SDL_RWops * src)"
  },
  {
    "label": "SDL_ReadBE32()",
    "kind": "Method",
    "detail": "Function (DECLSPEC Uint32 SDLCALL)",
    "insertText": "SDL_ReadBE32(SDL_RWops * src)"
  },
  {
    "label": "SDL_ReadLE64()",
    "kind": "Method",
    "detail": "Function (DECLSPEC Uint64 SDLCALL)",
    "insertText": "SDL_ReadLE64(SDL_RWops * src)"
  },
  {
    "label": "SDL_ReadBE64()",
    "kind": "Method",
    "detail": "Function (DECLSPEC Uint64 SDLCALL)",
    "insertText": "SDL_ReadBE64(SDL_RWops * src)"
  },
  {
    "label": "SDL_WriteU8()",
    "kind": "Method",
    "detail": "Function (DECLSPEC size_t SDLCALL)",
    "insertText": "SDL_WriteU8(SDL_RWops * dst, Uint8 value)"
  },
  {
    "label": "SDL_WriteLE16()",
    "kind": "Method",
    "detail": "Function (DECLSPEC size_t SDLCALL)",
    "insertText": "SDL_WriteLE16(SDL_RWops * dst, Uint16 value)"
  },
  {
    "label": "SDL_WriteBE16()",
    "kind": "Method",
    "detail": "Function (DECLSPEC size_t SDLCALL)",
    "insertText": "SDL_WriteBE16(SDL_RWops * dst, Uint16 value)"
  },
  {
    "label": "SDL_WriteLE32()",
    "kind": "Method",
    "detail": "Function (DECLSPEC size_t SDLCALL)",
    "insertText": "SDL_WriteLE32(SDL_RWops * dst, Uint32 value)"
  },
  {
    "label": "SDL_WriteBE32()",
    "kind": "Method",
    "detail": "Function (DECLSPEC size_t SDLCALL)",
    "insertText": "SDL_WriteBE32(SDL_RWops * dst, Uint32 value)"
  },
  {
    "label": "SDL_WriteLE64()",
    "kind": "Method",
    "detail": "Function (DECLSPEC size_t SDLCALL)",
    "insertText": "SDL_WriteLE64(SDL_RWops * dst, Uint64 value)"
  },
  {
    "label": "SDL_WriteBE64()",
    "kind": "Method",
    "detail": "Function (DECLSPEC size_t SDLCALL)",
    "insertText": "SDL_WriteBE64(SDL_RWops * dst, Uint64 value)"
  }
]