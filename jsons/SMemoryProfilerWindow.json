[
  {
    "label": "STableTreeView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "STableTreeView"
  },
  {
    "label": "SModulesView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SModulesView"
  },
  {
    "label": "FTimeMarker",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTimeMarker"
  },
  {
    "label": "STimingView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "STimingView"
  },
  {
    "label": "FMemorySharedState",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMemorySharedState"
  },
  {
    "label": "SMemInvestigationView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SMemInvestigationView"
  },
  {
    "label": "SMemTagTreeView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SMemTagTreeView"
  },
  {
    "label": "SMemAllocTableTreeView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SMemAllocTableTreeView"
  },
  {
    "label": "FMemoryProfilerTabs",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMemoryProfilerTabs"
  },
  {
    "label": "SMemoryProfilerWindow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SMemoryProfilerWindow"
  },
  {
    "label": "SMemoryProfilerWindow()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / NameTypes . h \" # include \" Insights / ITimingViewSession . h \" # include \" Insights / Widgets / SMajorTabWindow . h \" namespace UE::Insights { class STableTreeView ; class SModulesView ; } namespace UE::Insights::TimingProfiler { class FTimeMarker ; class STimingView ; } namespace UE::Insights::MemoryProfiler { class FMemorySharedState ; class SMemInvestigationView ; class SMemTagTreeView ; class SMemAllocTableTreeView ; struct FMemoryProfilerTabs { const FName TimingViewID ; const FName MemInvestigationViewID ; const FName MemTagTreeViewID ; const FName MemAllocTableTreeViewID ; const FName ModulesViewID ; } ; class SMemoryProfilerWindow : public::Insights::SMajorTabWindow { public :)",
    "insertText": "SMemoryProfilerWindow()"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SLATE_BEGIN_ARGS(SMemoryProfilerWindow)"
  },
  {
    "label": "SLATE_END_ARGS()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_END_ARGS() virtual void Reset()"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct(const FArguments& InArgs, const TSharedRef<SDockTab>& ConstructUnderMajorTab, const TSharedPtr<SWindow>& ConstructUnderWindow)"
  },
  {
    "label": "GetTimingView()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<TimingProfiler::STimingView>)",
    "insertText": "GetTimingView()"
  },
  {
    "label": "ShowMemAllocTableTreeViewTab()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<SMemAllocTableTreeView>)",
    "insertText": "ShowMemAllocTableTreeViewTab()"
  },
  {
    "label": "GetNumCustomTimeMarkers()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetNumCustomTimeMarkers()"
  },
  {
    "label": "GetCustomTimeMarker()",
    "kind": "Method",
    "detail": "Function (} const TSharedRef<TimingProfiler::FTimeMarker>&)",
    "insertText": "GetCustomTimeMarker(uint32 Index)"
  },
  {
    "label": "OnTimeMarkerChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnTimeMarkerChanged(Timing::ETimeChangedFlags InFlags, TSharedRef<Timing::ITimeMarker> InTimeMarker)"
  },
  {
    "label": "GetAnalyticsEventName()",
    "kind": "Method",
    "detail": "Function (protected : const TCHAR*)",
    "insertText": "GetAnalyticsEventName()"
  },
  {
    "label": "CreateWorkspaceMenuGroup()",
    "kind": "Method",
    "detail": "Function (TSharedRef<FWorkspaceItem>)",
    "insertText": "CreateWorkspaceMenuGroup()"
  },
  {
    "label": "RegisterTabSpawners()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterTabSpawners()"
  },
  {
    "label": "CreateDefaultTabLayout()",
    "kind": "Method",
    "detail": "Function (TSharedRef<FTabManager::FLayout>)",
    "insertText": "CreateDefaultTabLayout()"
  },
  {
    "label": "CreateToolbar()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "CreateToolbar(TSharedPtr<FExtender> Extender)"
  },
  {
    "label": "SpawnTab_TimingView()",
    "kind": "Method",
    "detail": "Function (private : TSharedRef<SDockTab>)",
    "insertText": "SpawnTab_TimingView(const FSpawnTabArgs& Args)"
  },
  {
    "label": "OnTimingViewTabClosed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnTimingViewTabClosed(TSharedRef<SDockTab> TabBeingClosed)"
  },
  {
    "label": "SpawnTab_MemInvestigationView()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SDockTab>)",
    "insertText": "SpawnTab_MemInvestigationView(const FSpawnTabArgs& Args)"
  },
  {
    "label": "OnMemInvestigationViewTabClosed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnMemInvestigationViewTabClosed(TSharedRef<SDockTab> TabBeingClosed)"
  },
  {
    "label": "SpawnTab_MemTagTreeView()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SDockTab>)",
    "insertText": "SpawnTab_MemTagTreeView(const FSpawnTabArgs& Args)"
  },
  {
    "label": "OnMemTagTreeViewTabClosed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnMemTagTreeViewTabClosed(TSharedRef<SDockTab> TabBeingClosed)"
  },
  {
    "label": "SpawnTab_MemAllocTableTreeView()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SDockTab>)",
    "insertText": "SpawnTab_MemAllocTableTreeView(const FSpawnTabArgs& Args, int32 TabIndex)"
  },
  {
    "label": "OnMemAllocTableTreeViewTabClosed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnMemAllocTableTreeViewTabClosed(TSharedRef<SDockTab> TabBeingClosed)"
  },
  {
    "label": "SpawnTab_ModulesView()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SDockTab>)",
    "insertText": "SpawnTab_ModulesView(const FSpawnTabArgs& Args)"
  },
  {
    "label": "OnModulesViewClosed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnModulesViewClosed(TSharedRef<SDockTab> TabBeingClosed)"
  },
  {
    "label": "OnTimeSelectionChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnTimeSelectionChanged(Timing::ETimeChangedFlags InFlags, double InStartTime, double InEndTime)"
  },
  {
    "label": "CreateTimingViewMarkers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateTimingViewMarkers()"
  },
  {
    "label": "ResetTimingViewMarkers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetTimingViewMarkers()"
  },
  {
    "label": "UpdateTimingViewMarkers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateTimingViewMarkers()"
  }
]