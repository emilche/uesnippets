[
  {
    "label": "FDetailWidgetRow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDetailWidgetRow"
  },
  {
    "label": "IDetailChildrenBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDetailChildrenBuilder"
  },
  {
    "label": "IDetailLayoutBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDetailLayoutBuilder"
  },
  {
    "label": "IPropertyHandle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPropertyHandle"
  },
  {
    "label": "SEditableTextBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SEditableTextBox"
  },
  {
    "label": "FDialogueContextMappingNodeBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDialogueContextMappingNodeBuilder"
  },
  {
    "label": "FDialogueWaveDetails",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDialogueWaveDetails"
  },
  {
    "label": "FDialogueContextMappingNodeBuilder()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Delegates / Delegate . h \" # include \" IDetailCustomNodeBuilder . h \" # include \" IDetailCustomization . h \" # include \" Input / Reply . h \" # include \" Internationalization / Text . h \" # include \" Templates / SharedPointer . h \" # include \" Types / SlateEnums . h \" # include \" UObject / NameTypes . h \" # include \" UObject / UnrealNames . h \" class FDetailWidgetRow ; class IDetailChildrenBuilder ; class IDetailLayoutBuilder ; class IPropertyHandle ; class SEditableTextBox ; class FDialogueContextMappingNodeBuilder : public IDetailCustomNodeBuilder,public TSharedFromThis<FDialogueContextMappingNodeBuilder> { public :)",
    "insertText": "FDialogueContextMappingNodeBuilder(IDetailLayoutBuilder* InDetailLayoutBuilder, const TSharedPtr<IPropertyHandle>& InPropertyHandle)"
  },
  {
    "label": "SetOnRebuildChildren()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetOnRebuildChildren(FSimpleDelegate InOnRebuildChildren)"
  },
  {
    "label": "RequiresTick()",
    "kind": "Method",
    "detail": "Function (OnRebuildChildren = InOnRebuildChildren ; } bool)",
    "insertText": "RequiresTick()"
  },
  {
    "label": "GenerateHeaderRowContent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GenerateHeaderRowContent(FDetailWidgetRow& NodeRow)"
  },
  {
    "label": "GenerateChildContent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GenerateChildContent(IDetailChildrenBuilder& ChildrenBuilder)"
  },
  {
    "label": "InitiallyCollapsed()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "InitiallyCollapsed()"
  },
  {
    "label": "LocalizationKeyFormatEditableText_GetText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "LocalizationKeyFormatEditableText_GetText()"
  },
  {
    "label": "LocalizationKeyFormatEditableText_OnTextCommitted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LocalizationKeyFormatEditableText_OnTextCommitted(const FText& InNewText, ETextCommit::Type InCommitType)"
  },
  {
    "label": "LocalizationKeyFormatEditableText_IsReadyOnly()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "LocalizationKeyFormatEditableText_IsReadyOnly()"
  },
  {
    "label": "LocalizationKeyFormatEditableText_UpdateErrorText()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LocalizationKeyFormatEditableText_UpdateErrorText()"
  },
  {
    "label": "LocalizationKey_GetText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "LocalizationKey_GetText()"
  },
  {
    "label": "MakeInstance()",
    "kind": "Method",
    "detail": "Function (private : FSimpleDelegate OnRebuildChildren ; IDetailLayoutBuilder* DetailLayoutBuilder ; TSharedPtr<IPropertyHandle> ContextMappingPropertyHandle ; TSharedPtr<IPropertyHandle> LocalizationKeyFormatPropertyHandle ; TSharedPtr<SEditableTextBox> LocalizationKeyFormatEditableText ; double LastLocalizationKeyErrorUpdateTimestamp ; FText LocalizationKeyErrorMsg ; } ; class FDialogueWaveDetails : public IDetailCustomization { public : TSharedRef<IDetailCustomization>)",
    "insertText": "MakeInstance()"
  },
  {
    "label": "CustomizeDetails()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CustomizeDetails(class IDetailLayoutBuilder& DetailBuilder)"
  },
  {
    "label": "AddDialogueContextMapping_OnClicked()",
    "kind": "Method",
    "detail": "Function (private : FReply)",
    "insertText": "AddDialogueContextMapping_OnClicked()"
  }
]