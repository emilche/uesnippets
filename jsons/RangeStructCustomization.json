[
  {
    "label": "FDetailWidgetRow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDetailWidgetRow"
  },
  {
    "label": "FString",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FString"
  },
  {
    "label": "IDetailChildrenBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDetailChildrenBuilder"
  },
  {
    "label": "IPropertyHandle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPropertyHandle"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "FRangeStructCustomization",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRangeStructCustomization"
  },
  {
    "label": "FRangeStructCustomization()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" IPropertyTypeCustomization . h \" # include \" Internationalization / Text . h \" # include \" Misc / Optional . h \" # include \" Templates / SharedPointer . h \" # include \" Templates / TypeHash . h \" # include \" Types / SlateEnums . h \" class FDetailWidgetRow ; class FString ; class IDetailChildrenBuilder ; class IPropertyHandle ; class SWidget ; template<NumericType> class FRangeStructCustomization : public IPropertyTypeCustomization { public :)",
    "insertText": "FRangeStructCustomization() : bIsUsingSlider(false)"
  },
  {
    "label": "CustomizeHeader()",
    "kind": "Method",
    "detail": "Function (} public : void)",
    "insertText": "CustomizeHeader(TSharedRef<IPropertyHandle> StructPropertyHandle, FDetailWidgetRow& HeaderRow, IPropertyTypeCustomizationUtils& StructCustomizationUtils)"
  },
  {
    "label": "CustomizeChildren()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CustomizeChildren(TSharedRef<IPropertyHandle> StructPropertyHandle, IDetailChildrenBuilder& StructBuilder, IPropertyTypeCustomizationUtils& StructCustomizationUtils)"
  },
  {
    "label": "MakeInstance()",
    "kind": "Method",
    "detail": "Function (public : TSharedRef<IPropertyTypeCustomization>)",
    "insertText": "MakeInstance()"
  },
  {
    "label": "OnGetValue()",
    "kind": "Method",
    "detail": "Function (protected : TOptional<NumericType>)",
    "insertText": "OnGetValue(TWeakPtr<IPropertyHandle> ValueWeakPtr, TWeakPtr<IPropertyHandle> TypeWeakPtr)"
  },
  {
    "label": "OnValueCommitted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnValueCommitted(NumericType NewValue, ETextCommit::Type CommitType, TWeakPtr<IPropertyHandle> HandleWeakPtr)"
  },
  {
    "label": "OnValueChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnValueChanged(NumericType NewValue, TWeakPtr<IPropertyHandle> HandleWeakPtr)"
  },
  {
    "label": "OnBeginSliderMovement()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnBeginSliderMovement()"
  },
  {
    "label": "OnEndSliderMovement()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnEndSliderMovement(NumericType NewValue)"
  },
  {
    "label": "OnQueryIfEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "OnQueryIfEnabled(TWeakPtr<IPropertyHandle> HandleWeakPtr)"
  },
  {
    "label": "ShouldAllowSpin()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldAllowSpin()"
  },
  {
    "label": "OnGenerateComboWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "OnGenerateComboWidget(TSharedPtr<FString> InComboString)"
  },
  {
    "label": "OnComboSelectionChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnComboSelectionChanged(TSharedPtr<FString> InSelectedItem, ESelectInfo::Type SelectInfo, TWeakPtr<IPropertyHandle> HandleWeakPtr)"
  }
]