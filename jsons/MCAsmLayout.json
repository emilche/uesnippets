[
  {
    "label": "MCAssembler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MCAssembler"
  },
  {
    "label": "MCFragment",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MCFragment"
  },
  {
    "label": "MCSection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MCSection"
  },
  {
    "label": "MCSymbol",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MCSymbol"
  },
  {
    "label": "MCAsmLayout",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MCAsmLayout"
  },
  {
    "label": "ensureValid()",
    "kind": "Method",
    "detail": "Function (# ifndef LLVM_MC_MCASMLAYOUT_H # define LLVM_MC_MCASMLAYOUT_H # include \" llvm / ADT / DenseMap . h \" # include \" llvm / ADT / SmallVector . h \" namespace llvm { class MCAssembler ; class MCFragment ; class MCSection ; class MCSymbol ; class MCAsmLayout { MCAssembler& Assembler ; llvm::SmallVector<MCSection*,1 6> SectionOrder ; DenseMap<const MCSection*,MCFragment*> LastValidFragment ; void)",
    "insertText": "ensureValid(const MCFragment *F)"
  },
  {
    "label": "isFragmentValid()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "isFragmentValid(const MCFragment *F)"
  },
  {
    "label": "MCAsmLayout()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "MCAsmLayout(MCAssembler &Assembler)"
  },
  {
    "label": "getAssembler()",
    "kind": "Method",
    "detail": "Function (MCAssembler&)",
    "insertText": "getAssembler()"
  },
  {
    "label": "layoutFragment()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "layoutFragment(MCFragment *Fragment)"
  },
  {
    "label": "getSectionOrder()",
    "kind": "Method",
    "detail": "Function (llvm::SmallVectorImpl<MCSection*>&)",
    "insertText": "getSectionOrder()"
  },
  {
    "label": "getSectionAddressSize()",
    "kind": "Method",
    "detail": "Function (uint64_t)",
    "insertText": "getSectionAddressSize(const MCSection *Sec)"
  },
  {
    "label": "getSectionFileSize()",
    "kind": "Method",
    "detail": "Function (uint64_t)",
    "insertText": "getSectionFileSize(const MCSection *Sec)"
  },
  {
    "label": "getSymbolOffset()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "getSymbolOffset(const MCSymbol &S, uint64_t &Val)"
  },
  {
    "label": "getSymbolOffset()",
    "kind": "Method",
    "detail": "Function (uint64_t)",
    "insertText": "getSymbolOffset(const MCSymbol &S)"
  },
  {
    "label": "getBaseSymbol()",
    "kind": "Method",
    "detail": "Function (const MCSymbol*)",
    "insertText": "getBaseSymbol(const MCSymbol &Symbol)"
  }
]