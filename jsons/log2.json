[
  {
    "label": "_UIntType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_UIntType"
  },
  {
    "label": "__log2_imp",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "__log2_imp"
  },
  {
    "label": "__log2",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "__log2"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# ifndef _LIBCPP___RANDOM_LOG2_H # define _LIBCPP___RANDOM_LOG2_H # include<__config> # include<cstddef> # include<type_traits> # if !)",
    "insertText": "defined(_LIBCPP_HAS_NO_PRAGMA_SYSTEM_HEADER)"
  },
  {
    "label": "_Xp()",
    "kind": "Method",
    "detail": "Function (template<unsigned long long _Xp,size_t _Rp> struct __log2_imp<unsigned long long,_Xp,_Rp> { const size_t value =)",
    "insertText": "_Xp((unsigned long long)(1) << _Rp)"
  },
  {
    "label": "value()",
    "kind": "Method",
    "detail": "Function (} ; template<unsigned long long _Xp> struct __log2_imp<unsigned long long,_Xp,0> { const size_t value = 0 ; } ; template<size_t _Rp> struct __log2_imp<unsigned long long,0,_Rp> { const size_t value = _Rp + 1 ; } ; # ifndef _LIBCPP_HAS_NO_INT128 template<__uint128_t _Xp,size_t _Rp> struct __log2_imp<__uint128_t,_Xp,_Rp> { const size_t)",
    "insertText": "value(_Xp >> 64) ? (64 + __log2_imp<unsigned long long, (_Xp >> 64), 63>::value)"
  },
  {
    "label": "sizeof()",
    "kind": "Method",
    "detail": "Function (} ; # endif template<class _UIntType,_UIntType _Xp> struct __log2 { const size_t value = __log2_imp<# ifndef _LIBCPP_HAS_NO_INT128 conditional<)",
    "insertText": "sizeof(_UIntType) <= sizeof(unsigned long long), unsigned long long, __uint128_t >::type, #else unsigned long long, #endif _Xp, sizeof(_UIntType)"
  }
]