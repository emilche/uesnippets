[
  {
    "label": "SyclDeviceInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SyclDeviceInfo"
  },
  {
    "label": "QueueInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "QueueInterface"
  },
  {
    "label": "members",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "members"
  },
  {
    "label": "SyclDeviceBase",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SyclDeviceBase"
  },
  {
    "label": "which",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "which"
  },
  {
    "label": "SyclDevice",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SyclDevice"
  },
  {
    "label": "lock()",
    "kind": "Method",
    "detail": "Function (std::lock_guard<std::mutex>)",
    "insertText": "lock(pmapper_mutex_)"
  },
  {
    "label": "lock()",
    "kind": "Method",
    "detail": "Function (std::lock_guard<std::mutex>)",
    "insertText": "lock(pmapper_mutex_)"
  },
  {
    "label": "lock()",
    "kind": "Method",
    "detail": "Function (std::lock_guard<std::mutex>)",
    "insertText": "lock(pmapper_mutex_)"
  },
  {
    "label": "lock()",
    "kind": "Method",
    "detail": "Function (std::lock_guard<std::mutex>)",
    "insertText": "lock(pmapper_mutex_)"
  },
  {
    "label": "lock()",
    "kind": "Method",
    "detail": "Function (std::lock_guard<std::mutex>)",
    "insertText": "lock(pmapper_mutex_)"
  },
  {
    "label": "lock()",
    "kind": "Method",
    "detail": "Function (std::lock_guard<std::mutex>)",
    "insertText": "lock(pmapper_mutex_)"
  },
  {
    "label": "lock()",
    "kind": "Method",
    "detail": "Function (std::lock_guard<std::mutex>)",
    "insertText": "lock(pmapper_mutex_)"
  },
  {
    "label": "s_ptr()",
    "kind": "Method",
    "detail": "Function (buffer_scalar_t>)",
    "insertText": "s_ptr(ptr, non_deleter)"
  },
  {
    "label": "s_ptr()",
    "kind": "Method",
    "detail": "Function (std::shared_ptr<buffer_scalar_t>)",
    "insertText": "s_ptr(ptr, non_deleter)"
  },
  {
    "label": "lock()",
    "kind": "Method",
    "detail": "Function (std::lock_guard<std::mutex>)",
    "insertText": "lock(pmapper_mutex_)"
  },
  {
    "label": "lock()",
    "kind": "Method",
    "detail": "Function (std::lock_guard<std::mutex>)",
    "insertText": "lock(pmapper_mutex_)"
  },
  {
    "label": "lock()",
    "kind": "Method",
    "detail": "Function (std::lock_guard<std::mutex>)",
    "insertText": "lock(pmapper_mutex_)"
  },
  {
    "label": "lock()",
    "kind": "Method",
    "detail": "Function (std::lock_guard<std::mutex>)",
    "insertText": "lock(pmapper_mutex_)"
  },
  {
    "label": "lock()",
    "kind": "Method",
    "detail": "Function (std::lock_guard<std::mutex>)",
    "insertText": "lock(pmapper_mutex_)"
  },
  {
    "label": "synchronize()",
    "kind": "Method",
    "detail": "Function (EIGEN_SYCL_ASYNC_EXECUTION)",
    "insertText": "synchronize()"
  },
  {
    "label": "getPowerOfTwo()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "getPowerOfTwo(m_device_info.max_work_group_size, false)"
  },
  {
    "label": "lock()",
    "kind": "Method",
    "detail": "Function (std::lock_guard<std::mutex>)",
    "insertText": "lock(event_mutex_)"
  },
  {
    "label": "eigen_assert()",
    "kind": "Method",
    "detail": "Function (else)",
    "insertText": "eigen_assert(false)"
  },
  {
    "label": "lock()",
    "kind": "Method",
    "detail": "Function (std::lock_guard<std::mutex>)",
    "insertText": "lock(event_mutex_)"
  },
  {
    "label": "EIGEN_UNUSED_VARIABLE()",
    "kind": "Method",
    "detail": "Function (else)",
    "insertText": "EIGEN_UNUSED_VARIABLE(e)"
  },
  {
    "label": "callback()",
    "kind": "Method",
    "detail": "Function (endif)",
    "insertText": "callback()"
  },
  {
    "label": "firstLevelCacheSize()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "firstLevelCacheSize()"
  }
]